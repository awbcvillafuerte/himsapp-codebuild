{"version":3,"sources":["Components/UI/ModalComponent/ModalComponent.tsx","Pages/Lookup/Components/Loader/index.tsx","Components/UI/TableComponent/ReactTable.tsx","Pages/Users/ActionConsts.ts","Pages/Users/UsersActions.ts","Pages/Users/Sections/UsersTable/RolesTableList.tsx","Pages/Users/Tabs/Account/TableComponent.tsx","Pages/Users/Tabs/Account/Accounts.const.ts","Pages/Users/Tabs/Account/AccountsTab.tsx","Pages/Users/UsersPage.tsx"],"names":["useStyles","makeStyles","theme","dialog","dialogAction","marginBottom","spacing","marginTop","justifyContent","dialogContentContainer","width","container","paddingRight","paddingLeft","closeButton","position","right","top","color","palette","grey","dialogTitle","fontSize","fontWeight","ModalComponent","props","classes","open","isModalOpen","onClose","aria-labelledby","maxWidth","className","justify","alignItems","direction","item","xs","disableTypography","id","title","aria-label","onClick","message","children","undefined","buttons","defaultProps","root","height","zIndex","bottom","left","textAlign","backgroundColor","outline","display","flexDirection","Loader","size","statusOption","value","label","Select","items","restProps","variant","style","renderValue","selected","find","map","i","key","FilterCell","filter","onFilter","filteringEnabled","column","name","padding","utils","MomentUtils","format","inputVariant","invalidDateMessage","onChange","date","toISOString","paddingTop","e","target","labelWidth","placeholder","SortingIcon","marginLeft","icon","faSortUp","faSortDown","SortLabel","onSort","hideSortIcon","textOverflow","overflow","faSort","groupIconContentCell","expanded","verticalAlign","faAngleUp","faAngleDown","ReactTable","rows","columns","disableSort","disableFilter","enableGrouping","groupColumnName","viewOnly","columnExtensions","sortingStateColumnExtensions","defaultSorting","onDeleteRow","enableSelection","enableSelectAll","onRowClick","totalCount","onPageChange","currentPage","pageSize","onSetPageSize","onCheckRow","onSelectGroup","loading","onSortingChange","enableIntegratedSorting","enableOpenGroupTotalChecked","React","selection","setSelection","pageSizes","sorting","setSorting","selectCell","row","onToggle","faMinusSquare","checkedIcon","faCheckSquare","checked","stopPropagation","onCurrentPageChange","onPageSizeChange","onSelectionChange","grouping","columnName","onFiltersChange","onFilterChange","messages","noData","cellComponent","faMinusCircle","showSortingControls","sortLabelComponent","highlightRow","selectByRowClick","showSelectAll","showSelectionColumn","contentComponent","isChecked","countChecked","countItems","data","iconComponent","groupNameChecked","ActionConsts","ResetReducer","SetReducer","UsersActions","payload","type","RolesTableList","APIGetRolesList","page","limit","query","setState","skip","getRoles","state","default_filter","order","then","res","console","log","Math","ceil","count","body","catch","handleTimeOutSearchTableRoles","typingTimeout","clearTimeout","setTimeout","onSearchTableRoles","handleOnFilterChange","_filter","w","like","options","handleSortChange","sort","toUpperCase","handleRowClick","redirect_to_role","redirect_data","handleAddRole","isModuleModalOpen","handleContinueRole","moduleItems","Number","moduleValue","redirect_to_addrole","_self","this","to","pathname","_id","from","Grid","md","ReactSearch","onSearch","faDownload","addFieldIcon","Link","linkStyleSelected","faPlus","defaultFilters","Button","button","margin","BasicSelect","menuItems","COLUMN_EXTENSIONS","wordWrapEnabled","disabled","renderSortable","sortingEnabled","TableComponent","useState","getRowId","userTableColumn","tableConst","cursor","marginRight","searchSection","tableTop","searchTabAction","AccountTabPage","useEffect","getUsers","offset","newState","saveSummary","setLoading","getUserList","where","error","updateTableState","setSummary","summary","setStatuses","statuses","prop","setTableState","tableStates","isLoading","isRowClicked","setIsRowClicked","userIdSelected","setUserIdSelected","setTypingTimeout","LoadingIndicator","GenerateReport","boxShadow","Object","entries","length","total_users","active_users","deactivated_users","array","newEntry","forEach","newRow","first_name","full_name","group","hasOwnProperty","roles","x","expiry_date","moment","last_login","status","textTransform","push","rowDataFixer","statusOptions","or","middle_name","last_name","a","values","join","page_tab_titles","UsersTabs","withStyles","indicator","Tabs","UsersTab","minWidth","textDecoration","Tab","gridContainerNoPadding","sectionTitle","subSectionTitle","fieldGroupTitle","dropzone","border","borderRadius","inputLabel","keyboardDatePicker","checkbox","radio","appBar","breakpoints","up","grow","flexGrow","minHeight","buttonTitle","buttonSubTitle","gridContainer","breadCrumbs","headerTitle","paddingBottom","linkPrevious","sideBar","borderRight","selectedpage","linkCurrent","main","gridItemLayout","avatar","sideNavHeader","listItemTextRoot","flex","listItemTextPrimarySelected","listItemTextPrimaryNotSelected","addACode","codeHeader","opacity","letterSpacing","textAlignLast","codeItems","codeListItems","UsersPage","selectedTab","setSelectedTab","getLastSegment","Typography","_event","tab","index","aria-controls","mapStateToProps","users","mapDispatchToProps","dispatch","Map","bindActionCreators"],"mappings":"wHAAA,0IAeMA,EAAYC,YAAW,SAACC,GAAD,MAAmB,CAC/CC,OAAQ,GACRC,aAAc,CACbC,aAAcH,EAAMI,QAAQ,GACtBC,UAAWL,EAAMI,QAAQ,GACzBE,eAAe,UAEtBC,uBAAwB,CACjBC,MAAO,QAEdC,UAAW,CACJC,aAAa,OACbC,YAAY,OACZH,MAAO,SAEdI,YAAa,CACNC,SAAU,WACVC,MAAOd,EAAMI,QAAQ,GACrBW,IAAKf,EAAMI,QAAQ,GACnBY,MAAOhB,EAAMiB,QAAQC,KAAK,MAEjCC,YAAa,CACNd,UAAWL,EAAMI,QAAQ,GAEzBgB,SAAU,OACVJ,MAAO,UACbK,WAAY,QAIDC,EAA6C,SAAAC,GACzD,IAAMC,EAAU1B,IAEhB,OACC,kBAAC,IAAD,CACC2B,KAAMF,EAAMG,YACZC,QAASJ,EAAMI,QACfC,kBAAgB,oBAChBC,SAAS,KACTC,UAAWN,EAAQvB,QAElB,6BACY,kBAAC,IAAD,CAAMQ,WAAS,EAACqB,UAAWN,EAAQf,UAAWsB,QAAQ,aAAaC,WAAW,aAAaC,UAAU,UACjG,kBAAC,IAAD,CAAMC,MAAI,EAACC,IAAE,GAC3B,kBAAC,IAAD,CAAaL,UAAWN,EAAQL,YAAaiB,mBAAmB,EAAOC,GAAG,qBACzE,kBAAC,IAAD,CAAKhB,WAAY,KAAME,EAAMe,OAC7B,kBAAC,IAAD,CAAYC,aAAW,QAAQT,UAAWN,EAAQZ,YAAa4B,QAASjB,EAAMI,SACrD,kBAAC,IAAD,SAI3B,kBAAC,IAAD,CAAMO,MAAI,EAACC,IAAE,EAACL,UAAWN,EAAQjB,wBAEhCgB,EAAMkB,QACL,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAMhC,WAAS,EAACL,QAAS,EAAG2B,QAAQ,gBAAgBC,WAAW,cAC9D,kBAAC,IAAD,CAAME,MAAI,EAACC,GAAI,IACbZ,EAAMkB,WAGS,KAGnBlB,EAAMmB,SAAWnB,EAAMmB,SAAW,KAEnC,kBAAC,IAAD,CAAeZ,UAAWN,EAAQtB,mBACbyC,IAAlBpB,EAAMqB,QACPrB,EAAMqB,QAAS,WAUvBtB,EAAeuB,aAAe,CAC7BnB,aAAa,I,iCC7Fd,2DAOM5B,EAAYC,YAAW,CAC5B+C,KAAM,CACCjC,SAAU,QACVL,MAAO,OACPuC,OAAQ,OACRC,OAAQ,KACRlC,MAAO,MACPmC,OAAQ,MACRlC,IAAK,MACLmC,KAAM,MACNC,UAAW,SACXC,gBAAiB,sBAErB3C,UAAU,CACNsC,OAAQ,OACRM,QAAS,EACTrB,WAAY,SACZ1B,eAAgB,SAChBgD,QAAS,OACTC,cAAe,YAIVC,EAAgC,WAEzC,IAAMhC,EAAU1B,IAChB,OACI,uBAAKgC,UAAWN,EAAQsB,MACpB,uBAAKhB,UAAWN,EAAQf,WACpB,gBAAC,IAAD,CAAkBgD,KAAM,SAMxCD,EAAOX,aAAe,I,wOC8DhBa,EAAe,CACjB,CACIC,MAAO,MACPC,MAAO,OAEX,CACID,MAAO,SACPC,MAAO,UAEX,CACID,MAAO,cACPC,MAAO,eAEX,CACID,MAAO,sBACPC,MAAO,wBAITC,EAAS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAUC,EAAqB,yBAC7C,OACI,gBAAC,IAAD,eACIC,QAAQ,WACRC,MAAO,CAAEzD,MAAO,QAChB0D,YAAa,SAACC,GACV,GAAgB,MAAZA,EAAkB,CAClB,IAAMR,EAAaG,EAAMM,KAAK,SAAClC,GAC3B,OAAOA,EAAKyB,QAAUQ,IAE1B,OAAIR,EACOA,EAAMC,MAEN,eAGf,MAAO,iBAEPG,GAEHD,EAAMO,IAAI,SAACnC,EAAWoC,GAAZ,OACP,gBAAC,IAAD,CAAqBC,IAAKD,EAAGX,MAAOzB,EAAKyB,OACpCzB,EAAK0B,WAOpBY,EAAa,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,OAAQC,EAAuD,EAAvDA,SAAUC,EAA6C,EAA7CA,iBAAkBnD,EAA2B,EAA3BA,QAASoD,EAAkB,EAAlBA,OAC/D,OAAID,EACoB,kBAAhBC,EAAOC,KAEH,gBAAC,IAAD,CAAsBZ,MAAO,CAAEa,QAAS,qBAAuBtD,QAASA,IAGrD,eAAhBoD,EAAOC,KAEV,gBAAC,IAAD,CAAsBZ,MAAO,CAAEa,QAAS,qBAAuBtD,QAASA,GACpE,gBAAC,IAAD,CAAyBuD,MAAOC,KAC5B,gBAAC,IAAD,CACIhB,QAAQ,SACRiB,OAAO,gBACPC,aAAa,WACbvB,MAAOc,EAASA,EAAOd,MAAQ,GAC/BwB,mBAAmB,GACnBC,SAAU,SAAAC,GAAUX,EAASW,EAAO,CAAE1B,MAAO0B,EAAKC,eAAkB,WAK7D,WAAhBV,EAAOC,KAEV,gBAAC,IAAD,CAAsBrD,QAASA,EAASyC,MAAO,CAAEsB,WAAY,QACzD,gBAAC1B,EAAD,CACIuB,SAAU,SAAAI,GAAC,OAAId,EAASc,EAAEC,OAAO9B,MAAQ,CAAEA,MAAO6B,EAAEC,OAAO9B,OAAU,OACrEkB,KAAM,SACNf,MAAOJ,EACPrB,GAAI,SACJsB,MAAOc,EAASA,EAAOd,MAAQ,MAMvC,gBAAC,IAAD,CAAsBM,MAAO,CAAEa,QAAS,qBAAuBtD,QAASA,GACpE,gBAAC,IAAD,CACIA,QAASA,EACTyC,MAAO,CAAEzD,MAAO,QAChBmD,MAAOc,EAASA,EAAOd,MAAQ,GAC/B+B,WAAY,EACZN,SAAU,SAAAI,GAAC,OAAId,EAASc,EAAEC,OAAO9B,MAAQ,CAAEA,MAAO6B,EAAEC,OAAO9B,OAAU,OACrEgC,YAAY,MAMzB,MAGLC,EAAc,SAAC,GAAD,MACF,QADE,EAAG3D,UAEf,gBAAC,IAAD,CAAiBgC,MAAO,CAAE4B,WAAY,QAAUC,KAAMC,MAElD,gBAAC,IAAD,CAAiB9B,MAAO,CAAE4B,WAAY,QAAUC,KAAME,OAG5DC,EAAY,SAAC,GAAkD,IAAhDrB,EAA+C,EAA/CA,OAAQsB,EAAuC,EAAvCA,OAAQxD,EAA+B,EAA/BA,SAAUT,EAAqB,EAArBA,UAC3C,MAAoB,kBAAhB2C,EAAOC,KACA,KAGH,gBAAC,IAAD,CAA2BsB,cAAc,EAAM3D,QAAS0D,EAAQjC,MAAO,CAAEmC,aAAc,WAAYC,SAAU,WACxG3D,EACAT,EACG,gBAAC2D,EAAD,CAAa3D,UAAWA,IAEpB,gBAAC,IAAD,CAAiBgC,MAAO,CAAE4B,WAAY,QAAUC,KAAMQ,QAQxEC,EAAuB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAC5B,OACI,gCACI,uBAAKvC,MAAO,CAAEa,QAAS,aAAcxB,QAAS,aAAcmD,cAAe,WACvE,gBAAC,IAAD,CACIX,KAAMU,EAAWE,IAAYC,IAC7BlD,KAAM,KACNzC,MAAO,2BASd4F,EAAyC,SAACrF,GAA0C,IAEzFsF,EA2BAtF,EA3BAsF,KACAC,EA0BAvF,EA1BAuF,QACAC,EAyBAxF,EAzBAwF,YACAC,EAwBAzF,EAxBAyF,cACAC,EAuBA1F,EAvBA0F,eACAC,EAsBA3F,EAtBA2F,gBACAC,EAqBA5F,EArBA4F,SACA1E,EAoBAlB,EApBAkB,QACA2E,EAmBA7F,EAnBA6F,iBACAC,EAkBA9F,EAlBA8F,6BACAC,EAiBA/F,EAjBA+F,eACAC,EAgBAhG,EAhBAgG,YACAC,EAeAjG,EAfAiG,gBACAC,EAcAlG,EAdAkG,gBACAC,EAaAnG,EAbAmG,WACAC,EAYApG,EAZAoG,WACAC,EAWArG,EAXAqG,aACAC,EAUAtG,EAVAsG,YACAC,EASAvG,EATAuG,SACAC,EAQAxG,EARAwG,cACAC,EAOAzG,EAPAyG,WACAC,EAMA1G,EANA0G,cAEAC,EAIA3G,EAJA2G,QACAC,EAGA5G,EAHA4G,gBACAC,EAEA7G,EAFA6G,wBACAC,EACA9G,EADA8G,4BA5BwF,EA+B1DC,WAAoB,IA/BsC,mBA+BrFC,EA/BqF,KA+B1EC,EA/B0E,OAgCxEF,WAAe,CAAC,EAAG,GAAI,KAApCG,EAhCqF,sBAiC9DH,WAAe,IAjC+C,mBAiCrFI,EAjCqF,KAiC5EC,EAjC4E,KAmDtFC,EAAa,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,SACvB,OACI,gBAAC,IAAD,KACI,gBAAC,IAAD,CACIhD,KAAM,gBAAC,IAAD,CAAiBA,KAAMiD,MAC7BC,YAAa,gBAAC,IAAD,CAAiBlD,KAAMmD,MACpCC,QAASL,EAAIK,QACb1G,QAAS,SAACgD,GACNA,EAAE2D,kBACFL,IACAd,GAAcA,EAAWa,QA4F7C,OACI,uBAAK5E,MAAO,CAAEa,QAAS,WACnB,gBAAC,IAAD,KACI,gBAAC,IAAD,CACI+B,KAAMA,EACNC,QAASA,GAET,gBAAC,IAAD,CACIe,YAAaA,EACbuB,oBAAqBxB,EACrBE,SAAUA,EACVuB,iBAAkBtB,IAEtB,gBAAC,IAAD,CACIJ,WAAYA,KAEdZ,GAAeoB,EACb,gBAAC,IAAD,CACIb,eAAgBA,EAChBF,iBAAkBC,EAClBqB,QAASA,EACTP,gBAzIC,SAAC3C,GACtB2C,GAAmBA,EAAgB3C,GACnCmD,EAAWnD,MAyIMuB,EAID,KAHA,gBAAC,IAAD,CACIO,eAAgB,KAGtBH,EAGG,KAHQ,gBAAC,IAAD,CACToB,UAAWA,EACXe,kBA9IU,SAACT,GACvBnB,EACKF,GACDE,EAAWmB,EAAI,IAGnBL,EAAaK,MA0IJ5B,GAAkBC,EAAkB,gBAAC,IAAD,CAAeqC,SAAU,CAAC,CAAEC,WAAYtC,MAAyB,KACpGF,EAGO,KAFL,gBAAC,IAAD,CACIyC,gBAAiBlI,EAAMmI,iBAG9BtB,EAA0B,gBAAC,IAAD,MAAwB,KAClDnB,EAAiB,gBAAC,IAAD,MAAyB,KAC3C,gBAAC,IAAD,CACIG,iBAAkBA,EAClBuC,SAAU,CAAEC,OAAQnH,GACpBoH,cArEF,SAAC,GAAiC,IAA/BlG,EAA8B,EAA9BA,MAAOkF,EAAuB,EAAvBA,IACxB,MAAoB,kBAD2B,EAAlBjE,OAClBC,KAEH,gBAAC,IAAD,CAAsBZ,MAAO,CAAEa,QAAS,oBAAqB3B,UAAW,UACpE,wBACIX,QAAS,WACL+E,GAAeA,EAAYsB,KAG/B,gBAAC,IAAD,CACI/C,KAAMgE,QAQlB,gBAAC,IAAD,KACKnG,MAoDD,gBAAC,IAAD,CACIoG,qBAAsBhD,EACtBiD,mBAAoB/D,IAGxB,gBAAC,IAAD,CACIwC,UAAWxB,EAAiB,CAAC,GAAI,GAAI,IAAMwB,IAE7CtB,EAOO,KANL,gBAAC,IAAD,CACI8C,cAAY,EACZC,kBAAgB,EAChBC,gBAAe1C,QAAyB9E,EACxCkH,cAAuCjB,EACvCwB,oBAAqB5C,IAG5BP,EACG,gBAAC,IAAD,CACIoD,iBApJC,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,IAEpByB,GAAY,EACZC,EAAe,EACfC,EAAa,EAWjB,OAVA3D,EAAKxC,IAAI,SAAAoG,GACDA,EAAK5F,OAASgE,EAAIlF,QAClB6G,IACIC,EAAKvB,UACLoB,GAAY,EACZC,QAKPpD,EAsBMA,GAAYkB,EAEf,gCACI,uBAAKpE,MAAO,CAAEa,QAAS,YAAaxB,QAAS,aAAcmD,cAAe,WACtE,4BAAOoC,EAAIlF,QAEf,uBAAKM,MAAO,CAAEa,QAAS,aAAcxB,QAAS,aAAcmD,cAAe,WACvE,4BAAO8D,EAAP,IAAsBC,KAM9B,uBAAKvG,MAAO,CAAEa,QAAS,YAAaxB,QAAS,aAAcmD,cAAe,WACtE,4BAAOoC,EAAIlF,QAlCf,gCACI,uBAAKM,MAAO,CAAEa,QAAS,eAAgBxB,QAAS,aAAcmD,cAAe,WACzE,gBAAC,IAAD,CACIX,KAAM,gBAAC,IAAD,CAAiBA,KAAMiD,MAC7BC,YAAa,gBAAC,IAAD,CAAiBlD,KAAMmD,MACpCC,QAASoB,EACT9H,QAAS,SAAAgD,GACLA,EAAE2D,kBACFlB,GAAiBA,EAAcY,EAAIlF,WAI/C,uBAAKM,MAAO,CAAEa,QAAS,YAAaxB,QAAS,aAAcmD,cAAe,WACtE,4BAAOoC,EAAIlF,QAEf,uBAAKM,MAAO,CAAEa,QAAS,aAAcxB,QAAS,aAAcmD,cAAe,WACvE,4BAAO8D,EAAP,IAAsBC,MAoHlBE,cAAenE,IACC,KACtBS,EAAgE,KAAhD,gBAAC,IAAD,CAAgB6C,cAAerF,KAGjD0D,GACA,gBAAC,IAAD,SAOpBtB,EAAW/D,aA3Y4B,CACnCgE,KAAM,GACNC,QAAS,GACTsB,yBAAyB,EACzBrB,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBO,iBAAiB,EACjBC,iBAAiB,EACjBY,6BAA6B,EAC7BnB,gBAAiB,GACjBC,UAAU,EACVC,iBAAkB,GAClB3E,QAAS,GACT4E,6BAA8B,GAC9BC,eAAgB,GAChBK,WAAY,EACZE,YAAa,EACbC,SAAU,EACV6C,iBAAkB,GAClBzC,SAAS,I,0GCrGA0C,EACL,CACNC,aAAc,qBACdC,WAAY,oBCSDC,EACP,SAACC,GAAD,MAAkB,CACtBA,UACAC,KAAML,EAAmBE,a,4LC2BdI,EAAb,YACI,WAAY3J,GAAQ,IAAD,uBACf,4CAAMA,KAkFV4J,gBAAkB,SAACC,EAAcC,EAAeC,GAC5C,EAAKC,SAAS,CACVrD,SAAS,IAGb,IAAIsD,EAAOJ,EAAOC,EAElB,EAAKE,SAAS,CACV1D,YAAauD,GACd,WACC,EAAKG,SAAS,CACVC,KAAMA,MAKd,IAAI/G,EAAS,CACT4G,MAAOA,EACPG,KAAMA,GAGVC,YAAShH,EAAQ,EAAKiH,MAAMC,eAAgB,EAAKD,MAAME,MAAON,GAAOO,KAAK,SAAAC,GACtEC,QAAQC,IAAKC,KAAKC,KAAKJ,EAAIK,MAAQd,GAAS,GAC5C,EAAKE,SAAS,CACV1E,KAAMiF,EAAIM,KACVlE,SAAS,EACTP,WAAYmE,EAAIK,MAChBtE,YAAa,EAAK6D,MAAM7D,YAAeoE,KAAKC,KAAKJ,EAAIK,MAAQd,GAAS,EAAMY,KAAKC,KAAKJ,EAAIK,MAAQd,GAAS,EAAKD,EAChHC,MAAOA,MAEZgB,MAAM,WACL,EAAKd,SAAS,CACV1E,KAAM,GACNqB,SAAS,EACTP,WAAY,OArHL,EA2HnB2E,8BAAgC,SAAC7B,GACzB,EAAKiB,MAAMa,eACXC,aAAa,EAAKd,MAAMa,eAE5B,EAAKhB,SAAS,CACV1D,YAAa,GACd,WACC,EAAK0D,SAAS,CACVD,MAAOb,EACP8B,cAAeE,WAAW,WACtB,EAAKlB,SAAS,CACVrD,SAAS,IAEb,EAAKiD,gBAAgB,EAAKO,MAAM7D,YAAa,EAAK6D,MAAML,MAAO,EAAKK,MAAMJ,QAC3E,UAzII,EA8InBoB,mBAAqB,WAEb,EAAKhB,MAAMa,eACXC,aAAa,EAAKd,MAAMa,eAG5B,EAAKhB,SAAS,CACVrD,SAAS,EACTL,YAAa,GACd,WACC,EAAKsD,gBAAgB,EAAG,EAAKO,MAAML,MAAO,EAAKK,MAAMJ,UAxJ1C,EA8JnBqB,qBAAuB,SAAClI,GAEpB,IAAImI,EAAe,GAEf,EAAKlB,MAAMa,eACXC,aAAa,EAAKd,MAAMa,eAG5B9H,EAAOJ,IAAI,SAAAwI,GAAC,MAES,WAAjBA,EAAErD,WACc,QAAZqD,EAAElJ,MACEiJ,EAAQC,EAAErD,YAAV,UAA2BqD,EAAElJ,OAAU,GACzCiJ,EAAQC,EAAErD,YAAc,CACtBsD,KAAK,GAAD,OAAKD,EAAElJ,MAAP,MACJoJ,QAAS,OAIrB,EAAKxB,SAAS,CACVI,eAAgBiB,EAChB/E,YAAa,EACb0E,cAAeE,WAAW,WACtB,EAAKlB,SAAS,CACVrD,SAAS,IAEb,EAAKiD,gBAAgB,EAAKO,MAAM7D,YAAa,EAAK6D,MAAML,MAAO,EAAKK,MAAMJ,QAC3E,SAzLQ,EA6LnB0B,iBAAmB,SAACC,GAChB,EAAK1B,SAAS,CACVK,MAAM,GAAD,OAAKqB,EAAK,GAAGzD,WAAb,YAA2ByD,EAAK,GAAGhL,UAAUiL,eAClDhF,SAAS,GAET,WACI,EAAKiD,gBAAgB,EAAKO,MAAM7D,YAAa,EAAK6D,MAAML,MAAO,EAAKK,MAAMJ,UAnMnE,EAwMnB6B,eAAiB,SAACtE,GACd,IAAI4B,EAAO,EAAKiB,MAAM7E,KACtB,EAAK0E,SAAS,CACV6B,kBAAkB,EAClBC,cAAe5C,EAAK5B,MA5MT,EAgNnByE,cAAgB,WACZvB,QAAQC,IAAI,iBACZ,EAAKT,SAAS,CACVgC,mBAAmB,KAnNR,EAuNnBC,mBAAqB,WACjB,IAAI/C,EAAO,EAAKiB,MAAM+B,YAAYC,OAAO,EAAKhC,MAAMiC,cAAc9I,KAClEkH,QAAQC,IAAIvB,EAAM,WAClB,EAAKc,SAAS,CACVqC,qBAAqB,EACrBP,cAAe5C,KA5NJ,OAmDf,EAAKiB,MAAQ,CACTxD,SAAS,EACTpB,QAzBY,CACZ,CACIjC,KAAM,OACNvC,MAAO,aAEX,CACIuC,KAAM,UACNvC,MAAO,WAEX,CACIuC,KAAM,mBACNvC,MAAO,qBAEX,CACIuC,KAAM,SACNvC,MAAO,UAEX,CACIuC,KAAM,SACNvC,MAAO,WAOXuE,KAAM,GACNuG,kBAAkB,EAClBQ,qBAAqB,EACrBP,cAAe,GACfE,mBAAmB,EACnBE,YAzDgB,CAChB,CACI5I,KAAM,kBACNlB,MAAO,GAEX,CACIkB,KAAM,aACNlB,MAAO,GAEX,CACIkB,KAAM,eACNlB,MAAO,GAEX,CACIkB,KAAM,gBACNlB,MAAO,GAEX,CACIkB,KAAM,SACNlB,MAAO,IAuCXgK,YAAa,EACbhG,WAAY,EACZE,YAAa,EACb0E,cAAe,EACflB,MAAO,GACPO,MAAO,GACPD,eAAgB,GAChBL,MAAO,GACPE,KAAM,GApEK,EADvB,iFA2EyB,IAAD,OACZqC,EAAQC,KACZA,KAAKvC,SAAS,CACVrD,SAAS,GACV,WACC2F,EAAM1C,gBAAgB,EAAKO,MAAM7D,YAAa,EAAK6D,MAAML,MAAO,EAAKK,MAAMJ,WAhFvF,+BAiO2B,IAAD,OAElB,OAAIwC,KAAKpC,MAAM0B,iBAEP,gCACI,gBAAC,IAAD,CACIW,GAAI,CACAC,SAAU,uBAAyBF,KAAKpC,MAAM2B,cAAcY,QAM5EH,KAAKpC,MAAMkC,oBAEP,gBAAC,IAAD,CACIG,GAAI,CACAC,SAAU,0BACVtC,MAAO,CAAEwC,KAAMJ,KAAKpC,MAAM2B,kBAQtC,2BAEKS,KAAKpC,MAAMxD,QAAU,gBAAC1E,EAAA,EAAD,MAAa,KACnC,gBAAC2K,EAAA,EAAD,CAAM1N,WAAS,EAACuB,WAAY,SAAUiC,MAAO,CAAEd,UAAW,UAAY/C,QAAS,GAC3E,gBAAC+N,EAAA,EAAD,CAAMjM,MAAI,EAACC,GAAI,EAAGiM,GAAI,GAClB,gBAACC,EAAA,EAAD,CACI1I,YAAa,gBACb2I,SAAUR,KAAKpB,mBACftH,SAAU0I,KAAKxB,iCAGvB,gBAAC6B,EAAA,EAAD,CAAMjM,MAAI,EAACC,GAAI,EAAGiM,GAAI,GAClB,gBAACD,EAAA,EAAD,CAAM1N,WAAS,GACX,gBAAC0N,EAAA,EAAD,CAAMjM,MAAI,EAACC,GAAI,GACX,gBAAC,IAAD,CAAiB2D,KAAMyI,IAAYzM,UAAWgM,KAAKvM,MAAMC,QAAQgN,eACjE,gBAACC,EAAA,EAAD,CAAM3M,UAAWgM,KAAKvM,MAAMC,QAAQkN,mBAApC,oBAEJ,gBAACP,EAAA,EAAD,CAAMjM,MAAI,EAACC,GAAI,GACX,gBAAC,IAAD,CAAiB2D,KAAM6I,IAAQ7M,UAAWgM,KAAKvM,MAAMC,QAAQgN,eAC7D,gBAACC,EAAA,EAAD,CAAM3M,UAAWgM,KAAKvM,MAAMC,QAAQkN,kBAAmBlM,QAAS,kBAAM,EAAK8K,kBAA3E,gBAKhB,gBAAC1G,EAAA,EAAD,CACIC,KAAMiH,KAAKpC,MAAM7E,KACjBC,QAASgH,KAAKpC,MAAM5E,QACpBrE,QAAS,uCACT0E,UAAU,EACVK,iBAAiB,EACjBE,WAAYoG,KAAKX,eACjBxF,WAAYmG,KAAKpC,MAAM/D,WACvBE,YAAaiG,KAAKpC,MAAM7D,YACxBC,SAAUgG,KAAKpC,MAAML,MACrBuD,eAAgBd,KAAKpC,MAAMC,eAC3BjC,eAAgBoE,KAAKnB,qBACrBxE,gBAAiB2F,KAAKd,iBACtBjF,cAAe,SAACtE,GACZ,EAAK0H,gBAAgB,EAAKO,MAAM7D,YAAapE,EAAM,EAAKiI,MAAMJ,QAElE1D,aAAc,SAACwD,GACX,EAAKD,gBAAgBC,EAAM,EAAKM,MAAML,MAAO,EAAKK,MAAMJ,UAIhE,gBAAChK,EAAA,EAAD,CACII,YAAaoM,KAAKpC,MAAM6B,kBACxB5L,QAAS,WACL,EAAK4J,SAAS,CACVgC,mBAAmB,KAG3B9K,QAAS,gDACTH,MAAO,kBACPM,QACI,gBAACuL,EAAA,EAAD,CAAM1N,WAAS,EAACsB,QAAQ,SAASC,WAAW,SAASiC,MAAO,CAAEd,UAAW,WACrE,gBAACgL,EAAA,EAAD,CAAMjM,MAAI,EAACC,GAAI,GACX,gBAAC0M,EAAA,EAAD,CACIrM,QAAS,WACL,EAAK+I,SAAS,CACVgC,mBAAmB,KAG3BvJ,QAAS,WACThD,MAAO,YACPc,UAAWgM,KAAKvM,MAAMC,QAAQsN,QARlC,WAWJ,gBAACX,EAAA,EAAD,CAAMjM,MAAI,EAACC,GAAI,GACX,gBAAC0M,EAAA,EAAD,CAAQ/M,UAAWgM,KAAKvM,MAAMC,QAAQsN,OAAQ9K,QAAS,YAAahD,MAAO,UAAWwB,QAAS,kBAAM,EAAKgL,uBAA1G,eAKZ,uBAAKvJ,MAAO,CAAEzD,MAAO,MAAOuO,OAAQ,SAChC,gBAACC,EAAA,EAAD,CACIC,UAAWnB,KAAKpC,MAAM+B,YACtBjN,MAAO,OACPmD,MAAOmK,KAAKpC,MAAMiC,YAClBvI,SAAU,SAACI,GACP,EAAK+F,SAAS,CACVoC,YAAanI,EAAEC,OAAO9B,kBA5U1D,GAAoC2E,a,iGCI9B4G,EAAoB,CACxB,CACE1F,WAAY,WACZ2F,iBAAiB,GAEnB,CACE3F,WAAY,aACZ2F,iBAAiB,GAEnB,CACE3F,WAAY,QACZ2F,iBAAiB,GAEnB,CACE3F,WAAY,QACZ2F,iBAAiB,IAIfzL,EAAe,CACnB,CACEC,MAAO,MACPC,MAAO,OAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,cACPC,MAAO,eAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,sBACPC,MAAO,wBAILC,EAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAUC,EAAsB,yBAChD,OACI,kBAAC,IAAD,eACIC,QAAQ,WACRC,MAAO,CAAEzD,MAAO,QAChB0D,YAAa,SAACC,GACV,GAAgB,MAAZA,EAAkB,CAClB,IAAMR,EAAaG,EAAMM,KAAK,SAAClC,GAC3B,OAAOA,EAAKyB,QAAUQ,IAE1B,OAAIR,EACOA,EAAMC,MAEN,eAGf,MAAO,iBAEPG,GAEHD,EAAMO,IAAI,SAACnC,EAAWoC,GAAZ,OACP,kBAAC,IAAD,CAAqBC,IAAKD,EAAGX,MAAOzB,EAAKyB,OACpCzB,EAAK0B,WAOlBY,EAAa,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,OAAQC,EAAuD,EAAvDA,SAAUC,EAA6C,EAA7CA,iBAAkBnD,EAA2B,EAA3BA,QAASoD,EAAkB,EAAlBA,OAUjE,OAAID,EACoB,eAAhBC,EAAOC,MAAyC,gBAAhBD,EAAOC,KAErC,kBAAC,IAAD,CAAsBZ,MAAO,CAAEa,QAAS,qBAAuBtD,QAASA,GACtE,kBAAC,IAAD,CAAyBuD,MAAOC,KAC9B,kBAAC,IAAD,CACIoK,UAAQ,EACRpL,QAAQ,SACRiB,OAAO,gBACPC,aAAa,WAEbvB,MAAOc,EAASA,EAAOd,MAAQ,GAC/BwB,mBAAmB,GACnBC,SAAU,SAAAC,GAAS0G,QAAQC,IAAI3G,GAAOX,EAASW,EAAO,CAAE1B,MAAO0B,EAAKC,eAAkB,WAKzE,WAAhBV,EAAOC,KAEd,kBAAC,IAAD,CAAsBrD,QAASA,EAASyC,MAAO,CAACsB,WAAY,QAC1D,kBAAC,EAAD,CACIH,SAAU,SAAAI,GAAC,OAAId,EAASc,EAAEC,OAAO9B,MAAQ,CAAEA,MAAO6B,EAAEC,OAAO9B,OAAU,OACrEkB,KAAM,SACNf,MAAOJ,EACPrB,GAAI,SACJsB,MAAOc,EAASA,EAAOd,MAAQ,MAMjC,kBAAC,IAAD,CAAsBM,MAAO,CAAEa,QAAS,qBAAuBtD,QAASA,GACpE,kBAAC,IAAD,CACIA,QAASA,EACTyC,MAAO,CAAEzD,MAAO,QAChBmD,MAAOc,EAASA,EAAOd,MAAQ,GAC/B+B,WAAY,EACZN,SAAU,SAAAI,GAAC,OAAId,EAASc,EAAEC,OAAO9B,MAAQ,CAAEA,MAAO6B,EAAEC,OAAO9B,OAAU,OACrEgC,YAAY,MAMzB,MAGHC,EAAc,SAAC,GAAD,MACJ,QADI,EAAG3D,UAEnB,kBAAC,IAAD,CAAiBgC,MAAO,CAAE4B,WAAY,QAAUC,KAAMC,MAEtD,kBAAC,IAAD,CAAiB9B,MAAO,CAAE4B,WAAY,QAAUC,KAAME,OAGpDqJ,EAAiB,SAAC,GAAkD,IAAhDzK,EAA+C,EAA/CA,OAAQsB,EAAuC,EAAvCA,OAAQxD,EAA+B,EAA/BA,SAAUT,EAAqB,EAArBA,UAClD,YAC8BU,IAA1BiC,EAAO0K,gBACmB,OAA1B1K,EAAO0K,iBACmB,IAA1B1K,EAAO0K,eAEA,8BAAO1K,EAAOtC,OAGnB,kBAAC,IAAD,CAA2B6D,cAAc,EAAM3D,QAAS0D,GACrDxD,EACAT,EACC,kBAAC,EAAD,CAAaA,UAAWA,IAExB,kBAAC,IAAD,CAAiBgC,MAAO,CAAE4B,WAAY,QAAUC,KAAMQ,QAOrDiJ,EAAmC,SAAChO,GAAgC,IAEzEsF,EAYAtF,EAZAsF,KACAC,EAWAvF,EAXAuF,QACAa,EAUApG,EAVAoG,WACAE,EASAtG,EATAsG,YACAC,EAQAvG,EARAuG,SACAW,EAOAlH,EAPAkH,UAEAiB,EAKAnI,EALAmI,eACAN,EAIA7H,EAJA6H,oBACAC,EAGA9H,EAHA8H,iBACAlB,EAEA5G,EAFA4G,gBACAT,EACAnG,EADAmG,WAbwE,EAkB1CY,IAAMkH,SAAS,IAlB2B,mBAkBrEjH,EAlBqE,KAkB1DC,EAlB0D,KAyB5E,OACI,oCACI,kBAAC,IAAD,CACEiH,SAZO,SAAA5G,GAAG,OAAIA,EAAIoF,KAalBpH,KAAMA,EACNC,QAASA,GAET,kBAAC,IAAD,CACE2C,gBAAiBC,IAGnB,kBAAC,IAAD,CACEnB,UAAWA,EACXe,kBAlBY,SAAC9D,GACvBgD,EAAahD,GACbkC,EAAWlC,MAmBH,kBAAC,IAAD,CAAc2C,gBAAiBA,IAE/B,kBAAC,IAAD,CACIN,YAAeA,EACfC,SAAYA,EAEZsB,oBAAuBA,EACvBC,iBAAoBA,IAGxB,kBAAC,IAAD,CAAc1B,WAAcA,IAE5B,kBAAC,IAAD,CACEP,iBAAkB8H,IACpB,kBAAC,IAAD,CAAgBnF,qBAAmB,EAACC,mBAAoBqF,IACxD,kBAAC,IAAD,CAAgBxF,cAAerF,IAE/B,kBAAC,IAAD,CACE0F,kBAAgB,EAChBD,cAAY,EACZG,qBAAqB,IAGvB,kBAAC,IAAD,CAAa3B,UAAaA,OC3Q3BiH,EAAkB,CAC3B,CAAE7K,KAAM,WAAYvC,MAAO,YAC3B,CAAEuC,KAAM,aAAcvC,MAAO,QAC7B,CAAEuC,KAAM,QAASvC,MAAO,cACxB,CAAEuC,KAAM,QAASvC,MAAO,eACxB,CAAEuC,KAAM,aAAcvC,MAAO,mBAC7B,CAAEuC,KAAM,cAAevC,MAAO,eAC9B,CAAEuC,KAAM,SAAUvC,MAAO,WAGhBqN,EAAa,CAAC,GAAI,GAAI,I,umBCQnC,IAAM7P,GAAYC,YAAW,CACzByO,aAAc,CACVxN,MAAO,UACP4O,OAAQ,UACRxO,SAAU,OACVyO,YAAa,MACbhK,WAAY,QAEhBiK,cAAe,CACX3P,aAAc,QAElByD,MAAO,CACH5C,MAAO,UACPI,SAAU,IAEduC,MAAO,CACH3C,MAAO,UACPI,SAAU,GACVC,WAAY,IACZwO,YAAa,QAEjBE,SAAU,CACNjL,QAAS,QAEbkL,gBAAiB,CACb1M,QAAS,OACThD,eAAgB,YAEpBoO,kBAAmB,CACf,UAAW,CACTrN,WAAY,aAKT4O,GAA2B,WACpC,IAAMzO,EAAU1B,KAChBwI,IAAM4H,UAAU,WACZC,EAAS,CAAErI,SAAU,GAAIsI,OAAQ,IAAK,IACvC,IAGH,IAAMD,EAAW,SAACE,EAAgBC,GAC9BC,GAAW,GACXC,YACIH,EAASvI,SACTuI,EAASD,OACTC,EAASI,MACTJ,EAASzE,MACTyE,EAAS/E,OAAOO,KAAK,SAACpB,GAElB,GADAsB,QAAQC,IAAIvB,GACPA,EAAKiG,MAcH,CACH,IAAMhF,EAAK,MACJ2E,EADI,CAEPxJ,KAAM,GACNc,WAAY,IAGhBgJ,EAAiBjF,OArBJ,CACb,IAAMA,EAAK,MACJ2E,EADI,CAEPxJ,KAAM4D,EAAK2B,KACXzE,WAAY8C,EAAK0B,QAGjBmE,IAA+B,IAAhBA,IACfM,EAAWnG,EAAKoG,SAChBC,EAAYrG,EAAKsG,WAGrBJ,EAAiBjF,GAYrB6E,GAAW,KACZlE,MAAM,WACLN,QAAQC,IAAI,SACZuE,GAAW,GACX,IAAM7E,EAAK,MACJ2E,EADI,CAEPxJ,KAAM,GACNc,WAAY,IAGhBgJ,EAAiBjF,MA2LvBiF,EAAmB,SAACK,GACtBC,EAAc,GAAD,GACNC,EADM,GAENF,KAhP4C,EA6RlB1I,IAAMkH,SAAc,CACrD3I,KAAM,GACNgB,YAAa,EACbF,WAAY,EACZG,SAAU,GACVsI,OAAQ,EACRxE,MAAO,GACP6E,MAAO,GACPnF,MAAO,KArS4C,mBA6RhD4F,EA7RgD,KA6RnCD,EA7RmC,OAySvB3I,IAAMkH,UAAkB,GAzSD,mBAyShD2B,EAzSgD,KAySrCZ,EAzSqC,OA0SfjI,IAAMkH,UAAkB,GA1ST,mBA0ShD4B,EA1SgD,KA0SlCC,EA1SkC,OA2SX/I,IAAMkH,SAAiB,IA3SZ,mBA2ShD8B,EA3SgD,KA2ShCC,EA3SgC,OA4SbjJ,IAAMkH,SAAc,GA5SP,mBA4ShDjD,EA5SgD,KA4SjCiF,EA5SiC,OA8SzBlJ,IAAMkH,WA9SmB,mBA8ShDqB,EA9SgD,KA8SvCD,EA9SuC,OA+SvBtI,IAAMkH,WA/SiB,mBA+ShDuB,EA/SgD,KA+StCD,EA/SsC,KAiTvD,OAAqB,IAAjBM,EACO,kBAAC,IAAD,CAAUrD,GAAE,kBAAauD,KAIhC,oCACKH,GAAa,kBAAC,KAAGM,iBAAJ,MACd,kBAACtD,EAAA,EAAD,CACI1N,WAAS,EAAC0B,GAAI,GACd/B,QAAS,EACT6B,UAAU,MACVF,QAAQ,SACRC,WAAW,SACXF,UAAWN,EAAQsO,eACnB,kBAAC3B,EAAA,EAAD,CAAMjM,MAAI,EAACC,GAAI,GAYX,kBAACkM,EAAA,EAAD,CACIjJ,SArNQ,SAACzB,GACrB4I,GACAC,aAAaD,GAGjBiF,EAAiB/E,WAAW,WACxB,IAAMf,EAAQ,CACV7D,YAAa,EACbC,SAAUoJ,EAAYpJ,SACtBsI,OAAQ,EACRxE,MAAOsF,EAAYtF,MACnB6E,MAAOS,EAAYT,MACnBnF,MAAO3H,GAGXwM,EAASzE,IAEV,OAqMa/F,YAAa,cACb2I,SAnEK,SAAC9I,GAClB+G,GACAC,aAAaD,GAEjB,IAAMb,EAAQ,CACV7D,YAAa,EACbC,SAAUoJ,EAAYpJ,SACtBsI,OAAQ,EACRxE,MAAOsF,EAAYtF,MACnB6E,MAAOS,EAAYT,MACnBnF,MAAO9F,GAGX2K,EAASzE,OAwDD,kBAACyC,EAAA,EAAD,CACIhM,GAAI,EACJiM,GAAI,GACJ,yBAAKtM,UAAWN,EAAQwO,iBACpB,kBAAC,KAAG0B,eAAJ,MACA,kBAAC,IAAD,CAAiB5L,KAAM6I,IAAQ7M,UAAWN,EAAQgN,eAClD,kBAAC,KAAD,CAAST,GAAG,yBACR,kBAACU,EAAA,EAAD,CAAM3M,UAAWN,EAAQkN,mBAAzB,gBAKhB,yBAAKzK,MAAO,CAAE0N,UAAW,0BACrB,kBAACxD,EAAA,EAAD,CAAM1N,WAAS,EAACqB,UAAWN,EAAQuO,UAE3Bc,GAAWe,OAAOC,QAAQhB,GAASiB,OAAS,EACxC,oCACI,kBAAC3D,EAAA,EAAD,CACIlK,MAAO,CAAEd,UAAW,UACpBjB,MAAI,EAACC,GAAI,GACT,0BAAML,UAAWN,EAAQmC,OAAQkN,EAAQkB,aACzC,0BAAMjQ,UAAWN,EAAQoC,OAAzB,UAQJ,kBAACuK,EAAA,EAAD,CACIlK,MAAO,CAAEd,UAAW,UACpBjB,MAAI,EAACC,GAAI,GACT,0BAAML,UAAWN,EAAQmC,OAAQkN,EAAQmB,cACzC,0BAAMlQ,UAAWN,EAAQoC,OAAzB,WAEJ,kBAACuK,EAAA,EAAD,CACIlK,MAAO,CAAEd,UAAW,UACpBjB,MAAI,EAACC,GAAI,GACT,0BAAML,UAAWN,EAAQmC,OAAQkN,EAAQoB,mBACzC,0BAAMnQ,UAAWN,EAAQoC,OAAzB,cAGN,cAGd,kBAAC,EAAD,CACIiD,KA1IK,SAACqL,GAClB,IAAIC,EAAgB,GACpB,OAAID,EAAMJ,OAAS,GACfI,EAAME,QAAQ,SAAA3H,GACV,IAAI4H,EAAM,MACH5H,EADG,CAEN6H,WAAW,GAAD,OAAK7H,EAAK8H,WACpBC,MAAO/H,EAAKgI,eAAe,SAAWhI,EAAK+H,MAAM3N,KAAO,MACxD6N,MAAOjI,EAAKgI,eAAe,UAAYhI,EAAKiI,MAAMZ,OAAS,EAAIrH,EAAKiI,MAAMrO,IAAI,SAACsO,EAAGrO,GAAJ,gBAAaqO,EAAE9N,MAAf,OAAsBP,IAAOmG,EAAKiI,MAAMZ,OAAS,EAAK,KAAO,MAAQ,MACnJc,YAAanI,EAAKgI,eAAe,eAAiBI,KAAOpI,EAAKmI,aAAa3N,OAAO,gBAAkB,MACpG6N,WAAYrI,EAAKgI,eAAe,cAAgBI,KAAOpI,EAAKqI,YAAY7N,OAAO,gBAAkB,MACjG8N,OAAQtI,EAAKgI,eAAe,UAAY,0BAAMxO,MAAO,CAAE+O,cAAe,eAAiBvI,EAAKsI,QAAiB,QAGjHZ,EAASc,KAAKZ,KAGXF,GAGJ,GAsHWe,CAAahC,EAAYrK,MAC/BC,QAAS4I,EACT5H,SAAUoJ,EAAYpJ,SACtBW,UAAWkH,EACX9H,YAAaqJ,EAAYrJ,YACzBF,WAAYuJ,EAAYvJ,WACxBwL,cAAepC,EAEfrJ,WAlKG,SAAC/D,GAChB4N,EAAkB5N,GAClB0N,GAAgB,IAiKJ3H,eA5PO,SAAC/F,GAChB4I,GACAC,aAAaD,GAGjBiF,EAAiB/E,WAAW,WACxB,IAAMf,EAAQ,CACV7D,YAAa,EACbC,SAAUoJ,EAAYpJ,SACtBsI,OAAQ,EACRxE,MAAOsF,EAAYtF,MACnB6E,MAAO,GACPnF,MAAO4F,EAAY5F,OAGvB3H,EAAMU,IAAI,SAAAwI,GAAC,MACU,eAAjBA,EAAErD,WACEkC,EAAM+E,MAAN,MACO/E,EAAM+E,MADb,CAEI2C,GAAI,CACA,CACId,WAAY,CACRxF,KAAK,GAAD,OAAKD,EAAElJ,MAAP,MACJoJ,QAAS,MAEd,CACCsG,YAAa,CACTvG,KAAK,GAAD,OAAKD,EAAElJ,MAAP,MACJoJ,QAAS,MAEd,CACCuG,UAAW,CACPxG,KAAK,GAAD,OAAKD,EAAElJ,MAAP,MACJoJ,QAAS,SAKN,UAAjBF,EAAErD,WACAkC,EAAM+E,MAAN,WAA4B,CACxB3D,KAAK,GAAD,OAAKD,EAAElJ,MAAP,MACJoJ,QAAS,KAEM,UAAjBF,EAAErD,WACAkC,EAAM+E,MAAM,kBAAoB,CAC5B3D,KAAK,GAAD,OAAKD,EAAElJ,MAAP,MACJoJ,QAAS,KAEM,WAAjBF,EAAErD,WACAkC,EAAM+E,MAAN,OAAwB5D,EAAElJ,MACxB+H,EAAM+E,MAAM5D,EAAErD,YAAc,CAC1BsD,KAAK,GAAD,OAAKD,EAAElJ,MAAP,MACJoJ,QAAS,OAIjChB,QAAQC,IAAIN,GAEZyE,EAASzE,IACV,OAkMStC,oBA/SY,SAACzF,GACzB,IAAM+H,EAAQ,CACV5D,SAAUoJ,EAAYpJ,SACtBD,YAAalE,EACbyM,OAAQc,EAAYpJ,SAAWnE,EAC/BiI,MAAOsF,EAAYtF,MACnB6E,MAAOS,EAAYT,MACnBnF,MAAO4F,EAAY5F,OAGvB6E,EAASzE,IAsSGrC,iBAnSS,SAAC1F,GACtB,IAAM+H,EAAQ,CACV5D,SAAUnE,EACVyM,OAAQc,EAAYd,OACpBxE,MAAOsF,EAAYtF,MACnB6E,MAAOS,EAAYT,MACnBnF,MAAO4F,EAAY5F,OAGnB4F,EAAYrJ,YAAeoE,KAAKC,KAAKgF,EAAYvJ,WAAahE,GAAS,IACvE+H,EAAK,YAAoBO,KAAKC,KAAKgF,EAAYvJ,WAAahE,GAAS,EACrE+H,EAAK,QAAeO,KAAKC,KAAKgF,EAAYvJ,WAAahE,GAAS,GAAMA,GAG1EwM,EAASzE,IAsRGvD,gBAjMQ,SAACxE,GAErB,IAAIc,EAAM,MACHd,EAAM,GADH,CAEN1B,UAAW0B,EAAM,GAAG1B,UAAUiL,gBAGR,UAAtBzI,EAAO+E,aACP/E,EAAM,MACCd,EAAM,GADP,CAEF6F,WAAY,oBAIpB,IAAI+J,EAAI3B,OAAO4B,OAAO/O,GAAQgP,KAAK,KAE7B/H,EAAQ,CACV5D,SAAUoJ,EAAYpJ,SACtBsI,OAAQc,EAAYd,OACpBxE,MAAO,CAAC2H,GACR9C,MAAOS,EAAYT,MACnBnF,MAAO4F,EAAY5F,OAGvB6E,EAASzE,S,oJC1PjB,IAAMgI,GAAuB,CAAC,WAAY,QAAS,UAC7CC,GAAYC,YAAW,CAC3B9Q,KAAM,GACN+Q,UAAW,CACTvQ,QAAS,SAHKsQ,CAKfE,KAEGC,GAAWH,YAAW,CAC1B9Q,KAAM,CACJ9B,MAAO,wBACPgT,SAAU,GACVrT,YAAa,GACbD,aAAc,GACdU,SAAU,WACVC,WAAY,IACZ,UAAW,CACTL,MAAO,sBACPK,WAAY,KAEd,aAAc,CACZ4S,eAAgB,YAChBjT,MAAO,UACPK,WAAY,MAGhB8C,SAAU,IAlBKyP,CAmBdM,KAEGpU,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCmU,uBAAwB,CACtBrP,QAAS9E,EAAMI,QAAQ,IAEzBgU,aAAc,CACZhT,SAAU,GACVC,WAAY,IACZL,MAAO,WAETqT,gBAAiB,CACfjT,SAAU,GACVC,WAAY,IACZL,MAAO,WAETsT,gBAAiB,CACflT,SAAU,GACVC,WAAY,IACZL,MAAO,WAiBTuT,SAAU,CACR/T,MAAO,QACPuC,OAAQ,OACR1C,UAAW,OACXF,aAAc,OACdqU,OAAQ,oCACRC,aAAc,MACdrR,gBAAiB,UACjBpC,MAAO,UACPsC,QAAS,OACThD,eAAgB,SAChB0B,WAAY,SACZuB,cAAe,UAEjBmR,WAAY,CACV1T,MAAO,WAET2T,mBAAoB,CAClBtU,UAAW,OACXF,aAAc,OACdK,MAAO,SAEToU,SAAU,CACR,gBAAiB,CACf5T,MAAO,YAGX6T,MAAO,CACL,gBAAiB,CACf7T,MAAO,YAGX8T,OAAO,aACL/T,IAAK,OACLkC,OAAQ,EACRuR,OAAQ,oBACRpR,gBAAiB,0BAChBpD,EAAM+U,YAAYC,GAAG,MAAQ,CAC5BxU,MAAO,sBAGXyU,KAAM,CACJC,SAAU,GAEZpG,OAAQ,CACNC,OAAQ,SACRoG,UAAW,OACXnB,SAAU,SAEZoB,YAAa,CACX/T,WAAY,IACZD,SAAU,IAEZiU,eAAgB,CACdhU,WAAY,IACZD,SAAU,GAEZkU,cAAe,CACblS,gBAAiB,GACjB+R,UAAW,SAEbI,YAAa,CACXpV,aAAc,QAEhBqV,YAAa,CACXpU,SAAU,SACVY,WAAY,aACZX,WAAY,IACZoU,cAAe,QAEjBC,aAAc,CACZtU,SAAU,GACVC,WAAY,IACZL,MAAO,QACP4O,OAAQ,UACRqE,eAAgB,aAElB0B,QAAS,CACPC,YAAa,qBAEfC,aAAc,CACZlV,YAAa,QAEfmV,YAAa,CACX1U,SAAU,GACVC,WAAY,IACZL,MAAO,QACP4O,OAAQ,WAEVmG,KAAM,CACJ3S,gBAAiB,UACjB0B,QAAS,aAEXkR,eAAgB,CACdlR,QAAS9E,EAAMI,QAAQ,IAEzB6V,OAAQ,CACNzV,MAAO,QACPuC,OAAQ,SAEV2L,kBAAmB,CACjB,UAAW,CACTrN,WAAY,WAGhB6U,cAAe,CACb9U,SAAU,GACVC,WAAY,IACZL,MAAO,yBAETmV,iBAAkB,CAChBC,KAAM,QAERC,4BAA6B,CAC3BjV,SAAU,GACVC,WAAY,IACZL,MAAO,UACP4O,OAAQ,UACRqE,eAAgB,aAElBqC,+BAAgC,CAC9BlV,SAAU,GACVJ,MAAO,UACP4O,OAAQ,WAEVpB,aAAc,CACZxN,MAAO,UACP4O,OAAQ,UACRxO,SAAU,OACVyO,YAAa,OAEf0G,SAAU,CACR7V,aAAc,OACdL,UAAW,GACX8C,UAAW,UAEbqT,WAAY,CACVxV,MAAO,UACPmC,UAAW,OAEXsT,QAAS,EACTC,cAAe,EACfC,cAAe,OACfvV,SAAU,QAEZwV,UAAW,CACT5V,MAAO,UACPmC,UAAW,OAEXsT,QAAS,GACTC,cAAe,EACfC,cAAe,OACfvV,SAAU,QAEZyV,cAAe,CACb7V,MAAO,UACPmC,UAAW,OAEXsT,QAAS,EACTC,cAAe,EACfC,cAAe,OACfvV,SAAU,OAGV,UAAW,CACT6S,eAAgB,YAChBjT,MAAO,UACPK,WAAY,KAEd,aAAc,CACZ4S,eAAgB,YAChBjT,MAAO,UACPK,WAAY,SAKLyV,GAAY,WAAO,IAAD,EACStH,mBAAS,GADlB,mBACtBuH,EADsB,KACTC,EADS,KAGvBxV,EAAU1B,KAehB,OANAwI,YAAgB,WACW,UAArB2O,gBACFD,EAAe,IAEhB,IAGD,uBAAKlV,UAAWN,EAAQuU,MACtB,gBAAC5H,EAAA,EAAD,CACE1N,WAAS,EACTsB,QAAQ,gBACRC,WAAW,SACXF,UAAWN,EAAQ8T,eAEnB,gBAACnH,EAAA,EAAD,CAAMjM,MAAI,GACR,gBAACgV,EAAA,EAAD,CAAYpV,UAAWN,EAAQgU,aAA/B,QACF,gBAAC7B,GAAD,CACMhQ,MAAOoT,EACP3R,SAzBY,SACtB+R,EACAC,GAEAJ,EAAeI,IAsBL7U,aAAW,YAEVmR,GAAgBrP,IAAI,SAAC/B,EAAe+U,GAAhB,OACnB,gBAACtD,GAAD,CACEnQ,MAAOtB,EACPD,GAAI,aAAegV,EACnBC,gBAAe,kBAAoBD,EACnC9S,IAAK8S,UAYjB,gBAAClJ,EAAA,EAAD,CAAM1N,WAAS,GACb,gBAAC0N,EAAA,EAAD,CAAMjM,MAAI,EAACC,GAAI,GAAIiM,GAAI,GAAItM,UAAWN,EAAQqU,cAE1B,IAAhBkB,EACG,gBAAC,GAAD,MACiB,IAAhBA,EACC,gBAAC,EAAD,CAAgBvV,QAASA,IACxB,SAWZ+V,GAAkB,SAAC7L,GAAD,OAAkBA,EAAM8L,OAE1CC,GAAqB,SAACC,GAAD,MAAyB,CAClDC,IAAKC,6BAAmB7M,EAAkB2M","file":"static/js/8.0880db00.chunk.js","sourcesContent":["import React, { FC } from 'react';\n// import Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\n\nimport { IModalComponent } from './IModalComponent';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tdialog: {},\n\tdialogAction: {\n\t\tmarginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        justifyContent:'center'\n\t},\n\tdialogContentContainer: {\n        width: '100%'\n\t},\n\tcontainer: {\n        paddingRight:'15px',\n        paddingLeft:'15px',\n        width: '450px'\n\t},\n\tcloseButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n\t},\n\tdialogTitle: {\n        marginTop: theme.spacing(2),\n        // marginBottom: theme.spacing(2),\n        fontSize: '16px',\n        color: '#272E4C',\n\t\tfontWeight: 700\n    },\n}));\n\nexport const ModalComponent: FC<IModalComponent.IProps> = props => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={props.isModalOpen}\n\t\t\tonClose={props.onClose}\n\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\tmaxWidth=\"sm\"\n\t\t\tclassName={classes.dialog}\n\t\t> \n\t\t\t <div>\n                <Grid container className={classes.container} justify=\"flex-start\" alignItems=\"flex-start\" direction=\"column\">\n                    <Grid item xs>\n\t\t\t\t\t\t<DialogTitle className={classes.dialogTitle} disableTypography={false} id=\"form-dialog-title\" >\n\t\t\t\t\t\t\t<Box fontWeight={700}>{props.title}</Box>\n\t\t\t\t\t\t\t<IconButton aria-label=\"close\" className={classes.closeButton} onClick={props.onClose}>\n                                <CloseIcon />\n                            </IconButton>\n\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs className={classes.dialogContentContainer}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\tprops.message ? \n\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"flex-start\">\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t{props.message}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</DialogContent> : null\n\t\t\t\t\t\t} \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprops.children ? props.children : null\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<DialogActions className={classes.dialogAction}>\n\t\t\t\t\t\t\t{ props.buttons !== undefined ?\n\t\t\t\t\t\t\t\tprops.buttons: null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t</Grid>\n                </Grid>\n\t\t\t</div>\n\t\t</Dialog>\n\t);\n};\n\nModalComponent.defaultProps = {\n\tisModalOpen: false,\n};\n","import * as React from 'react';\nimport { CircularProgress } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface LoaderProps {\n}\n\nconst useStyles = makeStyles({\n\troot: {\n        position: 'fixed',\n        width: '100%',\n        height: '100%',\n        zIndex: 9999,\n        right: '0px',\n        bottom: '0px',\n        top: '0px',\n        left: '0px',\n        textAlign: \"center\",\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    },\n    container:{\n        height: '100%',\n        outline: 0,\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        flexDirection: 'column'\n    }\n});\n\nexport const Loader: React.FC<LoaderProps> = (): JSX.Element => {\n    // const buttonclasses = ButtonStyle();\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <div className={classes.container}>\n                <CircularProgress size={150}/>\n            </div>\n        </div>\n    )\n}\n\nLoader.defaultProps = {}","import * as React from 'react';\n// import { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n    FilteringState,\n    SortingState,\n    IntegratedSorting,\n    IntegratedGrouping,\n    GroupingState,\n    SelectionState,\n    // IntegratedPaging,\n    PagingState,\n    CustomPaging,\n} from '@devexpress/dx-react-grid';\nimport {\n    Grid,\n    Table,\n    //   Toolbar,\n    TableHeaderRow,\n    TableFilterRow,\n    TableGroupRow,\n    TableSelection,\n    PagingPanel,\n    // TableFixedColumns,\n} from '@devexpress/dx-react-grid-material-ui';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    // faSearch,\n    faCheckSquare,\n    faMinusSquare,\n    faSort,\n    faSortUp,\n    faSortDown,\n    faMinusCircle,\n    faAngleDown,\n    faAngleUp,\n    // faPlus,\n    // faCheck, \n    // faTimes\n} from '@fortawesome/free-solid-svg-icons';\nimport * as MaterialUI from '@material-ui/core';\nimport { Loader } from 'Pages/Lookup/Components/Loader';\nimport './ReactTable.scss';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport MomentUtils from '@date-io/moment'\n\n// import { ReactSearch } from '../SearchBar/ReactSearch';\n\nexport interface IReactTableProps {\n    rows: any,\n    columns: any,\n    disableSort?: boolean,\n    disableFilter?: boolean,\n    enableIntegratedSorting?: boolean,\n    enableGrouping?: boolean,\n    enableSelection?: boolean,\n    enableSelectAll?: boolean,\n    enableOpenGroupTotalChecked?: boolean,\n    groupColumnName?: string,\n    viewOnly?: boolean,\n    columnExtensions?: any[],\n    message?: string,\n    sortingStateColumnExtensions?: any[],\n    defaultSorting?: any[],\n    totalCount?: number,\n    currentPage?: number,\n    pageSize?: number,\n    groupNameChecked?: any,\n    loading?: boolean,\n    defaultFilters?: any,\n    onDeleteRow?: (row) => void,\n    onRowClick?: (row) => void,\n    onPageChange?: (page) => void,\n    onSetPageSize?: (size) => void,\n    onCheckRow?: (row) => void,\n    onSelectGroup?: (group) => void,\n    onFilterChange?: (filter) => void,\n    onSortingChange?: (sort) => void,\n\n}\n\nconst defaultProps: IReactTableProps = {\n    rows: [],\n    columns: [],\n    enableIntegratedSorting: false,\n    disableSort: false,\n    disableFilter: false,\n    enableGrouping: false,\n    enableSelection: false,\n    enableSelectAll: false,\n    enableOpenGroupTotalChecked: false,\n    groupColumnName: '',\n    viewOnly: true,\n    columnExtensions: [],\n    message: '',\n    sortingStateColumnExtensions: [],\n    defaultSorting: [],\n    totalCount: 0,\n    currentPage: 0,\n    pageSize: 0,\n    groupNameChecked: [],\n    loading: false,\n}\n\nconst statusOption = [\n    {\n        value: 'all',\n        label: 'All',\n    },\n    {\n        value: 'active',\n        label: 'Active'\n    },\n    {\n        value: 'deactivated',\n        label: 'Deactivated'\n    },\n    {\n        value: 'awaiting activation',\n        label: 'Awaiting activation'\n    }\n]\n\nconst Select = ({ items, ...restProps }: any) => {\n    return (\n        <MaterialUI.Select\n            variant='outlined'\n            style={{ width: '100%' }}\n            renderValue={(selected: any) => {\n                if (selected != null) {\n                    const value: any = items.find((item: any) => {\n                        return item.value === selected;\n                    });\n                    if (value) {\n                        return value.label;\n                    } else {\n                        return '——';\n                    }\n                }\n                return '——';\n            }}\n            {...restProps}\n        >\n            {items.map((item: any, i: number) => (\n                <MaterialUI.MenuItem key={i} value={item.value}>\n                    {item.label}\n                </MaterialUI.MenuItem>\n            ))}\n        </MaterialUI.Select>\n    );\n};\n\nconst FilterCell = ({ filter, onFilter, filteringEnabled, classes, column }: any) => {\n    if (filteringEnabled) {\n        if (column.name === 'action_delete') {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n                </MaterialUI.TableCell>\n            )\n        } else if (column.name === 'last_login') {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                        <KeyboardDatePicker\n                            variant=\"dialog\"\n                            format=\"MMMM DD, YYYY\"\n                            inputVariant=\"outlined\"\n                            value={filter ? filter.value : ''}\n                            invalidDateMessage=\"\"\n                            onChange={date => { onFilter(date ? { value: date.toISOString() } : null) }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </MaterialUI.TableCell>\n            )\n        } else if (column.name === 'status') {\n            return (\n                <MaterialUI.TableCell classes={classes} style={{ paddingTop: '5px' }}>\n                    <Select\n                        onChange={e => onFilter(e.target.value ? { value: e.target.value } : null)}\n                        name={'status'}\n                        items={statusOption}\n                        id={'status'}\n                        value={filter ? filter.value : ''}\n                    />\n                </MaterialUI.TableCell>\n            )\n        } else {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n                    <MaterialUI.OutlinedInput\n                        classes={classes}\n                        style={{ width: '100%' }}\n                        value={filter ? filter.value : ''}\n                        labelWidth={0}\n                        onChange={e => onFilter(e.target.value ? { value: e.target.value } : null)}\n                        placeholder=\"\"\n                    />\n                </MaterialUI.TableCell>\n            );\n        }\n    }\n    return null;\n}\n\nconst SortingIcon = ({ direction }: any) =>\n    direction === 'asc' ? (\n        <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortUp} />\n    ) : (\n            <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortDown} />\n        );\n\nconst SortLabel = ({ column, onSort, children, direction }: any) => {\n    if (column.name === 'action_delete') {\n        return null;\n    } else {\n        return (\n            <MaterialUI.TableSortLabel hideSortIcon={true} onClick={onSort} style={{ textOverflow: \"ellipsis\", overflow: \"hidden\" }}>\n                {children}\n                {direction ? (\n                    <SortingIcon direction={direction} />\n                ) : (\n                        <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSort} />\n                    )}\n            </MaterialUI.TableSortLabel>\n        );\n    }\n};\n\n\nconst groupIconContentCell = ({ expanded }: any) => {\n    return (\n        <>\n            <div style={{ padding: '8.5px 12px', display: 'table-cell', verticalAlign: 'middle' }} >\n                <FontAwesomeIcon\n                    icon={expanded ? faAngleUp : faAngleDown}\n                    size={'2x'}\n                    color={\"rgba(0, 0, 0, 0.54)\"}\n                />\n            </div>\n        </>\n    )\n}\n\n\n\nexport const ReactTable: React.FC<IReactTableProps> = (props: IReactTableProps): JSX.Element => {\n    const {\n        rows,\n        columns,\n        disableSort,\n        disableFilter,\n        enableGrouping,\n        groupColumnName,\n        viewOnly,\n        message,\n        columnExtensions,\n        sortingStateColumnExtensions,\n        defaultSorting,\n        onDeleteRow,\n        enableSelection,\n        enableSelectAll,\n        onRowClick,\n        totalCount,\n        onPageChange,\n        currentPage,\n        pageSize,\n        onSetPageSize,\n        onCheckRow,\n        onSelectGroup,\n        // groupNameChecked,\n        loading,\n        onSortingChange,\n        enableIntegratedSorting,\n        enableOpenGroupTotalChecked\n    } = props;\n\n    const [selection, setSelection] = React.useState<any>([])\n    const [pageSizes] = React.useState([5, 10, 15]);\n    const [sorting, setSorting] = React.useState([])\n    // const [pageSize, setPageSize] = React.useState(10);\n    // console.log(onCheckRow, onSelectGroup)\n\n    const setSortingMethod = (e: any) => {\n        onSortingChange && onSortingChange(e)\n        setSorting(e);\n    }\n    const handleSelectionChange = (row: any[]) => {\n        if (onRowClick) {\n            if (!enableSelection) {\n                onRowClick(row[0]);\n            }\n        } else {\n            setSelection(row);\n        }\n    }\n\n    const selectCell = ({ row, onToggle }: any) => {\n        return (\n            <MaterialUI.TableCell>\n                <MaterialUI.Checkbox\n                    icon={<FontAwesomeIcon icon={faMinusSquare} />}\n                    checkedIcon={<FontAwesomeIcon icon={faCheckSquare} />}\n                    checked={row.checked}\n                    onClick={(e: any) => {\n                        e.stopPropagation();\n                        onToggle();\n                        onCheckRow && onCheckRow(row);\n                    }}\n                />\n            </MaterialUI.TableCell>\n        )\n    }\n\n\n    const groupContentCell = ({ row }: any) => {\n\n        let isChecked = false;\n        let countChecked = 0;\n        let countItems = 0;\n        rows.map(data => {\n            if (data.name === row.value) {\n                countItems++;\n                if (data.checked) {\n                    isChecked = true;\n                    countChecked++;\n                }\n            }\n        })\n\n        if (!viewOnly) {\n            return (\n                <>\n                    <div style={{ padding: '8.5px 15.5px', display: 'table-cell', verticalAlign: 'middle' }} >\n                        <MaterialUI.Checkbox\n                            icon={<FontAwesomeIcon icon={faMinusSquare} />}\n                            checkedIcon={<FontAwesomeIcon icon={faCheckSquare} />}\n                            checked={isChecked}\n                            onClick={e => {\n                                e.stopPropagation();\n                                onSelectGroup && onSelectGroup(row.value)\n                            }}\n                        />\n                    </div>\n                    <div style={{ padding: '8.5px 2px', display: 'table-cell', verticalAlign: 'middle' }} >\n                        <span>{row.value}</span>\n                    </div>\n                    <div style={{ padding: '8.5px 30px', display: 'table-cell', verticalAlign: 'middle' }} >\n                        <span>{countChecked}/{countItems}</span>\n                    </div>\n                </>\n            )\n        } else if (viewOnly && enableOpenGroupTotalChecked) {\n            return (\n                <>\n                    <div style={{ padding: '8.5px 2px', display: 'table-cell', verticalAlign: 'middle' }} >\n                        <span>{row.value}</span>\n                    </div>\n                    <div style={{ padding: '8.5px 30px', display: 'table-cell', verticalAlign: 'middle' }} >\n                        <span>{countChecked}/{countItems}</span>\n                    </div>\n                </>\n            )\n        } else {\n            return (\n                <div style={{ padding: '8.5px 2px', display: 'table-cell', verticalAlign: 'middle' }} >\n                    <span>{row.value}</span>\n                </div>\n            )\n        }\n\n    }\n\n    const tableCell = ({ value, row, column }: any) => {\n        if (column.name === 'action_delete') {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 30px 8px 10px', textAlign: 'right' }}>\n                    <span\n                        onClick={() => {\n                            onDeleteRow && onDeleteRow(row)\n                        }}>\n\n                        <FontAwesomeIcon\n                            icon={faMinusCircle}\n                        />\n                    </span>\n\n                </MaterialUI.TableCell>\n            )\n        } else {\n            return (\n                <MaterialUI.TableCell>\n                    {value}\n                </MaterialUI.TableCell>\n            )\n        }\n    }\n\n\n    return (\n        <div style={{ padding: '10px 0' }}>\n            <Paper>\n                <Grid\n                    rows={rows}\n                    columns={columns}\n                >\n                    <PagingState\n                        currentPage={currentPage}\n                        onCurrentPageChange={onPageChange}\n                        pageSize={pageSize}\n                        onPageSizeChange={onSetPageSize}\n                    />\n                    <CustomPaging\n                        totalCount={totalCount}\n                    />\n                    {!disableSort && onSortingChange ? (\n                        <SortingState\n                            defaultSorting={defaultSorting}\n                            columnExtensions={sortingStateColumnExtensions}\n                            sorting={sorting}\n                            onSortingChange={setSortingMethod}\n                        />\n                    ) : !disableSort ? (\n                        <SortingState\n                            defaultSorting={[]}\n                        />\n                    ) : null}\n                    {!viewOnly ? <SelectionState\n                        selection={selection}\n                        onSelectionChange={handleSelectionChange}\n                    /> : null}\n                    {enableGrouping && groupColumnName ? <GroupingState grouping={[{ columnName: groupColumnName }]} /> : null}\n                    {!disableFilter ?\n                        <FilteringState\n                            onFiltersChange={props.onFilterChange}\n                        /> : null}\n                    {/* <IntegratedPaging /> */}\n                    {enableIntegratedSorting ? <IntegratedSorting /> : null}\n                    {enableGrouping ? <IntegratedGrouping /> : null}\n                    <Table\n                        columnExtensions={columnExtensions}\n                        messages={{ noData: message }}\n                        cellComponent={tableCell}\n                    />\n                    <TableHeaderRow\n                        showSortingControls={!disableSort}\n                        sortLabelComponent={SortLabel}\n                    />\n                    {/* <TableFixedColumns /> */}\n                    <PagingPanel\n                        pageSizes={enableGrouping ? [30, 40, 50] : pageSizes}\n                    />\n                    {!viewOnly ?\n                        <TableSelection\n                            highlightRow\n                            selectByRowClick\n                            showSelectAll={enableSelectAll ? true : undefined}\n                            cellComponent={!loading ? selectCell : selectCell}\n                            showSelectionColumn={enableSelection}\n                        /> : null}\n\n                    {enableGrouping ?\n                        <TableGroupRow\n                            contentComponent={groupContentCell}\n                            iconComponent={groupIconContentCell}\n                        ></TableGroupRow> : null}\n                    {!disableFilter ? <TableFilterRow cellComponent={FilterCell} /> : null}\n                </Grid>\n                {\n                    loading &&\n                    <Loader />\n                }\n            </Paper>\n        </div>\n    )\n}\n\nReactTable.defaultProps = defaultProps;","export const ActionConsts = {\n\tUsers: {\n\t\tResetReducer: 'Users_ResetReducer',\n\t\tSetReducer: 'Users_SetReducer',\n\t},\n};\n","//#region Global Imports\n// import { Dispatch } from 'redux';\n//#endregion Global Imports\n\n//#region Local Imports\nimport { ActionConsts } from './ActionConsts';\n// import { PlanetaryService } from 'Components/Services';\n//#endregion Local Imports\n\n//#region Interface Imports\n//#endregion Interface Imports\n\nexport const UsersActions = {\n\tMap: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.Users.SetReducer,\n\t}),\n\n\tReset: () => ({\n\t\ttype: ActionConsts.Users.ResetReducer,\n\t}),\n\n\t// GetApod: (payload) => async (dispatch: Dispatch) => {\n\n\t// },\n};\n","import * as React from 'react';\nimport {\n    Grid,\n    // InputLabel, \n    // Typography,\n    Link,\n    Button\n} from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { ReactTable } from 'Components/UI/TableComponent/ReactTable';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { getRoles } from 'Pages/API/Calls/Roles';\nimport { Redirect } from 'react-router-dom';\nimport { Loader } from 'Pages/Lookup/Components/Loader';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\nimport BasicSelect from 'Components/UI/BasicSelect'\n\ninterface IProps {\n    classes: any;\n}\n\ninterface IState {\n    rows: any;\n    columns: any;\n    loading: boolean;\n    redirect_to_role: boolean;\n    redirect_to_addrole: boolean;\n    redirect_data: any;\n    isModuleModalOpen: boolean;\n    moduleItems: any[];\n    moduleValue: number;\n    totalCount: number;\n    currentPage: number;\n    limit: number;\n    order: string;\n    typingTimeout: any;\n    default_filter: any;\n    query: string;\n    skip: number;\n}\n\nexport class RolesTableList extends React.Component<IProps, IState> {\n    constructor(props) {\n        super(props);\n        const moduleItems = [\n            {\n                name: 'User Management',\n                value: 0\n            },\n            {\n                name: 'Membership',\n                value: 1\n            },\n            {\n                name: 'Underwriting',\n                value: 2\n            },\n            {\n                name: 'Customer Care',\n                value: 3\n            },\n            {\n                name: 'Claims',\n                value: 4,\n            },\n            // {\n            //     name: 'Billing',\n            //     value: 5,\n            // },\n        ]\n        const columns = [\n            {\n                name: 'name',\n                title: 'Role Name',\n            },\n            {\n                name: 'role_id',\n                title: 'Role ID',\n            },\n            {\n                name: 'associate_groups',\n                title: 'Associated Groups',\n            },\n            {\n                name: 'module',\n                title: 'Module',\n            },\n            {\n                name: 'status',\n                title: 'Status',\n            },\n        ];\n\n        this.state = {\n            loading: true,\n            columns: columns,\n            rows: [],\n            redirect_to_role: false,\n            redirect_to_addrole: false,\n            redirect_data: [],\n            isModuleModalOpen: false,\n            moduleItems: moduleItems,\n            moduleValue: 0,\n            totalCount: 0,\n            currentPage: 0,\n            typingTimeout: 0,\n            limit: 10,\n            order: '',\n            default_filter: [],\n            query: '',\n            skip: 0\n        }\n    }\n\n\n\n    componentDidMount() {\n        let _self = this;\n        this.setState({\n            loading: true,\n        }, () => {\n            _self.APIGetRolesList(this.state.currentPage, this.state.limit, this.state.query);\n        });\n    }\n\n    APIGetRolesList = (page: number, limit: number, query: string) => {\n        this.setState({\n            loading: true,\n        })\n\n        let skip = page * limit\n\n        this.setState({\n            currentPage: page\n        }, () => {\n            this.setState({\n                skip: skip\n            })\n        })\n\n\n        let filter = {\n            limit: limit,\n            skip: skip\n        }\n\n        getRoles(filter, this.state.default_filter, this.state.order, query).then(res => {\n            console.log((Math.ceil(res.count / limit) - 1))\n            this.setState({\n                rows: res.body,\n                loading: false,\n                totalCount: res.count,\n                currentPage: this.state.currentPage > (Math.ceil(res.count / limit) - 1) ? (Math.ceil(res.count / limit) - 1) : page,\n                limit: limit\n            });\n        }).catch(() => {\n            this.setState({\n                rows: [],\n                loading: false,\n                totalCount: 0,\n            });\n        })\n    }\n\n\n    handleTimeOutSearchTableRoles = (data) => {\n        if (this.state.typingTimeout) {\n            clearTimeout(this.state.typingTimeout);\n        }\n        this.setState({\n            currentPage: 0\n        }, () => {\n            this.setState({\n                query: data,\n                typingTimeout: setTimeout(() => {\n                    this.setState({\n                        loading: true,\n                    })\n                    this.APIGetRolesList(this.state.currentPage, this.state.limit, this.state.query);\n                }, 3000)\n            })\n        })\n    }\n\n    onSearchTableRoles = () => {\n\n        if (this.state.typingTimeout) {\n            clearTimeout(this.state.typingTimeout)\n        }\n\n        this.setState({\n            loading: true,\n            currentPage: 0\n        }, () => {\n            this.APIGetRolesList(0, this.state.limit, this.state.query);\n        })\n\n\n    }\n\n    handleOnFilterChange = (filter) => {\n\n        let _filter: any = {};\n\n        if (this.state.typingTimeout) {\n            clearTimeout(this.state.typingTimeout)\n        }\n\n        filter.map(w =>\n\n            w.columnName === 'status' ?\n                w.value !== 'all' ?\n                    _filter[w.columnName] = `${w.value}` : ''\n                : _filter[w.columnName] = {\n                    like: `${w.value}.*`,\n                    options: 'i'\n                }\n        )\n\n        this.setState({\n            default_filter: _filter,\n            currentPage: 0,\n            typingTimeout: setTimeout(() => {\n                this.setState({\n                    loading: true,\n                })\n                this.APIGetRolesList(this.state.currentPage, this.state.limit, this.state.query);\n            }, 1500)\n        })\n    }\n\n    handleSortChange = (sort) => {\n        this.setState({\n            order: `${sort[0].columnName} ${sort[0].direction.toUpperCase()}`,\n            loading: true,\n        },\n            () => {\n                this.APIGetRolesList(this.state.currentPage, this.state.limit, this.state.query)\n            }\n        )\n    }\n\n    handleRowClick = (row) => {\n        var data = this.state.rows;\n        this.setState({\n            redirect_to_role: true,\n            redirect_data: data[row]\n        })\n    }\n\n    handleAddRole = () => {\n        console.log('handleAddRole');\n        this.setState({\n            isModuleModalOpen: true,\n        })\n    }\n\n    handleContinueRole = () => {\n        var data = this.state.moduleItems[Number(this.state.moduleValue)].name;\n        console.log(data, 'datawew');\n        this.setState({\n            redirect_to_addrole: true,\n            redirect_data: data\n        })\n    }\n\n    render(): JSX.Element {\n\n        if (this.state.redirect_to_role) {\n            return (\n                <>\n                    <Redirect\n                        to={{\n                            pathname: '/system-admin/roles/' + this.state.redirect_data._id,\n                        }}\n                    />\n                </>\n            );\n        }\n        if (this.state.redirect_to_addrole) {\n            return (\n                <Redirect\n                    to={{\n                        pathname: '/system-admin/add-roles',\n                        state: { from: this.state.redirect_data },\n                    }}\n                />\n            );\n        }\n\n        return (\n\n            <div>\n\n                {this.state.loading ? <Loader /> : null}\n                <Grid container alignItems={'center'} style={{ textAlign: 'center' }} spacing={4}>\n                    <Grid item xs={8} md={9}>\n                        <ReactSearch\n                            placeholder={'Search a role'}\n                            onSearch={this.onSearchTableRoles}\n                            onChange={this.handleTimeOutSearchTableRoles}\n                        />\n                    </Grid>\n                    <Grid item xs={4} md={3}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <FontAwesomeIcon icon={faDownload} className={this.props.classes.addFieldIcon} />\n                                <Link className={this.props.classes.linkStyleSelected}>Generate Report</Link>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <FontAwesomeIcon icon={faPlus} className={this.props.classes.addFieldIcon} />\n                                <Link className={this.props.classes.linkStyleSelected} onClick={() => this.handleAddRole()}>Add Role</Link>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <ReactTable\n                    rows={this.state.rows}\n                    columns={this.state.columns}\n                    message={'There are no user roles to show yet.'}\n                    viewOnly={false}\n                    enableSelection={false}\n                    onRowClick={this.handleRowClick}\n                    totalCount={this.state.totalCount}\n                    currentPage={this.state.currentPage}\n                    pageSize={this.state.limit}\n                    defaultFilters={this.state.default_filter}\n                    onFilterChange={this.handleOnFilterChange}\n                    onSortingChange={this.handleSortChange}\n                    onSetPageSize={(size: any) => {\n                        this.APIGetRolesList(this.state.currentPage, size, this.state.query);\n                    }}\n                    onPageChange={(page: any) => {\n                        this.APIGetRolesList(page, this.state.limit, this.state.query);\n                    }}\n                />\n\n                <ModalComponent\n                    isModalOpen={this.state.isModuleModalOpen}\n                    onClose={() => {\n                        this.setState({\n                            isModuleModalOpen: false\n                        })\n                    }}\n                    message={'Select a module for the role you will create:'}\n                    title={'Choose a Module'}\n                    buttons={\n                        <Grid container justify=\"center\" alignItems=\"center\" style={{ textAlign: 'center' }}>\n                            <Grid item xs={6}>\n                                <Button\n                                    onClick={() => {\n                                        this.setState({\n                                            isModuleModalOpen: false\n                                        })\n                                    }}\n                                    variant={'outlined'}\n                                    color={'secondary'}\n                                    className={this.props.classes.button}\n                                >Cancel</Button>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Button className={this.props.classes.button} variant={'contained'} color={'primary'} onClick={() => this.handleContinueRole()}>Continue</Button>\n                            </Grid>\n                        </Grid>\n                    }\n                >\n                    <div style={{ width: '90%', margin: 'auto' }}>\n                        <BasicSelect\n                            menuItems={this.state.moduleItems}\n                            width={'100%'}\n                            value={this.state.moduleValue}\n                            onChange={(e: any) => {\n                                this.setState({\n                                    moduleValue: e.target.value\n                                })\n                            }}\n                        />\n                    </div>\n                </ModalComponent>\n            </div>\n        )\n    }\n}","import React from 'react'\n\nimport {\n    Grid,\n    VirtualTable,\n    TableHeaderRow,\n    TableSelection,\n    PagingPanel,\n    TableFilterRow\n} from '@devexpress/dx-react-grid-material-ui'\n\nimport {\n    PagingState,\n    CustomPaging,\n    SortingState,\n    SelectionState,\n    FilteringState,\n    // IntegratedFiltering\n  } from '@devexpress/dx-react-grid'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport MomentUtils from '@date-io/moment'\nimport {\n    faSort,\n    faSortUp,\n    faSortDown\n} from '@fortawesome/free-solid-svg-icons'\nimport * as MaterialUI from '@material-ui/core'\n\ninterface IProps {\n    rows: any[]\n    columns: any[]\n    totalCount: number\n    currentPage: number\n    pageSize: number\n    pageSizes: number[]\n    statusOptions?: any[]\n    // Evemts\n    onCurrentPageChange: (value) => void\n    onFilterChange: (value) => void\n    onPageSizeChange: (value) => void\n    onSortingChange: (value) => void\n    onRowClick: (value) => void\n}\n\nconst COLUMN_EXTENSIONS = [\n  {\n    columnName: 'username',\n    wordWrapEnabled: true,\n  },\n  {\n    columnName: 'first_name',\n    wordWrapEnabled: true,\n  },\n  {\n    columnName: 'group',\n    wordWrapEnabled: true,\n  },\n  {\n    columnName: 'roles',\n    wordWrapEnabled: true,\n  },\n];\n\nconst statusOption = [\n  {\n    value: 'all',\n    label: 'All',\n  },\n  {\n    value: 'active',\n    label: 'Active'\n  },\n  {\n    value: 'deactivated',\n    label: 'Deactivated'\n  },\n  {\n    value: 'locked',\n    label: 'Locked'\n  },\n  {\n    value: 'awaiting activation',\n    label: 'Awaiting activation'\n  }\n]\n\nconst Select = ({ items, ...restProps  }: any) => {\n  return (\n      <MaterialUI.Select\n          variant='outlined'\n          style={{ width: '100%' }}\n          renderValue={(selected: any) => {\n              if (selected != null) {\n                  const value: any = items.find((item: any) => {\n                      return item.value === selected;\n                  });\n                  if (value) {\n                      return value.label;\n                  } else {\n                      return '——';\n                  }\n              }\n              return '——';\n          }}\n          {...restProps}\n      >\n          {items.map((item: any, i: number) => (\n              <MaterialUI.MenuItem key={i} value={item.value}>\n                  {item.label}\n              </MaterialUI.MenuItem>\n          ))}\n      </MaterialUI.Select>\n  );\n};\n\nconst FilterCell = ({ filter, onFilter, filteringEnabled, classes, column }: any) => {\n  // let statuses: any[] = [];\n\n  // statusOptions && statusOptions.map((status: any) => {\n  //   statuses.push({\n  //     value: status,\n  //     label: status.charAt(0).toUpperCase() + status.substring(1)\n  //   })\n  // })\n\n  if (filteringEnabled) {\n      if (column.name === 'last_login' || column.name === 'expiry_date') {\n          return (\n            <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n              <MuiPickersUtilsProvider utils={MomentUtils}>\n                <KeyboardDatePicker\n                    disabled\n                    variant=\"dialog\"\n                    format=\"MMMM DD, YYYY\"\n                    inputVariant=\"outlined\"\n                    // className={datePickerClasses.keyboardDatePicker}\n                    value={filter ? filter.value : ''}\n                    invalidDateMessage=\"\"\n                    onChange={date => {console.log(date); onFilter(date ? { value: date.toISOString() } : null)}}\n                />\n              </MuiPickersUtilsProvider>\n            </MaterialUI.TableCell>\n          )\n      } else if (column.name === 'status') {\n        return (\n          <MaterialUI.TableCell classes={classes} style={{paddingTop: '5px'}}>\n            <Select\n                onChange={e => onFilter(e.target.value ? { value: e.target.value } : null)}\n                name={'status'}\n                items={statusOption}\n                id={'status'}\n                value={filter ? filter.value : ''}\n            />\n          </MaterialUI.TableCell>\n        )\n      } else {\n          return (\n              <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n                  <MaterialUI.OutlinedInput\n                      classes={classes}\n                      style={{ width: '100%' }}\n                      value={filter ? filter.value : ''}\n                      labelWidth={0}\n                      onChange={e => onFilter(e.target.value ? { value: e.target.value } : null)}\n                      placeholder=\"\"\n                  />\n              </MaterialUI.TableCell>\n          );\n      }\n  }\n  return null;\n}\n\nconst SortingIcon = ({ direction }: any) =>\n  direction === 'asc' ? (\n    <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortUp} />\n  ) : (\n    <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortDown} />\n  );\n\nconst renderSortable = ({ column, onSort, children, direction }: any) => {\n  if (\n      column.sortingEnabled !== undefined &&\n      column.sortingEnabled !== null &&\n      column.sortingEnabled === false\n    ) {\n      return <span>{column.title}</span>;\n    } else {\n      return (\n        <MaterialUI.TableSortLabel hideSortIcon={true} onClick={onSort}>\n          {children}\n          {direction ? (\n            <SortingIcon direction={direction} />\n          ) : (\n            <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSort} />\n          )}\n        </MaterialUI.TableSortLabel>\n      );\n  }\n}\n\nexport const TableComponent: React.FC<IProps> = (props: IProps): JSX.Element => {\n    const {\n        rows,\n        columns,\n        totalCount,\n        currentPage,\n        pageSize,\n        pageSizes,\n        // events\n        onFilterChange,\n        onCurrentPageChange,\n        onPageSizeChange,\n        onSortingChange,\n        onRowClick,\n    } = props;\n\n    const getRowId = row => row._id;\n\n    const [selection, setSelection] = React.useState([]);\n\n    const handleSelection = (e) => {\n      setSelection(e);\n      onRowClick(e);\n    }\n\n    return (\n        <>\n            <Grid\n              getRowId={getRowId}\n              rows={rows}\n              columns={columns}>\n\n              <FilteringState\n                onFiltersChange={onFilterChange} />\n              {/* <IntegratedFiltering /> */}\n\n              <SelectionState\n                selection={selection}\n                onSelectionChange={handleSelection}\n              />\n\n              <SortingState onSortingChange={onSortingChange} />\n\n              <PagingState\n                  currentPage = {currentPage}\n                  pageSize = {pageSize}\n                  // Events\n                  onCurrentPageChange = {onCurrentPageChange}\n                  onPageSizeChange = {onPageSizeChange}\n              />\n\n              <CustomPaging totalCount = {totalCount}/>\n\n              <VirtualTable\n                columnExtensions={COLUMN_EXTENSIONS} />\n              <TableHeaderRow showSortingControls sortLabelComponent={renderSortable}/>\n              <TableFilterRow cellComponent={FilterCell} />\n\n              <TableSelection\n                selectByRowClick\n                highlightRow\n                showSelectionColumn={false}\n              />\n\n              <PagingPanel pageSizes = {pageSizes} />\n            </Grid>\n        </>\n    )\n}","export const userTableColumn = [\n    { name: 'username', title: 'Username' },\n    { name: 'first_name', title: 'Name' },\n    { name: 'group', title: 'User Group' },\n    { name: 'roles', title: 'User Role/s' },\n    { name: 'last_login', title: 'Last Login Date' },\n    { name: 'expiry_date', title: 'Expiry Date' },\n    { name: 'status', title: 'Status' }\n]\n\nexport const tableConst = [10, 15, 20]","import React from 'react'\nimport { TableComponent } from './TableComponent'\n\nimport { userTableColumn, tableConst } from './Accounts.const'\nimport { getUserList } from 'Pages/API/Calls/User'\nimport { UI } from 'Components'\nimport {\n    Grid,\n} from '@material-ui/core';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouteTo } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment';\n\nconst useStyles = makeStyles({\n    addFieldIcon: {\n        color: '#3AB77D',\n        cursor: 'pointer',\n        fontSize: '13px',\n        marginRight: '8px',\n        marginLeft: '20px'\n    },\n    searchSection: {\n        marginBottom: '21px'\n    },\n    label: {\n        color: '#272E4C',\n        fontSize: 13\n    },\n    value: {\n        color: '#3AB77D',\n        fontSize: 13,\n        fontWeight: 800,\n        marginRight: '10px'\n    },\n    tableTop: {\n        padding: '20px'\n    },\n    searchTabAction: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    linkStyleSelected: {\n        '&:hover': {\n          fontWeight: 'normal'\n        }\n    }\n})\n\nexport const AccountTabPage: React.FC = (): JSX.Element => {\n    const classes = useStyles();\n    React.useEffect(() => {\n        getUsers({ pageSize: 10, offset: 0 }, true)\n    }, [])\n\n    // Fetch\n    const getUsers = (newState?: any, saveSummary?: boolean) => {\n        setLoading(true)\n        getUserList(\n            newState.pageSize,\n            newState.offset,\n            newState.where,\n            newState.order,\n            newState.query).then((data: any) => {\n                console.log(data)\n                if (!data.error) {\n                    const state = {\n                        ...newState,\n                        rows: data.body,\n                        totalCount: data.count\n                    }\n\n                    if (saveSummary && saveSummary === true) {\n                        setSummary(data.summary)\n                        setStatuses(data.statuses)\n                    }\n\n                    updateTableState(state)\n\n                } else {\n                    const state = {\n                        ...newState,\n                        rows: [],\n                        totalCount: 0\n                    }\n\n                    updateTableState(state)\n                }\n\n                setLoading(false)\n            }).catch(() => {\n                console.log(\"catch\")\n                setLoading(false)\n                const state = {\n                    ...newState,\n                    rows: [],\n                    totalCount: 0\n                }\n\n                updateTableState(state)\n            })\n    }\n\n    // Fetch\n    // const getSearchUser = (newState?: any) => {\n    //     setLoading(true)\n    //     searchUser(\n    //         newState.pageSize,\n    //         newState.offset,\n    //         newState.query,\n    //         newState.where,\n    //         newState.order).then((data: any) => {\n\n    //             if (!data.error) {\n    //                 const state = {\n    //                     ...newState,\n    //                     rows: data.body,\n    //                     totalCount: data.count\n    //                 }\n\n    //                 updateTableState(state)\n    //             } else {\n    //                 const state = {\n    //                     ...newState,\n    //                     rows: [],\n    //                     totalCount: 0\n    //                 }\n\n    //                 updateTableState(state)\n    //             }\n\n    //             setLoading(false)\n    //         }).catch(() => {\n    //             setLoading(false)\n    //         })\n    // }\n\n    // Table event handlers\n    const onCurrentPageChange = (value) => {\n        const state = {\n            pageSize: tableStates.pageSize,\n            currentPage: value,\n            offset: tableStates.pageSize * value,\n            order: tableStates.order,\n            where: tableStates.where,\n            query: tableStates.query\n        }\n\n        getUsers(state)\n    }\n\n    const onPageSizeChange = (value) => {\n        const state = {\n            pageSize: value,\n            offset: tableStates.offset,\n            order: tableStates.order,\n            where: tableStates.where,\n            query: tableStates.query\n        }\n\n        if (tableStates.currentPage > (Math.ceil(tableStates.totalCount / value) - 1)) {\n            state['currentPage'] = ((Math.ceil(tableStates.totalCount / value) - 1))\n            state['offset'] = ((Math.ceil(tableStates.totalCount / value) - 1)) * value\n        }\n\n        getUsers(state)\n    }\n\n    const handleTimeOutSearch = (value) => {\n        if (typingTimeout) {\n            clearTimeout(typingTimeout);\n        }\n\n        setTypingTimeout(setTimeout(function () {\n            const state = {\n                currentPage: 0,\n                pageSize: tableStates.pageSize,\n                offset: 0,\n                order: tableStates.order,\n                where: tableStates.where,\n                query: value\n            }\n\n            getUsers(state)\n\n        }, 3000));\n    }\n\n    const onFilterChange = (value) => {\n        if (typingTimeout) {\n            clearTimeout(typingTimeout);\n        }\n\n        setTypingTimeout(setTimeout(function () {\n            const state = {\n                currentPage: 0,\n                pageSize: tableStates.pageSize,\n                offset: 0,\n                order: tableStates.order,\n                where: {},\n                query: tableStates.query\n            }\n\n            value.map(w =>\n                w.columnName === 'first_name' ?\n                    state.where = {\n                        ...state.where,\n                        or: [\n                            {\n                                first_name: {\n                                    like: `${w.value}.*`,\n                                    options: 'i'\n                                }\n                            }, {\n                                middle_name: {\n                                    like: `${w.value}.*`,\n                                    options: 'i'\n                                }\n                            }, {\n                                last_name: {\n                                    like: `${w.value}.*`,\n                                    options: 'i'\n                                }\n                            }\n                        ]\n                    }\n                    : w.columnName === 'group' ?\n                        state.where['group_name'] = {\n                            like: `${w.value}.*`,\n                            options: 'i'\n                        }\n                        : w.columnName === 'roles' ?\n                            state.where[\"main_role.name\"] = {\n                                like: `${w.value}.*`,\n                                options: 'i'\n                            }\n                            : w.columnName === 'status' ?\n                                state.where[\"status\"] = w.value\n                                : state.where[w.columnName] = {\n                                    like: `${w.value}.*`,\n                                    options: 'i'\n                                }\n            )\n\n            console.log(state)\n\n            getUsers(state)\n        }, 3000));\n    }\n\n    const onSortingChange = (value) => {\n\n        let filter = {\n            ...value[0],\n            direction: value[0].direction.toUpperCase()\n        }\n\n        if (filter.columnName === 'roles') {\n            filter = {\n                ...value[0],\n                columnName: 'main_role.name'\n            }\n        }\n\n        let a = Object.values(filter).join(' ')\n\n        const state = {\n            pageSize: tableStates.pageSize,\n            offset: tableStates.offset,\n            order: [a],\n            where: tableStates.where,\n            query: tableStates.query\n        }\n\n        getUsers(state)\n    }\n\n    const onRowClick = (value) => {\n        setUserIdSelected(value)\n        setIsRowClicked(true)\n    }\n\n    // const handleSearchChange = ({target}) => {\n    //     setSearchValue(target.value)\n    // }\n\n    const updateTableState = (prop) => {\n        setTableState({\n            ...tableStates,\n            ...prop\n        })\n    }\n\n    const rowDataFixer = (array: any) => {\n        let newEntry: any = [];\n        if (array.length > 0) {\n            array.forEach(data => {\n                let newRow = {\n                    ...data,\n                    first_name: `${data.full_name}`,\n                    group: data.hasOwnProperty('group') ? data.group.name : 'N/A',\n                    roles: data.hasOwnProperty('roles') && data.roles.length > 0 ? data.roles.map((x, i) => `${x.name}${i !== (data.roles.length - 1) ? ', ' : ''}`) : 'N/A',\n                    expiry_date: data.hasOwnProperty('expiry_date') ? moment(data.expiry_date).format('MMM DD, YYYY') : 'N/A',\n                    last_login: data.hasOwnProperty('last_login') ? moment(data.last_login).format('MMM DD, YYYY') : 'N/A',\n                    status: data.hasOwnProperty('status') ? <span style={{ textTransform: 'capitalize' }}>{data.status}</span> : 'N/A',\n                }\n\n                newEntry.push(newRow)\n            })\n\n            return newEntry\n        }\n\n        return []\n    }\n\n    const handleSearchUser = (e) => {\n        if (typingTimeout) {\n            clearTimeout(typingTimeout);\n        }\n        const state = {\n            currentPage: 0,\n            pageSize: tableStates.pageSize,\n            offset: 0,\n            order: tableStates.order,\n            where: tableStates.where,\n            query: e\n        }\n\n        getUsers(state)\n\n    }\n\n    // States\n    const [tableStates, setTableState] = React.useState<any>({\n        rows: [],\n        currentPage: 0,\n        totalCount: 0,\n        pageSize: 10,\n        offset: 0,\n        order: '',\n        where: {},\n        query: ''\n    })\n\n    // const [searchValue, setSearchValue] = React.useState<string>('')\n    const [isLoading, setLoading] = React.useState<boolean>(true)\n    const [isRowClicked, setIsRowClicked] = React.useState<boolean>(false)\n    const [userIdSelected, setUserIdSelected] = React.useState<string>('')\n    const [typingTimeout, setTypingTimeout] = React.useState<any>(0)\n    // const [query, setQuery] = React.useState<string>('')\n    const [summary, setSummary] = React.useState<any>()\n    const [statuses, setStatuses] = React.useState<any>()\n\n    if (isRowClicked === true) {\n        return <Redirect to={`account/${userIdSelected}`} />\n    }\n\n    return (\n        <>\n            {isLoading && <UI.LoadingIndicator />}\n            <Grid\n                container xs={12}\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                className={classes.searchSection}>\n                <Grid item xs={9}>\n                    {/* <OutlinedInput\n                        fullWidth={true}\n                        id=\"outlined-adornment-amount\"\n                        value={query}\n                        onChange={handleSearchUser}\n                        placeholder=\"Search user\"\n                        startAdornment={\n                        <InputAdornment position=\"start\">\n                            <SearchIcon style={{color: '#363636', opacity: 0.4}} />\n                        </InputAdornment>}\n                        labelWidth={0} /> */}\n                    <ReactSearch\n                        onChange={handleTimeOutSearch}\n                        placeholder={'Search user'}\n                        onSearch={handleSearchUser} />\n                </Grid>\n                <Grid\n                    xs={3}\n                    md={3}>\n                    <div className={classes.searchTabAction}>\n                        <UI.GenerateReport></UI.GenerateReport>\n                        <FontAwesomeIcon icon={faPlus} className={classes.addFieldIcon} />\n                        <RouteTo to='/system-admin/adduser'>\n                            <Link className={classes.linkStyleSelected}>Add User</Link>\n                        </RouteTo>\n                    </div>\n                </Grid>\n            </Grid>\n            <div style={{ boxShadow: '0px 3px 6px #00000029' }}>\n                <Grid container className={classes.tableTop}>\n                    {\n                        summary && Object.entries(summary).length > 0 ?\n                            <>\n                                <Grid\n                                    style={{ textAlign: 'center' }}\n                                    item xs={4}>\n                                    <span className={classes.value}>{summary.total_users}</span>\n                                    <span className={classes.label}>TOTAL</span>\n                                </Grid>\n                                {/* <Grid\n                                    style={{ textAlign: 'center' }}\n                                    item xs={3}>\n                                    <span className={classes.value}>{summary.onlineUsers}</span>\n                                    <span className={classes.label}>ONLINE NOW</span>\n                                </Grid> */}\n                                <Grid\n                                    style={{ textAlign: 'center' }}\n                                    item xs={4}>\n                                    <span className={classes.value}>{summary.active_users}</span>\n                                    <span className={classes.label}>ACTIVE</span>\n                                </Grid>\n                                <Grid\n                                    style={{ textAlign: 'center' }}\n                                    item xs={4}>\n                                    <span className={classes.value}>{summary.deactivated_users}</span>\n                                    <span className={classes.label}>INACTIVE</span>\n                                </Grid>\n                            </>\n                            : 'Loading...'\n                    }\n                </Grid>\n                <TableComponent\n                    rows={rowDataFixer(tableStates.rows)}\n                    columns={userTableColumn}\n                    pageSize={tableStates.pageSize}\n                    pageSizes={tableConst}\n                    currentPage={tableStates.currentPage}\n                    totalCount={tableStates.totalCount}\n                    statusOptions={statuses}\n                    // Events\n                    onRowClick={onRowClick}\n                    onFilterChange={onFilterChange}\n                    onCurrentPageChange={onCurrentPageChange}\n                    onPageSizeChange={onPageSizeChange}\n                    onSortingChange={onSortingChange} />\n            </div>\n        </>\n    )\n} ","//#region Global Imports\nimport * as React from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\n// import NEOLink from 'next/link';\n//#endregion Global Imports\n\n//#region Interface Imports\n// import { Heading } from 'Components/UI/Heading';\n// import { Grid } from '@material-ui/core';\nimport { Store } from 'Components/Stores/IStore';\nimport { UsersActions } from './UsersActions';\n// import { IUsersPage } from './IUsersPage';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  Tab,\n  Tabs,\n  Typography,\n} from '@material-ui/core';\nimport { useState } from \"react\";\n// import { UsersTable } from './Sections/UsersTable';\nimport { RolesTableList } from './Sections/UsersTable/RolesTableList';\n// import {UsersTable} from './Sections/UsersTable';\nimport { AccountTabPage } from './Tabs/Account/AccountsTab';\nimport { getLastSegment } from 'Components/app.const'\n// import {GridHorizontalDivider} from \"../../Components/UI\";\n\n//#endregion Interface Imports\nconst page_tab_titles: any = ['Accounts', 'Roles', 'Groups'];\nconst UsersTabs = withStyles({\n  root: {},\n  indicator: {\n    display: 'none',\n  },\n})(Tabs);\n\nconst UsersTab = withStyles({\n  root: {\n    color: 'rgba(39, 46, 76, 0.5)',\n    minWidth: 80,\n    paddingLeft: 24,\n    paddingRight: 24,\n    fontSize: '0.875rem',\n    fontWeight: 400,\n    '&:hover': {\n      color: 'rgba(39, 46, 76, 1)',\n      fontWeight: 400,\n    },\n    '&$selected': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n  },\n  selected: {},\n})(Tab);\n\nconst useStyles = makeStyles(theme => ({\n  gridContainerNoPadding: {\n    padding: theme.spacing(1),\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: 700,\n    color: '#272e4c',\n  },\n  subSectionTitle: {\n    fontSize: 16,\n    fontWeight: 400,\n    color: '#272e4c',\n  },\n  fieldGroupTitle: {\n    fontSize: 13,\n    fontWeight: 700,\n    color: '#272e4c',\n  },\n  // listItemTextRoot: {\n  // \tflex: 'none',\n  // },\n  // listItemTextPrimarySelected: {\n  // \tfontSize: 14,\n  // \tfontWeight: 700,\n  // \tcolor: 'rgba(39, 46, 76, 1)',\n  // \tcursor: 'pointer',\n  // },\n  // listItemTextPrimaryNotSelected: {\n  // \tfontSize: 14,\n  // \tfontWeight: 700,\n  // \tcolor: 'rgba(39, 46, 76, 0.3)',\n  // \tcursor: 'pointer',\n  // },\n  dropzone: {\n    width: '460px',\n    height: '88px',\n    marginTop: '10px',\n    marginBottom: '20px',\n    border: '2px dashed rgba(30, 32, 113, 0.3)',\n    borderRadius: '5px',\n    backgroundColor: '#e6e8ee',\n    color: '#7b8094',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  inputLabel: {\n    color: '#272e4c',\n  },\n  keyboardDatePicker: {\n    marginTop: '10px',\n    marginBottom: '20px',\n    width: '212px',\n  },\n  checkbox: {\n    '&.Mui-checked': {\n      color: '#1e2071',\n    },\n  },\n  radio: {\n    '&.Mui-checked': {\n      color: '#1e2071',\n    },\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n    border: '1px solid #707070',\n    backgroundColor: 'rgba(54, 54, 54, 0.64)',\n    [theme.breakpoints.up('sm')]: {\n      width: 'calc(100% - 72px)',\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  button: {\n    margin: '0 10px',\n    minHeight: '42px',\n    minWidth: '150px',\n  },\n  buttonTitle: {\n    fontWeight: 700,\n    fontSize: 13,\n  },\n  buttonSubTitle: {\n    fontWeight: 400,\n    fontSize: 7,\n  },\n  gridContainer: {\n    backgroundColor: '',\n    minHeight: '100px',\n  },\n  breadCrumbs: {\n    marginBottom: '20px',\n  },\n  headerTitle: {\n    fontSize: '1.5rem',\n    alignItems: 'flex-start',\n    fontWeight: 600,\n    paddingBottom: '20px',\n  },\n  linkPrevious: {\n    fontSize: 12,\n    fontWeight: 300,\n    color: 'black',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n  },\n  sideBar: {\n    borderRight: '1px solid #C3C3C3',\n  },\n  selectedpage: {\n    paddingLeft: '37px',\n  },\n  linkCurrent: {\n    fontSize: 12,\n    fontWeight: 600,\n    color: 'black',\n    cursor: 'pointer',\n  },\n  main: {\n    backgroundColor: '#F5F7FB',\n    padding: '32px 24px',\n  },\n  gridItemLayout: {\n    padding: theme.spacing(1),\n  },\n  avatar: {\n    width: '130px',\n    height: '130px',\n  },\n  linkStyleSelected: {\n    '&:hover': {\n      fontWeight: 'normal'\n    }\n  },\n  sideNavHeader: {\n    fontSize: 13,\n    fontWeight: 700,\n    color: 'rgba(39, 46, 76, 0.3)',\n  },\n  listItemTextRoot: {\n    flex: 'none',\n  },\n  listItemTextPrimarySelected: {\n    fontSize: 14,\n    fontWeight: 700,\n    color: '#2c2e8e',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n  },\n  listItemTextPrimaryNotSelected: {\n    fontSize: 14,\n    color: '#272e4c',\n    cursor: 'pointer',\n  },\n  addFieldIcon: {\n    color: '#3AB77D',\n    cursor: 'pointer',\n    fontSize: '13px',\n    marginRight: '8px',\n  },\n  addACode: {\n    paddingRight: '15px',\n    marginTop: 15,\n    textAlign: 'center',\n  },\n  codeHeader: {\n    color: '#272E4C',\n    textAlign: 'left',\n    // font: 'Medium 16px/22px Usual',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '16px',\n  },\n  codeItems: {\n    color: '#272E4C',\n    textAlign: 'left',\n    // font: 'Regular 12px/14px Usual',\n    opacity: 0.6,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '12px',\n  },\n  codeListItems: {\n    color: '#272E4C',\n    textAlign: 'left',\n    // font: 'Regular 12px/14px Usual',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '12px',\n    // width: '230px',\n    // height: '22px',\n    '&:hover': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n    '&$selected': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n  }\n}));\n\nexport const UsersPage = () => {\n  const [selectedTab, setSelectedTab] = useState(0);\n  // const [sideNav, setSideNav] = useState('information');\n  const classes = useStyles();\n\n  const handleTabChange = (\n    _event: React.ChangeEvent<HTMLDivElement>,\n    tab: number,\n  ) => {\n    setSelectedTab(tab);\n  };\n\n  React.useEffect(() => {\n    if (getLastSegment() === 'roles') {\n      setSelectedTab(1);\n    }\n  }, [])\n\n  return (\n    <div className={classes.main}>\n      <Grid\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n        className={classes.gridContainer}\n      >\n        <Grid item>\n          <Typography className={classes.headerTitle}>Users\n        <UsersTabs\n              value={selectedTab}\n              onChange={handleTabChange}\n              aria-label=\"page tab\"\n            >\n              {page_tab_titles.map((title: string, index: number) => (\n                <UsersTab\n                  label={title}\n                  id={'users_tab_' + index}\n                  aria-controls={'users-tabpanel-' + index}\n                  key={index}\n                />\n              ))}\n            </UsersTabs>\n          </Typography>\n        </Grid>\n      </Grid>\n\n      {/* Headers */}\n\n\n      {/* Body */}\n      <Grid container>\n        <Grid item xs={12} md={12} className={classes.selectedpage}>\n          {\n            selectedTab === 0 ?\n              (<AccountTabPage />)\n              : selectedTab === 1 ?\n                (<RolesTableList classes={classes} />)\n                : null\n          }\n          {/* <UsersTable classes={classes} /> */}\n        </Grid>\n      </Grid>\n\n\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: Store) => state.users;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  Map: bindActionCreators(UsersActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };\n"],"sourceRoot":""}