{"version":3,"sources":["Components/UI/ModalComponent/ModalComponent.tsx","../node_modules/@material-ui/icons/Close.js","Pages/Lookup/Components/Loader/index.tsx","Components/UI/TableComponent/ReactTable.tsx","Components/UI/SubHeader/index.tsx","Components/UI/SideMenu/index.tsx","../node_modules/@material-ui/system/esm/merge.js","../node_modules/@material-ui/system/esm/css.js","../node_modules/@material-ui/system/esm/compose.js","../node_modules/@material-ui/system/esm/breakpoints.js","../node_modules/@material-ui/system/esm/style.js","../node_modules/@material-ui/system/esm/borders.js","../node_modules/@material-ui/system/esm/display.js","../node_modules/@material-ui/system/esm/flexbox.js","../node_modules/@material-ui/system/esm/positions.js","../node_modules/@material-ui/system/esm/palette.js","../node_modules/@material-ui/system/esm/shadows.js","../node_modules/@material-ui/system/esm/sizing.js","../node_modules/@material-ui/system/esm/spacing.js","../node_modules/@material-ui/system/esm/memoize.js","../node_modules/@material-ui/system/esm/typography.js","../node_modules/@material-ui/core/esm/styles/styled.js","../node_modules/@material-ui/core/esm/Box/Box.js","Pages/AddRoles/ActionConsts.ts","Pages/AddRoles/RolesActions.ts","Pages/AddRoles/Components/Policies.tsx","Pages/AddRoles/Components/AddUserRoleBody.tsx","Pages/AddRoles/Components/AddGroupRoleBody.tsx","Pages/AddRoles/Components/GroupsAndUsers.tsx","Pages/AddRoles/AddRolesPage.tsx"],"names":["useStyles","makeStyles","theme","dialog","dialogAction","marginBottom","spacing","marginTop","justifyContent","dialogContentContainer","width","container","paddingRight","paddingLeft","closeButton","position","right","top","color","palette","grey","dialogTitle","fontSize","fontWeight","ModalComponent","props","classes","open","isModalOpen","onClose","aria-labelledby","maxWidth","className","justify","alignItems","direction","item","xs","disableTypography","id","title","aria-label","onClick","message","children","undefined","buttons","defaultProps","_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","root","height","zIndex","bottom","left","textAlign","backgroundColor","outline","display","flexDirection","Loader","size","FilterCell","filter","onFilter","filteringEnabled","column","name","style","padding","labelWidth","onChange","e","target","placeholder","SortingIcon","marginLeft","icon","faSortUp","faSortDown","SortLabel","onSort","hideSortIcon","textOverflow","overflow","faSort","groupIconContentCell","expanded","verticalAlign","faAngleUp","faAngleDown","ReactTable","rows","columns","disableSort","disableFilter","enableGrouping","groupColumnName","viewOnly","columnExtensions","sortingStateColumnExtensions","defaultSorting","onDeleteRow","enableSelection","enableSelectAll","onRowClick","totalCount","onPageChange","currentPage","pageSize","onSetPageSize","onCheckRow","onSelectGroup","loading","defaultFilters","onSortingChange","enableOpenGroupTotalChecked","React","selection","setSelection","pageSizes","sorting","setSorting","selectCell","row","onToggle","faMinusSquare","checkedIcon","faCheckSquare","checked","stopPropagation","onCurrentPageChange","onPageSizeChange","onSelectionChange","grouping","columnName","filters","onFiltersChange","onFilterChange","messages","noData","cellComponent","faMinusCircle","showSortingControls","sortLabelComponent","highlightRow","selectByRowClick","showSelectAll","showSelectionColumn","contentComponent","isChecked","countChecked","countItems","map","data","iconComponent","groupNameChecked","grayBg","mainContainer","sectionTitle","subSectionTitle","editBtn","alignRight","menuList","menuLink","LinkActive","textDecoration","SubHeader","buttonName","headingTitle","breadCrumbsArray","buttonFunc","layoutType","menuItemsArray","activeItems","enableButton","activeClass","setActiveClass","gutterBottom","length","crumbs","i","to","link","margin","classNames","itemName","index","variant","sideBarLists","listStyle","sideBarLink","sideBarLinkDisabled","pointerEvents","SideMenu","items","setActiveItem","useState","useEffect","reset","label","disabled","acc","clone","styleFunction","newStyleFunction","output","css","input","fields","keys","forEach","prop","indexOf","omit","filterProps","propTypes","concat","_len","arguments","styles","Array","_key","fn","reduce","values","sm","md","lg","xl","defaultBreakpoints","up","key","handleBreakpoints","propValue","styleFromPropValue","isArray","themeBreakpoints","breakpoints","_themeBreakpoints","breakpoint","getPath","obj","path","split","options","_options$cssProperty","cssProperty","themeKey","transform","themeMapping","propValueFinal","getBorder","minWidth","maxHeight","minHeight","properties","m","p","directions","t","r","b","l","x","y","aliases","marginX","marginY","paddingX","paddingY","getCssProperties","cache","arg","memoize","_prop$split","_prop$split2","a","property","dir","spacingKeys","getStyleFromPropValue","cssProperties","transformer","transformed","Math","abs","getValue","themeSpacing","getTransformer","Component","componentCreator","defaultTheme","positions","shadows","Box","ActionConsts","ResetReducer","SetReducer","RolesActions","payload","type","Policies","moduleName","rbacList","onChangeModuleName","roleId","onUpdateChange","isAddedModalRole","setIsAddedModalRole","moduleValue","setModuleValue","isModuleModalOpen","setIsModuleModalOpen","moduleLabel","setModuleLabel","effectivityDate","setEffectivityDate","expiryDate","setExpiryDate","description","setDescription","roleName","setRoleName","isModalConfirmChangeModule","setIsModalConfirmChangeModule","newRbacList","setNewRbacList","setLoading","setDefaultFilters","isModalDeleteSuccessOpen","setIsModalDeleteSuccessOpen","isModalCannotEditOpen","setIsModalCannotEditOpen","isProcessMaker","setIsProcessMaker","required","isError","minDate","errorFields","setErrorFields","moduleItems","handleUpdateCheck","rbac","module","role_id","effectivity_date","moment","Date","toISOString","status","is_processmaker","Grid","InputLabel","inputLabel","htmlFor","Typography","Link","error","onBlur","console","log","Checkbox","views","format","inputVariant","ReactSearch","onSearch","_id","handleOnCheckRow","setTimeout","group","handleOnCheckGroup","Button","button","menuItems","Number","handleContinueRole","selectedItems","borderRadius","xIcon","AddUserRoleBody","handleOnSearch","list","arr","state","push","setState","handleRemoveItem","splice","handleOnSaveItems","onSave","comboArray","this","buttonsContainer","selectedContainer","selectedText","saveButton","cancelButton","searchLabel","comboBoxMode","comboListsArray","faTimesCircle","AddGroupRoleBody","getAllGroups","then","res","body","newChoices","c","beauty","GroupsAndUsers","openSideModalBlock","activeItem","groupShowBlock","setGroupShowBlock","userShowBlock","setUserShowBlock","isModalRemoveOpen","setIsModalRemoveOpen","isModalRemoveSuccessOpen","setIsModalSuccessRemoveOpen","isModalSuccessUserGroupOpen","setIsModalSuccessGroupOpen","isModalSuccessUserAccountOpen","setIsModalSuccessUserOpen","isModalRemoveSuccessUserAccountOpen","setIsModalSuccessRemoveUserOpen","onSaveAddRole","handleMenuClick","group_id","users_in_group","wordWrapEnabled","align","sortingEnabled","username","user_account","last_activity_date","handleClose","showBlock","main","headMain","gridContainer","paddingBottom","gridContainerNoPadding","sideBarContainer","borderRight","contentContainer","fieldGroupTitle","listItemTextRoot","flex","listItemTextPrimarySelected","cursor","listItemTextPrimaryNotSelected","dropzone","border","keyboardDatePicker","checkbox","radio","appBar","grow","flexGrow","buttonTitle","buttonSubTitle","AddRolesPage","isModalConfirmExitOpen","setIsModalConfirmExitOpen","isModalConfirmSaveOpen","setIsModalConfirmSaveOpen","isModalSaveSuccessOpen","setIsmodalSaveSuccessOpen","setModuleName","setRbacList","breadCrumbs","setBreadCrumbs","rbacCount","setRbacCount","setRoleId","policyData","setPolicyData","location","from","handleGetRbacCount","handGetRbacList","getRbacCount","generateRoleId","count","catch","err","alert","getRbacList","response","activeSideBarItem","handleModalConfirmationClose","onNavigateSideMenu","handleChangeModuleName","createRoleRbac","history","pathname","handleOnSave","mapStateToProps","roles","mapDispatchToProps","dispatch","Map","bindActionCreators"],"mappings":"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","file":"static/js/4.31521c00.chunk.js","sourcesContent":["import React, { FC } from 'react';\n// import Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\n\nimport { IModalComponent } from './IModalComponent';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tdialog: {},\n\tdialogAction: {\n\t\tmarginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        justifyContent:'center'\n\t},\n\tdialogContentContainer: {\n        width: '100%'\n\t},\n\tcontainer: {\n        paddingRight:'15px',\n        paddingLeft:'15px',\n        width: '450px'\n\t},\n\tcloseButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n\t},\n\tdialogTitle: {\n        marginTop: theme.spacing(2),\n        // marginBottom: theme.spacing(2),\n        fontSize: '16px',\n        color: '#272E4C',\n\t\tfontWeight: 700\n    },\n}));\n\nexport const ModalComponent: FC<IModalComponent.IProps> = props => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={props.isModalOpen}\n\t\t\tonClose={props.onClose}\n\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\tmaxWidth=\"sm\"\n\t\t\tclassName={classes.dialog}\n\t\t> \n\t\t\t <div>\n                <Grid container className={classes.container} justify=\"flex-start\" alignItems=\"flex-start\" direction=\"column\">\n                    <Grid item xs>\n\t\t\t\t\t\t<DialogTitle className={classes.dialogTitle} disableTypography={false} id=\"form-dialog-title\" >\n\t\t\t\t\t\t\t<Box fontWeight={700}>{props.title}</Box>\n\t\t\t\t\t\t\t<IconButton aria-label=\"close\" className={classes.closeButton} onClick={props.onClose}>\n                                <CloseIcon />\n                            </IconButton>\n\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs className={classes.dialogContentContainer}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\tprops.message ? \n\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"flex-start\">\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t{props.message}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</DialogContent> : null\n\t\t\t\t\t\t} \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprops.children ? props.children : null\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<DialogActions className={classes.dialogAction}>\n\t\t\t\t\t\t\t{ props.buttons !== undefined ?\n\t\t\t\t\t\t\t\tprops.buttons: null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t</Grid>\n                </Grid>\n\t\t\t</div>\n\t\t</Dialog>\n\t);\n};\n\nModalComponent.defaultProps = {\n\tisModalOpen: false,\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import * as React from 'react';\nimport { CircularProgress } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface LoaderProps {\n}\n\nconst useStyles = makeStyles({\n\troot: {\n        position: 'fixed',\n        width: '100%',\n        height: '100%',\n        zIndex: 9999,\n        right: '0px',\n        bottom: '0px',\n        top: '0px',\n        left: '0px',\n        textAlign: \"center\",\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    },\n    container:{\n        height: '100%',\n        outline: 0,\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        flexDirection: 'column'\n    }\n});\n\nexport const Loader: React.FC<LoaderProps> = (): JSX.Element => {\n    // const buttonclasses = ButtonStyle();\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <div className={classes.container}>\n                <CircularProgress size={150}/>\n            </div>\n        </div>\n    )\n}\n\nLoader.defaultProps = {}","import * as React from 'react';\n// import { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n    FilteringState,\n    IntegratedFiltering,\n    SortingState,\n    IntegratedSorting,\n    IntegratedGrouping,\n    GroupingState,\n    SelectionState,\n    // IntegratedPaging,\n    PagingState,\n    CustomPaging,\n} from '@devexpress/dx-react-grid';\nimport {\n    Grid,\n    Table,\n    //   Toolbar,\n    TableHeaderRow,\n    TableFilterRow,\n    TableGroupRow,\n    TableSelection,\n    PagingPanel,\n    // TableFixedColumns,\n} from '@devexpress/dx-react-grid-material-ui';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    // faSearch,\n    faCheckSquare,\n    faMinusSquare,\n    faSort,\n    faSortUp,\n    faSortDown,\n    faMinusCircle,\n    faAngleDown,\n    faAngleUp,\n    // faPlus,\n    // faCheck, \n    // faTimes\n} from '@fortawesome/free-solid-svg-icons';\nimport * as MaterialUI from '@material-ui/core';\nimport { Loader } from 'Pages/Lookup/Components/Loader';\nimport './ReactTable.scss';\n\n// import { ReactSearch } from '../SearchBar/ReactSearch';\n\nexport interface IReactTableProps {\n    rows: any,\n    columns: any,\n    disableSort?: boolean,\n    disableFilter?: boolean,\n    enableGrouping?: boolean,\n    enableSelection?: boolean,\n    enableSelectAll?: boolean,\n    enableOpenGroupTotalChecked?: boolean,\n    groupColumnName?: string,\n    viewOnly?: boolean,\n    columnExtensions?: any[],\n    message?: string,\n    sortingStateColumnExtensions?: any[],\n    defaultSorting?: any[],\n    totalCount?: number,\n    currentPage?: number,\n    pageSize?: number,\n    groupNameChecked?: any,\n    loading?: boolean,\n    defaultFilters?: any,\n    onDeleteRow?: (row) => void,\n    onRowClick?: (row) => void,\n    onPageChange?: (page) => void,\n    onSetPageSize?: (size) => void,\n    onCheckRow?: (row) => void,\n    onSelectGroup?: (group) => void,\n    onFilterChange?: (filter) => void,\n    onSortingChange?: (sort) => void,\n\n}\n\nconst defaultProps: IReactTableProps = {\n    rows: [],\n    columns: [],\n    disableSort: false,\n    disableFilter: false,\n    enableGrouping: false,\n    enableSelection: false,\n    enableSelectAll: false,\n    enableOpenGroupTotalChecked: false,\n    groupColumnName: '',\n    viewOnly: true,\n    columnExtensions: [],\n    message: '',\n    sortingStateColumnExtensions: [],\n    defaultSorting: [],\n    totalCount: 0,\n    currentPage: 0,\n    pageSize: 0,\n    groupNameChecked: [],\n    loading: false,\n}\n\nconst FilterCell = ({ filter, onFilter, filteringEnabled, classes, column }: any) => {\n    if (filteringEnabled) {\n        if (column.name === 'action_delete') {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n                </MaterialUI.TableCell>\n            )\n        } else {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n                    <MaterialUI.OutlinedInput\n                        classes={classes}\n                        style={{ width: '100%' }}\n                        value={filter ? filter.value : ''}\n                        labelWidth={0}\n                        onChange={e => onFilter(e.target.value ? { value: e.target.value } : null)}\n                        placeholder=\"\"\n                    />\n                </MaterialUI.TableCell>\n            );\n        }\n    }\n    return null;\n}\n\nconst SortingIcon = ({ direction }: any) =>\n    direction === 'asc' ? (\n        <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortUp} />\n    ) : (\n            <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortDown} />\n        );\n\nconst SortLabel = ({ column, onSort, children, direction }: any) => {\n    if (column.name === 'action_delete') {\n        return null;\n    } else {\n        return (\n            <MaterialUI.TableSortLabel hideSortIcon={true} onClick={onSort} style={{ textOverflow: \"ellipsis\", overflow: \"hidden\" }}>\n                {children}\n                {direction ? (\n                    <SortingIcon direction={direction} />\n                ) : (\n                        <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSort} />\n                    )}\n            </MaterialUI.TableSortLabel>\n        );\n    }\n};\n\n\nconst groupIconContentCell = ({expanded}: any) => {\n    return (\n        <>\n            <div style={{padding: '8.5px 12px', display:'table-cell', verticalAlign:'middle'}} > \n                <FontAwesomeIcon \n                    icon={expanded ? faAngleUp : faAngleDown} \n                    size={'2x'}\n                    color={\"rgba(0, 0, 0, 0.54)\"}\n                />       \n            </div>\n        </>\n    )\n}\n\n\n\nexport const ReactTable: React.FC<IReactTableProps> = (props: IReactTableProps): JSX.Element => {\n    const {\n        rows,\n        columns,\n        disableSort,\n        disableFilter,\n        enableGrouping,\n        groupColumnName,\n        viewOnly,\n        message,\n        columnExtensions,\n        sortingStateColumnExtensions,\n        defaultSorting,\n        onDeleteRow,\n        enableSelection,\n        enableSelectAll,\n        onRowClick,\n        totalCount,\n        onPageChange,\n        currentPage,\n        pageSize,\n        onSetPageSize,\n        onCheckRow,\n        onSelectGroup,\n        // groupNameChecked,\n        loading,\n        defaultFilters,\n        onSortingChange,\n        enableOpenGroupTotalChecked\n    } = props;\n\n    const [selection, setSelection] = React.useState<any>([])\n    const [pageSizes] = React.useState([5, 10, 15]);\n    const [sorting, setSorting ] = React.useState([])\n    // const [pageSize, setPageSize] = React.useState(10);\n    // console.log(onCheckRow, onSelectGroup)\n\n    const setSortingMethod = (e : any) => {\n        onSortingChange && onSortingChange(e)\n        setSorting(e);\n    }\n    const handleSelectionChange = (row : any[]) => {\n        if (onRowClick) {\n            if (!enableSelection) {\n                onRowClick(row[0]);\n            }\n        } else {\n            setSelection(row);\n        }\n    }\n\n    const selectCell = ({row, onToggle}: any) => {\n        return (\n            <MaterialUI.TableCell>\n                <MaterialUI.Checkbox\n                    icon={<FontAwesomeIcon icon={faMinusSquare} />}\n                    checkedIcon={<FontAwesomeIcon icon={faCheckSquare} />}\n                    checked={row.checked}\n                    onClick={(e: any)=> {\n                        e.stopPropagation();\n                        onToggle();\n                        onCheckRow && onCheckRow(row);\n                    }}\n                />\n            </MaterialUI.TableCell>\n        )\n    }\n\n\nconst groupContentCell = ({row}: any) => {\n    \n    let isChecked = false;\n    let countChecked = 0;\n    let countItems = 0;\n    rows.map(data => {\n        if (data.name === row.value) {\n            countItems++;\n            if (data.checked) {\n                isChecked = true;\n                countChecked++;\n            }\n        }\n    })\n    \n    if (!viewOnly) {\n        return (\n            <>\n                <div style={{padding: '8.5px 15.5px', display:'table-cell', verticalAlign:'middle'}} > \n                    <MaterialUI.Checkbox\n                        icon={<FontAwesomeIcon icon={faMinusSquare} />}\n                        checkedIcon={<FontAwesomeIcon icon={faCheckSquare} />}\n                        checked={isChecked}\n                        onClick={e => {\n                            e.stopPropagation();\n                            onSelectGroup && onSelectGroup(row.value)\n                        }}\n                />\n                </div>\n                <div style={{padding: '8.5px 2px', display:'table-cell', verticalAlign:'middle'}} >\n                    <span>{row.value}</span>\n                </div>\n                <div style={{padding: '8.5px 30px', display:'table-cell', verticalAlign:'middle'}} >\n                    <span>{countChecked}/{countItems}</span>\n                </div>\n            </>\n        )\n    } else if (viewOnly && enableOpenGroupTotalChecked) {\n        return (\n            <>\n                <div style={{padding: '8.5px 2px', display:'table-cell', verticalAlign:'middle'}} >\n                    <span>{row.value}</span>\n                </div>\n                <div style={{padding: '8.5px 30px', display:'table-cell', verticalAlign:'middle'}} >\n                    <span>{countChecked}/{countItems}</span>\n                </div>\n            </>\n        )\n    } else {\n        return (\n            <div style={{padding: '8.5px 2px', display:'table-cell', verticalAlign:'middle'}} >\n                    <span>{row.value}</span>\n            </div>\n        )\n    }\n    \n}\n\n    const tableCell = ({ value, row, column }: any) => {\n        if (column.name === 'action_delete') {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 30px 8px 10px', textAlign: 'right' }}>\n                    <span\n                        onClick={() => {\n                            onDeleteRow && onDeleteRow(row)\n                        }}>\n\n                        <FontAwesomeIcon\n                            icon={faMinusCircle}\n                        />\n                    </span>\n\n                </MaterialUI.TableCell>\n            )\n        } else {\n            return (\n                <MaterialUI.TableCell>\n                    {value}\n                </MaterialUI.TableCell>\n            )\n        }\n    }\n\n\n    return (\n        <div style={{ padding: '10px 0' }}>\n            <Paper>\n                <Grid\n                    rows={rows}\n                    columns={columns}\n                >\n                    <PagingState\n                        currentPage={currentPage}\n                        onCurrentPageChange={onPageChange}\n                        pageSize={pageSize}\n                        onPageSizeChange={onSetPageSize}\n                    />\n                    <CustomPaging\n                        totalCount={totalCount}\n                    />\n                    {!disableSort && onSortingChange ? (\n                        <SortingState\n                            defaultSorting={defaultSorting}\n                            columnExtensions={sortingStateColumnExtensions}\n                            sorting={sorting}\n                            onSortingChange={setSortingMethod}\n                        />\n                    ) : !disableSort ? (\n                        <SortingState\n                          defaultSorting={[]}\n                        />\n                    ) : null}\n                    {!viewOnly ? <SelectionState\n                        selection={selection}\n                        onSelectionChange={handleSelectionChange}\n                    /> : null}\n                    {enableGrouping && groupColumnName ? <GroupingState grouping={[{ columnName: groupColumnName }]} /> : null}\n                    {!disableFilter ? \n                    <FilteringState \n                        defaultFilters={[]} \n                        filters={defaultFilters !== undefined ? defaultFilters : []}\n                        onFiltersChange={props.onFilterChange}\n                    /> : null}\n                    {/* <IntegratedPaging /> */}\n                    {!defaultFilters && !disableFilter ? <IntegratedFiltering /> : null}\n                    {!disableSort ? <IntegratedSorting /> : null}\n                    {enableGrouping ? <IntegratedGrouping /> : null}\n                    <Table\n                        columnExtensions={columnExtensions}\n                        messages={{ noData: message }}\n                        cellComponent={tableCell}\n                    />\n                    <TableHeaderRow\n                        showSortingControls={!disableSort}\n                        sortLabelComponent={SortLabel}\n                    />\n                    {/* <TableFixedColumns /> */}\n                    <PagingPanel\n                        pageSizes={pageSizes}\n                    />\n                    {!viewOnly ? \n                        <TableSelection \n                            highlightRow \n                            selectByRowClick\n                            showSelectAll={enableSelectAll ? true : undefined} \n                            cellComponent={!loading ? selectCell : selectCell} \n                            showSelectionColumn={enableSelection}\n                        /> : null}\n                    \n                    {enableGrouping ? \n                        <TableGroupRow \n                            contentComponent={groupContentCell}\n                            iconComponent={groupIconContentCell}\n                        ></TableGroupRow>: null}\n                    {!disableFilter ? <TableFilterRow cellComponent={FilterCell} /> : null}\n                </Grid>\n                {\n                    loading &&\n                    <Loader />\n                } \n            </Paper>\n        </div>\n    )\n}\n\nReactTable.defaultProps = defaultProps;","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\nimport { Link } from '@material-ui/core';\nimport { Link as RouteLink } from 'react-router-dom'\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles({\n\tgrayBg: {\n\t\tbackgroundColor: '#F5F7FB',\n\t\tpadding: '25px 24px'\n\t},\n\tmainContainer: {\n\t\tpadding: '25px 24px'\n\t},\n\tsectionTitle: {\n\t\tfontSize: 24,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tsubSectionTitle: {\n\t\tfontSize: 14,\n\t\tfontWeight: 400,\n\t\tcolor: '#272e4c',\n\t},\n\teditBtn: {\n\t\twidth: '135px',\n\t\tfontSize: '14px',\n\t\tcolor: '#fff',\n\t},\n\talignRight: {\n\t\ttextAlign: 'right',\n\t},\n\tmenuList: {\n\t\tdisplay: \"inline-block\",\n\t\tpadding: \"10px 45px 10px 0\"\n\t},\n\tmenuLink: {\n\t\tcolor: \"#929292\",\n\t\tdisplay: \"block\",\n\t\tfontSize: \"1.10em\",\n\t\t'&:hover': {\n\t\t\tcolor: \"#3ab77d\",\n\t\t}\n\t},\n\tLinkActive: {\n\t\tcolor: \"#3ab77d\",\n\t\tfontWeight: \"bold\",\n\t\ttextDecoration: \"underline\"\n\t}\n});\n\n\ninterface SubHeaderProps {\n\theadingTitle: string;\n\tbreadCrumbsArray: any[],\n\tbuttonName?: string,\n\tlayoutType?: string,\n\tmenuItemsArray?: any,\n\tenableButton?: boolean\n\tbuttonFunc?: () => void,\n\tactiveItems?: (item) => void,\n\n}\n\nexport const SubHeader: React.FC<SubHeaderProps> = (\n\tprops: SubHeaderProps,\n): JSX.Element | null => {\n\tconst {\n\t\tbuttonName,\n\t\theadingTitle,\n\t\tbreadCrumbsArray,\n\t\tbuttonFunc,\n\t\tlayoutType,\n\t\tmenuItemsArray,\n\t\tactiveItems,\n\t\tenableButton\n\t} = props\n\tconst classes = useStyles();\n\tconst [activeClass, setActiveClass] = React.useState(0);\n\n\n\tconst menulinkClick = (itemName, index) => {\n\t\tactiveItems !== undefined && activeItems(itemName)\n\t\tsetActiveClass(index)\n\t}\n\n\n\n\n\treturn (\n\t\t<>\n\t\t\t<div className={layoutType === 'layout_1' ? classes.mainContainer : classes.grayBg}>\n\t\t\t\t<Grid container xs={12} alignItems={'center'} >\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlayoutType === 'layout_1' &&\n\t\t\t\t\t\t\t<Typography gutterBottom className={classes.subSectionTitle}>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbreadCrumbsArray && breadCrumbsArray.length > 0 && breadCrumbsArray.map((crumbs, i) => (\n\t\t\t\t\t\t\t\t\t\tbreadCrumbsArray.length === i + 1 ? <b>{crumbs.name ? crumbs.name : crumbs}</b> : <><RouteLink to={`${crumbs.link ? crumbs.link : ''}`} style={{ color: '#272E4C', textDecoration: 'none' }}>{crumbs.name ? crumbs.name : crumbs}</RouteLink> / </>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Typography gutterBottom className={classes.sectionTitle}>\n\t\t\t\t\t\t\t{headingTitle}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlayoutType === 'layout_2' &&\n\t\t\t\t\t\t\t<ul style={{ padding: '0', margin: '0' }}>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmenuItemsArray.length > 0 && menuItemsArray.map((item, i) => (\n\t\t\t\t\t\t\t\t\t\t<li className={classes.menuList}>\n\t\t\t\t\t\t\t\t\t\t\t<Link className={classNames(classes.menuLink, activeClass === i ? classes.LinkActive : null)} onClick={() => menulinkClick(item.name, i)}>{item.name}</Link>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6} className={classes.alignRight}>\n\t\t\t\t\t\t{enableButton ?\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tid=\"button-id\"\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.editBtn}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tbuttonFunc !== undefined && buttonFunc()\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t{buttonName}\n\t\t\t\t\t\t\t</Button> : ''}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t</>\n\t)\n}","import * as React from 'react';\nimport { Link, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles({\n\tsideBarLists: {\n\t\tpadding: 0,\n\t\tmargin: 0,\n        listStyle: 'none',\n        position: 'sticky',\n        top: 20\n\t},\n\tsideBarLink: {\n\t\tcolor: \"#272e4c\",\n\t\tmargin: \"0 0 10px\",\n\t\tdisplay: \"block\"\n    },\n    sideBarLinkDisabled: {\n        color: \"rgba(39, 46, 76, 0.6)\",\n\t\tmargin: \"0 0 10px\",\n        display: \"block\",\n        pointerEvents: 'none'\n    },\n    LinkActive: {\n        color: \"#2C2E8E\",\n        fontWeight: \"bold\",\n        textDecoration: \"underline\"\n    }\n});\n\nexport interface ISideMenuProps {\n    items: any,\n    activeItems: (item) => void,\n    reset?: any,\n    setActiveItem?: number,\n}\n\nexport const SideMenu : React.FC<ISideMenuProps> = (props: ISideMenuProps): JSX.Element => {\n    const {items , activeItems, setActiveItem} = props;\n    const [activeClass, setActiveClass] = useState(0);\n    const classes = useStyles();\n    useEffect(() => {\n        // resets the active item to zero when\n        // the reset props changes\n        setActiveItem && setActiveClass(setActiveItem)\n        if(props.reset !== undefined){\n            setActiveClass(0)\n            activeItems(items[0].name)\n        }\n    }, [props.reset])\n\n    const sideBarlinkClick = (itemName, index) => {\n        activeItems(itemName)\n        setActiveClass(index)\n    }\n\n    return (\n        <>\n            <ul className={classes.sideBarLists}>\n                {\n                    items.map((item, i) => (\n                        <li>\n                            {\n                                item.label !== undefined &&\n                                <Typography variant={'subtitle2'} style={{color:'#929292', fontSize: '12px'}}>{ item.label }</Typography>\n                            }\n                            {\n                                !item.disabled ? \n                                 <Link \n                                    className={classNames(classes.sideBarLink, setActiveItem ? setActiveItem === i ?  classes.LinkActive : null : activeClass === i ? classes.LinkActive : null)} \n                                    onClick={() => sideBarlinkClick(item.name, i)}\n                                >\n                                    { item.name } \n                                </Link> :\n                                <Link\n                                    className={classNames(classes.sideBarLinkDisabled)}\n                                >\n                                    { item.name }\n                                </Link>\n                            }\n                        </li>\n                    ))\n                }\n            </ul>\n        </>\n    )\n}","import deepmerge from 'deepmerge'; // < 1kb payload overhead when lodash/merge is > 3kb.\n\nfunction merge(acc, item) {\n  if (!item) {\n    return acc;\n  }\n\n  return deepmerge(acc, item, {\n    clone: false // No need to clone deep, it's way faster.\n\n  });\n}\n\nexport default merge;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport merge from './merge';\n\nfunction omit(input, fields) {\n  var output = {};\n  Object.keys(input).forEach(function (prop) {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n}\n\nfunction css(styleFunction) {\n  var newStyleFunction = function newStyleFunction(props) {\n    var output = styleFunction(props);\n\n    if (props.css) {\n      return _extends({}, merge(output, styleFunction(_extends({\n        theme: props.theme\n      }, props.css))), {}, omit(props.css, [styleFunction.filterProps]));\n    }\n\n    return output;\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    css: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['css'].concat(_toConsumableArray(styleFunction.filterProps));\n  return newStyleFunction;\n}\n\nexport default css;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport merge from './merge';\n\nfunction compose() {\n  for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {\n    styles[_key] = arguments[_key];\n  }\n\n  var fn = function fn(props) {\n    return styles.reduce(function (acc, style) {\n      var output = style(props);\n\n      if (output) {\n        return merge(acc, output);\n      }\n\n      return acc;\n    }, {});\n  }; // Alternative approach that doesn't yield any performance gain.\n  // const handlers = styles.reduce((acc, style) => {\n  //   style.filterProps.forEach(prop => {\n  //     acc[prop] = style;\n  //   });\n  //   return acc;\n  // }, {});\n  // const fn = props => {\n  //   return Object.keys(props).reduce((acc, prop) => {\n  //     if (handlers[prop]) {\n  //       return merge(acc, handlers[prop](props));\n  //     }\n  //     return acc;\n  //   }, {});\n  // };\n\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? styles.reduce(function (acc, style) {\n    return _extends(acc, style.propTypes);\n  }, {}) : {};\n  fn.filterProps = styles.reduce(function (acc, style) {\n    return acc.concat(style.filterProps);\n  }, []);\n  return fn;\n}\n\nexport default compose;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport warning from 'warning';\nimport PropTypes from 'prop-types';\nimport merge from './merge'; // The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\n\nvar values = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920\n};\nvar defaultBreakpoints = {\n  // Sorted ASC by size. That's important.\n  // It can't be configured as it's used statically for propTypes.\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n  up: function up(key) {\n    return \"@media (min-width:\".concat(values[key], \"px)\");\n  }\n};\nexport function handleBreakpoints(props, propValue, styleFromPropValue) {\n  process.env.NODE_ENV !== \"production\" ? warning(props.theme, '@material-ui/system: you are calling a style function without a theme value.') : void 0;\n\n  if (Array.isArray(propValue)) {\n    var themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce(function (acc, item, index) {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n\n  if (_typeof(propValue) === 'object') {\n    var _themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n\n    return Object.keys(propValue).reduce(function (acc, breakpoint) {\n      acc[_themeBreakpoints.up(breakpoint)] = styleFromPropValue(propValue[breakpoint]);\n      return acc;\n    }, {});\n  }\n\n  var output = styleFromPropValue(propValue);\n  return output;\n}\n\nfunction breakpoints(styleFunction) {\n  var newStyleFunction = function newStyleFunction(props) {\n    var base = styleFunction(props);\n    var themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    var extended = themeBreakpoints.keys.reduce(function (acc, key) {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction(_extends({\n          theme: props.theme\n        }, props[key]));\n      }\n\n      return acc;\n    }, null);\n    return merge(base, extended);\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    xs: PropTypes.object,\n    sm: PropTypes.object,\n    md: PropTypes.object,\n    lg: PropTypes.object,\n    xl: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl'].concat(_toConsumableArray(styleFunction.filterProps));\n  return newStyleFunction;\n}\n\nexport default breakpoints;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\n\nfunction getPath(obj, path) {\n  if (!path || typeof path !== 'string') {\n    return null;\n  }\n\n  return path.split('.').reduce(function (acc, item) {\n    return acc && acc[item] ? acc[item] : null;\n  }, obj);\n}\n\nfunction style(options) {\n  var prop = options.prop,\n      _options$cssProperty = options.cssProperty,\n      cssProperty = _options$cssProperty === void 0 ? options.prop : _options$cssProperty,\n      themeKey = options.themeKey,\n      transform = options.transform;\n\n  var fn = function fn(props) {\n    if (props[prop] == null) {\n      return null;\n    }\n\n    var propValue = props[prop];\n    var theme = props.theme;\n    var themeMapping = getPath(theme, themeKey) || {};\n\n    var styleFromPropValue = function styleFromPropValue(propValueFinal) {\n      var value;\n\n      if (typeof themeMapping === 'function') {\n        value = themeMapping(propValueFinal);\n      } else if (Array.isArray(themeMapping)) {\n        value = themeMapping[propValueFinal];\n      } else {\n        value = getPath(themeMapping, propValueFinal) || propValueFinal;\n\n        if (transform) {\n          value = transform(value);\n        }\n      }\n\n      if (cssProperty === false) {\n        return value;\n      }\n\n      return _defineProperty({}, cssProperty, value);\n    };\n\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  };\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? _defineProperty({}, prop, responsivePropType) : {};\n  fn.filterProps = [prop];\n  return fn;\n}\n\nexport default style;","import style from './style';\nimport compose from './compose';\n\nfunction getBorder(value) {\n  if (typeof value !== 'number') {\n    return value;\n  }\n\n  return \"\".concat(value, \"px solid\");\n}\n\nexport var border = style({\n  prop: 'border',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderTop = style({\n  prop: 'borderTop',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderRight = style({\n  prop: 'borderRight',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderBottom = style({\n  prop: 'borderBottom',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderLeft = style({\n  prop: 'borderLeft',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderColor = style({\n  prop: 'borderColor',\n  themeKey: 'palette'\n});\nexport var borderRadius = style({\n  prop: 'borderRadius',\n  themeKey: 'shape'\n});\nvar borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderRadius);\nexport default borders;","import style from './style';\nimport compose from './compose';\nexport var displayPrint = style({\n  prop: 'displayPrint',\n  cssProperty: false,\n  transform: function transform(value) {\n    return {\n      '@media print': {\n        display: value\n      }\n    };\n  }\n});\nexport var displayRaw = style({\n  prop: 'display'\n});\nexport var overflow = style({\n  prop: 'overflow'\n});\nexport var textOverflow = style({\n  prop: 'textOverflow'\n});\nexport var visibility = style({\n  prop: 'visibility'\n});\nexport var whiteSpace = style({\n  prop: 'whiteSpace'\n});\nexport default compose(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace);","import style from './style';\nimport compose from './compose';\nexport var flexBasis = style({\n  prop: 'flexBasis'\n});\nexport var flexDirection = style({\n  prop: 'flexDirection'\n});\nexport var flexWrap = style({\n  prop: 'flexWrap'\n});\nexport var justifyContent = style({\n  prop: 'justifyContent'\n});\nexport var alignItems = style({\n  prop: 'alignItems'\n});\nexport var alignContent = style({\n  prop: 'alignContent'\n});\nexport var order = style({\n  prop: 'order'\n});\nexport var flex = style({\n  prop: 'flex'\n});\nexport var flexGrow = style({\n  prop: 'flexGrow'\n});\nexport var flexShrink = style({\n  prop: 'flexShrink'\n});\nexport var alignSelf = style({\n  prop: 'alignSelf'\n});\nexport var justifyItems = style({\n  prop: 'justifyItems'\n});\nexport var justifySelf = style({\n  prop: 'justifySelf'\n});\nvar flexbox = compose(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf);\nexport default flexbox;","import style from './style';\nimport compose from './compose';\nexport var position = style({\n  prop: 'position'\n});\nexport var zIndex = style({\n  prop: 'zIndex',\n  themeKey: 'zIndex'\n});\nexport var top = style({\n  prop: 'top'\n});\nexport var right = style({\n  prop: 'right'\n});\nexport var bottom = style({\n  prop: 'bottom'\n});\nexport var left = style({\n  prop: 'left'\n});\nexport default compose(position, zIndex, top, right, bottom, left);","import style from './style';\nimport compose from './compose';\nexport var color = style({\n  prop: 'color',\n  themeKey: 'palette'\n});\nexport var bgcolor = style({\n  prop: 'bgcolor',\n  cssProperty: 'backgroundColor',\n  themeKey: 'palette'\n});\nvar palette = compose(color, bgcolor);\nexport default palette;","import style from './style';\nvar boxShadow = style({\n  prop: 'boxShadow',\n  themeKey: 'shadows'\n});\nexport default boxShadow;","import style from './style';\nimport compose from './compose';\n\nfunction transform(value) {\n  return value <= 1 ? \"\".concat(value * 100, \"%\") : value;\n}\n\nexport var width = style({\n  prop: 'width',\n  transform: transform\n});\nexport var maxWidth = style({\n  prop: 'maxWidth',\n  transform: transform\n});\nexport var minWidth = style({\n  prop: 'minWidth',\n  transform: transform\n});\nexport var height = style({\n  prop: 'height',\n  transform: transform\n});\nexport var maxHeight = style({\n  prop: 'maxHeight',\n  transform: transform\n});\nexport var minHeight = style({\n  prop: 'minHeight',\n  transform: transform\n});\nexport var sizeWidth = style({\n  prop: 'size',\n  cssProperty: 'width',\n  transform: transform\n});\nexport var sizeHeight = style({\n  prop: 'size',\n  cssProperty: 'height',\n  transform: transform\n});\nvar sizing = compose(width, maxWidth, minWidth, height, maxHeight, minHeight);\nexport default sizing;","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport warning from 'warning';\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nimport merge from './merge';\nimport memoize from './memoize';\nvar properties = {\n  m: 'margin',\n  p: 'padding'\n};\nvar directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nvar aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n}; // memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\n\nvar getCssProperties = memoize(function (prop) {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n\n  var _prop$split = prop.split(''),\n      _prop$split2 = _slicedToArray(_prop$split, 2),\n      a = _prop$split2[0],\n      b = _prop$split2[1];\n\n  var property = properties[a];\n  var direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(function (dir) {\n    return property + dir;\n  }) : [property + direction];\n});\nvar spacingKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY'];\n\nfunction getTransformer(theme) {\n  var themeSpacing = theme.spacing || 8;\n\n  if (typeof themeSpacing === 'number') {\n    return function (abs) {\n      return themeSpacing * abs;\n    };\n  }\n\n  if (Array.isArray(themeSpacing)) {\n    return function (abs) {\n      process.env.NODE_ENV !== \"production\" ? warning(abs <= themeSpacing.length - 1, [\"@material-ui/system: the value provided (\".concat(abs, \") overflows.\"), \"The supported values are: \".concat(JSON.stringify(themeSpacing), \".\"), \"\".concat(abs, \" > \").concat(themeSpacing.length - 1, \", you need to add the missing values.\")].join('\\n')) : void 0;\n      return themeSpacing[abs];\n    };\n  }\n\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(false, [\"@material-ui/system: the `theme.spacing` value (\".concat(themeSpacing, \") is invalid.\"), 'It should be a number, an array or a function.'].join('\\n')) : void 0;\n  return function () {\n    return undefined;\n  };\n}\n\nfunction getValue(transformer, propValue) {\n  if (typeof propValue === 'string') {\n    return propValue;\n  }\n\n  var abs = Math.abs(propValue);\n  var transformed = transformer(abs);\n\n  if (propValue >= 0) {\n    return transformed;\n  }\n\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n\n  return \"-\".concat(transformed);\n}\n\nfunction getStyleFromPropValue(cssProperties, transformer) {\n  return function (propValue) {\n    return cssProperties.reduce(function (acc, cssProperty) {\n      acc[cssProperty] = getValue(transformer, propValue);\n      return acc;\n    }, {});\n  };\n}\n\nfunction spacing(props) {\n  var theme = props.theme;\n  var transformer = getTransformer(theme);\n  return Object.keys(props).map(function (prop) {\n    // Using a hash computation over an array iteration could be faster, but with only 28 items,\n    // it's doesn't worth the bundle size.\n    if (spacingKeys.indexOf(prop) === -1) {\n      return null;\n    }\n\n    var cssProperties = getCssProperties(prop);\n    var styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n    var propValue = props[prop];\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  }).reduce(merge, {});\n}\n\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce(function (obj, key) {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nspacing.filterProps = spacingKeys;\nexport default spacing;","export default function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) {\n      cache[arg] = fn(arg);\n    }\n\n    return cache[arg];\n  };\n}","import style from './style';\nimport compose from './compose';\nexport var fontFamily = style({\n  prop: 'fontFamily',\n  themeKey: 'typography'\n});\nexport var fontSize = style({\n  prop: 'fontSize',\n  themeKey: 'typography'\n});\nexport var fontStyle = style({\n  prop: 'fontStyle',\n  themeKey: 'typography'\n});\nexport var fontWeight = style({\n  prop: 'fontWeight',\n  themeKey: 'typography'\n});\nexport var letterSpacing = style({\n  prop: 'letterSpacing'\n});\nexport var lineHeight = style({\n  prop: 'lineHeight'\n});\nexport var textAlign = style({\n  prop: 'textAlign'\n});\nvar typography = compose(fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign);\nexport default typography;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { styled as styledWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nvar styled = function styled(Component) {\n  var componentCreator = styledWithoutDefault(Component);\n  return function (style, options) {\n    return componentCreator(style, _extends({\n      defaultTheme: defaultTheme\n    }, options));\n  };\n};\n\nexport default styled;","import { borders, compose, display, flexbox, palette, positions, shadows, sizing, spacing, typography, css } from '@material-ui/system';\nimport styled from '../styles/styled';\nexport var styleFunction = css(compose(borders, display, flexbox, positions, palette, shadows, sizing, spacing, typography));\n/**\n * @ignore - do not document.\n */\n\nvar Box = styled('div')(styleFunction, {\n  name: 'MuiBox'\n});\nexport default Box;","export const ActionConsts = {\n\tRoles: {\n\t\tResetReducer: 'Roles_ResetReducer',\n\t\tSetReducer: 'Roles_SetReducer',\n\t},\n};\n","//#region Global Imports\n// import { Dispatch } from 'redux';\n//#endregion Global Imports\n\n//#region Local Imports\nimport { ActionConsts } from './ActionConsts';\n// import { PlanetaryService } from 'Components/Services';\n//#endregion Local Imports\n\n//#region Interface Imports\n//#endregion Interface Imports\n\nexport const RolesActions = {\n\tMap: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.Roles.SetReducer,\n\t}),\n\n\tReset: () => ({\n\t\ttype: ActionConsts.Roles.ResetReducer,\n\t}),\n\n\t// GetApod: (payload) => async (dispatch: Dispatch) => {\n\n\t// },\n};\n","import * as React from 'react';\nimport {\n    Grid,\n    // FormControl, \n    InputLabel,\n    Typography,\n    Link,\n    Button,\n    Checkbox\n    // TextareaAutosize,\n} from '@material-ui/core';\nimport { ReactTable } from 'Components/UI/TableComponent/ReactTable';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { BasicTextField, BasicSelect } from 'Components/UI';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\nimport moment from 'moment';\nimport { RolesRbacData } from '../IRolesPage';\nexport interface IPoliciesProps {\n    classes: any,\n    moduleName?: string,\n    rbacList: any,\n    onChangeModuleName: (name) => void,\n    onUpdateChange: (data) => void,\n    roleId: string,\n    onNavigateSideMenu?: (name) => void,\n}\n\nexport const Policies: React.FC<IPoliciesProps> = (props: IPoliciesProps): JSX.Element => {\n    const {\n        classes,\n        moduleName,\n        rbacList,\n        onChangeModuleName,\n        roleId,\n        onUpdateChange,\n    } = props;\n    const [isAddedModalRole, setIsAddedModalRole] = React.useState(false)\n    const [moduleValue, setModuleValue] = React.useState(0);\n    const [isModuleModalOpen, setIsModuleModalOpen] = React.useState(false);\n    const [moduleLabel, setModuleLabel] = React.useState<any>(null);\n    const [effectivityDate, setEffectivityDate] = React.useState('');\n    const [expiryDate, setExpiryDate] = React.useState('');\n    const [description, setDescription] = React.useState('')\n    const [roleName, setRoleName] = React.useState('');\n    const [isModalConfirmChangeModule, setIsModalConfirmChangeModule] = React.useState(false)\n    const [newRbacList, setNewRbacList] = React.useState([]);\n    const [loading, setLoading] = React.useState(false);\n    const [defaultFilters, setDefaultFilters] = React.useState([]);\n    const [isModalDeleteSuccessOpen, setIsModalDeleteSuccessOpen] = React.useState(false)\n    const [isModalCannotEditOpen, setIsModalCannotEditOpen] = React.useState(false)\n    const [isProcessMaker, setIsProcessMaker] = React.useState(false)\n    const [errorFields, setErrorFields] = React.useState<any>({\n        description: {\n            required: 'Description is a required field.',\n            isError: false,\n        },\n        roleName: {\n            required: 'Role name is a required field.',\n            isError: false\n        },\n        effectivityDate: {\n            required: 'Effectivity date is a required field.',\n            isError: false,\n        },\n        expiryDate: {\n            minDate: 'Expiry date cannot be lower than effectivity date.',\n            isError: false,\n        }\n    })\n    \n    const moduleItems = [\n        {\n            name: 'User Management',\n            value: '0'\n        },\n        {\n            name: 'Membership',\n            value: '1'\n        },\n        {\n            name: 'Underwriting',\n            value: '2'\n        },\n        {\n            name: 'Customer Care',\n            value: '3'\n        },\n        {\n            name: 'Claims',\n            value: '4',\n        },\n    ]\n\n    const columns: any = [\n        {\n            name: 'operation',\n            title: 'Object and Operations',\n        },\n        {\n            name: 'policy',\n            title: 'Policies',\n        },\n        {\n            name: 'policy_id',\n            title: 'Policy ID',\n        },\n        {\n            name: 'name',\n            title: 'Name'\n        }\n    ]\n\n    const handleCannotEditRoleModalClose = () => {\n        setIsModalCannotEditOpen(false)\n    }\n\n    const handleDeleteSuccessRoleModalClose = () => {\n        setIsModalDeleteSuccessOpen(false)\n    }\n\n    const handleRemoveRoleModalClose = () => {\n\n    }\n\n    const handleContinueRole = () => {\n        let moduleName = moduleItems[Number(moduleValue)].name;\n        setIsModalConfirmChangeModule(false);\n        setModuleLabel(moduleName);\n        onChangeModuleName(moduleName);\n    }\n\n    const handleOnCheckRow = (row) => {\n        setLoading(true);\n\n        let rbac = rbacList;\n        if (newRbacList.length === 0) {\n            setNewRbacList(rbacList);\n        } else {\n            rbac = newRbacList;\n        }\n        if (rbac.length > 0) {\n            rbac.map((data: any) => {\n                if (data._id === row._id) {\n                    data['checked'] = !data['checked'];\n                }\n            })\n            setNewRbacList(rbac);\n        }\n        setLoading(false)\n    }\n\n    const handleOnCheckGroup = (group) => {\n        setLoading(true);\n        let rbac = rbacList;\n        let countChecked = 0;\n\n        if (newRbacList.length === 0) {\n            setNewRbacList(rbacList)\n        }\n        if (rbac.length > 0) {\n            rbac.map((data: any) => {\n                if (data.name == group && data.checked === true) {\n                    countChecked++;\n                }\n            })\n        }\n        if (countChecked > 0) {\n            rbac.map((data: any) => {\n                if (data.name == group) {\n                    data['checked'] = false;\n                }\n            })\n        } else {\n            rbac.map((data: any) => {\n                if (data.name == group) {\n                    data['checked'] = true;\n                }\n            })\n        }\n        setNewRbacList(rbac);\n        setTimeout(() => {\n            setLoading(false);\n        }, 500)\n    }\n\n    const handleUpdateCheck = () => {\n        var rbac: any[] = [];\n        const _rbacList = newRbacList.length > 0 ? newRbacList : rbacList;\n\n        rbac = _rbacList.filter((data: any) => {\n            return data.checked;\n        })\n\n        var data: RolesRbacData = {\n            module: moduleLabel !== null ? moduleLabel : moduleName,\n            name: roleName,\n            role_id: roleId,\n            effectivity_date: moment(effectivityDate !== '' ? effectivityDate : new Date()).toISOString(),\n            description: description,\n            status: 'active',\n            is_processmaker: isProcessMaker,\n            rbac: rbac,\n        }\n\n        if (expiryDate !== '') {\n            data['expiry_date'] = moment(expiryDate).toISOString();\n        }\n\n        onUpdateChange(data);\n    }\n\n    const handleOnFilterChange = (filter) => {\n        setDefaultFilters(filter);\n    }\n\n    const addRoleBody = () => {\n        return (\n            <>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">MODULE</InputLabel>\n                    <Typography><b>{moduleLabel !== null ? moduleLabel : moduleName}</b></Typography>\n                    <Link onClick={() => { setIsModuleModalOpen(true) }}>Change Module</Link>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">ROLE ID</InputLabel>\n                    <Typography><b>{roleId}</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">DESCRIPTION *</InputLabel>\n                    <BasicTextField\n                        error={errorFields.description.isError}\n                        onBlur={(e: any) => {\n                            console.log(e.target.value)\n                            setDescription(e.target.value);\n                            handleUpdateCheck();\n                            if (e.target.value === '' || null) {\n                                setErrorFields({\n                                    ...errorFields,\n                                    description: {\n                                        isError: true\n                                    }\n                                })\n                            }\n                        }}\n                    ></BasicTextField>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">ROLE NAME *</InputLabel>\n                    <BasicTextField\n                        error={errorFields.roleName.isError}\n                        onBlur={(e: any) => {\n                            setRoleName(e.target.value);\n                            handleUpdateCheck();\n                            if (e.target.value === '' || null) {\n                                setErrorFields({\n                                    ...errorFields,\n                                    roleName: {\n                                        isError: true\n                                    }\n                                })\n                            }\n                        }}\n                    ></BasicTextField>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel}>IS A PROCESSMAKER PROCESS MAKER ROLE</InputLabel>\n                    <Checkbox\n                        checked={isProcessMaker !== null ? isProcessMaker : false}\n                        onChange={(e: any) => {\n                            // console.log(e.target.checked)\n                            setIsProcessMaker(e.target.checked)\n                            handleUpdateCheck();\n                        }}\n                    ></Checkbox>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">EFFECTIVITY DATE *</InputLabel>\n                    <KeyboardDatePicker\n                        error={errorFields.effectivityDate.isError}\n                        views={[\"year\", \"date\", \"month\"]}\n                        value={effectivityDate !== '' ? effectivityDate : new Date()}\n                        format={'MMM DD, YYYY'}\n                        style={{\n                            width: \"100%\", \n                            marginTop: 10\n                        }}\n                        onChange={(e: any) => {\n                            setEffectivityDate(e)\n                            handleUpdateCheck();\n                            console.log(e)\n                        }}\n                        inputVariant={'outlined'}\n                    // disableFuture\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">EXPIRY DATE (If applicable)</InputLabel>\n                    <KeyboardDatePicker\n                        error={errorFields.expiryDate.isError}\n                        views={[\"year\", \"date\", \"month\"]}\n                        value={expiryDate !== '' ? expiryDate : null}\n                        style={{ width: \"100%\", marginTop: 10 }}\n                        format={'MMM DD, YYYY'}\n                        onChange={(e: any) => {\n                            setExpiryDate(e)\n                            handleUpdateCheck();\n                        }}\n                        inputVariant={'outlined'}\n                    // disableFuture\n                    />\n                </Grid>\n            </>\n        )\n    }\n\n    return (\n        <>\n            <Grid container xs={12} spacing={4}>\n                {\n                    addRoleBody()\n                }\n                <Grid item xs={12}>\n\n                    <ReactSearch\n                        onSearch={() => console.log('on search')}\n                        placeholder={'Search policies'}\n                    />\n                    {\n                        <ReactTable\n                            rows={newRbacList.length > 0 ? newRbacList : rbacList}\n                            columns={columns}\n                            enableGrouping={true}\n                            groupColumnName={'name'}\n                            viewOnly={false}\n                            enableOpenGroupTotalChecked={false}\n                            message={'There are no policies to show yet.'}\n                            enableSelection={true}\n                            loading={loading}\n                            onCheckRow={(row) => {\n                                handleOnCheckRow(row)\n                                setTimeout(() => {\n                                    handleUpdateCheck()\n                                }, 500)\n                            }}\n                            defaultFilters={defaultFilters}\n                            onFilterChange={handleOnFilterChange}\n                            onSelectGroup={(group) => {\n                                handleOnCheckGroup(group)\n                                setTimeout(() => {\n                                    handleUpdateCheck()\n                                }, 500)\n                            }}\n                        />\n                    }\n                </Grid>\n            </Grid>\n            <ModalComponent\n                isModalOpen={isAddedModalRole}\n                onClose={handleRemoveRoleModalClose}\n                message={'New Role has been added successfully.'}\n                title={'Added New Role'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Button onClick={() => { setIsAddedModalRole(false) }} className={classes.button} variant={'contained'} color={'primary'}>Okay</Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n            <ModalComponent\n                isModalOpen={isModuleModalOpen}\n                onClose={() => {\n                    setIsModuleModalOpen(false)\n                }}\n                message={'Select a module for the role you will create:'}\n                title={'Choose a Module'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\" style={{ textAlign: 'center' }}>\n                        <Grid item xs={6}>\n                            <Button\n                                onClick={() => {\n                                    setIsModuleModalOpen(false)\n                                }}\n                                variant={'outlined'}\n                                color={'secondary'}\n                                className={classes.button}\n                            >Cancel</Button>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button variant={'contained'} color={'primary'}\n                                className={classes.button}\n                                onClick={() => {\n                                    setIsModalConfirmChangeModule(true)\n                                    setIsModuleModalOpen(false)\n                                }}>Continue</Button>\n                        </Grid>\n                    </Grid>\n                }\n            >\n                <div style={{ width: '90%', margin: 'auto' }}>\n                    <BasicSelect\n                        menuItems={moduleItems}\n                        width={'100%'}\n                        value={moduleValue}\n                        onChange={(e: any) => {\n                            setModuleValue(e.target.value)\n                        }}\n                    />\n                </div>\n            </ModalComponent>\n            <ModalComponent\n                isModalOpen={isModalConfirmChangeModule}\n                onClose={() => {\n                    setIsModalConfirmChangeModule(false);\n                }}\n                message={'All progress made will be lost. Continue to change the module?'}\n                title={'Confirm Change Module'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Button onClick={() => { setIsModalConfirmChangeModule(false) }} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button className={classes.button} variant={'contained'} color={'primary'} onClick={() => handleContinueRole()}>Continue</Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n\n            <ModalComponent\n                isModalOpen={isModalDeleteSuccessOpen}\n                onClose={handleDeleteSuccessRoleModalClose}\n                message={'New role has been deleted.'}\n                title={'Delete Success'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item >\n                            <Button\n                                onClick={() => {\n                                    setIsModalDeleteSuccessOpen(false)\n                                }}\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}>\n                                Okay\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n\n\n            <ModalComponent\n                isModalOpen={isModalCannotEditOpen}\n                onClose={handleCannotEditRoleModalClose}\n                message={'You do not have an assigned role to your account to perform this action.'}\n                title={'Cannot Edit Role'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item>\n                            <Button\n                                onClick={() => {\n                                    setIsModalCannotEditOpen(false)\n                                }}\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}>\n                                Okay\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n        </>\n    )\n}","import * as React from 'react';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n// import { InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n    selectedItems: {\n        borderRadius: 20,\n        fontSize: 13,\n        backgroundColor: '#d1d4db',\n        padding: '5px 10px'\n    },\n    xIcon: {\n        fontSize: 16\n    }\n}));\nconsole.log(useStyles);\n\ninterface IAddUserRoleBodyProps {\n    onClose: () => void;\n    onSave: (items) => void;\n}\n\ninterface IAddUserRoleBodyState {\n    selectedItems: any;\n    comboArray: any;\n}\n\nexport class AddUserRoleBody extends React.Component<IAddUserRoleBodyProps, IAddUserRoleBodyState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedItems: [],\n            comboArray: [],\n        }\n    }\n    // const {} = props;\n    // const classes = useStyles();\n    // const [selectedItems, setSelectedItems] = React.useState<any>([]);\n    componentDidMount() {\n        this.setState({\n            comboArray: [\n                {\n                    name: 'John Ernest Seraspi',\n                    value: 'test',\n                },\n                {\n                    name: 'Teqpwoe',\n                    value: 'test2',\n                },\n            ]\n        })\n    }\n\n    handleOnSearch = (list) => {\n        let arr = this.state.selectedItems;\n        arr.push(list);\n        this.setState({\n            selectedItems: arr\n        })\n        console.log(arr);\n    }\n\n    handleRemoveItem = (index) => {\n        let arr = this.state.selectedItems;\n        arr.splice(index, 1);\n        this.setState({\n            selectedItems: arr\n        })\n    }\n\n    handleOnSaveItems = () => {\n        this.props.onSave(this.state.selectedItems);\n    }\n\n    public render(): JSX.Element {\n        const classes = {\n            buttonsContainer: {\n                padding: '1em',\n            },\n            selectedContainer: {\n                padding: '3em 0 2em'\n            },\n            selectedItems: {\n                borderRadius: 20,\n                fontSize: 13,\n                backgroundColor: '#d1d4db',\n                padding: '5px 10px',\n                margin: '5px',\n                display: 'inline-block',\n            },\n            selectedText: {\n                paddingRight: '5px'\n            },\n            saveButton: {\n                width: '135px',\n                fontSize: '14px',\n                color: '#fff',\n            },\n            cancelButton: {\n                width: '135px',\n                fontSize: '14px',\n            }\n        };\n\n        return (\n            <>\n                <ReactSearch\n                    searchLabel={'Search user account'}\n                    onSearch={this.handleOnSearch}\n                    comboBoxMode={true}\n                    comboListsArray={this.state.comboArray}\n                />\n                <div style={classes.selectedContainer}>\n                    <div>\n                        <label>Selected Users</label>\n                    </div>\n                    {this.state.selectedItems.map((item, index) =>\n                        <div style={classes.selectedItems}>\n                            <span style={classes.selectedText}>{item}</span>\n                            <span onClick={() => this.handleRemoveItem(index)}>\n                                <FontAwesomeIcon icon={faTimesCircle} />\n                            </span>\n                        </div>\n                    )\n                    }\n                </div>\n                <Grid container spacing={1}>\n                    <Grid item xs={6}>\n                        <Button style={classes.cancelButton} variant=\"outlined\" color=\"secondary\" onClick={() => this.props.onClose()}>Cancel</Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button disabled={this.state.selectedItems.length < 1 ? true : false} style={classes.saveButton} variant=\"contained\" color=\"primary\" onClick={() => this.handleOnSaveItems()}>Save</Button>\n                    </Grid>\n                </Grid>\n            </>\n        )\n    }\n\n}\n// export const AddRoleBody : React.FC<IAddRoleBodyProps> = (props: IAddRoleBodyProps): JSX.Element => {\n\n// }","import * as React from 'react';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n// import { InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid } from '@material-ui/core';\nimport { getAllGroups } from 'Pages/API/Calls/Roles';\n\nconst useStyles = makeStyles(() => ({\n    selectedItems: {\n        borderRadius: 20,\n        fontSize: 13,\n        backgroundColor: '#d1d4db',\n        padding: '5px 10px'\n    },\n    xIcon: {\n        fontSize: 16\n    }\n}));\nconsole.log(useStyles);\n\ninterface IAddGroupRoleBodyProps {\n    onClose: () => void;\n    onSave: (items) => void;\n}\n\ninterface IAddGroupRoleBodyState {\n    selectedItems: any;\n    comboArray: any[];\n}\n\n\nexport class AddGroupRoleBody extends React.Component<IAddGroupRoleBodyProps, IAddGroupRoleBodyState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedItems: [],\n            comboArray: [],\n        }\n    }\n\n    componentDidMount() {\n        getAllGroups().then(res => {\n            let data = {\n                body: res.body,\n                label: \"name\",\n            }\n            let newChoices: any = [];\n\n            if (data.body && data.body.length > 0) {\n                data.body.map(c => {\n                    let beauty = {\n                        name: c[data.label],\n                        value: c\n                    }\n                    newChoices.push(beauty)\n                })\n                this.setState({\n                    comboArray: newChoices\n                })\n                console.log(this.state.comboArray)\n            }\n        })\n    }\n\n\n    handleOnSearch = (list) => {\n        let arr = this.state.selectedItems;\n        arr.push(list);\n        this.setState({\n            selectedItems: arr\n        })\n        console.log(arr);\n    }\n\n    handleRemoveItem = (index) => {\n        let arr = this.state.selectedItems;\n        arr.splice(index, 1);\n        this.setState({\n            selectedItems: arr\n        })\n    }\n\n    handleOnSaveItems = () => {\n        this.props.onSave(this.state.selectedItems);\n    }\n\n    public render(): JSX.Element {\n        const classes = {\n            buttonsContainer: {\n                padding: '1em',\n            },\n            selectedContainer: {\n                padding: '3em 0 2em'\n            },\n            selectedItems: {\n                borderRadius: 20,\n                fontSize: 13,\n                backgroundColor: '#d1d4db',\n                padding: '5px 10px',\n                margin: '5px',\n                display: 'inline-block',\n            },\n            selectedText: {\n                paddingRight: '5px'\n            },\n            saveButton: {\n                width: '135px',\n                fontSize: '14px',\n                color: '#fff',\n            },\n            cancelButton: {\n                width: '135px',\n                fontSize: '14px',\n            }\n        };\n\n        return (\n            <>\n                <ReactSearch\n                    searchLabel={'Search user group'}\n                    onSearch={this.handleOnSearch}\n                    comboBoxMode={true}\n                    comboListsArray={this.state.comboArray}\n                />\n                <div style={classes.selectedContainer}>\n                    <div>\n                        <label>Selected Users</label>\n                    </div>\n                    {this.state.selectedItems.map((item, index) =>\n                        <div style={classes.selectedItems}>\n                            <span style={classes.selectedText}>{item}</span>\n                            <span onClick={() => this.handleRemoveItem(index)}>\n                                <FontAwesomeIcon icon={faTimesCircle} />\n                            </span>\n                        </div>\n                    )\n                    }\n                </div>\n                <Grid container spacing={1}>\n                    <Grid item xs={6}>\n                        <Button style={classes.cancelButton} variant=\"outlined\" color=\"secondary\" onClick={() => this.props.onClose()}>Cancel</Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button disabled={this.state.selectedItems.length < 1 ? true : false} style={classes.saveButton} variant=\"contained\" color=\"primary\" onClick={() => this.handleOnSaveItems()}>Save</Button>\n                    </Grid>\n                </Grid>\n            </>\n        )\n    }\n\n}\n// export const AddRoleBody : React.FC<IAddRoleBodyProps> = (props: IAddRoleBodyProps): JSX.Element => {\n\n// }","import * as React from 'react';\nimport { Typography, Grid, Link, Button } from '@material-ui/core';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { ReactTable } from 'Components/UI/TableComponent/ReactTable';\nimport { useState } from 'react';\nimport classNames from 'classnames';\nimport { SideModalBlock } from 'Components/UI';\nimport { AddUserRoleBody } from './AddUserRoleBody';\nimport { AddGroupRoleBody } from './AddGroupRoleBody';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\n\nexport interface IGroupsAndUsersProps {\n    classes: any,\n    openSideModalBlock?: boolean,\n}\n\nexport const GroupsAndUsers: React.FC<IGroupsAndUsersProps> = (props: IGroupsAndUsersProps): JSX.Element => {\n    const {\n        classes,\n        openSideModalBlock\n    } = props;\n    const [activeItem, setActiveItem] = useState('Groups');\n    const [activeClass, setActiveClass] = useState(0);\n    const [groupShowBlock, setGroupShowBlock] = useState('none');\n    const [userShowBlock, setUserShowBlock] = useState('none');\n    const [isModalRemoveOpen, setIsModalRemoveOpen] = useState(false);\n    const [isModalRemoveSuccessOpen, setIsModalSuccessRemoveOpen] = useState(false);\n    const [isModalSuccessUserGroupOpen, setIsModalSuccessGroupOpen] = useState(false);\n    const [isModalSuccessUserAccountOpen, setIsModalSuccessUserOpen] = useState(false);\n    const [isModalRemoveSuccessUserAccountOpen, setIsModalSuccessRemoveUserOpen] = useState(false);\n\n    const userRows: any = [\n        {\n            username: 'Imstaana',\n            user_account: 'Louise Marianne Sta. Ana',\n            last_activity_date: 'Nov 12, 2019',\n            status: 'Active',\n        },\n        {\n            username: 'psbarrios',\n            user_account: 'Philip Salvador Q. Barrios',\n            last_activity_date: 'Nov 12, 2019',\n            status: 'Active',\n        },\n    ]\n\n    const userColumns: any = [\n        {\n            name: 'username',\n            title: 'Username',\n        },\n        {\n            name: 'user_account',\n            title: 'User Account',\n        },\n        {\n            name: 'last_activity_date',\n            title: 'Last Activity Date',\n        },\n        {\n            name: 'status',\n            title: 'Status',\n        },\n        {\n            name: 'action_delete',\n            title: ' ',\n        },\n    ]\n\n    const groupsRows: any = [\n        {\n            group_id: '0122-93282-0012',\n            group: \"APD Encoding\",\n            users_in_group: 10,\n            status: 'Active',\n        },\n        {\n            group_id: '0132-232-0012',\n            group: \"APD Decoding\",\n            users_in_group: 34,\n            status: 'Active',\n        },\n    ];\n\n    const groupsColumns: any = [\n        {\n            name: 'group_id',\n            title: 'Group ID',\n        },\n        {\n            name: 'group',\n            title: 'Group',\n        },\n        {\n            name: 'users_in_group',\n            title: 'Users in the Group',\n        },\n        {\n            name: 'status',\n            title: 'Status',\n        },\n        {\n            name: 'action_delete',\n            title: ' ',\n        },\n    ];\n\n    const menuItems = [\n        'Groups',\n        'Users'\n    ]\n\n    const handleMenuClick = (item, index) => {\n        setActiveItem(item);\n        setActiveClass(index)\n    }\n\n    const onSaveAddRole = (items) => {\n        console.log(items, 'onsaveaddrole')\n    }\n\n    const handleRemoveRoleModalClose = () => {\n        setIsModalRemoveOpen(true)\n    }\n\n    const handleRemoveSuccessGroupModalClose = () => {\n        setIsModalSuccessRemoveOpen(true)\n    }\n\n    const handleSuccessUserGroupClose = () => {\n        setIsModalSuccessGroupOpen(true)\n    }\n\n    const handleSuccessUserAccountClose = () => {\n        setIsModalSuccessUserOpen(true)\n    }\n\n    const handleRemoveSuccessUserAccountClose = () => {\n        setIsModalSuccessRemoveUserOpen(true)\n    }\n\n    console.log('SHOW BLOCK', groupShowBlock)\n    return (\n        <>\n            <Grid container xs={12}>\n                <Grid item xs={12}>\n                    <Typography><b>Attached Groups and Users</b></Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container xs={12} alignItems={'center'}>\n                        <Grid item xs={6}>\n                            <ul style={{ padding: '0', margin: '0' }}>\n                                {\n                                    menuItems.map((item, i) => (\n                                        <li className={classes.menuList}>\n                                            <Link\n                                                className={classNames(classes.menuLink, activeClass === i ? classes.LinkActive : null)}\n                                                onClick={() => handleMenuClick(item, i)}>\n                                                {item}\n                                            </Link>\n                                        </li>\n                                    ))\n                                }\n                            </ul>\n                        </Grid>\n                        <Grid item xs={6} className={classes.alignRight}>\n                            {/* <Link onClick={() => { setShowBlock('block') }}> Add to this role</Link> */}\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    {\n                        activeItem == 'Groups' ?\n                            <>\n                                <Grid className={classes.alignRight}>\n                                    <Link onClick={() => { setGroupShowBlock('block') }}> Add to this role</Link>\n                                </Grid>\n                                <ReactSearch\n                                    onSearch={() => console.log('search')}\n                                    placeholder={'Search a user group'}\n                                ></ReactSearch>\n                                <ReactTable\n                                    rows={groupsRows}\n                                    columns={groupsColumns}\n                                    columnExtensions={\n                                        [{\n                                            columnName: 'action_delete',\n                                            width: 75,\n                                            wordWrapEnabled: true,\n                                            align: 'center'\n                                        }]\n                                    }\n                                    message={'There are no user accounts to show yet.'}\n                                    sortingStateColumnExtensions={[\n                                        { columnName: 'action_delete', sortingEnabled: false }\n                                    ]}\n                                    onDeleteRow={(row) => {\n                                        console.log(row, 'rowdeleted')\n                                    }}\n                                />\n                            </>\n                            : null\n                    }\n                    {\n                        activeItem == 'Users' ?\n                            <>\n                                <Grid className={classes.alignRight}>\n                                    <Link onClick={() => { setUserShowBlock('block') }}> Add to this role</Link>\n                                </Grid>\n                                <ReactSearch\n                                    onSearch={() => console.log('search')}\n                                    placeholder={'Search a user account'} />\n                                <ReactTable\n                                    rows={userRows}\n                                    columns={userColumns}\n                                    columnExtensions={\n                                        [{\n                                            columnName: 'action_delete',\n                                            width: 75,\n                                            wordWrapEnabled: true,\n                                            align: 'center'\n                                        }]\n                                    }\n                                    message={'There are no user accounts to show yet.'}\n                                    sortingStateColumnExtensions={[\n                                        { columnName: 'action_delete', sortingEnabled: false }\n                                    ]}\n                                    onDeleteRow={(row) => {\n                                        console.log(row, 'rowdeleted')\n                                    }}\n                                />\n                            </>\n                            : null\n                    }\n                </Grid>\n            </Grid>\n            {\n                // had to put this condition because if both blocks are open,\n                // the Users block overlaps with the Groups block\n                activeItem === 'Groups' ? (\n                    <SideModalBlock\n                        handleClose={() => { setGroupShowBlock('none') }}\n                        showBlock={groupShowBlock === 'none' ? openSideModalBlock ? 'block' : 'none' : 'block' }\n                        title={'Add to this Role'}>\n                        <AddGroupRoleBody\n                            onClose={() => {\n                                setGroupShowBlock('none')\n                            }}\n                            onSave={onSaveAddRole}\n                        />\n                    </SideModalBlock>\n                ) : activeItem === 'Users' ? (\n                    <SideModalBlock\n                        handleClose={() => { setUserShowBlock('none') }}\n                        showBlock={userShowBlock}\n                        title={'Add to this Role'}>\n                        <AddUserRoleBody\n                            onClose={() => {\n                                setUserShowBlock('none')\n                            }}\n                            onSave={onSaveAddRole}\n                        />\n                    </SideModalBlock>\n                ) : null\n            }\n            <ModalComponent\n                isModalOpen={isModalRemoveOpen}\n                onClose={handleRemoveRoleModalClose}\n                message={'Remove APD screening from this role?'}\n                title={'Remove from Role'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Button\n                                onClick={() => {\n                                    setIsModalRemoveOpen(false)\n                                }}\n                                className={classes.button}\n                                variant={'outlined'}\n                                color={'secondary'}>\n                                Cancel\n                            </Button>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button\n                                onClick={() => {\n                                    setIsModalRemoveOpen(false)\n                                    setIsModalSuccessRemoveOpen(true)\n                                }}\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}>\n                                Remove\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n            <ModalComponent\n                isModalOpen={isModalSuccessUserGroupOpen}\n                onClose={handleSuccessUserGroupClose}\n                message={'New user group have been successfully added.'}\n                title={'User group added!'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item >\n                            <Button\n                                onClick={() => {\n                                    setIsModalSuccessGroupOpen(false)\n                                }}\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}>\n                                Okay\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n            <ModalComponent\n                isModalOpen={isModalRemoveSuccessOpen}\n                onClose={handleRemoveSuccessGroupModalClose}\n                message={'APD Screening has been removed from this role.'}\n                title={'Remove from Role!'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item>\n                            <Button\n                                onClick={() => {\n                                    setIsModalSuccessRemoveOpen(false)\n                                }}\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}>\n                                Okay\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n            <ModalComponent\n                isModalOpen={isModalSuccessUserAccountOpen}\n                onClose={handleSuccessUserAccountClose}\n                message={'New user account have been successfully added.'}\n                title={'User account added!'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item >\n                            <Button\n                                onClick={() => {\n                                    setIsModalSuccessUserOpen(false)\n                                }}\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}>\n                                Okay\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n            <ModalComponent\n                isModalOpen={isModalRemoveSuccessUserAccountOpen}\n                onClose={handleRemoveSuccessUserAccountClose}\n                message={'Christine T. Punzalan has been removed from this role.'}\n                title={'Remove from Role!'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item>\n                            <Button\n                                onClick={() => {\n                                    setIsModalSuccessRemoveUserOpen(false)\n                                }}\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}>\n                                Okay\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n        </>\n    )\n}\n","//#region Global Imports\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\n// import NEOLink from 'next/link';\n//#endregion Global Imports\n\n//#region Interface Imports\n// import { Heading } from 'Components/UI/Heading';\nimport { Store } from 'Components/Stores/IStore';\nimport { RolesActions } from './RolesActions';\nimport { IRolesPage } from './IRolesPage';\nimport { Grid, Button } from '@material-ui/core';\n// import Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { LoadingIndicator, FloatingFooter } from 'Components/UI';\nimport { Policies } from './Components/Policies';\nimport { GroupsAndUsers } from './Components/GroupsAndUsers';\nimport { SubHeader } from 'Components/UI/SubHeader';\nimport { SideMenu } from 'Components/UI/SideMenu';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\nimport { getRbacList, getRbacCount, createRoleRbac } from 'Pages/API/Calls/Roles';\n// import { LoadingIndicator } from 'Components/UI';\n//#endregion Interface Imports\n\nconst useStyles = makeStyles(theme => ({\n\tmainContainer: {\n\t\tpadding: '32px 24px 25px'\n\t},\n\tmain: {\n\t\tbackgroundColor: '#F5F7FB',\n\t\tpadding: '32px 24px',\n\t\tposition: 'relative'\n\t},\n\theadMain: {\n\t\t// backgroundColor: '#F5F7FB',\n\t},\n\tgridContainer: {\n\t\tpadding: theme.spacing(1),\n\t\tpaddingBottom: '75px'\n\t},\n\tgridContainerNoPadding: {\n\t\tpadding: theme.spacing(1),\n\t},\n\tsectionTitle: {\n\t\tfontSize: 24,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tsubSectionTitle: {\n\t\tfontSize: 14,\n\t\tfontWeight: 400,\n\t\tcolor: '#272e4c',\n\t},\n\teditBtn: {\n\t\twidth: '135px',\n\t\tfontSize: '14px',\n\t\tcolor: '#fff',\n\t},\n\talignRight: {\n\t\ttextAlign: 'right',\n\t},\n\tsideBarContainer: {\n\t\tborderRight: \"1px solid #ccc\",\n\t\tpaddingRight: \"25px\",\n\t},\n\tcontentContainer: {\n\t\tpaddingLeft: \"25px\",\n\t},\n\tsideBarLists: {\n\t\tpadding: 0,\n\t\tmargin: 0,\n\t\tlistStyle: 'none'\n\t},\n\tsideBarLink: {\n\t\tcolor: \"#272e4c\",\n\t\tmargin: \"0 0 10px\",\n\t\tdisplay: \"block\"\n\t},\n\tfieldGroupTitle: {\n\t\tfontSize: 13,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tlistItemTextRoot: {\n\t\tflex: 'none',\n\t},\n\tlistItemTextPrimarySelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 1)',\n\t\tcursor: 'pointer',\n\t},\n\tlistItemTextPrimaryNotSelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 0.3)',\n\t\tcursor: 'pointer',\n\t},\n\tdropzone: {\n\t\twidth: '460px',\n\t\theight: '88px',\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\tborder: '2px dashed rgba(30, 32, 113, 0.3)',\n\t\tborderRadius: '5px',\n\t\tbackgroundColor: '#e6e8ee',\n\t\tcolor: '#7b8094',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tflexDirection: 'column',\n\t},\n\tinputLabel: {\n\t\tcolor: '#272e4c',\n\t\tfontSize: '12px',\n\t\tmarginBottom: '5px'\n\t},\n\tkeyboardDatePicker: {\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\twidth: '212px',\n\t},\n\tcheckbox: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tradio: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tappBar: {\n\t\ttop: 'auto',\n\t\tbottom: 0,\n\t\tborder: '1px solid #707070',\n\t\tbackgroundColor: 'rgba(54, 54, 54, 0.64)',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: 'calc(100% - 72px)',\n\t\t},\n\t},\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\tbutton: {\n\t\tmargin: '0 10px',\n\t\tminHeight: '42px',\n\t\tminWidth: '150px',\n\t\tfontSize: 14\n\t},\n\tbuttonTitle: {\n\t\tfontWeight: 700,\n\t\tfontSize: 13,\n\t},\n\tbuttonSubTitle: {\n\t\tfontWeight: 400,\n\t\tfontSize: 7,\n\t},\n\tmenuList: {\n\t\tdisplay: \"inline-block\",\n\t\tpadding: \"10px 45px 10px 0\"\n\t},\n\tmenuLink: {\n\t\tcolor: \"#929292\",\n\t\tdisplay: \"block\",\n\t\tfontSize: \"1.10em\",\n\t\t'&:hover': {\n\t\t\tcolor: \"#3ab77d\",\n\t\t}\n\t},\n\tLinkActive: {\n\t\tcolor: \"#3ab77d\",\n\t\tfontWeight: \"bold\",\n\t\ttextDecoration: \"underline\"\n\t}\n}));\n\n\nexport const AddRolesPage: React.FC<IRolesPage.IProps> = (props: IRolesPage.IProps): JSX.Element => {\n\tconst classes = useStyles();\n\tconst [loading, setLoading] = useState(false);\n\tconst [activeItem, setActiveItem] = useState('Policies');\n\tconst [isModalConfirmExitOpen, setIsModalConfirmExitOpen] = useState(false);\n\tconst [isModalConfirmSaveOpen, setIsModalConfirmSaveOpen] = useState(false);\n\tconst [isModalSaveSuccessOpen, setIsmodalSaveSuccessOpen] = useState(false);\n\tconst [moduleName, setModuleName] = useState('User Management');\n\tconst [rbacList, setRbacList] = useState([]);\n\tconst [breadCrumbs, setBreadCrumbs] = useState<any[]>([]);\n\tconst [rbacCount, setRbacCount] = useState(0);\n\tconst [roleId, setRoleId] = useState('');\n\tconst [policyData, setPolicyData] = useState<any>({})\n\n\tconst sideBarItems = [\n\t\t{\n\t\t\tname: 'Policies',\n\t\t},\n\t\t{\n\t\t\tname: 'Groups And Users',\n\t\t},\n\t];\n\n\tReact.useEffect(() => {\n\t\tif (props) {\n\t\t\tif (props.location) {\n\t\t\t\tif (props.location.state) {\n\t\t\t\t\tif (props.location.state.from) {\n\t\t\t\t\t\tsetModuleName(props.location.state.from)\n\t\t\t\t\t\thandleGetRbacCount(props.location.state.from)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar _crumbs: any[] = [\n\t\t\t{\n\t\t\t\tname: \"ROLES\",\n\t\t\t\tlink: \"/system-admin/users\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ADD A ROLE\",\n\t\t\t}\n\t\t];\n\t\tsetBreadCrumbs(_crumbs);\n\t\thandGetRbacList();\n\t\tconsole.log('addRolesJuday')\n\t\tconsole.log('useEffect')\n\t}, []);\n\n\tconst handleGetRbacCount = (name: string) => {\n\t\tgetRbacCount(name).then(data => {\n\t\t\tsetRoleId(generateRoleId(name, data.count + 1));\n\t\t\tsetRbacCount(data.count + 1);\n\t\t}).catch(err => {\n\t\t\tconsole.log(err);\n\t\t\talert(err);\n\t\t})\n\t}\n\n\tconst handGetRbacList = () => {\n\t\tsetLoading(true)\n\t\tgetRbacList().then(response => {\n\t\t\tlet res = response.body;\n\t\t\tsetRbacList(res)\n\t\t\tsetLoading(false)\n\t\t}).catch(err => {\n\t\t\tconsole.log(err)\n\t\t\tsetLoading(false)\n\t\t\talert(err);\n\t\t})\n\t}\n\n\t// const handleGetGroupsAndUsers = () => {\n\n\t// }\n\n\tconst activeSideBarItem = (item) => {\n\t\tconsole.log(item)\n\t\tsetActiveItem(item);\n\t}\n\n\tconst handleModalConfirmationClose = () => {\n\t\tsetIsModalConfirmSaveOpen(false);\n\t\tsetIsModalConfirmExitOpen(false);\n\t}\n\n\tconst generateRoleId = (moduleName: string, count: number) => {\n\t\tlet roleId = '';\n\n\t\tswitch (moduleName) {\n\t\t\tcase 'User Management':\n\t\t\t\troleId = `UMRID0${count}`\n\t\t\t\tbreak;\n\t\t\tcase 'Membership':\n\t\t\t\troleId = `MRID0${count}`\n\t\t\t\tbreak;\n\t\t\tcase 'Underwriting':\n\t\t\t\troleId = `URID0${count}`\n\t\t\t\tbreak;\n\t\t\tcase 'Customer Care':\n\t\t\t\troleId = `CRID0${count}`\n\t\t\t\tbreak;\n\t\t\tcase 'Claims':\n\t\t\t\troleId = `CLRID0${count}`\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\troleId = `UMRID0${count}`\n\t\t\t\tbreak;\n\t\t}\n\t\treturn roleId;\n\t}\n\n\tconst handleChangeModuleName = (moduleName) => {\n\t\tsetRoleId(generateRoleId(moduleName, rbacCount));\n\t}\n\n\n\tconst handleOnSave = () => {\n\t\tlet data = policyData;\n\t\tdata.rbac && data.rbac.map((rbac: any) => {\n\t\t\tif (rbac.checked) {\n\t\t\t\tdelete rbac.checked\n\t\t\t}\n\t\t})\n\t\tsetLoading(true)\n\t\tcreateRoleRbac(data).then((response: any) => {\n\t\t\tsetIsmodalSaveSuccessOpen(true);\n\t\t\tsetIsModalConfirmSaveOpen(false);\n\t\t\tprops.history.push({\n\t\t\t\tpathname: '/#/system-admin/roles/' + response._id,\n\t\t\t})\n\t\t\tsetLoading(false);\n\t\t}).catch(err => {\n\t\t\tsetLoading(false)\n\t\t\talert(err);\n\t\t})\n\t}\n\n\tconst handleRemoveAllChanges = () => {\n\t\thandGetRbacList()\n\t\tsetIsModalConfirmExitOpen(false)\n\t}\n\n\n\treturn (\n\t\t<>\n\t\t\t<SubHeader\n\t\t\t\theadingTitle={breadCrumbs[1] ? breadCrumbs[1].name : ''}\n\t\t\t\tbreadCrumbsArray={breadCrumbs}\n\t\t\t\tlayoutType={'layout_1'}\n\t\t\t></SubHeader>\n\t\t\t<div className={classes.main}>\n\t\t\t\t{loading ?\n\t\t\t\t\t(<LoadingIndicator />) : null\n\t\t\t\t}\n\t\t\t\t<Grid container xs={12}>\n\t\t\t\t\t<Grid item xs={3} className={classes.sideBarContainer}>\n\t\t\t\t\t\t<SideMenu\n\t\t\t\t\t\t\titems={sideBarItems}\n\t\t\t\t\t\t\tactiveItems={activeSideBarItem}\n\t\t\t\t\t\t></SideMenu>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={9} className={classes.contentContainer}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tactiveItem == 'Policies' &&\n\t\t\t\t\t\t\t<Policies\n\t\t\t\t\t\t\t\trbacList={rbacList}\n\t\t\t\t\t\t\t\tmoduleName={moduleName}\n\t\t\t\t\t\t\t\troleId={roleId}\n\t\t\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\t\t\tonNavigateSideMenu={(name: string) => {\n\t\t\t\t\t\t\t\t\tactiveSideBarItem(name)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChangeModuleName={(name: string) => {\n\t\t\t\t\t\t\t\t\thandleChangeModuleName(name)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonUpdateChange={(data: any) => {\n\t\t\t\t\t\t\t\t\tsetPolicyData(data);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></Policies>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tactiveItem == 'Groups And Users' &&\n\t\t\t\t\t\t\t<GroupsAndUsers\n\t\t\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\t\t// openSideModalBlock={true}\n\t\t\t\t\t\t\t></GroupsAndUsers>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t\t<ModalComponent\n\t\t\t\tisModalOpen={isModalConfirmSaveOpen}\n\t\t\t\tonClose={handleModalConfirmationClose}\n\t\t\t\tmessage={'Save all changes made?'}\n\t\t\t\ttitle={'Confirmation'}\n\t\t\t\tbuttons={\n\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button onClick={() => { setIsModalConfirmSaveOpen(false) }} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant={'contained'}\n\t\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\t\tonClick={() => handleOnSave()}\n\t\t\t\t\t\t\t>Save</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<ModalComponent\n\t\t\t\tisModalOpen={isModalConfirmExitOpen}\n\t\t\t\tonClose={handleModalConfirmationClose}\n\t\t\t\tmessage={'Exit and remove all changes made?'}\n\t\t\t\ttitle={'Confirmation'}\n\t\t\t\tbuttons={\n\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button onClick={() => { setIsModalConfirmExitOpen(false) }} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant={'contained'}\n\t\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\thandleRemoveAllChanges()\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>Continue</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<ModalComponent\n\t\t\t\tisModalOpen={isModalSaveSuccessOpen}\n\t\t\t\tonClose={() => { setIsmodalSaveSuccessOpen(false) }}\n\t\t\t\tmessage={'Changes has been saved.'}\n\t\t\t\ttitle={'Save Success'}\n\t\t\t\tbuttons={\n\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant={'contained'}\n\t\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\t\tonClick={() => { setIsmodalSaveSuccessOpen(false) }}\n\t\t\t\t\t\t\t>Okay</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<FloatingFooter>\n\t\t\t\t<Grid container spacing={1} justify={'flex-end'} style={{ textAlign: 'right' }}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tvariant={'contained'}\n\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\tstyle={{ backgroundColor: '#3C394A' }}\n\t\t\t\t\t\t\tonClick={() => setIsModalConfirmExitOpen(true)}\n\t\t\t\t\t\t>Cancel</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tvariant={'contained'}\n\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\tonClick={() => setIsModalConfirmSaveOpen(true)}\n\t\t\t\t\t\t>Save Changes</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</FloatingFooter>\n\t\t</>\n\t);\n}\n\nconst mapStateToProps = (state: Store) => state.roles;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tMap: bindActionCreators(RolesActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };\n"],"sourceRoot":""}