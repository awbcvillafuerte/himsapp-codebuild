{"version":3,"sources":["Pages/Lookup/Components/Loader/index.tsx","Components/UI/SideMenu/index.tsx","Pages/Lookup/ActionConsts.ts","Pages/Lookup/LookupActions.ts","Components/UI/TableComponent/CodeListTable.tsx","Pages/API/Calls/ICD10.ts","Pages/Lookup/Components/ConfirmationModal.tsx","Pages/Lookup/Components/ConstructPayloads.ts","Pages/Lookup/Components/ICD10Section/index.tsx","Pages/API/Calls/CPT.ts","Pages/Lookup/Components/CPTSection/index.tsx","Pages/Lookup/LookupPage.tsx"],"names":["useStyles","makeStyles","root","position","width","height","zIndex","right","bottom","top","left","textAlign","backgroundColor","container","outline","alignItems","justifyContent","display","flexDirection","Loader","classes","className","size","defaultProps","sideBarLists","padding","margin","listStyle","sideBarLink","color","sideBarLinkDisabled","pointerEvents","LinkActive","fontWeight","textDecoration","SideMenu","props","items","activeItems","setActiveItem","useState","activeClass","setActiveClass","useEffect","undefined","reset","name","map","item","i","label","variant","style","fontSize","disabled","classNames","onClick","itemName","index","LookupConsts","ResetReducer","SetReducer","LookupActions","payload","type","radioSelected","selectedValue","clickCell","clickValue","cellSelectStyles","select","textFieldStyles","checkboxStyles","Select","id","value","cellSelectClasses","renderValue","selected","find","key","TableFilterCell","filter","onFilter","filteringEnabled","labelWidth","onChange","e","target","placeholder","TableRadio","onToggle","restProps","checked","stopPropagation","TableCheckBox","icon","faCheckSquare","checkedIcon","TableSearchPanel","onValueChange","fullWidth","startAdornment","faSearch","DefaultTableToolbar","children","disableGutters","SortingIcon","direction","marginLeft","faSortUp","faSortDown","TableSortLabel","column","onSort","sortingEnabled","title","hideSortIcon","faSort","EmptyCellFormatter","faExclamationCircle","EmptyCellDataTypeProvider","formatterComponent","RequiredFormatter","row","RequiredDataTypeProvider","RequiredCheckboxFormatter","control","RequiredCheckboxDataTypeProvider","UploadFileFormatter","console","log","paddingTop","paddingRight","faFileUpload","UploadFileDataTypeProvider","DisapproveRadioFormatter","aria-label","cnt","labelPlacement","DisapproveRadioDataTypeProvider","IncompleteRadioFormatter","IncompleteRadioDataTypeProvider","RadioNameFormatter","RadioDataTypeProvider","ValuesNameFormatter","ValuesNameDataTypeProvider","SystemNameFormatter","SystemNameDataTypeProvider","DataFormatter","DataDataTypeProvider","NumberFormatter","textFieldClasses","NumberDataTypeProvider","TextFormatter","TextDataTypeProvider","DateFormatter","text","moment","format","error","DateCellDataTypeProvider","TimeFormatter","TimeCellDataTypeProvider","TableComponent","columns","formattedColumns","singleSelect","disablePaging","disableSearch","disableSelect","disableSort","disableFilter","toolbarType","columnExtensions","columnBands","showSelectionColumn","query","totalCount","currentPage","limit","selection","setSelection","pageSizes","sorting","setSorting","rows","setRows","dataTypeProviders","Object","keys","length","push","for","number","system_name","data_name","value_name","required_columns","radio","incomplete_radio","disapprove_action","required_checkbox","upload_file","required_cell","date","time","toolbar","Paper","topBar","onCurrentPageChange","page","skip","onPageChange","pageSize","onPageSizeChange","ongPageSizeChange","defaultSorting","onSortingChange","updateSorting","onSelectionChange","newSelection","onClickRow","onSelectedRadio","onClickCell","lastSelected","indexOf","defaultFilters","filters","defaultFilter","columnFilteringEnabled","filterExtensions","onFiltersChange","onFilterChange","messages","noData","message","selectByRowClick","cellComponent","headerCellComponent","showSelectAll","showSortingControls","sortLabelComponent","rootComponent","inputComponent","fetch","Fetch","getAccessToken","getICD","option","method","call","JSON","stringify","fetchAccessToken","then","searchICD","offset","filter_key_str","sorting_str","filter_str","forEach","search","ICD_URL","addICD10Codes","body","editICD","theme","dialog","dialogAction","marginBottom","spacing","ConfirmationModal","Dialog","open","isModalOpen","onClose","aria-labelledby","maxWidth","DialogTitle","DialogContent","Grid","justify","xs","DialogActions","clsx","Button","onSubmit","submitType","constructIcd10","data","status","today","Date","eff_date","setHours","exp_date","isValid","gender_limited","gender","_id","category_code","diagnosis_code","toString","full_code","abbreviated_description","full_description","category_title","main_category","effectivity_date","expiry_date","date_updated","constructCpt","code","description","category","reconstructIcd10","Boolean","constructEmptyIcd10","reconstructCpt","constructEmptyCpt","constructPutIcd10","assign","constructPutCpt","constructPostIcd10","data_arr","Array","isArray","constructPostCpt","helper","Utils","IndexedDBHelper","ICD10Section","requiredFields","excludeFields","escFunction","event","keyCode","handleCloseSideModalBlock","initialData","setState","no_data_message","searchCode","state","default_filters","global_filter","default_sorting","default_clicked","addCodeIndexdb","openDb","res","db","result","saveToStore","catch","patchCodeIndexdb","updateEntryByKey","fetchICDCategoriesIndexdb","a","StorageService","icds","category_arr","category_dropdown_choices_arr","includes","setICDCategories","setICDCategoryDropdown","icd_categories","icd_category_dropdown_choices","err","filters_global","clicked","response","table","generateDataForTable","code_response","code_data_all","code_data","loading_state","total","count","statusCode","modalTitle","modalMessage","patchCode","changePageUpdate","disableSaveButton","addCodes","handleChangeSorting","handleFilterByColumn","self","typingTimeout","clearTimeout","typing","setTimeout","handleSearch","handleClickRow","checkFields","code_info","handleChangeSideModalBlockMode","handlePageChange","handlePageSizeChange","isPageSizeModal","handleClickItemFromList","show_side_modal_block","side_modal_block_mode","block_title","reform_data","cloneDeep","handleOpenBlock","passDataToSideModalBlockBody","handleInvalidFieldsPrompt","formFields","disableButton","invalid_fields","getInvalidFields","clickSaveButton","confirm_modal_message","confirm_modal_open","confirm_modal_title","action_after_confirm","invalid_fields_submit","invalid_fields_editing","exclude_fields","fields_excluded","field","startOf","diff","SIDE_MODAL_BLOCK_FIELDS","ICD10","editOrAdd","checkInvalidFields","columnName","wordWrapEnabled","icdCategoryDropdown","icdCategories","highlightedCodeFromList","action_after_info","this","document","addEventListener","temp_row","blockPosition","editIconDescription","showBlock","handleClose","sideModalBlockMode","changeMode","invalidFields","refreshData","handleSave","formName","mode","checkBoxWithDropDownFieldsInitState","dynamicDropdownChoices","datePairField1MaxDate","datePairField2MinDate","Fragment","codeHeader","codeHeaderValue","ListItemText","codeListItemsRoot","primary","codeListItemsSelected","codeListItems","categories","md","scrollList","maxHeight","overflow","List","renderCodeInfo","renderCodeList","selectedpage","TextField","searchField","inputProps","InputProps","InputAdornment","Search","searchBar","faPlus","addFieldIcon","Link","addACode","minHeight","update","renderSideModalBlock","React","Component","getCPT","searchCPT","CPT_URL","addCPTCodes","editCPT","deleteCPT","CPTSection","addCPTIndexDB","patchCPTIndexDB","fetchCPTCategories","cpts","category_ranges","setCPTCategories","setCPTCategoryDropdown","setCPTCategoryRanges","cpt_categories","cpt_category_range","category_dropdown_choices","CPT","cptCategoryDropdown","cptCategories","cptCategoryRanges","delete","ranges","range","slice","page_tab_titles","sideBarItems","Codes","Locations","Industries","gridContainerNoPadding","sectionTitle","subSectionTitle","gridContainer","headerTitle","linkPrevious","cursor","sideBar","paddingLeft","borderRight","linkCurrent","main","gridItemLayout","sideNavHeader","listItemTextRoot","whiteSpace","flex","listItemTextPrimarySelected","listItemTextPrimaryNotSelected","marginRight","marginTop","opacity","letterSpacing","textAlignLast","codeNestedListItemsRoot","codeNestedListItems","codeNestedListItemsSelected","SideModalBlockContainer","paddingBottom","borderRadius","boxShadow","CodeInfoHeaders","CodeInfoHeadersValues","inputLabel","keyboardDatePicker","viewHeader","viewHeaderValue","editButton","deleteButton","closeButton","sideBarContainer","caretStyle","checkbox","menuList","menuLink","LookupPage","activeHeader","setActiveHeader","activeItem","Typography","handleMenuClick","mapStateToProps","home","mapDispatchToProps","dispatch","Map","bindActionCreators"],"mappings":"yHAAA,2DAOMA,EAAYC,YAAW,CAC5BC,KAAM,CACCC,SAAU,QACVC,MAAO,OACPC,OAAQ,OACRC,OAAQ,KACRC,MAAO,MACPC,OAAQ,MACRC,IAAK,MACLC,KAAM,MACNC,UAAW,SACXC,gBAAiB,sBAErBC,UAAU,CACNR,OAAQ,OACRS,QAAS,EACTC,WAAY,SACZC,eAAgB,SAChBC,QAAS,OACTC,cAAe,YAIVC,EAAgC,WAEzC,IAAMC,EAAUpB,IAChB,OACI,uBAAKqB,UAAWD,EAAQlB,MACpB,uBAAKmB,UAAWD,EAAQP,WACpB,gBAAC,IAAD,CAAkBS,KAAM,SAMxCH,EAAOI,aAAe,I,6HCpChBvB,EAAYC,YAAW,CAC5BuB,aAAc,CACbC,QAAS,EACTC,OAAQ,EACFC,UAAW,OACXxB,SAAU,SACVM,IAAK,IAEZmB,YAAa,CACZC,MAAO,UACPH,OAAQ,WACRT,QAAS,SAEPa,oBAAqB,CACjBD,MAAO,wBACbH,OAAQ,WACFT,QAAS,QACTc,cAAe,QAEnBC,WAAY,CACRH,MAAO,UACPI,WAAY,OACZC,eAAgB,eAWXC,EAAsC,SAACC,GAAwC,IACjFC,EAAsCD,EAAtCC,MAAQC,EAA8BF,EAA9BE,YAAaC,EAAiBH,EAAjBG,cAD2D,EAEjDC,mBAAS,GAFwC,mBAEhFC,EAFgF,KAEnEC,EAFmE,KAGjFtB,EAAUpB,IAChB2C,oBAAU,WAGNJ,GAAiBG,EAAeH,QACbK,IAAhBR,EAAMS,QACLH,EAAe,GACfJ,EAAYD,EAAM,GAAGS,QAE1B,CAACV,EAAMS,QAOV,OACI,gCACI,sBAAIxB,UAAWD,EAAQI,cAEfa,EAAMU,IAAI,SAACC,EAAMC,GAAP,OACN,+BAEuBL,IAAfI,EAAKE,OACL,gBAAC,IAAD,CAAYC,QAAS,YAAaC,MAAO,CAACvB,MAAM,UAAWwB,SAAU,SAAWL,EAAKE,OAGpFF,EAAKM,SAON,gBAAC,IAAD,CACIjC,UAAWkC,IAAWnC,EAAQU,sBAE5BkB,EAAKF,MATV,gBAAC,IAAD,CACGzB,UAAWkC,IAAWnC,EAAQQ,YAAaW,EAAgBA,IAAkBU,EAAK7B,EAAQY,WAAa,KAAOS,IAAgBQ,EAAI7B,EAAQY,WAAa,MACvJwB,QAAS,kBAnBfC,EAmBsCT,EAAKF,KAnBjCY,EAmBuCT,EAlBvEX,EAAYmB,QACZf,EAAegB,GAFM,IAACD,EAAUC,IAqBFV,EAAKF,a,4EC1E9Ba,EACH,CACNC,aAAc,sBACdC,WAAY,qBCDHC,EACN,SAACC,GAAD,MAAkB,CACrBA,UACAC,KAAML,EAAoBE,a,6RCsC1BI,GAAgB,EAChBC,EAAgB,GAChBC,GAAY,EACZC,EAAa,GAEXC,EAAmBpE,YAAW,CAClCqE,OAAQ,CACN1D,gBAAiB,iBAIf2D,EAAkBtE,YAAW,CACjCC,KAAM,CACJ,0BAA2B,CACzBU,gBAAiB,kBAKjB4D,EAAiBvE,YAAW,CAChCC,KAAM,CACJ,gBAAiB,CACf2B,MAAO,cAKP4C,EAAS,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,MAAOtC,EAAiB,EAAjBA,MACrBuC,EAAoBP,IAC1B,OACE,gBAAC,IAAD,CACEK,GAAIA,EACJtD,QAASwD,EACTD,MAAOA,EACPvB,MAAO,CAAEhD,MAAO,OAAQQ,gBAAiB,eACzCiE,YAAa,SAACC,GACZ,GAAiB,OAAbA,EAAmB,CACrB,IAAMH,EAAatC,EAAM0C,KAAK,SAAC/B,GAC7B,OAAOA,EAAK2B,QAAUG,IAExB,OAAIH,EACKA,EAAM7B,KAEN,SAGX,MAAO,WAGRT,EAAMU,IAAI,SAACC,GAAD,OACT,gBAAC,IAAD,CAAqBgC,IAAKhC,EAAK2B,MAAOA,MAAO3B,EAAK2B,OAC/C3B,EAAKF,UAOVmC,EAAkB,SAAC,GAKb,IAJVC,EAIS,EAJTA,OACAC,EAGS,EAHTA,SACAC,EAES,EAFTA,iBACAhE,EACS,EADTA,QAEA,OAAIgE,EAEA,gBAAC,IAAD,CACEhC,MAAO,CAAE3B,QAAS,qBAClBL,QAASA,GAET,gBAAC,IAAD,CACEA,QAASA,EACTgC,MAAO,CAAEhD,MAAO,QAChBuE,MAAOO,EAASA,EAAOP,MAAQ,GAC/BU,WAAY,EACZC,SAAU,SAAAC,GAAC,OACTJ,EAASI,EAAEC,OAAOb,MAAQ,CAAEA,MAAOY,EAAEC,OAAOb,OAAU,OAExDc,YAAY,MAOhB,gBAAC,IAAD,CACErC,MAAO,CAAE3B,QAAS,qBAClBL,QAASA,KAMXsE,EAAa,SAAC,GAMR,IALVtC,EAKS,EALTA,MACA0B,EAIS,EAJTA,SACAa,EAGS,EAHTA,SACAvE,EAES,EAFTA,QACGwE,EACM,yDACT,OACE,gBAAC,IAAD,eACEnE,QAAQ,WACR2B,MAAOA,EACPhC,QAASA,GACLwE,GAEJ,gBAAC,IAAD,CACExE,QAASA,EACTyE,QAASf,EACTtB,QAAS,SAAA+B,GACPA,EAAEO,kBACFH,SAOJI,EAAgB,SAAC,GAMX,IALV3C,EAKS,EALTA,MACA0B,EAIS,EAJTA,SACAa,EAGS,EAHTA,SACAvE,EAES,EAFTA,QACGwE,EACM,yDACT,OACE,gBAAC,IAAD,eACEnE,QAAQ,WACR2B,MAAOA,EACPhC,QAASA,GACLwE,GAEJ,gBAAC,IAAD,CACEI,KAAM,gBAAC,IAAD,CAAiBA,KAAMC,MAC7BC,YAAa,gBAAC,IAAD,CAAiBF,KAAMC,MACpC7E,QAASA,EACTyE,QAASf,EACTtB,QAAS,SAAA+B,GACPA,EAAEO,kBACFH,SAOJQ,EAAmB,SAAC,GAAmC,IAAjCxB,EAAgC,EAAhCA,MAAOyB,EAAyB,EAAzBA,cACjC,OACE,gBAAC,IAAD,CACEzB,MAAOA,GAAgB,GACvBU,WAAY,EACZC,SAAU,SAAAC,GAAC,OAAIa,EAAcb,EAAEC,OAAOb,MAAQY,EAAEC,OAAOb,MAAQ,OAC/Dc,YAAY,uCACZY,WAAS,EACTC,eACE,gBAAC,IAAD,CAA2BnG,SAAS,SAClC,gBAAC,IAAD,CAAiB6F,KAAMO,UAO3BC,GAAsB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAC7B,OAAO,gBAAC,IAAD,CAAoBC,gBAAgB,EAAMD,SAAUA,KAGvDE,GAAc,SAAC,GAAD,MACJ,QADI,EAAGC,UAEnB,gBAAC,IAAD,CAAiBxD,MAAO,CAAEyD,WAAY,QAAUb,KAAMc,MAEtD,gBAAC,IAAD,CAAiB1D,MAAO,CAAEyD,WAAY,QAAUb,KAAMe,OAGpDC,GAAiB,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,OAAQC,EAAuC,EAAvCA,OAAQT,EAA+B,EAA/BA,SAAUG,EAAqB,EAArBA,UAClD,YAC4BhE,IAA1BqE,EAAOE,gBACmB,OAA1BF,EAAOE,iBACmB,IAA1BF,EAAOE,eAEA,4BAAOF,EAAOG,OAGnB,gBAAC,IAAD,CAA2BC,cAAc,EAAM7D,QAAS0D,GACrDT,EACAG,EACC,gBAAC,GAAD,CAAaA,UAAWA,IAExB,gBAAC,IAAD,CAAiBxD,MAAO,CAAEyD,WAAY,QAAUb,KAAMsB,QAO1DC,GAAqB,SAAC,GAAoB,IAAlB5C,EAAiB,EAAjBA,MAC5B,MAAc,KAAVA,QAA0B/B,IAAV+B,GAAiC,OAAVA,EAEvC,gBAAC,IAAD,CACEvB,MAAO,CAAEvB,MAAO,UAAWwB,SAAU,QACrC2C,KAAMwB,MAIH7C,GAIL8C,GAA4B,SAACrF,GAAD,OAChC,gBAAC,IAAD,eAAkBsF,mBAAoBH,IAAwBnF,KAG1DuF,GAAoB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,IAAKjD,EAAiB,EAAjBA,MAChC,OACsB,IAApBiD,EAAG,UACQ,KAAVjD,QAA0B/B,IAAV+B,GAAiC,OAAVA,GASpB,IAApBiD,EAAG,UACQ,KAAVjD,QAA0B/B,IAAV+B,GAAiC,OAAVA,EAIjCA,EAFA,MATL,gBAAC,IAAD,CACEvB,MAAO,CAAEvB,MAAO,UAAWwB,SAAU,QACrC2C,KAAMwB,OAaRK,GAA2B,SAACzF,GAAD,OAC/B,gBAAC,IAAD,eAAkBsF,mBAAoBC,IAAuBvF,KAGzD0F,GAA4B,SAAC,GAAiC,IAA/Bb,EAA8B,EAA9BA,OAAQW,EAAsB,EAAtBA,IAAKjD,EAAiB,EAAjBA,MAC1CvD,EAAUoD,IAChB,OACE,2BACE,gBAAC,IAAD,CACEuD,QACE,gBAAC,IAAD,CACElC,SAAmB,IAAVlB,GAA4B,SAAVA,EAC3BA,MAAOA,EACPvB,MAAO,CAAE3B,QAAS,OAClBJ,UAAWD,EAAQlB,KACnB2B,MAAM,UACNyD,SAAU,SAAAC,GACRpB,GAAY,EACZC,EAAa,CACXO,MAAOY,EAAEC,OAAOK,QAChB/C,KAAMmE,EAAM,KACZvC,GAAIkD,EAAG,OAKf1E,MAAM,OAMR8E,GAAmC,SAAC5F,GAAD,OACvC,gBAAC,IAAD,eAAkBsF,mBAAoBI,IAA+B1F,KAGjE6F,GAAsB,SAAC,GAA0B,IAAxBhB,EAAuB,EAAvBA,OAAQW,EAAe,EAAfA,IAC/BlD,EAAauC,EAAM,KAAW,IAAMW,EAAG,GAC7C,OACE,uBACElD,GAAIA,EACJlB,QAAS,SAAA+B,GAEP2C,QAAQC,IAAI,KAAM5C,KAGpB,gBAAC,IAAD,CAAuB1D,MAAM,cAAcuB,MAAO,CAAEgF,WAAY,QAC9D,4BACE,wBAAMhF,MAAO,CAAEiF,aAAc,OAAQhF,SAAU,SAC7C,gBAAC,IAAD,CAAiB2C,KAAMsC,IAAclF,MAAO,CAAEvB,MAAO,cAEvD,wBAAMuB,MAAO,CAAElB,eAAgB,YAAaL,MAAO,YAAnD,mBASJ0G,GAA6B,SAACnG,GAAD,OACjC,gBAAC,IAAD,eAAkBsF,mBAAoBO,IAAyB7F,KAG3DoG,GAA2B,SAAC,GAAoB,IAAlB7D,EAAiB,EAAjBA,MAKlC,OACE,2BACE,gBAAC,IAAD,CACE8D,aAAW,WACX3F,KAAK,WACL6B,MAAOA,EACPW,SAAU,SAAAC,GACRA,EAAEO,kBACF7B,GAAgB,EAChBC,EAAgBqB,EAAEC,OAAOb,OAE3BiD,KAAG,GAfK,CACZ,CAAEjD,MAAO,UAAWzB,MAAO,WAC3B,CAAEyB,MAAO,mBAAoBzB,MAAO,qBAezBH,IAAI,SAACC,EAAW0F,GAAZ,OACT,gBAAC,IAAD,CACE1D,IAAK0D,EACL/D,MAAO3B,EAAK2B,MACZoD,QAAS,gBAAC,IAAD,CAAkBlG,MAAM,YACjCqB,MAAOF,EAAKE,MACZyF,eAAe,aAQrBC,GAAkC,SAACxG,GAAD,OACtC,gBAAC,IAAD,eAAkBsF,mBAAoBc,IAA8BpG,KAGhEyG,GAA2B,SAAC,GAAoB,IAAlBlE,EAAiB,EAAjBA,MAMlC,OACE,2BACE,gBAAC,IAAD,CACE8D,aAAW,WACX3F,KAAK,WACL6B,MAAOA,EACPW,SAAU,SAAAC,GACRA,EAAEO,kBACF7B,GAAgB,EAChBC,EAAgBqB,EAAEC,OAAOb,OAE3BiD,KAAG,GAhBK,CACZ,CAAEjD,MAAO,UAAWzB,MAAO,WAC3B,CAAEyB,MAAO,aAAczB,MAAO,cAC9B,CAAEyB,MAAO,mBAAoBzB,MAAO,qBAezBH,IAAI,SAACC,EAAW0F,GAAZ,OACT,gBAAC,IAAD,CACE1D,IAAK0D,EACL/D,MAAO3B,EAAK2B,MACZoD,QAAS,gBAAC,IAAD,CAAkBlG,MAAM,YACjCqB,MAAOF,EAAKE,MACZyF,eAAe,MACfnF,QAAS,SAAA+B,GACPtB,GAAgB,EAChBiE,QAAQC,IAAI,6BAA8B5C,IAE5CD,SAAU,SAAAC,GACRtB,GAAgB,EAEhBiE,QAAQC,IAAI,8BAA+B5C,WASnDuD,GAAkC,SAAC1G,GAAD,OACtC,gBAAC,IAAD,eAAkBsF,mBAAoBmB,IAA8BzG,KAGhE2G,GAAqB,SAAC,GAAoB,IAAlBpE,EAAiB,EAAjBA,MAO5B,OADAuD,QAAQC,IAAI,sBAAuBxD,GAEjC,2BACE,gBAAC,IAAD,CACE8D,aAAW,WACX3F,KAAK,WACL6B,MAAOA,EACPW,SAAU,SAAAC,GACRA,EAAEO,kBACF7B,GAAgB,EAChBC,EAAgBqB,EAAEC,OAAOb,OAE3BiD,KAAG,GAjBK,CACZ,CAAEjD,MAAO,QAASzB,MAAO,SACzB,CAAEyB,MAAO,MAAOzB,MAAO,aACvB,CAAEyB,MAAO,eAAgBzB,MAAO,qBAgBrBH,IAAI,SAACC,EAAW0F,GAAZ,OACT,gBAAC,IAAD,CACE1D,IAAK0D,EACL/D,MAAO3B,EAAK2B,MACZoD,QAAS,gBAAC,IAAD,CAAkBlG,MAAM,YACjCqB,MAAOF,EAAKE,MACZyF,eAAe,MACfnF,QAAS,SAAA+B,GACPtB,GAAgB,EAChBiE,QAAQC,IAAI,6BAA8B5C,IAE5CD,SAAU,SAAAC,GACRtB,GAAgB,EAEhBiE,QAAQC,IAAI,8BAA+B5C,WASnDyD,GAAwB,SAAC5G,GAAD,OAC5B,gBAAC,IAAD,eAAkBsF,mBAAoBqB,IAAwB3G,KAG1D6G,GAAsB,SAAC,GAAoB,IAAlBtE,EAAiB,EAAjBA,MAQ7B,OAAO,gBAAC,EAAD,CAAQtC,MAPD,CACZ,CAAES,KAAM,GAAI6B,MAAO,IACnB,CAAE7B,KAAM,UAAW6B,MAAO,WAC1B,CAAE7B,KAAM,SAAU6B,MAAO,UACzB,CAAE7B,KAAM,UAAW6B,MAAO,WAC1B,CAAE7B,KAAM,WAAY6B,MAAO,aAEAA,MAAOA,KAGhCuE,GAA6B,SAAC9G,GAAD,OACjC,gBAAC,IAAD,eAAkBsF,mBAAoBuB,IAAyB7G,KAG3D+G,GAAsB,SAAC,GAAoB,IAAlBxE,EAAiB,EAAjBA,MAY7B,OAAO,gBAAC,EAAD,CAAQtC,MAXD,CACZ,CAAES,KAAM,aAAc6B,MAAO,cAC7B,CAAE7B,KAAM,cAAe6B,MAAO,eAC9B,CAAE7B,KAAM,YAAa6B,MAAO,aAC5B,CAAE7B,KAAM,WAAY6B,MAAO,YAC3B,CAAE7B,KAAM,eAAgB6B,MAAO,gBAC/B,CAAE7B,KAAM,SAAU6B,MAAO,UACzB,CAAE7B,KAAM,YAAa6B,MAAO,aAC5B,CAAE7B,KAAM,OAAQ6B,MAAO,SAGIA,MAAOA,KAGhCyE,GAA6B,SAAChH,GAAD,OACjC,gBAAC,IAAD,eAAkBsF,mBAAoByB,IAAyB/G,KAG3DiH,GAAgB,SAAC,GAAoB,IAAlB1E,EAAiB,EAAjBA,MAKvB,OAAO,gBAAC,EAAD,CAAQtC,MAJD,CACZ,CAAES,KAAM,eAAgB6B,MAAO,gBAC/B,CAAE7B,KAAM,SAAU6B,MAAO,WAEEA,MAAOA,KAGhC2E,GAAuB,SAAClH,GAAD,OAC3B,gBAAC,IAAD,eAAkBsF,mBAAoB2B,IAAmBjH,KAGrDmH,GAAkB,SAAC,GAAoB,IAAlB5E,EAAiB,EAAjBA,MACnB6E,EAAmBjF,IACzB,OACE,gBAAC,IAAD,CACEI,MAAOA,EACPX,KAAM,SACN5C,QAASoI,KAKTC,GAAyB,SAACrH,GAAD,OAC7B,gBAAC,IAAD,eAAkBsF,mBAAoB6B,IAAqBnH,KAGvDsH,GAAgB,SAAC,GAAoB,IAAlB/E,EAAiB,EAAjBA,MACjB6E,EAAmBjF,IACzB,OAAO,gBAAC,IAAD,CAAsBI,MAAOA,EAAOvD,QAASoI,KAGhDG,GAAuB,SAACvH,GAAD,OAC3B,gBAAC,IAAD,eAAkBsF,mBAAoBgC,IAAmBtH,KAGrDwH,GAAgB,SAAC,GAAoB,IAAlBjF,EAAiB,EAAjBA,MACnBkF,EAAOlF,EACX,GAAIkF,EACF,IACEA,EAAOC,IAAOnF,GAAOoF,OAAO,gBAC5B,MAAOC,GACPH,EAAOlF,OAGTkF,EAAO,GAGT,OAAOA,GAGHI,GAA2B,SAAC7H,GAAD,OAC/B,gBAAC,IAAD,eAAkBsF,mBAAoBkC,IAAmBxH,KAGrD8H,GAAgB,SAAC,GAAoB,IAAlBvF,EAAiB,EAAjBA,MACnBkF,EAAOlF,EACX,GAAIkF,EACF,IACEA,EAAOC,IAAOnF,GAAOoF,OAAO,cAC5B,MAAOC,GACPH,EAAOlF,OAGTkF,EAAO,GAGT,OAAOA,GAGHM,GAA2B,SAAC/H,GAAD,OAC/B,gBAAC,IAAD,eAAkBsF,mBAAoBwC,IAAmB9H,KAwC9CgI,GAAgD,SAC3DhI,GACiB,IAEfiI,EAiBEjI,EAjBFiI,QACAC,EAgBElI,EAhBFkI,iBACAC,EAeEnI,EAfFmI,aACAC,EAcEpI,EAdFoI,cACAC,EAaErI,EAbFqI,cACAC,EAYEtI,EAZFsI,cACAC,EAWEvI,EAXFuI,YACAC,EAUExI,EAVFwI,cACAC,EASEzI,EATFyI,YACAC,EAQE1I,EARF0I,iBACAC,EAOE3I,EAPF2I,YACArG,EAMEtC,EANFsC,GACAsG,EAKE5I,EALF4I,oBACAC,EAIE7I,EAJF6I,MACAC,EAGE9I,EAHF8I,WACAC,EAEE/I,EAFF+I,YACAC,EACEhJ,EADFgJ,MAlBc,EAoBkB5I,mBAAmB,IApBrC,mBAoBT6I,EApBS,KAoBEC,EApBF,OAqBI9I,mBAASJ,EAAMmJ,UAAYnJ,EAAMmJ,UAAY,CAAC,GAAI,GAAI,GAAI,IAAK,IAA5EA,EArBS,sBAsBc/I,mBAAS,IAtBvB,mBAsBTgJ,EAtBS,KAsBAC,EAtBA,OAuBQjJ,mBAASJ,EAAMsJ,MAvBvB,mBAuBTA,EAvBS,KAuBHC,EAvBG,KAwBhBhJ,oBAAU,WACRgJ,EAAQvJ,EAAMsJ,OACb,CAACtJ,EAAMsJ,OAEV,IAAME,EAA2B,QAqDVhJ,IAArB0H,GACAuB,OAAOC,KAAKxB,GAAkByB,OAAS,SAEJnJ,IAA/B0H,EAAgB,QAClBsB,EAAkBI,KAChB,gBAAC,GAAD,CAAwBC,IAAK3B,EAAiB4B,eAGjBtJ,IAA7B0H,EAAgB,MAClBsB,EAAkBI,KAChB,gBAAC,GAAD,CAAsBC,IAAK3B,EAAiBT,aAGRjH,IAApC0H,EAAgB,aAClBsB,EAAkBI,KAChB,gBAAC,GAAD,CAA4BC,IAAK3B,EAAiB6B,oBAGhBvJ,IAAlC0H,EAAgB,WAClBsB,EAAkBI,KAChB,gBAAC,GAAD,CAAsBC,IAAK3B,EAAiB8B,kBAGTxJ,IAAnC0H,EAAgB,YAClBsB,EAAkBI,KAChB,gBAAC,GAAD,CAA4BC,IAAK3B,EAAiB+B,mBAGTzJ,IAAzC0H,EAAgB,kBAClBsB,EAAkBI,KAChB,gBAAC,GAAD,CAA2BC,IAAK3B,EAAiBgC,yBAGnB1J,IAA9B0H,EAAgB,OAClBsB,EAAkBI,KAChB,gBAAC,GAAD,CAAuBC,IAAK3B,EAAiBiC,cAGJ3J,IAAzC0H,EAAgB,kBAClBsB,EAAkBI,KAChB,gBAAC,GAAD,CACEC,IAAK3B,EAAiBkC,yBAIkB5J,IAA1C0H,EAAgB,mBAClBsB,EAAkBI,KAChB,gBAAC,GAAD,CACEC,IAAK3B,EAAiBmC,0BAIkB7J,IAA1C0H,EAAgB,mBAClBsB,EAAkBI,KAChB,gBAAC,GAAD,CACEC,IAAK3B,EAAiBoC,0BAIY9J,IAApC0H,EAAgB,aAClBsB,EAAkBI,KAChB,gBAAC,GAAD,eACEC,IAAK3B,EAAiBqC,aAClBvK,UAIgCQ,IAAtC0H,EAAgB,eAClBsB,EAAkBI,KAChB,gBAAC,GAAD,eACEC,IAAK3B,EAAiBsC,eAClBxK,UAIuBQ,IAA7B0H,EAAgB,MAClBsB,EAAkBI,KAChB,gBAAC,GAAD,CAA0BC,IAAK3B,EAAiBuC,aAGnBjK,IAA7B0H,EAAgB,MAClBsB,EAAkBI,KAChB,gBAAC,GAAD,CAA0BC,IAAK3B,EAAiBwC,SAKtD,IAAIC,EAAUvG,GAEd,OACE,gBAACwG,EAAA,EAAD,CAAOtI,GAAIA,GACRtC,EAAM6K,OAAS7K,EAAM6K,SAAW,KACjC,gBAAC,IAAD,CAAMvB,KAAMA,EAAMrB,QAASA,GACxBuB,EAECpB,EAOE,KANF,gBAAC,IAAD,CACEW,YAAaA,EACb+B,oBAhJmB,SAACC,GAC5B,IAAIC,EAAQhC,EAAQ+B,EAEpB/K,EAAMiL,aAAaF,EAAMC,IA8IjBE,SAAUlC,EACVmC,iBAvJa,SAAC5I,GAEtBvC,EAAMoL,kBAAkB7I,MAyJlB6F,EAA2D,KAA3C,gBAAC,IAAD,CAAcU,WAAYA,KAE1CT,GAAiBQ,EAAQ,gBAAC,IAAD,CAAatG,MAAOsG,IAAY,KAEzDN,EAMGA,EAID,KAHF,gBAAC,IAAD,CACE8C,eAAgB,KAPlB,gBAAC,IAAD,CACEA,eAAgB,GAChBjC,QAASA,EACTkC,gBAxJe,SAACnI,GACxBnD,EAAMuL,cAAcpI,GACpBkG,EAAWlG,GACXoG,EAAQ,OA6JFhB,EAAsC,KAAxB,gBAAC,IAAD,MAEdD,GAAkBM,EAKhB,KAJF,gBAAC,IAAD,CACEK,UAAWA,EACXuC,kBA/JV,SAA+BC,GAE7B,GADA3F,QAAQC,IAAI,kBACR/F,EAAM0L,WAEH7J,GAAkBE,EAGZF,GACTiE,QAAQC,IAAI,gBAAiB0F,GACzBzL,EAAM2L,iBACR3L,EAAM2L,gBAAgBF,EAAa,GAAI3J,GACzCD,GAAgB,GACPE,IACT+D,QAAQC,IAAI,gBAAiB/F,EAAM4L,aAC/B5L,EAAM4L,aAAa5L,EAAM4L,YAAY5J,GACzCD,GAAY,EACZC,EAAa,KAXb8D,QAAQC,IAAI,cACZ/F,EAAM0L,WAAWD,SAanB,GAAItD,EAAc,CAChB,IAAM0D,EAAeJ,EAAa9I,KAChC,SAACD,GAAD,OAAuD,IAAjCuG,EAAU6C,QAAQpJ,KAG1CoD,QAAQC,IAAI0F,EAAcxC,EAAW4C,QAChBrL,IAAjBqL,GACF3C,EAAa,CAAC2C,SAGhB3C,EAAauC,MAqIXnD,EAA0C,KAA1B,gBAAC,IAAD,MAEhBE,EAUE,KATF,gBAAC,IAAD,CACEuD,eAAgB,GAChBC,aAC0BxL,IAAxBR,EAAMiM,cAA8BjM,EAAMiM,cAAgB,GAE5DC,uBAAwBlM,EAAMkM,uBAC9BxD,iBAAkB1I,EAAMmM,iBACxBC,gBAAiBpM,EAAMqM,iBAIzB7D,EAA0C,KAA1B,gBAAC,IAAD,MAElB,gBAAC,IAAD,CACEE,iBAAkBA,EAClB4D,SAAU,CAAEC,OAAQvM,EAAMwM,WAG1BlE,GAAkBM,EAMfA,EAOD,KANF,gBAAC,IAAD,CACE6D,kBAAgB,EAChB7D,qBAAqB,EACrB8D,cAAgBvE,EAA+B7E,EAAhBK,EAC/BgJ,oBAAqBhJ,IAVvB,gBAAC,IAAD,CACEiJ,eAAgBzE,EAChBuE,cAAgBvE,EAA+B7E,EAAhBK,EAC/BgJ,oBAAqBhJ,IAWzB,gBAAC,IAAD,CACEkJ,qBAAsBtE,EACtBuE,mBAAoBlI,KAEpB4D,EAEE,KADF,gBAAC,IAAD,CAAgBkE,cAAe7J,IAEhC8F,EAAc,gBAAC,IAAD,CAAiBA,YAAaA,IAAkB,MAE7DN,GAAiBI,EACjB,gBAAC,IAAD,CAASsE,cAAepC,IACtB,KACFtC,EAEE,KADF,gBAAC,IAAD,CAAa2E,eAAgBjJ,IAG7BqE,EAAwD,KAAxC,gBAAC,IAAD,CAAae,UAAWA,OAMlDnB,GAAe7I,aAAe,CAC5BmK,KAAM,GACNrB,QAAS,GACTS,iBAAkB,GAClByD,iBAAkB,GAClBxD,YAAa,KACbT,iBAAkB,GAClBC,cAAc,EACdE,eAAe,EACfD,eAAe,EACfE,eAAe,EACfE,eAAe,EACfD,aAAa,EACbE,YAAa,KACbwD,cAAe,GACfrD,qBAAqB,EACrBsD,wBAAwB,EACxB5J,GAAI,UACJwG,WAAY,EACZ0D,QAAS,oBACT3D,MAAO,GACPE,YAAa,EACbC,MAAO,G,iFCx4BHiE,GAAQ,IAAIC,KAClBD,GAAME,iBAEC,IAAMC,GAAS,SAACpE,EAAegC,GAElC,IAAIgB,EAAU,CACVhD,MAAOA,EACPgC,KAAMA,GAENqC,EAAwB,CACxBC,OAAQ,OAEZ,OAAGL,GAAME,iBACEF,GAAMM,KAAKF,EAAX,oCAAgDG,KAAKC,UAAUzB,KAAY,GAE/EiB,GAAMS,mBAAmBC,KAAK,kBAAKV,GAAMM,KAAKF,EAAX,oCAAgDG,KAAKC,UAAUzB,KAAY,MAG5G4B,GAAY,SAAC5E,EAAe6E,EAAgB7B,EAAcnD,EAAeO,EAAexG,GAIjG,IAAIkL,EAAiB,QACTtN,IAARoC,GAA6B,KAARA,IACvBkL,EAAc,8CAA0ClL,IAE1D,IAAImL,EAAc,GACd3E,GAA8B,IAAnBA,EAAQO,SACrBoE,EACE,kBACA3E,EAAQ,GAAR,WACA,IACAA,EAAQ,GAAR,WAEJ,IAAI4E,EAAa,GACbhC,GACFA,EAAQiC,QAAQ,SAAAnL,GACdkL,EACEA,EAAa,IAAMlL,EAAM,WAAiB,IAAMA,EAAM,QAG5D,IAAIoL,EAASrF,EAAQ,WAAaA,EAAQ,GACtCsF,EACF,2CAAoCnF,EAApC,yBAA0D6E,GAC1DK,EACAF,EACAD,EACAD,EACY,IAAV9E,IACAmF,EACA,0CAAmCN,GACnCK,EACAF,EACAD,EACAD,GACJ,IAAIT,EAAwB,CACxBC,OAAQ,OAGZ,OAAGL,GAAME,iBACEF,GAAMM,KAAKF,EAAQc,GAAS,GAEhClB,GAAMS,mBAAmBC,KAAK,kBAAKV,GAAMM,KAAKF,EAAQc,GAAS,MAG7DC,GAAgB,SAACzM,GAE1B,IAAI0L,EAAwB,CACxBC,OAAQ,OACRe,KAAM1M,GAGV,OAAGsL,GAAME,iBACEF,GAAMM,KAAKF,EAAX,wBAA2C,GAE/CJ,GAAMS,mBAAmBC,KAAK,kBAAKV,GAAMM,KAAKF,EAAX,wBAA2C,MAG5EiB,GAAU,SAAC3M,EAAcW,GAElC,IAAI+K,EAAwB,CACxBC,OAAQ,MACRe,KAAM1M,GAGV,OAAGsL,GAAME,iBACEF,GAAMM,KAAKF,EAAX,2BAAuC/K,IAAM,GAEjD2K,GAAMS,mBAAmBC,KAAK,kBAAKV,GAAMM,KAAKF,EAAX,2BAAuC/K,IAAM,M,yDC9ErF1E,GAAYC,YAAW,SAAC0Q,GAAD,MAAmB,CAC/CC,OAAQ,GACRC,aAAc,CACbC,aAAcH,EAAMI,QAAQ,OAIjBC,GAAmD,SAAA5O,GAC/D,IAAMhB,EAAUpB,KAmBhB,OACC,kBAACiR,GAAA,EAAD,CACCC,KAAM9O,EAAM+O,YACZC,QAdkB,WAEnBhP,EAAMgP,WAaLC,kBAAgB,oBAChBC,SAAS,KACTjQ,UAAWD,EAAQwP,QAEnB,kBAACW,GAAA,EAAD,CAAa7M,GAAG,qBAAqBtC,EAAMgF,OAC3C,kBAACoK,GAAA,EAAD,KACC,kBAACC,GAAA,EAAD,CAAM5Q,WAAS,EAACkQ,QAAS,EAAGW,QAAQ,gBAAgB3Q,WAAW,cAC9D,kBAAC0Q,GAAA,EAAD,CAAMzO,MAAI,EAAC2O,GAAI,IACbvP,EAAMwM,WAIV,kBAACgD,GAAA,EAAD,CAAevQ,UAAWwQ,mBAAKzQ,EAAQyP,eACtC,kBAACY,GAAA,EAAD,CAAM5Q,WAAS,EAACkQ,QAAS,EAAGW,QAAQ,SAAS3Q,WAAW,cACvD,kBAAC0Q,GAAA,EAAD,CAAMzO,MAAI,EAAC2O,GAAI,GACd,kBAACG,GAAA,EAAD,CAAQtO,QAnCQ,WAEpBpB,EAAMgP,SAAQ,IAiCqBjO,QAAQ,WAAWtB,MAAM,UAAUwE,WAAS,GAA3E,WAID,kBAACoL,GAAA,EAAD,CAAMzO,MAAI,EAAC2O,GAAI,GACd,kBAACG,GAAA,EAAD,CACCtO,QA/Be,WAEpBpB,EAAM2P,WACN3P,EAAMgP,WA6BDjO,QAAQ,YACRtB,MAAM,UACNwE,WAAS,GAEa,WAArBjE,EAAM4P,WAA0B,SAAW,gBASnDhB,GAAkBzP,aAAe,CAChC4P,aAAa,GAGCH,I,SC/EFiB,GAAiB,SAACC,GAE9B,IAAIC,EAAS,sBACPC,EAAQ,IAAIC,KACZC,EAAWJ,EAAI,iBACpB,IAAIG,KAAK,IAAIA,KAAKH,EAAI,kBAAsBK,SAAS,EAAG,EAAG,EAAG,SAC9D3P,EACK4P,EAAWN,EAAI,YACpB,IAAIG,KAAK,IAAIA,KAAKH,EAAI,aAAiBK,SAAS,EAAG,EAAG,EAAG,SACzD3P,EAEDsF,QAAQC,IAAI,WAAYiK,EAAOE,EAAUE,GACrCA,GAAYF,GACfpK,QAAQC,IAAI,QAASmK,GAAYF,EAAOI,GAAYJ,GAEjDE,GAAYxI,IAAOwI,GAAUG,WAAaH,GAAYF,IACzDD,EAAS,UAENK,GAAY1I,IAAO0I,GAAUC,WAAaD,GAAYJ,IACzDD,EAAS,eAEV,IAAMO,IAAiBR,EAAI,aAAoBtP,EACzC+P,EAAST,EAAI,OAAaA,EAAI,YAAatP,EAmBjD,MAjBuB,CACtBgQ,IAAKV,EAAI,IACTW,cAAeX,EAAI,cACnBY,eAAgBZ,EAAI,eAAqBA,EAAI,eAAmBa,gBAAanQ,EAC7EoQ,UAAWd,EAAI,UACfe,wBAAyBf,EAAI,wBAC7BgB,iBAAkBhB,EAAI,iBACtBiB,eAAgBjB,EAAI,eACpBkB,cAAelB,EAAI,cACnBQ,eAAgBA,EACVC,OAAQA,EACdU,iBAAkBnB,EAAI,iBACtBoB,YAAapB,EAAI,YACjBC,OAAQA,EACRoB,aAAcrB,EAAI,eAMPsB,GAAe,SAACtB,GAE5B,IAAIC,EAAS,sBACPC,EAAQ,IAAIC,KACZC,EAAWJ,EAAI,iBACpB,IAAIG,KAAK,IAAIA,KAAKH,EAAI,kBAAsBK,SAAS,EAAG,EAAG,EAAG,SAC9D3P,EACK4P,EAAWN,EAAI,YACpB,IAAIG,KAAK,IAAIA,KAAKH,EAAI,aAAiBK,SAAS,EAAG,EAAG,EAAG,SACzD3P,EAEDsF,QAAQC,IAAI,WAAYiK,EAAOE,EAAUE,GACrCA,GAAYF,GACfpK,QAAQC,IAAI,QAASmK,GAAYF,EAAOI,GAAYJ,GAEjDE,GAAYxI,IAAOwI,GAAUG,WAAaH,GAAYF,IACzDD,EAAS,UAENK,GAAY1I,IAAO0I,GAAUC,WAAaD,GAAYJ,IACzDD,EAAS,eAGV,IAAMO,IAAiBR,EAAI,aAAoBtP,EACzC+P,EAAST,EAAI,OAAaA,EAAI,YAAatP,EAejD,MAbsB,CACfgQ,IAAKV,EAAI,IACTuB,KAAMvB,EAAI,KACVwB,YAAaxB,EAAI,YACjByB,SAAUzB,EAAI,SACdQ,eAAgBA,EAChBC,OAAQA,EACRU,iBAAkBnB,EAAI,iBACtBoB,YAAapB,EAAI,YACjBC,OAAQA,EACRoB,aAAcrB,EAAI,eAMb0B,GAAmB,SAAC1B,GAChC,OAAIA,EAEwB,CAC3BU,IAAKV,EAAKU,IACVC,cAAeX,EAAI,cACnBY,eAAgBZ,EAAI,eAAqBA,EAAI,eAAmBa,gBAAanQ,EAC7EoQ,UAAWd,EAAKc,UAChBC,wBAAyBf,EAAKe,wBAC9BC,iBAAkBhB,EAAKgB,iBACvBC,eAAgBjB,EAAKiB,eACrBC,cAAelB,EAAKkB,cACdC,iBAAkBnB,EAAKmB,iBACvBC,YAAapB,EAAKoB,YAClBnB,OAAQD,EAAKC,OACbO,eAAgBmB,QAAQ3B,EAAKQ,gBACnCC,OAAQT,EAAKQ,eAAiBR,EAAKS,OAAS,GAC5CY,aAAcrB,EAAI,cAfX4B,MAoBIC,GAAiB,SAAC7B,GAC9B,OAAIA,EAEsB,CACnBU,IAAKV,EAAKU,IACVa,KAAMvB,EAAKuB,KACXC,YAAaxB,EAAKwB,YAClBC,SAAUzB,EAAKyB,SACfN,iBAAkBnB,EAAKmB,iBACvBC,YAAapB,EAAKoB,YAClBnB,OAAQD,EAAKC,OACbO,eAAgBmB,QAAQ3B,EAAKQ,gBAC7BC,OAAQT,EAAKQ,eAAiBR,EAAKS,OAAS,IAV3CqB,MAeIF,GAAsB,WAYlC,MAXuB,CACtBd,UAAW,GACXE,iBAAkB,GAClBC,eAAgB,GAChBC,cAAe,GACfC,iBAAkB,GAClBC,YAAa,GACbnB,OAAQ,GACRO,gBAAgB,EAChBC,OAAQ,KAKGqB,GAAoB,WAWhC,MAVqB,CACpBP,KAAM,GACNC,YAAa,GACbC,SAAU,GACVN,iBAAkB,GAClBC,YAAa,GACbnB,OAAQ,GACRO,gBAAgB,EAChBC,OAAQ,KAKGsB,GAAoB,SAAC/B,GACjC,IAAMnO,EAAiB8H,OAAOqI,OAAO,GAAIhC,GAUzC,OARAnO,EAAO,OAAaA,EAAO,eAAqBA,EAAO,OAAa,QAE1CnB,IAAtBmB,EAAO,eACHA,EAAO,OAEgB,KAA3BA,EAAO,oBACHA,EAAO,YAERA,GAGKoQ,GAAkB,SAACjC,GAC/B,IAAMnO,EAAe8H,OAAOqI,OAAO,GAAIhC,GAUvC,OARAnO,EAAO,OAAaA,EAAO,eAAqBA,EAAO,OAAa,QAE1CnB,IAAtBmB,EAAO,eACHA,EAAO,OAEgB,KAA3BA,EAAO,oBACHA,EAAO,YAERA,GAGKqQ,GAAqB,SAAClC,GAClC,IAAImC,EAAoB,GAgBxB,OAfIC,MAAMC,QAAQrC,GACjBmC,EAAWnC,EAEXmC,EAASrI,KAAKkG,GAEUmC,EAAStR,IAAI,SAAAC,GAQrC,MAP4B,KAAxBA,EAAI,oBACAA,EAAI,iBAEWJ,IAAnBI,EAAI,eACAA,EAAI,OAEZA,EAAI,OAAaA,EAAI,eAAqBA,EAAI,OAAa,GACpDA,KAKIwR,GAAmB,SAACtC,GAChC,IAAImC,EAAkB,GAgBtB,OAfIC,MAAMC,QAAQrC,GACjBmC,EAAWnC,EAEXmC,EAASrI,KAAKkG,GAEQmC,EAAStR,IAAI,SAAAC,GAQnC,MAP4B,KAAxBA,EAAI,oBACAA,EAAI,iBAEWJ,IAAnBI,EAAI,eACAA,EAAI,OAEZA,EAAI,OAAaA,EAAI,eAAqBA,EAAI,OAAa,GACpDA,K,UCnLHyR,GAAS,IAAIC,KAAMC,gBAuDZC,GAAb,YAIE,WAAYxS,GAAQ,IAAD,uBACjB,4CAAMA,KAJAyS,oBAGW,IAFXC,mBAEW,IA2FnBC,YAAc,SAACC,GACS,KAAlBA,EAAMC,SACR,EAAKC,6BA7FU,EAiGnBC,YAAc,WACZ,EAAKC,SAAS,CAAEC,gBAAgB,8BAChC,EAAKC,WACH,GACA,EACA,EAAKC,MAAMC,gBACX,EAAKD,MAAME,cACX,EAAKF,MAAMG,gBACX,EAAKH,MAAMI,kBAzGI,EAqJnBC,eAAiB,SAAC1D,GAChBuC,GAAOoB,OAAO,UAAU9F,KAAK,SAAA+F,GAC3B,IAAIC,EAAKD,EAAIE,OACb,IACEvB,GAAOwB,YAAYF,EAAI,aAAc7D,GAClCnC,KAAK,SAAA+F,GAAG,OAAI5N,QAAQC,IAAI,MAAO2N,KAC/BI,MAAM,SAAA3Q,GAAC,OAAI2C,QAAQC,IAAI5C,KAC1B,MAAOA,GACP2C,QAAQC,IAAI5C,OA7JC,EAkKnB4Q,iBAAmB,SAACjE,GAClBuC,GAAOoB,OAAO,UAAU9F,KAAK,SAAA+F,GAC3B,IAAIC,EAAKD,EAAIE,OACb,IACEvB,GAAO2B,iBAAiBL,EAAI,aAAc7D,EAAI,IAASA,GACpDnC,KAAK,SAAA+F,GAAG,OAAI5N,QAAQC,IAAI,uCAAwC2N,KAChEI,MAAM,SAAA3Q,GAAC,OAAI2C,QAAQC,IAAI5C,KAC1B,MAAOA,GACP2C,QAAQC,IAAI5C,OA1KC,EAgLnB8Q,0BAhLmB,qBAgLS,sBAAAC,EAAA,qEACpB5B,KAAM6B,eAAe,cACxBxG,KAAK,SAAAyG,GACJ,GAAIlC,MAAMC,QAAQiC,IAASA,EAAKzK,OAAS,EAAG,CAC1C,IAAI0K,EAAyB,GACzBC,EAAuC,CAAC,CAAE5T,KAAM,GAAI6B,MAAO,KAC/D6R,EAAKtR,OAAO,SAAAlC,GACV,SAAIA,IAAQA,EAAKoQ,eAAkBqD,EAAaE,SAAS3T,EAAKoQ,kBAC5DqD,EAAazK,KAAKhJ,EAAKoQ,eACvBsD,EAA8B1K,KAAK,CAAElJ,KAAME,EAAKoQ,cAAezO,MAAO3B,EAAKoQ,iBACpE,KAIX,EAAKhR,MAAMwU,iBAAiBH,GAC5B,EAAKrU,MAAMyU,uBAAuBH,GAClC,EAAKtB,SAAS,CACZ0B,eAAgBL,EAChBM,8BAA+BL,OAIpCR,MAAM,SAAAc,GAAG,OAAI9O,QAAQC,IAAI6O,KAtBF,yCAhLT,EAyMnB1B,WAAa,SACXlK,EACAgC,EACAgB,EACA6I,EACAzL,EACA0L,GAEAlH,GAAU5E,EAAOgC,EAAMgB,EAAS6I,EAAgBzL,EAAS0L,GAASnH,KAAK,SAAAoH,GAErE,GADA,EAAK/B,SAAS,CAAEC,gBAAiB,sBAC7B8B,QAA+BvU,IAAnBuU,EAASnN,MAAqB,CAC5C,IAAMoN,EAAQ,EAAKC,qBACjBF,EAASnB,OAASmB,EAASnB,OAAS,IAItC,EAAKZ,SAAS,CACZkC,cAAeH,EACfI,cAAeH,EACfI,UAAWJ,EACXK,eAAe,EACfvM,WAAYiM,EAASO,OAASP,EAASO,MAAMC,MAAQR,EAASO,MAAMC,MAAQ,SAEzE,GAAIR,GAAYA,EAASnN,OAAuC,MAA9BmN,EAASnN,MAAM4N,WAAoB,CAC1E,IAAMR,EAAQ,EAAKC,qBAAqB,IAGxC,EAAKjC,SAAS,CACZkC,cAAe,GACfC,cAAeH,EACfK,eAAe,EACftG,aAAa,EACb0G,WAAY,eACZC,aAAc,oDAEX,CACL,IAAMV,EAAQ,EAAKC,qBAAqB,IAGxC,EAAKjC,SAAS,CACZkC,cAAe,GACfC,cAAeH,EACfK,eAAe,EACftG,aAAa,EACb0G,WAAY,iBACZC,aAAc,yDAGjB5B,MAAM,WACP,IAAMkB,EAAQ,EAAKC,qBAAqB,IAGxC,EAAKjC,SAAS,CACZkC,cAAe,GACfC,cAAeH,EACfK,eAAe,EACftG,aAAa,EACb0G,WAAY,iBACZC,aAAc,oDACd3K,KAAM,OApQO,EA0QnB4K,UAAY,SAAC7F,GACX,IAAMnO,EAAiBkQ,GAAkB/B,GAEzC,EAAKkD,SAAS,CACZqC,eAAe,EACfpC,gBAAgB,8BAElB3E,GAAQd,KAAKC,UAAU9L,GAAUA,EAAQ6O,KAAK7C,KAAK,SAAAoH,GACjD,EAAK/B,SAAS,CACZqC,eAAe,EACfpC,gBAAiB,sBAEf8B,QAA+BvU,IAAnBuU,EAASnN,YAA4CpH,IAArBuU,EAASvI,SACvD,EAAKoJ,iBAAiB,EAAKzC,MAAMnK,MAAO,EAAKmK,MAAMnK,MAAQ,EAAKmK,MAAMpI,MACtE,EAAKgJ,iBAAiBpS,GACtB,EAAKqR,SAAS,CACZ6C,mBAAmB,EACnB9G,aAAa,EACb0G,WAAY,UACZC,aAAa,YAAD,OAAcX,EAASvI,QAAvB,aAELuI,GAAYA,EAASnN,OAAuC,MAA9BmN,EAASnN,MAAM4N,WACtD,EAAKxC,SAAS,CACZjE,aAAa,EACb0G,WAAY,eACZC,aAAc,gDAEPX,GAAYA,EAASnN,OAAuC,MAA9BmN,EAASnN,MAAM4N,YAAsBT,EAASnN,MAAM4E,QAC3F,EAAKwG,SAAS,CACZjE,aAAa,EACb0G,WAAY,kBACZC,aAAcX,EAASnN,MAAM4E,UAG/B,EAAKwG,SAAS,CACZjE,aAAa,EACb0G,WAAY,SACZC,aAAc,yCAGjB5B,MAAM,SAAAlM,GACM,sBAATA,EACF,EAAKoL,SAAS,CACZjE,aAAa,EACb0G,WAAY,kBACZC,aAAc,4BACdL,eAAe,IAGjB,EAAKrC,SAAS,CACZjE,aAAa,EACb0G,WAAY,SACZC,aAAc,qCACdL,eAAe,OA/TJ,EAuUnBS,SAAW,SAAChG,GACV,EAAKkD,SAAS,CACZqC,eAAe,IAGjB,IAAM1T,EAAmBqQ,GAAmBlC,GAC5C1B,GAAcZ,KAAKC,UAAU9L,IAAUgM,KAAK,SAAAoH,GAC1C,EAAK/B,SAAS,CACZqC,eAAe,IAEbN,QAA+BvU,IAAnBuU,EAASnN,OAAuBmN,EAASvI,SAAWuI,EAASnB,QAC3E,EAAKgC,iBAAiB,EAAKzC,MAAMnK,MAAO,EAAKmK,MAAMnK,MAAQ,EAAKmK,MAAMpI,MACtE,EAAKyI,eAAeuB,EAASnB,QAC7B,EAAKZ,SAAS,CACZ6C,mBAAmB,EACnB9G,aAAa,EACb0G,WAAY,UACZC,aAAa,+BAAD,OAAiCX,EAASnB,OAAOjK,OAAjD,qBAELoL,GAAYA,EAASnN,OAAuC,MAA9BmN,EAASnN,MAAM4N,WACtD,EAAKxC,SAAS,CACZjE,aAAa,EACb0G,WAAY,eACZC,aAAc,+CAEPX,GAAYA,EAASnN,OAAuC,MAA9BmN,EAASnN,MAAM4N,YAAsBT,EAASnN,MAAM4E,QAC3F,EAAKwG,SAAS,CACZjE,aAAa,EACb0G,WAAY,kBACZC,aAAcX,EAASnN,MAAM4E,UAI/B,EAAKwG,SAAS,CACZjE,aAAa,EACb0G,WAAY,SACZC,aAAc,yCAGjB5B,MAAM,SAAAlM,GACM,sBAATA,EACF,EAAKoL,SAAS,CACZjE,aAAa,EACb0G,WAAY,kBACZC,aAAc,4BACdL,eAAe,IAGjB,EAAKrC,SAAS,CACZjE,aAAa,EACb0G,WAAY,SACZC,aAAc,qCACdL,eAAe,OA3XJ,EAmgBnBO,iBAAmB,SAAC5M,EAAegC,GACjC,EAAK8H,4BACL,EAAKE,SAAS,CACZqC,eAAe,EACfpC,gBAAgB,8BAGsB,IAAtC,EAAKE,MAAMC,gBAAgBzJ,QACE,KAA7B,EAAKwJ,MAAME,eAC2B,IAAtC,EAAKF,MAAMG,gBAAgB3J,QACI,KAA/B,EAAKwJ,MAAMI,gBAEX,EAAKL,WACHlK,EACAgC,EACA,EAAKmI,MAAMC,gBACX,EAAKD,MAAME,cACX,EAAKF,MAAMG,gBACX,EAAKH,MAAMI,iBAEbnG,GAAOpE,EAAOgC,GAAM2C,KAAK,SAAAoH,GAEvB,GADA,EAAK/B,SAAS,CAAEC,gBAAiB,sBAC7B8B,QAA+BvU,IAAnBuU,EAASnN,MAAqB,CAC5C,IAAMoN,EAAQ,EAAKC,qBACjBF,EAASnB,OAASmB,EAASnB,OAAS,IAItC,EAAKZ,SAAS,CACZkC,cAAeH,EACfI,cAAeH,EACfI,UAAWJ,EACXK,eAAe,EACfvM,WAAYiM,EAASO,OAASP,EAASO,MAAMC,MAAQR,EAASO,MAAMC,MAAQ,SAEzE,GAAIR,GAAYA,EAASnN,OAAuC,MAA9BmN,EAASnN,MAAM4N,WAAoB,CAC1E,IAAMR,EAAQ,EAAKC,qBAAqB,IAGxC,EAAKjC,SAAS,CACZkC,cAAe,GACfC,cAAeH,EACfK,eAAe,EACftG,aAAa,EACb0G,WAAY,eACZC,aAAc,oDAEX,CACL,IAAMV,EAAQ,EAAKC,qBAAqB,IAGxC,EAAKjC,SAAS,CACZkC,cAAe,GACfC,cAAeH,EACfK,eAAe,EACftG,aAAa,EACb0G,WAAY,iBACZC,aAAc,0DA5jBL,EAwkBnBK,oBAAsB,SAAC3M,GACrB,EAAK4J,SAAS,CACZqC,eAAe,EACfpC,gBAAgB,8BAEd7J,GAAWA,EAAQO,OAAS,GAC9B,EAAKuJ,WACH,EAAKC,MAAMnK,MACX,EAAKmK,MAAMpI,KAAO,EAAKoI,MAAMnK,MAC7B,EAAKmK,MAAMC,gBACX,EAAKD,MAAME,cACXjK,EACA,EAAK+J,MAAMI,kBAplBE,EA6lBnByC,qBAAuB,SAAClT,GACtB,IAAMmT,EAAI,eAENA,EAAK9C,MAAM+C,eACbC,aAAaF,EAAK9C,MAAM+C,eAG1BD,EAAKjD,SAAS,CACZI,gBAAiBtQ,EACjBsT,QAAQ,EACRrL,KAAM,EACNmL,cAAeG,WAAW,WACxBJ,EAAKjD,SAAS,CACZqC,eAAe,EACfpC,gBAAgB,8BAEiB,IAA/BgD,EAAK9C,MAAMC,gBACb6C,EAAK/C,WACH+C,EAAK9C,MAAMnK,MACX,EACAlG,EACAmT,EAAK9C,MAAME,cACX4C,EAAK9C,MAAMG,gBACX2C,EAAK9C,MAAMI,iBAGb0C,EAAKlD,eAEN,QAznBY,EA6nBnBuD,aAAe,SAACnT,GAA4C,IAClDZ,EAAUY,EAAEC,OAAZb,MAEF0T,EAAI,eAENA,EAAK9C,MAAM+C,eACbC,aAAaF,EAAK9C,MAAM+C,eAE1BD,EAAKjD,SAAS,CACZK,cAAe9Q,EACf6T,QAAQ,EACRrL,KAAM,EACNmL,cAAeG,WAAW,WACxBJ,EAAKjD,SAAS,CACZqC,eAAe,EACfrM,MAAO,GACPiK,gBAAgB,8BAEe,KAA7BgD,EAAK9C,MAAME,cACb4C,EAAK/C,WACH+C,EAAK9C,MAAMnK,MACX,EACAiN,EAAK9C,MAAMC,gBACX6C,EAAK9C,MAAME,cACX4C,EAAK9C,MAAMG,gBACX2C,EAAK9C,MAAMI,iBAGb0C,EAAKlD,eAEN,QA3pBY,EAmqBnBwD,eAAiB,SAAC/Q,GAAc,IAEtB0P,EAAkB,EAAK/B,MAAvB+B,cACR,GAAK,EAAK/B,MAAM+B,eAAkB,EAAK/B,MAAM+B,cAActB,OAA3D,CAGA,IAAM9D,EAAcD,GAAeqF,EAActB,OAAOpO,IACxD,EAAKgR,YAAY1G,GAAM,GACvB,EAAKkD,SAAS,CACZyD,UAAW3G,GACV,kBAAM,EAAK4G,+BAA+B,YA7qB5B,EAorBnBC,iBAAmB,SAAC5N,EAAqBiC,GACvC,EAAKgI,SAAS,CACZjI,KAAMhC,IAER,EAAK6M,iBAAiB,EAAKzC,MAAMnK,MAAOgC,IAxrBvB,EA8rBnB4L,qBAAuB,SAAArU,GAGjB,EAAK4Q,MAAMrK,YAFC,IAGd,EAAKkK,SAAS,CACZ6D,iBAAiB,KAGnB,EAAK7D,SAAS,CACZhK,MAAOzG,IAGT,EAAKqT,iBAAiBrT,EAAOA,EAAQ,EAAK4Q,MAAMpI,QA1sBjC,EAktBnB+L,wBAA0B,SAAClU,GACzB,EAAKkQ,4BACL,EAAKE,SAAS,CACZjI,KAAM,EACNsK,eAAe,EACfpC,gBAAgB,mCAENzS,IAARoC,GACF,EAAKsQ,WACH,EAAKC,MAAMnK,MACX,EACA,EAAKmK,MAAMC,gBACX,EAAKD,MAAME,cACX,EAAKF,MAAMG,gBACX1Q,IAhuBa,EA2wBnBkQ,0BAA4B,WAC1B,EAAKE,SAAS,CACZ+D,sBAAuB,OACvBC,sBAAuB,GACvBP,UAAW/E,QA/wBI,EAuxBnBgF,+BAAiC,SAACnU,GAChC,IAAIyC,EAAK,GACT,GAAIzC,GAAmB,SAAVA,EAAkB,CAC7ByC,EAAK,eAAW,EAAKmO,MAAM8D,aAC3B,IAAMC,EAAqB1F,GAAiB2F,qBAAU,EAAKhE,MAAMsD,YACjE,EAAKzD,SAAS,CAAEyD,UAAWS,SAClB3U,GAAmB,SAAVA,GAAoB,EAAK4Q,MAAMsD,UACjDzR,EAAQ,EAAKmO,MAAMsD,UAAX,UAAoC,EAAKtD,MAAMsD,UAAX,UAAoC,GACvElU,GAAmB,QAAVA,IAClByC,EAAK,kBAEP,EAAKgO,SAAS,CACZgE,sBAAuBzU,EACvB0U,YAAajS,GACZ,kBAAM,EAAKoS,qBAryBG,EA4yBnBA,gBAAkB,WAChB,EAAKpE,SAAS,CACZ+D,sBAAuB,SACtB,kBAAM,EAAKM,kCA/yBG,EAqzBnBC,0BAA4B,WAC1B,EAAKtE,SAAS,CACZjE,aAAa,EACb0G,WAAY,4BACZC,aAAc,iDAzzBC,EA+zBnB2B,6BAA+B,WAEzB,EAAKlE,MAAMsD,YAAc,EAAKtD,MAAMsD,UAAUnG,iBAChD,EAAK6C,MAAMsD,UAAUlG,OAAS,GAC9B,EAAKyC,SAAS,CACZyD,UAAW,EAAKtD,MAAMsD,cAp0BT,EA40BnBD,YAAc,SAACe,EAAkBC,GAG/B,GAFA,EAAKxE,SAAS,CAAEqC,eAAe,IAE3BkC,EAAY,CACd,IAAIE,EAAiB,EAAKC,iBAAiBH,EAAYC,GACvD,GAAKC,GAA4C,IAA1BA,EAAe9N,OAsBpC,EAAK2N,gCAtB6C,CAClD,GAAI,EAAKnE,MAAM0C,oBAAsB,EAAK1C,MAAMwE,gBAC9C,OAEuC,SAArC,EAAKxE,MAAM6D,sBACb,EAAKhE,SAAS,CACZ2E,iBAAiB,EACjBC,sBAAsB,iDACtBC,oBAAoB,EACpBC,oBAAoB,0BACpBC,qBAAsB,kBAAM,EAAKpC,UAAU4B,MAEC,QAArC,EAAKpE,MAAM6D,uBACpB,EAAKhE,SAAS,CACZ2E,iBAAiB,EACjBC,sBAAsB,gDACtBC,oBAAoB,EACpBC,oBAAoB,yBACpBC,qBAAsB,kBAAM,EAAKjC,SAASyB,SAn2BjC,EAg3BnBG,iBAAmB,SAACH,EAAiBC,GACnC,IAAIQ,EAA+B,GAC/BC,EAAgC,GAChCC,EAAiB,QACM1X,IAAvB,EAAKkS,gBACPwF,EAAiB,EAAKxF,eAExB,IAAMyF,EAA4B1O,OAAOC,KAAKwO,GAClBzO,OAAOC,KAAK6N,GAE9BtJ,QAAQ,SAAAmK,GACZ,EAAK3F,gBACP,EAAKA,eAAe8B,SAAS6D,KAC5BD,EAAgB5D,SAAS6D,KACzBb,EAAWa,KACPZ,EAGHS,EAAuBrO,KAAKwO,GAF5BJ,EAAsBpO,KAAKwO,MAOjC,IAAMlI,EAAWxI,IAAO6P,EAAU,kBAC5BnH,EAAW1I,IAAO6P,EAAU,aA2BlC,OA1BIA,GACFA,EAAU,kBACVA,EAAU,aACVrH,EAASG,WACTD,EAASC,WACTH,EAASmI,QAAQ,OAAOC,KAAKlI,EAASiI,QAAQ,QAAU,IACpDb,EACFS,EAAuBrO,KAAK,oBAE5BoO,EAAsBpO,KAAK,qBAI3B2N,GAAcA,EAAU,iBAAuBA,EAAU,SACtDC,EAGHS,EAAuBrO,KAAK,UAF5BoO,EAAsBpO,KAAK,WAK1BqO,GAA4D,IAAlCA,EAAuBtO,OAE1C,EAAKwJ,MAAM0C,mBACrB,EAAK7C,SAAS,CAAE6C,mBAAmB,IAFnC,EAAK7C,SAAS,CAAE6C,mBAAmB,IAIrC,EAAK7C,SAAS,CAAEqC,eAAe,EAAOoC,eAAgBO,IAC/CA,GAh6BP,EAAKvF,eAAiB8F,KAAwBC,MAAMC,UAAUC,mBAC9D,EAAKhG,cAAgB6F,KAAwBC,MAAMC,UAAU/F,cAK7D,IAAMsC,EAAa,CACjB9M,iBAAkB,GAClBQ,iBAAkB,CAChB,CACEiQ,WAAY,YACZ3a,MAAO,IACP4a,iBAAiB,GAEnB,CACED,WAAY,mBACZ3a,MAAO,IACP4a,iBAAiB,IAGrB3Q,QAAS,CACP,CACEvH,KAAM,YACNsE,MAAO,cAET,CACEtE,KAAM,mBACNsE,MAAO,gBAGXsE,KAAM,IAjCS,OAqCjB,EAAK6J,MAAQ,CACXwB,8BAA+B3U,EAAM6Y,oBACrCnE,eAAgB1U,EAAM8Y,cACtB7F,gBAAiB,GAEjB6E,oBAAqB,GACrBF,sBAAuB,GACvBC,oBAAoB,EACpBE,qBAAsB,aACtBN,eAAgB,GAChBsB,yBAA0B,EAC1B1D,eAAe,EACfH,cAAe,GACfuB,UAAW/E,KACXqF,sBAAuB,OACvBC,sBAAuB,GACvB5B,UAAWJ,EACXG,cAAeH,EACfiC,YAAa,GACb5D,cAAe,GACfD,gBAAiB,GACjBE,gBAAiB,CAAC,CACdqF,WAAY,YACZnU,UAAW,QAGf+O,gBAAiB,GACjBxE,aAAa,EACb8H,iBAAiB,EACjBpB,WAAY,GACZC,aAAc,GACdsD,kBAAmB,aACnBlQ,WAAY,EACZsN,QAAQ,EACRF,cAAe,EACfnL,KAAM,EACN/B,MAAO,GACP6M,mBAAmB,EACnB8B,iBAAiB,GA3EF,EAJrB,iFAmFuB,IAAD,OACbsB,KAAK9F,MAAMwB,+BAAkCsE,KAAK9F,MAAMuB,eAAe/K,OAK1EsP,KAAKlG,cAJLkG,KAAKhF,4BACFtG,KAAK,kBAAM,EAAKoF,gBAChBe,MAAM,kBAAM,EAAKf,gBAKtBmG,SAASC,iBAAiB,UAAWF,KAAKtG,aAAa,KA5F3D,2CA4duBoC,GACnB,IAAMC,EAAa,CACjB9M,iBAAkB,GAClBQ,iBAAkB,CAChB,CACEiQ,WAAY,YACZ3a,MAAO,IACP4a,iBAAiB,GAEnB,CACED,WAAY,mBACZ3a,MAAO,IACP4a,iBAAiB,IAGrB3Q,QAAS,CACP,CACEvH,KAAM,YACNsE,MAAO,cAET,CACEtE,KAAM,mBACNsE,MAAO,gBAGXsE,KAAM,IAER,IAAK,IAAMhD,KAAOyO,EAAU,CAC1B,IAAMnU,EAAOmU,EAASzO,GAChB8S,EAAgB,GACtBA,EAAQ,UAAgBxY,EAAI,UAC5BwY,EAAQ,iBAAuBxY,EAAI,iBACnCoU,EAAK,KAASpL,KAAKwP,GAErB,OAAOpE,IA9fX,6CAi9BuC,IAAD,OAC1BhW,EAAYia,KAAKjZ,MAAjBhB,QAER,OACE,kBAAC,iBAAD,CACEqa,cAAe,QACfrU,MAAOiU,KAAK9F,MAAM8D,YAClBqC,oBAAqB,YACrBC,UAAWN,KAAK9F,MAAM4D,sBACtB/X,QAASA,EACTwa,YAAaP,KAAKnG,0BAClB2G,mBAAoBR,KAAK9F,MAAM6D,sBAC/B0C,WAAYT,KAAKvC,gCAGhBuC,KAAK9F,MAAM6D,sBACV,kBAAC,gBAAD,CACEO,WAAY0B,KAAK9F,MAAMsD,UACvBkD,cAAeV,KAAK9F,MAAMsE,eAC1BzY,QAASia,KAAKjZ,MAAMhB,QACpBwa,YAAaP,KAAKnG,0BAClB8G,YAAa,SAAC9J,GACZ,EAAKkD,SAAS,CAAEyD,UAAW3G,GACzB,kBAAM,EAAK0G,YAAY1G,GAAM,MAYjC+J,WAAY,SAACtC,GACP,EAAKpE,MAAM6D,uBACb,EAAKhE,SAAS,CAAE2E,iBAAiB,GAAQ,kBAAM,EAAKnB,YAAYe,MAIpEuC,SAAU,QACVC,KAAMd,KAAK9F,MAAM6D,sBAAwBiC,KAAK9F,MAAM6D,sBAAwB,GAC5EgD,uCAAqCf,KAAK9F,MAAMsD,YAAawC,KAAK9F,MAAMsD,UAAX,gBAC7DwD,uBAAwBhB,KAAK9F,MAAMwB,8BACnCkB,kBAAmBoD,KAAK9F,MAAM0C,kBAC9BqE,sBACEjB,KAAK9F,MAAMsD,WACTwC,KAAK9F,MAAMsD,UAAX,aACA/O,IAAOuR,KAAK9F,MAAMsD,UAAX,aAAqCpG,UAC5C3I,IAAOuR,KAAK9F,MAAMsD,UAAX,aAAqC9O,OAAO,YAAYgJ,gBAAanQ,EAEhF2Z,sBACElB,KAAK9F,MAAMsD,WACTwC,KAAK9F,MAAMsD,UAAX,kBACA/O,IAAOuR,KAAK9F,MAAMsD,UAAX,kBAA0CpG,UACjD3I,IAAOuR,KAAK9F,MAAMsD,UAAX,kBAA0C9O,OAAO,YAAYgJ,gBAAanQ,IAGrF,QA5gCZ,uCAuhCiC,IACrBxB,EAAYia,KAAKjZ,MAAjBhB,QAER,OACE,kBAAC,IAAMob,SAAP,KACE,wBAAIxX,IAAK,kBAAmB3D,UAAWD,EAAQqb,YAA/C,mBACA,wBAAIzX,IAAK,wBAAyB3D,UAAWD,EAAQsb,iBAArD,QACA,kBAACC,GAAA,EAAD,CAAc3X,IAAK,oBACjB,yBAAK3D,UAAWD,EAAQqb,YAAxB,oBACA,yBAAKpb,UAAWD,EAAQsb,iBAAxB,mBAhiCV,qCA0iCiB1X,GAA2B,IAAD,OAC/B5D,EAAYia,KAAKjZ,MAAjBhB,QAER,OACE,kBAACub,GAAA,EAAD,CACE3X,IAAKA,EACL5D,QAAS,CACPlB,KAAMkB,EAAQwb,kBACdC,QACExB,KAAK9F,MAAM4F,0BACTE,KAAK9F,MAAMuB,eAAe5I,QAAQlJ,GAChC5D,EAAQ0b,sBACR1b,EAAQ2b,eAEhBvZ,QAAS,WACH,EAAK+R,MAAMuB,eAAe5I,QAAQlJ,KAAS,EAAKuQ,MAAM4F,yBAExD,EAAK/F,SAAS,CACZ+F,wBAAyB,EAAK5F,MAAMuB,eAAe5I,QAAQlJ,KAE7D,EAAKkU,wBAAwBlU,KAG7B,EAAKoQ,SAAS,CACZ+F,yBAA0B,IAE5B,EAAKjC,wBAAwB,OAIjC,6BAEClU,KA1kCT,+BAmlCyB,IAAD,OACZ5D,EAAYia,KAAKjZ,MAAjBhB,QACF4b,EAAa3B,KAAK9F,MAAMuB,eAE9B,OACE,6BACGuE,KAAK9F,MAAMkC,cAAgB,kBAACtW,GAAA,EAAD,MAAa,KACzC,kBAACsQ,GAAA,EAAD,CAAM5Q,WAAS,GACb,kBAAC4Q,GAAA,EAAD,CAAM5Q,WAAS,EAACmC,MAAI,EAAC2O,GAAI,GAAIsL,GAAI,GAC/B,kBAACxL,GAAA,EAAD,CAAM5Q,WAAS,EAACQ,UAAWD,EAAQ8b,WAAY9Z,MAAO,CAAE+Z,UAAW,IAAKC,SAAU,SAChF,kBAACC,GAAA,EAAD,KACGhC,KAAKiC,iBACLN,EAAaA,EAAWja,IAAI,SAAAiC,GAAG,OAAI,EAAKuY,eAAevY,KAAQ,QAYtE,kBAACyM,GAAA,EAAD,CAAM5Q,WAAS,EAACmC,MAAI,EAAC2O,GAAI,GAAIsL,GAAI,EAAG5b,UAAWD,EAAQoc,cACrD,kBAAC/L,GAAA,EAAD,CAAM5Q,WAAS,GACb,kBAAC4Q,GAAA,EAAD,CAAMzO,MAAI,EAAC2O,GAAI,GAAIsL,GAAI,GACrB,kBAACQ,EAAA,EAAD,CACEra,MAAO,CAAEhD,MAAO,QAChBsE,GAAG,cACHe,YAAY,+BACZvC,MAAM,GACNxB,OAAO,OACP2E,WAAS,EACThF,UAAWD,EAAQsc,YACnBva,QAAQ,WACRwB,MAAO0W,KAAK9F,MAAME,cAClBkI,WAAY,CAAE,aAAc,QAC5BrY,SAAU+V,KAAK3C,aACfkF,WAAY,CACVtX,eACE,kBAACuX,EAAA,EAAD,CAAgB1d,SAAS,SACvB,kBAAC2d,GAAA,EAAD,CAAQ1a,MAAO,CAAEvB,MAAO,gCAYlC,kBAAC4P,GAAA,EAAD,CAAMzO,MAAI,EAAC2O,GAAI,EAAGsL,GAAI,EAAG5b,UAAWD,EAAQ2c,WAC1C,kBAAC,IAAD,CAAiB/X,KAAMgY,IAAQ3c,UAAWD,EAAQ6c,eAClD,kBAACC,GAAA,EAAD,CACE7c,UAAWD,EAAQ+c,SACnB3a,QAAS,WACP,EAAK4R,SACH,CACEiE,YAAY,iBACZR,UAAW/E,KACXmE,mBAAmB,GAClB,kBAAM,EAAKa,+BAA+B,WARnD,eAkBF,kBAAC,wBAAD,CAAuBzY,OAAO,SAC9B,kBAACoR,GAAA,EAAD,CAAMrO,MAAO,CAAEgb,UAAW,IAAKhB,SAAU,SACvC,kBAAC,GAAD,CACE1Y,GAAG,UACHwG,WAAYmQ,KAAK9F,MAAMrK,WACvBmT,OAAQhD,KAAKrD,iBACbrK,cAAe0N,KAAKlD,oBACpBzM,KACEG,OAAOC,KAAKuP,KAAK9F,MAAMiC,WAAWzL,OAAS,EACvCsP,KAAK9F,MAAMiC,UAAX,KACA,GAENnN,QACEwB,OAAOC,KAAKuP,KAAK9F,MAAMiC,WAAWzL,OAAS,EACvCsP,KAAK9F,MAAMiC,UAAX,QACA,GAEN5I,QACEyM,KAAK9F,MAAME,cACP,oBACA4F,KAAK9F,MAAMF,gBAEjBvH,WAAYuN,KAAK1C,eACjBjO,eAAa,EACbD,eAAa,EACbH,iBACEuB,OAAOC,KAAKuP,KAAK9F,MAAMiC,WAAWzL,OAAS,EACvCsP,KAAK9F,MAAMiC,UAAX,iBACA,GAEN1M,iBACEe,OAAOC,KAAKuP,KAAK9F,MAAMiC,WAAWzL,OAAS,EACvCsP,KAAK9F,MAAMiC,UAAX,iBACA,GAEN/I,eAAgB4M,KAAKjD,qBACrB1K,gBAAiB2N,KAAKlD,oBACtB9K,aAAcgO,KAAKtC,iBACnBvL,kBAAmB6N,KAAKrC,qBACxB3K,cAAegN,KAAK9F,MAAMC,gBAC1BrK,YAAakQ,KAAK9F,MAAMpI,KACxB/B,MAAOiQ,KAAK9F,MAAMnK,MAClBG,UAAW,CAAC,GAAI,GAAI,GAAI,WAQjC8P,KAAKiD,uBAEN,kBAAC,WAAD,CACElN,QAAS,WACP,EAAKgE,SAAS,CACZjE,aAAa,KAGjB/J,MAAOiU,KAAK9F,MAAMsC,WAClB1G,YAAakK,KAAK9F,MAAMpE,YACxBvC,QAASyM,KAAK9F,MAAMuC,eAEtB,kBAAC,GAAD,CACE1G,QAAS,kBAAM,EAAKgE,SAAS,CAAE6E,oBAAoB,KACnD7S,MAAOiU,KAAK9F,MAAM2E,oBAClB/I,YAAakK,KAAK9F,MAAM0E,mBACxBjI,WAAY,UACZD,SAAU,WACJ,EAAKwD,MAAM4E,sBACb,EAAK5E,MAAM4E,wBAGfvL,QAASyM,KAAK9F,MAAMyE,6BAruC9B,GAAkCuE,IAAMC,WC7FlCnP,GAAQ,IAAIC,KAClBD,GAAME,iBAEC,IAAMkP,GAAS,SAACrT,EAAegC,GAElC,IAAIgB,EAAU,CACVhD,MAAOA,EACPgC,KAAMA,GAENqC,EAAwB,CACxBC,OAAQ,OAEZ,OAAGL,GAAME,iBACEF,GAAMM,KAAKF,EAAX,6BAAyCG,KAAKC,UAAUzB,KAAY,GAExEiB,GAAMS,mBAAmBC,KAAK,kBAAKV,GAAMM,KAAKF,EAAX,6BAAyCG,KAAKC,UAAUzB,KAAY,MAGrGsQ,GAAY,SAACtT,EAAe6E,EAAgB7B,EAAcnD,EAAeO,EAAexG,GAEjG,IAAIkL,EAAiB,QACTtN,IAARoC,GAA6B,KAARA,GAAcA,EAAI+G,OAAS,IAEhDmE,EAAiB,4BAA4BlL,GAGjD,IAAImL,EAAc,GACd3E,GAA8B,IAAnBA,EAAQO,SACrBoE,EACE,kBACA3E,EAAQ,GAAR,WACA,IACAA,EAAQ,GAAR,WAEJ,IAAI4E,EAAa,GACbhC,GACFA,EAAQiC,QAAQ,SAAAnL,GACdkL,EACEA,EAAa,IAAMlL,EAAM,WAAiB,IAAMA,EAAM,QAG5D,IAAIoL,EAASrF,EAAQ,WAAaA,EAAQ,GACtC0T,EACF,oCAA6BvT,EAA7B,yBAAmD6E,GACnDK,EACAF,EACAD,EACAD,EACY,IAAV9E,IACAuT,EACA,mCAA4B1O,GAC5BK,EACAF,EACAD,EACAD,GAEJ,IAAIT,EAAwB,CACxBC,OAAQ,OAGZ,OAAGL,GAAME,iBACEF,GAAMM,KAAKF,EAAQkP,GAAS,GAEhCtP,GAAMS,mBAAmBC,KAAK,kBAAKV,GAAMM,KAAKF,EAAQkP,GAAS,MAG7DC,GAAc,SAAC7a,GAExB,IAAI0L,EAAwB,CACxBC,OAAQ,OACRe,KAAM1M,GAGV,OAAGsL,GAAME,iBACEF,GAAMM,KAAKF,EAAX,iBAAoC,GAExCJ,GAAMS,mBAAmBC,KAAK,kBAAKV,GAAMM,KAAKF,EAAX,iBAAoC,MAGrEoP,GAAU,SAAC9a,EAAcW,GAElC,IAAI+K,EAAwB,CACxBC,OAAQ,MACRe,KAAM1M,GAGV,OAAGsL,GAAME,iBACEF,GAAMM,KAAKF,EAAX,oBAAgC/K,IAAM,GAE1C2K,GAAMS,mBAAmBC,KAAK,kBAAKV,GAAMM,KAAKF,EAAX,oBAAgC/K,IAAM,MAGvEoa,GAAY,SAACpa,GAEtB,IAAI+K,EAAwB,CACxBC,OAAQ,UAGZ,OAAGL,GAAME,iBACEF,GAAMM,KAAKF,EAAX,eAA2B/K,IAAM,GAErC2K,GAAMS,mBAAmBC,KAAK,kBAAKV,GAAMM,KAAKF,EAAX,eAA2B/K,IAAM,MC/DzE+P,GAAS,IAAIC,KAAMC,gBA0DZoK,GAAb,YAIE,WAAY3c,GAAQ,IAAD,uBACjB,4CAAMA,KAJAyS,oBAGW,IAFXC,mBAEW,IAwFnBC,YAAc,SAACC,GACS,KAAlBA,EAAMC,SACR,EAAKC,6BA1FU,EA+FnBC,YAAc,WACZ,EAAKC,SAAS,CAAEC,gBAAiB,4BACjC,EAAKC,WACH,GACA,EACA,EAAKC,MAAMC,gBACX,EAAKD,MAAME,cACX,EAAKF,MAAMG,gBACX,EAAKH,MAAMI,kBAvGI,EA+HnBqJ,cAAgB,SAAC9M,GACfuC,GAAOoB,OAAO,UAAU9F,KAAK,SAAA+F,GAC3B,IAAIC,EAAKD,EAAIE,OACb,IACEvB,GAAOwB,YAAYF,EAAI,WAAY7D,GAChCnC,KAAK,SAAA+F,GAAG,OAAI5N,QAAQC,IAAI,MAAO2N,KAC/BI,MAAM,SAAA3Q,GAAC,OAAI2C,QAAQC,IAAI5C,KAC1B,MAAOA,GACP2C,QAAQC,IAAI5C,OAvIC,EA4InB0Z,gBAAkB,SAAC/M,GACjBuC,GAAOoB,OAAO,UAAU9F,KAAK,SAAA+F,GAC3B,IAAIC,EAAKD,EAAIE,OACb,IACEvB,GAAO2B,iBAAiBL,EAAI,WAAY7D,EAAI,IAASA,GAClDnC,KAAK,SAAA+F,GAAG,OAAI5N,QAAQC,IAAI,MAAO2N,KAC/BI,MAAM,SAAA3Q,GAAC,OAAI2C,QAAQC,IAAI5C,KAC1B,MAAOA,GACP2C,QAAQC,IAAI5C,OApJC,EAyJnB2Z,mBAzJmB,qBAyJE,sBAAA5I,EAAA,4DACnB,EAAKlB,SAAS,CAAEqC,eAAe,IADZ,SAEb/C,KAAM6B,eAAe,YACxBxG,KAAK,SAAAoP,GACJ,GAAI7K,MAAMC,QAAQ4K,IAASA,EAAKpT,OAAS,EAAG,CAC1C,IAAI0K,EAAyB,GACzB2I,EAA4B,GAC5B1I,EAAuC,CAAC,CAAE5T,KAAM,GAAI6B,MAAO,KAC/Dwa,EAAKja,OAAO,SAAAlC,GACV,OAAKyT,EAAaE,SAAS3T,EAAK2Q,YAC9B8C,EAAazK,KAAKhJ,EAAK2Q,UAEvByL,EAAgBpT,KAAKhJ,EAAKyQ,MAC1BiD,EAA8B1K,KAAK,CAAElJ,KAAME,EAAK2Q,SAAUhP,MAAO3B,EAAK2Q,YAC/D,KAIX,EAAKvR,MAAMid,iBAAiB5I,GAC5B,EAAKrU,MAAMkd,uBAAuB5I,GAClC,EAAKtU,MAAMmd,qBAAqBhG,qBAAU6F,IAC1C,EAAKhK,SAAS,CACZoK,eAAgB/I,EAChBgJ,mBAAoBL,EACpBM,0BAA2BhJ,GAC1B,kBAAM,EAAKtB,SAAS,CAAEqC,eAAe,SAG3CvB,MAAM,SAAAc,GAAG,OAAI9O,QAAQC,IAAI6O,KA5BT,yCAzJF,EAwLnBe,UAAY,SAAC7F,GAEX,IAAMnO,EAAeoQ,GAAgBjC,GAErC,EAAKkD,SAAS,CACZqC,eAAe,EACfpC,gBAAiB,4BAEnBwJ,GAAQjP,KAAKC,UAAU9L,GAAUA,EAAQ6O,KAAK7C,KAAK,SAAAoH,GACjD,EAAK/B,SAAS,CACZC,gBAAiB,oBACjBoC,eAAe,IAEbN,QAA+BvU,IAAnBuU,EAASnN,OAAuBmN,EAASvI,SACvD,EAAKoJ,iBAAiB,EAAKzC,MAAMnK,MAAO,EAAKmK,MAAMnK,MAAQ,EAAKmK,MAAMpI,MACtE,EAAK8R,gBAAgB/M,GACrB,EAAKkD,SAAS,CACZ6C,mBAAmB,EACnB9G,aAAa,EACb0G,WAAY,UACZC,aAAa,YAAD,OAAcX,EAASvI,QAAvB,aAELuI,GAAYA,EAASnN,OAAuC,MAA9BmN,EAASnN,MAAM4N,WACtD,EAAKxC,SAAS,CACZjE,aAAa,EACb0G,WAAY,eACZC,aAAc,8CAEPX,GAAYA,EAASnN,OAAuC,MAA9BmN,EAASnN,MAAM4N,YAAsBT,EAASnN,MAAM4E,QAC3F,EAAKwG,SAAS,CACZjE,aAAa,EACb0G,WAAY,kBACZC,aAAc,8BAGhB,EAAK1C,SAAS,CACZjE,aAAa,EACb0G,WAAY,SACZC,aAAc,yCAGjB5B,MAAM,SAAAlM,GACM,sBAATA,EACF,EAAKoL,SAAS,CACZjE,aAAa,EACb0G,WAAY,kBACZC,aAAc,4BACdL,eAAe,IAGjB,EAAKrC,SAAS,CACZjE,aAAa,EACb0G,WAAY,SACZC,aAAc,qCACdL,eAAe,OA9OJ,EAoPnBS,SAAW,SAAChG,GAEV,EAAKkD,SAAS,CACZqC,eAAe,EACfpC,gBAAiB,4BAGnB,IAAMtR,EAAiByQ,GAAiBtC,GAExC0M,GAAYhP,KAAKC,UAAU9L,IAAUgM,KAAK,SAAAoH,GACxC,EAAK/B,SAAS,CACZqC,eAAe,EACfpC,gBAAiB,sBAEf8B,QAA+BvU,IAAnBuU,EAASnN,OAAuBmN,EAASvI,SAAWuI,EAASnB,QAC3E,EAAKgC,iBAAiB,EAAKzC,MAAMnK,MAAO,EAAKmK,MAAMnK,MAAQ,EAAKmK,MAAMpI,MACtE,EAAK6R,cAAc7H,EAASnB,QAC5B,EAAKZ,SAAS,CACZ6C,mBAAmB,EACnB9G,aAAa,EACb0G,WAAY,UACZC,aAAa,+BAAD,OAAiCX,EAASnB,OAAOjK,OAAjD,mBAELoL,GAAYA,EAASnN,OAAuC,MAA9BmN,EAASnN,MAAM4N,WACtD,EAAKxC,SAAS,CACZjE,aAAa,EACb0G,WAAY,eACZC,aAAc,6CAEPX,GAAYA,EAASnN,OAAuC,MAA9BmN,EAASnN,MAAM4N,YAAsBT,EAASnN,MAAM4E,QAC3F,EAAKwG,SAAS,CACZjE,aAAa,EACb0G,WAAY,kBACZC,aAAc,8BAGhB,EAAK1C,SAAS,CACZjE,aAAa,EACb0G,WAAY,SACZC,aAAc,yCAGjB5B,MAAM,SAAAlM,GACM,sBAATA,EACF,EAAKoL,SAAS,CACZjE,aAAa,EACb0G,WAAY,kBACZC,aAAc,4BACdL,eAAe,IAGjB,EAAKrC,SAAS,CACZjE,aAAa,EACb0G,WAAY,SACZC,aAAc,qCACdL,eAAe,OA3SJ,EAiTnBnC,WAAa,SACXlK,EAAegC,EAAcgB,EAAc6I,EAAqBzL,EAAc0L,GAE9EwH,GAAUtT,EAAOgC,EAAMgB,EAAS6I,EAAgBzL,EAAS0L,GAASnH,KAAK,SAAAoH,GAErE,GADA,EAAK/B,SAAS,CAAEC,gBAAiB,sBAC7B8B,QAA+BvU,IAAnBuU,EAASnN,MAAqB,CAC5C,IAAMoN,EAAQ,EAAKC,qBACjBF,EAASnB,OAASmB,EAASnB,OAAS,IAEtC,EAAKZ,SAAS,CACZkC,cAAeH,EACfI,cAAeH,EACfI,UAAWJ,EACXK,eAAe,EACfvM,WACEiM,EAASO,OAASP,EAASO,MAAMC,MAC7BR,EAASO,MAAMC,MACf,SAEH,GAAIR,GAAYA,EAASnN,OAAuC,MAA9BmN,EAASnN,MAAM4N,WAAoB,CAC1E,IAAMR,EAAQ,EAAKC,qBAAqB,IACxC,EAAKjC,SAAS,CACZkC,cAAe,GACfC,cAAeH,EACfK,eAAe,EACftG,aAAa,EACb0G,WAAY,eACZC,aAAc,kDAEX,CACL,IAAMV,EAAQ,EAAKC,qBAAqB,IACxC,EAAKjC,SAAS,CACZkC,cAAe,GACfC,cAAeH,EACfK,eAAe,EACftG,aAAa,EACb0G,WAAY,iBACZC,aAAc,yDAGjB5B,MAAM,WACP,IAAMkB,EAAQ,EAAKC,qBAAqB,IACxC,EAAKjC,SAAS,CACZkC,cAAe,GACfC,cAAeH,EACfK,eAAe,EACftG,aAAa,EACb0G,WAAY,iBACZC,aAAc,yDAjWD,EAuWnBgH,UAAY,SAACpa,GACNA,IAGL,EAAK0Q,SAAS,CAAEqC,eAAe,IAC/BqH,GAAUpa,GAAIqL,KAAK,SAAAoH,GACjB,EAAK/B,SAAS,CACZqC,eAAe,IAEjB,EAAKO,iBAAiB,EAAKzC,MAAMnK,MAAO,EAAKmK,MAAMnK,MAAQ,EAAKmK,MAAMpI,MAClEgK,GAAYA,EAASnN,MACvB,EAAKoL,SAAS,CACZjE,aAAa,EACb0G,WAAY,SACZC,aAAc,sDAIhB,EAAK1C,SAAS,CACZjE,aAAa,EACb0G,WAAY,UACZC,aAAc,gDAGjB5B,MAAM,SAAAlM,GACP,EAAKoL,SAAS,CACZjE,aAAa,EACb0G,WAAY,SACZC,aAAc,wDAEhB,EAAK1C,SAAS,CACZqC,eAAe,IAEjBvP,QAAQC,IAAI,iBAAkB6B,OAxYf,EAkcnBgO,iBAAmB,SAAC5M,EAAegC,GACjC,EAAK8H,4BACL,EAAKE,SAAS,CAAEC,gBAAiB,4BACjC,EAAKD,SAAS,CACZqC,eAAe,IAGuB,IAAtC,EAAKlC,MAAMC,gBAAgBzJ,QACE,KAA7B,EAAKwJ,MAAME,eAC2B,IAAtC,EAAKF,MAAMG,gBAAgB3J,QACI,KAA/B,EAAKwJ,MAAMI,gBAEX,EAAKL,WACHlK,EACAgC,EACA,EAAKmI,MAAMC,gBACX,EAAKD,MAAME,cACX,EAAKF,MAAMG,gBACX,EAAKH,MAAMI,kBAGb,EAAKP,SAAS,CAAEC,gBAAiB,4BACjCoJ,GAAOrT,EAAOgC,GAAM2C,KAAK,SAAAoH,GAEvB,GADA,EAAK/B,SAAS,CAAEC,gBAAiB,sBAC7B8B,QAA+BvU,IAAnBuU,EAASnN,MAAqB,CAC5C,IAAMoN,EAAQ,EAAKC,qBACjBF,EAASnB,OAASmB,EAASnB,OAAS,IAEtC,EAAKZ,SAAS,CACZkC,cAAeH,EACfI,cAAeH,EACfI,UAAWJ,EACXK,eAAe,EACfvM,WACEiM,EAASO,OAASP,EAASO,MAAMC,MAC7BR,EAASO,MAAMC,MACf,SAEH,GAAIR,GAAYA,EAASnN,OAAuC,MAA9BmN,EAASnN,MAAM4N,WAAoB,CAC1E,IAAMR,EAAQ,EAAKC,qBAAqB,IACxC,EAAKjC,SAAS,CACZkC,cAAe,GACfC,cAAeH,EACfK,eAAe,EACftG,aAAa,EACb0G,WAAY,eACZC,aAAc,kDAEX,CACL,IAAMV,EAAQ,EAAKC,qBAAqB,IACxC,EAAKjC,SAAS,CACZkC,cAAe,GACfC,cAAeH,EACfK,eAAe,EACftG,aAAa,EACb0G,WAAY,iBACZC,aAAc,2DA1fL,EAigBnBK,oBAAsB,SAAC3M,GACrB,EAAK4J,SAAS,CAAEC,gBAAiB,4BACjC,EAAKD,SAAS,CACZqC,eAAe,IAEbjM,GAAWA,EAAQO,OAAS,GAE9B,EAAKuJ,WACH,EAAKC,MAAMnK,MACX,EAAKmK,MAAMpI,KAAO,EAAKoI,MAAMnK,MAC7B,EAAKmK,MAAMC,gBACX,EAAKD,MAAME,cACXjK,EACA,EAAK+J,MAAMI,kBA9gBE,EAmhBnByC,qBAAuB,SAAClT,GACtB,IAAMmT,EAAI,eAENA,EAAK9C,MAAM+C,eACbC,aAAaF,EAAK9C,MAAM+C,eAG1BD,EAAKjD,SAAS,CACZI,gBAAiBtQ,EACjBsT,QAAQ,EACRrL,KAAM,EACNmL,cAAeG,WAAW,WACxBJ,EAAKjD,SAAS,CACZC,gBAAiB,0BACjBoC,eAAe,IAEkB,IAA/BY,EAAK9C,MAAMC,gBACb6C,EAAK/C,WACH+C,EAAK9C,MAAMnK,MACX,EACAlG,EACAmT,EAAK9C,MAAME,cACX4C,EAAK9C,MAAMG,gBACX2C,EAAK9C,MAAMI,iBAGb0C,EAAKlD,eAEN,QA/iBY,EAojBnBuD,aAAe,SAACnT,GAA4C,IAClDZ,EAAUY,EAAEC,OAAZb,MAEF0T,EAAI,eAENA,EAAK9C,MAAM+C,eACbC,aAAaF,EAAK9C,MAAM+C,eAE1BD,EAAKjD,SAAS,CACZK,cAAe9Q,EACf6T,QAAQ,EACRrL,KAAM,EACNmL,cAAeG,WAAW,WACxBJ,EAAKjD,SAAS,CACZC,gBAAiB,0BACjBoC,eAAe,EACfrM,MAAO,KAEwB,KAA7BiN,EAAK9C,MAAME,cACb4C,EAAK/C,WACH+C,EAAK9C,MAAMnK,MACX,EACAiN,EAAK9C,MAAMC,gBACX6C,EAAK9C,MAAME,cACX4C,EAAK9C,MAAMG,gBACX2C,EAAK9C,MAAMI,iBAGb0C,EAAKlD,eAEN,QAllBY,EAslBnBwD,eAAiB,SAAC/Q,GAAc,IACtB0P,EAAkB,EAAK/B,MAAvB+B,cAER,GAAK,EAAK/B,MAAM+B,eAAkB,EAAK/B,MAAM+B,cAActB,OAA3D,CAGA,IAAM9D,EAAYsB,GAAa8D,EAActB,OAAOpO,IACpD,EAAKgR,YAAY1G,GAAM,GACvB,EAAKkD,SAAS,CACZyD,UAAW3G,GACV,kBAAM,EAAK4G,+BAA+B,YAhmB5B,EAomBnBC,iBAAmB,SAAC5N,EAAqBiC,GACvC,EAAKgI,SAAS,CACZjI,KAAMhC,IAGR,EAAK6M,iBAAiB,EAAKzC,MAAMnK,MAAOgC,IAzmBvB,EA4mBnB4L,qBAAuB,SAAArU,GAGjB,EAAK4Q,MAAMrK,YAFC,IAGd,EAAKkK,SAAS,CACZ6D,iBAAiB,KAGnB,EAAK7D,SAAS,CACZhK,MAAOzG,IAGT,EAAKqT,iBAAiBrT,EAAOA,EAAQ,EAAK4Q,MAAMpI,QAxnBjC,EA4nBnB+L,wBAA0B,SAAClU,GACzB,EAAKkQ,4BACL,EAAKE,SAAS,CACZC,gBAAiB,0BACjBlI,KAAM,EACNsK,eAAe,SAEL7U,IAARoC,GACF,EAAKsQ,WACH,EAAKC,MAAMnK,MACX,EACA,EAAKmK,MAAMC,gBACX,EAAKD,MAAME,cACX,EAAKF,MAAMG,gBACX1Q,IA1oBa,EA2qBnBkQ,0BAA4B,WAC1B,EAAKE,SAAS,CACZ+D,sBAAuB,OACvBC,sBAAuB,GACvBP,UAAW7E,QA/qBI,EAmrBnB8E,+BAAiC,SAACnU,GAChC,IAAIyC,EAAQ,GACZ,GAAIzC,GAAmB,SAAVA,GAAoB,EAAK4Q,MAAM8D,YAAa,CACvDjS,EAAK,eAAW,EAAKmO,MAAM8D,aAC3B,IAAMC,EAAmBvF,GAAewF,qBAAU,EAAKhE,MAAMsD,YAC7D,EAAKzD,SAAS,CAAEyD,UAAWS,SAClB3U,GAAmB,SAAVA,GAAoB,EAAK4Q,MAAMsD,UACjDzR,EAAQ,EAAKmO,MAAMsD,UAAX,KAA+B,EAAKtD,MAAMsD,UAAX,KAA+B,GAC7DlU,GAAmB,QAAVA,IAClByC,EAAK,gBAEP,EAAKgO,SAAS,CACZgE,sBAAuBzU,EACvB0U,YAAajS,GACZ,kBAAM,EAAKoS,qBAjsBG,EAosBnBA,gBAAkB,WAChB,EAAKpE,SAAS,CACZ+D,sBAAuB,SACtB,kBAAM,EAAKM,kCAvsBG,EA0sBnBC,0BAA4B,WAC1B,EAAKtE,SAAS,CACZjE,aAAa,EACb0G,WAAY,4BACZC,aAAc,iDA9sBC,EAmtBnB2B,6BAA+B,WAEzB,EAAKlE,MAAMsD,YAAc,EAAKtD,MAAMsD,UAAUnG,iBAChD,EAAK6C,MAAMsD,UAAUlG,OAAS,GAC9B,EAAKyC,SAAS,CACZyD,UAAW,EAAKtD,MAAMsD,cAxtBT,EA8tBnBD,YAAc,SAACe,EAAkBC,GAG/B,GAFA,EAAKxE,SAAS,CAAEqC,eAAe,IAE3BkC,EAAY,CACd,IAAIE,EAAiB,EAAKC,iBAAiBH,EAAYC,GACvD,GAAKC,GAA4C,IAA1BA,EAAe9N,OAsBpC,EAAK2N,gCAtB6C,CAClD,GAAI,EAAKnE,MAAM0C,oBAAsB,EAAK1C,MAAMwE,gBAC9C,OAEuC,SAArC,EAAKxE,MAAM6D,sBACb,EAAKhE,SAAS,CACZ2E,iBAAiB,EACjBC,sBAAuB,+CACvBC,oBAAoB,EACpBC,oBAAqB,wBACrBC,qBAAsB,kBAAM,EAAKpC,UAAU4B,MAEC,QAArC,EAAKpE,MAAM6D,uBACpB,EAAKhE,SAAS,CACZ2E,iBAAiB,EACjBC,sBAAuB,8CACvBC,oBAAoB,EACpBC,oBAAqB,uBACrBC,qBAAsB,kBAAM,EAAKjC,SAASyB,SArvBjC,EA8vBnBG,iBAAmB,SAACH,EAAiBC,GACnC,IAAIQ,EAA+B,GAC/BC,EAAgC,GAChCC,EAAiB,QACM1X,IAAvB,EAAKkS,gBACPwF,EAAiB,EAAKxF,eAExB,IAAMyF,EAA4B1O,OAAOC,KAAKwO,GAClBzO,OAAOC,KAAK6N,GAE9BtJ,QAAQ,SAAAmK,QACY5X,IAAxB,EAAKiS,iBACP,EAAKA,eAAe8B,SAAS6D,IAC5BD,EAAgB5D,SAAS6D,IACzBb,EAAWa,KACPZ,EAGHS,EAAuBrO,KAAKwO,GAF5BJ,EAAsBpO,KAAKwO,MAQjC,IAAMlI,EAAWxI,IAAO6P,EAAU,kBAC5BnH,EAAW1I,IAAO6P,EAAU,aA2BlC,OA1BIA,GACFA,EAAU,kBACVA,EAAU,aACVrH,EAASG,WACTD,EAASC,WACTH,EAASmI,QAAQ,OAAOC,KAAKlI,EAASiI,QAAQ,QAAU,IACpDb,EACFS,EAAuBrO,KAAK,oBAE5BoO,EAAsBpO,KAAK,qBAI3B2N,GAAcA,EAAU,iBAAuBA,EAAU,SACtDC,EAGHS,EAAuBrO,KAAK,UAF5BoO,EAAsBpO,KAAK,WAK1BqO,GAA4D,IAAlCA,EAAuBtO,OAE1C,EAAKwJ,MAAM0C,mBACrB,EAAK7C,SAAS,CAAE6C,mBAAmB,IAFnC,EAAK7C,SAAS,CAAE6C,mBAAmB,IAIrC,EAAK7C,SAAS,CAAEqC,eAAe,EAAOoC,eAAgBO,IAC/CA,GA/yBP,EAAKvF,eAAiB8F,KAAwBgF,IAAI9E,UAAUC,mBAC5D,EAAKhG,cAAgB6F,KAAwBgF,IAAI9E,UAAU/F,cAE3D,IAAMsC,EAAa,CACjB9M,iBAAkB,GAClBQ,iBAAkB,CAChB,CACEiQ,WAAY,OACZ3a,MAAO,IACP4a,iBAAiB,GAEnB,CACED,WAAY,cACZ3a,MAAO,IACP4a,iBAAiB,IAGrB3Q,QAAS,CACP,CACEvH,KAAM,OACNsE,MAAO,YAET,CACEtE,KAAM,cACNsE,MAAO,gBAGXsE,KAAM,IA9BS,OAiCjB,EAAK6J,MAAQ,CACXmK,0BAA2Btd,EAAMwd,oBACjCJ,eAAgBpd,EAAMyd,cACtBJ,mBAAoBrd,EAAM0d,kBAC1BzK,gBAAiB,GAEjB6E,oBAAqB,GACrBF,sBAAuB,GACvBC,oBAAoB,EACpBE,qBAAsB,aACtBN,eAAgB,GAChBsB,yBAA0B,EAC1B1D,eAAe,EACfH,cAAe,GACfuB,UAAW7E,KACXmF,sBAAuB,OACvBC,sBAAuB,GACvB5B,UAAWJ,EACXG,cAAeH,EACfiC,YAAa,GACb5D,cAAe,GACfD,gBAAiB,GACjBE,gBAAiB,CAAC,CAChBqF,WAAY,OACZnU,UAAW,QAEb+O,gBAAiB,GACjBxE,aAAa,EACb8H,iBAAiB,EACjBpB,WAAY,GACZC,aAAc,GACd5M,WAAY,EACZsN,QAAQ,EACRF,cAAe,EACfnL,KAAM,EACN/B,MAAO,GACP6M,mBAAmB,EACnB8B,iBAAiB,GAtEF,EAJrB,iFA+EuB,IAAD,OACbsB,KAAK9F,MAAMmK,2BAA8BrE,KAAK9F,MAAMiK,gBAAmBnE,KAAK9F,MAAMkK,mBAKrFpE,KAAKlG,cAJLkG,KAAK6D,qBACFnP,KAAK,kBAAM,EAAKoF,gBAChBe,MAAM,kBAAM,EAAKf,gBAKtBmG,SAASC,iBAAiB,UAAWF,KAAKtG,aAAa,KAxF3D,2CAgauBoC,GACnB,IAAMC,EAAa,CACjB9M,iBAAkB,GAClBQ,iBAAkB,CAChB,CACEiQ,WAAY,OACZ3a,MAAO,IACP4a,iBAAiB,GAEnB,CACED,WAAY,cACZ3a,MAAO,IACP4a,iBAAiB,IAGrB3Q,QAAS,CACP,CACEvH,KAAM,OACNsE,MAAO,YAET,CACEtE,KAAM,cACNsE,MAAO,gBAGXsE,KAAM,IAER,IAAK,IAAMhD,KAAOyO,EAAU,CAC1B,IAAMnU,EAAOmU,EAASzO,GAChB8S,EAAgB,GACtBA,EAAQ,KAAWxY,EAAI,KACvBwY,EAAQ,YAAkBxY,EAAI,YAC9BoU,EAAK,KAASpL,KAAKwP,GAGrB,OAAOpE,IAncX,6CA2zBuC,IAAD,OAC1BhW,EAAYia,KAAKjZ,MAAjBhB,QAER,OACE,kBAAC,iBAAD,CACEqa,cAAe,QACfrU,MAAOiU,KAAK9F,MAAM8D,YAClBqC,oBAAqB,YACrBC,UAAWN,KAAK9F,MAAM4D,sBACtB/X,QAASA,EACTwa,YAAaP,KAAKnG,0BAClB2G,mBAAoBR,KAAK9F,MAAM6D,sBAC/B0C,WAAYT,KAAKvC,gCAEhBuC,KAAK9F,MAAM6D,sBACV,kBAAC,gBAAD,CACEO,WAAY0B,KAAK9F,MAAMsD,UACvBkD,cAAeV,KAAK9F,MAAMsE,eAC1BzY,QAASia,KAAKjZ,MAAMhB,QACpBwa,YAAaP,KAAKnG,0BAElB+C,kBAAmBoD,KAAK9F,MAAM0C,kBAC9BoE,uBAAwBhB,KAAK9F,MAAMmK,0BACnC1D,YAAa,SAAC9J,GACZ,EAAKkD,SAAS,CAAEyD,UAAW3G,GACzB,kBAAM,EAAK0G,YAAY1G,GAAM,MAEjC6N,OAAQ,SAAC7N,GACH,EAAKqD,MAAM6D,uBAC4B,SAArC,EAAK7D,MAAM6D,uBACb,EAAKhE,SAAS,CACZ4E,sBAAuB,iDACvBC,oBAAoB,EACpBC,oBAAqB,0BACrBC,qBAAsB,kBAAM,EAAK2E,UAAU5M,EAAI,SAKvD+J,WAAY,SAACtC,GACP,EAAKpE,MAAM6D,uBACb,EAAKhE,SAAS,CAAE2E,iBAAiB,GAAQ,kBAAM,EAAKnB,YAAYe,MAGpEuC,SAAU,MACVC,KAAMd,KAAK9F,MAAM6D,sBAAwBiC,KAAK9F,MAAM6D,sBAAwB,GAC5EgD,uCAAqCf,KAAK9F,MAAMsD,YAAawC,KAAK9F,MAAMsD,UAAX,gBAC7DyD,sBACEjB,KAAK9F,MAAMsD,WACTwC,KAAK9F,MAAMsD,UAAX,aACA/O,IAAOuR,KAAK9F,MAAMsD,UAAX,aAAqCpG,UAC5C3I,IAAOuR,KAAK9F,MAAMsD,UAAX,aAAqC9O,OAAO,YAAYgJ,gBAAanQ,EAEhF2Z,sBACElB,KAAK9F,MAAMsD,WACTwC,KAAK9F,MAAMsD,UAAX,kBACA/O,IAAOuR,KAAK9F,MAAMsD,UAAX,kBAA0CpG,UACjD3I,IAAOuR,KAAK9F,MAAMsD,UAAX,kBAA0C9O,OAAO,YAAYgJ,gBAAanQ,IAGrF,QAv3BZ,uCA43BiC,IACrBxB,EAAYia,KAAKjZ,MAAjBhB,QAER,OACE,kBAAC,IAAMob,SAAP,KACE,wBAAIxX,IAAK,UAAW3D,UAAWD,EAAQqb,YAAvC,WACA,wBAAIzX,IAAK,wBAAyB3D,UAAWD,EAAQsb,iBAArD,QACA,kBAACC,GAAA,EAAD,CAAc3X,IAAK,oBACjB,yBAAK3D,UAAWD,EAAQqb,YAAxB,oBACA,yBAAKpb,UAAWD,EAAQsb,iBAAxB,mBAr4BV,qCA24BiB1X,GAA2B,IAAD,OAC/B5D,EAAYia,KAAKjZ,MAAjBhB,QACF4e,EAAS3E,KAAK9F,MAAMkK,mBACpBzC,EAAa3B,KAAK9F,MAAMiK,eAE1Bve,EAAmB,GACvB,KAAG+e,EAAOjU,OAAS,GAAKiR,EAAWjR,OAAS,GAQ1C,OACE,qCARF7D,QAAQC,IAAI,OAAQ6X,GACpB,IAAMC,EAAQD,EAAOhD,EAAW9O,QAAQlJ,IAY1C,OAVKib,IACDhf,EAAO,UAAMgf,EAAMC,MAAM,EAAG,GAArB,kBAAiCD,EAAMC,MAAM,EAAG,GAAhD,WAUT,kBAACvD,GAAA,EAAD,CACE3X,IAAKA,EACL5D,QAAS,CACPlB,KAAMkB,EAAQwb,kBACdC,QACExB,KAAK9F,MAAM4F,0BACT6B,EAAW9O,QAAQlJ,GACjB5D,EAAQ0b,sBACR1b,EAAQ2b,eAEhBvZ,QAAS,WACHwZ,EAAW9O,QAAQlJ,KAAS,EAAKuQ,MAAM4F,yBACzC,EAAK/F,SAAS,CACZ+F,wBAAyB6B,EAAW9O,QAAQlJ,KAE9C,EAAKkU,wBAAwBlU,KAE7B,EAAKoQ,SAAS,CACZ+F,yBAA0B,IAE5B,EAAKjC,wBAAwB,OAIjC,6BAAMjY,EAAQ,6BACb+D,KAz7BT,+BA+7ByB,IAAD,OACZ5D,EAAYia,KAAKjZ,MAAjBhB,QACF4b,EAAa3B,KAAK9F,MAAMiK,eAE9B,OACE,6BACGnE,KAAK9F,MAAMkC,cAAgB,kBAACtW,GAAA,EAAD,MAAa,KAGzC,kBAACsQ,GAAA,EAAD,CAAM5Q,WAAS,GACb,kBAAC4Q,GAAA,EAAD,CAAM5Q,WAAS,EAACmC,MAAI,EAAC2O,GAAI,GAAIsL,GAAI,GAC/B,kBAACxL,GAAA,EAAD,CAAM5Q,WAAS,EAACQ,UAAWD,EAAQ8b,WAAY9Z,MAAO,CAAE+Z,UAAW,IAAKC,SAAU,SAChF,kBAACC,GAAA,EAAD,KACGhC,KAAKiC,iBACLN,EAAaA,EAAWja,IAAI,SAAAiC,GAAG,OAAI,EAAKuY,eAAevY,KAAQ,QAWtE,kBAACyM,GAAA,EAAD,CAAM5Q,WAAS,EAACmC,MAAI,EAAC2O,GAAI,GAAIsL,GAAI,EAAG5b,UAAWD,EAAQoc,cACrD,kBAAC/L,GAAA,EAAD,CAAM5Q,WAAS,GACb,kBAAC4Q,GAAA,EAAD,CAAMzO,MAAI,EAAC2O,GAAI,GAAIsL,GAAI,GACrB,kBAACQ,EAAA,EAAD,CACEra,MAAO,CAAEhD,MAAO,QAChBsE,GAAG,cACHe,YAAY,+BACZvC,MAAM,GACNxB,OAAO,OACP2E,WAAS,EACThF,UAAWD,EAAQsc,YACnBva,QAAQ,WACRwB,MAAO0W,KAAK9F,MAAME,cAClBkI,WAAY,CAAE,aAAc,QAC5BrY,SAAU+V,KAAK3C,aACfkF,WAAY,CACVtX,eACE,kBAACuX,EAAA,EAAD,CAAgB1d,SAAS,SACvB,kBAAC2d,GAAA,EAAD,CAAQ1a,MAAO,CAAEvB,MAAO,gCAUlC,kBAAC4P,GAAA,EAAD,CAAMzO,MAAI,EAAC2O,GAAI,EAAGsL,GAAI,EAAG5b,UAAWD,EAAQ2c,WAC1C,kBAAC,IAAD,CACE/X,KAAMgY,IACN3c,UAAWD,EAAQ6c,eAErB,kBAACC,GAAA,EAAD,CAAM7c,UAAWD,EAAQ+c,SAAU3a,QAAS,WAC1C,EAAK4R,SAAS,CACZiE,YAAa,eACbR,UAAW7E,KACXiE,mBAAmB,GAClB,kBAAM,EAAKa,+BAA+B,WAL/C,eAaF,kBAAC,wBAAD,CAAuBzY,OAAO,SAC9B,kBAACoR,GAAA,EAAD,CAAMrO,MAAO,CAAEgb,UAAW,IAAKhB,SAAU,SACvC,kBAAC,GAAD,CACE1Y,GAAG,UACHwG,WAAYmQ,KAAK9F,MAAMrK,WACvBmT,OAAQhD,KAAKrD,iBACbrK,cAAe0N,KAAKlD,oBACpBzM,KACEG,OAAOC,KAAKuP,KAAK9F,MAAMiC,WAAWzL,OAAS,EACvCsP,KAAK9F,MAAMiC,UAAX,KACA,GAENnN,QACEwB,OAAOC,KAAKuP,KAAK9F,MAAMiC,WAAWzL,OAAS,EACvCsP,KAAK9F,MAAMiC,UAAX,QACA,GAEN5I,QACEyM,KAAK9F,MAAME,cACP,qBACA4F,KAAK9F,MAAMF,gBAEjBvH,WAAYuN,KAAK1C,eACjBjO,eAAa,EACbD,eAAa,EACbH,iBACEuB,OAAOC,KAAKuP,KAAK9F,MAAMiC,WAAWzL,OAAS,EACvCsP,KAAK9F,MAAMiC,UAAX,iBACA,GAEN1M,iBACEe,OAAOC,KAAKuP,KAAK9F,MAAMiC,WAAWzL,OAAS,EACvCsP,KAAK9F,MAAMiC,UAAX,iBACA,GAEN/I,eAAgB4M,KAAKjD,qBACrB1K,gBAAiB2N,KAAKlD,oBACtB9K,aAAcgO,KAAKtC,iBACnBvL,kBAAmB6N,KAAKrC,qBACxB3K,cAAegN,KAAK9F,MAAMC,gBAC1BrK,YAAakQ,KAAK9F,MAAMpI,KACxB/B,MAAOiQ,KAAK9F,MAAMnK,MAClBG,UAAW,CAAC,GAAI,GAAI,GAAI,WASjC8P,KAAKiD,uBAEN,kBAAC,WAAD,CACElN,QAAS,kBAAM,EAAKgE,SAAS,CAAEjE,aAAa,KAC5C/J,MAAOiU,KAAK9F,MAAMsC,WAClB1G,YAAakK,KAAK9F,MAAMpE,YACxBvC,QAASyM,KAAK9F,MAAMuC,eAEtB,kBAAC,GAAD,CACE1G,QAAS,kBAAM,EAAKgE,SAAS,CAAE6E,oBAAoB,KACnD7S,MAAOiU,KAAK9F,MAAM2E,oBAClB/I,YAAakK,KAAK9F,MAAM0E,mBACxBjI,WAAY,UACZD,SAAU,WACJ,EAAKwD,MAAM4E,sBACb,EAAK5E,MAAM4E,wBAGfvL,QAASyM,KAAK9F,MAAMyE,6BA3kC9B,GAAgCuE,IAAMC,W,0KC5EtC,IAAM2B,GAAuB,CAAC,QAAS,YAAa,cAE9CC,GAAe,CACnBC,MAAO,CACL,CACEvd,KAAM,SACNI,MAAO,IAET,CACEJ,KAAM,MACNI,MAAO,IAET,CACEJ,KAAM,wBACNI,MAAO,IAET,CACEJ,KAAM,gCACNI,MAAO,KAERod,UAAW,CACZ,CACExd,KAAM,UACNI,MAAO,IAET,CACEJ,KAAM,YACNI,MAAO,IAET,CACEJ,KAAM,4BACNI,MAAO,KAERqd,WAAY,CACb,CACEzd,KAAM,oDACNI,MAAO,IAET,CACEJ,KAAM,kBACNI,MAAO,IAET,CACEJ,KAAM,iBACNI,MAAO,MAKPlD,GAAYC,YAAW,SAAA0Q,GAAK,MAAK,CACrC6P,uBAAwB,CACtB/e,QAASkP,EAAMI,QAAQ,IAEzB0P,aAAc,CACZpd,SAAU,GACVpB,WAAY,IACZJ,MAAO,WAET6e,gBAAiB,CACfrd,SAAU,GACVpB,WAAY,IACZJ,MAAO,WAET8e,cAAe,CACb/f,gBAAiB,IAEnBggB,YAAa,CACXvd,SAAU,SACVpB,WAAY,KAEd4e,aAAc,CACZxd,SAAU,GACVpB,WAAY,IACZJ,MAAO,QACPif,OAAQ,UACR5e,eAAgB,aAElB6e,QAAS,CACP1Y,aAAc,OACd2Y,YAAa,OACbC,YAAa,qBAEf/D,WAAY,CACV7U,aAAc,OACd2Y,YAAa,OACbC,YAAa,qBAEfzD,aAAc,CACZwD,YAAa,QAEfE,YAAa,CACX7d,SAAU,GACVpB,WAAY,IACZJ,MAAO,QACPif,OAAQ,WAEVK,KAAM,CACJvgB,gBAAiB,UACjBa,QAAS,aAEX2f,eAAgB,CACd3f,QAASkP,EAAMI,QAAQ,IAEzBsQ,cAAe,CACbhe,SAAU,GACVpB,WAAY,IACZJ,MAAO,yBAETyf,iBAAkB,CAChBC,WAAY,SACZC,KAAM,QAERC,4BAA6B,CAC3Bpe,SAAU,GACVpB,WAAY,IACZJ,MAAO,UACPif,OAAQ,UACR5e,eAAgB,aAElBwf,+BAAgC,CAC9Bre,SAAU,GACVxB,MAAO,UACPif,OAAQ,WAEV7C,aAAc,CACZpc,MAAO,UACPif,OAAQ,UACRzd,SAAU,GACVse,YAAa,QAEf5D,UAAW,CACT1V,aAAc,OACduZ,UAAW,GACXjhB,UAAW,UAEb+c,YAAa,CACX9c,gBAAiB,SAEnBud,SAAU,CACR9a,SAAU,GACVpB,WAAY,IACZJ,MAAO,wBACPif,OAAQ,WAEVrE,WAAY,CACV5a,MAAO,UACPlB,UAAW,OACXkhB,QAAS,GACTC,cAAe,EACfC,cAAe,OACf1e,SAAU,QAEZqZ,gBAAiB,CACf7a,MAAO,UACPlB,UAAW,OACXkhB,QAAS,EACTC,cAAe,EACfC,cAAe,OACf1e,SAAU,OACVpB,WAAY,KAEd2a,kBAAmB,CACjB4E,KAAM,QAERzE,cAAe,CACb1Z,SAAU,OACVxB,MAAO,UACPlB,UAAW,OACXkhB,QAAS,EACTC,cAAe,EACfC,cAAe,OACf,UAAW,CACT7f,eAAgB,YAChBL,MAAO,UACPI,WAAY,KAEd,aAAc,CACZC,eAAgB,YAChBL,MAAO,UACPI,WAAY,MAGhB6a,sBAAuB,CACrBzZ,SAAU,OACVnB,eAAgB,YAChBL,MAAO,UACPI,WAAY,IACZtB,UAAW,OACXkhB,QAAS,EACTC,cAAe,EACfC,cAAe,QAEjBC,wBAAyB,CACvBR,KAAM,QAERS,oBAAqB,CACnB5e,SAAU,OACVxB,MAAO,UACPlB,UAAW,OACXkhB,QAAS,EACTC,cAAe,EACfC,cAAe,OACf,UAAW,CACT7f,eAAgB,YAChBL,MAAO,UACPI,WAAY,KAEd,aAAc,CACZC,eAAgB,YAChBL,MAAO,UACPI,WAAY,MAGhBigB,4BAA6B,CAC3B7e,SAAU,OACVnB,eAAgB,YAChBL,MAAO,UACPI,WAAY,IACZtB,UAAW,OACXkhB,QAAS,EACTC,cAAe,EACfC,cAAe,QAEjBI,wBAAyB,CACvBhiB,SAAU,QACVI,MAAO,EACPE,IAAK,EACLH,OAAQ,IACRM,gBAAiB,UACjBogB,YAAa,OACb3Y,aAAc,OACdD,WAAY,MACZga,cAAe,OACfC,aAAc,OACdC,UACE,oEAEJC,gBAAiB,CACfla,aAAc,QAEhBma,sBAAuB,CACrBna,aAAc,QAEhBoa,WAAY,CACVpa,aAAc,OACdxG,MAAO,UACPwB,SAAU,QAEZqf,mBAAoB,CAClBd,UAAW,OACX9Q,aAAc,OACd1Q,MAAO,SAETuiB,WAAY,CACV9gB,MAAO,UACPlB,UAAW,OACXkhB,QAAS,GACTC,cAAe,EACfC,cAAe,OACf1e,SAAU,QAEZuf,gBAAiB,CACf/gB,MAAO,UACPlB,UAAW,OACXkhB,QAAS,EACTC,cAAe,EACfC,cAAe,OACf1e,SAAU,OACVpB,WAAY,KAEd4gB,WAAY,CACV3gB,eAAgB,YAChBL,MAAO,UACPwB,SAAU,WACVpB,WAAY,IACZ6e,OAAQ,WAGVgC,aAAc,CACZ5gB,eAAgB,YAChBL,MAAO,UACPggB,QAAS,GACTf,OAAQ,WAEViC,YAAa,CACXlhB,MAAO,UACP,SAAU,CACRwB,SAAU,aAGd2f,iBAAkB,CAChB/B,YAAa,iBACb5Y,aAAc,QAEhB4a,WAAY,CACV/gB,eAAgB,OAChBL,MAAO,UACPggB,QAAS,IAEXqB,SAAU,CACR,gBAAiB,CACfrhB,MAAO,YAGXshB,SAAU,CACRliB,QAAS,eACTQ,QAAS,oBAEX2hB,SAAU,CACRvhB,MAAO,UACPZ,QAAS,QACToC,SAAU,SACV,UAAW,CACTxB,MAAO,YAGXG,WAAY,CACVH,MAAO,UACPI,WAAY,OACZC,eAAgB,gBAIPmhB,GAAa,WAAO,IAAD,EACU7gB,mBAAS,SADnB,mBACvB8gB,EADuB,KACTC,EADS,OAEQ/gB,mBAAS,GAFjB,mBAEvBC,EAFuB,KAEVC,EAFU,OAGMF,mBAAS,UAHf,mBAGvBghB,EAHuB,KAGXjhB,EAHW,OAQYC,mBAAmB,IAR/B,mBAQvB0Y,EARuB,KAQRtE,EARQ,OASwBpU,wBAAcI,GATtC,mBASvBqY,EATuB,KASFpE,EATE,OAeYrU,mBAAmB,IAf/B,mBAevBqd,EAfuB,KAeRR,EAfQ,OAgBoB7c,mBAAmB,IAhBvC,mBAgBvBsd,EAhBuB,KAgBJP,EAhBI,OAiBwB/c,wBAAcI,GAjBtC,mBAiBvBgd,EAjBuB,KAiBFN,EAjBE,KAoBxBle,EAAUpB,KAWhB,OACE,yBAAKqB,UAAWD,EAAQ+f,MACtB,kBAAC1P,GAAA,EAAD,CACE5Q,WAAS,EACT6Q,QAAQ,gBACR3Q,WAAW,SACXgQ,QAAS,EACT1P,UAAWD,EAAQuf,eAEnB,kBAAClP,GAAA,EAAD,CAAMzO,MAAI,GACR,kBAACygB,EAAA,EAAD,CAAYpiB,UAAWD,EAAQwf,aAA/B,YAGJ,kBAAC,wBAAD,CAAuBvgB,OAAO,SAW9B,kBAACoR,GAAA,EAAD,CAAMzO,MAAI,EAAC2O,GAAI,GACb,wBAAIvO,MAAO,CAAE3B,QAAS,IAAKC,OAAQ,MAE/Bye,GAAgBpd,IAAI,SAACC,EAAMC,GAAP,OAClB,wBAAI5B,UAAWD,EAAQ+hB,UACrB,kBAACjF,GAAA,EAAD,CAAM7c,UAAWkC,KAAWnC,EAAQgiB,SAAU3gB,IAAgBQ,EAAI7B,EAAQY,WAAa,MAAOwB,QAAS,kBAlC7F,SAACR,EAAMU,GAC7B6f,EAAgBvgB,GAChBN,EAAegB,GAgC0GggB,CAAgB1gB,EAAMC,KAAKD,QAiBlJ,kBAACyO,GAAA,EAAD,CAAM5Q,WAAS,EAAC6Q,QAAQ,gBAAgBX,QAAS,GAC/C,kBAAC,wBAAD,CAAuB1Q,OAAO,SAI9B,kBAACoR,GAAA,EAAD,CAAMzO,MAAI,EAAC2O,GAAI,EAAGtQ,UAAWD,EAAQ4hB,kBACnC,kBAAC7gB,GAAA,EAAD,CACEE,MAAO+d,GAAakD,GACpBhhB,YA/DgB,SAACU,GACzBT,EAAcS,IA+DNH,MAAOygB,KAMK,WAAfE,GAA4C,UAAjBF,EAC1B,kBAAC7R,GAAA,EAAD,CAAMzO,MAAI,EAAC2O,GAAI,GAAIsL,GAAI,IACrB,kBAAC,GAAD,CACE7b,QAASA,EAMT8Z,cAAeA,EACftE,iBAAkBA,EAClBqE,oBAAqBA,EACrBpE,uBAAwBA,KAQX,QAAf2M,GAAyC,UAAjBF,EAC1B,kBAAC7R,GAAA,EAAD,CAAMzO,MAAI,EAAC2O,GAAI,GAAIsL,GAAI,IACrB,kBAAC,GAAD,CACE7b,QAASA,EAKTye,cAAeA,EACfR,iBAAkBA,EAClBS,kBAAmBA,EACnBP,qBAAsBA,EACtBK,oBAAqBA,EACrBN,uBAAwBA,KAK1B,QAMNqE,GAAkB,SAACpO,GAAD,OAAkBA,EAAMqO,MAE1CC,GAAqB,SAACC,GAAD,MAAyB,CAClDC,IAAKC,6BAAmBlgB,EAAmBggB","file":"static/js/10.08ba4e78.chunk.js","sourcesContent":["import * as React from 'react';\nimport { CircularProgress } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface LoaderProps {\n}\n\nconst useStyles = makeStyles({\n\troot: {\n        position: 'fixed',\n        width: '100%',\n        height: '100%',\n        zIndex: 9999,\n        right: '0px',\n        bottom: '0px',\n        top: '0px',\n        left: '0px',\n        textAlign: \"center\",\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    },\n    container:{\n        height: '100%',\n        outline: 0,\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        flexDirection: 'column'\n    }\n});\n\nexport const Loader: React.FC<LoaderProps> = (): JSX.Element => {\n    // const buttonclasses = ButtonStyle();\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <div className={classes.container}>\n                <CircularProgress size={150}/>\n            </div>\n        </div>\n    )\n}\n\nLoader.defaultProps = {}","import * as React from 'react';\nimport { Link, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles({\n\tsideBarLists: {\n\t\tpadding: 0,\n\t\tmargin: 0,\n        listStyle: 'none',\n        position: 'sticky',\n        top: 20\n\t},\n\tsideBarLink: {\n\t\tcolor: \"#272e4c\",\n\t\tmargin: \"0 0 10px\",\n\t\tdisplay: \"block\"\n    },\n    sideBarLinkDisabled: {\n        color: \"rgba(39, 46, 76, 0.6)\",\n\t\tmargin: \"0 0 10px\",\n        display: \"block\",\n        pointerEvents: 'none'\n    },\n    LinkActive: {\n        color: \"#2C2E8E\",\n        fontWeight: \"bold\",\n        textDecoration: \"underline\"\n    }\n});\n\nexport interface ISideMenuProps {\n    items: any,\n    activeItems: (item) => void,\n    reset?: any,\n    setActiveItem?: number,\n}\n\nexport const SideMenu : React.FC<ISideMenuProps> = (props: ISideMenuProps): JSX.Element => {\n    const {items , activeItems, setActiveItem} = props;\n    const [activeClass, setActiveClass] = useState(0);\n    const classes = useStyles();\n    useEffect(() => {\n        // resets the active item to zero when\n        // the reset props changes\n        setActiveItem && setActiveClass(setActiveItem)\n        if(props.reset !== undefined){\n            setActiveClass(0)\n            activeItems(items[0].name)\n        }\n    }, [props.reset])\n\n    const sideBarlinkClick = (itemName, index) => {\n        activeItems(itemName)\n        setActiveClass(index)\n    }\n\n    return (\n        <>\n            <ul className={classes.sideBarLists}>\n                {\n                    items.map((item, i) => (\n                        <li>\n                            {\n                                item.label !== undefined &&\n                                <Typography variant={'subtitle2'} style={{color:'#929292', fontSize: '12px'}}>{ item.label }</Typography>\n                            }\n                            {\n                                !item.disabled ? \n                                 <Link \n                                    className={classNames(classes.sideBarLink, setActiveItem ? setActiveItem === i ?  classes.LinkActive : null : activeClass === i ? classes.LinkActive : null)} \n                                    onClick={() => sideBarlinkClick(item.name, i)}\n                                >\n                                    { item.name } \n                                </Link> :\n                                <Link\n                                    className={classNames(classes.sideBarLinkDisabled)}\n                                >\n                                    { item.name }\n                                </Link>\n                            }\n                        </li>\n                    ))\n                }\n            </ul>\n        </>\n    )\n}","export const LookupConsts = {\n  Lookup: {\n    ResetReducer: 'Lookup_ResetReducer',\n    SetReducer: 'Lookup_SetReducer',\n  },\n};\n","import { LookupConsts } from './ActionConsts';\n\nexport const LookupActions = {\n  Map: (payload: []) => ({\n    payload,\n    type: LookupConsts.Lookup.SetReducer,\n  }),\n\n  Reset: () => ({\n    type: LookupConsts.Lookup.ResetReducer,\n  }),\n};\n","//#region Global Imports\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Table,\n  TableSelection,\n  TableHeaderRow,\n  TableFilterRow,\n  Toolbar,\n  SearchPanel,\n  PagingPanel,\n  TableBandHeader,\n} from '@devexpress/dx-react-grid-material-ui';\nimport { Paper } from '@material-ui/core/';\nimport {\n  PagingState,\n  CustomPaging,\n  SelectionState,\n  IntegratedSelection,\n  FilteringState,\n  IntegratedFiltering,\n  SortingState,\n  IntegratedSorting,\n  SearchState,\n  DataTypeProvider,\n} from '@devexpress/dx-react-grid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSearch,\n  faCheckSquare,\n  faSort,\n  faSortUp,\n  faSortDown,\n  faExclamationCircle,\n  faFileUpload,\n} from '@fortawesome/free-solid-svg-icons';\nimport { makeStyles } from '@material-ui/styles';\nimport * as MaterialUI from '@material-ui/core';\nimport moment from 'moment';\n//import { Components } from '@hims/core';\n//#endregion Global Imports\n\nlet radioSelected = false;\nlet selectedValue = '';\nlet clickCell = false;\nlet clickValue = {};\n\nconst cellSelectStyles = makeStyles({\n  select: {\n    backgroundColor: 'transparent',\n  },\n});\n\nconst textFieldStyles = makeStyles({\n  root: {\n    '& div.MuiInputBase-root': {\n      backgroundColor: 'transparent',\n    },\n  },\n});\n\nconst checkboxStyles = makeStyles({\n  root: {\n    '&.Mui-checked': {\n      color: '#3AB77D',\n    },\n  },\n});\n\nconst Select = ({ id, value, items }: any) => {\n  const cellSelectClasses = cellSelectStyles();\n  return (\n    <MaterialUI.Select\n      id={id}\n      classes={cellSelectClasses}\n      value={value}\n      style={{ width: '100%', backgroundColor: 'transparent' }}\n      renderValue={(selected: any) => {\n        if (selected !== null) {\n          const value: any = items.find((item: any) => {\n            return item.value === selected;\n          });\n          if (value) {\n            return value.name;\n          } else {\n            return '—';\n          }\n        }\n        return '—';\n      }}\n    >\n      {items.map((item: any) => (\n        <MaterialUI.MenuItem key={item.value} value={item.value}>\n          {item.name}\n        </MaterialUI.MenuItem>\n      ))}\n    </MaterialUI.Select>\n  );\n};\n\nconst TableFilterCell = ({\n  filter,\n  onFilter,\n  filteringEnabled,\n  classes,\n}: any) => {\n  if (filteringEnabled) {\n    return (\n      <MaterialUI.TableCell\n        style={{ padding: '0px 10px 8px 10px' }}\n        classes={classes}\n      >\n        <MaterialUI.OutlinedInput\n          classes={classes}\n          style={{ width: '100%' }}\n          value={filter ? filter.value : ''}\n          labelWidth={0}\n          onChange={e =>\n            onFilter(e.target.value ? { value: e.target.value } : null)\n          }\n          placeholder=\"\"\n        />\n      </MaterialUI.TableCell>\n    );\n  } else {\n    // return null;\n    return (\n      <MaterialUI.TableCell\n        style={{ padding: '0px 10px 8px 10px' }}\n        classes={classes}\n      ></MaterialUI.TableCell>\n    );\n  }\n};\n\nconst TableRadio = ({\n  style,\n  selected,\n  onToggle,\n  classes,\n  ...restProps\n}: any) => {\n  return (\n    <MaterialUI.TableCell\n      padding=\"checkbox\"\n      style={style}\n      classes={classes}\n      {...restProps}\n    >\n      <MaterialUI.Radio\n        classes={classes}\n        checked={selected}\n        onClick={e => {\n          e.stopPropagation();\n          onToggle();\n        }}\n      />\n    </MaterialUI.TableCell>\n  );\n};\n\nconst TableCheckBox = ({\n  style,\n  selected,\n  onToggle,\n  classes,\n  ...restProps\n}: any) => {\n  return (\n    <MaterialUI.TableCell\n      padding=\"checkbox\"\n      style={style}\n      classes={classes}\n      {...restProps}\n    >\n      <MaterialUI.Checkbox\n        icon={<FontAwesomeIcon icon={faCheckSquare} />}\n        checkedIcon={<FontAwesomeIcon icon={faCheckSquare} />}\n        classes={classes}\n        checked={selected}\n        onClick={e => {\n          e.stopPropagation();\n          onToggle();\n        }}\n      />\n    </MaterialUI.TableCell>\n  );\n};\n\nconst TableSearchPanel = ({ value, onValueChange }: any) => {\n  return (\n    <MaterialUI.OutlinedInput\n      value={value ? value : ''}\n      labelWidth={0}\n      onChange={e => onValueChange(e.target.value ? e.target.value : null)}\n      placeholder=\"Search a benefit or benefit category\"\n      fullWidth\n      startAdornment={\n        <MaterialUI.InputAdornment position=\"start\">\n          <FontAwesomeIcon icon={faSearch} />\n        </MaterialUI.InputAdornment>\n      }\n    />\n  );\n};\n\nconst DefaultTableToolbar = ({ children }: any) => {\n  return <MaterialUI.Toolbar disableGutters={true} children={children} />;\n};\n\nconst SortingIcon = ({ direction }: any) =>\n  direction === 'asc' ? (\n    <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortUp} />\n  ) : (\n    <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortDown} />\n  );\n\nconst TableSortLabel = ({ column, onSort, children, direction }: any) => {\n  if (\n    column.sortingEnabled !== undefined &&\n    column.sortingEnabled !== null &&\n    column.sortingEnabled === false\n  ) {\n    return <span>{column.title}</span>;\n  } else {\n    return (\n      <MaterialUI.TableSortLabel hideSortIcon={true} onClick={onSort}>\n        {children}\n        {direction ? (\n          <SortingIcon direction={direction} />\n        ) : (\n          <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSort} />\n        )}\n      </MaterialUI.TableSortLabel>\n    );\n  }\n};\n\nconst EmptyCellFormatter = ({ value }: any) => {\n  if (value === '' || value === undefined || value === null) {\n    return (\n      <FontAwesomeIcon\n        style={{ color: '#FD5451', fontSize: '16px' }}\n        icon={faExclamationCircle}\n      />\n    );\n  } else {\n    return value;\n  }\n};\n\nconst EmptyCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={EmptyCellFormatter} {...props} />\n);\n\nconst RequiredFormatter = ({ row, value }: any) => {\n  if (\n    row['required'] === true &&\n    (value === '' || value === undefined || value === null)\n  ) {\n    return (\n      <FontAwesomeIcon\n        style={{ color: '#FD5451', fontSize: '16px' }}\n        icon={faExclamationCircle}\n      />\n    );\n  } else if (\n    row['required'] === false &&\n    (value === '' || value === undefined || value === null)\n  ) {\n    return 'N/A';\n  } else {\n    return value;\n  }\n};\n\nconst RequiredDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={RequiredFormatter} {...props} />\n);\n\nconst RequiredCheckboxFormatter = ({ column, row, value }: any) => {\n  const classes = checkboxStyles();\n  return (\n    <div>\n      <MaterialUI.FormControlLabel\n        control={\n          <MaterialUI.Checkbox\n            checked={value === true || value === 'true' ? true : false}\n            value={value}\n            style={{ padding: '5px' }}\n            className={classes.root}\n            color=\"primary\"\n            onChange={e => {\n              clickCell = true;\n              clickValue = {\n                value: e.target.checked,\n                name: column['name'],\n                id: row['id'],\n              };\n            }}\n          />\n        }\n        label=\"\"\n      />\n    </div>\n  );\n};\n\nconst RequiredCheckboxDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={RequiredCheckboxFormatter} {...props} />\n);\n\nconst UploadFileFormatter = ({ column, row }: any) => {\n  const id: string = column['name'] + '_' + row['id'];\n  return (\n    <div\n      id={id}\n      onClick={e => {\n        // e.stopPropagation();\n        console.log('e>', e);\n      }}\n    >\n      <MaterialUI.Typography color=\"textPrimary\" style={{ paddingTop: '5px' }}>\n        <span>\n          <span style={{ paddingRight: '10px', fontSize: '15px' }}>\n            <FontAwesomeIcon icon={faFileUpload} style={{ color: '#0D5E40' }} />\n          </span>\n          <span style={{ textDecoration: 'underline', color: '#0D5E40' }}>\n            Upload File\n          </span>\n        </span>\n      </MaterialUI.Typography>\n    </div>\n  );\n};\n\nconst UploadFileDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={UploadFileFormatter} {...props} />\n);\n\nconst DisapproveRadioFormatter = ({ value }: any) => {\n  const items = [\n    { value: 'approve', label: 'Approve' },\n    { value: 'for confirmation', label: 'For Confirmation' },\n  ];\n  return (\n    <div>\n      <MaterialUI.RadioGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={value}\n        onChange={e => {\n          e.stopPropagation();\n          radioSelected = true;\n          selectedValue = e.target.value;\n        }}\n        row\n      >\n        {items.map((item: any, cnt: number) => (\n          <MaterialUI.FormControlLabel\n            key={cnt}\n            value={item.value}\n            control={<MaterialUI.Radio color=\"primary\" />}\n            label={item.label}\n            labelPlacement=\"end\"\n          />\n        ))}\n      </MaterialUI.RadioGroup>\n    </div>\n  );\n};\n\nconst DisapproveRadioDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={DisapproveRadioFormatter} {...props} />\n);\n\nconst IncompleteRadioFormatter = ({ value }: any) => {\n  const items = [\n    { value: 'approve', label: 'Approve' },\n    { value: 'disapprove', label: 'Disapprove' },\n    { value: 'for confirmation', label: 'For Confirmation' },\n  ];\n  return (\n    <div>\n      <MaterialUI.RadioGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={value}\n        onChange={e => {\n          e.stopPropagation();\n          radioSelected = true;\n          selectedValue = e.target.value;\n        }}\n        row\n      >\n        {items.map((item: any, cnt: number) => (\n          <MaterialUI.FormControlLabel\n            key={cnt}\n            value={item.value}\n            control={<MaterialUI.Radio color=\"primary\" />}\n            label={item.label}\n            labelPlacement=\"end\"\n            onClick={e => {\n              radioSelected = true;\n              console.log('radio button label onclick', e);\n            }}\n            onChange={e => {\n              radioSelected = true;\n              // selectedValue = e.target.value;\n              console.log('radio button label onchange', e);\n            }}\n          />\n        ))}\n      </MaterialUI.RadioGroup>\n    </div>\n  );\n};\n\nconst IncompleteRadioDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={IncompleteRadioFormatter} {...props} />\n);\n\nconst RadioNameFormatter = ({ value }: any) => {\n  const items = [\n    { value: 'match', label: 'Match' },\n    { value: 'not', label: 'Not Match' },\n    { value: 'confirmation', label: 'For Confirmation' },\n  ];\n  console.log('Radio group value: ', value);\n  return (\n    <div>\n      <MaterialUI.RadioGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={value}\n        onChange={e => {\n          e.stopPropagation();\n          radioSelected = true;\n          selectedValue = e.target.value;\n        }}\n        row\n      >\n        {items.map((item: any, cnt: number) => (\n          <MaterialUI.FormControlLabel\n            key={cnt}\n            value={item.value}\n            control={<MaterialUI.Radio color=\"primary\" />}\n            label={item.label}\n            labelPlacement=\"end\"\n            onClick={e => {\n              radioSelected = true;\n              console.log('radio button label onclick', e);\n            }}\n            onChange={e => {\n              radioSelected = true;\n              // selectedValue = e.target.value;\n              console.log('radio button label onchange', e);\n            }}\n          />\n        ))}\n      </MaterialUI.RadioGroup>\n    </div>\n  );\n};\n\nconst RadioDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={RadioNameFormatter} {...props} />\n);\n\nconst ValuesNameFormatter = ({ value }: any) => {\n  const items = [\n    { name: '', value: '' },\n    { name: 'Married', value: 'married' },\n    { name: 'Single', value: 'single' },\n    { name: 'Widowed', value: 'widowed' },\n    { name: 'Annulled', value: 'annulled' },\n  ];\n  return <Select items={items} value={value} />;\n};\n\nconst ValuesNameDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={ValuesNameFormatter} {...props} />\n);\n\nconst SystemNameFormatter = ({ value }: any) => {\n  const items = [\n    { name: 'First Name', value: 'first_name' },\n    { name: 'Middle Name', value: 'middle_name' },\n    { name: 'Last Name', value: 'last_name' },\n    { name: 'Birthday', value: 'birthday' },\n    { name: 'Civil Status', value: 'civil_status' },\n    { name: 'Gender', value: 'gender' },\n    { name: 'Plan Type', value: 'plan_type' },\n    { name: 'Type', value: 'type' },\n  ];\n\n  return <Select items={items} value={value} />;\n};\n\nconst SystemNameDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={SystemNameFormatter} {...props} />\n);\n\nconst DataFormatter = ({ value }: any) => {\n  const items = [\n    { name: 'Civil Status', value: 'civil_status' },\n    { name: 'Gender', value: 'gender' },\n  ];\n  return <Select items={items} value={value} />;\n};\n\nconst DataDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={DataFormatter} {...props} />\n);\n\nconst NumberFormatter = ({ value }: any) => {\n  const textFieldClasses = textFieldStyles();\n  return (\n    <MaterialUI.TextField\n      value={value}\n      type={'number'}\n      classes={textFieldClasses}\n    />\n  );\n};\n\nconst NumberDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={NumberFormatter} {...props} />\n);\n\nconst TextFormatter = ({ value }: any) => {\n  const textFieldClasses = textFieldStyles();\n  return <MaterialUI.TextField value={value} classes={textFieldClasses} />;\n};\n\nconst TextDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={TextFormatter} {...props} />\n);\n\nconst DateFormatter = ({ value }: any) => {\n  let text = value;\n  if (text) {\n    try {\n      text = moment(value).format('MMM DD, YYYY');\n    } catch (error) {\n      text = value;\n    }\n  } else {\n    text = '';\n  }\n\n  return text;\n};\n\nconst DateCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={DateFormatter} {...props} />\n);\n\nconst TimeFormatter = ({ value }: any) => {\n  let text = value;\n  if (text) {\n    try {\n      text = moment(value).format('hh:mm:ss A');\n    } catch (error) {\n      text = value;\n    }\n  } else {\n    text = '';\n  }\n\n  return text;\n};\n\nconst TimeCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={TimeFormatter} {...props} />\n);\n\ninterface TableComponentProps {\n  rows: any[];\n  columns: any[];\n  columnFilteringEnabled?: boolean;\n  columnExtensions?: any[];\n  filterExtensions?: any[];\n  formattedColumns?: any;\n  columnBands?: any[] | null;\n  singleSelect?: boolean;\n  disableSearch?: boolean;\n  disablePaging?: boolean;\n  disableSelect?: boolean;\n  disableFilter?: boolean;\n  disableSort?: boolean;\n  showSelectionColumn?: boolean;\n  toolbarType?: string | null;\n  topBar?: () => JSX.Element;\n  id: string;\n  totalCount: number;\n  message: string;\n  defaultFilter?: any[];\n  update: (skip: number, limit: number) => void;\n  updateSorting: (sort: object) => void;\n  onClickRow: (row: number[]) => void;\n  onSelectedRadio?: (row: number, value: string) => void;\n  onFilterChange?: (response: any) => void;\n  onSortingChange?: (response: any) => void;\n  onClickCell?: (row: any) => void;\n  onPageChange: (currentPage: any, skip: any) => void;\n  ongPageSizeChange: (value: number) => void;\n  defaultSort?: any[];\n  query?: string;\n  currentPage: number;\n  limit: number;\n  pageSizes?: number[];\n}\n\nexport const TableComponent: React.FC<TableComponentProps> = (\n  props: TableComponentProps,\n): JSX.Element => {\n  const {\n    columns,\n    formattedColumns,\n    singleSelect,\n    disablePaging,\n    disableSearch,\n    disableSelect,\n    disableSort,\n    disableFilter,\n    toolbarType,\n    columnExtensions,\n    columnBands,\n    id,\n    showSelectionColumn,\n    query,\n    totalCount,\n    currentPage,\n    limit\n  } = props;\n  const [selection, setSelection] = useState<number[]>([]);\n  const [pageSizes] = useState(props.pageSizes ? props.pageSizes : [10, 25, 50, 100, 0]);\n  const [sorting, setSorting] = useState([]);\n  const [rows, setRows] = useState(props.rows);\n  useEffect(() => {\n    setRows(props.rows);\n  }, [props.rows]); \n\n  const dataTypeProviders: any[] = [];\n\n  const changePageSize = (value) => {\n    // props.update(currentPage, value);\n    props.ongPageSizeChange(value);\n  }\n\n  const setCurrentPageMethod = (page) => {\n    let skip = (limit * page);\n\n    props.onPageChange(page, skip);\n  }\n\n  const setSortingMethod = (e) => {\n    props.updateSorting(e);\n    setSorting(e);\n    setRows([]);\n  }\n\n  function handleSelectionChange(newSelection: any[]) {\n    console.log('here click row');\n    if (props.onClickRow) {\n      // selectedRow = newSelection[0];\n      if (!radioSelected && !clickCell) {\n        console.log('onclickrow');\n        props.onClickRow(newSelection);\n      } else if (radioSelected) {\n        console.log('radioselected', newSelection);\n        if (props.onSelectedRadio)\n          props.onSelectedRadio(newSelection[0], selectedValue);\n        radioSelected = false;\n      } else if (clickCell) {\n        console.log(' here !!! >>>', props.onClickCell);\n        if (props.onClickCell) props.onClickCell(clickValue);\n        clickCell = false;\n        clickValue = {};\n      }\n    } else {\n      if (singleSelect) {\n        const lastSelected = newSelection.find(\n          (selected: number) => selection.indexOf(selected) === -1,\n        );\n\n        console.log(newSelection, selection, lastSelected);\n        if (lastSelected !== undefined) {\n          setSelection([lastSelected]);\n        }\n      } else {\n        setSelection(newSelection);\n      }\n    }\n  }\n  if (\n    formattedColumns !== undefined &&\n    Object.keys(formattedColumns).length > 0\n  ) {\n    if (formattedColumns['number'] !== undefined) {\n      dataTypeProviders.push(\n        <NumberDataTypeProvider for={formattedColumns.number} />,\n      );\n    }\n    if (formattedColumns['text'] !== undefined) {\n      dataTypeProviders.push(\n        <TextDataTypeProvider for={formattedColumns.text} />,\n      );\n    }\n    if (formattedColumns['system_name'] !== undefined) {\n      dataTypeProviders.push(\n        <SystemNameDataTypeProvider for={formattedColumns.system_name} />,\n      );\n    }\n    if (formattedColumns['data_name'] !== undefined) {\n      dataTypeProviders.push(\n        <DataDataTypeProvider for={formattedColumns.data_name} />,\n      );\n    }\n    if (formattedColumns['value_name'] !== undefined) {\n      dataTypeProviders.push(\n        <ValuesNameDataTypeProvider for={formattedColumns.value_name} />,\n      );\n    }\n    if (formattedColumns['required_columns'] !== undefined) {\n      dataTypeProviders.push(\n        <EmptyCellDataTypeProvider for={formattedColumns.required_columns} />,\n      );\n    }\n    if (formattedColumns['radio'] !== undefined) {\n      dataTypeProviders.push(\n        <RadioDataTypeProvider for={formattedColumns.radio} />,\n      );\n    }\n    if (formattedColumns['incomplete_radio'] !== undefined) {\n      dataTypeProviders.push(\n        <IncompleteRadioDataTypeProvider\n          for={formattedColumns.incomplete_radio}\n        />,\n      );\n    }\n    if (formattedColumns['disapprove_action'] !== undefined) {\n      dataTypeProviders.push(\n        <DisapproveRadioDataTypeProvider\n          for={formattedColumns.disapprove_action}\n        />,\n      );\n    }\n    if (formattedColumns['required_checkbox'] !== undefined) {\n      dataTypeProviders.push(\n        <RequiredCheckboxDataTypeProvider\n          for={formattedColumns.required_checkbox}\n        />,\n      );\n    }\n    if (formattedColumns['upload_file'] !== undefined) {\n      dataTypeProviders.push(\n        <UploadFileDataTypeProvider\n          for={formattedColumns.upload_file}\n          {...props}\n        />,\n      );\n    }\n    if (formattedColumns['required_cell'] !== undefined) {\n      dataTypeProviders.push(\n        <RequiredDataTypeProvider\n          for={formattedColumns.required_cell}\n          {...props}\n        />,\n      );\n    }\n    if (formattedColumns['date'] !== undefined) {\n      dataTypeProviders.push(\n        <DateCellDataTypeProvider for={formattedColumns.date} />,\n      );\n    }\n    if (formattedColumns['time'] !== undefined) {\n      dataTypeProviders.push(\n        <TimeCellDataTypeProvider for={formattedColumns.time} />,\n      );\n    }\n  }\n\n  let toolbar = DefaultTableToolbar;\n\n  return (\n    <Paper id={id}>\n      {props.topBar ? props.topBar() : null}\n      <Grid rows={rows} columns={columns}>\n        {dataTypeProviders}\n        {/* Need to initialize paging state before paging panel */}\n        {!disablePaging ? (\n          <PagingState\n            currentPage={currentPage}\n            onCurrentPageChange={setCurrentPageMethod}\n            pageSize={limit}\n            onPageSizeChange={changePageSize}\n          />\n        ) : null}\n\n        {!disablePaging ? <CustomPaging totalCount={totalCount} /> : null}\n\n        {!disableSearch || query ? <SearchState value={query} /> : null}\n\n        {!disableSort ? (//&& props.defaultSort !== undefined ? (\n          <SortingState\n            defaultSorting={[]}\n            sorting={sorting}\n            onSortingChange={setSortingMethod}\n          />\n        ) : !disableSort ? (\n          <SortingState\n            defaultSorting={[]}\n          />\n        ) : null}\n\n        {!disableSort ? <IntegratedSorting /> : null}\n\n        {!disableSelect || !showSelectionColumn ? (\n          <SelectionState\n            selection={selection}\n            onSelectionChange={handleSelectionChange}\n          />\n        ) : null}\n        {!disableSelect ? <IntegratedSelection /> : null}\n\n        {!disableFilter ? (\n          <FilteringState\n            defaultFilters={[]}\n            filters={\n              props.defaultFilter !== undefined ? props.defaultFilter : []\n            }\n            columnFilteringEnabled={props.columnFilteringEnabled}\n            columnExtensions={props.filterExtensions}\n            onFiltersChange={props.onFilterChange}\n          />\n        ) : null}\n\n        {!disableFilter ? <IntegratedFiltering /> : null}\n\n        <Table\n          columnExtensions={columnExtensions}\n          messages={{ noData: props.message }}\n        />\n\n        {!disableSelect && !showSelectionColumn ? (\n          <TableSelection\n            showSelectAll={!singleSelect ? true : false}\n            cellComponent={!singleSelect ? TableCheckBox : TableRadio}\n            headerCellComponent={TableCheckBox}\n          />\n        ) : !showSelectionColumn ? (\n          <TableSelection\n            selectByRowClick\n            showSelectionColumn={false}\n            cellComponent={!singleSelect ? TableCheckBox : TableRadio}\n            headerCellComponent={TableCheckBox}\n          />\n        ) : null}\n\n        <TableHeaderRow\n          showSortingControls={!disableSort}\n          sortLabelComponent={TableSortLabel}\n        />\n        {!disableFilter ? (\n          <TableFilterRow cellComponent={TableFilterCell} />\n        ) : null}\n        {columnBands ? <TableBandHeader columnBands={columnBands} /> : null}\n\n        {!disableSearch || toolbarType ? (\n          <Toolbar rootComponent={toolbar} />\n        ) : null}\n        {!disableSearch ? (\n          <SearchPanel inputComponent={TableSearchPanel} />\n        ) : null}\n\n        {!disablePaging ? <PagingPanel pageSizes={pageSizes} /> : null}\n      </Grid>\n    </Paper>\n  );\n};\n\nTableComponent.defaultProps = {\n  rows: [],\n  columns: [],\n  columnExtensions: [],\n  filterExtensions: [],\n  columnBands: null,\n  formattedColumns: {},\n  singleSelect: false,\n  disableSearch: false,\n  disablePaging: false,\n  disableSelect: false,\n  disableFilter: false,\n  disableSort: false,\n  toolbarType: null,\n  defaultFilter: [],\n  showSelectionColumn: false,\n  columnFilteringEnabled: true,\n  id: 'table-1',\n  totalCount: 0,\n  message: 'No available data',\n  query: '',\n  currentPage: 0,\n  limit: 0\n};\n","import Fetch, { requestOption } from '../index'\n\nconst fetch = new Fetch();\nfetch.getAccessToken();\n\nexport const getICD = (limit: number, skip: number) => {\n\n    let filters = {\n        limit: limit,\n        skip: skip,\n      };\n    let option: requestOption = {\n        method: 'GET'\n    }\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `icd10-codes/search?filter=${JSON.stringify(filters)}`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `icd10-codes/search?filter=${JSON.stringify(filters)}`, true))\n}\n\nexport const searchICD = (limit: number, offset: number, filters: any, query: string, sorting?: any, key?: string,) => {\n\n    // console.log('KEY', key)\n\n    let filter_key_str = '';\n    if (key !== undefined && key !== '') {\n      filter_key_str = `&filter[where][main_category][like]=${key}`;\n    }\n    let sorting_str = '';\n    if (sorting && sorting.length !== 0) {\n      sorting_str =\n        '&filter[order]=' +\n        sorting[0]['columnName'] +\n        ' ' +\n        sorting[0]['direction'];\n    }\n    let filter_str = '';\n    if (filters) {\n      filters.forEach(filter => {\n        filter_str =\n          filter_str + '&' + filter['columnName'] + '=' + filter['value'];\n      });\n    }\n    let search = query ? '&search=' + query : '';\n    let ICD_URL =\n      `icd10-codes/search?filter[limit]=${limit}&filter[skip]=${offset}` +\n      search +\n      filter_str +\n      sorting_str +\n      filter_key_str;\n    if (limit === 0)\n        ICD_URL =\n        `icd10-codes/search?filter[skip]=${offset}` +\n        search +\n        filter_str +\n        sorting_str +\n        filter_key_str;\n    let option: requestOption = {\n        method: 'GET'\n    }\n \n    if(fetch.getAccessToken()){\n        return fetch.call(option, ICD_URL, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, ICD_URL, true))\n}\n\nexport const addICD10Codes = (payload: any) => {\n\n    let option: requestOption = {\n        method: 'POST',\n        body: payload\n    }\n\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `icd10-codes/multiple`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `icd10-codes/multiple`, true))\n}\n\nexport const editICD = (payload: any, id: string | undefined) => {\n\n    let option: requestOption = {\n        method: 'PUT',\n        body: payload\n    }\n\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `icd10-codes/edit/${id}`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `icd10-codes/edit/${id}`, true))\n}\n\nexport const deleteICD = (id: string) => {\n\n    let option: requestOption = {\n        method: 'DELETE'\n    }\n\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `icd10-codes/${id}`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `icd10-codes/${id}`, true))\n}","import React, { FC } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { IConfirmationModal } from './IConfirmationModal';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tdialog: {},\n\tdialogAction: {\n\t\tmarginBottom: theme.spacing(2),\n\t},\n}));\n\nexport const ConfirmationModal: FC<IConfirmationModal.IProps> = props => {\n\tconst classes = useStyles();\n\tconst reset = () => {};\n\n\tconst handleCancel = () => {\n\t\treset();\n\t\tprops.onClose(true);\n\t}\n\n\tconst handleClose = () => {\n\t\treset();\n\t\tprops.onClose();\n\t};\n\n\tconst handleSubmit = () => {\n\t\treset();\n\t\tprops.onSubmit();\n\t\tprops.onClose();\n\t};\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={props.isModalOpen}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\tmaxWidth=\"sm\"\n\t\t\tclassName={classes.dialog}\n\t\t>\n\t\t\t<DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"flex-start\">\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t{props.message}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions className={clsx(classes.dialogAction)}>\n\t\t\t\t<Grid container spacing={2} justify=\"center\" alignItems=\"flex-start\">\n\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t<Button onClick={handleCancel} variant=\"outlined\" color=\"default\" fullWidth>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{props.submitType === 'submit' ? 'Submit' : 'Confirm'}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n\nConfirmationModal.defaultProps = {\n\tisModalOpen: false,\n};\n\nexport default ConfirmationModal;","import { Icd10, Cpt } from '../LookupModels';\nimport moment from 'moment';\n\nexport const constructIcd10 = (data: Icd10) => {\n\n\tlet status = 'Awaiting Activation';\n\tconst today = new Date()\n\tconst eff_date = data['effectivity_date'] ?\n\t\tnew Date(new Date(data['effectivity_date']).setHours(0, 0, 0, 0)) :\n\t\tundefined\n\tconst exp_date = data['expiry_date'] ?\n\t\tnew Date(new Date(data['expiry_date']).setHours(0, 0, 0, 0)) :\n\t\tundefined\n\n\tconsole.log('DATES : ', today, eff_date, exp_date);\n\tif (exp_date && eff_date)\n\t\tconsole.log('BOOLS', eff_date <= today, exp_date <= today);\n\n\tif (eff_date && moment(eff_date).isValid() && eff_date <= today)\n\t\tstatus = 'Active';\n\n\tif (exp_date && moment(exp_date).isValid() && exp_date <= today)\n\t\tstatus = 'Deactivated';\n\n\tconst gender_limited = data['gender'] ? true : undefined;\n\tconst gender = data['gender'] ? data['gender'] : undefined;\n\n\tconst payload: Icd10 = {\n\t\t_id: data['_id'],\n\t\tcategory_code: data['category_code'],\n\t\tdiagnosis_code: data['diagnosis_code'] ? data['diagnosis_code'].toString() : undefined,\n\t\tfull_code: data['full_code'],\n\t\tabbreviated_description: data['abbreviated_description'],\n\t\tfull_description: data['full_description'],\n\t\tcategory_title: data['category_title'],\n\t\tmain_category: data['main_category'],\n\t\tgender_limited: gender_limited,\n        gender: gender,\n\t\teffectivity_date: data['effectivity_date'],\n\t\texpiry_date: data['expiry_date'],\n\t\tstatus: status,\n\t\tdate_updated: data['date_updated'],\n\t}\n\n\treturn payload\n}\n\nexport const constructCpt = (data: Cpt) => {\n\n\tlet status = 'Awaiting Activation';\n\tconst today = new Date()\n\tconst eff_date = data['effectivity_date'] ?\n\t\tnew Date(new Date(data['effectivity_date']).setHours(0, 0, 0, 0)) :\n\t\tundefined\n\tconst exp_date = data['expiry_date'] ?\n\t\tnew Date(new Date(data['expiry_date']).setHours(0, 0, 0, 0)) :\n\t\tundefined\n\n\tconsole.log('DATES : ', today, eff_date, exp_date);\n\tif (exp_date && eff_date)\n\t\tconsole.log('BOOLS', eff_date <= today, exp_date <= today);\n\n\tif (eff_date && moment(eff_date).isValid() && eff_date <= today)\n\t\tstatus = 'Active';\n\n\tif (exp_date && moment(exp_date).isValid() && exp_date <= today)\n\t\tstatus = 'Deactivated';\n\n\n\tconst gender_limited = data['gender'] ? true : undefined;\n\tconst gender = data['gender'] ? data['gender'] : undefined;\n\t\n\tconst payload : Cpt = {\n        _id: data['_id'],\n        code: data['code'],\n        description: data['description'],\n        category: data['category'],\n        gender_limited: gender_limited,\n        gender: gender,\n        effectivity_date: data['effectivity_date'],\n        expiry_date: data['expiry_date'],\n        status: status,\n        date_updated: data['date_updated'],\n      }\n\n\treturn payload\n}\n\nexport const reconstructIcd10 = (data : Icd10 | undefined) => {\n\tif(!data) \n\t\treturn constructEmptyIcd10();\n\tconst reform_data : Icd10 = {\n\t\t_id: data._id,\n\t\tcategory_code: data['category_code'],\n\t\tdiagnosis_code: data['diagnosis_code'] ? data['diagnosis_code'].toString() : undefined,\n\t\tfull_code: data.full_code,\n\t\tabbreviated_description: data.abbreviated_description,\n\t\tfull_description: data.full_description,\n\t\tcategory_title: data.category_title,\n\t\tmain_category: data.main_category,\n        effectivity_date: data.effectivity_date,\n        expiry_date: data.expiry_date,\n        status: data.status,\n        gender_limited: Boolean(data.gender_limited),\n\t\tgender: data.gender_limited ? data.gender : '',\n\t\tdate_updated: data['date_updated'],\n\t  }\n\treturn reform_data\n}\n\nexport const reconstructCpt = (data : Cpt | undefined) => {\n\tif(!data) \n\t\treturn constructEmptyCpt();\n\tconst reform_data : Cpt = {\n        _id: data._id,\n        code: data.code,\n        description: data.description,\n        category: data.category,\n        effectivity_date: data.effectivity_date,\n        expiry_date: data.expiry_date,\n        status: data.status,\n        gender_limited: Boolean(data.gender_limited),\n        gender: data.gender_limited ? data.gender : '',\n\t  }\n\treturn reform_data\n}\n\nexport const constructEmptyIcd10 = () => {\n\tconst payload: Icd10 = {\n\t\tfull_code: '',\n\t\tfull_description: '',\n\t\tcategory_title: '',\n\t\tmain_category: '',\n\t\teffectivity_date: '',\n\t\texpiry_date: '',\n\t\tstatus: '',\n\t\tgender_limited: false,\n\t\tgender: '',\n\t}\n\treturn payload\n}\n\nexport const constructEmptyCpt = () => {\n\tconst payload: Cpt = {\n\t\tcode: '',\n\t\tdescription: '',\n\t\tcategory: '',\n\t\teffectivity_date: '',\n\t\texpiry_date: '',\n\t\tstatus: '',\n\t\tgender_limited: false,\n\t\tgender: '',\n\t}\n\treturn payload\n}\n\nexport const constructPutIcd10 = (data: Icd10) => {\n\tconst payload: Icd10 = Object.assign({}, data)\n\n\tpayload['gender'] = payload['gender_limited'] ? payload['gender'] : '';\n\n\tif (payload['status'] !== undefined) {\n\t\tdelete payload['status']\n\t}\n\tif (payload['expiry_date'] === '') {\n\t\tdelete payload['expiry_date']\n\t}\n\treturn payload\n}\n\nexport const constructPutCpt = (data: Cpt) => {\n\tconst payload: Cpt = Object.assign({}, data)\n\n\tpayload['gender'] = payload['gender_limited'] ? payload['gender'] : '';\n\n\tif (payload['status'] !== undefined) {\n\t\tdelete payload['status']\n\t}\n\tif (payload['expiry_date'] === '') {\n\t\tdelete payload['expiry_date']\n\t}\n\treturn payload\n}\n\nexport const constructPostIcd10 = (data: any) => {\n\tlet data_arr: Icd10[] = [];\n\tif (Array.isArray(data)) {\n\t\tdata_arr = data\n\t} else {\n\t\tdata_arr.push(data)\n\t}\n\tconst payload: Icd10[] = data_arr.map(item => {\n\t\tif (item['expiry_date'] === '') {\n\t\t\tdelete item['expiry_date'];\n\t\t}\n\t\tif (item['status'] !== undefined) {\n\t\t\tdelete item['status']\n\t\t}\n\t\titem['gender'] = item['gender_limited'] ? item['gender'] : '';\n\t\treturn item;\n\t})\n\treturn payload\n}\n\nexport const constructPostCpt = (data: any) => {\n\tlet data_arr: Cpt[] = [];\n\tif (Array.isArray(data)) {\n\t\tdata_arr = data\n\t} else {\n\t\tdata_arr.push(data)\n\t}\n\tconst payload: Cpt[] = data_arr.map(item => {\n\t\tif (item['expiry_date'] === '') {\n\t\t\tdelete item['expiry_date'];\n\t\t}\n\t\tif (item['status'] !== undefined) {\n\t\t\tdelete item['status']\n\t\t}\n\t\titem['gender'] = item['gender_limited'] ? item['gender'] : '';\n\t\treturn item;\n\t})\n\treturn payload\n}","import React from 'react';\nimport { TableComponent } from 'Components/UI/TableComponent/CodeListTable';\nimport {\n  TextField,\n  InputAdornment,\n  Grid,\n  List,\n  ListItemText,\n} from '@material-ui/core';\nimport { Search } from '@material-ui/icons/';\nimport { Loader } from '../Loader';\nimport Link from '@material-ui/core/Link';\nimport { GridHorizontalDivider } from 'Components/UI';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { SideModalBlock } from 'Components/UI';\nimport { SideModalBody } from 'Components/UI';\nimport { SIDE_MODAL_BLOCK_FIELDS } from 'Components/UI/SideModalBlock/FieldConstants';\nimport { MsgModal } from 'Components/UI';\nimport moment from 'moment';\nimport {\n  getICD,\n  searchICD,\n  addICD10Codes,\n  editICD,\n  // deleteICD,\n} from 'Pages/API/Calls/ICD10'\nimport { ConfirmationModal } from '../ConfirmationModal'\nimport { Utils } from '@hims/core'\nimport { Icd10 } from '../../LookupModels'\nimport {\n  constructIcd10,\n  constructEmptyIcd10,\n  constructPutIcd10,\n  constructPostIcd10,\n  reconstructIcd10\n} from '../ConstructPayloads'\nimport { cloneDeep } from 'lodash'\n\n\nconst helper = new Utils.IndexedDBHelper();\n\ninterface IState {\n  confirm_modal_title: string;\n  confirm_modal_message: string;\n  confirm_modal_open: boolean;\n  action_after_confirm: () => void;\n  invalid_fields: string[];\n  loading_state: boolean;\n  block_title?: string;\n  show_side_modal_block?: string;\n  side_modal_block_mode: 'view' | 'edit' | 'add' | '';\n  code_info?: Icd10;\n  code_response: any;\n  code_data_all: any;\n  code_data: any;\n  global_filter: string;\n  default_filters: any;\n  default_sorting: any;\n  default_clicked: string;\n  isModalOpen: boolean;\n  modalTitle: string;\n  modalMessage: string;\n  action_after_info: () => void;\n  totalCount: number;\n  typing: boolean;\n  typingTimeout: any;\n  page: number;\n  limit: number;\n  isPageSizeModal: boolean;\n  highlightedCodeFromList: number;\n  // init_expiry_date: Date | null;\n  icd_categories: string[];\n  no_data_message: string;\n  icd_category_dropdown_choices: any[];\n  disableSaveButton: boolean;\n  clickSaveButton: boolean;\n}\n\ninterface IProps {\n  classes: any;\n\n  // icd10Response: any;\n  // icd10CodeData: any;\n  icdCategories: string[];\n  icdCategoryDropdown: any;\n  // icd10ListClicked: number;\n\n  // setICD10Response: (data: any) => void;\n  // setICD10CodeData: (data: any) => void;\n  setICDCategories: (categories: string[]) => void;\n  setICDCategoryDropdown: (dropdown: any) => void;\n  // setICD10ListClicked: (index: number) => void;\n}\n\nexport class ICD10Section extends React.Component<IProps, IState> {\n  private requiredFields: any;\n  private excludeFields: any;\n\n  constructor(props) {\n    super(props);\n\n    this.requiredFields = SIDE_MODAL_BLOCK_FIELDS.ICD10.editOrAdd.checkInvalidFields;\n    this.excludeFields = SIDE_MODAL_BLOCK_FIELDS.ICD10.editOrAdd.excludeFields\n\n     // if (props.icd10CodeData) {\n    //   table = props.icd10CodeData\n    // }\n    const table: any = {\n      formattedColumns: {},\n      columnExtensions: [\n        {\n          columnName: 'full_code',\n          width: 150,\n          wordWrapEnabled: true,\n        },\n        {\n          columnName: 'full_description',\n          width: 500,\n          wordWrapEnabled: true,\n        },\n      ],\n      columns: [\n        {\n          name: 'full_code',\n          title: 'ICD10 Code',\n        },\n        {\n          name: 'full_description',\n          title: 'Description',\n        },\n      ],\n      rows: [],\n    };\n\n   \n    this.state = {\n      icd_category_dropdown_choices: props.icdCategoryDropdown,\n      icd_categories: props.icdCategories,\n      no_data_message: '',\n      // init_expiry_date: null,\n      confirm_modal_title: '',\n      confirm_modal_message: '',\n      confirm_modal_open: false,\n      action_after_confirm: () => { },\n      invalid_fields: [],\n      highlightedCodeFromList: -1,//props.icd10ListClicked,\n      loading_state: true,\n      code_response: [],//props.icd10Response,\n      code_info: constructEmptyIcd10(),\n      show_side_modal_block: 'none',\n      side_modal_block_mode: '',\n      code_data: table,\n      code_data_all: table,\n      block_title: '',\n      global_filter: '',\n      default_filters: [],\n      default_sorting: [{\n          columnName: 'full_code',\n          direction: 'asc'\n        }\n      ],\n      default_clicked: '',\n      isModalOpen: false,\n      isPageSizeModal: false,\n      modalTitle: '',\n      modalMessage: '',\n      action_after_info: () => { },\n      totalCount: 0,\n      typing: false,\n      typingTimeout: 0,\n      page: 0,\n      limit: 10,\n      disableSaveButton: false,\n      clickSaveButton: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.icd_category_dropdown_choices || !this.state.icd_categories.length) {\n      this.fetchICDCategoriesIndexdb()\n        .then(() => this.initialData())\n        .catch(() => this.initialData())\n    } else {\n      this.initialData()\n    }\n\n    document.addEventListener('keydown', this.escFunction, false);\n  }\n\n  escFunction = (event) => {\n    if (event.keyCode === 27) {\n      this.handleCloseSideModalBlock()\n    }\n  }\n\n  initialData = () => {\n    this.setState({ no_data_message: `Searching for ICD10 codes` })\n    this.searchCode(\n      10,\n      0,\n      this.state.default_filters,\n      this.state.global_filter,\n      this.state.default_sorting,\n      this.state.default_clicked)\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /***********************  \n       CRUD FUNCTIONS \n  ***********************/\n\n  addCodeIndexdb = (data: any[]) => {\n    helper.openDb('himsDb').then(res => {\n      let db = res.result\n      try {\n        helper.saveToStore(db, 'icd10_list', data)\n          .then(res => console.log('RES', res))\n          .catch(e => console.log(e))\n      } catch (e) {\n        console.log(e)\n      } finally { }\n    })\n  }\n\n  patchCodeIndexdb = (data: any) => {\n    helper.openDb('himsDb').then(res => {\n      let db = res.result\n      try {\n        helper.updateEntryByKey(db, 'icd10_list', data['_id'], data)\n          .then(res => console.log('Successfully patched code in IndexDB', res))\n          .catch(e => console.log(e))\n      } catch (e) {\n        console.log(e)\n      } finally { }\n    })\n  }\n\n\n  fetchICDCategoriesIndexdb = async () => {\n    await Utils.StorageService('icd10_list')\n      .then(icds => {\n        if (Array.isArray(icds) && icds.length > 0) {\n          let category_arr: string[] = []\n          let category_dropdown_choices_arr: any[] = [{ name: '', value: '' }]\n          icds.filter(item => {\n            if (item && item.main_category && !category_arr.includes(item.main_category)) {\n              category_arr.push(item.main_category)\n              category_dropdown_choices_arr.push({ name: item.main_category, value: item.main_category })\n              return true;\n            }\n            return false;\n          })\n          this.props.setICDCategories(category_arr)\n          this.props.setICDCategoryDropdown(category_dropdown_choices_arr)\n          this.setState({\n            icd_categories: category_arr,\n            icd_category_dropdown_choices: category_dropdown_choices_arr\n          })\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  searchCode = (\n    limit: number,\n    skip: number,\n    filters: any,\n    filters_global: any,\n    sorting: any,\n    clicked: any) => {\n\n    searchICD(limit, skip, filters, filters_global, sorting, clicked).then(response => {\n      this.setState({ no_data_message: 'No available data' })\n      if (response && response.error === undefined) {\n        const table = this.generateDataForTable(\n          response.result ? response.result : [],\n        );\n        // this.props.setICD10CodeData(table)\n        // this.props.setICD10Response(response)\n        this.setState({\n          code_response: response,\n          code_data_all: table,\n          code_data: table,\n          loading_state: false,\n          totalCount: response.total && response.total.count ? response.total.count : 0,\n        });\n      } else if (response && response.error && response.error.statusCode === 401) {\n        const table = this.generateDataForTable([]);\n        // this.props.setICD10CodeData(table)\n        // this.props.setICD10Response(undefined)\n        this.setState({\n          code_response: [],\n          code_data_all: table,\n          loading_state: false,\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to view ICD10 codes.',\n        });\n      } else {\n        const table = this.generateDataForTable([]);\n        // this.props.setICD10CodeData(table)\n        // this.props.setICD10Response(undefined)\n        this.setState({\n          code_response: [],\n          code_data_all: table,\n          loading_state: false,\n          isModalOpen: true,\n          modalTitle: 'Loading failed',\n          modalMessage: 'An error occured while loading the list of codes.',\n        });\n      }\n    }).catch(() => {\n      const table = this.generateDataForTable([]);\n      // this.props.setICD10CodeData(table)\n      // this.props.setICD10Response(undefined)\n      this.setState({\n        code_response: [],\n        code_data_all: table,\n        loading_state: false,\n        isModalOpen: true,\n        modalTitle: 'Loading failed',\n        modalMessage: 'An error occured while loading the list of codes.',\n        page: 0,\n      });\n    });\n  }\n\n\n  patchCode = (data: any) => {\n    const payload: Icd10 = constructPutIcd10(data)\n\n    this.setState({\n      loading_state: true,\n      no_data_message: `Searching for ICD10 codes`\n    })\n    editICD(JSON.stringify(payload), payload._id).then(response => {\n      this.setState({\n        loading_state: false,\n        no_data_message: 'No available data'\n      })\n      if (response && response.error === undefined && response.message !== undefined) {\n        this.changePageUpdate(this.state.limit, this.state.limit * this.state.page)\n        this.patchCodeIndexdb(payload)\n        this.setState({\n          disableSaveButton: true,\n          isModalOpen: true,\n          modalTitle: 'Success',\n          modalMessage: `You have ${response.message} code!`\n        });\n      } else if (response && response.error && response.error.statusCode === 401) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to edit ICD10 codes.'\n        });\n      } else if (response && response.error && response.error.statusCode === 400 && response.error.message) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Duplicate Codes',\n          modalMessage: response.error.message\n        });\n      } else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while saving!'\n        });\n      }\n    }).catch(error => {\n      if (error == 'Error: Bad Request') {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Duplicate Codes',\n          modalMessage: 'This code already exists.',\n          loading_state: false\n        });\n      } else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while saving!',\n          loading_state: false\n        });\n      }\n    });\n  }\n\n\n\n  addCodes = (data: any) => {\n    this.setState({\n      loading_state: true\n    })\n\n    const payload: Icd10[] = constructPostIcd10(data)\n    addICD10Codes(JSON.stringify(payload)).then(response => {\n      this.setState({\n        loading_state: false\n      })\n      if (response && response.error === undefined && response.message && response.result) {\n        this.changePageUpdate(this.state.limit, this.state.limit * this.state.page)\n        this.addCodeIndexdb(response.result)\n        this.setState({\n          disableSaveButton: true,\n          isModalOpen: true,\n          modalTitle: 'Success',\n          modalMessage: `You have successfully added ${response.result.length} ICD10 code/s!`\n        });\n      } else if (response && response.error && response.error.statusCode === 401) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to add ICD10 codes.'\n        });\n      } else if (response && response.error && response.error.statusCode === 400 && response.error.message) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Duplicate Codes',\n          modalMessage: response.error.message\n        });\n      }\n      else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while adding!'\n        });\n      }\n    }).catch(error => {\n      if (error == 'Error: Bad Request') {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Duplicate Codes',\n          modalMessage: 'This code already exists.',\n          loading_state: false\n        });\n      } else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while saving!',\n          loading_state: false\n        });\n      }\n    });\n\n  }\n\n  // deleteICD = (id: string) => {\n  //   if (!id) {\n  //     return\n  //   }\n  //   this.setState({ loading_state: true })\n  //   deleteICD(id).then(response => {\n  //     this.setState({\n  //       loading_state: false\n  //     })\n  //     this.changePageUpdate(this.state.limit, this.state.limit * this.state.page)\n  //     if (response && response.error && response.error.statusCode && response.error.statusCode !== 401) {\n  //       this.setState({\n  //         isModalOpen: true,\n  //         modalTitle: 'Failed',\n  //         modalMessage: 'Something went wrong while deleting ICD10 Code!'\n  //       });\n  //     } else if (response && response.error && response.error.statusCode === 401) {\n  //       this.setState({\n  //         isModalOpen: true,\n  //         modalTitle: 'Unauthorized',\n  //         modalMessage: 'You are not authorized to delete ICD10 codes.'\n  //       });\n  //     }\n  //     else {\n  //       this.setState({\n  //         isModalOpen: true,\n  //         modalTitle: 'Success',\n  //         modalMessage: 'You have successfully deleted an ICD10 code!'\n  //       });\n  //     }\n  //   }).catch(error => {\n  //     this.setState({\n  //       isModalOpen: true,\n  //       modalTitle: 'Failed',\n  //       modalMessage: 'Something went wrong while deleting ICD10 Code!'\n  //     });\n  //     this.setState({\n  //       loading_state: false\n  //     })\n  //     console.log('client error: ', error);\n  //   });\n  // }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /***********************  \n  TABLE AND PAGE FUNCTIONS \n  ***********************/\n\n  generateDataForTable(response: any) {\n    const table: any = {\n      formattedColumns: {},\n      columnExtensions: [\n        {\n          columnName: 'full_code',\n          width: 150,\n          wordWrapEnabled: true,\n        },\n        {\n          columnName: 'full_description',\n          width: 500,\n          wordWrapEnabled: true,\n        },\n      ],\n      columns: [\n        {\n          name: 'full_code',\n          title: 'ICD10 Code',\n        },\n        {\n          name: 'full_description',\n          title: 'Description',\n        },\n      ],\n      rows: [],\n    };\n    for (const cnt in response) {\n      const item = response[cnt];\n      const temp_row: any = {};\n      temp_row['full_code'] = item['full_code'];\n      temp_row['full_description'] = item['full_description'];\n      table['rows'].push(temp_row);\n    }\n    return table;\n  }\n\n\n\n\n\n\n\n  changePageUpdate = (limit: number, skip: number) => {\n    this.handleCloseSideModalBlock();\n    this.setState({\n      loading_state: true,\n      no_data_message: `Searching for ICD10 codes`\n    });\n    if (\n      this.state.default_filters.length !== 0 ||\n      this.state.global_filter !== '' ||\n      this.state.default_sorting.length !== 0 ||\n      this.state.default_clicked !== ''\n    ) {\n      this.searchCode(\n        limit,\n        skip,\n        this.state.default_filters,\n        this.state.global_filter,\n        this.state.default_sorting,\n        this.state.default_clicked)\n    } else {\n      getICD(limit, skip).then(response => {\n        this.setState({ no_data_message: 'No available data' })\n        if (response && response.error === undefined) {\n          const table = this.generateDataForTable(\n            response.result ? response.result : [],\n          );\n          // this.props.setICD10CodeData(table)\n          // this.props.setICD10Response(response)\n          this.setState({\n            code_response: response,\n            code_data_all: table,\n            code_data: table,\n            loading_state: false,\n            totalCount: response.total && response.total.count ? response.total.count : 0,\n          });\n        } else if (response && response.error && response.error.statusCode === 401) {\n          const table = this.generateDataForTable([]);\n          // this.props.setICD10CodeData(table)\n          // this.props.setICD10Response(undefined)\n          this.setState({\n            code_response: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Unauthorized',\n            modalMessage: 'You are not authorized to view ICD10 codes.',\n          });\n        } else {\n          const table = this.generateDataForTable([]);\n          // this.props.setICD10CodeData(table)\n          // this.props.setICD10Response(undefined)\n          this.setState({\n            code_response: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Loading failed',\n            modalMessage: 'An error occured while loading the list of codes.',\n          });\n        }\n      });\n    }\n  };\n\n\n\n\n\n\n  handleChangeSorting = (sorting: any) => {\n    this.setState({\n      loading_state: true,\n      no_data_message: `Searching for ICD10 codes`\n    });\n    if (sorting && sorting.length > 0) {\n      this.searchCode(\n        this.state.limit,\n        this.state.page * this.state.limit,\n        this.state.default_filters,\n        this.state.global_filter,\n        sorting,\n        this.state.default_clicked,\n      )\n    }\n  };\n\n\n\n\n\n  handleFilterByColumn = (filter: any) => {\n    const self = this;\n\n    if (self.state.typingTimeout) {\n      clearTimeout(self.state.typingTimeout);\n    }\n\n    self.setState({\n      default_filters: filter,\n      typing: false,\n      page: 0,\n      typingTimeout: setTimeout(function () {\n        self.setState({\n          loading_state: true,\n          no_data_message: `Searching for ICD10 codes`\n        });\n        if (self.state.default_filters !== 0) {\n          self.searchCode(\n            self.state.limit,\n            0,\n            filter,\n            self.state.global_filter,\n            self.state.default_sorting,\n            self.state.default_clicked,\n          )\n        } else {\n          self.initialData();\n        }\n      }, 2000),\n    });\n  };\n\n  handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    const self = this;\n\n    if (self.state.typingTimeout) {\n      clearTimeout(self.state.typingTimeout);\n    }\n    self.setState({\n      global_filter: value,\n      typing: false,\n      page: 0,\n      typingTimeout: setTimeout(function () {\n        self.setState({\n          loading_state: true,\n          limit: 10,\n          no_data_message: `Searching for ICD10 codes`\n        });\n        if (self.state.global_filter !== '') {\n          self.searchCode(\n            self.state.limit,\n            0,\n            self.state.default_filters,\n            self.state.global_filter,\n            self.state.default_sorting,\n            self.state.default_clicked,\n          )\n        } else {\n          self.initialData();\n        }\n      }, 2000),\n    });\n  };\n\n\n\n\n\n  handleClickRow = (row: any) => {\n\n    const { code_response } = this.state;\n    if (!this.state.code_response || !this.state.code_response.result)\n      return;\n\n    const data: Icd10 = constructIcd10(code_response.result[row])\n    this.checkFields(data, true)\n    this.setState({\n      code_info: data,\n    }, () => this.handleChangeSideModalBlockMode('view'));\n  };\n\n\n\n\n\n  handlePageChange = (currentPage: number, skip: number) => {\n    this.setState({\n      page: currentPage,\n    });\n    this.changePageUpdate(this.state.limit, skip);\n  };\n\n\n\n\n  handlePageSizeChange = value => {\n    let pageLimit = 100000;\n\n    if (this.state.totalCount >= pageLimit) {\n      this.setState({\n        isPageSizeModal: true,\n      });\n    } else {\n      this.setState({\n        limit: value,\n      });\n\n      this.changePageUpdate(value, value * this.state.page);\n    }\n  };\n\n\n\n\n\n  handleClickItemFromList = (key: string) => {\n    this.handleCloseSideModalBlock()\n    this.setState({\n      page: 0,\n      loading_state: true,\n      no_data_message: `Searching for ICD10 codes`\n    });\n    if (key !== undefined) {\n      this.searchCode(\n        this.state.limit,\n        0,\n        this.state.default_filters,\n        this.state.global_filter,\n        this.state.default_sorting,\n        key,\n      )\n    }\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /*****************************  \n  ACTIONS / SIDE MODAL FUNCTIONS \n  ******************************/\n\n  handleCloseSideModalBlock = () => {\n    this.setState({\n      show_side_modal_block: 'none',\n      side_modal_block_mode: '',\n      code_info: constructEmptyIcd10(),\n    });\n  };\n\n\n\n\n\n  handleChangeSideModalBlockMode = (value: 'view' | 'edit' | 'add' | '') => {\n    let title = ``;\n    if (value && value === 'edit') {\n      title = `Edit ${this.state.block_title}`;\n      const reform_data: Icd10 = reconstructIcd10(cloneDeep(this.state.code_info))\n      this.setState({ code_info: reform_data })\n    } else if (value && value === 'view' && this.state.code_info) {\n      title = this.state.code_info['full_code'] ? this.state.code_info['full_code'] : '';\n    } else if (value && value === 'add') {\n      title = `Add ICD10 Code`;\n    }\n    this.setState({\n      side_modal_block_mode: value,\n      block_title: title,\n    }, () => this.handleOpenBlock());\n  };\n\n\n\n\n\n  handleOpenBlock = () => {\n    this.setState({\n      show_side_modal_block: 'block',\n    }, () => this.passDataToSideModalBlockBody());\n  };\n\n\n\n\n  handleInvalidFieldsPrompt = () => {\n    this.setState({\n      isModalOpen: true,\n      modalTitle: 'Incomplete/Invalid Fields',\n      modalMessage: 'Please complete the form before proceeding.',\n    })\n  }\n\n\n\n  passDataToSideModalBlockBody = () => {\n\n    if (this.state.code_info && !this.state.code_info.gender_limited) {\n      this.state.code_info.gender = ''\n      this.setState({\n        code_info: this.state.code_info\n      });\n    }\n  };\n\n\n\n\n  checkFields = (formFields?: any, disableButton?: boolean) => {\n    this.setState({ loading_state: true })\n\n    if (formFields) {\n      let invalid_fields = this.getInvalidFields(formFields, disableButton);\n      if (!invalid_fields || invalid_fields.length === 0) {\n        if (this.state.disableSaveButton || !this.state.clickSaveButton) {\n          return\n        }\n        if (this.state.side_modal_block_mode === 'edit') {\n          this.setState({\n            clickSaveButton: false,\n            confirm_modal_message: `Are you sure you want to edit this ICD10 code?`,\n            confirm_modal_open: true,\n            confirm_modal_title: `Confirm edit ICD10 code`,\n            action_after_confirm: () => this.patchCode(formFields)\n          })\n        } else if (this.state.side_modal_block_mode === 'add') {\n          this.setState({\n            clickSaveButton: false,\n            confirm_modal_message: `Are you sure you want to add this ICD10 code?`,\n            confirm_modal_open: true,\n            confirm_modal_title: `Confirm add ICD10 code`,\n            action_after_confirm: () => this.addCodes(formFields)\n          })\n        }\n      } else {\n        this.handleInvalidFieldsPrompt()\n      }\n    }\n  }\n\n\n\n\n\n  getInvalidFields = (formFields: any, disableButton?: boolean) => {\n    let invalid_fields_submit: any[] = [];\n    let invalid_fields_editing: any[] = [];\n    let exclude_fields = {}\n    if (this.excludeFields !== undefined) {\n      exclude_fields = this.excludeFields\n    }\n    const fields_excluded: string[] = Object.keys(exclude_fields)\n    const form_keys: string[] = Object.keys(formFields)\n\n    form_keys.forEach(field => {\n      if (this.requiredFields &&\n        this.requiredFields.includes(field) &&\n        !fields_excluded.includes(field) &&\n        !formFields[field]) {\n        if (!disableButton) {\n          invalid_fields_submit.push(field)\n        } else {\n          invalid_fields_editing.push(field)\n        }\n      }\n    })\n\n    const eff_date = moment(formFields['effectivity_date'])\n    const exp_date = moment(formFields['expiry_date'])\n    if (formFields &&\n      formFields['effectivity_date'] &&\n      formFields['expiry_date'] &&\n      eff_date.isValid() &&\n      exp_date.isValid() &&\n      eff_date.startOf('day').diff(exp_date.startOf('day')) > 0) {\n      if (disableButton) {\n        invalid_fields_editing.push('effectivity_date')\n      } else {\n        invalid_fields_submit.push('effectivity_date')\n      }\n    }\n\n    if (formFields && formFields['gender_limited'] && !formFields['gender']) {\n      if (!disableButton) {\n        invalid_fields_submit.push('gender')\n      } else {\n        invalid_fields_editing.push('gender')\n      }\n    }\n    if (!invalid_fields_editing || invalid_fields_editing.length === 0) {\n      this.setState({ disableSaveButton: false })\n    } else if (!this.state.disableSaveButton) {\n      this.setState({ disableSaveButton: true })\n    }\n    this.setState({ loading_state: false, invalid_fields: invalid_fields_submit })\n    return invalid_fields_submit\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /***********************  \n       RENDER SECTIONS \n  ***********************/\n\n  renderSideModalBlock(): JSX.Element {\n    const { classes } = this.props;\n\n    return (\n      <SideModalBlock\n        blockPosition={'fixed'}\n        title={this.state.block_title}\n        editIconDescription={'Edit Code'}\n        showBlock={this.state.show_side_modal_block}\n        classes={classes}\n        handleClose={this.handleCloseSideModalBlock}\n        sideModalBlockMode={this.state.side_modal_block_mode}\n        changeMode={this.handleChangeSideModalBlockMode}\n\n      >\n        {this.state.side_modal_block_mode ? (\n          <SideModalBody\n            formFields={this.state.code_info}\n            invalidFields={this.state.invalid_fields}\n            classes={this.props.classes}\n            handleClose={this.handleCloseSideModalBlock}\n            refreshData={(data: any) => {\n              this.setState({ code_info: data },\n                () => this.checkFields(data, true))\n            }}\n            // delete={(data: any) => {\n            //   if (this.state.side_modal_block_mode === 'edit') {\n            //     this.setState({\n            //       confirm_modal_message: 'Are you sure you want to delete this ICD10 code?',\n            //       confirm_modal_open: true,\n            //       confirm_modal_title: 'Confirm delete ICD10 code',\n            //       action_after_confirm: () => this.deleteICD(data['_id'])\n            //     })\n            //   }\n            // }}\n            handleSave={(formFields?: any) => {\n              if (this.state.side_modal_block_mode) {\n                this.setState({ clickSaveButton: true }, () => this.checkFields(formFields))\n              }\n            }}\n            // deactivateIcon={'Deactivate'}\n            formName={'ICD10'}\n            mode={this.state.side_modal_block_mode ? this.state.side_modal_block_mode : ''}\n            checkBoxWithDropDownFieldsInitState={this.state.code_info && this.state.code_info['gender_limited'] ? true : false}\n            dynamicDropdownChoices={this.state.icd_category_dropdown_choices}\n            disableSaveButton={this.state.disableSaveButton}\n            datePairField1MaxDate={\n              this.state.code_info &&\n                this.state.code_info['expiry_date'] &&\n                moment(this.state.code_info['expiry_date']).isValid() ?\n                moment(this.state.code_info['expiry_date']).format('MM-DD-YY').toString() : undefined\n            }\n            datePairField2MinDate={\n              this.state.code_info &&\n                this.state.code_info['effectivity_date'] &&\n                moment(this.state.code_info['effectivity_date']).isValid() ?\n                moment(this.state.code_info['effectivity_date']).format('MM-DD-YY').toString() : undefined\n            }\n          />\n        ) : null}\n      </SideModalBlock>\n    )\n  }\n\n\n\n\n\n\n\n  renderCodeInfo(): JSX.Element {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <li key={'year-of-release'} className={classes.codeHeader}>YEAR OF RELEASE</li>\n        <li key={'year-of-release-value'} className={classes.codeHeaderValue}>2020</li>\n        <ListItemText key={'effectivity-date'}>\n          <div className={classes.codeHeader}>EFFECTIVITY DATE</div>\n          <div className={classes.codeHeaderValue}>Jan 1, 2020</div>\n        </ListItemText>\n      </React.Fragment>\n    )\n  }\n\n\n\n\n\n  renderCodeList(key: string): JSX.Element {\n    const { classes } = this.props;\n\n    return (\n      <ListItemText\n        key={key}\n        classes={{\n          root: classes.codeListItemsRoot,\n          primary:\n            this.state.highlightedCodeFromList ===\n              this.state.icd_categories.indexOf(key)\n              ? classes.codeListItemsSelected\n              : classes.codeListItems,\n        }}\n        onClick={() => {\n          if (this.state.icd_categories.indexOf(key) !== this.state.highlightedCodeFromList) {\n            // this.props.setICD10ListClicked(this.state.icd_categories.indexOf(key))\n            this.setState({\n              highlightedCodeFromList: this.state.icd_categories.indexOf(key),\n            });\n            this.handleClickItemFromList(key);\n          } else {\n            // this.props.setICD10ListClicked(-1)\n            this.setState({\n              highlightedCodeFromList: -1,\n            });\n            this.handleClickItemFromList('');\n          }\n        }}\n      >\n        <br />\n        {/* {this.state.icd_categories.indexOf(key) + 1}  */}\n        {key}\n      </ListItemText>\n    )\n\n  }\n\n\n\n\n  render(): JSX.Element {\n    const { classes } = this.props;\n    const categories = this.state.icd_categories\n\n    return (\n      <div>\n        {this.state.loading_state ? <Loader /> : null}\n        <Grid container>\n          <Grid container item xs={12} md={3}>\n            <Grid container className={classes.scrollList} style={{ maxHeight: 715, overflow: 'auto' }}>\n              <List>\n                {this.renderCodeInfo()}\n                {categories ? categories.map(key => this.renderCodeList(key)) : null}\n              </List>\n            </Grid>\n          </Grid>\n\n\n\n\n\n\n\n\n          <Grid container item xs={12} md={9} className={classes.selectedpage}>\n            <Grid container>\n              <Grid item xs={12} md={9}>\n                <TextField\n                  style={{ width: '100%' }}\n                  id=\"code_search\"\n                  placeholder=\"Search a code or description\"\n                  label=\"\"\n                  margin=\"none\"\n                  fullWidth\n                  className={classes.searchField}\n                  variant=\"outlined\"\n                  value={this.state.global_filter}\n                  inputProps={{ 'aria-label': 'bare' }}\n                  onChange={this.handleSearch}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Search style={{ color: 'rgba(54, 54, 54, 0.4)' }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n\n\n\n\n\n              <Grid item xs={8} md={3} className={classes.searchBar}>\n                <FontAwesomeIcon icon={faPlus} className={classes.addFieldIcon} />\n                <Link\n                  className={classes.addACode}\n                  onClick={() => {\n                    this.setState(\n                      {\n                        block_title: `Add ICD10 Code`,\n                        code_info: constructEmptyIcd10(),\n                        disableSaveButton: true\n                      }, () => this.handleChangeSideModalBlockMode('add'));\n                  }}>\n                  Add a Code\n                  </Link>\n              </Grid>\n\n\n\n\n\n              <GridHorizontalDivider height=\"30px\" />\n              <Grid style={{ minHeight: 690, overflow: 'auto' }}>\n                <TableComponent\n                  id=\"tab-all\"\n                  totalCount={this.state.totalCount}\n                  update={this.changePageUpdate}\n                  updateSorting={this.handleChangeSorting}\n                  rows={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['rows']\n                      : []\n                  }\n                  columns={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['columns']\n                      : []\n                  }\n                  message={\n                    this.state.global_filter\n                      ? 'No available data'\n                      : this.state.no_data_message\n                  }\n                  onClickRow={this.handleClickRow}\n                  disableSelect\n                  disableSearch\n                  formattedColumns={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['formattedColumns']\n                      : {}\n                  }\n                  columnExtensions={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['columnExtensions']\n                      : []\n                  }\n                  onFilterChange={this.handleFilterByColumn}\n                  onSortingChange={this.handleChangeSorting}\n                  onPageChange={this.handlePageChange}\n                  ongPageSizeChange={this.handlePageSizeChange}\n                  defaultFilter={this.state.default_filters}\n                  currentPage={this.state.page}\n                  limit={this.state.limit}\n                  pageSizes={[10, 25, 50, 100]}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n\n\n        {this.renderSideModalBlock()}\n\n        <MsgModal\n          onClose={() => {\n            this.setState({\n              isModalOpen: false,\n            })\n          }}\n          title={this.state.modalTitle}\n          isModalOpen={this.state.isModalOpen}\n          message={this.state.modalMessage}\n        />\n        <ConfirmationModal\n          onClose={() => this.setState({ confirm_modal_open: false })}\n          title={this.state.confirm_modal_title}\n          isModalOpen={this.state.confirm_modal_open}\n          submitType={'confirm'}\n          onSubmit={() => {\n            if (this.state.action_after_confirm) {\n              this.state.action_after_confirm()\n            }\n          }}\n          message={this.state.confirm_modal_message} />\n      </div>\n    );\n  }\n}\n","import Fetch, { requestOption } from '../index'\n\nconst fetch = new Fetch();\nfetch.getAccessToken();\n\nexport const getCPT = (limit: number, skip: number) => {\n\n    let filters = {\n        limit: limit,\n        skip: skip,\n      };\n    let option: requestOption = {\n        method: 'GET'\n    }\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `cpts/search?filter=${JSON.stringify(filters)}`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `cpts/search?filter=${JSON.stringify(filters)}`, true))\n}\n\nexport const searchCPT = (limit: number, offset: number, filters: any, query: string, sorting?: any, key?: string,) => {\n\n    let filter_key_str = '';\n    if (key !== undefined && key !== '' && key.length > 0) {\n        // console.log('KEY', key)\n        filter_key_str = '&filter[where][category]='+key\n\n    }\n    let sorting_str = '';\n    if (sorting && sorting.length !== 0) {\n      sorting_str =\n        '&filter[order]=' +\n        sorting[0]['columnName'] +\n        ' ' +\n        sorting[0]['direction'];\n    }\n    let filter_str = '';\n    if (filters) {\n      filters.forEach(filter => {\n        filter_str =\n          filter_str + '&' + filter['columnName'] + '=' + filter['value'];\n      });\n    }\n    let search = query ? '&search=' + query : '';\n    let CPT_URL =\n      `cpts/search?filter[limit]=${limit}&filter[skip]=${offset}` +\n      search +\n      filter_str +\n      sorting_str +\n      filter_key_str;\n    if (limit === 0)\n        CPT_URL =\n        `cpts/search?filter[skip]=${offset}` +\n        search +\n        filter_str +\n        sorting_str +\n        filter_key_str;\n\n    let option: requestOption = {\n        method: 'GET'\n    }\n \n    if(fetch.getAccessToken()){\n        return fetch.call(option, CPT_URL, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, CPT_URL, true))\n}\n\nexport const addCPTCodes = (payload: any) => {\n\n    let option: requestOption = {\n        method: 'POST',\n        body: payload\n    }\n\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `cpts/multiple`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `cpts/multiple`, true))\n}\n\nexport const editCPT = (payload: any, id: string | undefined) => {\n\n    let option: requestOption = {\n        method: 'PUT',\n        body: payload\n    }\n\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `cpts/edit/${id}`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `cpts/edit/${id}`, true))\n}\n\nexport const deleteCPT = (id: string) => {\n\n    let option: requestOption = {\n        method: 'DELETE'\n    }\n\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `cpts/${id}`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `cpts/${id}`, true))\n}","import React from 'react';\nimport { TableComponent } from 'Components/UI/TableComponent/CodeListTable';\nimport {\n  TextField,\n  InputAdornment,\n  Grid,\n  List,\n  ListItemText,\n} from '@material-ui/core';\nimport { Search } from '@material-ui/icons/';\nimport { Loader } from '../Loader';\nimport Link from '@material-ui/core/Link';\nimport { GridHorizontalDivider } from 'Components/UI';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { SideModalBlock } from 'Components/UI';\nimport { SideModalBody } from 'Components/UI';\nimport { MsgModal } from 'Components/UI';\nimport { SIDE_MODAL_BLOCK_FIELDS } from 'Components/UI/SideModalBlock/FieldConstants';\nimport moment from 'moment';\n// import NestedList from './NestedList';\n// import { API } from '../../API'\nimport { ConfirmationModal } from '../ConfirmationModal'\nimport {\n  getCPT,\n  searchCPT,\n  addCPTCodes,\n  editCPT,\n  deleteCPT\n} from 'Pages/API/Calls/CPT'\nimport { cloneDeep } from 'lodash'\nimport { Utils } from '@hims/core'\nimport {\n  constructCpt,\n  constructEmptyCpt,\n  constructPutCpt,\n  constructPostCpt,\n  reconstructCpt\n} from '../ConstructPayloads'\nimport { Cpt } from '../../LookupModels';\nconst helper = new Utils.IndexedDBHelper();\n\ninterface IState {\n  confirm_modal_title: string;\n  confirm_modal_message: string;\n  confirm_modal_open: boolean;\n  action_after_confirm: () => void;\n  invalid_fields: string[];\n  loading_state: boolean;\n  block_title?: string;\n  show_side_modal_block?: string;\n  side_modal_block_mode: 'view' | 'edit' | 'add' | '';\n  code_info?: Cpt;\n  code_response: any;\n  code_data_all: any;\n  code_data: any;\n  global_filter: string;\n  default_filters: any;\n  default_sorting: any;\n  default_clicked: string;\n  isModalOpen: boolean;\n  modalTitle: string;\n  modalMessage: string;\n  totalCount: number;\n  typing: boolean;\n  typingTimeout: any;\n  page: number;\n  limit: number;\n  isPageSizeModal: boolean;\n  highlightedCodeFromList: number;\n  // init_expiry_date: Date | null;\n  no_data_message: 'Searching for CPT codes' | 'No available data' | '';\n  cpt_categories: string[];\n  cpt_category_range: string[];\n  disableSaveButton: boolean;\n  clickSaveButton: boolean;\n  category_dropdown_choices: any[];\n}\n\ninterface IProps {\n  classes: any\n\n  // cptResponse: any;\n  // cptCodeData: any;\n  cptCategories: string[];\n  cptCategoryRanges: string[];\n  cptCategoryDropdown: any;\n  // cptListClicked: number;\n\n  // setCPTResponse: (data : any) => void;\n  // setCPTCodeData: (data : any) => void;\n  setCPTCategories: (categories: string[]) => void;\n  setCPTCategoryRanges: (ranges: string[]) => void;\n  setCPTCategoryDropdown: (dropdown: any) => void;\n  // setCPTListClicked: (index: number) => void;\n}\n\n\nexport class CPTSection extends React.Component<IProps, IState> {\n  private requiredFields: any;\n  private excludeFields: any;\n\n  constructor(props) {\n    super(props);\n\n    this.requiredFields = SIDE_MODAL_BLOCK_FIELDS.CPT.editOrAdd.checkInvalidFields;\n    this.excludeFields = SIDE_MODAL_BLOCK_FIELDS.CPT.editOrAdd.excludeFields\n\n    const table: any = {\n      formattedColumns: {},\n      columnExtensions: [\n        {\n          columnName: 'code',\n          width: 150,\n          wordWrapEnabled: true,\n        },\n        {\n          columnName: 'description',\n          width: 500,\n          wordWrapEnabled: true,\n        },\n      ],\n      columns: [\n        {\n          name: 'code',\n          title: 'CPT Code',\n        },\n        {\n          name: 'description',\n          title: 'Description',\n        },\n      ],\n      rows: [],\n    };\n\n    this.state = {\n      category_dropdown_choices: props.cptCategoryDropdown,\n      cpt_categories: props.cptCategories,\n      cpt_category_range: props.cptCategoryRanges,\n      no_data_message: '',\n      // init_expiry_date: null,\n      confirm_modal_title: '',\n      confirm_modal_message: '',\n      confirm_modal_open: false,\n      action_after_confirm: () => { },\n      invalid_fields: [],\n      highlightedCodeFromList: -1,\n      loading_state: true,\n      code_response: [],\n      code_info: constructEmptyCpt(),\n      show_side_modal_block: 'none',\n      side_modal_block_mode: '',\n      code_data: table,\n      code_data_all: table,\n      block_title: '',\n      global_filter: '',\n      default_filters: [],\n      default_sorting: [{\n        columnName: 'code',\n        direction: 'asc'\n      }],\n      default_clicked: '',\n      isModalOpen: false,\n      isPageSizeModal: false,\n      modalTitle: '',\n      modalMessage: '',\n      totalCount: 0,\n      typing: false,\n      typingTimeout: 0,\n      page: 0,\n      limit: 10,\n      disableSaveButton: false,\n      clickSaveButton: false,\n    };\n  }\n\n\n  componentDidMount() {\n    if (!this.state.category_dropdown_choices || !this.state.cpt_categories || !this.state.cpt_category_range) {\n      this.fetchCPTCategories()\n        .then(() => this.initialData())\n        .catch(() => this.initialData())\n    } else {\n      this.initialData()\n    }\n\n    document.addEventListener('keydown', this.escFunction, false);\n\n  }\n\n  escFunction = (event) => {\n    if (event.keyCode === 27) {\n      this.handleCloseSideModalBlock()\n    }\n  }\n\n\n  initialData = () => {\n    this.setState({ no_data_message: 'Searching for CPT codes' })\n    this.searchCode(\n      10,\n      0,\n      this.state.default_filters,\n      this.state.global_filter,\n      this.state.default_sorting,\n      this.state.default_clicked)\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /***********************  \n       CRUD FUNCTIONS \n  ***********************/\n\n  addCPTIndexDB = (data: any[]) => {\n    helper.openDb('himsDb').then(res => {\n      let db = res.result\n      try {\n        helper.saveToStore(db, 'cpt_list', data)\n          .then(res => console.log('RES', res))\n          .catch(e => console.log(e))\n      } catch (e) {\n        console.log(e)\n      } finally { }\n    })\n  }\n\n  patchCPTIndexDB = (data: any) => {\n    helper.openDb('himsDb').then(res => {\n      let db = res.result\n      try {\n        helper.updateEntryByKey(db, 'cpt_list', data['_id'], data)\n          .then(res => console.log('RES', res))\n          .catch(e => console.log(e))\n      } catch (e) {\n        console.log(e)\n      } finally { }\n    })\n  }\n\n  fetchCPTCategories = async () => {\n    this.setState({ loading_state: true })\n    await Utils.StorageService('cpt_list')\n      .then(cpts => {\n        if (Array.isArray(cpts) && cpts.length > 0) {\n          let category_arr: string[] = []\n          let category_ranges: string[] = []\n          let category_dropdown_choices_arr: any[] = [{ name: '', value: '' }]\n          cpts.filter(item => {\n            if (!category_arr.includes(item.category)) {\n              category_arr.push(item.category)\n              // const category_range = item.code.match(/[a-z]+|\\d+/ig)[0] + '0000' + '-' + item.code.match(/[a-z]+|\\d+/ig)[0] + '9999'\n              category_ranges.push(item.code)\n              category_dropdown_choices_arr.push({ name: item.category, value: item.category })\n              return true;\n            }\n            return false;\n          })\n          this.props.setCPTCategories(category_arr)\n          this.props.setCPTCategoryDropdown(category_dropdown_choices_arr)\n          this.props.setCPTCategoryRanges(cloneDeep(category_ranges))\n          this.setState({\n            cpt_categories: category_arr,\n            cpt_category_range: category_ranges,\n            category_dropdown_choices: category_dropdown_choices_arr\n          }, () => this.setState({ loading_state: false }))\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  patchCode = (data: any) => {\n\n    const payload: Cpt = constructPutCpt(data)\n\n    this.setState({\n      loading_state: true,\n      no_data_message: 'Searching for CPT codes'\n    })\n    editCPT(JSON.stringify(payload), payload._id).then(response => {\n      this.setState({\n        no_data_message: 'No available data',\n        loading_state: false\n      })\n      if (response && response.error === undefined && response.message) {\n        this.changePageUpdate(this.state.limit, this.state.limit * this.state.page)\n        this.patchCPTIndexDB(data)\n        this.setState({\n          disableSaveButton: true,\n          isModalOpen: true,\n          modalTitle: 'Success',\n          modalMessage: `You have ${response.message} code!`\n        });\n      } else if (response && response.error && response.error.statusCode === 401) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to edit CPT codes.'\n        });\n      } else if (response && response.error && response.error.statusCode === 400 && response.error.message) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Duplicate Codes',\n          modalMessage: 'This code already exists.'\n        });\n      } else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while saving!'\n        });\n      }\n    }).catch(error => {\n      if (error == 'Error: Bad Request') {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Duplicate Codes',\n          modalMessage: 'This code already exists.',\n          loading_state: false\n        });\n      } else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while saving!',\n          loading_state: false\n        });\n      }\n    });\n  }\n\n  addCodes = (data: any) => {\n\n    this.setState({\n      loading_state: true,\n      no_data_message: 'Searching for CPT codes'\n    })\n\n    const payload: Cpt[] = constructPostCpt(data)\n\n    addCPTCodes(JSON.stringify(payload)).then(response => {\n      this.setState({\n        loading_state: false,\n        no_data_message: 'No available data'\n      })\n      if (response && response.error === undefined && response.message && response.result) {\n        this.changePageUpdate(this.state.limit, this.state.limit * this.state.page)\n        this.addCPTIndexDB(response.result)\n        this.setState({\n          disableSaveButton: true,\n          isModalOpen: true,\n          modalTitle: 'Success',\n          modalMessage: `You have successfully added ${response.result.length} CPT code/s!`\n        });\n      } else if (response && response.error && response.error.statusCode === 401) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to add CPT codes.'\n        });\n      } else if (response && response.error && response.error.statusCode === 400 && response.error.message) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Duplicate Codes',\n          modalMessage: 'This code already exists.'\n        });\n      } else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while adding!'\n        });\n      }\n    }).catch(error => {\n      if (error == 'Error: Bad Request') {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Duplicate Codes',\n          modalMessage: 'This code already exists.',\n          loading_state: false\n        });\n      } else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while saving!',\n          loading_state: false\n        });\n      }\n    });\n  }\n\n  searchCode = (\n    limit: number, skip: number, filters: any, filters_global: any, sorting: any, clicked: any) => {\n\n    searchCPT(limit, skip, filters, filters_global, sorting, clicked).then(response => {\n      this.setState({ no_data_message: 'No available data' })\n      if (response && response.error === undefined) {\n        const table = this.generateDataForTable(\n          response.result ? response.result : [],\n        );\n        this.setState({\n          code_response: response,\n          code_data_all: table,\n          code_data: table,\n          loading_state: false,\n          totalCount:\n            response.total && response.total.count\n              ? response.total.count\n              : 0,\n        });\n      } else if (response && response.error && response.error.statusCode === 401) {\n        const table = this.generateDataForTable([]);\n        this.setState({\n          code_response: [],\n          code_data_all: table,\n          loading_state: false,\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to view CPT codes.',\n        });\n      } else {\n        const table = this.generateDataForTable([]);\n        this.setState({\n          code_response: [],\n          code_data_all: table,\n          loading_state: false,\n          isModalOpen: true,\n          modalTitle: 'Loading failed',\n          modalMessage: 'An error occured while loading the list of codes.',\n        });\n      }\n    }).catch(() => {\n      const table = this.generateDataForTable([]);\n      this.setState({\n        code_response: [],\n        code_data_all: table,\n        loading_state: false,\n        isModalOpen: true,\n        modalTitle: 'Loading failed',\n        modalMessage: 'An error occured while loading the list of codes.',\n      });\n    });\n  }\n\n\n  deleteCPT = (id: string) => {\n    if (!id) {\n      return\n    }\n    this.setState({ loading_state: true })\n    deleteCPT(id).then(response => {\n      this.setState({\n        loading_state: false\n      })\n      this.changePageUpdate(this.state.limit, this.state.limit * this.state.page)\n      if (response && response.error) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while deleting the CPT Code!'\n        });\n      }\n      else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Success',\n          modalMessage: 'You have successfully deleted a CPT code!'\n        });\n      }\n    }).catch(error => {\n      this.setState({\n        isModalOpen: true,\n        modalTitle: 'Failed',\n        modalMessage: 'Something went wrong while deleting the ICD10 Code!'\n      });\n      this.setState({\n        loading_state: false\n      })\n      console.log('client error: ', error);\n    });\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /***********************  \n  TABLE AND PAGE FUNCTIONS \n  ***********************/\n\n  generateDataForTable(response: any) {\n    const table: any = {\n      formattedColumns: {},\n      columnExtensions: [\n        {\n          columnName: 'code',\n          width: 150,\n          wordWrapEnabled: true,\n        },\n        {\n          columnName: 'description',\n          width: 500,\n          wordWrapEnabled: true,\n        },\n      ],\n      columns: [\n        {\n          name: 'code',\n          title: 'CPT Code',\n        },\n        {\n          name: 'description',\n          title: 'Description',\n        },\n      ],\n      rows: [],\n    };\n    for (const cnt in response) {\n      const item = response[cnt];\n      const temp_row: any = {};\n      temp_row['code'] = item['code'];\n      temp_row['description'] = item['description'];\n      table['rows'].push(temp_row);\n    }\n\n    return table;\n  }\n\n  changePageUpdate = (limit: number, skip: number) => {\n    this.handleCloseSideModalBlock();\n    this.setState({ no_data_message: 'Searching for CPT codes' })\n    this.setState({\n      loading_state: true,\n    });\n    if (\n      this.state.default_filters.length !== 0 ||\n      this.state.global_filter !== '' ||\n      this.state.default_sorting.length !== 0 ||\n      this.state.default_clicked !== ''\n    ) {\n      this.searchCode(\n        limit,\n        skip,\n        this.state.default_filters,\n        this.state.global_filter,\n        this.state.default_sorting,\n        this.state.default_clicked,\n      )\n    } else {\n      this.setState({ no_data_message: 'Searching for CPT codes' })\n      getCPT(limit, skip).then(response => {\n        this.setState({ no_data_message: 'No available data' })\n        if (response && response.error === undefined) {\n          const table = this.generateDataForTable(\n            response.result ? response.result : [],\n          );\n          this.setState({\n            code_response: response,\n            code_data_all: table,\n            code_data: table,\n            loading_state: false,\n            totalCount:\n              response.total && response.total.count\n                ? response.total.count\n                : 0,\n          });\n        } else if (response && response.error && response.error.statusCode === 401) {\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_response: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Unauthorized',\n            modalMessage: 'You are not authorized to view CPT codes.',\n          });\n        } else {\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_response: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Loading failed',\n            modalMessage: 'An error occured while loading the list of codes.',\n          });\n        }\n      });\n    }\n  };\n\n  handleChangeSorting = (sorting: any) => {\n    this.setState({ no_data_message: 'Searching for CPT codes' })\n    this.setState({\n      loading_state: true,\n    });\n    if (sorting && sorting.length > 0) {\n\n      this.searchCode(\n        this.state.limit,\n        this.state.page * this.state.limit,\n        this.state.default_filters,\n        this.state.global_filter,\n        sorting,\n        this.state.default_clicked,\n      )\n    }\n  };\n\n  handleFilterByColumn = (filter: any) => {\n    const self = this;\n\n    if (self.state.typingTimeout) {\n      clearTimeout(self.state.typingTimeout);\n    }\n\n    self.setState({\n      default_filters: filter,\n      typing: false,\n      page: 0,\n      typingTimeout: setTimeout(function () {\n        self.setState({\n          no_data_message: 'Searching for CPT codes',\n          loading_state: true,\n        });\n        if (self.state.default_filters !== 0) {\n          self.searchCode(\n            self.state.limit,\n            0,\n            filter,\n            self.state.global_filter,\n            self.state.default_sorting,\n            self.state.default_clicked,\n          )\n        } else {\n          self.initialData();\n        }\n      }, 2000),\n    });\n\n  };\n\n  handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    const self = this;\n\n    if (self.state.typingTimeout) {\n      clearTimeout(self.state.typingTimeout);\n    }\n    self.setState({\n      global_filter: value,\n      typing: false,\n      page: 0,\n      typingTimeout: setTimeout(function () {\n        self.setState({\n          no_data_message: 'Searching for CPT codes',\n          loading_state: true,\n          limit: 10,\n        });\n        if (self.state.global_filter !== '') {\n          self.searchCode(\n            self.state.limit,\n            0,\n            self.state.default_filters,\n            self.state.global_filter,\n            self.state.default_sorting,\n            self.state.default_clicked,\n          )\n        } else {\n          self.initialData();\n        }\n      }, 2000),\n    });\n  };\n\n  handleClickRow = (row: any) => {\n    const { code_response } = this.state;\n\n    if (!this.state.code_response || !this.state.code_response.result)\n      return;\n\n    const data: Cpt = constructCpt(code_response.result[row])\n    this.checkFields(data, true)\n    this.setState({\n      code_info: data,\n    }, () => this.handleChangeSideModalBlockMode('view'));\n  };\n\n\n  handlePageChange = (currentPage: number, skip: number) => {\n    this.setState({\n      page: currentPage,\n    });\n\n    this.changePageUpdate(this.state.limit, skip);\n  };\n\n  handlePageSizeChange = value => {\n    let pageLimit = 100000;\n\n    if (this.state.totalCount >= pageLimit) {\n      this.setState({\n        isPageSizeModal: true,\n      });\n    } else {\n      this.setState({\n        limit: value,\n      });\n\n      this.changePageUpdate(value, value * this.state.page);\n    }\n  };\n\n  handleClickItemFromList = (key: string) => {\n    this.handleCloseSideModalBlock()\n    this.setState({\n      no_data_message: 'Searching for CPT codes',\n      page: 0,\n      loading_state: true,\n    });\n    if (key !== undefined) {\n      this.searchCode(\n        this.state.limit,\n        0,\n        this.state.default_filters,\n        this.state.global_filter,\n        this.state.default_sorting,\n        key,\n      )\n    }\n  };\n\n  // handleSetClickedCodeFromList = (item: number, key: string) => {\n  //   this.setState({\n  //     highlightedCodeFromList: item,\n  //   });\n  //   this.handleClickItemFromList(key);\n  // }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /*****************************  \n  ACTIONS / SIDE MODAL FUNCTIONS \n  ******************************/\n\n  handleCloseSideModalBlock = () => {\n    this.setState({\n      show_side_modal_block: 'none',\n      side_modal_block_mode: '',\n      code_info: constructEmptyCpt(),\n    });\n  };\n\n  handleChangeSideModalBlockMode = (value: 'view' | 'edit' | 'add' | '') => {\n    let title = '';\n    if (value && value === 'edit' && this.state.block_title) {\n      title = `Edit ${this.state.block_title}`;\n      const reform_data: Cpt = reconstructCpt(cloneDeep(this.state.code_info))\n      this.setState({ code_info: reform_data })\n    } else if (value && value === 'view' && this.state.code_info) {\n      title = this.state.code_info['code'] ? this.state.code_info['code'] : '';\n    } else if (value && value === 'add') {\n      title = `Add CPT Code`;\n    }\n    this.setState({\n      side_modal_block_mode: value,\n      block_title: title,\n    }, () => this.handleOpenBlock());\n  };\n\n  handleOpenBlock = () => {\n    this.setState({\n      show_side_modal_block: 'block',\n    }, () => this.passDataToSideModalBlockBody());\n  };\n\n  handleInvalidFieldsPrompt = () => {\n    this.setState({\n      isModalOpen: true,\n      modalTitle: 'Incomplete/Invalid Fields',\n      modalMessage: 'Please complete the form before proceeding.',\n    })\n  }\n\n\n  passDataToSideModalBlockBody = () => {\n\n    if (this.state.code_info && !this.state.code_info.gender_limited) {\n      this.state.code_info.gender = ''\n      this.setState({\n        code_info: this.state.code_info\n      });\n    }\n  };\n\n\n  checkFields = (formFields?: any, disableButton?: boolean) => {\n    this.setState({ loading_state: true })\n\n    if (formFields) {\n      let invalid_fields = this.getInvalidFields(formFields, disableButton);\n      if (!invalid_fields || invalid_fields.length === 0) {\n        if (this.state.disableSaveButton || !this.state.clickSaveButton) {\n          return\n        }\n        if (this.state.side_modal_block_mode === 'edit') {\n          this.setState({\n            clickSaveButton: false,\n            confirm_modal_message: 'Are you sure you want to edit this CPT code?',\n            confirm_modal_open: true,\n            confirm_modal_title: 'Confirm edit CPT code',\n            action_after_confirm: () => this.patchCode(formFields)\n          })\n        } else if (this.state.side_modal_block_mode === 'add') {\n          this.setState({\n            clickSaveButton: false,\n            confirm_modal_message: 'Are you sure you want to add this CPT code?',\n            confirm_modal_open: true,\n            confirm_modal_title: 'Confirm add CPT code',\n            action_after_confirm: () => this.addCodes(formFields)\n          })\n        }\n      } else {\n        this.handleInvalidFieldsPrompt()\n      }\n    }\n  }\n\n  getInvalidFields = (formFields: any, disableButton?: boolean) => {\n    let invalid_fields_submit: any[] = [];\n    let invalid_fields_editing: any[] = [];\n    let exclude_fields = {}\n    if (this.excludeFields !== undefined) {\n      exclude_fields = this.excludeFields\n    }\n    const fields_excluded: string[] = Object.keys(exclude_fields)\n    const form_keys: string[] = Object.keys(formFields)\n\n    form_keys.forEach(field => {\n      if (this.requiredFields !== undefined &&\n        this.requiredFields.includes(field) &&\n        !fields_excluded.includes(field) &&\n        !formFields[field]) {\n        if (!disableButton) {\n          invalid_fields_submit.push(field)\n        } else {\n          invalid_fields_editing.push(field)\n        }\n\n      }\n    });\n\n    const eff_date = moment(formFields['effectivity_date'])\n    const exp_date = moment(formFields['expiry_date'])\n    if (formFields &&\n      formFields['effectivity_date'] &&\n      formFields['expiry_date'] &&\n      eff_date.isValid() &&\n      exp_date.isValid() &&\n      eff_date.startOf('day').diff(exp_date.startOf('day')) > 0) {\n      if (disableButton) {\n        invalid_fields_editing.push('effectivity_date')\n      } else {\n        invalid_fields_submit.push('effectivity_date')\n      }\n    }\n\n    if (formFields && formFields['gender_limited'] && !formFields['gender']) {\n      if (!disableButton) {\n        invalid_fields_submit.push('gender')\n      } else {\n        invalid_fields_editing.push('gender')\n      }\n    }\n    if (!invalid_fields_editing || invalid_fields_editing.length === 0) {\n      this.setState({ disableSaveButton: false })\n    } else if (!this.state.disableSaveButton) {\n      this.setState({ disableSaveButton: true })\n    }\n    this.setState({ loading_state: false, invalid_fields: invalid_fields_submit })\n    return invalid_fields_submit\n  }\n\n\n\n  renderSideModalBlock(): JSX.Element {\n    const { classes } = this.props;\n\n    return (\n      <SideModalBlock\n        blockPosition={'fixed'}\n        title={this.state.block_title}\n        editIconDescription={'Edit Code'}\n        showBlock={this.state.show_side_modal_block}\n        classes={classes}\n        handleClose={this.handleCloseSideModalBlock}\n        sideModalBlockMode={this.state.side_modal_block_mode}\n        changeMode={this.handleChangeSideModalBlockMode}\n      >\n        {this.state.side_modal_block_mode ? (\n          <SideModalBody\n            formFields={this.state.code_info}\n            invalidFields={this.state.invalid_fields}\n            classes={this.props.classes}\n            handleClose={this.handleCloseSideModalBlock}\n            // deleteIcon={'Delete Code'}\n            disableSaveButton={this.state.disableSaveButton}\n            dynamicDropdownChoices={this.state.category_dropdown_choices}\n            refreshData={(data: any) => {\n              this.setState({ code_info: data },\n                () => this.checkFields(data, true))\n            }}\n            delete={(data: any) => {\n              if (this.state.side_modal_block_mode) {\n                if (this.state.side_modal_block_mode === 'edit') {\n                  this.setState({\n                    confirm_modal_message: 'Are you sure you want to delete this CPT code?',\n                    confirm_modal_open: true,\n                    confirm_modal_title: 'Confirm delete CPT code',\n                    action_after_confirm: () => this.deleteCPT(data['_id'])\n                  })\n                }\n              }\n            }}\n            handleSave={(formFields?: any) => {\n              if (this.state.side_modal_block_mode) {\n                this.setState({ clickSaveButton: true }, () => this.checkFields(formFields))\n              }\n            }}\n            formName={'CPT'}\n            mode={this.state.side_modal_block_mode ? this.state.side_modal_block_mode : ''}\n            checkBoxWithDropDownFieldsInitState={this.state.code_info && this.state.code_info['gender_limited'] ? true : false}\n            datePairField1MaxDate={\n              this.state.code_info &&\n                this.state.code_info['expiry_date'] &&\n                moment(this.state.code_info['expiry_date']).isValid() ?\n                moment(this.state.code_info['expiry_date']).format('MM-DD-YY').toString() : undefined\n            }\n            datePairField2MinDate={\n              this.state.code_info &&\n                this.state.code_info['effectivity_date'] &&\n                moment(this.state.code_info['effectivity_date']).isValid() ?\n                moment(this.state.code_info['effectivity_date']).format('MM-DD-YY').toString() : undefined\n            }\n          />\n        ) : null}\n      </SideModalBlock>\n    )\n  }\n\n  renderCodeInfo(): JSX.Element {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <li key={'version'} className={classes.codeHeader}>VERSION</li>\n        <li key={'year-of-release-value'} className={classes.codeHeaderValue}>2020</li>\n        <ListItemText key={'effectivity-date'}>\n          <div className={classes.codeHeader}>EFFECTIVITY DATE</div>\n          <div className={classes.codeHeaderValue}>Jan 1, 2020</div>\n        </ListItemText>\n      </React.Fragment>\n    )\n  }\n\n  renderCodeList(key: string): JSX.Element {\n    const { classes } = this.props;\n    const ranges = this.state.cpt_category_range\n    const categories = this.state.cpt_categories\n\n    let display : string = ''\n    if(ranges.length > 0 && categories.length > 0){\n      console.log('CROO', ranges)\n      const range = ranges[categories.indexOf(key)]\n      // console.log('RANGE', range, categories.length)\n      if(range){\n        display = `${range.slice(0, 4)}0000 - ${range.slice(0, 4)}9999 :`\n      }\n    }else{\n      return (\n        <>\n        </>\n      )\n    }\n\n    return (\n      <ListItemText\n        key={key}\n        classes={{\n          root: classes.codeListItemsRoot,\n          primary:\n            this.state.highlightedCodeFromList ===\n              categories.indexOf(key)\n              ? classes.codeListItemsSelected\n              : classes.codeListItems,\n        }}\n        onClick={() => {\n          if (categories.indexOf(key) !== this.state.highlightedCodeFromList) {\n            this.setState({\n              highlightedCodeFromList: categories.indexOf(key),\n            });\n            this.handleClickItemFromList(key);\n          }else {\n            this.setState({\n              highlightedCodeFromList: -1,\n            });\n            this.handleClickItemFromList('');\n          }\n        }}\n      >\n        <br/>{display}<br/>\n        {key}\n      </ListItemText>\n    )\n  }\n\n\n  render(): JSX.Element {\n    const { classes } = this.props;\n    const categories = this.state.cpt_categories\n\n    return (\n      <div>\n        {this.state.loading_state ? <Loader /> : null}\n\n\n        <Grid container>\n          <Grid container item xs={12} md={3}>\n            <Grid container className={classes.scrollList} style={{ maxHeight: 715, overflow: 'auto' }}>\n              <List>\n                {this.renderCodeInfo()}\n                {categories ? categories.map(key => this.renderCodeList(key)) : null}\n              </List>\n            </Grid>\n          </Grid>\n\n\n\n\n\n\n\n          <Grid container item xs={12} md={9} className={classes.selectedpage}>\n            <Grid container>\n              <Grid item xs={12} md={9}>\n                <TextField\n                  style={{ width: '100%' }}\n                  id=\"code_search\"\n                  placeholder=\"Search a code or description\"\n                  label=\"\"\n                  margin=\"none\"\n                  fullWidth\n                  className={classes.searchField}\n                  variant=\"outlined\"\n                  value={this.state.global_filter}\n                  inputProps={{ 'aria-label': 'bare' }}\n                  onChange={this.handleSearch}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Search style={{ color: 'rgba(54, 54, 54, 0.4)' }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n\n\n\n              <Grid item xs={8} md={3} className={classes.searchBar}>\n                <FontAwesomeIcon\n                  icon={faPlus}\n                  className={classes.addFieldIcon}\n                />\n                <Link className={classes.addACode} onClick={() => {\n                  this.setState({\n                    block_title: 'Add CPT Code',\n                    code_info: constructEmptyCpt(),\n                    disableSaveButton: true\n                  }, () => this.handleChangeSideModalBlockMode('add'));\n                }}>Add a Code</Link>\n              </Grid>\n\n\n\n\n\n              <GridHorizontalDivider height=\"30px\" />\n              <Grid style={{ minHeight: 690, overflow: 'auto' }}>\n                <TableComponent\n                  id=\"tab-all\"\n                  totalCount={this.state.totalCount}\n                  update={this.changePageUpdate}\n                  updateSorting={this.handleChangeSorting}\n                  rows={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['rows']\n                      : []\n                  }\n                  columns={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['columns']\n                      : []\n                  }\n                  message={\n                    this.state.global_filter\n                      ? 'No available data.'\n                      : this.state.no_data_message\n                  }\n                  onClickRow={this.handleClickRow}\n                  disableSelect\n                  disableSearch\n                  formattedColumns={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['formattedColumns']\n                      : {}\n                  }\n                  columnExtensions={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['columnExtensions']\n                      : []\n                  }\n                  onFilterChange={this.handleFilterByColumn}\n                  onSortingChange={this.handleChangeSorting}\n                  onPageChange={this.handlePageChange}\n                  ongPageSizeChange={this.handlePageSizeChange}\n                  defaultFilter={this.state.default_filters}\n                  currentPage={this.state.page}\n                  limit={this.state.limit}\n                  pageSizes={[10, 25, 50, 100]}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n\n\n\n        {this.renderSideModalBlock()}\n\n        <MsgModal\n          onClose={() => this.setState({ isModalOpen: false })}\n          title={this.state.modalTitle}\n          isModalOpen={this.state.isModalOpen}\n          message={this.state.modalMessage}\n        />\n        <ConfirmationModal\n          onClose={() => this.setState({ confirm_modal_open: false })}\n          title={this.state.confirm_modal_title}\n          isModalOpen={this.state.confirm_modal_open}\n          submitType={'confirm'}\n          onSubmit={() => {\n            if (this.state.action_after_confirm) {\n              this.state.action_after_confirm()\n            }\n          }}\n          message={this.state.confirm_modal_message} />\n      </div>\n    );\n  }\n}\n","import React, {\n  useState,\n} from 'react';\n\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { Store } from 'Components/Stores/IStore';\nimport { LookupActions } from './LookupActions';\nimport {\n  GridHorizontalDivider,\n} from 'Components/UI/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ICD10Section } from './Components/ICD10Section';\nimport { CPTSection } from './Components/CPTSection';\nimport { SideMenu } from 'Components/UI/SideMenu';\nimport classNames from 'classnames';\n\nimport {\n  Grid,\n  Typography,\n  Link\n} from '@material-ui/core';\n\nconst page_tab_titles: any = ['Codes', 'Locations', 'Industries'];\n\nconst sideBarItems = {\n  Codes: [\n    {\n      name: 'ICD-10',\n      label: ''\n    },\n    {\n      name: 'CPT',\n      label: ''\n    },\n    {\n      name: 'Doctor Specialization',\n      label: ''\n    },\n    {\n      name: 'Diagnosis - Procedures Matrix',\n      label: ''\n    },\n  ], Locations: [\n    {\n      name: 'Regions',\n      label: ''\n    },\n    {\n      name: 'Provinces',\n      label: ''\n    },\n    {\n      name: 'Municipalities and Cities',\n      label: ''\n    },\n  ], Industries: [\n    {\n      name: 'Agriculture, Hunting, Forestry And Fishing Sector',\n      label: ''\n    },\n    {\n      name: 'Industry Sector',\n      label: ''\n    },\n    {\n      name: 'Service Sector',\n      label: ''\n    },\n  ]\n};\n\nconst useStyles = makeStyles(theme => ({\n  gridContainerNoPadding: {\n    padding: theme.spacing(1),\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: 700,\n    color: '#272e4c',\n  },\n  subSectionTitle: {\n    fontSize: 16,\n    fontWeight: 400,\n    color: '#272e4c',\n  },\n  gridContainer: {\n    backgroundColor: '',\n  },\n  headerTitle: {\n    fontSize: '1.5rem',\n    fontWeight: 800,\n  },\n  linkPrevious: {\n    fontSize: 12,\n    fontWeight: 300,\n    color: 'black',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n  },\n  sideBar: {\n    paddingRight: '10px',\n    paddingLeft: '10px',\n    borderRight: '1px solid #C3C3C3',\n  },\n  scrollList: {\n    paddingRight: '15px',\n    paddingLeft: '15px',\n    borderRight: '1px solid #C3C3C3',\n  },\n  selectedpage: {\n    paddingLeft: '37px',\n  },\n  linkCurrent: {\n    fontSize: 12,\n    fontWeight: 600,\n    color: 'black',\n    cursor: 'pointer',\n  },\n  main: {\n    backgroundColor: '#F5F7FB',\n    padding: '32px 24px',\n  },\n  gridItemLayout: {\n    padding: theme.spacing(1),\n  },\n  sideNavHeader: {\n    fontSize: 13,\n    fontWeight: 700,\n    color: 'rgba(39, 46, 76, 0.3)',\n  },\n  listItemTextRoot: {\n    whiteSpace: 'normal',\n    flex: 'none',\n  },\n  listItemTextPrimarySelected: {\n    fontSize: 14,\n    fontWeight: 700,\n    color: '#2c2e8e',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n  },\n  listItemTextPrimaryNotSelected: {\n    fontSize: 14,\n    color: '#272e4c',\n    cursor: 'pointer',\n  },\n  addFieldIcon: {\n    color: '#3AB77D',\n    cursor: 'pointer',\n    fontSize: 14,\n    marginRight: '15px',\n  },\n  searchBar: {\n    paddingRight: '15px',\n    marginTop: 15,\n    textAlign: 'center',\n  },\n  searchField: {\n    backgroundColor: 'white',\n  },\n  addACode: {\n    fontSize: 14,\n    fontWeight: 700,\n    color: 'rgba(58, 183, 125, 1)',\n    cursor: 'pointer',\n  },\n  codeHeader: {\n    color: '#272E4C',\n    textAlign: 'left',\n    opacity: 0.6,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '12px',\n  },\n  codeHeaderValue: {\n    color: '#272E4C',\n    textAlign: 'left',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '16px',\n    fontWeight: 500,\n  },\n  codeListItemsRoot: {\n    flex: 'none',\n  },\n  codeListItems: {\n    fontSize: '14px',\n    color: '#272E4C',\n    textAlign: 'left',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    '&:hover': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n    '&$selected': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n  },\n  codeListItemsSelected: {\n    fontSize: '14px',\n    textDecoration: 'underline',\n    color: '#3AB77D',\n    fontWeight: 600,\n    textAlign: 'left',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n  },\n  codeNestedListItemsRoot: {\n    flex: 'none',\n  },\n  codeNestedListItems: {\n    fontSize: '14px',\n    color: '#272E4C',\n    textAlign: 'left',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    '&:hover': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n    '&$selected': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n  },\n  codeNestedListItemsSelected: {\n    fontSize: '14px',\n    textDecoration: 'underline',\n    color: '#3AB77D',\n    fontWeight: 600,\n    textAlign: 'left',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n  },\n  SideModalBlockContainer: {\n    position: 'fixed',\n    right: 0,\n    top: 0,\n    zIndex: 200,\n    backgroundColor: '#f5f7fb',\n    paddingLeft: '25px',\n    paddingRight: '25px',\n    paddingTop: '0px',\n    paddingBottom: '25px',\n    borderRadius: '10px',\n    boxShadow:\n      '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n  CodeInfoHeaders: {\n    paddingRight: '20px',\n  },\n  CodeInfoHeadersValues: {\n    paddingRight: '20px',\n  },\n  inputLabel: {\n    paddingRight: '20px',\n    color: '#272e4c',\n    fontSize: '12px'\n  },\n  keyboardDatePicker: {\n    marginTop: '10px',\n    marginBottom: '15px',\n    width: '212px',\n  },\n  viewHeader: {\n    color: '#272E4C',\n    textAlign: 'left',\n    opacity: 0.6,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '12px',\n  },\n  viewHeaderValue: {\n    color: '#272E4C',\n    textAlign: 'left',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '14px',\n    fontWeight: 600,\n  },\n  editButton: {\n    textDecoration: 'underline',\n    color: '#3AB77D',\n    fontSize: '0.875rem',\n    fontWeight: 600,\n    cursor: 'pointer',\n\n  },\n  deleteButton: {\n    textDecoration: 'underline',\n    color: '#272E4C',\n    opacity: 0.6,\n    cursor: 'pointer',\n  },\n  closeButton: {\n    color: '#272E4C',\n    '&hover': {\n      fontSize: '0.875rem',\n    }\n  },\n  sideBarContainer: {\n    borderRight: \"1px solid #ccc\",\n    paddingRight: \"25px\",\n  },\n  caretStyle: {\n    textDecoration: 'none',\n    color: '#272E4C',\n    opacity: 0.6\n  },\n  checkbox: {\n    '&.Mui-checked': {\n      color: '#1e2071',\n    },\n  },\n  menuList: {\n    display: \"inline-block\",\n    padding: \"10px 80px 10px 0\"\n  },\n  menuLink: {\n    color: \"#929292\",\n    display: \"block\",\n    fontSize: \"1.10em\",\n    '&:hover': {\n      color: \"#3ab77d\",\n    }\n  },\n  LinkActive: {\n    color: \"#3ab77d\",\n    fontWeight: \"bold\",\n    textDecoration: \"underline\"\n  }\n}));\n\nexport const LookupPage = () => {\n  const [activeHeader, setActiveHeader] = useState('Codes');\n  const [activeClass, setActiveClass] = useState(0);\n  const [activeItem, setActiveItem] = useState('ICD-10');\n\n\n  // const [icd10Response, setICD10Response] = useState<any>(undefined);\n  // const [icd10CodeData, setICD10CodeData] = useState<any>(undefined);\n  const [icdCategories, setICDCategories] = useState<string[]>([]);\n  const [icdCategoryDropdown, setICDCategoryDropdown] = useState<any>(undefined);\n  // const [icd10ListClicked, setICD10ListClicked] = useState<number>(-1);\n\n\n  // const [cptResponse, setCPTResponse] = useState<any>(undefined);\n  // const [cptCodeData, setCPTCodeData] = useState<any>(undefined);\n  const [cptCategories, setCPTCategories] = useState<string[]>([]);\n  const [cptCategoryRanges, setCPTCategoryRanges] = useState<string[]>([]);\n  const [cptCategoryDropdown, setCPTCategoryDropdown] = useState<any>(undefined);\n  // const [cptListClicked, setCPTListClicked] = useState<number>(-1);\n\n  const classes = useStyles();\n\n  const activeSideBarItem = (item) => {\n    setActiveItem(item);\n  }\n\n  const handleMenuClick = (item, index) => {\n    setActiveHeader(item);\n    setActiveClass(index)\n  }\n\n  return (\n    <div className={classes.main}>\n      <Grid\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n        spacing={0}\n        className={classes.gridContainer}\n      >\n        <Grid item>\n          <Typography className={classes.headerTitle}>Lookup</Typography>\n        </Grid>\n      </Grid>\n      <GridHorizontalDivider height=\"15px\" />\n\n\n\n\n\n\n\n\n      {/* HEADER */}\n\n      <Grid item xs={6}>\n        <ul style={{ padding: '0', margin: '0' }}>\n          {\n            page_tab_titles.map((item, i) => (\n              <li className={classes.menuList}>\n                <Link className={classNames(classes.menuLink, activeClass === i ? classes.LinkActive : null)} onClick={() => handleMenuClick(item, i)}>{item}</Link>\n              </li>\n            ))\n          }\n        </ul>\n      </Grid>\n\n\n\n\n\n\n\n\n\n\n\n      <Grid container justify=\"space-between\" spacing={0}>\n        <GridHorizontalDivider height=\"30px\" />\n\n\n        {/* SIDE MENU */}\n        <Grid item xs={2} className={classes.sideBarContainer}>\n          <SideMenu\n            items={sideBarItems[activeHeader]}\n            activeItems={activeSideBarItem}\n            reset={activeHeader}\n          ></SideMenu>\n        </Grid>\n\n\n        {/* SECTIONS */}\n        {activeItem === 'ICD-10' && activeHeader === 'Codes' ? (\n          <Grid item xs={12} md={10}>\n            <ICD10Section\n              classes={classes}\n\n              // icd10Response={icd10Response}\n              // setICD10Response={setICD10Response}\n              // icd10CodeData={icd10CodeData}\n              // setICD10CodeData={setICD10CodeData}\n              icdCategories={icdCategories}\n              setICDCategories={setICDCategories}\n              icdCategoryDropdown={icdCategoryDropdown}\n              setICDCategoryDropdown={setICDCategoryDropdown}\n              // icd10ListClicked={icd10ListClicked}\n              // setICD10ListClicked={setICD10ListClicked}\n\n\n            />\n          </Grid>\n\n        ) : activeItem === 'CPT' && activeHeader === 'Codes' ? (\n          <Grid item xs={12} md={10}>\n            <CPTSection\n              classes={classes}\n              // cptResponse={cptResponse}\n              // setCPTResponse={setCPTResponse}\n              // cptCodeData={cptCodeData}\n              // setCPTCodeData={setCPTCodeData}\n              cptCategories={cptCategories}\n              setCPTCategories={setCPTCategories}\n              cptCategoryRanges={cptCategoryRanges}\n              setCPTCategoryRanges={setCPTCategoryRanges}\n              cptCategoryDropdown={cptCategoryDropdown}\n              setCPTCategoryDropdown={setCPTCategoryDropdown}\n              // cptListClicked={cptListClicked}\n              // setCPTListClicked={setCPTListClicked}\n            />\n          </Grid>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: Store) => state.home;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  Map: bindActionCreators(LookupActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };\n"],"sourceRoot":""}