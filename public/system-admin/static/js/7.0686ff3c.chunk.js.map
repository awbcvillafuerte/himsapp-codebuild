{"version":3,"sources":["Pages/Lookup/Components/Loader/index.tsx","Components/UI/SideMenu/index.tsx","Pages/Lookup/ActionConsts.ts","Pages/Lookup/LookupActions.ts","Components/UI/TableComponent/CodeListTable.tsx","Pages/API/Calls/ICD10.ts","Pages/Lookup/Components/ConfirmationModal.tsx","Pages/Lookup/Components/ICD10Section/index.tsx","Pages/API/Calls/CPT.ts","Pages/Lookup/Components/CPTSection/index.tsx","Pages/Lookup/LookupPage.tsx"],"names":["useStyles","makeStyles","root","position","width","height","zIndex","right","bottom","top","left","textAlign","backgroundColor","container","outline","alignItems","justifyContent","display","flexDirection","Loader","classes","className","size","defaultProps","sideBarLists","padding","margin","listStyle","sideBarLink","color","LinkActive","fontWeight","textDecoration","SideMenu","props","items","activeItems","useState","activeClass","setActiveClass","useEffect","undefined","reset","name","map","item","i","label","variant","style","fontSize","classNames","onClick","itemName","index","LookupConsts","ResetReducer","SetReducer","LookupActions","payload","type","radioSelected","selectedValue","clickCell","clickValue","cellSelectStyles","select","textFieldStyles","checkboxStyles","Select","id","value","cellSelectClasses","renderValue","selected","find","key","TableFilterCell","filter","onFilter","filteringEnabled","labelWidth","onChange","e","target","placeholder","TableRadio","onToggle","restProps","checked","stopPropagation","TableCheckBox","icon","faCheckSquare","checkedIcon","TableSearchPanel","onValueChange","fullWidth","startAdornment","faSearch","DefaultTableToolbar","children","disableGutters","SortingIcon","direction","marginLeft","faSortUp","faSortDown","TableSortLabel","column","onSort","sortingEnabled","title","hideSortIcon","faSort","EmptyCellFormatter","faExclamationCircle","EmptyCellDataTypeProvider","formatterComponent","RequiredFormatter","row","RequiredDataTypeProvider","RequiredCheckboxFormatter","control","RequiredCheckboxDataTypeProvider","UploadFileFormatter","console","log","paddingTop","paddingRight","faFileUpload","UploadFileDataTypeProvider","DisapproveRadioFormatter","aria-label","cnt","labelPlacement","DisapproveRadioDataTypeProvider","IncompleteRadioFormatter","IncompleteRadioDataTypeProvider","RadioNameFormatter","RadioDataTypeProvider","ValuesNameFormatter","ValuesNameDataTypeProvider","SystemNameFormatter","SystemNameDataTypeProvider","DataFormatter","DataDataTypeProvider","NumberFormatter","textFieldClasses","NumberDataTypeProvider","TextFormatter","TextDataTypeProvider","DateFormatter","text","moment","format","error","DateCellDataTypeProvider","TimeFormatter","TimeCellDataTypeProvider","TableComponent","columns","formattedColumns","singleSelect","disablePaging","disableSearch","disableSelect","disableSort","disableFilter","toolbarType","columnExtensions","columnBands","showSelectionColumn","query","totalCount","currentPage","limit","selection","setSelection","pageSizes","sorting","setSorting","rows","setRows","dataTypeProviders","Object","keys","length","push","for","number","system_name","data_name","value_name","required_columns","radio","incomplete_radio","disapprove_action","required_checkbox","upload_file","required_cell","date","time","toolbar","Paper","topBar","onCurrentPageChange","page","skip","onPageChange","pageSize","onPageSizeChange","ongPageSizeChange","defaultSorting","onSortingChange","updateSorting","onSelectionChange","newSelection","onClickRow","onSelectedRadio","onClickCell","lastSelected","indexOf","defaultFilters","filters","defaultFilter","columnFilteringEnabled","filterExtensions","onFiltersChange","onFilterChange","messages","noData","message","selectByRowClick","cellComponent","headerCellComponent","showSelectAll","showSortingControls","sortLabelComponent","rootComponent","inputComponent","fetch","Fetch","getAccessToken","getICD","option","method","call","JSON","stringify","fetchAccessToken","then","searchICD","offset","filter_key_str","sorting_str","filter_str","forEach","search","ICD_URL","addICD10Codes","body","editICD","deleteICD","theme","dialog","dialogAction","marginBottom","spacing","ConfirmationModal","Dialog","open","isModalOpen","onClose","aria-labelledby","maxWidth","DialogTitle","DialogContent","Grid","justify","xs","DialogActions","clsx","Button","onSubmit","submitType","list_values","ICD10Section","escFunction","event","keyCode","handleCloseSideModalBlock","initialData","setState","no_data_message","response","table","generateDataForTable","result","code_list","code_data_all","code_data","loading_state","total","count","statusCode","modalTitle","modalMessage","catch","patchICD","data","state","init_expiry_date","changePageUpdate","addICDCodes","Date","defaultFormat","Array","isArray","default_filters","global_filter","default_sorting","default_clicked","handleChangeSorting","handleFilterByColumn","self","typingTimeout","clearTimeout","typing","setTimeout","handleSearch","handleClickRow","status","isValid","diff","_id","full_code","full_description","category_title","effectivity_date","expiry_date","date_updated","code_info","block_title","handleChangeSideModalBlockMode","handlePageChange","handlePageSizeChange","isPageSizeModal","handleClickItemFromList","show_side_modal_block","side_modal_block_mode","handleOpenBlock","passDataToSideModalBlockBody","handleInvalidFieldsPrompt","handleConfirmationSubmit","formFields","checkInvalidFields","excludeFields","invalid_fields","getInvalidFields","exclude_fields","field","includes","columnName","wordWrapEnabled","confirm_modal_title","confirm_modal_message","confirm_modal_open","action_after_confirm","clickedCodeFromList","selected_date_filter","selected_start_date","selected_end_date","action_after_info","this","document","addEventListener","temp_row","codes","ListItemText","codeListItemsRoot","primary","codeListItemsSelected","codeListItems","blockPosition","editIconDescription","showBlock","handleClose","sideModalBlockMode","changeMode","invalidFields","refreshData","delete","handleSave","formName","mode","md","scrollList","maxHeight","overflow","List","codeHeader","codeHeaderValue","selectedpage","TextField","searchField","inputProps","InputProps","InputAdornment","Search","searchBar","faPlus","addFieldIcon","Link","addACode","minHeight","update","React","Component","getCPT","searchCPT","temp","match","CPT_URL","addCPTCodes","editCPT","deleteCPT","CPTSection","fetchCPTCategories","a","Utils","StorageService","cpts","category_arr","category_ranges","category","code","cpt_categories","cpt_category_range","err","patchCPT","add_code","gender_limited","gender","description","handleSetClickedCodeFromList","cloneDeep","reform_data","Boolean","slice","checkBoxWithDropDownFieldsInitState","page_tab_titles","sideBarItems","Codes","Locations","Industries","gridContainerNoPadding","sectionTitle","subSectionTitle","gridContainer","headerTitle","linkPrevious","cursor","sideBar","paddingLeft","borderRight","linkCurrent","main","gridItemLayout","sideNavHeader","listItemTextRoot","whiteSpace","flex","listItemTextPrimarySelected","listItemTextPrimaryNotSelected","marginRight","marginTop","opacity","letterSpacing","textAlignLast","codeNestedListItemsRoot","codeNestedListItems","codeNestedListItemsSelected","SideModalBlockContainer","paddingBottom","borderRadius","boxShadow","CodeInfoHeaders","CodeInfoHeadersValues","inputLabel","keyboardDatePicker","viewHeader","viewHeaderValue","editButton","deleteButton","closeButton","sideBarContainer","caretStyle","checkbox","menuList","menuLink","LookupPage","activeHeader","setActiveHeader","activeItem","setActiveItem","Typography","handleMenuClick","mapStateToProps","home","mapDispatchToProps","dispatch","Map","bindActionCreators"],"mappings":"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","file":"static/js/7.0686ff3c.chunk.js","sourcesContent":["import * as React from 'react';\nimport { CircularProgress } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface LoaderProps {\n}\n\nconst useStyles = makeStyles({\n\troot: {\n        position: 'fixed',\n        width: '100%',\n        height: '100%',\n        zIndex: 9999,\n        right: '0px',\n        bottom: '0px',\n        top: '0px',\n        left: '0px',\n        textAlign: \"center\",\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    },\n    container:{\n        height: '100%',\n        outline: 0,\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        flexDirection: 'column'\n    }\n});\n\nexport const Loader: React.FC<LoaderProps> = (): JSX.Element => {\n    // const buttonclasses = ButtonStyle();\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <div className={classes.container}>\n                <CircularProgress size={150}/>\n            </div>\n        </div>\n    )\n}\n\nLoader.defaultProps = {}","import * as React from 'react';\nimport { Link, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles({\n\tsideBarLists: {\n\t\tpadding: 0,\n\t\tmargin: 0,\n        listStyle: 'none',\n        position: 'sticky',\n        top: 20\n\t},\n\tsideBarLink: {\n\t\tcolor: \"#272e4c\",\n\t\tmargin: \"0 0 10px\",\n\t\tdisplay: \"block\"\n    },\n    LinkActive: {\n        color: \"#2C2E8E\",\n        fontWeight: \"bold\",\n        textDecoration: \"underline\"\n    }\n});\n\nexport interface ISideMenuProps {\n    items: any,\n    activeItems: (item) => void,\n    reset?: any,\n}\n\nexport const SideMenu : React.FC<ISideMenuProps> = (props: ISideMenuProps): JSX.Element => {\n    const {items , activeItems } = props;\n    const [activeClass, setActiveClass] = useState(0);\n    const classes = useStyles();\n\n    useEffect(() => {\n        // resets the active item to zero when\n        // the reset props changes\n        if(props.reset !== undefined){\n            setActiveClass(0)\n            activeItems(items[0].name)\n        }\n    }, [props.reset])\n\n    const sideBarlinkClick = (itemName, index) => {\n        activeItems(itemName)\n        setActiveClass(index)\n    }\n\n    return (\n        <>\n            <ul className={classes.sideBarLists}>\n                {\n                    items.map((item, i) => (\n                        <li>\n                            {\n                                item.label !== undefined &&\n                                <Typography variant={'subtitle2'} style={{color:'#929292', fontSize: '12px'}}>{ item.label }</Typography>\n                            }\n                            <Link \n                                className={classNames(classes.sideBarLink, activeClass === i ? classes.LinkActive : null)} \n                                onClick={() => sideBarlinkClick(item.name, i)}\n                            >\n                                { item.name } \n                            </Link>\n                        </li>\n                    ))\n                }\n            </ul>\n        </>\n    )\n}","export const LookupConsts = {\n  Lookup: {\n    ResetReducer: 'Lookup_ResetReducer',\n    SetReducer: 'Lookup_SetReducer',\n  },\n};\n","import { LookupConsts } from './ActionConsts';\n\nexport const LookupActions = {\n  Map: (payload: []) => ({\n    payload,\n    type: LookupConsts.Lookup.SetReducer,\n  }),\n\n  Reset: () => ({\n    type: LookupConsts.Lookup.ResetReducer,\n  }),\n};\n","//#region Global Imports\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Table,\n  TableSelection,\n  TableHeaderRow,\n  TableFilterRow,\n  Toolbar,\n  SearchPanel,\n  PagingPanel,\n  TableBandHeader,\n} from '@devexpress/dx-react-grid-material-ui';\nimport { Paper } from '@material-ui/core/';\nimport {\n  PagingState,\n  CustomPaging,\n  SelectionState,\n  IntegratedSelection,\n  FilteringState,\n  IntegratedFiltering,\n  SortingState,\n  IntegratedSorting,\n  SearchState,\n  DataTypeProvider,\n} from '@devexpress/dx-react-grid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSearch,\n  faCheckSquare,\n  faSort,\n  faSortUp,\n  faSortDown,\n  faExclamationCircle,\n  faFileUpload,\n} from '@fortawesome/free-solid-svg-icons';\nimport { makeStyles } from '@material-ui/styles';\nimport * as MaterialUI from '@material-ui/core';\nimport moment from 'moment';\n//import { Components } from '@hims/core';\n//#endregion Global Imports\n\nlet radioSelected = false;\nlet selectedValue = '';\nlet clickCell = false;\nlet clickValue = {};\n\nconst cellSelectStyles = makeStyles({\n  select: {\n    backgroundColor: 'transparent',\n  },\n});\n\nconst textFieldStyles = makeStyles({\n  root: {\n    '& div.MuiInputBase-root': {\n      backgroundColor: 'transparent',\n    },\n  },\n});\n\nconst checkboxStyles = makeStyles({\n  root: {\n    '&.Mui-checked': {\n      color: '#3AB77D',\n    },\n  },\n});\n\nconst Select = ({ id, value, items }: any) => {\n  const cellSelectClasses = cellSelectStyles();\n  return (\n    <MaterialUI.Select\n      id={id}\n      classes={cellSelectClasses}\n      value={value}\n      style={{ width: '100%', backgroundColor: 'transparent' }}\n      renderValue={(selected: any) => {\n        if (selected !== null) {\n          const value: any = items.find((item: any) => {\n            return item.value === selected;\n          });\n          if (value) {\n            return value.name;\n          } else {\n            return '—';\n          }\n        }\n        return '—';\n      }}\n    >\n      {items.map((item: any) => (\n        <MaterialUI.MenuItem key={item.value} value={item.value}>\n          {item.name}\n        </MaterialUI.MenuItem>\n      ))}\n    </MaterialUI.Select>\n  );\n};\n\nconst TableFilterCell = ({\n  filter,\n  onFilter,\n  filteringEnabled,\n  classes,\n}: any) => {\n  if (filteringEnabled) {\n    return (\n      <MaterialUI.TableCell\n        style={{ padding: '0px 10px 8px 10px' }}\n        classes={classes}\n      >\n        <MaterialUI.OutlinedInput\n          classes={classes}\n          style={{ width: '100%' }}\n          value={filter ? filter.value : ''}\n          labelWidth={0}\n          onChange={e =>\n            onFilter(e.target.value ? { value: e.target.value } : null)\n          }\n          placeholder=\"\"\n        />\n      </MaterialUI.TableCell>\n    );\n  } else {\n    // return null;\n    return (\n      <MaterialUI.TableCell\n        style={{ padding: '0px 10px 8px 10px' }}\n        classes={classes}\n      ></MaterialUI.TableCell>\n    );\n  }\n};\n\nconst TableRadio = ({\n  style,\n  selected,\n  onToggle,\n  classes,\n  ...restProps\n}: any) => {\n  return (\n    <MaterialUI.TableCell\n      padding=\"checkbox\"\n      style={style}\n      classes={classes}\n      {...restProps}\n    >\n      <MaterialUI.Radio\n        classes={classes}\n        checked={selected}\n        onClick={e => {\n          e.stopPropagation();\n          onToggle();\n        }}\n      />\n    </MaterialUI.TableCell>\n  );\n};\n\nconst TableCheckBox = ({\n  style,\n  selected,\n  onToggle,\n  classes,\n  ...restProps\n}: any) => {\n  return (\n    <MaterialUI.TableCell\n      padding=\"checkbox\"\n      style={style}\n      classes={classes}\n      {...restProps}\n    >\n      <MaterialUI.Checkbox\n        icon={<FontAwesomeIcon icon={faCheckSquare} />}\n        checkedIcon={<FontAwesomeIcon icon={faCheckSquare} />}\n        classes={classes}\n        checked={selected}\n        onClick={e => {\n          e.stopPropagation();\n          onToggle();\n        }}\n      />\n    </MaterialUI.TableCell>\n  );\n};\n\nconst TableSearchPanel = ({ value, onValueChange }: any) => {\n  return (\n    <MaterialUI.OutlinedInput\n      value={value ? value : ''}\n      labelWidth={0}\n      onChange={e => onValueChange(e.target.value ? e.target.value : null)}\n      placeholder=\"Search a benefit or benefit category\"\n      fullWidth\n      startAdornment={\n        <MaterialUI.InputAdornment position=\"start\">\n          <FontAwesomeIcon icon={faSearch} />\n        </MaterialUI.InputAdornment>\n      }\n    />\n  );\n};\n\nconst DefaultTableToolbar = ({ children }: any) => {\n  return <MaterialUI.Toolbar disableGutters={true} children={children} />;\n};\n\nconst SortingIcon = ({ direction }: any) =>\n  direction === 'asc' ? (\n    <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortUp} />\n  ) : (\n    <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortDown} />\n  );\n\nconst TableSortLabel = ({ column, onSort, children, direction }: any) => {\n  if (\n    column.sortingEnabled !== undefined &&\n    column.sortingEnabled !== null &&\n    column.sortingEnabled === false\n  ) {\n    return <span>{column.title}</span>;\n  } else {\n    return (\n      <MaterialUI.TableSortLabel hideSortIcon={true} onClick={onSort}>\n        {children}\n        {direction ? (\n          <SortingIcon direction={direction} />\n        ) : (\n          <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSort} />\n        )}\n      </MaterialUI.TableSortLabel>\n    );\n  }\n};\n\nconst EmptyCellFormatter = ({ value }: any) => {\n  if (value === '' || value === undefined || value === null) {\n    return (\n      <FontAwesomeIcon\n        style={{ color: '#FD5451', fontSize: '16px' }}\n        icon={faExclamationCircle}\n      />\n    );\n  } else {\n    return value;\n  }\n};\n\nconst EmptyCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={EmptyCellFormatter} {...props} />\n);\n\nconst RequiredFormatter = ({ row, value }: any) => {\n  if (\n    row['required'] === true &&\n    (value === '' || value === undefined || value === null)\n  ) {\n    return (\n      <FontAwesomeIcon\n        style={{ color: '#FD5451', fontSize: '16px' }}\n        icon={faExclamationCircle}\n      />\n    );\n  } else if (\n    row['required'] === false &&\n    (value === '' || value === undefined || value === null)\n  ) {\n    return 'N/A';\n  } else {\n    return value;\n  }\n};\n\nconst RequiredDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={RequiredFormatter} {...props} />\n);\n\nconst RequiredCheckboxFormatter = ({ column, row, value }: any) => {\n  const classes = checkboxStyles();\n  return (\n    <div>\n      <MaterialUI.FormControlLabel\n        control={\n          <MaterialUI.Checkbox\n            checked={value === true || value === 'true' ? true : false}\n            value={value}\n            style={{ padding: '5px' }}\n            className={classes.root}\n            color=\"primary\"\n            onChange={e => {\n              clickCell = true;\n              clickValue = {\n                value: e.target.checked,\n                name: column['name'],\n                id: row['id'],\n              };\n            }}\n          />\n        }\n        label=\"\"\n      />\n    </div>\n  );\n};\n\nconst RequiredCheckboxDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={RequiredCheckboxFormatter} {...props} />\n);\n\nconst UploadFileFormatter = ({ column, row }: any) => {\n  const id: string = column['name'] + '_' + row['id'];\n  return (\n    <div\n      id={id}\n      onClick={e => {\n        // e.stopPropagation();\n        console.log('e>', e);\n      }}\n    >\n      <MaterialUI.Typography color=\"textPrimary\" style={{ paddingTop: '5px' }}>\n        <span>\n          <span style={{ paddingRight: '10px', fontSize: '15px' }}>\n            <FontAwesomeIcon icon={faFileUpload} style={{ color: '#0D5E40' }} />\n          </span>\n          <span style={{ textDecoration: 'underline', color: '#0D5E40' }}>\n            Upload File\n          </span>\n        </span>\n      </MaterialUI.Typography>\n    </div>\n  );\n};\n\nconst UploadFileDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={UploadFileFormatter} {...props} />\n);\n\nconst DisapproveRadioFormatter = ({ value }: any) => {\n  const items = [\n    { value: 'approve', label: 'Approve' },\n    { value: 'for confirmation', label: 'For Confirmation' },\n  ];\n  return (\n    <div>\n      <MaterialUI.RadioGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={value}\n        onChange={e => {\n          e.stopPropagation();\n          radioSelected = true;\n          selectedValue = e.target.value;\n        }}\n        row\n      >\n        {items.map((item: any, cnt: number) => (\n          <MaterialUI.FormControlLabel\n            key={cnt}\n            value={item.value}\n            control={<MaterialUI.Radio color=\"primary\" />}\n            label={item.label}\n            labelPlacement=\"end\"\n          />\n        ))}\n      </MaterialUI.RadioGroup>\n    </div>\n  );\n};\n\nconst DisapproveRadioDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={DisapproveRadioFormatter} {...props} />\n);\n\nconst IncompleteRadioFormatter = ({ value }: any) => {\n  const items = [\n    { value: 'approve', label: 'Approve' },\n    { value: 'disapprove', label: 'Disapprove' },\n    { value: 'for confirmation', label: 'For Confirmation' },\n  ];\n  return (\n    <div>\n      <MaterialUI.RadioGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={value}\n        onChange={e => {\n          e.stopPropagation();\n          radioSelected = true;\n          selectedValue = e.target.value;\n        }}\n        row\n      >\n        {items.map((item: any, cnt: number) => (\n          <MaterialUI.FormControlLabel\n            key={cnt}\n            value={item.value}\n            control={<MaterialUI.Radio color=\"primary\" />}\n            label={item.label}\n            labelPlacement=\"end\"\n            onClick={e => {\n              radioSelected = true;\n              console.log('radio button label onclick', e);\n            }}\n            onChange={e => {\n              radioSelected = true;\n              // selectedValue = e.target.value;\n              console.log('radio button label onchange', e);\n            }}\n          />\n        ))}\n      </MaterialUI.RadioGroup>\n    </div>\n  );\n};\n\nconst IncompleteRadioDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={IncompleteRadioFormatter} {...props} />\n);\n\nconst RadioNameFormatter = ({ value }: any) => {\n  const items = [\n    { value: 'match', label: 'Match' },\n    { value: 'not', label: 'Not Match' },\n    { value: 'confirmation', label: 'For Confirmation' },\n  ];\n  console.log('Radio group value: ', value);\n  return (\n    <div>\n      <MaterialUI.RadioGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={value}\n        onChange={e => {\n          e.stopPropagation();\n          radioSelected = true;\n          selectedValue = e.target.value;\n        }}\n        row\n      >\n        {items.map((item: any, cnt: number) => (\n          <MaterialUI.FormControlLabel\n            key={cnt}\n            value={item.value}\n            control={<MaterialUI.Radio color=\"primary\" />}\n            label={item.label}\n            labelPlacement=\"end\"\n            onClick={e => {\n              radioSelected = true;\n              console.log('radio button label onclick', e);\n            }}\n            onChange={e => {\n              radioSelected = true;\n              // selectedValue = e.target.value;\n              console.log('radio button label onchange', e);\n            }}\n          />\n        ))}\n      </MaterialUI.RadioGroup>\n    </div>\n  );\n};\n\nconst RadioDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={RadioNameFormatter} {...props} />\n);\n\nconst ValuesNameFormatter = ({ value }: any) => {\n  const items = [\n    { name: '', value: '' },\n    { name: 'Married', value: 'married' },\n    { name: 'Single', value: 'single' },\n    { name: 'Widowed', value: 'widowed' },\n    { name: 'Annulled', value: 'annulled' },\n  ];\n  return <Select items={items} value={value} />;\n};\n\nconst ValuesNameDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={ValuesNameFormatter} {...props} />\n);\n\nconst SystemNameFormatter = ({ value }: any) => {\n  const items = [\n    { name: 'First Name', value: 'first_name' },\n    { name: 'Middle Name', value: 'middle_name' },\n    { name: 'Last Name', value: 'last_name' },\n    { name: 'Birthday', value: 'birthday' },\n    { name: 'Civil Status', value: 'civil_status' },\n    { name: 'Gender', value: 'gender' },\n    { name: 'Plan Type', value: 'plan_type' },\n    { name: 'Type', value: 'type' },\n  ];\n\n  return <Select items={items} value={value} />;\n};\n\nconst SystemNameDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={SystemNameFormatter} {...props} />\n);\n\nconst DataFormatter = ({ value }: any) => {\n  const items = [\n    { name: 'Civil Status', value: 'civil_status' },\n    { name: 'Gender', value: 'gender' },\n  ];\n  return <Select items={items} value={value} />;\n};\n\nconst DataDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={DataFormatter} {...props} />\n);\n\nconst NumberFormatter = ({ value }: any) => {\n  const textFieldClasses = textFieldStyles();\n  return (\n    <MaterialUI.TextField\n      value={value}\n      type={'number'}\n      classes={textFieldClasses}\n    />\n  );\n};\n\nconst NumberDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={NumberFormatter} {...props} />\n);\n\nconst TextFormatter = ({ value }: any) => {\n  const textFieldClasses = textFieldStyles();\n  return <MaterialUI.TextField value={value} classes={textFieldClasses} />;\n};\n\nconst TextDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={TextFormatter} {...props} />\n);\n\nconst DateFormatter = ({ value }: any) => {\n  let text = value;\n  if (text) {\n    try {\n      text = moment(value).format('MMM DD, YYYY');\n    } catch (error) {\n      text = value;\n    }\n  } else {\n    text = '';\n  }\n\n  return text;\n};\n\nconst DateCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={DateFormatter} {...props} />\n);\n\nconst TimeFormatter = ({ value }: any) => {\n  let text = value;\n  if (text) {\n    try {\n      text = moment(value).format('hh:mm:ss A');\n    } catch (error) {\n      text = value;\n    }\n  } else {\n    text = '';\n  }\n\n  return text;\n};\n\nconst TimeCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={TimeFormatter} {...props} />\n);\n\ninterface TableComponentProps {\n  rows: any[];\n  columns: any[];\n  columnFilteringEnabled?: boolean;\n  columnExtensions?: any[];\n  filterExtensions?: any[];\n  formattedColumns?: any;\n  columnBands?: any[] | null;\n  singleSelect?: boolean;\n  disableSearch?: boolean;\n  disablePaging?: boolean;\n  disableSelect?: boolean;\n  disableFilter?: boolean;\n  disableSort?: boolean;\n  showSelectionColumn?: boolean;\n  toolbarType?: string | null;\n  topBar?: () => JSX.Element;\n  id: string;\n  totalCount: number;\n  message: string;\n  defaultFilter?: any[];\n  update: (skip: number, limit: number) => void;\n  updateSorting: (sort: object) => void;\n  onClickRow: (row: number[]) => void;\n  onSelectedRadio?: (row: number, value: string) => void;\n  onFilterChange?: (response: any) => void;\n  onSortingChange?: (response: any) => void;\n  onClickCell?: (row: any) => void;\n  onPageChange: (currentPage: any, skip: any) => void;\n  ongPageSizeChange: (value: number) => void;\n  defaultSort?: any[];\n  query?: string;\n  currentPage: number;\n  limit: number;\n}\n\nexport const TableComponent: React.FC<TableComponentProps> = (\n  props: TableComponentProps,\n): JSX.Element => {\n  const {\n    columns,\n    formattedColumns,\n    singleSelect,\n    disablePaging,\n    disableSearch,\n    disableSelect,\n    disableSort,\n    disableFilter,\n    toolbarType,\n    columnExtensions,\n    columnBands,\n    id,\n    showSelectionColumn,\n    query,\n    totalCount,\n    currentPage,\n    limit\n  } = props;\n  const [selection, setSelection] = useState<number[]>([]);\n  const [pageSizes] = useState([10, 25, 50, 100, 0]);\n  const [sorting, setSorting] = useState([]);\n  const [rows, setRows] = useState(props.rows);\n  useEffect(() => {\n    setRows(props.rows);\n  }, [props.rows]); \n\n  const dataTypeProviders: any[] = [];\n\n  const changePageSize = (value) => {\n    // props.update(currentPage, value);\n    props.ongPageSizeChange(value);\n  }\n\n  const setCurrentPageMethod = (page) => {\n    let skip = (limit * page);\n\n    props.onPageChange(page, skip);\n  }\n\n  const setSortingMethod = (e) => {\n    props.updateSorting(e);\n    setSorting(e);\n    setRows([]);\n  }\n\n  function handleSelectionChange(newSelection: any[]) {\n    console.log('here click row');\n    if (props.onClickRow) {\n      // selectedRow = newSelection[0];\n      if (!radioSelected && !clickCell) {\n        console.log('onclickrow');\n        props.onClickRow(newSelection);\n      } else if (radioSelected) {\n        console.log('radioselected', newSelection);\n        if (props.onSelectedRadio)\n          props.onSelectedRadio(newSelection[0], selectedValue);\n        radioSelected = false;\n      } else if (clickCell) {\n        console.log(' here !!! >>>', props.onClickCell);\n        if (props.onClickCell) props.onClickCell(clickValue);\n        clickCell = false;\n        clickValue = {};\n      }\n    } else {\n      if (singleSelect) {\n        const lastSelected = newSelection.find(\n          (selected: number) => selection.indexOf(selected) === -1,\n        );\n\n        console.log(newSelection, selection, lastSelected);\n        if (lastSelected !== undefined) {\n          setSelection([lastSelected]);\n        }\n      } else {\n        setSelection(newSelection);\n      }\n    }\n  }\n  if (\n    formattedColumns !== undefined &&\n    Object.keys(formattedColumns).length > 0\n  ) {\n    if (formattedColumns['number'] !== undefined) {\n      dataTypeProviders.push(\n        <NumberDataTypeProvider for={formattedColumns.number} />,\n      );\n    }\n    if (formattedColumns['text'] !== undefined) {\n      dataTypeProviders.push(\n        <TextDataTypeProvider for={formattedColumns.text} />,\n      );\n    }\n    if (formattedColumns['system_name'] !== undefined) {\n      dataTypeProviders.push(\n        <SystemNameDataTypeProvider for={formattedColumns.system_name} />,\n      );\n    }\n    if (formattedColumns['data_name'] !== undefined) {\n      dataTypeProviders.push(\n        <DataDataTypeProvider for={formattedColumns.data_name} />,\n      );\n    }\n    if (formattedColumns['value_name'] !== undefined) {\n      dataTypeProviders.push(\n        <ValuesNameDataTypeProvider for={formattedColumns.value_name} />,\n      );\n    }\n    if (formattedColumns['required_columns'] !== undefined) {\n      dataTypeProviders.push(\n        <EmptyCellDataTypeProvider for={formattedColumns.required_columns} />,\n      );\n    }\n    if (formattedColumns['radio'] !== undefined) {\n      dataTypeProviders.push(\n        <RadioDataTypeProvider for={formattedColumns.radio} />,\n      );\n    }\n    if (formattedColumns['incomplete_radio'] !== undefined) {\n      dataTypeProviders.push(\n        <IncompleteRadioDataTypeProvider\n          for={formattedColumns.incomplete_radio}\n        />,\n      );\n    }\n    if (formattedColumns['disapprove_action'] !== undefined) {\n      dataTypeProviders.push(\n        <DisapproveRadioDataTypeProvider\n          for={formattedColumns.disapprove_action}\n        />,\n      );\n    }\n    if (formattedColumns['required_checkbox'] !== undefined) {\n      dataTypeProviders.push(\n        <RequiredCheckboxDataTypeProvider\n          for={formattedColumns.required_checkbox}\n        />,\n      );\n    }\n    if (formattedColumns['upload_file'] !== undefined) {\n      dataTypeProviders.push(\n        <UploadFileDataTypeProvider\n          for={formattedColumns.upload_file}\n          {...props}\n        />,\n      );\n    }\n    if (formattedColumns['required_cell'] !== undefined) {\n      dataTypeProviders.push(\n        <RequiredDataTypeProvider\n          for={formattedColumns.required_cell}\n          {...props}\n        />,\n      );\n    }\n    if (formattedColumns['date'] !== undefined) {\n      dataTypeProviders.push(\n        <DateCellDataTypeProvider for={formattedColumns.date} />,\n      );\n    }\n    if (formattedColumns['time'] !== undefined) {\n      dataTypeProviders.push(\n        <TimeCellDataTypeProvider for={formattedColumns.time} />,\n      );\n    }\n  }\n\n  let toolbar = DefaultTableToolbar;\n\n  return (\n    <Paper id={id}>\n      {props.topBar ? props.topBar() : null}\n      <Grid rows={rows} columns={columns}>\n        {dataTypeProviders}\n        {/* Need to initialize paging state before paging panel */}\n        {!disablePaging ? (\n          <PagingState\n            currentPage={currentPage}\n            onCurrentPageChange={setCurrentPageMethod}\n            pageSize={limit}\n            onPageSizeChange={changePageSize}\n          />\n        ) : null}\n\n        {!disablePaging ? <CustomPaging totalCount={totalCount} /> : null}\n\n        {!disableSearch || query ? <SearchState value={query} /> : null}\n\n        {!disableSort ? (//&& props.defaultSort !== undefined ? (\n          <SortingState\n            defaultSorting={[]}\n            sorting={sorting}\n            onSortingChange={setSortingMethod}\n          />\n        ) : !disableSort ? (\n          <SortingState\n            defaultSorting={[]}\n          />\n        ) : null}\n\n        {!disableSort ? <IntegratedSorting /> : null}\n\n        {!disableSelect || !showSelectionColumn ? (\n          <SelectionState\n            selection={selection}\n            onSelectionChange={handleSelectionChange}\n          />\n        ) : null}\n        {!disableSelect ? <IntegratedSelection /> : null}\n\n        {!disableFilter ? (\n          <FilteringState\n            defaultFilters={[]}\n            filters={\n              props.defaultFilter !== undefined ? props.defaultFilter : []\n            }\n            columnFilteringEnabled={props.columnFilteringEnabled}\n            columnExtensions={props.filterExtensions}\n            onFiltersChange={props.onFilterChange}\n          />\n        ) : null}\n\n        {!disableFilter ? <IntegratedFiltering /> : null}\n\n        <Table\n          columnExtensions={columnExtensions}\n          messages={{ noData: props.message }}\n        />\n\n        {!disableSelect && !showSelectionColumn ? (\n          <TableSelection\n            showSelectAll={!singleSelect ? true : false}\n            cellComponent={!singleSelect ? TableCheckBox : TableRadio}\n            headerCellComponent={TableCheckBox}\n          />\n        ) : !showSelectionColumn ? (\n          <TableSelection\n            selectByRowClick\n            showSelectionColumn={false}\n            cellComponent={!singleSelect ? TableCheckBox : TableRadio}\n            headerCellComponent={TableCheckBox}\n          />\n        ) : null}\n\n        <TableHeaderRow\n          showSortingControls={!disableSort}\n          sortLabelComponent={TableSortLabel}\n        />\n        {!disableFilter ? (\n          <TableFilterRow cellComponent={TableFilterCell} />\n        ) : null}\n        {columnBands ? <TableBandHeader columnBands={columnBands} /> : null}\n\n        {!disableSearch || toolbarType ? (\n          <Toolbar rootComponent={toolbar} />\n        ) : null}\n        {!disableSearch ? (\n          <SearchPanel inputComponent={TableSearchPanel} />\n        ) : null}\n\n        {!disablePaging ? <PagingPanel pageSizes={pageSizes} /> : null}\n      </Grid>\n    </Paper>\n  );\n};\n\nTableComponent.defaultProps = {\n  rows: [],\n  columns: [],\n  columnExtensions: [],\n  filterExtensions: [],\n  columnBands: null,\n  formattedColumns: {},\n  singleSelect: false,\n  disableSearch: false,\n  disablePaging: false,\n  disableSelect: false,\n  disableFilter: false,\n  disableSort: false,\n  toolbarType: null,\n  defaultFilter: [],\n  showSelectionColumn: false,\n  columnFilteringEnabled: true,\n  id: 'table-1',\n  totalCount: 0,\n  message: 'No available data',\n  query: '',\n  currentPage: 0,\n  limit: 0\n};\n","import Fetch, { requestOption } from '../index'\n\nconst fetch = new Fetch();\nfetch.getAccessToken();\n\nexport const getICD = (limit: number, skip: number) => {\n\n    let filters = {\n        limit: limit,\n        skip: skip,\n      };\n    let option: requestOption = {\n        method: 'GET'\n    }\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `icd10-codes/search?filter=${JSON.stringify(filters)}`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `icd10-codes/search?filter=${JSON.stringify(filters)}`, true))\n}\n\nexport const searchICD = (limit: number, offset: number, filters: any, query: string, sorting?: any, key?: string,) => {\n\n    let filter_key_str = '';\n    if (key !== undefined && key !== '' && key.length > 5) {\n      filter_key_str = '&key=' + key;\n    }\n    let sorting_str = '';\n    if (sorting && sorting.length !== 0) {\n      sorting_str =\n        '&filter[order]=' +\n        sorting[0]['columnName'] +\n        ' ' +\n        sorting[0]['direction'];\n    }\n    let filter_str = '';\n    if (filters) {\n      filters.forEach(filter => {\n        filter_str =\n          filter_str + '&' + filter['columnName'] + '=' + filter['value'];\n      });\n    }\n    let search = query ? '&search=' + query : '';\n    let ICD_URL =\n      `icd10-codes/search?filter[limit]=${limit}&filter[skip]=${offset}` +\n      search +\n      filter_str +\n      sorting_str +\n      filter_key_str;\n    if (limit === 0)\n        ICD_URL =\n        `icd10-codes/search?filter[skip]=${offset}` +\n        search +\n        filter_str +\n        sorting_str +\n        filter_key_str;\n    let option: requestOption = {\n        method: 'GET'\n    }\n \n    if(fetch.getAccessToken()){\n        return fetch.call(option, ICD_URL, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, ICD_URL, true))\n}\n\nexport const addICD10Codes = (payload: any) => {\n\n    let option: requestOption = {\n        method: 'POST',\n        body: payload\n    }\n\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `icd10-codes/multiple`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `icd10-codes/multiple`, true))\n}\n\nexport const editICD = (payload: any, id: string) => {\n\n    let option: requestOption = {\n        method: 'PUT',\n        body: payload\n    }\n\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `icd10-codes/edit/${id}`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `icd10-codes/edit/${id}`, true))\n}\n\nexport const deleteICD = (id: string) => {\n\n    let option: requestOption = {\n        method: 'DELETE'\n    }\n\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `icd10-codes/${id}`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `icd10-codes/${id}`, true))\n}","import React, { FC } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { IConfirmationModal } from './IConfirmationModal';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tdialog: {},\n\tdialogAction: {\n\t\tmarginBottom: theme.spacing(2),\n\t},\n}));\n\nexport const ConfirmationModal: FC<IConfirmationModal.IProps> = props => {\n\tconst classes = useStyles();\n\tconst reset = () => {};\n\n\tconst handleCancel = () => {\n\t\treset();\n\t\tprops.onClose(true);\n\t}\n\n\tconst handleClose = () => {\n\t\treset();\n\t\tprops.onClose();\n\t};\n\n\tconst handleSubmit = () => {\n\t\treset();\n\t\tprops.onSubmit();\n\t\tprops.onClose();\n\t};\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={props.isModalOpen}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\tmaxWidth=\"sm\"\n\t\t\tclassName={classes.dialog}\n\t\t>\n\t\t\t<DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"flex-start\">\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t{props.message}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions className={clsx(classes.dialogAction)}>\n\t\t\t\t<Grid container spacing={2} justify=\"center\" alignItems=\"flex-start\">\n\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t<Button onClick={handleCancel} variant=\"outlined\" color=\"default\" fullWidth>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{props.submitType === 'submit' ? 'Submit' : 'Confirm'}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n\nConfirmationModal.defaultProps = {\n\tisModalOpen: false,\n};\n\nexport default ConfirmationModal;","import React from 'react';\nimport { TableComponent } from 'Components/UI/TableComponent/CodeListTable';\nimport {\n  TextField,\n  InputAdornment,\n  Grid,\n  List,\n  ListItemText,\n} from '@material-ui/core';\nimport { Search } from '@material-ui/icons/';\nimport { Loader } from '../Loader';\nimport Link from '@material-ui/core/Link';\nimport { GridHorizontalDivider } from 'Components/UI';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { SideModalBlock } from 'Components/UI';\nimport { SideModalBody } from 'Components/UI';\nimport { MsgModal } from 'Components/UI';\nimport moment from 'moment';\nimport { \n  getICD,\n  searchICD,\n  addICD10Codes,\n  editICD,\n  deleteICD\n } from 'Pages/API/Calls/ICD10'\nimport { ConfirmationModal } from '../ConfirmationModal'\n\nlet list_values = {\n  'A00-B99': 'Certain infectious and parasitic diseases',\n  'C00-D49': 'Neoplasms',\n  'D50-D89':\n    'Diseases of the blood and blood-forming organs and certain disorders involving the immune mechanism',\n  'E00-E89': 'Endocrine, nutritional and metabolic diseases',\n  'F01-F99': 'Mental, Behavioral and Neurodevelopmental disorders',\n  'G00-G99': 'Diseases of the nervous system',\n  'H00-H59': 'Diseases of the eye and adnexa',\n  'H60-H95': 'Diseases of the ear and mastoid process',\n  'I00-I99': 'Diseases of the circulatory system',\n  'J00-J99': 'Diseases of the respiratory system',\n  'K00-K95': 'Diseases of the digestive system',\n  'L00-L99': 'Diseases of the skin and subcutaneous tissue',\n  'M00-M99': 'Diseases of the musculoskeletal system and connective tissue',\n  'N00-N99': 'Diseases of the genitourinary system',\n  'O00-O9A': 'Pregnancy, childbirth and the puerperium',\n  'P00-P96': 'Certain conditions originating in the perinatal period',\n  'Q00-Q99':\n    'Congenital malformations, deformations and chromosomal abnormalities',\n  'R00-R99':\n    'Symptoms, signs and abnormal clinical and laboratory findings, not elsewhere classified',\n  'S00-T88':\n    'Injury, poisoning and certain other consequences of external causes',\n  'V00-Y99': 'External causes of morbidity',\n  'Z00-Z99':\n    'Factors influencing health status and contact with health services',\n};\n\ninterface IState {\n  confirm_modal_title: string;\n  confirm_modal_message: string;\n  confirm_modal_open: boolean;\n  action_after_confirm: () => void;\n  invalid_fields: any[];\n  loading_state: boolean;\n  block_title?: string;\n  show_side_modal_block?: string;\n  side_modal_block_mode?: string;\n  code_info?: any;\n  code_list: any;\n  code_data_all: any;\n  code_data: any;\n  selected_date_filter: any;\n  selected_start_date: any;\n  selected_end_date: any;\n  global_filter: string;\n  default_filters: any;\n  default_sorting: any;\n  default_clicked: string;\n  isModalOpen: boolean;\n  modalTitle: string;\n  modalMessage: string;\n  action_after_info: () => void;\n  totalCount: any;\n  typing: boolean;\n  typingTimeout: any;\n  page: number;\n  limit: number;\n  isPageSizeModal: boolean;\n  clickedCodeFromList: number;\n  init_expiry_date: Date | null;\n  no_data_message: 'Searching for ICD10 codes' | 'No available data' | '';\n}\n\ninterface IProps{\n  classes : any\n}\n\nexport class ICD10Section extends React.Component<\n  IProps,\n  IState,\n  any\n  > {\n  constructor(props) {\n    super(props);\n\n    const table: any = {\n      formattedColumns: {},\n      columnExtensions: [\n        {\n          columnName: 'full_code',\n          width: 150,\n          wordWrapEnabled: true,\n        },\n        {\n          columnName: 'full_description',\n          width: 500,\n          wordWrapEnabled: true,\n        },\n      ],\n      columns: [\n        {\n          name: 'full_code',\n          title: 'ICD10 Code',\n        },\n        {\n          name: 'full_description',\n          title: 'Description',\n        },\n      ],\n      rows: [],\n    };\n\n    this.state = {\n      no_data_message: '',\n      init_expiry_date: null,\n      confirm_modal_title: '',\n      confirm_modal_message: '',\n      confirm_modal_open: false,\n      action_after_confirm: () => { },\n      invalid_fields: [],\n      clickedCodeFromList: -1,\n      loading_state: true,\n      code_list: [],\n      code_info: undefined,\n      show_side_modal_block: 'none',\n      side_modal_block_mode: '',\n      code_data: table,\n      code_data_all: table,\n      block_title: '',\n      selected_date_filter: {\n        id: '',\n        value: 'This Month',\n        label: 'This Month',\n      },\n      selected_start_date: new Date(),\n      selected_end_date: new Date(),\n      global_filter: '',\n      default_filters: [],\n      default_sorting: [],\n      default_clicked: '',\n      isModalOpen: false,\n      isPageSizeModal: false,\n      modalTitle: '',\n      modalMessage: '',\n      action_after_info: () => { },\n      totalCount: 0,\n      typing: false,\n      typingTimeout: 0,\n      page: 0,\n      limit: 10,\n    };\n  }\n\n  componentDidMount() {\n    this.initialData();\n    document.addEventListener('keydown', this.escFunction, false);\n  }\n\n  escFunction = (event) =>{\n    if(event.keyCode === 27) {\n      this.handleCloseSideModalBlock()\n    }\n  }\n\n  initialData = () => {\n    this.setState({ no_data_message : 'Searching for ICD10 codes'})\n    getICD(10, 0).then(response => {\n      this.setState({ no_data_message : 'No available data'})\n      // console.log('RESP', response)\n      if (response && response.error === undefined) {\n        const table = this.generateDataForTable(\n          response.result ? response.result : response,\n        );\n        this.setState({\n          code_list: response,\n          code_data_all: table,\n          code_data: table,\n          loading_state: false,\n          totalCount:\n            response.total && response.total.count ? response.total.count : 50,\n          page: 0,\n          limit: 10,\n        });\n      } else if(response && response.error && response.error.statusCode === 401){\n        const table = this.generateDataForTable([]);\n        this.setState({\n          code_list: [],\n          code_data_all: table,\n          loading_state: false,\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to view ICD10 codes.',\n          page: 0,\n        });\n      } \n      else {\n        const table = this.generateDataForTable([]);\n        this.setState({\n          code_list: [],\n          code_data_all: table,\n          loading_state: false,\n          isModalOpen: true,\n          modalTitle: 'Loading failed',\n          modalMessage: 'An error occured while loading the list of codess.',\n          page: 0,\n        });\n      }\n    }).catch( () =>{\n      const table = this.generateDataForTable([]);\n        this.setState({\n          code_list: [],\n          code_data_all: table,\n          loading_state: false,\n          isModalOpen: true,\n          modalTitle: 'Loading failed',\n          modalMessage: 'An error occured while loading the list of codesa.',\n          page: 0,\n        });\n    });\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /* CRUD FUNCTIONS */\n\n  patchICD = (data: any) => {\n\n    if(data['expiry_date'] === ''){\n      if(this.state.init_expiry_date !== null && this.state.init_expiry_date !== undefined){\n        data['expiry_date'] = this.state.init_expiry_date\n      }else{\n        delete data['expiry_date'];\n      }\n    }\n    if(data['status'] !== undefined){\n      delete data['status']\n    }\n\n    this.setState({\n      loading_state: true,\n      no_data_message: 'Searching for ICD10 codes'\n    })\n    editICD(JSON.stringify(data), data['_id']).then(response => {\n      this.setState({\n        loading_state: false,\n        no_data_message: 'No available data'\n      })\n      if (response && response.error === undefined && response.message !== undefined) {\n        this.changePageUpdate(this.state.limit, this.state.limit * this.state.page)\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Success',\n          modalMessage: `You have ${response.message} code!`\n        });\n      }else if(response && response.error && response.error.statusCode === 401) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to edit ICD10 codes.'\n        });\n      } else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while saving!'\n        });\n      }\n    }).catch(error => {\n      this.setState({\n        isModalOpen: true,\n        modalTitle: 'Failed',\n        modalMessage: 'Something went wrong while saving!'\n      });\n      this.setState({\n        loading_state: false\n      })\n      console.log('client error: ', error);\n    });\n  }\n\n\n\n  addICDCodes = (data: any) => {\n    let payload: any[] = [];\n    data['date_updated'] = moment(new Date()).format(moment.defaultFormat)\n    if(data['expiry_date'] === ''){\n      delete data['expiry_date'];\n    }\n    if(data['status'] !== undefined){\n      delete data['status']\n    }\n\n    if (!Array.isArray(data)) {\n      payload.push(data)\n    }\n    this.setState({\n      loading_state: true\n    })\n\n\n\n    addICD10Codes(JSON.stringify(payload)).then(response => {\n      this.setState({\n        loading_state: false\n      })\n      if (response && response.error === undefined && response.message && response.result) {\n        this.changePageUpdate(this.state.limit, this.state.limit * this.state.page)\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Success',\n          modalMessage: `You have successfully added ${response.result.length} ICD10 code/s!`\n        });\n      }else if(response && response.error && response.error.statusCode === 401) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to add ICD10 codes.'\n        });\n      } else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while adding!'\n        });\n      }\n    }).catch(error => {\n      this.setState({\n        isModalOpen: true,\n        modalTitle: 'Failed',\n        modalMessage: 'Something went wrong while adding!'\n      });\n      this.setState({\n        loading_state: false\n      })\n      console.log('client error: ', error);\n    });\n  }\n\n  deleteICD = (id: string) => {\n    if (!id) {\n      return\n    }\n    this.setState({ loading_state: true })\n    deleteICD(id).then(response => {\n      this.setState({\n        loading_state: false\n      })\n      this.changePageUpdate(this.state.limit, this.state.limit * this.state.page)\n      if (response && response.error && response.error.statusCode && response.error.statusCode !== 401) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while deleting ICD10 Code!'\n        });\n      }else if(response && response.error && response.error.statusCode === 401) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to delete ICD10 codes.'\n        });\n      }\n      else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Success',\n          modalMessage: 'You have successfully deleted an ICD10 code!'\n        });\n      }\n    }).catch(error => {\n      this.setState({\n        isModalOpen: true,\n        modalTitle: 'Failed',\n        modalMessage: 'Something went wrong while deleting ICD10 Code!'\n      });\n      this.setState({\n        loading_state: false\n      })\n      console.log('client error: ', error);\n    });\n  }\n\n\n\n\n\n\n\n\n\n\n  /* TABLE AND PAGE FUNCTIONS */\n\n  generateDataForTable(response: any) {\n    const table: any = {\n      formattedColumns: {},\n      columnExtensions: [\n        {\n          columnName: 'full_code',\n          width: 150,\n          wordWrapEnabled: true,\n        },\n        {\n          columnName: 'full_description',\n          width: 500,\n          wordWrapEnabled: true,\n        },\n      ],\n      columns: [\n        {\n          name: 'full_code',\n          title: 'ICD10 Code',\n        },\n        {\n          name: 'full_description',\n          title: 'Description',\n        },\n      ],\n      rows: [],\n    };\n    for (const cnt in response) {\n      const item = response[cnt];\n      const temp_row: any = {};\n      temp_row['full_code'] = item['full_code'];\n      temp_row['full_description'] = item['full_description'];\n      table['rows'].push(temp_row);\n    }\n\n    return table;\n  }\n\n  changePageUpdate = (limit: number, skip: number) => {\n    this.handleCloseSideModalBlock();\n    this.setState({\n      loading_state: true,\n       no_data_message : 'Searching for ICD10 codes'\n    });\n    if (\n      this.state.default_filters.length !== 0 ||\n      this.state.global_filter !== '' ||\n      this.state.default_sorting.length !== 0 ||\n      this.state.default_clicked !== ''\n    ) {\n      searchICD(\n        limit,\n        skip,\n        this.state.default_filters,\n        this.state.global_filter,\n        this.state.default_sorting,\n        this.state.default_clicked,\n      ).then(response => {\n        this.setState({ no_data_message : 'No available data'})\n        if (response && response.error === undefined) {\n          const table = this.generateDataForTable(\n            response.result ? response.result : response,\n          );\n          this.setState({\n            code_list: response,\n            code_data_all: table,\n            code_data: table,\n            loading_state: false,\n            totalCount:\n              response.total && response.total.count\n                ? response.total.count\n                : 50,\n          });\n        }else if(response && response.error && response.error.statusCode === 401){\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_list: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Unauthorized',\n            modalMessage: 'You are not authorized to view ICD10 codes.',\n          });\n        } else {\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_list: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Loading failed',\n            modalMessage: 'An error occured while loading the list of codes.',\n          });\n        }\n      });\n    } else {\n      this.setState({ no_data_message : 'Searching for ICD10 codes'})\n      getICD(limit, skip).then(response => {\n        this.setState({ no_data_message : 'No available data'})\n        // console.log('RESP', response)\n        if (response && response.error === undefined) {\n          const table = this.generateDataForTable(\n            response.result ? response.result : response,\n          );\n          this.setState({\n            code_list: response,\n            code_data_all: table,\n            code_data: table,\n            loading_state: false,\n            totalCount:\n              response.total && response.total.count\n                ? response.total.count\n                : 50,\n          });\n        }else if(response && response.error && response.error.statusCode === 401){\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_list: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Unauthorized',\n            modalMessage: 'You are not authorized to view ICD10 codes.',\n          });\n        } else {\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_list: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Loading failed',\n            modalMessage: 'An error occured while loading the list of codes.',\n          });\n        }\n      });\n    }\n  };\n\n  handleChangeSorting = (sorting: any) => {\n    this.setState({\n      loading_state: true,\n      no_data_message : 'Searching for ICD10 codes'\n    });\n    if (sorting && sorting.length > 0) {\n      searchICD(\n        this.state.limit,\n        this.state.page * this.state.limit,\n        this.state.default_filters,\n        this.state.global_filter,\n        sorting,\n        this.state.default_clicked,\n      ).then(response => {\n        this.setState({ no_data_message : 'No available data'})\n        if (response && response.error === undefined) {\n          const table = this.generateDataForTable(\n            response.result ? response.result : response,\n          );\n          this.setState({\n            code_list: response,\n            code_data_all: table,\n            code_data: table,\n            loading_state: false,\n            default_sorting: sorting,\n            totalCount:\n              response.total && response.total.count\n                ? response.total.count\n                : 50,\n          });\n        }else if(response && response.error && response.error.statusCode === 401){\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_list: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Unauthorized',\n            modalMessage: 'You are not authorized to view ICD10 codes.',\n          });\n        } else {\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_list: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Loading failed',\n            modalMessage: 'An error occured while loading the list of codes.',\n          });\n        }\n      });\n    }\n  };\n\n  handleFilterByColumn = (filter: any) => {\n    const self = this;\n\n    if (self.state.typingTimeout) {\n      clearTimeout(self.state.typingTimeout);\n    }\n\n    self.setState({\n      default_filters: filter,\n      typing: false,\n      page: 0,\n      typingTimeout: setTimeout(function () {\n        self.setState({\n          loading_state: true,\n          no_data_message: 'Searching for ICD10 codes'\n        });\n        if (self.state.default_filters !== 0) {\n          searchICD(\n            self.state.limit,\n            0,\n            filter,\n            self.state.global_filter,\n            self.state.default_sorting,\n            self.state.default_clicked,\n          ).then(response => {\n            self.setState({ no_data_message : 'No available data'})\n            if (response && response.error === undefined) {\n              const table = self.generateDataForTable(\n                response.result ? response.result : response,\n              );\n              self.setState({\n                code_list: response,\n                code_data_all: table,\n                code_data: table,\n                loading_state: false,\n                totalCount:\n                  response.total && response.total.count\n                    ? response.total.count\n                    : 50,\n              });\n            }else if(response && response.error && response.error.statusCode === 401){\n              const table = self.generateDataForTable([]);\n              self.setState({\n                code_list: [],\n                code_data_all: table,\n                loading_state: false,\n                isModalOpen: true,\n                modalTitle: 'Unauthorized',\n                modalMessage: 'You are not authorized to view ICD10 codes.',\n              });\n            } else {\n              const table = self.generateDataForTable([]);\n              self.setState({\n                code_list: [],\n                code_data_all: table,\n                loading_state: false,\n                isModalOpen: true,\n                modalTitle: 'Loading failed',\n                modalMessage:\n                  'An error occured while loading the list of codes.',\n              });\n            }\n          });\n        } else {\n          self.initialData();\n        }\n      }, 2000),\n    });\n  };\n\n  handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    const self = this;\n\n    if (self.state.typingTimeout) {\n      clearTimeout(self.state.typingTimeout);\n    }\n    self.setState({\n      global_filter: value,\n      typing: false,\n      page: 0,\n      typingTimeout: setTimeout(function () {\n        self.setState({\n          loading_state: true,\n          limit: 10,\n          no_data_message: 'Searching for ICD10 codes'\n        });\n        if (self.state.global_filter !== '') {\n          searchICD(\n            self.state.limit,\n            0,\n            self.state.default_filters,\n            self.state.global_filter,\n            self.state.default_sorting,\n            self.state.default_clicked,\n          ).then(response => {\n            self.setState({ no_data_message : 'No available data'})\n            if (response && response.error === undefined) {\n              const table = self.generateDataForTable(\n                response.result ? response.result : response,\n              );\n              self.setState({\n                code_list: response,\n                code_data_all: table,\n                code_data: table,\n                loading_state: false,\n                totalCount:\n                  response.total && response.total.count\n                    ? response.total.count\n                    : 50,\n                limit: 10,\n              });\n            }else if(response && response.error && response.error.statusCode === 401){\n              const table = self.generateDataForTable([]);\n              self.setState({\n                code_list: [],\n                code_data_all: table,\n                loading_state: false,\n                isModalOpen: true,\n                modalTitle: 'Unauthorized',\n                modalMessage: 'You are not authorized to view ICD10 codes.',\n              });\n            } else {\n              const table = self.generateDataForTable([]);\n              self.setState({\n                code_list: [],\n                code_data_all: table,\n                loading_state: false,\n                isModalOpen: true,\n                modalTitle: 'Loading failed',\n                modalMessage:\n                  'An error occured while loading the list of codes.',\n              });\n            }\n          });\n        } else {\n          self.initialData();\n        }\n      }, 2000),\n    });\n  };\n\n  handleClickRow = (row: any) => {\n    const { code_list } = this.state;\n\n    let data = {};\n    let status = 'Active';\n\n    if (code_list && code_list.result) {\n      if (\n        code_list.result[row]['expiry_date'] &&\n        moment(code_list.result[row]['expiry_date']).isValid() &&\n        moment(code_list.result[row]['expiry_date']).diff(new Date()) <= 0\n      ) {\n        status = 'Deactivated';\n      }\n      if(code_list.result[row]['expiry_date'] && moment(code_list.result[row]['expiry_date']).isValid()){\n        this.setState({\n          init_expiry_date : code_list.result[row]['expiry_date']\n        })\n      }else{\n        this.setState({\n          init_expiry_date : null\n        })\n      }\n      data = {\n        _id: code_list.result[row]['_id'],\n        full_code: code_list.result[row]['full_code'],\n        full_description: code_list.result[row]['full_description'],\n        category_title: code_list.result[row]['category_title'],\n        effectivity_date: code_list.result[row]['effectivity_date'],\n        expiry_date: code_list.result[row]['expiry_date'],\n        status: status,\n        date_updated: code_list.result[row]['date_updated'],\n      }\n    }\n\n    this.setState(\n      {\n        code_info: data,\n        block_title: data['full_code'] ? data['full_code'] : '',\n      },\n      () => {\n        this.handleChangeSideModalBlockMode('view');\n      },\n    );\n  };\n\n  handlePageChange = (currentPage: number, skip: number) => {\n    this.setState({\n      page: currentPage,\n    });\n\n    this.changePageUpdate(this.state.limit, skip);\n  };\n\n  handlePageSizeChange = value => {\n    let pageLimit = 100000;\n\n    if (this.state.totalCount >= pageLimit) {\n      this.setState({\n        isPageSizeModal: true,\n      });\n    } else {\n      this.setState({\n        limit: value,\n      });\n\n      this.changePageUpdate(value, value * this.state.page);\n    }\n  };\n\n  handleClickItemFromList = (key: string) => {\n    this.setState({\n      page: 0,\n      loading_state: true,\n      no_data_message: 'Searching for ICD10 codes'\n    });\n    if (key !== undefined) {\n      searchICD(\n        this.state.limit,\n        0,\n        this.state.default_filters,\n        this.state.global_filter,\n        this.state.default_sorting,\n        key,\n      ).then(response => {\n        this.setState({ no_data_message : 'No available data'})\n        if (response && response.error === undefined) {\n          const table = this.generateDataForTable(\n            response.result ? response.result : response,\n          );\n          this.setState({\n            code_list: response,\n            code_data_all: table,\n            code_data: table,\n            loading_state: false,\n            default_clicked: key,\n            totalCount:\n              response.total && response.total.count\n                ? response.total.count\n                : 50,\n          });\n        }else if(response && response.error && response.error.statusCode === 401){\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_list: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Unauthorized',\n            modalMessage: 'You are not authorized to view ICD10 codes.',\n          });\n        } else {\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_list: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Loading failed',\n            modalMessage: 'An error occured while loading the list of codes.',\n          });\n        }\n      });\n    }\n  };\n\n\n\n\n\n\n\n\n\n\n  /* ACTIONS / SIDE MODAL FUNCTIONS */\n\n  handleCloseSideModalBlock = () => {\n    this.setState({\n      show_side_modal_block: 'none',\n      side_modal_block_mode: '',\n      code_info: {},\n    });\n  };\n\n\n  handleChangeSideModalBlockMode = (value: string) => {\n    let title = '';\n    if (value && value === 'edit' && this.state.block_title) {\n      title = 'Edit ' + this.state.block_title;\n    } else if (value && value === 'view' && this.state.block_title) {\n      title = this.state.block_title;\n    } else if (value && value === 'add') {\n      title = 'Add ICD-10 Code';\n    }\n    this.setState(\n      {\n        side_modal_block_mode: value,\n        block_title: title,\n      },\n      () => {\n        this.handleOpenBlock();\n      },\n    );\n  };\n\n  handleOpenBlock = () => {\n    this.setState({\n      show_side_modal_block: 'block',\n    }, () => this.passDataToSideModalBlockBody());\n  };\n\n  handleInvalidFieldsPrompt = () => {\n    this.setState({\n      isModalOpen: true,\n      modalTitle: 'Incomplete/Invalid Fields',\n      modalMessage: 'Please complete the form before proceeding.',\n    })\n  }\n\n  passDataToSideModalBlockBody = () => {\n    // if (this.state.code_info.expiry_date === '' ||\n    //   this.state.code_info.expiry_date === undefined ||\n    //   this.state.code_info.expiry_date === null) {\n    //   this.state.code_info.expiry_date = new Date()\n    // }\n    // if (this.state.code_info.effectivity_date === '' ||\n    //   this.state.code_info.effectivity_date === undefined ||\n    //   this.state.code_info.effectivity_date === null) {\n    //   this.state.code_info.effectivity_date = new Date()\n\n    // }\n\n    this.setState({\n      code_info: this.state.code_info\n    });\n  };\n\n\n\n  handleConfirmationSubmit = (formFields?: any, checkInvalidFields?: any, excludeFields?: any) => {\n    this.setState({ loading_state: true })\n\n    if (formFields) {\n      let invalid_fields = this.getInvalidFields(formFields, checkInvalidFields, excludeFields);\n      if (!invalid_fields || invalid_fields.length === 0) {\n        if (this.state.side_modal_block_mode === 'edit') {\n          this.patchICD(formFields)\n        } else if (this.state.side_modal_block_mode === 'add') {\n          this.addICDCodes(formFields)\n        }\n      } else {\n        this.handleInvalidFieldsPrompt()\n      }\n    }\n  }\n\n  getInvalidFields = (formFields: any, checkInvalidFields?: any, excludeFields?: any) => {\n    let invalid_fields: any[] = [];\n    let exclude_fields = {}\n    if (excludeFields !== undefined) {\n      exclude_fields = excludeFields\n    }\n    Object.keys(formFields).forEach(field => {\n      if (checkInvalidFields !== undefined &&\n        checkInvalidFields.includes(field) &&\n        !Object.keys(exclude_fields).includes(field) &&\n        (formFields[field] === '' ||\n          formFields[field] === undefined ||\n          formFields[field] === null)) {\n        invalid_fields.push(field)\n\n      }\n    })\n    this.setState({ loading_state: false, invalid_fields: invalid_fields })\n    return invalid_fields\n  }\n\n\n\n  render(): JSX.Element {\n    const { classes } = this.props;\n\n    let codes = list_values\n      ? Object.keys(list_values).map(key => (\n        <ListItemText\n          key={key}\n          classes={{\n            root: classes.codeListItemsRoot,\n            primary:\n              this.state.clickedCodeFromList ===\n                Object.keys(list_values).indexOf(key)\n                ? classes.codeListItemsSelected\n                : classes.codeListItems,\n          }}\n          onClick={() => {\n            if (\n              Object.keys(list_values).indexOf(key) !==\n              this.state.clickedCodeFromList\n            ) {\n              this.setState({\n                clickedCodeFromList: Object.keys(list_values).indexOf(key),\n              });\n              this.handleClickItemFromList(key);\n            } else {\n              this.setState({\n                clickedCodeFromList: -1,\n              });\n              this.handleClickItemFromList('');\n            }\n          }}\n        >\n          <br />\n          {Object.keys(list_values).indexOf(key) + 1} {list_values[key]} (\n            {key})\n          </ListItemText>\n      ))\n      : [];\n\n\n    return (\n      <div>\n        {this.state.loading_state ? <Loader /> : null}\n        <SideModalBlock\n          blockPosition={'fixed'}\n          title={this.state.block_title}\n          editIconDescription={'Edit Code'}\n          showBlock={this.state.show_side_modal_block}\n          classes={classes}\n          handleClose={this.handleCloseSideModalBlock}\n          sideModalBlockMode={this.state.side_modal_block_mode}\n          changeMode={this.handleChangeSideModalBlockMode}\n\n        >\n          {this.state.side_modal_block_mode ? (\n            <SideModalBody\n              formFields={this.state.code_info}\n              invalidFields={this.state.invalid_fields}\n              classes={this.props.classes}\n              handleClose={this.handleCloseSideModalBlock}\n              refreshData={(data: any) => {\n                this.setState({ code_info: data })\n              }}\n              delete={(data: any) => {\n                if (this.state.side_modal_block_mode) {\n                  if (this.state.side_modal_block_mode === 'edit') {\n                    this.setState({\n                      confirm_modal_message: 'Are you sure you want to delete this ICD10 code?',\n                      confirm_modal_open: true,\n                      confirm_modal_title: 'Confirm delete ICD10 code',\n                      action_after_confirm: () => this.deleteICD(data['_id'])\n                    })\n                  }\n                }\n              }}\n              handleSave={(formFields?: any, checkInvalidFields?: any, excludeFields?: any) => {\n                if (this.state.side_modal_block_mode) {\n                  if (this.state.side_modal_block_mode === 'add') {\n                    this.setState({\n                      confirm_modal_message: 'Are you sure you want to add this ICD10 code?',\n                      confirm_modal_open: true,\n                      confirm_modal_title: 'Confirm add ICD10 code',\n                      action_after_confirm: () => this.handleConfirmationSubmit(formFields, checkInvalidFields, excludeFields)\n                    })\n                  } else if (this.state.side_modal_block_mode === 'edit') {\n                    this.setState({\n                      confirm_modal_message: 'Are you sure you want to edit this ICD10 code?',\n                      confirm_modal_open: true,\n                      confirm_modal_title: 'Confirm edit ICD10 code',\n                      action_after_confirm: () => this.handleConfirmationSubmit(formFields, checkInvalidFields, excludeFields)\n                    })\n                  }\n                }\n              }}\n              // deleteIcon={'Delete Code'}\n              formName={'ICD10'}\n              mode={this.state.side_modal_block_mode ? this.state.side_modal_block_mode : ''}\n            />\n          ) : null}\n        </SideModalBlock>\n\n        <Grid container>\n          <Grid container item xs={12} md={3}>\n            <Grid\n              container\n              className={classes.scrollList}\n              style={{ maxHeight: 715, overflow: 'auto' }}\n            >\n              <List>\n                <li key={'year-of-release'} className={classes.codeHeader}>\n                  YEAR OF RELEASE\n                </li>\n                <li\n                  key={'year-of-release-value'}\n                  className={classes.codeHeaderValue}\n                >\n                  2020\n                </li>\n                <ListItemText key={'effectivity-date'}>\n                  <div className={classes.codeHeader}>EFFECTIVITY DATE</div>\n                  <div className={classes.codeHeaderValue}>\n                    Jan 1, 2020\n                  </div>\n                </ListItemText>\n                {codes}\n              </List>\n            </Grid>\n          </Grid>\n\n          <Grid container item xs={12} md={9} className={classes.selectedpage}>\n            <Grid container>\n              <Grid item xs={12} md={9}>\n                <TextField\n                  style={{ width: '100%' }}\n                  id=\"code_search\"\n                  placeholder=\"Search a code or description\"\n                  label=\"\"\n                  margin=\"none\"\n                  fullWidth\n                  className={classes.searchField}\n                  variant=\"outlined\"\n                  value={this.state.global_filter}\n                  inputProps={{ 'aria-label': 'bare' }}\n                  onChange={this.handleSearch}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Search style={{ color: 'rgba(54, 54, 54, 0.4)' }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={8} md={3} className={classes.searchBar}>\n                <FontAwesomeIcon\n                  icon={faPlus}\n                  className={classes.addFieldIcon}\n                />\n                <Link className={classes.addACode} onClick={\n                  () => {\n                    this.setState(\n                      {\n                        block_title: 'Add ICD-10 Code',\n                      },\n                      () => {\n                        const data = {\n                          full_code: '',\n                          full_description: '',\n                          category_title: '',\n                          effectivity_date: '',\n                          expiry_date: '',\n                        }\n                        this.setState({\n                          code_info: data\n                        }, () => this.handleChangeSideModalBlockMode('add'))\n                      },\n                    );\n                  }}>Add a Code</Link>\n              </Grid>\n              <GridHorizontalDivider height=\"30px\" />\n              <Grid style={{ minHeight: 690, overflow: 'auto' }}>\n                <TableComponent\n                  id=\"tab-all\"\n                  totalCount={this.state.totalCount}\n                  update={this.changePageUpdate}\n                  updateSorting={this.handleChangeSorting}\n                  rows={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['rows']\n                      : []\n                  }\n                  columns={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['columns']\n                      : []\n                  }\n                  message={\n                    this.state.global_filter\n                      ? 'No available data'\n                      : this.state.no_data_message\n                  }\n                  onClickRow={this.handleClickRow}\n                  disableSelect\n                  disableSearch\n                  formattedColumns={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['formattedColumns']\n                      : {}\n                  }\n                  columnExtensions={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['columnExtensions']\n                      : []\n                  }\n                  onFilterChange={this.handleFilterByColumn}\n                  onSortingChange={this.handleChangeSorting}\n                  onPageChange={this.handlePageChange}\n                  ongPageSizeChange={this.handlePageSizeChange}\n                  defaultFilter={this.state.default_filters}\n                  currentPage={this.state.page}\n                  limit={this.state.limit}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <MsgModal\n          onClose={() => {\n            this.setState({\n              isModalOpen: false,\n            })\n          }}\n          title={this.state.modalTitle}\n          isModalOpen={this.state.isModalOpen}\n          message={this.state.modalMessage}\n        />\n        <ConfirmationModal\n          onClose={() => this.setState({ confirm_modal_open: false })}\n          title={this.state.confirm_modal_title}\n          isModalOpen={this.state.confirm_modal_open}\n          submitType={'confirm'}\n          onSubmit={() => {\n            if (this.state.action_after_confirm) {\n              this.state.action_after_confirm()\n            }\n          }}\n          message={this.state.confirm_modal_message} />\n      </div>\n    );\n  }\n}\n","import Fetch, { requestOption } from '../index'\n\nconst fetch = new Fetch();\nfetch.getAccessToken();\n\nexport const getCPT = (limit: number, skip: number) => {\n\n    let filters = {\n        limit: limit,\n        skip: skip,\n      };\n    let option: requestOption = {\n        method: 'GET'\n    }\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `cpts/search?filter=${JSON.stringify(filters)}`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `cpts/search?filter=${JSON.stringify(filters)}`, true))\n}\n\nexport const searchCPT = (limit: number, offset: number, filters: any, query: string, sorting?: any, key?: string,) => {\n\n    let filter_key_str = '';\n    if (key !== undefined && key !== '' && key.length > 0) {\n        // console.log('KEY', key)\n      if (key !== '00000-99999') {\n          let temp : any = key.match(/[a-z]+|\\d+/ig)\n          let samp\n          if(key){\n              samp = temp[0]\n              filter_key_str = '&filter[where][code][regexp]=^' + samp\n          }else{\n              samp = ''\n          }\n      }\n\n    }\n    let sorting_str = '';\n    if (sorting && sorting.length !== 0) {\n      sorting_str =\n        '&filter[order]=' +\n        sorting[0]['columnName'] +\n        ' ' +\n        sorting[0]['direction'];\n    }\n    let filter_str = '';\n    if (filters) {\n      filters.forEach(filter => {\n        filter_str =\n          filter_str + '&' + filter['columnName'] + '=' + filter['value'];\n      });\n    }\n    let search = query ? '&search=' + query : '';\n    let CPT_URL =\n      `cpts/search?filter[limit]=${limit}&filter[skip]=${offset}` +\n      search +\n      filter_str +\n      sorting_str +\n      filter_key_str;\n    if (limit === 0)\n        CPT_URL =\n        `cpts/search?filter[skip]=${offset}` +\n        search +\n        filter_str +\n        sorting_str +\n        filter_key_str;\n\n    let option: requestOption = {\n        method: 'GET'\n    }\n \n    if(fetch.getAccessToken()){\n        return fetch.call(option, CPT_URL, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, CPT_URL, true))\n}\n\nexport const addCPTCodes = (payload: any) => {\n\n    let option: requestOption = {\n        method: 'POST',\n        body: payload\n    }\n\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `cpts/multiple`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `cpts/multiple`, true))\n}\n\nexport const editCPT = (payload: any, id: string) => {\n\n    let option: requestOption = {\n        method: 'PUT',\n        body: payload\n    }\n\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `cpts/edit/${id}`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `cpts/edit/${id}`, true))\n}\n\nexport const deleteCPT = (id: string) => {\n\n    let option: requestOption = {\n        method: 'DELETE'\n    }\n\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `cpts/${id}`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `cpts/${id}`, true))\n}","import React from 'react';\nimport { TableComponent } from 'Components/UI/TableComponent/CodeListTable';\nimport {\n  TextField,\n  InputAdornment,\n  Grid,\n  List,\n  ListItemText,\n} from '@material-ui/core';\nimport { Search } from '@material-ui/icons/';\nimport { Loader } from '../Loader';\nimport Link from '@material-ui/core/Link';\nimport { GridHorizontalDivider } from 'Components/UI';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { SideModalBlock } from 'Components/UI';\nimport { SideModalBody } from 'Components/UI';\nimport { MsgModal } from 'Components/UI';\nimport moment from 'moment';\n// import NestedList from './NestedList';\n// import { API } from '../../API'\nimport { ConfirmationModal } from '../ConfirmationModal'\nimport {\n  getCPT,\n  searchCPT,\n  addCPTCodes,\n  editCPT,\n  deleteCPT\n} from 'Pages/API/Calls/CPT'\nimport { cloneDeep } from 'lodash'\nimport { Utils } from '@hims/core'\n\n// let list_values = {\n//   'Category I': {\n//     '00000-09999': 'Anesthesia Services',\n//     '10000-19999': 'Integumentary System',\n//     '20000-29999': 'Musculoskeletal System',\n//     '30000-39999': 'Respiratory, Cardiovascular, Hemic, and Lymphatic System',\n//     '40000-49999': 'Digestive System',\n//     '50000-59999': 'Urinary, Male Genital, Female Genital, Maternity Care, and Delivery System',\n//     '60000-69999': 'Endocrine, Nervous, Eye and Ocular Adnexa, Auditory System',\n//     '70000-79999': 'Radiology Services',\n//     '80000-89999': 'Pathology and Laboratory Services',\n//     '90000-99999': 'Evaluation & Management Services'\n//   },\n//   'Category II': {},\n//   'Category III': {}\n// };\n\ninterface IState {\n  confirm_modal_title: string;\n  confirm_modal_message: string;\n  confirm_modal_open: boolean;\n  action_after_confirm: () => void;\n  invalid_fields: any[];\n  loading_state: boolean;\n  block_title?: string;\n  show_side_modal_block?: string;\n  side_modal_block_mode?: string;\n  code_info?: any;\n  code_list: any;\n  code_data_all: any;\n  code_data: any;\n  selected_date_filter: any;\n  selected_start_date: any;\n  selected_end_date: any;\n  global_filter: string;\n  default_filters: any;\n  default_sorting: any;\n  default_clicked: string;\n  isModalOpen: boolean;\n  modalTitle: string;\n  modalMessage: string;\n  totalCount: any;\n  typing: boolean;\n  typingTimeout: any;\n  page: number;\n  limit: number;\n  isPageSizeModal: boolean;\n  clickedCodeFromList: number;\n  init_expiry_date: Date | null;\n  no_data_message: 'Searching for CPT codes' | 'No available data' | '';\n  cpt_categories: string[];\n  cpt_category_range: string[];\n}\n\ninterface IProps {\n  classes: any\n}\n\n\nexport class CPTSection extends React.Component<\n  IProps,\n  IState,\n  any\n  > {\n  constructor(props) {\n    super(props);\n\n    const table: any = {\n      formattedColumns: {},\n      columnExtensions: [\n        {\n          columnName: 'code',\n          width: 150,\n          wordWrapEnabled: true,\n        },\n        {\n          columnName: 'description',\n          width: 500,\n          wordWrapEnabled: true,\n        },\n      ],\n      columns: [\n        {\n          name: 'code',\n          title: 'CPT Code',\n        },\n        {\n          name: 'description',\n          title: 'Description',\n        },\n      ],\n      rows: [],\n    };\n\n    this.state = {\n      cpt_categories: [],\n      cpt_category_range: [],\n      no_data_message: '',\n      init_expiry_date: null,\n      confirm_modal_title: '',\n      confirm_modal_message: '',\n      confirm_modal_open: false,\n      action_after_confirm: () => { },\n      invalid_fields: [],\n      clickedCodeFromList: -1,\n      loading_state: true,\n      code_list: [],\n      code_info: undefined,\n      show_side_modal_block: 'none',\n      side_modal_block_mode: '',\n      code_data: table,\n      code_data_all: table,\n      block_title: '',\n      selected_date_filter: {\n        id: '',\n        value: 'This Month',\n        label: 'This Month',\n      },\n      selected_start_date: new Date(),\n      selected_end_date: new Date(),\n      global_filter: '',\n      default_filters: [],\n      default_sorting: [],\n      default_clicked: '',\n      isModalOpen: false,\n      isPageSizeModal: false,\n      modalTitle: '',\n      modalMessage: '',\n      totalCount: 0,\n      typing: false,\n      typingTimeout: 0,\n      page: 0,\n      limit: 10,\n    };\n  }\n\n\n  componentDidMount() {\n    this.initialData();\n    document.addEventListener('keydown', this.escFunction, false);\n    if (this.state.cpt_categories.length === 0) {\n      this.fetchCPTCategories()\n    }\n  }\n\n  escFunction = (event) => {\n    if (event.keyCode === 27) {\n      this.handleCloseSideModalBlock()\n    }\n  }\n\n\n  initialData = () => {\n    this.setState({ no_data_message: 'Searching for CPT codes' })\n    getCPT(10, 0).then(response => {\n      this.setState({ no_data_message: 'No available data' })\n      if (response && response.error === undefined) {\n        const table = this.generateDataForTable(\n          response.result ? response.result : response,\n        );\n        this.setState({\n          code_list: response,\n          code_data_all: table,\n          code_data: table,\n          loading_state: false,\n          totalCount:\n            response.total && response.total.count ? response.total.count : 50,\n          page: 0,\n          limit: 10,\n        });\n      } else if (response && response.error && response.error.statusCode === 401) {\n        const table = this.generateDataForTable([]);\n        this.setState({\n          code_list: [],\n          code_data_all: table,\n          loading_state: false,\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to view CPT codes.',\n          page: 0,\n        });\n      } else {\n        const table = this.generateDataForTable([]);\n        this.setState({\n          code_list: [],\n          code_data_all: table,\n          loading_state: false,\n          isModalOpen: true,\n          modalTitle: 'Loading failed',\n          modalMessage: 'An error occured while loading the list of codes.',\n          page: 0,\n        });\n      }\n    });\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /* CRUD FUNCTIONS */\n\n  fetchCPTCategories = async () => {\n    this.setState({ loading_state : true})\n    await Utils.StorageService('cpt_list')\n      .then(cpts => {\n        if (Array.isArray(cpts) && cpts.length > 0) {\n          let category_arr: string[] = []\n          let category_ranges: string[] = []\n          cpts.filter(item => {\n            if (!category_arr.includes(item.category)) {\n              category_arr.push(item.category)\n              // const category_range = item.code.match(/[a-z]+|\\d+/ig)[0] + '0000' + '-' + item.code.match(/[a-z]+|\\d+/ig)[0] + '9999'\n              category_ranges.push(item.code)\n              return true;\n            }\n            return false;\n          })\n          this.setState({\n            cpt_categories: category_arr,\n            cpt_category_range: category_ranges\n          }, () => this.setState({ loading_state : false}))\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  patchCPT = (data: any) => {\n    // let payload = data\n    data['gender'] = data['gender_limited'] ? data['gender'] : '';\n\n    if (data['expiry_date'] === '') {\n      if (this.state.init_expiry_date !== null && this.state.init_expiry_date !== undefined) {\n        data['expiry_date'] = this.state.init_expiry_date\n      } else {\n        delete data['expiry_date'];\n      }\n\n    }\n    if (data['status'] !== undefined) {\n      delete data['status']\n    }\n\n    this.setState({\n      loading_state: true,\n      no_data_message: 'Searching for CPT codes'\n    })\n    editCPT(JSON.stringify(data), data['_id']).then(response => {\n      this.setState({\n        no_data_message: 'No available data',\n        loading_state: false\n      })\n      if (response && response.error === undefined && response.message) {\n        this.changePageUpdate(this.state.limit, this.state.limit * this.state.page)\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Success',\n          modalMessage: `You have ${response.message} code!`\n        });\n      } else if (response && response.error && response.error.statusCode === 401) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to edit CPT codes.'\n        });\n      } else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while saving!'\n        });\n      }\n    }).catch(error => {\n      this.setState({\n        isModalOpen: true,\n        modalTitle: 'Failed',\n        modalMessage: 'Something went wrong while saving!'\n      });\n      this.setState({\n        loading_state: false\n      })\n      console.log('client error: ', error);\n    });\n  }\n\n  addCPTCodes = (data: any) => {\n    let payload: any[] = [];\n\n    if (data['expiry_date'] === '') {\n      delete data['expiry_date'];\n    }\n    if (data['status'] !== undefined) {\n      delete data['status']\n    }\n    let add_code = data\n    add_code['gender'] = add_code['gender_limited'] ? add_code['gender'] : '';\n    add_code['date_updated'] = moment(new Date()).format(moment.defaultFormat)\n    if (!Array.isArray(data)) {\n      payload.push(add_code)\n    }\n    this.setState({\n      loading_state: true,\n      no_data_message: 'Searching for CPT codes'\n    })\n\n    addCPTCodes(JSON.stringify(payload)).then(response => {\n      this.setState({\n        loading_state: false,\n        no_data_message: 'No available data'\n      })\n      if (response && response.error === undefined && response.message && response.result) {\n        this.changePageUpdate(this.state.limit, this.state.limit * this.state.page)\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Success',\n          modalMessage: `You have successfully added ${response.result.length} CPT code/s!`\n        });\n      } else if (response && response.error && response.error.statusCode === 401) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to add CPT codes.'\n        });\n      } else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while adding!'\n        });\n      }\n    }).catch(error => {\n      this.setState({\n        isModalOpen: true,\n        modalTitle: 'Failed',\n        modalMessage: 'Something went wrong while adding!'\n      });\n      this.setState({\n        loading_state: false\n      })\n      console.log('client error: ', error);\n    });\n  }\n\n\n  deleteCPT = (id: string) => {\n    if (!id) {\n      return\n    }\n    this.setState({ loading_state: true })\n    deleteCPT(id).then(response => {\n      this.setState({\n        loading_state: false\n      })\n      this.changePageUpdate(this.state.limit, this.state.limit * this.state.page)\n      if (response && response.error) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while deleting the CPT Code!'\n        });\n      }\n      else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Success',\n          modalMessage: 'You have successfully deleted a CPT code!'\n        });\n      }\n    }).catch(error => {\n      this.setState({\n        isModalOpen: true,\n        modalTitle: 'Failed',\n        modalMessage: 'Something went wrong while deleting the ICD10 Code!'\n      });\n      this.setState({\n        loading_state: false\n      })\n      console.log('client error: ', error);\n    });\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /* TABLE AND PAGE FUNCTIONS */\n  generateDataForTable(response: any) {\n    const table: any = {\n      formattedColumns: {},\n      columnExtensions: [\n        {\n          columnName: 'code',\n          width: 150,\n          wordWrapEnabled: true,\n        },\n        {\n          columnName: 'description',\n          width: 500,\n          wordWrapEnabled: true,\n        },\n      ],\n      columns: [\n        {\n          name: 'code',\n          title: 'CPT Code',\n        },\n        {\n          name: 'description',\n          title: 'Description',\n        },\n      ],\n      rows: [],\n    };\n    for (const cnt in response) {\n      const item = response[cnt];\n      const temp_row: any = {};\n      temp_row['code'] = item['code'];\n      temp_row['description'] = item['description'];\n      table['rows'].push(temp_row);\n    }\n\n    return table;\n  }\n\n  changePageUpdate = (limit: number, skip: number) => {\n    this.handleCloseSideModalBlock();\n    this.setState({ no_data_message: 'Searching for CPT codes' })\n    this.setState({\n      loading_state: true,\n    });\n    if (\n      this.state.default_filters.length !== 0 ||\n      this.state.global_filter !== '' ||\n      this.state.default_sorting.length !== 0 ||\n      this.state.default_clicked !== ''\n    ) {\n      searchCPT(\n        limit,\n        skip,\n        this.state.default_filters,\n        this.state.global_filter,\n        this.state.default_sorting,\n        this.state.default_clicked,\n      ).then(response => {\n        this.setState({ no_data_message: 'No available data' })\n        if (response && response.error === undefined) {\n          const table = this.generateDataForTable(\n            response.result ? response.result : response,\n          );\n          this.setState({\n            code_list: response,\n            code_data_all: table,\n            code_data: table,\n            loading_state: false,\n            totalCount:\n              response.total && response.total.count\n                ? response.total.count\n                : 50,\n          });\n        } else if (response && response.error && response.error.statusCode === 401) {\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_list: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Unauthorized',\n            modalMessage: 'You are not authorized to view CPT codes.',\n          });\n        } else {\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_list: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Loading failed',\n            modalMessage: 'An error occured while loading the list of codes.',\n          });\n        }\n      });\n    } else {\n      this.setState({ no_data_message: 'Searching for CPT codes' })\n      getCPT(limit, skip).then(response => {\n        this.setState({ no_data_message: 'No available data' })\n        if (response && response.error === undefined) {\n          const table = this.generateDataForTable(\n            response.result ? response.result : response,\n          );\n          this.setState({\n            code_list: response,\n            code_data_all: table,\n            code_data: table,\n            loading_state: false,\n            totalCount:\n              response.total && response.total.count\n                ? response.total.count\n                : 50,\n          });\n        } else if (response && response.error && response.error.statusCode === 401) {\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_list: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Unauthorized',\n            modalMessage: 'You are not authorized to view CPT codes.',\n          });\n        } else {\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_list: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Loading failed',\n            modalMessage: 'An error occured while loading the list of codes.',\n          });\n        }\n      });\n    }\n  };\n\n  handleChangeSorting = (sorting: any) => {\n    this.setState({ no_data_message: 'Searching for CPT codes' })\n    this.setState({\n      loading_state: true,\n    });\n    if (sorting && sorting.length > 0) {\n\n      searchCPT(\n        this.state.limit,\n        this.state.page * this.state.limit,\n        this.state.default_filters,\n        this.state.global_filter,\n        sorting,\n        this.state.default_clicked,\n      ).then(response => {\n        this.setState({ no_data_message: 'No available data' })\n        if (response && response.error === undefined) {\n          const table = this.generateDataForTable(\n            response.result ? response.result : response,\n          );\n          this.setState({\n            code_list: response,\n            code_data_all: table,\n            code_data: table,\n            loading_state: false,\n            default_sorting: sorting,\n            totalCount:\n              response.total && response.total.count\n                ? response.total.count\n                : 50,\n          });\n        } else if (response && response.error && response.error.statusCode === 401) {\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_list: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Unauthorized',\n            modalMessage: 'You are not authorized to view CPT codes.',\n          });\n        } else {\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_list: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Loading failed',\n            modalMessage: 'An error occured while loading the list of codes.',\n          });\n        }\n      });\n    }\n  };\n\n  handleFilterByColumn = (filter: any) => {\n    const self = this;\n\n    if (self.state.typingTimeout) {\n      clearTimeout(self.state.typingTimeout);\n    }\n\n    self.setState({\n      default_filters: filter,\n      typing: false,\n      page: 0,\n      typingTimeout: setTimeout(function () {\n        self.setState({\n          no_data_message: 'Searching for CPT codes',\n          loading_state: true,\n        });\n        if (self.state.default_filters !== 0) {\n          searchCPT(\n            self.state.limit,\n            0,\n            filter,\n            self.state.global_filter,\n            self.state.default_sorting,\n            self.state.default_clicked,\n          ).then(response => {\n            self.setState({ no_data_message: 'No available data' })\n            if (response && response.error === undefined) {\n              const table = self.generateDataForTable(\n                response.result ? response.result : response,\n              );\n              self.setState({\n                code_list: response,\n                code_data_all: table,\n                code_data: table,\n                loading_state: false,\n                totalCount:\n                  response.total && response.total.count\n                    ? response.total.count\n                    : 50,\n              });\n            } else if (response && response.error && response.error.statusCode === 401) {\n              const table = self.generateDataForTable([]);\n              self.setState({\n                code_list: [],\n                code_data_all: table,\n                loading_state: false,\n                isModalOpen: true,\n                modalTitle: 'Unauthorized',\n                modalMessage:\n                  'You are not authorized to view CPT codes.',\n              });\n            } else {\n              const table = self.generateDataForTable([]);\n              self.setState({\n                code_list: [],\n                code_data_all: table,\n                loading_state: false,\n                isModalOpen: true,\n                modalTitle: 'Loading failed',\n                modalMessage:\n                  'An error occured while loading the list of codes.',\n              });\n            }\n          });\n        } else {\n          self.initialData();\n        }\n      }, 2000),\n    });\n\n  };\n\n  handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    const self = this;\n\n    if (self.state.typingTimeout) {\n      clearTimeout(self.state.typingTimeout);\n    }\n    self.setState({\n      global_filter: value,\n      typing: false,\n      page: 0,\n      typingTimeout: setTimeout(function () {\n        self.setState({\n          no_data_message: 'Searching for CPT codes',\n          loading_state: true,\n          limit: 10,\n        });\n        if (self.state.global_filter !== '') {\n          searchCPT(\n            self.state.limit,\n            0,\n            self.state.default_filters,\n            self.state.global_filter,\n            self.state.default_sorting,\n            self.state.default_clicked,\n          ).then(response => {\n            self.setState({ no_data_message: 'No available data' })\n\n            if (response && response.error === undefined) {\n              const table = self.generateDataForTable(\n                response.result ? response.result : response,\n              );\n              self.setState({\n                code_list: response,\n                code_data_all: table,\n                code_data: table,\n                loading_state: false,\n                totalCount:\n                  response.total && response.total.count\n                    ? response.total.count\n                    : 50,\n                limit: 10,\n              });\n            } else if (response && response.error && response.error.statusCode === 401) {\n              const table = self.generateDataForTable([]);\n              self.setState({\n                code_list: [],\n                code_data_all: table,\n                loading_state: false,\n                isModalOpen: true,\n                modalTitle: 'Unauthorized',\n                modalMessage:\n                  'You are not authorized to view CPT codes.',\n              });\n            } else {\n              const table = self.generateDataForTable([]);\n              self.setState({\n                code_list: [],\n                code_data_all: table,\n                loading_state: false,\n                isModalOpen: true,\n                modalTitle: 'Loading failed',\n                modalMessage:\n                  'An error occured while loading the list of codes.',\n              });\n            }\n          });\n        } else {\n          self.initialData();\n        }\n      }, 2000),\n    });\n  };\n\n  handleClickRow = (row: any) => {\n    const { code_list } = this.state;\n\n    let data = {};\n    let status = 'Active';\n    let gender_limited = false;\n\n    if (code_list && code_list.result) {\n      if (\n        code_list.result[row]['expiry_date'] &&\n        moment(code_list.result[row]['expiry_date']).isValid() &&\n        moment(code_list.result[row]['expiry_date']).diff(new Date()) <= 0\n      ) {\n        status = 'Deactivated';\n      }\n      gender_limited = code_list.result[row]['gender'] &&\n        code_list.result[row]['gender'] !== '' ?\n        true :\n        false;\n      const gender = code_list.result[row]['gender'] ? code_list.result[row]['gender'] : '';\n      if (code_list.result[row]['expiry_date'] && moment(code_list.result[row]['expiry_date']).isValid()) {\n        this.setState({\n          init_expiry_date: code_list.result[row]['expiry_date']\n        })\n      } else {\n        this.setState({\n          init_expiry_date: null\n        })\n      }\n      data = {\n        _id: code_list.result[row]['_id'],\n        code: code_list.result[row]['code'],\n        description: code_list.result[row]['description'],\n        category: code_list.result[row]['category'],\n        gender_limited: gender_limited,\n        gender: gender,\n        effectivity_date: code_list.result[row]['effectivity_date'],\n        expiry_date: code_list.result[row]['expiry_date'],\n        status: status,\n        date_updated: code_list.result[row]['date_updated'],\n\n      }\n    }\n\n\n    this.setState(\n      {\n        code_info: data,\n        block_title: data['code'] ? data['code'] : '',\n      },\n      () => {\n        this.handleChangeSideModalBlockMode('view');\n      },\n    );\n  };\n\n\n  handlePageChange = (currentPage: number, skip: number) => {\n    this.setState({\n      page: currentPage,\n    });\n\n    this.changePageUpdate(this.state.limit, skip);\n  };\n\n  handlePageSizeChange = value => {\n    let pageLimit = 100000;\n\n    if (this.state.totalCount >= pageLimit) {\n      this.setState({\n        isPageSizeModal: true,\n      });\n    } else {\n      this.setState({\n        limit: value,\n      });\n\n      this.changePageUpdate(value, value * this.state.page);\n    }\n  };\n\n  handleClickItemFromList = (key: string) => {\n    this.setState({\n      no_data_message: 'Searching for CPT codes',\n      page: 0,\n      loading_state: true,\n    });\n    if (key !== undefined) {\n      searchCPT(\n        this.state.limit,\n        0,\n        this.state.default_filters,\n        this.state.global_filter,\n        this.state.default_sorting,\n        key,\n      ).then(response => {\n        this.setState({ no_data_message: 'No available data' })\n        if (response && response.error === undefined) {\n          const table = this.generateDataForTable(\n            response.result ? response.result : response,\n          );\n          this.setState({\n            code_list: response,\n            code_data_all: table,\n            code_data: table,\n            loading_state: false,\n            default_clicked: key,\n            totalCount:\n              response.total && response.total.count\n                ? response.total.count\n                : 50,\n          });\n        } else if (response && response.error && response.error.statusCode === 401) {\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_list: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Unauthorized',\n            modalMessage: 'You are not authorized to view CPT codes.',\n          });\n        } else {\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_list: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Loading failed',\n            modalMessage: 'An error occured while loading the list of codes.',\n          });\n        }\n      });\n    }\n  };\n\n  handleSetClickedCodeFromList = (item: number, key: string) => {\n    this.setState({\n      clickedCodeFromList: item,\n    });\n    this.handleClickItemFromList(key);\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /* ACTIONS / SIDE MODAL FUNCTIONS */\n\n  handleCloseSideModalBlock = () => {\n    this.setState({\n      show_side_modal_block: 'none',\n      side_modal_block_mode: '',\n      code_info: {},\n    });\n  };\n\n  handleChangeSideModalBlockMode = (value: string) => {\n    let title = '';\n    if (value && value === 'edit' && this.state.block_title) {\n      title = 'Edit ' + this.state.block_title;\n      let data = cloneDeep(this.state.code_info)\n      const reform_data = {\n        _id : data._id,\n        code: data.code,\n        description: data.description,\n        category: data.category,\n        effectivity_date: data.effectivity_date,\n        expiry_date: data.expiry_date,\n        status: data.status,\n        gender_limited: Boolean(data.gender_limited),\n        gender: data.gender_limited ? data.gender : '',\n      }\n      this.setState({ code_info: reform_data })\n    } else if (value && value === 'view' && this.state.block_title) {\n      title = this.state.block_title;\n    } else if (value && value === 'add') {\n      title = 'Add CPT Code';\n    }\n    this.setState(\n      {\n        side_modal_block_mode: value,\n        block_title: title,\n      },\n      () => {\n        this.handleOpenBlock();\n      },\n    );\n  };\n\n  handleOpenBlock = () => {\n    this.setState({\n      show_side_modal_block: 'block',\n    }, () => this.passDataToSideModalBlockBody());\n  };\n\n  handleInvalidFieldsPrompt = () => {\n    this.setState({\n      isModalOpen: true,\n      modalTitle: 'Incomplete/Invalid Fields',\n      modalMessage: 'Please complete the form before proceeding.',\n    })\n  }\n\n\n  passDataToSideModalBlockBody = () => {\n    // if (this.state.code_info.expiry_date === '' ||\n    //   this.state.code_info.expiry_date === undefined ||\n    //   this.state.code_info.expiry_date === null) {\n    //   this.state.code_info.expiry_date = new Date()\n    // }\n    // if (this.state.code_info.effectivity_date === '' ||\n    //   this.state.code_info.effectivity_date === undefined ||\n    //   this.state.code_info.effectivity_date === null) {\n    //   this.state.code_info.effectivity_date = new Date()\n\n    // }\n    if (!this.state.code_info.gender_limited) {\n      this.state.code_info.gender = ''\n    }\n\n    this.setState({\n      code_info: this.state.code_info\n    });\n  };\n\n\n  handleConfirmationSubmit = (formFields?: any, checkInvalidFields?: any, excludeFields?: any) => {\n    this.setState({ loading_state: true })\n\n    if (formFields) {\n      let invalid_fields = this.getInvalidFields(formFields, checkInvalidFields, excludeFields);\n      if (!invalid_fields || invalid_fields.length === 0) {\n        if (this.state.side_modal_block_mode === 'edit') {\n          this.patchCPT(formFields)\n        } else if (this.state.side_modal_block_mode === 'add') {\n          this.addCPTCodes(formFields)\n        }\n      } else {\n        this.handleInvalidFieldsPrompt()\n      }\n    }\n  }\n\n  getInvalidFields = (formFields: any, checkInvalidFields?: any, excludeFields?: any) => {\n    let invalid_fields: any[] = [];\n    let exclude_fields = {}\n    if (excludeFields !== undefined) {\n      exclude_fields = excludeFields\n    }\n    Object.keys(formFields).forEach(field => {\n      if (checkInvalidFields !== undefined &&\n        checkInvalidFields.includes(field) &&\n        !Object.keys(exclude_fields).includes(field) &&\n        (formFields[field] === '' ||\n          formFields[field] === undefined ||\n          formFields[field] === null ||\n          ((field === 'effectivity_date' ||\n            field === 'expiry_date') &&\n            !moment(formFields[field]).isValid()))) {\n        invalid_fields.push(field)\n\n      }\n    })\n    this.setState({ loading_state: false, invalid_fields: invalid_fields })\n    return invalid_fields\n  }\n\n\n\n\n  render(): JSX.Element {\n    const { classes } = this.props;\n\n    let codes : any = [];\n    if(this.state.cpt_categories !== undefined && this.state.cpt_category_range !== undefined){\n      codes = this.state.cpt_categories && this.state.cpt_category_range\n      ? this.state.cpt_categories.map(key => (\n        <ListItemText\n          key={key}\n          classes={{\n            root: classes.codeListItemsRoot,\n            primary:\n              this.state.clickedCodeFromList ===\n                this.state.cpt_categories.indexOf(key)\n                ? classes.codeListItemsSelected\n                : classes.codeListItems,\n          }}\n          onClick={() => {\n            if (\n              this.state.cpt_categories.indexOf(key) !==\n              this.state.clickedCodeFromList\n            ) {\n              this.setState({\n                clickedCodeFromList: this.state.cpt_categories.indexOf(key),\n              });\n              this.handleClickItemFromList(\n                this !== undefined &&\n                this !== null &&\n                this.state !== undefined &&\n                this.state !== null &&\n                this.state.cpt_category_range !== undefined && \n                this.state.cpt_categories !== undefined &&\n                this.state.cpt_category_range !== null && \n                this.state.cpt_categories !== null &&\n                Array.isArray(this.state.cpt_category_range) ?\n                this.state.cpt_category_range[this.state.cpt_categories.indexOf(key)] : ''\n                );\n            } else {\n              this.setState({\n                clickedCodeFromList: -1,\n              });\n              this.handleClickItemFromList('');\n            }\n          }}\n        >\n          <br />\n          {/* {this.state.cpt_categories.indexOf(key) + 1}  */}\n          {\n            // this.state.cpt_category_range &&\n            // this.state.cpt_categories.indexOf(key) &&\n            // this.state.cpt_category_range[this.state.cpt_categories.indexOf(key)] &&\n            // this.state.cpt_category_range[this.state.cpt_categories.indexOf(key)].match(/[a-z]+|\\d+/ig) ?\n          this.state.cpt_category_range[this.state.cpt_categories.indexOf(key)].slice(0,4)+'0000-'\n          + this.state.cpt_category_range[this.state.cpt_categories.indexOf(key)].slice(0,4)+'9999'  \n          + ' : '}<br />\n          {key}\n\n        </ListItemText>\n      ))\n      : [];\n    }\n    \n\n    return (\n      <div>\n        {this.state.loading_state ? <Loader /> : null}\n        <SideModalBlock\n          blockPosition={'fixed'}\n          title={this.state.block_title}\n          editIconDescription={'Edit Code'}\n          showBlock={this.state.show_side_modal_block}\n          classes={classes}\n          handleClose={this.handleCloseSideModalBlock}\n          sideModalBlockMode={this.state.side_modal_block_mode}\n          changeMode={this.handleChangeSideModalBlockMode}\n        >\n          {this.state.side_modal_block_mode ? (\n            <SideModalBody\n              formFields={this.state.code_info}\n              invalidFields={this.state.invalid_fields}\n              classes={this.props.classes}\n              handleClose={this.handleCloseSideModalBlock}\n              // deleteIcon={'Delete Code'}\n              refreshData={(data: any) => {\n                this.setState({ code_info: data })\n              }}\n              delete={(data: any) => {\n                if (this.state.side_modal_block_mode) {\n                  if (this.state.side_modal_block_mode === 'edit') {\n                    this.setState({\n                      confirm_modal_message: 'Are you sure you want to delete this CPT code?',\n                      confirm_modal_open: true,\n                      confirm_modal_title: 'Confirm delete CPT code',\n                      action_after_confirm: () => this.deleteCPT(data['_id'])\n                    })\n                  }\n                }\n              }}\n              handleSave={(formFields?: any, checkInvalidFields?: any, excludeFields?: any) => {\n                if (this.state.side_modal_block_mode) {\n                  if (this.state.side_modal_block_mode === 'add') {\n                    this.setState({\n                      confirm_modal_message: 'Are you sure you want to add this CPT code?',\n                      confirm_modal_open: true,\n                      confirm_modal_title: 'Confirm add CPT code',\n                      action_after_confirm: () => this.handleConfirmationSubmit(formFields, checkInvalidFields, excludeFields)\n                    })\n                  } else if (this.state.side_modal_block_mode === 'edit') {\n                    this.setState({\n                      confirm_modal_message: 'Are you sure you want to edit this CPT code?',\n                      confirm_modal_open: true,\n                      confirm_modal_title: 'Confirm edit CPT code',\n                      action_after_confirm: () => this.handleConfirmationSubmit(formFields, checkInvalidFields, excludeFields)\n                    })\n                  }\n                }\n              }}\n              formName={'CPT'}\n              mode={this.state.side_modal_block_mode ? this.state.side_modal_block_mode : ''}\n              checkBoxWithDropDownFieldsInitState={this.state.code_info && this.state.code_info['gender_limited'] ? true : false}\n            />\n          ) : null}\n\n        </SideModalBlock>\n\n        <Grid container>\n\n\n          <Grid container item xs={12} md={3}>\n            <Grid\n              container\n              className={classes.scrollList}\n              style={{ maxHeight: 715, overflow: 'auto' }}\n            >\n              {this.state.cpt_categories && this.state.cpt_category_range ? (\n                <List>\n                  <li key={'version'} className={classes.codeHeader}>\n                    VERSION\n                </li>\n                  <li\n                    key={'year-of-release-value'}\n                    className={classes.codeHeaderValue}\n                  >\n                    2020\n                </li>\n                  <ListItemText key={'effectivity-date'}>\n                    <div className={classes.codeHeader}>EFFECTIVITY DATE</div>\n                    <div className={classes.codeHeaderValue}>\n                      Jan 1, 2020\n                  </div>\n                  </ListItemText>\n                  {codes}\n                  {/* <NestedList classes={classes} listValues={list_values} clickedItemFromList={this.state.clickedCodeFromList} handleSetClickedCodeFromList={this.handleSetClickedCodeFromList} /> */}\n                </List>\n              ) : null}\n\n            </Grid>\n          </Grid>\n\n          <Grid container item xs={12} md={9} className={classes.selectedpage}>\n            <Grid container>\n              <Grid item xs={12} md={9}>\n                <TextField\n                  style={{ width: '100%' }}\n                  id=\"code_search\"\n                  placeholder=\"Search a code or description\"\n                  label=\"\"\n                  margin=\"none\"\n                  fullWidth\n                  className={classes.searchField}\n                  variant=\"outlined\"\n                  value={this.state.global_filter}\n                  inputProps={{ 'aria-label': 'bare' }}\n                  onChange={this.handleSearch}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Search style={{ color: 'rgba(54, 54, 54, 0.4)' }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={8} md={3} className={classes.searchBar}>\n                <FontAwesomeIcon\n                  icon={faPlus}\n                  className={classes.addFieldIcon}\n                />\n                <Link className={classes.addACode} onClick={\n                  () => {\n                    this.setState(\n                      {\n                        block_title: 'Add CPT Code',\n                      },\n                      () => {\n                        const data = {\n                          code: '',\n                          description: '',\n                          category: '',\n                          effectivity_date: '',\n                          expiry_date: '',\n                          status: '',\n                          gender_limited: false,\n                          gender: '',\n                        }\n                        this.setState({\n                          code_info: data\n                        }, () => this.handleChangeSideModalBlockMode('add'))\n                      },\n                    );\n                  }}>Add a Code</Link>\n              </Grid>\n              <GridHorizontalDivider height=\"30px\" />\n              <Grid style={{ minHeight: 690, overflow: 'auto' }}>\n                <TableComponent\n                  id=\"tab-all\"\n                  totalCount={this.state.totalCount}\n                  update={this.changePageUpdate}\n                  updateSorting={this.handleChangeSorting}\n                  rows={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['rows']\n                      : []\n                  }\n                  columns={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['columns']\n                      : []\n                  }\n                  message={\n                    this.state.global_filter\n                      ? 'No available data.'\n                      : this.state.no_data_message\n                  }\n                  onClickRow={this.handleClickRow}\n                  disableSelect\n                  disableSearch\n                  formattedColumns={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['formattedColumns']\n                      : {}\n                  }\n                  columnExtensions={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['columnExtensions']\n                      : []\n                  }\n                  onFilterChange={this.handleFilterByColumn}\n                  onSortingChange={this.handleChangeSorting}\n                  onPageChange={this.handlePageChange}\n                  ongPageSizeChange={this.handlePageSizeChange}\n                  defaultFilter={this.state.default_filters}\n                  currentPage={this.state.page}\n                  limit={this.state.limit}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <MsgModal\n          onClose={() => this.setState({ isModalOpen: false })}\n          title={this.state.modalTitle}\n          isModalOpen={this.state.isModalOpen}\n          message={this.state.modalMessage}\n        />\n        <ConfirmationModal\n          onClose={() => this.setState({ confirm_modal_open: false })}\n          title={this.state.confirm_modal_title}\n          isModalOpen={this.state.confirm_modal_open}\n          submitType={'confirm'}\n          onSubmit={() => {\n            if (this.state.action_after_confirm) {\n              this.state.action_after_confirm()\n            }\n          }}\n          message={this.state.confirm_modal_message} />\n      </div>\n    );\n  }\n}\n","import React, {\n  useState,\n} from 'react';\n\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { Store } from 'Components/Stores/IStore';\nimport { LookupActions } from './LookupActions';\nimport {\n  GridHorizontalDivider,\n} from 'Components/UI/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ICD10Section } from './Components/ICD10Section';\nimport { CPTSection } from './Components/CPTSection';\nimport { SideMenu } from 'Components/UI/SideMenu';\nimport classNames from 'classnames';\n\nimport {\n  Grid,\n  Typography,\n  Link\n} from '@material-ui/core';\n\nconst page_tab_titles: any = ['Codes', 'Locations', 'Industries'];\n\nconst sideBarItems = {\n  Codes:[\n  {\n    name: 'ICD-10',\n    label: ''\n  },\n  {\n    name: 'CPT',\n    label: ''\n  },\n  {\n    name: 'Doctor Specialization',\n    label: ''\n  },\n  {\n    name: 'Diagnosis - Procedures Matrix',\n    label: ''\n  },\n],Locations: [\n  {\n    name: 'Regions',\n    label: ''\n  },\n  {\n    name: 'Provinces',\n    label: ''\n  },\n  {\n    name: 'Municipalities and Cities',\n    label: ''\n  },\n],Industries: [\n  {\n    name: 'Agriculture, Hunting, Forestry And Fishing Sector',\n    label: ''\n  },\n  {\n    name: 'Industry Sector',\n    label: ''\n  },\n  {\n    name: 'Service Sector',\n    label: ''\n  },\n]};\n\nconst useStyles = makeStyles(theme => ({\n  gridContainerNoPadding: {\n    padding: theme.spacing(1),\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: 700,\n    color: '#272e4c',\n  },\n  subSectionTitle: {\n    fontSize: 16,\n    fontWeight: 400,\n    color: '#272e4c',\n  },\n  gridContainer: {\n    backgroundColor: '',\n  },\n  headerTitle: {\n    fontSize: '1.5rem',\n    fontWeight: 800,\n  },\n  linkPrevious: {\n    fontSize: 12,\n    fontWeight: 300,\n    color: 'black',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n  },\n  sideBar: {\n    paddingRight: '10px',\n    paddingLeft: '10px',\n    borderRight: '1px solid #C3C3C3',\n  },\n  scrollList: {\n    paddingRight: '15px',\n    paddingLeft: '15px',\n    borderRight: '1px solid #C3C3C3',\n  },\n  selectedpage: {\n    paddingLeft: '37px',\n  },\n  linkCurrent: {\n    fontSize: 12,\n    fontWeight: 600,\n    color: 'black',\n    cursor: 'pointer',\n  },\n  main: {\n    backgroundColor: '#F5F7FB',\n    padding: '32px 24px',\n  },\n  gridItemLayout: {\n    padding: theme.spacing(1),\n  },\n  sideNavHeader: {\n    fontSize: 13,\n    fontWeight: 700,\n    color: 'rgba(39, 46, 76, 0.3)',\n  },\n  listItemTextRoot: {\n    whiteSpace: 'normal',\n    flex: 'none',\n  },\n  listItemTextPrimarySelected: {\n    fontSize: 14,\n    fontWeight: 700,\n    color: '#2c2e8e',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n  },\n  listItemTextPrimaryNotSelected: {\n    fontSize: 14,\n    color: '#272e4c',\n    cursor: 'pointer',\n  },\n  addFieldIcon: {\n    color: '#3AB77D',\n    cursor: 'pointer',\n    fontSize: 14,\n    marginRight: '15px',\n  },\n  searchBar: {\n    paddingRight: '15px',\n    marginTop: 15,\n    textAlign: 'center',\n  },\n  searchField: {\n    backgroundColor: 'white',\n  },\n  addACode: {\n    fontSize: 14,\n    fontWeight: 700,\n    color: 'rgba(58, 183, 125, 1)',\n    cursor: 'pointer',\n  },\n  codeHeader: {\n    color: '#272E4C',\n    textAlign: 'left',\n    opacity: 0.6,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '12px',\n  },\n  codeHeaderValue: {\n    color: '#272E4C',\n    textAlign: 'left',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '16px',\n    fontWeight: 500,\n  },\n  codeListItemsRoot: {\n    flex: 'none',\n  },\n  codeListItems: {\n    fontSize: '14px',\n    color: '#272E4C',\n    textAlign: 'left',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    '&:hover': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n    '&$selected': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n  },\n  codeListItemsSelected: {\n    fontSize: '14px',\n    textDecoration: 'underline',\n    color: '#3AB77D',\n    fontWeight: 600,\n    textAlign: 'left',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n  },\n  codeNestedListItemsRoot: {\n    flex: 'none',\n  },\n  codeNestedListItems: {\n    fontSize: '14px',\n    color: '#272E4C',\n    textAlign: 'left',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    '&:hover': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n    '&$selected': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n  },\n  codeNestedListItemsSelected: {\n    fontSize: '14px',\n    textDecoration: 'underline',\n    color: '#3AB77D',\n    fontWeight: 600,\n    textAlign: 'left',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n  },\n  SideModalBlockContainer: {\n    position: 'fixed',\n    right: 0,\n    top: 0,\n    zIndex: 200,\n    backgroundColor: '#f5f7fb',\n    paddingLeft: '25px',\n    paddingRight: '25px',\n    paddingTop: '0px',\n    paddingBottom: '25px',\n    borderRadius: '10px',\n    boxShadow:\n      '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n  CodeInfoHeaders: {\n    paddingRight: '20px',\n  },\n  CodeInfoHeadersValues: {\n    paddingRight: '20px',\n  },\n  inputLabel: {\n    paddingRight: '20px',\n    color: '#272e4c',\n    fontSize: '12px'\n  },\n  keyboardDatePicker: {\n    marginTop: '10px',\n    marginBottom: '15px',\n    width: '212px',\n  },\n  viewHeader: {\n    color: '#272E4C',\n    textAlign: 'left',\n    opacity: 0.6,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '12px',\n  },\n  viewHeaderValue: {\n    color: '#272E4C',\n    textAlign: 'left',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '14px',\n    fontWeight: 600,\n  },\n  editButton: {\n    textDecoration: 'underline',\n    color: '#3AB77D',\n    fontSize: '0.875rem',\n    fontWeight: 600,\n    cursor: 'pointer',\n\n  },\n  deleteButton: {\n    textDecoration: 'underline',\n    color: '#272E4C',\n    opacity: 0.6,\n    cursor: 'pointer',\n  },\n  closeButton: {\n    color: '#272E4C',\n    '&hover': {\n      fontSize: '0.875rem',\n    }\n  },\n  sideBarContainer: {\n    borderRight: \"1px solid #ccc\",\n    paddingRight: \"25px\",\n  },\n  caretStyle: {\n    textDecoration: 'none',\n    color: '#272E4C',\n    opacity: 0.6\n  },\n  checkbox: {\n    '&.Mui-checked': {\n      color: '#1e2071',\n    },\n  },\n  menuList: {\n\t\tdisplay: \"inline-block\",\n\t\tpadding: \"10px 80px 10px 0\"\n\t},\n\tmenuLink: {\n\t\tcolor: \"#929292\",\n\t\tdisplay: \"block\",\n\t\tfontSize: \"1.10em\",\n\t\t'&:hover': {\n\t\t\tcolor: \"#3ab77d\",\n\t\t}\n    },\n\tLinkActive: {\n\t\tcolor: \"#3ab77d\",\n        fontWeight: \"bold\",\n        textDecoration: \"underline\"\n\t}\n}));\n\nexport const LookupPage = () => {\n  const [activeHeader, setActiveHeader] = useState('Codes');\n  const [activeClass, setActiveClass] = useState(0);\n  const [activeItem, setActiveItem] = useState('ICD-10');\n\n  const classes = useStyles();\n\n  const activeSideBarItem = (item) => {\n    setActiveItem(item);\n  }\n\n  const handleMenuClick = (item, index) => {\n    setActiveHeader(item);\n    setActiveClass(index)\n}\n\n  // console.log('Header ', activeHeader, 'Side ', activeItem)\n  return (\n    <div className={classes.main}>\n      <Grid\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n        spacing={0}\n        className={classes.gridContainer}\n      >\n        <Grid item>\n          <Typography className={classes.headerTitle}>Lookup</Typography>\n        </Grid>\n      </Grid>\n      <GridHorizontalDivider height=\"15px\" />\n\n      {/* HEADER */}\n\n      <Grid item xs={6}>\n        <ul style={{ padding: '0', margin: '0' }}>\n          {\n            page_tab_titles.map((item, i) => (\n              <li className={classes.menuList}>\n                <Link className={classNames(classes.menuLink, activeClass === i ? classes.LinkActive : null)} onClick={() => handleMenuClick(item, i)}>{item}</Link>\n              </li>\n            ))\n          }\n        </ul>\n      </Grid>\n\n      <Grid container justify=\"space-between\" spacing={0}>\n        <GridHorizontalDivider height=\"30px\" />\n\n        <Grid item xs={2} className={classes.sideBarContainer}>\n          <SideMenu\n            items={sideBarItems[activeHeader]}\n            activeItems={activeSideBarItem}\n            reset={activeHeader}\n          ></SideMenu>\n        </Grid>\n\n        {activeItem === 'ICD-10' && activeHeader === 'Codes' ? (\n          <Grid item xs={12} md={10}>\n            <ICD10Section classes={classes} />\n          </Grid>\n        ) : activeItem === 'CPT' && activeHeader === 'Codes' ? (\n          <Grid item xs={12} md={10}>\n            <CPTSection classes={classes} />\n          </Grid>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: Store) => state.home;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  Map: bindActionCreators(LookupActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };\n"],"sourceRoot":""}