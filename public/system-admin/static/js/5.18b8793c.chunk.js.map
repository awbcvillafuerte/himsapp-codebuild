{"version":3,"sources":["Components/UI/ModalComponent/ModalComponent.tsx","Pages/Lookup/Components/Loader/index.tsx","../node_modules/@material-ui/icons/Close.js","Components/UI/SubHeader/index.tsx","Components/UI/SideMenu/index.tsx","Components/UI/TableComponent/ReactTable.tsx","../node_modules/@material-ui/system/esm/merge.js","../node_modules/@material-ui/system/esm/css.js","../node_modules/@material-ui/system/esm/compose.js","../node_modules/@material-ui/system/esm/breakpoints.js","../node_modules/@material-ui/system/esm/style.js","../node_modules/@material-ui/system/esm/borders.js","../node_modules/@material-ui/system/esm/display.js","../node_modules/@material-ui/system/esm/flexbox.js","../node_modules/@material-ui/system/esm/positions.js","../node_modules/@material-ui/system/esm/palette.js","../node_modules/@material-ui/system/esm/shadows.js","../node_modules/@material-ui/system/esm/sizing.js","../node_modules/@material-ui/system/esm/spacing.js","../node_modules/@material-ui/system/esm/memoize.js","../node_modules/@material-ui/system/esm/typography.js","../node_modules/@material-ui/core/esm/styles/styled.js","../node_modules/@material-ui/core/esm/Box/Box.js","Pages/Roles/ActionConsts.ts","Pages/Roles/RolesActions.ts","Pages/Roles/Components/ViewPolicies.tsx","Pages/Roles/Components/EditPolicies.tsx","Pages/Roles/Components/Policies.tsx","Components/UI/SearchBar/APICallSearch.tsx","Pages/Roles/Components/AddUserRoleBody.tsx","Components/UI/SearchBar/SearchUserGroup.tsx","Pages/Roles/Components/AddGroupRoleBody.tsx","Pages/Roles/Components/GroupsAndUsers.tsx","Pages/Roles/RolesPage.tsx"],"names":["useStyles","makeStyles","theme","dialog","dialogAction","marginBottom","spacing","marginTop","justifyContent","dialogContentContainer","width","container","paddingRight","paddingLeft","closeButton","position","right","top","color","palette","grey","dialogTitle","fontSize","fontWeight","ModalComponent","props","classes","open","isModalOpen","onClose","aria-labelledby","maxWidth","className","justify","alignItems","direction","item","xs","disableTypography","id","title","aria-label","onClick","message","children","undefined","buttons","defaultProps","root","height","zIndex","bottom","left","textAlign","backgroundColor","outline","display","flexDirection","Loader","size","_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","grayBg","padding","mainContainer","sectionTitle","subSectionTitle","editBtn","alignRight","menuList","menuLink","LinkActive","textDecoration","SubHeader","buttonName","headingTitle","breadCrumbsArray","buttonFunc","layoutType","menuItemsArray","activeItems","enableButton","React","activeClass","setActiveClass","gutterBottom","length","map","crumbs","i","name","to","link","style","margin","classNames","itemName","index","variant","sideBarLists","listStyle","sideBarLink","sideBarLinkDisabled","pointerEvents","SideMenu","items","setActiveItem","useState","useEffect","reset","label","disabled","statusOption","Select","restProps","renderValue","selected","find","key","FilterCell","filter","onFilter","filteringEnabled","column","utils","MomentUtils","format","inputVariant","invalidDateMessage","onChange","date","toISOString","paddingTop","e","target","labelWidth","placeholder","SortingIcon","marginLeft","icon","faSortUp","faSortDown","SortLabel","onSort","hideSortIcon","textOverflow","overflow","faSort","groupIconContentCell","expanded","verticalAlign","faAngleUp","faAngleDown","ReactTable","rows","columns","disableSort","disableFilter","enableGrouping","groupColumnName","viewOnly","columnExtensions","sortingStateColumnExtensions","defaultSorting","onDeleteRow","enableSelection","enableSelectAll","onRowClick","totalCount","onPageChange","currentPage","pageSize","onSetPageSize","onCheckRow","onSelectGroup","loading","onSortingChange","enableIntegratedSorting","enableOpenGroupTotalChecked","selection","setSelection","pageSizes","sorting","setSorting","selectCell","row","onToggle","faMinusSquare","checkedIcon","faCheckSquare","checked","stopPropagation","onCurrentPageChange","onPageSizeChange","onSelectionChange","grouping","columnName","onFiltersChange","onFilterChange","messages","noData","cellComponent","faMinusCircle","showSortingControls","sortLabelComponent","highlightRow","selectByRowClick","showSelectAll","showSelectionColumn","contentComponent","isChecked","countChecked","countItems","data","iconComponent","groupNameChecked","acc","clone","styleFunction","newStyleFunction","output","css","input","fields","keys","forEach","prop","indexOf","omit","filterProps","propTypes","concat","_len","arguments","styles","Array","_key","fn","reduce","values","sm","md","lg","xl","defaultBreakpoints","up","handleBreakpoints","propValue","styleFromPropValue","isArray","themeBreakpoints","breakpoints","_themeBreakpoints","breakpoint","getPath","obj","path","split","options","_options$cssProperty","cssProperty","themeKey","transform","themeMapping","propValueFinal","getBorder","minWidth","maxHeight","minHeight","properties","m","p","directions","t","r","b","l","x","y","aliases","marginX","marginY","paddingX","paddingY","getCssProperties","cache","arg","memoize","_prop$split","_prop$split2","a","property","dir","spacingKeys","getStyleFromPropValue","cssProperties","transformer","transformed","Math","abs","getValue","themeSpacing","getTransformer","Component","componentCreator","defaultTheme","positions","shadows","Box","ActionConsts","ResetReducer","SetReducer","RolesActions","payload","type","ViewPolicies","onNavigateSideMenu","Grid","InputLabel","inputLabel","htmlFor","Typography","role_id","module","description","status","effectivity_date","moment","expiry_date","associate_groups","groups","Link","console","log","date_last_update","EditPolicies","dataChanges","isProcessMaker","effectivityDate","expiryDate","editData","setEditData","onBlur","is_processMaker","Checkbox","inputProps","maxDate","subtract","startOf","maxDateMessage","clearable","minDate","add","minDateMessage","Policies","mode","rbacList","rbacState","onUpdateChange","onSortChange","onSearch","loadRbacList","isAddedModalRole","setIsAddedModalRole","moduleValue","setModuleValue","isModuleModalOpen","setIsModuleModalOpen","moduleLabel","setModuleLabel","isModalConfirmChangeModule","setIsModalConfirmChangeModule","newRbacList","setNewRbacList","setLoading","defaultFilters","setDefaultFilters","isModalDeleteSuccessOpen","setIsModalDeleteSuccessOpen","isModalCannotEditOpen","setIsModalCannotEditOpen","isEdited","setIsEdited","checkedList","setCheckedList","moduleItems","handleUpdateCheck","_data","rbac","is_processmaker","_id","group","ReactSearch","checklist","push","list","handleOnCheckRow","limit","count","setTimeout","handleOnCheckGroup","Button","button","menuItems","moduleName","Number","handleContinueRole","gridContainerNoPadding","searchIcon","searchContainer","borderRadius","searchBox","border","searchLabel","comboBoxContainer","opacity","overflowY","APICallSearch","newComboList","setNewComboList","searchValue","setSearchValue","typingTimeout","setTypingTimeout","isLoadingChoices","setIsLoadingChoices","ref","setRef","typing","setTyping","getChoices","usernames","selectedUsers","username","usersWithRole","usernamesWithRole","getRolesUsersLists","where","nin","then","resp","resp_body","body","roles","array","some","removeDuplicateRoles","full_name","first_name","middle_name","last_name","catch","handleKeyPress","event","clearTimeout","faSearch","onKeyUp","keyCode","which","current","focus","searchCombo","selectedItems","xIcon","AddUserRoleBody","initializeData","state","removeDuplicates","setUsersWithRole","handleOnSearch","arr","setSelectedUsers","handleRemoveItem","splice","handleOnSaveItems","onSave","apiCallFields","and","or","roleId","prevProps","this","setState","refreshUsersWithRole","buttonsContainer","selectedContainer","selectedText","saveButton","cancelButton","faTimesCircle","SearchUserGroup","comboListsArray","comboBoxMode","searchJSONValue","combo","checkMatchString","jsonValue","newRegEx","RegExp","toLowerCase","match","handleSearch","AddGroupRoleBody","comboArray","getAllGroups","res","group_id","user_count","date_updated","pmaker_uid","amount_limit","newChoices","c","beauty","err","user_fields","employee_id","department","main_module","main_role","group_name","reports_to","last_login","GroupsAndUsers","activeItem","groupShowBlock","setGroupShowBlock","userShowBlock","setUserShowBlock","isFetching","setIsFetching","userList","setUserList","skip","order","userTable","setUserTable","offset","query","tableStates","setTableState","method","modalProps","setModalProps","confirmationModalProps","setConfirmationModalProps","refreshUsers","setRefreshUsers","isConfirmDetachUserRoleModalOpen","setIsConfirmDetachUserRoleModalOpen","userDetachRole","setUserDetachRole","attachUserRoleNotifModalOpen","setAttachUserRoleNotifModalOpen","setAttachUserRoleSuccess","userColumns","getCellValue","charAt","toUpperCase","slice","APIGetGroupsAttachToRoleList","attachUserRole","attachUserRoles","getUserLists","detachUserRole","detachUserRoles","page","search","_filter","_order","like","lte","endOf","gte","params","response","ceil","newState","saveSummary","getAllGroupsAttachToRole","error","updateTableState","handleCloseModalProps","handleOpenConfirmationModalProps","roledata","handleCloseConfirmationModalProps","selectedGroupToRemove","user_account","groupRoles","newGroupRoles","attachRoleToGroups","JSON","stringify","handleDeleteGroup","LoadingIndicator","handleMenuClick","newEntry","newRow","hasOwnProperty","textTransform","rowDataFixer","wordWrapEnabled","align","sortingEnabled","w","parseInt","join","sort","handleClose","showBlock","selectedGroupId","isUnique","onSaveAddRoleToGroup","attach_role_data","user","role","main","headMain","gridContainer","paddingBottom","sideBarContainer","borderRight","contentContainer","fieldGroupTitle","listItemTextRoot","flex","listItemTextPrimarySelected","cursor","listItemTextPrimaryNotSelected","dropzone","keyboardDatePicker","checkbox","radio","appBar","grow","flexGrow","buttonTitle","buttonSubTitle","RolesPage","setViewOnly","activeItemIndex","setActiveItemIndex","isModalConfirmExitOpen","setIsModalConfirmExitOpen","isModalConfirmSaveOpen","setIsModalConfirmSaveOpen","isModalSaveSuccessOpen","setIsmodalSaveSuccessOpen","setMode","isOpenSideModalBlock","setIsOpenSideModalBlock","policyResponse","setPolicyResponse","setModuleName","setRbacList","breadCrumbs","setBreadCrumbs","rbacCount","setRoleId","policyData","setPolicyData","isRedirect","setIsRedirect","currentModule","setCurrentModule","setRbacState","set","setLoadRbacList","showDeactivationWarning","setShowDeactivationWarning","sideBarItems","handleGetRoleData","getRoleData","_crumbs","handGetRbacList","alert","isEmpty","resParam","_mode","curModule","getRbacList","policy","activeSideBarItem","handleModalConfirmationClose","pathname","onChangeModuleName","generateRoleId","handleChangeModuleName","openSideModalBlock","updateRoleRbac","handleOnSave","today","exp_date","isSameOrAfter","mapStateToProps","mapDispatchToProps","dispatch","Map","bindActionCreators"],"mappings":"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","file":"static/js/5.18b8793c.chunk.js","sourcesContent":["import React, { FC } from 'react';\n// import Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\n\nimport { IModalComponent } from './IModalComponent';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tdialog: {},\n\tdialogAction: {\n\t\tmarginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        justifyContent:'center'\n\t},\n\tdialogContentContainer: {\n        width: '100%'\n\t},\n\tcontainer: {\n        paddingRight:'15px',\n        paddingLeft:'15px',\n        width: '450px'\n\t},\n\tcloseButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n\t},\n\tdialogTitle: {\n        marginTop: theme.spacing(2),\n        // marginBottom: theme.spacing(2),\n        fontSize: '16px',\n        color: '#272E4C',\n\t\tfontWeight: 700\n    },\n}));\n\nexport const ModalComponent: FC<IModalComponent.IProps> = props => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={props.isModalOpen}\n\t\t\tonClose={props.onClose}\n\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\tmaxWidth=\"sm\"\n\t\t\tclassName={classes.dialog}\n\t\t> \n\t\t\t <div>\n                <Grid container className={classes.container} justify=\"flex-start\" alignItems=\"flex-start\" direction=\"column\">\n                    <Grid item xs>\n\t\t\t\t\t\t<DialogTitle className={classes.dialogTitle} disableTypography={false} id=\"form-dialog-title\" >\n\t\t\t\t\t\t\t<Box fontWeight={700}>{props.title}</Box>\n\t\t\t\t\t\t\t<IconButton aria-label=\"close\" className={classes.closeButton} onClick={props.onClose}>\n                                <CloseIcon />\n                            </IconButton>\n\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs className={classes.dialogContentContainer}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\tprops.message ? \n\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"flex-start\">\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t{props.message}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</DialogContent> : null\n\t\t\t\t\t\t} \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprops.children ? props.children : null\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<DialogActions className={classes.dialogAction}>\n\t\t\t\t\t\t\t{ props.buttons !== undefined ?\n\t\t\t\t\t\t\t\tprops.buttons: null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t</Grid>\n                </Grid>\n\t\t\t</div>\n\t\t</Dialog>\n\t);\n};\n\nModalComponent.defaultProps = {\n\tisModalOpen: false,\n};\n","import * as React from 'react';\nimport { CircularProgress } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface LoaderProps {\n}\n\nconst useStyles = makeStyles({\n\troot: {\n        position: 'fixed',\n        width: '100%',\n        height: '100%',\n        zIndex: 9999,\n        right: '0px',\n        bottom: '0px',\n        top: '0px',\n        left: '0px',\n        textAlign: \"center\",\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    },\n    container:{\n        height: '100%',\n        outline: 0,\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        flexDirection: 'column'\n    }\n});\n\nexport const Loader: React.FC<LoaderProps> = (): JSX.Element => {\n    // const buttonclasses = ButtonStyle();\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <div className={classes.container}>\n                <CircularProgress size={150}/>\n            </div>\n        </div>\n    )\n}\n\nLoader.defaultProps = {}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\nimport { Link } from '@material-ui/core';\nimport { Link as RouteLink } from 'react-router-dom'\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles({\n\tgrayBg: {\n\t\tbackgroundColor: '#F5F7FB',\n\t\tpadding: '25px 24px'\n\t},\n\tmainContainer: {\n\t\tpadding: '25px 24px'\n\t},\n\tsectionTitle: {\n\t\tfontSize: 24,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tsubSectionTitle: {\n\t\tfontSize: 14,\n\t\tfontWeight: 400,\n\t\tcolor: '#272e4c',\n\t},\n\teditBtn: {\n\t\twidth: '135px',\n\t\tfontSize: '14px',\n\t\tcolor: '#fff',\n\t},\n\talignRight: {\n\t\ttextAlign: 'right',\n\t},\n\tmenuList: {\n\t\tdisplay: \"inline-block\",\n\t\tpadding: \"10px 45px 10px 0\"\n\t},\n\tmenuLink: {\n\t\tcolor: \"#929292\",\n\t\tdisplay: \"block\",\n\t\tfontSize: \"1.10em\",\n\t\t'&:hover': {\n\t\t\tcolor: \"#3ab77d\",\n\t\t}\n\t},\n\tLinkActive: {\n\t\tcolor: \"#3ab77d\",\n\t\tfontWeight: \"bold\",\n\t\ttextDecoration: \"underline\"\n\t}\n});\n\n\ninterface SubHeaderProps {\n\theadingTitle: string;\n\tbreadCrumbsArray: any[],\n\tbuttonName?: string,\n\tlayoutType?: string,\n\tmenuItemsArray?: any,\n\tenableButton?: boolean\n\tbuttonFunc?: () => void,\n\tactiveItems?: (item) => void,\n\n}\n\nexport const SubHeader: React.FC<SubHeaderProps> = (\n\tprops: SubHeaderProps,\n): JSX.Element | null => {\n\tconst {\n\t\tbuttonName,\n\t\theadingTitle,\n\t\tbreadCrumbsArray,\n\t\tbuttonFunc,\n\t\tlayoutType,\n\t\tmenuItemsArray,\n\t\tactiveItems,\n\t\tenableButton\n\t} = props\n\tconst classes = useStyles();\n\tconst [activeClass, setActiveClass] = React.useState(0);\n\n\n\tconst menulinkClick = (itemName, index) => {\n\t\tactiveItems !== undefined && activeItems(itemName)\n\t\tsetActiveClass(index)\n\t}\n\n\n\n\n\treturn (\n\t\t<>\n\t\t\t<div className={layoutType === 'layout_1' ? classes.mainContainer : classes.grayBg}>\n\t\t\t\t<Grid container xs={12} alignItems={'center'} >\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlayoutType === 'layout_1' &&\n\t\t\t\t\t\t\t<Typography gutterBottom className={classes.subSectionTitle}>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbreadCrumbsArray && breadCrumbsArray.length > 0 && breadCrumbsArray.map((crumbs, i) => (\n\t\t\t\t\t\t\t\t\t\tbreadCrumbsArray.length === i + 1 ? <b>{crumbs.name ? crumbs.name : crumbs}</b> : <><RouteLink to={`${crumbs.link ? crumbs.link : ''}`} style={{ color: '#272E4C', textDecoration: 'none' }}>{crumbs.name ? crumbs.name : crumbs}</RouteLink> / </>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Typography gutterBottom className={classes.sectionTitle}>\n\t\t\t\t\t\t\t{headingTitle}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlayoutType === 'layout_2' &&\n\t\t\t\t\t\t\t<ul style={{ padding: '0', margin: '0' }}>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmenuItemsArray.length > 0 && menuItemsArray.map((item, i) => (\n\t\t\t\t\t\t\t\t\t\t<li className={classes.menuList}>\n\t\t\t\t\t\t\t\t\t\t\t<Link className={classNames(classes.menuLink, activeClass === i ? classes.LinkActive : null)} onClick={() => menulinkClick(item.name, i)}>{item.name}</Link>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6} className={classes.alignRight}>\n\t\t\t\t\t\t{enableButton ?\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tid=\"button-id\"\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.editBtn}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tbuttonFunc !== undefined && buttonFunc()\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t{buttonName}\n\t\t\t\t\t\t\t</Button> : ''}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t</>\n\t)\n}","import * as React from 'react';\nimport { Link, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles({\n\tsideBarLists: {\n\t\tpadding: 0,\n\t\tmargin: 0,\n        listStyle: 'none',\n        position: 'sticky',\n        top: 20\n\t},\n\tsideBarLink: {\n\t\tcolor: \"#272e4c\",\n\t\tmargin: \"0 0 10px\",\n\t\tdisplay: \"block\"\n    },\n    sideBarLinkDisabled: {\n        color: \"rgba(39, 46, 76, 0.6)\",\n\t\tmargin: \"0 0 10px\",\n        display: \"block\",\n        pointerEvents: 'none'\n    },\n    LinkActive: {\n        color: \"#2C2E8E\",\n        fontWeight: \"bold\",\n        textDecoration: \"underline\"\n    }\n});\n\nexport interface ISideMenuProps {\n    items: any,\n    activeItems: (item) => void,\n    reset?: any,\n    setActiveItem?: number,\n}\n\nexport const SideMenu : React.FC<ISideMenuProps> = (props: ISideMenuProps): JSX.Element => {\n    const {items , activeItems, setActiveItem} = props;\n    const [activeClass, setActiveClass] = useState(0);\n    const classes = useStyles();\n    useEffect(() => {\n        // resets the active item to zero when\n        // the reset props changes\n        setActiveItem && setActiveClass(setActiveItem)\n        if(props.reset !== undefined){\n            setActiveClass(0)\n            activeItems(items[0].name)\n        }\n    }, [props.reset])\n\n    const sideBarlinkClick = (itemName, index) => {\n        activeItems(itemName)\n        setActiveClass(index)\n    }\n\n    return (\n        <>\n            <ul className={classes.sideBarLists}>\n                {\n                    items.map((item, i) => (\n                        <li>\n                            {\n                                item.label !== undefined &&\n                                <Typography variant={'subtitle2'} style={{color:'#929292', fontSize: '12px'}}>{ item.label }</Typography>\n                            }\n                            {\n                                !item.disabled ? \n                                 <Link \n                                    className={classNames(classes.sideBarLink, setActiveItem ? setActiveItem === i ?  classes.LinkActive : null : activeClass === i ? classes.LinkActive : null)} \n                                    onClick={() => sideBarlinkClick(item.name, i)}\n                                >\n                                    { item.name } \n                                </Link> :\n                                <Link\n                                    className={classNames(classes.sideBarLinkDisabled)}\n                                >\n                                    { item.name }\n                                </Link>\n                            }\n                        </li>\n                    ))\n                }\n            </ul>\n        </>\n    )\n}","import * as React from 'react';\n// import { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n    FilteringState,\n    SortingState,\n    IntegratedSorting,\n    IntegratedGrouping,\n    GroupingState,\n    SelectionState,\n    // IntegratedPaging,\n    PagingState,\n    CustomPaging,\n} from '@devexpress/dx-react-grid';\nimport {\n    Grid,\n    Table,\n    //   Toolbar,\n    TableHeaderRow,\n    TableFilterRow,\n    TableGroupRow,\n    TableSelection,\n    PagingPanel,\n    // TableFixedColumns,\n} from '@devexpress/dx-react-grid-material-ui';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    // faSearch,\n    faCheckSquare,\n    faMinusSquare,\n    faSort,\n    faSortUp,\n    faSortDown,\n    faMinusCircle,\n    faAngleDown,\n    faAngleUp,\n    // faPlus,\n    // faCheck, \n    // faTimes\n} from '@fortawesome/free-solid-svg-icons';\nimport * as MaterialUI from '@material-ui/core';\nimport { Loader } from 'Pages/Lookup/Components/Loader';\nimport './ReactTable.scss';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport MomentUtils from '@date-io/moment'\n\n// import { ReactSearch } from '../SearchBar/ReactSearch';\n\nexport interface IReactTableProps {\n    rows: any,\n    columns: any,\n    disableSort?: boolean,\n    disableFilter?: boolean,\n    enableIntegratedSorting?: boolean,\n    enableGrouping?: boolean,\n    enableSelection?: boolean,\n    enableSelectAll?: boolean,\n    enableOpenGroupTotalChecked?: boolean,\n    groupColumnName?: string,\n    viewOnly?: boolean,\n    columnExtensions?: any[],\n    message?: string,\n    sortingStateColumnExtensions?: any[],\n    defaultSorting?: any[],\n    totalCount?: number,\n    currentPage?: number,\n    pageSize?: number,\n    groupNameChecked?: any,\n    loading?: boolean,\n    defaultFilters?: any,\n    onDeleteRow?: (row) => void,\n    onRowClick?: (row) => void,\n    onPageChange?: (page) => void,\n    onSetPageSize?: (size) => void,\n    onCheckRow?: (row) => void,\n    onSelectGroup?: (group) => void,\n    onFilterChange?: (filter) => void,\n    onSortingChange?: (sort) => void,\n\n}\n\nconst defaultProps: IReactTableProps = {\n    rows: [],\n    columns: [],\n    enableIntegratedSorting: false,\n    disableSort: false,\n    disableFilter: false,\n    enableGrouping: false,\n    enableSelection: false,\n    enableSelectAll: false,\n    enableOpenGroupTotalChecked: false,\n    groupColumnName: '',\n    viewOnly: true,\n    columnExtensions: [],\n    message: '',\n    sortingStateColumnExtensions: [],\n    defaultSorting: [],\n    totalCount: 0,\n    currentPage: 0,\n    pageSize: 0,\n    groupNameChecked: [],\n    loading: false,\n}\n\nconst statusOption = [\n    {\n        value: 'all',\n        label: 'All',\n    },\n    {\n        value: 'active',\n        label: 'Active'\n    },\n    {\n        value: 'deactivated',\n        label: 'Deactivated'\n    },\n    {\n        value: 'awaiting activation',\n        label: 'Awaiting activation'\n    }\n]\n\nconst Select = ({ items, ...restProps }: any) => {\n    return (\n        <MaterialUI.Select\n            variant='outlined'\n            style={{ width: '100%' }}\n            renderValue={(selected: any) => {\n                if (selected != null) {\n                    const value: any = items.find((item: any) => {\n                        return item.value === selected;\n                    });\n                    if (value) {\n                        return value.label;\n                    } else {\n                        return '——';\n                    }\n                }\n                return '——';\n            }}\n            {...restProps}\n        >\n            {items.map((item: any, i: number) => (\n                <MaterialUI.MenuItem key={i} value={item.value}>\n                    {item.label}\n                </MaterialUI.MenuItem>\n            ))}\n        </MaterialUI.Select>\n    );\n};\n\nconst FilterCell = ({ filter, onFilter, filteringEnabled, classes, column }: any) => {\n    if (filteringEnabled) {\n        if (column.name === 'action_delete') {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n                </MaterialUI.TableCell>\n            )\n        } else if (column.name === 'last_login') {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                        <KeyboardDatePicker\n                            variant=\"dialog\"\n                            format=\"MMMM DD, YYYY\"\n                            inputVariant=\"outlined\"\n                            value={filter ? filter.value : ''}\n                            invalidDateMessage=\"\"\n                            onChange={date => { onFilter(date ? { value: date.toISOString() } : null) }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </MaterialUI.TableCell>\n            )\n        } else if (column.name === 'status') {\n            return (\n                <MaterialUI.TableCell classes={classes} style={{ paddingTop: '5px' }}>\n                    <Select\n                        onChange={e => onFilter(e.target.value ? { value: e.target.value } : null)}\n                        name={'status'}\n                        items={statusOption}\n                        id={'status'}\n                        value={filter ? filter.value : ''}\n                    />\n                </MaterialUI.TableCell>\n            )\n        } else {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n                    <MaterialUI.OutlinedInput\n                        classes={classes}\n                        style={{ width: '100%' }}\n                        value={filter ? filter.value : ''}\n                        labelWidth={0}\n                        onChange={e => onFilter(e.target.value ? { value: e.target.value } : null)}\n                        placeholder=\"\"\n                    />\n                </MaterialUI.TableCell>\n            );\n        }\n    }\n    return null;\n}\n\nconst SortingIcon = ({ direction }: any) =>\n    direction === 'asc' ? (\n        <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortUp} />\n    ) : (\n            <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortDown} />\n        );\n\nconst SortLabel = ({ column, onSort, children, direction }: any) => {\n    if (column.name === 'action_delete') {\n        return null;\n    } else {\n        return (\n            <MaterialUI.TableSortLabel hideSortIcon={true} onClick={onSort} style={{ textOverflow: \"ellipsis\", overflow: \"hidden\" }}>\n                {children}\n                {direction ? (\n                    <SortingIcon direction={direction} />\n                ) : (\n                        <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSort} />\n                    )}\n            </MaterialUI.TableSortLabel>\n        );\n    }\n};\n\n\nconst groupIconContentCell = ({ expanded }: any) => {\n    return (\n        <>\n            <div style={{ padding: '8.5px 12px', display: 'table-cell', verticalAlign: 'middle' }} >\n                <FontAwesomeIcon\n                    icon={expanded ? faAngleUp : faAngleDown}\n                    size={'2x'}\n                    color={\"rgba(0, 0, 0, 0.54)\"}\n                />\n            </div>\n        </>\n    )\n}\n\n\n\nexport const ReactTable: React.FC<IReactTableProps> = (props: IReactTableProps): JSX.Element => {\n    const {\n        rows,\n        columns,\n        disableSort,\n        disableFilter,\n        enableGrouping,\n        groupColumnName,\n        viewOnly,\n        message,\n        columnExtensions,\n        sortingStateColumnExtensions,\n        defaultSorting,\n        onDeleteRow,\n        enableSelection,\n        enableSelectAll,\n        onRowClick,\n        totalCount,\n        onPageChange,\n        currentPage,\n        pageSize,\n        onSetPageSize,\n        onCheckRow,\n        onSelectGroup,\n        // groupNameChecked,\n        loading,\n        onSortingChange,\n        enableIntegratedSorting,\n        enableOpenGroupTotalChecked\n    } = props;\n\n    const [selection, setSelection] = React.useState<any>([])\n    const [pageSizes] = React.useState([5, 10, 15]);\n    const [sorting, setSorting] = React.useState([])\n    // const [pageSize, setPageSize] = React.useState(10);\n    // console.log(onCheckRow, onSelectGroup)\n\n    const setSortingMethod = (e: any) => {\n        onSortingChange && onSortingChange(e)\n        setSorting(e);\n    }\n    const handleSelectionChange = (row: any[]) => {\n        if (onRowClick) {\n            if (!enableSelection) {\n                onRowClick(row[0]);\n            }\n        } else {\n            setSelection(row);\n        }\n    }\n\n    const selectCell = ({ row, onToggle }: any) => {\n        return (\n            <MaterialUI.TableCell>\n                <MaterialUI.Checkbox\n                    icon={<FontAwesomeIcon icon={faMinusSquare} />}\n                    checkedIcon={<FontAwesomeIcon icon={faCheckSquare} />}\n                    checked={row.checked}\n                    onClick={(e: any) => {\n                        e.stopPropagation();\n                        onToggle();\n                        onCheckRow && onCheckRow(row);\n                    }}\n                />\n            </MaterialUI.TableCell>\n        )\n    }\n\n\n    const groupContentCell = ({ row }: any) => {\n\n        let isChecked = false;\n        let countChecked = 0;\n        let countItems = 0;\n        rows.map(data => {\n            if (data.name === row.value) {\n                countItems++;\n                if (data.checked) {\n                    isChecked = true;\n                    countChecked++;\n                }\n            }\n        })\n\n        if (!viewOnly) {\n            return (\n                <>\n                    <div style={{ padding: '8.5px 15.5px', display: 'table-cell', verticalAlign: 'middle' }} >\n                        <MaterialUI.Checkbox\n                            icon={<FontAwesomeIcon icon={faMinusSquare} />}\n                            checkedIcon={<FontAwesomeIcon icon={faCheckSquare} />}\n                            checked={isChecked}\n                            onClick={e => {\n                                e.stopPropagation();\n                                onSelectGroup && onSelectGroup(row.value)\n                            }}\n                        />\n                    </div>\n                    <div style={{ padding: '8.5px 2px', display: 'table-cell', verticalAlign: 'middle' }} >\n                        <span>{row.value}</span>\n                    </div>\n                    <div style={{ padding: '8.5px 30px', display: 'table-cell', verticalAlign: 'middle' }} >\n                        <span>{countChecked}/{countItems}</span>\n                    </div>\n                </>\n            )\n        } else if (viewOnly && enableOpenGroupTotalChecked) {\n            return (\n                <>\n                    <div style={{ padding: '8.5px 2px', display: 'table-cell', verticalAlign: 'middle' }} >\n                        <span>{row.value}</span>\n                    </div>\n                    <div style={{ padding: '8.5px 30px', display: 'table-cell', verticalAlign: 'middle' }} >\n                        <span>{countChecked}/{countItems}</span>\n                    </div>\n                </>\n            )\n        } else {\n            return (\n                <div style={{ padding: '8.5px 2px', display: 'table-cell', verticalAlign: 'middle' }} >\n                    <span>{row.value}</span>\n                </div>\n            )\n        }\n\n    }\n\n    const tableCell = ({ value, row, column }: any) => {\n        if (column.name === 'action_delete') {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 30px 8px 10px', textAlign: 'right' }}>\n\n                    <span\n                        onClick={() => {\n                            onDeleteRow && onDeleteRow(row)\n                        }}>\n\n                        <FontAwesomeIcon\n                            icon={faMinusCircle}\n                        />\n                    </span>\n\n                </MaterialUI.TableCell>\n            )\n        } else {\n            return (\n                <MaterialUI.TableCell>\n                    {value}\n                </MaterialUI.TableCell>\n            )\n        }\n    }\n\n\n    return (\n        <div style={{ padding: '10px 0' }}>\n            <Paper>\n                <Grid\n                    rows={rows}\n                    columns={columns}\n                >\n                    <PagingState\n                        currentPage={currentPage}\n                        onCurrentPageChange={onPageChange}\n                        pageSize={pageSize}\n                        onPageSizeChange={onSetPageSize}\n                    />\n                    <CustomPaging\n                        totalCount={totalCount}\n                    />\n                    {!disableSort && onSortingChange ? (\n                        <SortingState\n                            defaultSorting={defaultSorting}\n                            columnExtensions={sortingStateColumnExtensions}\n                            sorting={sorting}\n                            onSortingChange={setSortingMethod}\n                        />\n                    ) : !disableSort ? (\n                        <SortingState\n                            defaultSorting={[]}\n                        />\n                    ) : null}\n                    {!viewOnly ? <SelectionState\n                        selection={selection}\n                        onSelectionChange={handleSelectionChange}\n                    /> : null}\n                    {enableGrouping && groupColumnName ? <GroupingState grouping={[{ columnName: groupColumnName }]} /> : null}\n                    {!disableFilter ?\n                        <FilteringState\n                            onFiltersChange={props.onFilterChange}\n                        /> : null}\n                    {/* <IntegratedPaging /> */}\n                    {enableIntegratedSorting ? <IntegratedSorting /> : null}\n                    {enableGrouping ? <IntegratedGrouping /> : null}\n                    <Table\n                        columnExtensions={columnExtensions}\n                        messages={{ noData: message }}\n                        cellComponent={tableCell}\n                    />\n                    <TableHeaderRow\n                        showSortingControls={!disableSort}\n                        sortLabelComponent={SortLabel}\n                    />\n                    {/* <TableFixedColumns /> */}\n                    <PagingPanel\n                        pageSizes={enableGrouping ? [30, 40, 50] : pageSizes}\n                    />\n                    {!viewOnly ?\n                        <TableSelection\n                            highlightRow\n                            selectByRowClick\n                            showSelectAll={enableSelectAll ? true : undefined}\n                            cellComponent={!loading ? selectCell : selectCell}\n                            showSelectionColumn={enableSelection}\n                        /> : null}\n\n                    {enableGrouping ?\n                        <TableGroupRow\n                            contentComponent={groupContentCell}\n                            iconComponent={groupIconContentCell}\n                        ></TableGroupRow> : null}\n                    {!disableFilter ? <TableFilterRow cellComponent={FilterCell} /> : null}\n                </Grid>\n                {\n                    loading &&\n                    <Loader />\n                }\n            </Paper>\n        </div>\n    )\n}\n\nReactTable.defaultProps = defaultProps;","import deepmerge from 'deepmerge'; // < 1kb payload overhead when lodash/merge is > 3kb.\n\nfunction merge(acc, item) {\n  if (!item) {\n    return acc;\n  }\n\n  return deepmerge(acc, item, {\n    clone: false // No need to clone deep, it's way faster.\n\n  });\n}\n\nexport default merge;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport merge from './merge';\n\nfunction omit(input, fields) {\n  var output = {};\n  Object.keys(input).forEach(function (prop) {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n}\n\nfunction css(styleFunction) {\n  var newStyleFunction = function newStyleFunction(props) {\n    var output = styleFunction(props);\n\n    if (props.css) {\n      return _extends({}, merge(output, styleFunction(_extends({\n        theme: props.theme\n      }, props.css))), {}, omit(props.css, [styleFunction.filterProps]));\n    }\n\n    return output;\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    css: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['css'].concat(_toConsumableArray(styleFunction.filterProps));\n  return newStyleFunction;\n}\n\nexport default css;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport merge from './merge';\n\nfunction compose() {\n  for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {\n    styles[_key] = arguments[_key];\n  }\n\n  var fn = function fn(props) {\n    return styles.reduce(function (acc, style) {\n      var output = style(props);\n\n      if (output) {\n        return merge(acc, output);\n      }\n\n      return acc;\n    }, {});\n  }; // Alternative approach that doesn't yield any performance gain.\n  // const handlers = styles.reduce((acc, style) => {\n  //   style.filterProps.forEach(prop => {\n  //     acc[prop] = style;\n  //   });\n  //   return acc;\n  // }, {});\n  // const fn = props => {\n  //   return Object.keys(props).reduce((acc, prop) => {\n  //     if (handlers[prop]) {\n  //       return merge(acc, handlers[prop](props));\n  //     }\n  //     return acc;\n  //   }, {});\n  // };\n\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? styles.reduce(function (acc, style) {\n    return _extends(acc, style.propTypes);\n  }, {}) : {};\n  fn.filterProps = styles.reduce(function (acc, style) {\n    return acc.concat(style.filterProps);\n  }, []);\n  return fn;\n}\n\nexport default compose;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport warning from 'warning';\nimport PropTypes from 'prop-types';\nimport merge from './merge'; // The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\n\nvar values = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920\n};\nvar defaultBreakpoints = {\n  // Sorted ASC by size. That's important.\n  // It can't be configured as it's used statically for propTypes.\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n  up: function up(key) {\n    return \"@media (min-width:\".concat(values[key], \"px)\");\n  }\n};\nexport function handleBreakpoints(props, propValue, styleFromPropValue) {\n  process.env.NODE_ENV !== \"production\" ? warning(props.theme, '@material-ui/system: you are calling a style function without a theme value.') : void 0;\n\n  if (Array.isArray(propValue)) {\n    var themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce(function (acc, item, index) {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n\n  if (_typeof(propValue) === 'object') {\n    var _themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n\n    return Object.keys(propValue).reduce(function (acc, breakpoint) {\n      acc[_themeBreakpoints.up(breakpoint)] = styleFromPropValue(propValue[breakpoint]);\n      return acc;\n    }, {});\n  }\n\n  var output = styleFromPropValue(propValue);\n  return output;\n}\n\nfunction breakpoints(styleFunction) {\n  var newStyleFunction = function newStyleFunction(props) {\n    var base = styleFunction(props);\n    var themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    var extended = themeBreakpoints.keys.reduce(function (acc, key) {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction(_extends({\n          theme: props.theme\n        }, props[key]));\n      }\n\n      return acc;\n    }, null);\n    return merge(base, extended);\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    xs: PropTypes.object,\n    sm: PropTypes.object,\n    md: PropTypes.object,\n    lg: PropTypes.object,\n    xl: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl'].concat(_toConsumableArray(styleFunction.filterProps));\n  return newStyleFunction;\n}\n\nexport default breakpoints;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\n\nfunction getPath(obj, path) {\n  if (!path || typeof path !== 'string') {\n    return null;\n  }\n\n  return path.split('.').reduce(function (acc, item) {\n    return acc && acc[item] ? acc[item] : null;\n  }, obj);\n}\n\nfunction style(options) {\n  var prop = options.prop,\n      _options$cssProperty = options.cssProperty,\n      cssProperty = _options$cssProperty === void 0 ? options.prop : _options$cssProperty,\n      themeKey = options.themeKey,\n      transform = options.transform;\n\n  var fn = function fn(props) {\n    if (props[prop] == null) {\n      return null;\n    }\n\n    var propValue = props[prop];\n    var theme = props.theme;\n    var themeMapping = getPath(theme, themeKey) || {};\n\n    var styleFromPropValue = function styleFromPropValue(propValueFinal) {\n      var value;\n\n      if (typeof themeMapping === 'function') {\n        value = themeMapping(propValueFinal);\n      } else if (Array.isArray(themeMapping)) {\n        value = themeMapping[propValueFinal];\n      } else {\n        value = getPath(themeMapping, propValueFinal) || propValueFinal;\n\n        if (transform) {\n          value = transform(value);\n        }\n      }\n\n      if (cssProperty === false) {\n        return value;\n      }\n\n      return _defineProperty({}, cssProperty, value);\n    };\n\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  };\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? _defineProperty({}, prop, responsivePropType) : {};\n  fn.filterProps = [prop];\n  return fn;\n}\n\nexport default style;","import style from './style';\nimport compose from './compose';\n\nfunction getBorder(value) {\n  if (typeof value !== 'number') {\n    return value;\n  }\n\n  return \"\".concat(value, \"px solid\");\n}\n\nexport var border = style({\n  prop: 'border',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderTop = style({\n  prop: 'borderTop',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderRight = style({\n  prop: 'borderRight',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderBottom = style({\n  prop: 'borderBottom',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderLeft = style({\n  prop: 'borderLeft',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderColor = style({\n  prop: 'borderColor',\n  themeKey: 'palette'\n});\nexport var borderRadius = style({\n  prop: 'borderRadius',\n  themeKey: 'shape'\n});\nvar borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderRadius);\nexport default borders;","import style from './style';\nimport compose from './compose';\nexport var displayPrint = style({\n  prop: 'displayPrint',\n  cssProperty: false,\n  transform: function transform(value) {\n    return {\n      '@media print': {\n        display: value\n      }\n    };\n  }\n});\nexport var displayRaw = style({\n  prop: 'display'\n});\nexport var overflow = style({\n  prop: 'overflow'\n});\nexport var textOverflow = style({\n  prop: 'textOverflow'\n});\nexport var visibility = style({\n  prop: 'visibility'\n});\nexport var whiteSpace = style({\n  prop: 'whiteSpace'\n});\nexport default compose(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace);","import style from './style';\nimport compose from './compose';\nexport var flexBasis = style({\n  prop: 'flexBasis'\n});\nexport var flexDirection = style({\n  prop: 'flexDirection'\n});\nexport var flexWrap = style({\n  prop: 'flexWrap'\n});\nexport var justifyContent = style({\n  prop: 'justifyContent'\n});\nexport var alignItems = style({\n  prop: 'alignItems'\n});\nexport var alignContent = style({\n  prop: 'alignContent'\n});\nexport var order = style({\n  prop: 'order'\n});\nexport var flex = style({\n  prop: 'flex'\n});\nexport var flexGrow = style({\n  prop: 'flexGrow'\n});\nexport var flexShrink = style({\n  prop: 'flexShrink'\n});\nexport var alignSelf = style({\n  prop: 'alignSelf'\n});\nexport var justifyItems = style({\n  prop: 'justifyItems'\n});\nexport var justifySelf = style({\n  prop: 'justifySelf'\n});\nvar flexbox = compose(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf);\nexport default flexbox;","import style from './style';\nimport compose from './compose';\nexport var position = style({\n  prop: 'position'\n});\nexport var zIndex = style({\n  prop: 'zIndex',\n  themeKey: 'zIndex'\n});\nexport var top = style({\n  prop: 'top'\n});\nexport var right = style({\n  prop: 'right'\n});\nexport var bottom = style({\n  prop: 'bottom'\n});\nexport var left = style({\n  prop: 'left'\n});\nexport default compose(position, zIndex, top, right, bottom, left);","import style from './style';\nimport compose from './compose';\nexport var color = style({\n  prop: 'color',\n  themeKey: 'palette'\n});\nexport var bgcolor = style({\n  prop: 'bgcolor',\n  cssProperty: 'backgroundColor',\n  themeKey: 'palette'\n});\nvar palette = compose(color, bgcolor);\nexport default palette;","import style from './style';\nvar boxShadow = style({\n  prop: 'boxShadow',\n  themeKey: 'shadows'\n});\nexport default boxShadow;","import style from './style';\nimport compose from './compose';\n\nfunction transform(value) {\n  return value <= 1 ? \"\".concat(value * 100, \"%\") : value;\n}\n\nexport var width = style({\n  prop: 'width',\n  transform: transform\n});\nexport var maxWidth = style({\n  prop: 'maxWidth',\n  transform: transform\n});\nexport var minWidth = style({\n  prop: 'minWidth',\n  transform: transform\n});\nexport var height = style({\n  prop: 'height',\n  transform: transform\n});\nexport var maxHeight = style({\n  prop: 'maxHeight',\n  transform: transform\n});\nexport var minHeight = style({\n  prop: 'minHeight',\n  transform: transform\n});\nexport var sizeWidth = style({\n  prop: 'size',\n  cssProperty: 'width',\n  transform: transform\n});\nexport var sizeHeight = style({\n  prop: 'size',\n  cssProperty: 'height',\n  transform: transform\n});\nvar sizing = compose(width, maxWidth, minWidth, height, maxHeight, minHeight);\nexport default sizing;","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport warning from 'warning';\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nimport merge from './merge';\nimport memoize from './memoize';\nvar properties = {\n  m: 'margin',\n  p: 'padding'\n};\nvar directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nvar aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n}; // memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\n\nvar getCssProperties = memoize(function (prop) {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n\n  var _prop$split = prop.split(''),\n      _prop$split2 = _slicedToArray(_prop$split, 2),\n      a = _prop$split2[0],\n      b = _prop$split2[1];\n\n  var property = properties[a];\n  var direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(function (dir) {\n    return property + dir;\n  }) : [property + direction];\n});\nvar spacingKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY'];\n\nfunction getTransformer(theme) {\n  var themeSpacing = theme.spacing || 8;\n\n  if (typeof themeSpacing === 'number') {\n    return function (abs) {\n      return themeSpacing * abs;\n    };\n  }\n\n  if (Array.isArray(themeSpacing)) {\n    return function (abs) {\n      process.env.NODE_ENV !== \"production\" ? warning(abs <= themeSpacing.length - 1, [\"@material-ui/system: the value provided (\".concat(abs, \") overflows.\"), \"The supported values are: \".concat(JSON.stringify(themeSpacing), \".\"), \"\".concat(abs, \" > \").concat(themeSpacing.length - 1, \", you need to add the missing values.\")].join('\\n')) : void 0;\n      return themeSpacing[abs];\n    };\n  }\n\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(false, [\"@material-ui/system: the `theme.spacing` value (\".concat(themeSpacing, \") is invalid.\"), 'It should be a number, an array or a function.'].join('\\n')) : void 0;\n  return function () {\n    return undefined;\n  };\n}\n\nfunction getValue(transformer, propValue) {\n  if (typeof propValue === 'string') {\n    return propValue;\n  }\n\n  var abs = Math.abs(propValue);\n  var transformed = transformer(abs);\n\n  if (propValue >= 0) {\n    return transformed;\n  }\n\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n\n  return \"-\".concat(transformed);\n}\n\nfunction getStyleFromPropValue(cssProperties, transformer) {\n  return function (propValue) {\n    return cssProperties.reduce(function (acc, cssProperty) {\n      acc[cssProperty] = getValue(transformer, propValue);\n      return acc;\n    }, {});\n  };\n}\n\nfunction spacing(props) {\n  var theme = props.theme;\n  var transformer = getTransformer(theme);\n  return Object.keys(props).map(function (prop) {\n    // Using a hash computation over an array iteration could be faster, but with only 28 items,\n    // it's doesn't worth the bundle size.\n    if (spacingKeys.indexOf(prop) === -1) {\n      return null;\n    }\n\n    var cssProperties = getCssProperties(prop);\n    var styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n    var propValue = props[prop];\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  }).reduce(merge, {});\n}\n\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce(function (obj, key) {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nspacing.filterProps = spacingKeys;\nexport default spacing;","export default function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) {\n      cache[arg] = fn(arg);\n    }\n\n    return cache[arg];\n  };\n}","import style from './style';\nimport compose from './compose';\nexport var fontFamily = style({\n  prop: 'fontFamily',\n  themeKey: 'typography'\n});\nexport var fontSize = style({\n  prop: 'fontSize',\n  themeKey: 'typography'\n});\nexport var fontStyle = style({\n  prop: 'fontStyle',\n  themeKey: 'typography'\n});\nexport var fontWeight = style({\n  prop: 'fontWeight',\n  themeKey: 'typography'\n});\nexport var letterSpacing = style({\n  prop: 'letterSpacing'\n});\nexport var lineHeight = style({\n  prop: 'lineHeight'\n});\nexport var textAlign = style({\n  prop: 'textAlign'\n});\nvar typography = compose(fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign);\nexport default typography;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { styled as styledWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nvar styled = function styled(Component) {\n  var componentCreator = styledWithoutDefault(Component);\n  return function (style, options) {\n    return componentCreator(style, _extends({\n      defaultTheme: defaultTheme\n    }, options));\n  };\n};\n\nexport default styled;","import { borders, compose, display, flexbox, palette, positions, shadows, sizing, spacing, typography, css } from '@material-ui/system';\nimport styled from '../styles/styled';\nexport var styleFunction = css(compose(borders, display, flexbox, positions, palette, shadows, sizing, spacing, typography));\n/**\n * @ignore - do not document.\n */\n\nvar Box = styled('div')(styleFunction, {\n  name: 'MuiBox'\n});\nexport default Box;","export const ActionConsts = {\n\tRoles: {\n\t\tResetReducer: 'Roles_ResetReducer',\n\t\tSetReducer: 'Roles_SetReducer',\n\t},\n};\n","//#region Global Imports\n// import { Dispatch } from 'redux';\n//#endregion Global Imports\n\n//#region Local Imports\nimport { ActionConsts } from './ActionConsts';\n// import { PlanetaryService } from 'Components/Services';\n//#endregion Local Imports\n\n//#region Interface Imports\n//#endregion Interface Imports\n\nexport const RolesActions = {\n\tMap: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.Roles.SetReducer,\n\t}),\n\n\tReset: () => ({\n\t\ttype: ActionConsts.Roles.ResetReducer,\n\t}),\n\n\t// GetApod: (payload) => async (dispatch: Dispatch) => {\n\n\t// },\n};\n","import * as React from 'react';\nimport {\n    Grid,\n    InputLabel,\n    Typography,\n    Link\n} from '@material-ui/core';\nimport moment from 'moment';\n\ninterface IViewPoliciesProps {\n    classes?: any,\n    rows: any,\n    onNavigateSideMenu?: (group) => void,\n}\n\nexport const ViewPolicies: React.FC<IViewPoliciesProps> = (props: IViewPoliciesProps): JSX.Element => {\n    const {\n        classes,\n        rows,\n        onNavigateSideMenu,\n    } = props;\n\n    return (\n        <>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">ROLE ID</InputLabel>\n                <Typography><b>{rows && rows.role_id ? rows.role_id : '-'}</b></Typography>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"primary_module\">MODULE</InputLabel>\n                <Typography><b>{rows && rows.module ? rows.module : '-'}</b></Typography>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"description\">DESCRIPTION</InputLabel>\n                <Typography><b>{rows && rows.description ? rows.description : '-'}</b></Typography>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">ROLE NAME</InputLabel>\n                <Typography><b>{rows && rows.name ? rows.name : '-'}</b></Typography>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"status\">STATUS</InputLabel>\n                <Typography><b>{rows && rows.status ? rows.status : '-'}</b></Typography>\n            </Grid>\n            <Grid item xs={4}>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"primary_module\">EFFECTIVITY DATE</InputLabel>\n                <Typography><b>{rows && rows.effectivity_date ? moment(rows.effectivity_date).format('MMMM DD, YYYY') : '-'}</b></Typography>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"primary_module\">EXPIRY DATE</InputLabel>\n                <Typography><b>{rows && rows.expiry_date ? moment(rows.expiry_date).format('MMMM DD, YYYY') : '-'}</b></Typography>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"description\">ATTACHED GROUP/S</InputLabel>\n                <Typography>\n                    {\n                        rows && rows.associate_groups ? rows.associate_groups.length > 0 && rows.associate_groups.map((groups) => (\n                            <b>{groups}</b>\n                        )) : '-'\n                    }\n                </Typography>\n                <Link\n                    onClick={() => {\n                        console.log(onNavigateSideMenu)\n                        // onNavigateSideMenu && onNavigateSideMenu('Groups And Users')\n                    }}\n                >+ Add Group</Link>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"primary_module\">LAST UPDATE</InputLabel>\n                <Typography><b>{rows && rows.date_last_update ? moment(rows.date_last_update).format('MMMM DD, YYYY') : '-'}</b></Typography>\n            </Grid>\n        </>\n    )\n}","import * as React from 'react';\nimport {\n    Grid,\n    InputLabel,\n    Typography,\n    Checkbox\n} from '@material-ui/core';\nimport moment from 'moment';\nimport { BasicTextField } from 'Components/UI';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\n\ninterface IEditPoliciesProps {\n    classes?: any,\n    rows: any,\n    dataChanges: (data) => void,\n}\n\nexport const EditPolicies: React.FC<IEditPoliciesProps> = (props: IEditPoliciesProps): JSX.Element => {\n    const {\n        rows,\n        classes,\n        dataChanges\n    } = props;\n\n    const [editData, setEditData] = React.useState<any>({\n        description: null,\n        isProcessMaker: null,\n        effectivityDate: rows.effectivity_date,\n        expiryDate: '',\n    })\n\n    React.useEffect(() => {\n        if (rows.expiry_date && rows.expiry_date !== '') {\n            setEditData({\n                ...editData,\n                expiryDate: rows.expiry_date\n            })\n        }\n    }, [])\n\n\n    return (\n        <>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">MODULE</InputLabel>\n                <Typography><b>{rows.module}</b></Typography>\n                {/* <Link onClick={() => { setIsModuleModalOpen(true) }}>Change Module</Link> */}\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">ROLE ID</InputLabel>\n                <Typography><b>{rows.role_id}</b></Typography>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">DESCRIPTION</InputLabel>\n                <BasicTextField\n                    value={editData.description !== null ? editData.description : rows.description}\n                    onChange={(e: any) => {\n                        setEditData({\n                            ...editData,\n                            description: e.target.value\n                        })\n                    }}\n                    onBlur={(e: any) => {\n                        dataChanges({\n                            ...editData,\n                            description: e.target.value\n                        })\n                    }}\n                    disabled={rows.is_processMaker ? true : false}\n                ></BasicTextField>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">ROLE NAME</InputLabel>\n                <Typography><b>{rows && rows.name ? rows.name : '-'}</b></Typography>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel}>IS A PROCESSMAKER PROCESS MAKER ROLE</InputLabel>\n                <Checkbox\n                    checked={editData.isProcessMaker !== null ? editData.isProcessMaker : rows.is_processMaker}\n                    onChange={(e: any) => {\n                        setEditData({\n                            ...editData,\n                            isProcessMaker: e.target.checked\n                        })\n                        dataChanges({\n                            ...editData,\n                            isProcessMaker: e.target.checked\n                        })\n                    }}\n                    disabled={true}\n                ></Checkbox>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">STATUS</InputLabel>\n                <Typography><b>{rows && rows.status}</b></Typography>\n            </Grid>\n            <Grid item xs={6}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">EFFECTIVITY DATE</InputLabel>\n                <KeyboardDatePicker\n                    inputProps={{\n                        disabled: true\n                    }}\n                    maxDate={moment(editData.expiryDate).subtract(1, 'days').startOf('day')}\n                    maxDateMessage={\"Effectivity date cannot be higher or equal than expiry date.\"}\n                    value={editData.effectivityDate}\n                    format={'MMM DD, YYYY'}\n                    style={{ width: \"100%\", marginTop: 10 }}\n                    onChange={(e: any) => {\n                        setEditData({\n                            ...editData,\n                            effectivityDate: e\n                        })\n                        dataChanges({\n                            ...editData,\n                            effectivityDate: e\n                        })\n                    }}\n                    clearable\n                    disabled={rows.is_processMaker ? true : false}\n                    inputVariant={'outlined'}\n                />\n            </Grid>\n            <Grid item xs={6}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">EXPIRY DATE (If applicable)</InputLabel>\n                <KeyboardDatePicker\n                    inputProps={{\n                        disabled: true\n                    }}\n                    clearable\n                    minDate={moment(editData.effectivityDate).add(1, 'days').startOf('day')}\n                    minDateMessage={\"Expiry date cannot be lower or equal than effectivity date.\"}\n                    value={editData.expiryDate}\n                    style={{ width: \"100%\", marginTop: 10 }}\n                    invalidDateMessage=\"\"\n                    format=\"MMMM DD, YYYY\"\n                    onChange={(e: any) => {\n                        setEditData({\n                            ...editData,\n                            expiryDate: e,\n                        })\n                        dataChanges({\n                            ...editData,\n                            expiryDate: e,\n                        })\n                    }}\n                    disabled={rows.is_processMaker ? true : false}\n                    inputVariant={'outlined'}\n                />\n            </Grid>\n\n\n        </>\n    )\n}\n","import * as React from 'react';\nimport {\n    Grid,\n    Button,\n} from '@material-ui/core';\nimport { ReactTable } from 'Components/UI/TableComponent/ReactTable';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { BasicSelect } from 'Components/UI';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\n// import BasicSelect from 'Components/UI/BasicSelect'\nimport moment from 'moment';\nimport { RolesRbacData } from '../IRolesPage';\nimport { ViewPolicies } from './ViewPolicies';\nimport { EditPolicies } from './EditPolicies';\n\nexport interface IPoliciesProps {\n    rows?: any,\n    viewOnly: boolean,\n    classes: any,\n    mode?: 'edit' | 'view' | 'add' | string,\n    moduleName?: string,\n    rbacList: any,\n    loadRbacList: any,\n    isEdited: boolean,\n    roleId?: string,\n    rbacState: any,\n    onPageChange: (page) => void,\n    onFilterChange: (filter) => void,\n    onSortChange: (sort) => void,\n    onPageSizeChange: (size) => void,\n    onSearch: (search) => void,\n    onChangeModuleName?: (name) => void,\n    onUpdateChange: (data) => void,\n    onNavigateSideMenu?: (name) => void,\n}\n\nexport const Policies: React.FC<IPoliciesProps> = (props: IPoliciesProps): JSX.Element => {\n    const {\n        rows,\n        classes,\n        mode,\n        rbacList,\n        rbacState,\n        onUpdateChange,\n        onNavigateSideMenu,\n        onPageChange,\n        onFilterChange,\n        onSortChange,\n        onPageSizeChange,\n        onSearch,\n        loadRbacList\n    } = props;\n    const [isAddedModalRole, setIsAddedModalRole] = React.useState(false)\n    const [moduleValue, setModuleValue] = React.useState(0);\n    const [isModuleModalOpen, setIsModuleModalOpen] = React.useState(false);\n    const [moduleLabel, setModuleLabel] = React.useState<any>(null);\n    const [isModalConfirmChangeModule, setIsModalConfirmChangeModule] = React.useState(false)\n    const [newRbacList, setNewRbacList] = React.useState(rbacList);\n    const [loading, setLoading] = React.useState(false);\n    const [defaultFilters, setDefaultFilters] = React.useState([]);\n    const [isModalDeleteSuccessOpen, setIsModalDeleteSuccessOpen] = React.useState(false)\n    const [isModalCannotEditOpen, setIsModalCannotEditOpen] = React.useState(false);\n    const [isEdited, setIsEdited] = React.useState(false);\n    const [checkedList, setCheckedList] = React.useState<any>([]);\n\n    const [editData, setEditData] = React.useState<any>({\n        description: null,\n        isProcessMaker: null,\n        effectivityDate: null,\n        expiryDate: null,\n    });\n    \n    React.useEffect(() => {\n        setCheckedList(loadRbacList)\n    })\n\n    const moduleItems = [\n        {\n            name: 'User Management',\n            value: '0'\n        },\n        {\n            name: 'Membership',\n            value: '1'\n        },\n        {\n            name: 'Underwriting',\n            value: '2'\n        },\n        {\n            name: 'Customer Care',\n            value: '3'\n        },\n        {\n            name: 'Claims',\n            value: '4',\n        },\n    ]\n\n    const columns: any = [\n        {\n            name: 'operation',\n            title: 'Object and Operations',\n        },\n        {\n            name: 'policy',\n            title: 'Policies',\n        },\n        {\n            name: 'policy_id',\n            title: 'Policy ID',\n        },\n        {\n            name: 'name',\n            title: 'Name'\n        }\n    ]\n\n\n    const handleCannotEditRoleModalClose = () => {\n        setIsModalCannotEditOpen(false)\n    }\n\n    const handleDeleteSuccessRoleModalClose = () => {\n        setIsModalDeleteSuccessOpen(false)\n    }\n\n    const handleRemoveRoleModalClose = () => {\n\n    }\n\n    const handleContinueRole = () => {\n        let moduleName = moduleItems[Number(moduleValue)].name;\n        setIsModalConfirmChangeModule(false);\n        setModuleLabel(moduleName);\n        console.log(moduleLabel)\n    }\n\n    const handleOnCheckRow = (row) => {\n        setLoading(true);\n\n        let rbac = rbacList;\n        let checklist = checkedList;\n        if (newRbacList.length === 0) {\n            setNewRbacList(rbacList);\n        } else {\n            rbac = newRbacList;\n        }\n        if (rbac.length > 0) {\n            rbac.map((data: any) => {\n                if (data._id === row._id) {\n                   \n                    if (data.checked) {\n                        checklist.push(data);\n                    } else {\n                        checklist.filter(list => {\n                            return row._id !== list._id\n                        })\n                    }\n\n                    data['checked'] = !data['checked'];\n                }\n            })\n\n            setCheckedList(checklist)\n            setNewRbacList(rbac);\n        }\n\n        handleUpdateCheck(editData)\n        setLoading(false)\n    }\n\n    const handleOnCheckGroup = (group) => {\n        setLoading(true);\n        let rbac = rbacList;\n        let countChecked = 0;\n        let checklist = checkedList;\n\n        if (newRbacList.length === 0) {\n            setNewRbacList(rbacList)\n        }\n        if (rbac.length > 0) {\n            rbac.map((data: any) => {\n                if (data.name == group && data.checked === true) {\n                    countChecked++;\n                }\n            })\n        }\n        if (countChecked > 0) {\n            rbac.map((data: any) => {\n                if (data.name == group) {\n                    data['checked'] = false;\n                }\n            })\n        } else {\n            rbac.map((data: any) => {\n                if (data.name == group) {\n                    data['checked'] = true;\n                    checklist.push(data)\n                }\n            })\n        }\n        setCheckedList(checklist)\n        setNewRbacList(rbac);\n        setTimeout(() => {\n            setLoading(false);\n            handleUpdateCheck(editData)\n        }, 500)\n    }\n\n    const handleUpdateCheck = (_data: any) => {\n        console.log(checkedList);\n\n        var rbac: any[] = [];\n        const _rbacList = checkedList.length > 0 ? checkedList : rbacList;\n\n        rbac = _rbacList.filter((data: any) => {\n            return data.checked;\n        })\n\n\n\n        var data: RolesRbacData = {\n            module: rows.module,\n            name: rows.name,\n            role_id: rows.role_id,\n            effectivity_date: _data.effectivityDate ? moment(_data.effectivityDate).toISOString() : rows.effectivity_date,\n            description: _data.description !== null ? _data.description : rows.description,\n            status: 'active',\n            date_last_update: moment().toISOString(),\n            is_processmaker: _data.isProcessMaker ? _data.isProcessMaker : rows.is_processMaker ? rows.is_processmaker : false,\n            rbac: rbac.length > 0 ? rbac : rows.rbac,\n        }\n\n        if (mode === 'edit') {\n            data['_id'] = rows._id\n            data['status'] = rows.status\n        }\n\n        if (_data.expiryDate !== '' || null) {\n            data['expiry_date'] = moment(_data.expiryDate).toISOString();\n        }\n\n        onUpdateChange(data);\n        setIsEdited(true);\n        console.log(isEdited);\n    }\n\n    const handleOnFilterChange = (filter) => {\n        setDefaultFilters(filter);\n        onFilterChange(filter)\n    }\n\n    return (\n        <>\n            <Grid container xs={12} spacing={4}>\n                {\n                    mode === 'view' ? (\n                        <ViewPolicies\n                            rows={rows}\n                            onNavigateSideMenu={(group: string) => {\n                                onNavigateSideMenu && onNavigateSideMenu(group)\n                            }}\n                            classes={classes}\n                        />\n                    ) : mode === 'edit' ? (\n                        <EditPolicies\n                            rows={rows}\n                            classes={classes}\n                            dataChanges={(data: any) => {\n                                setEditData(data);\n                                handleUpdateCheck(data);\n                            }}\n                        />\n                    ) : null\n                }\n                <Grid item xs={12}>\n\n                    <ReactSearch\n                        onSearch={onSearch}\n                        onChange={onSearch}\n                        placeholder={'Search policies'}\n                    />\n                    {\n                        <ReactTable\n                            rows={rbacList}\n                            columns={columns}\n                            enableGrouping={true}\n                            groupColumnName={'name'}\n                            viewOnly={mode === 'view' ? true : false}\n                            enableOpenGroupTotalChecked={mode === 'view' ? true : false}\n                            message={'There are no policies to show yet.'}\n                            enableSelection={mode !== 'view' ? true : false}\n                            loading={loading}\n                            onCheckRow={(row) => {\n                                handleOnCheckRow(row)\n                            }}\n                            currentPage={rbacState.currentPage}\n                            pageSize={rbacState.limit}\n                            defaultFilters={defaultFilters}\n                            onFilterChange={handleOnFilterChange}\n                            onSortingChange={onSortChange}\n                            onSetPageSize={onPageSizeChange}\n                            onPageChange={onPageChange}\n                            totalCount={rbacState.count ? rbacState.count : 0}\n                            onSelectGroup={(group) => {\n                                handleOnCheckGroup(group)\n                            }}\n                        />\n                    }\n                </Grid>\n            </Grid>\n            <ModalComponent\n                isModalOpen={isAddedModalRole}\n                onClose={handleRemoveRoleModalClose}\n                message={'New Role has been added successfully.'}\n                title={'Added New Role'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Button onClick={() => { setIsAddedModalRole(false) }} className={classes.button} variant={'contained'} color={'primary'}>Okay</Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n            <ModalComponent\n                isModalOpen={isModuleModalOpen}\n                onClose={() => {\n                    setIsModuleModalOpen(false)\n                }}\n                message={'Select a module for the role you will create:'}\n                title={'Choose a Module'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\" style={{ textAlign: 'center' }}>\n                        <Grid item xs={6}>\n                            <Button\n                                onClick={() => {\n                                    setIsModuleModalOpen(false)\n                                }}\n                                variant={'outlined'}\n                                color={'secondary'}\n                                className={classes.button}\n                            >Cancel</Button>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button variant={'contained'} color={'primary'}\n                                className={classes.button}\n                                onClick={() => {\n                                    setIsModalConfirmChangeModule(true)\n                                    setIsModuleModalOpen(false)\n                                }}>Continue</Button>\n                        </Grid>\n                    </Grid>\n                }\n            >\n                <div style={{ width: '90%', margin: 'auto' }}>\n                    <BasicSelect\n                        menuItems={moduleItems}\n                        width={'100%'}\n                        value={moduleValue}\n                        onChange={(e: any) => {\n                            setModuleValue(e.target.value)\n                        }}\n                    />\n                </div>\n            </ModalComponent>\n            <ModalComponent\n                isModalOpen={isModalConfirmChangeModule}\n                onClose={() => {\n                    setIsModalConfirmChangeModule(false);\n                }}\n                message={'All progress made will be lost. Continue to change the module?'}\n                title={'Confirm Change Module'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Button onClick={() => { setIsModalConfirmChangeModule(false) }} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button className={classes.button} variant={'contained'} color={'primary'} onClick={() => handleContinueRole()}>Continue</Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n\n            <ModalComponent\n                isModalOpen={isModalDeleteSuccessOpen}\n                onClose={handleDeleteSuccessRoleModalClose}\n                message={'New role has been deleted.'}\n                title={'Delete Success'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item >\n                            <Button\n                                onClick={() => {\n                                    setIsModalDeleteSuccessOpen(false)\n                                }}\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}>\n                                Okay\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n\n\n            <ModalComponent\n                isModalOpen={isModalCannotEditOpen}\n                onClose={handleCannotEditRoleModalClose}\n                message={'You do not have an assigned role to your account to perform this action.'}\n                title={'Cannot Edit Role'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item>\n                            <Button\n                                onClick={() => {\n                                    setIsModalCannotEditOpen(false)\n                                }}\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}>\n                                Okay\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n        </>\n    )\n}","import * as React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faSearch,\n} from '@fortawesome/free-solid-svg-icons';\nimport { getRolesUsersLists } from 'Pages/API/Calls/Roles';\n\nexport interface IAPICallSearchProps {\n    fields: any;\n    usersWithRole: any[];\n    selectedUsers: any;\n    placeholder?: string;\n    searchLabel?: string;\n    onSearch: (event) => void;\n    onChange?: (value) => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n    gridContainerNoPadding: {\n        padding: theme.spacing(1),\n    },\n    searchIcon: {\n        position: \"absolute\",\n        left: \"15px\",\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        fontSize: \"20px\",\n        color: \"#b0b0b0\"\n    },\n    searchContainer: {\n        borderRadius: \"3px\",\n        position: \"relative\",\n    },\n    searchBox: {\n        display: \"block\",\n        padding: \"12px 12px 12px 40px\",\n        borderRadius: \"3px\",\n        fontSize: \"14px\",\n        width: \"100%\",\n        border: '1px solid #c4c4c4',\n        outline: 'none',\n        overflow: \"hidden\",\n        '&:hover': {\n            border: \"1px solid rgb(39, 46, 76)\",\n        },\n        '&:focus': {\n            outline: \"2px solid #3AB77D\"\n        }\n    },\n    searchLabel: {\n        fontSize: 14,\n        display: 'block',\n        padding: '5px 0',\n    },\n    comboBoxContainer: {\n        opacity: 100,\n        position: 'absolute',\n        top: '100%',\n        left: '0%',\n        width: '100%',\n        backgroundColor: '#fff',\n        borderRadius: '2px',\n        border: '1px solid #c4c4c4',\n        padding: '10px',\n        maxHeight: 300,\n        overflowY: 'auto',\n        zIndex: 1000\n    },\n    list: {\n        fontSize: 12,\n        padding: '5px',\n        '&:hover': {\n            backgroundColor: '#dddfe3',\n        }\n    }\n}));\n\n\nexport const APICallSearch: React.FC<IAPICallSearchProps> = (props: IAPICallSearchProps): JSX.Element => {\n    const {\n        placeholder,\n        searchLabel,\n        onSearch,\n        onChange,\n    } = props;\n\n    const classes = useStyles();\n    const [newComboList, setNewComboList] = React.useState<any>(null);\n    const [searchValue, setSearchValue] = React.useState<any>(null);\n    const [typingTimeout, setTypingTimeout] = React.useState<any>(0);\n    const [isLoadingChoices, setIsLoadingChoices] = React.useState<boolean>(false);\n    const [ref, setRef] = React.useState<any>();\n    const [typing, setTyping] = React.useState<boolean>(false);\n\n    React.useEffect(() => {\n        setRef(React.createRef());\n    }, []);\n\n    const removeDuplicateRoles = (array: any[]) => {\n        let a: any[] = []\n        array.map(x => {\n            if (!a.some(b => b.role_id === x.role_id)) {\n                a.push(x)\n            }\n        })\n        return a\n    };\n\n    const getChoices = () => {\n\n        const value = searchValue;\n        console.log('SEARCH VAL', value);\n        setIsLoadingChoices(true);\n        const selectedUsernames = props.selectedUsers.map(item => { return item.username });\n        let usernames: any[] = selectedUsernames;\n        if (props.usersWithRole && props.usersWithRole.length > 0) {\n            const usernamesWithRole = props.usersWithRole.map(item => { return item.username });\n            usernames = [...usernames, ...usernamesWithRole];\n        }\n        getRolesUsersLists({ fields: props.fields, where: { username: { nin: usernames } } }, value).then(resp => {\n            const resp_body = resp.body.map(item => {\n                item.roles = removeDuplicateRoles(item.roles);\n                return {\n                    ...item, name: item.full_name ? item.full_name : item.first_name + \" \" + item.middle_name + \" \" + item.last_name,\n                }\n            });\n            setNewComboList(resp_body)\n            setIsLoadingChoices(false);\n        }).catch(e => {\n            setNewComboList([])\n            setIsLoadingChoices(false);\n            console.log(e);\n        })\n    }\n\n\n    const handleKeyPress = (event) => {\n        let value = event.target.value;\n        onChange && onChange(value)\n\n\n        if (!value) setNewComboList(null);\n    }\n\n    const searchCombo = (list) => {\n        ref.current.focus();\n        // setSearchValue(list);\n        setNewComboList(null);\n        onSearch(list);\n        setSearchValue({ name: '' });\n        setNewComboList(null);\n    }\n\n    React.useEffect(() => {\n        if (!searchValue) return;\n        setTyping(true);\n        if (typingTimeout) {\n            clearTimeout(typingTimeout);\n        }\n        setTypingTimeout(setTimeout(function () {\n            if (searchValue.length >= 3) {\n                console.log('timeout search');\n                setTyping(false);\n                getChoices();\n            }\n\n        }, 2000));\n    }, [searchValue])\n\n\n    return (\n        <>\n            <Grid container xs={12} style={{ padding: \"10px 0\" }}>\n                <Grid item xs={12}>\n                    {searchLabel ? <label className={classes.searchLabel}>{searchLabel}</label> : null}\n                </Grid>\n                <Grid item xs={12} className={classes.searchContainer} >\n                    <FontAwesomeIcon icon={faSearch} className={classes.searchIcon} />\n                    <input\n                        ref={ref}\n                        type={'search'}\n                        placeholder={placeholder}\n                        value={searchValue && searchValue.name !== undefined ? searchValue.name : null}\n                        onChange={(event) => {\n                            handleKeyPress(event)\n                            setSearchValue(event.target.value)\n                        }}\n                        onKeyUp={(event) => {\n                            let code = event.keyCode || event.which\n                            if (code == 13 && typing && searchValue && searchValue.length >= 3) {\n                                console.log('enter search');\n                                if (typingTimeout) {\n                                    clearTimeout(typingTimeout);\n                                }\n                                getChoices();\n                                setTyping(false);\n\n                            }\n                        }}\n                        className={classes.searchBox}\n                    />\n                    {isLoadingChoices ? (\n                        <div className={classes.comboBoxContainer}>Loading...</div>\n                    ) : newComboList && newComboList.length > 0 ?\n                            <div className={classes.comboBoxContainer}>\n                                <ul style={{ padding: 0, margin: 0, listStyle: 'none' }}>\n                                    {\n                                        newComboList && newComboList.map(list => (\n                                            <li className={classes.list} onClick={() => searchCombo(list)}>{list && list.name ? list.name : null}</li>\n                                        ))\n                                    }\n                                </ul>\n                            </div>\n                            : newComboList && newComboList.length === 0 ? (\n                                <div className={classes.comboBoxContainer}>No Results</div>\n                            ) : null}\n                </Grid>\n            </Grid>\n        </>\n    )\n}","import * as React from 'react';\nimport { APICallSearch } from 'Components/UI/SearchBar/APICallSearch';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n// import { InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid } from '@material-ui/core';\nimport { getRolesUsersLists } from 'Pages/API/Calls/Roles';\n\n\nconst useStyles = makeStyles(() => ({\n    selectedItems: {\n        borderRadius: 20,\n        fontSize: 13,\n        backgroundColor: '#d1d4db',\n        padding: '5px 10px'\n    },\n    xIcon: {\n        fontSize: 16\n    }\n}));\nconsole.log(useStyles);\n\ninterface IAddUserRoleBodyProps {\n    apiCallFields: any;\n\n    selectedUsers: any[];\n    setSelectedUsers: (data: any) => void;\n\n    refreshUsersWithRole: boolean;\n    usersWithRole: any[];\n    setUsersWithRole: (data: any) => void;\n\n    roleId: string;\n    onClose: () => void;\n    onSave: (items) => void;\n}\n\ninterface IAddUserRoleBodyState {\n    selectedUsers: any[];\n    filter: any;\n}\n\nexport class AddUserRoleBody extends React.Component<IAddUserRoleBodyProps, IAddUserRoleBodyState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedUsers: [],\n            filter: {\n                fields: this.props.apiCallFields,\n                where: {\n                    and: [{}],\n                    or: [\n                        { 'roles.role_id': this.props.roleId }\n                    ]\n                }\n            },\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.selectedUsers !== this.props.selectedUsers)\n            this.setState({ selectedUsers: this.props.selectedUsers });\n        if (prevProps.refreshUsersWithRole !== this.props.refreshUsersWithRole)\n            this.initializeData();\n    }\n\n    componentDidMount() {\n        this.initializeData();\n    }\n\n    removeDuplicates(array: any[]) {\n        let a: any[] = []\n        array.map(x => {\n            if (!a.some(b => b.role_id === x.role_id)) {\n                a.push(x)\n            }\n        })\n        return a\n    };\n\n    initializeData = () => {\n        getRolesUsersLists(this.state.filter, '').then(resp => {\n            let resp_body = resp.body.map(item => {\n                item.roles = this.removeDuplicates(item.roles);\n                return {\n                    ...item, name: item.full_name ? item.full_name : item.first_name + \" \" + item.middle_name + \" \" + item.last_name,\n                }\n            });\n            // this.props.setSelectedUsers(resp_body);\n            this.props.setUsersWithRole(resp_body);\n        }).catch(e => {\n            // this.props.setSelectedUsers([]);\n            console.log(e);\n        });\n    }\n\n\n    handleOnSearch = (list) => {\n        if (!list || typeof list !== 'object' || (list && !list.name) || (list && !list.username)) return;\n        let arr = this.props.selectedUsers;\n        arr.push(list);\n        this.props.setSelectedUsers(arr);\n        console.log(arr);\n    }\n\n    handleRemoveItem = (index) => {\n        let arr = this.props.selectedUsers;\n        arr.splice(index, 1);\n        this.props.setSelectedUsers(arr);\n    }\n\n    handleOnSaveItems = () => {\n        this.props.onSave(this.props.selectedUsers);\n    }\n\n    public render(): JSX.Element {\n        const classes = {\n            buttonsContainer: {\n                padding: '1em',\n            },\n            selectedContainer: {\n                padding: '3em 0 2em'\n            },\n            selectedItems: {\n                borderRadius: 20,\n                fontSize: 13,\n                backgroundColor: '#d1d4db',\n                padding: '5px 10px',\n                margin: '5px',\n                display: 'inline-block',\n            },\n            selectedText: {\n                paddingRight: '5px'\n            },\n            saveButton: {\n                width: '135px',\n                fontSize: '14px',\n                color: '#fff',\n            },\n            cancelButton: {\n                width: '135px',\n                fontSize: '14px',\n            }\n        };\n\n        return (\n            <>\n                <div style={{ minHeight: 400, minWidth: 400 }}>\n                    <APICallSearch\n                        placeholder={'Please enter at least 3 characters to search.'}\n                        fields={this.props.apiCallFields}\n                        searchLabel={'Search user account'}\n                        onSearch={this.handleOnSearch}\n                        selectedUsers={this.state.selectedUsers}\n                        usersWithRole={this.props.usersWithRole}\n                    />\n                    <div style={classes.selectedContainer}>\n                        <div>\n                            {this.state.selectedUsers.length > 0 ? <label>Selected Users</label> : null}\n                        </div>\n                        {this.state.selectedUsers.map((item, index) =>\n                            <div style={classes.selectedItems}>\n                                <span style={classes.selectedText}>{item.name}</span>\n                                <span onClick={() => this.handleRemoveItem(index)}>\n                                    <FontAwesomeIcon icon={faTimesCircle} />\n                                </span>\n                            </div>\n                        )\n                        }\n                    </div>\n                </div>\n                <Grid container spacing={3} justify=\"center\" alignItems=\"baseline\">\n                    <Grid item xs={4} style={{ paddingRight: 20 }}>\n                        <Button style={classes.cancelButton} variant=\"outlined\" color=\"secondary\" onClick={() => this.props.onClose()}>Cancel</Button>\n                    </Grid>\n                    <Grid item xs={4} style={{ paddingLeft: 20 }}>\n                        <Button disabled={this.state.selectedUsers.length < 1 ? true : false} style={classes.saveButton} variant=\"contained\" color=\"primary\" onClick={() => this.handleOnSaveItems()}>Save</Button>\n                    </Grid>\n                </Grid>\n            </>\n        )\n    }\n\n}\n// export const AddRoleBody : React.FC<IAddRoleBodyProps> = (props: IAddRoleBodyProps): JSX.Element => {\n\n// }","import * as React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faSearch,\n} from '@fortawesome/free-solid-svg-icons';\n\nexport interface ISearchUserGroupProps {\n    placeholder?: string;\n    searchLabel?: string;\n    onSearch: (event) => void;\n    comboBoxMode?: boolean;\n    comboListsArray?: any;\n    onChange?: (value) => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n    gridContainerNoPadding: {\n        padding: theme.spacing(1),\n    },\n    searchIcon: {\n        position: \"absolute\",\n        left: \"15px\",\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        fontSize: \"20px\",\n        color: \"#b0b0b0\"\n    },\n    searchContainer: {\n        borderRadius: \"3px\",\n        position: \"relative\",\n    },\n    searchBox: {\n        display: \"block\",\n        padding: \"12px 12px 12px 40px\",\n        borderRadius: \"3px\",\n        fontSize: \"14px\",\n        width: \"100%\",\n        border: '1px solid #c4c4c4',\n        outline: 'none',\n        overflow: \"hidden\",\n        '&:hover': {\n            border: \"1px solid rgb(39, 46, 76)\",\n        },\n        '&:focus': {\n            outline: \"2px solid #3AB77D\"\n        }\n    },\n    searchLabel: {\n        fontSize: 14,\n        display: 'block',\n        padding: '5px 0',\n    },\n    comboBoxContainer: {\n        position: 'absolute',\n        top: '100%',\n        left: '0%',\n        width: '100%',\n        backgroundColor: '#fff',\n        borderRadius: '2px',\n        border: '1px solid #c4c4c4',\n        padding: '10px',\n        maxHeight: 140,\n        overflowY: 'auto'\n    },\n    list: {\n        fontSize: 12,\n        padding: '5px',\n        '&:hover': {\n            backgroundColor: '#dddfe3',\n        }\n    }\n}));\n\n\nexport const SearchUserGroup: React.FC<ISearchUserGroupProps> = (props: ISearchUserGroupProps): JSX.Element => {\n    const {\n        placeholder,\n        searchLabel,\n        onSearch,\n        comboListsArray,\n        comboBoxMode,\n        onChange,\n    } = props;\n\n    const classes = useStyles();\n    const [newComboList, setNewComboList] = React.useState<any>([]);\n    const [searchValue, setSearchValue] = React.useState<any>(null)\n    const [typingTimeout, setTypingTimeout] = React.useState<any>(0);\n\n    const handleKeyPress = (event) => {\n        if (event.target.value.length >= 3 || event.target.value.length === 0) {\n            let value = event.target.value;\n            onChange && onChange(value)\n\n            if (typingTimeout) {\n                clearTimeout(typingTimeout);\n            }\n\n            setTypingTimeout(setTimeout(function () {\n                if (comboBoxMode) {\n                    if (comboListsArray) {\n                        searchJSONValue(value);\n                        return;\n                    } else {\n                        return false;\n                    }\n                } else {\n                    return false;\n                }\n\n            }, 2000));\n        }\n    }\n\n    const handleSearch = (event) => {\n\n        let value = event.target.value;\n        onChange && onChange(value)\n\n        if (comboBoxMode) {\n            if (comboListsArray) {\n                searchJSONValue(value);\n                return;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n\n    }\n\n    const searchJSONValue = (value) => {\n\n        var combo = comboListsArray.filter(list => {\n            return checkMatchString(value, list.name)\n        })\n        setNewComboList(combo)\n    }\n\n    const checkMatchString = (value, jsonValue) => {\n\n        if (value !== \"\") {\n            var newRegEx = new RegExp(value.toLowerCase(), \"i\");\n            var match = jsonValue.toLowerCase().match(newRegEx);\n            return match ? true : false;\n        }\n\n        return false\n    }\n\n    const searchCombo = (list) => {\n        onSearch(list)\n        setSearchValue('');\n        setNewComboList([]);\n    }\n\n    console.log(searchValue)\n    return (\n        <>\n            <Grid container xs={12} style={{ padding: \"10px 0\" }}>\n                <Grid item xs={12}>\n                    {searchLabel ? <label className={classes.searchLabel}>{searchLabel}</label> : null}\n                </Grid>\n                <Grid item xs={12} className={classes.searchContainer} >\n                    <FontAwesomeIcon icon={faSearch} className={classes.searchIcon} />\n                    <input\n                        type={'search'}\n                        placeholder={placeholder}\n                        value={searchValue}\n                        onChange={(event) => {\n                            handleKeyPress(event)\n                            setSearchValue(event.target.value)\n                        }}\n                        onKeyUp={(event) => {\n                            let code = event.keyCode || event.which\n                            if (code == 13 && searchValue.length >= 3) {\n                                handleSearch(event)\n                            }\n                        }}\n                        className={classes.searchBox}\n                    />\n\n                    {comboBoxMode && newComboList.length > 0 ?\n                        <div className={classes.comboBoxContainer}>\n                            <ul style={{ padding: 0, margin: 0, listStyle: 'none' }}>\n                                {\n                                    newComboList && newComboList.map(list => (\n                                        <li className={classes.list} onClick={() => searchCombo(list)}>{list.name}</li>\n                                    ))\n                                }\n                            </ul>\n                        </div>\n                        : comboBoxMode && newComboList.length === 0 && searchValue !== null && searchValue !== '' ? (\n                            <div className={classes.comboBoxContainer}>No Results</div>\n                        ) : null\n                    }\n                </Grid>\n            </Grid>\n        </>\n    )\n}","import * as React from 'react';\nimport { SearchUserGroup } from 'Components/UI/SearchBar/SearchUserGroup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n// import { InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid } from '@material-ui/core';\nimport { getAllGroups } from 'Pages/API/Calls/Roles';\n\nconst useStyles = makeStyles(() => ({\n    selectedItems: {\n        borderRadius: 20,\n        fontSize: 13,\n        backgroundColor: '#d1d4db',\n        padding: '5px 10px'\n    },\n    xIcon: {\n        fontSize: 16\n    }\n}));\nconsole.log(useStyles);\n\ninterface IAddGroupRoleBodyProps {\n    onClose: () => void;\n    onSave: (items) => void;\n}\n\ninterface IAddGroupRoleBodyState {\n    selectedItems: any;\n    comboArray: any[];\n}\n\n\nexport class AddGroupRoleBody extends React.Component<IAddGroupRoleBodyProps, IAddGroupRoleBodyState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedItems: [],\n            comboArray: [],\n        }\n    }\n\n    componentDidMount() {\n        getAllGroups().then(res => {\n            console.log(res)\n            let data = {\n                body: res.body,\n                id: \"_id\",\n                group_id: \"group_id\",\n                name: \"name\",\n                description: \"description\",\n                user_count: \"user_count\",\n                effectivity_date: \"effectivity_date\",\n                date_updated: \"date_updated\",\n                is_processmaker: \"is_processmaker\",\n                pmaker_uid: \"pmaker_uid\",\n                amount_limit: \"amount_limit\",\n                roles: \"roles\",\n                status: \"status\"\n            }\n            let newChoices: any = [];\n\n            if (data.body && data.body.length > 0) {\n                data.body.map(c => {\n                    let beauty = {\n                        // value: c,\n                        id: c[data.id],\n                        group_id: c[data.group_id],\n                        name: c[data.name],\n                        description: c[data.description],\n                        user_count: c[data.user_count],\n                        effectivity_date: c[data.effectivity_date],\n                        date_updated: c[data.date_updated],\n                        is_processmaker: c[data.is_processmaker],\n                        pmaker_uid: c[data.pmaker_uid],\n                        amount_limit: c[data.amount_limit],\n                        roles: c[data.roles],\n                        status: c[data.status]\n                    }\n                    newChoices.push(beauty)\n                })\n                this.setState({\n                    comboArray: newChoices\n                })\n                console.log(this.state.comboArray)\n            }\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n\n    handleOnSearch = (list) => {\n        console.log(list)\n        if (!list || typeof list !== 'object' || (list && !list.name)) return;\n        let arr = this.state.selectedItems;\n        arr.push(list);\n        this.setState({\n            selectedItems: arr\n        })\n        console.log(arr);\n    }\n\n    handleRemoveItem = (index) => {\n        let arr = this.state.selectedItems;\n        arr.splice(index, 1);\n        this.setState({\n            selectedItems: arr\n        })\n    }\n\n    handleOnSaveItems = () => {\n        this.props.onSave(this.state.selectedItems);\n        this.setState({\n            selectedItems: []\n        })\n    }\n\n    public render(): JSX.Element {\n        const classes = {\n            buttonsContainer: {\n                padding: '1em',\n            },\n            selectedContainer: {\n                padding: '3em 0 2em'\n            },\n            selectedItems: {\n                borderRadius: 20,\n                fontSize: 13,\n                backgroundColor: '#d1d4db',\n                padding: '5px 10px',\n                margin: '5px',\n                display: 'inline-block',\n            },\n            selectedText: {\n                paddingRight: '5px'\n            },\n            saveButton: {\n                width: '135px',\n                fontSize: '14px',\n                color: '#fff',\n            },\n            cancelButton: {\n                width: '135px',\n                fontSize: '14px',\n            }\n        };\n\n        return (\n            <>\n                <div style={{ minHeight: 400, minWidth: 400 }}>\n                    <SearchUserGroup\n                        placeholder={'Please enter at least 3 characters to search.'}\n                        searchLabel={'Search user group'}\n                        onSearch={this.handleOnSearch}\n                        comboBoxMode={true}\n                        comboListsArray={this.state.comboArray}\n                    />\n                    <div style={classes.selectedContainer}>\n                        {this.state.selectedItems.length > 0 ?\n                            <div>\n                                <label>Selected Groups</label>\n                            </div>\n                            : null}\n                        {this.state.selectedItems.map((item, index) =>\n                            <div style={classes.selectedItems}>\n                                <span style={classes.selectedText}>{item.name}</span>\n                                <span onClick={() => this.handleRemoveItem(index)}>\n                                    <FontAwesomeIcon icon={faTimesCircle} />\n                                </span>\n                            </div>\n                        )\n                        }\n                    </div>\n                </div>\n                <Grid container spacing={1}>\n                    <Grid item xs={6}>\n                        <Button style={classes.cancelButton} variant=\"outlined\" color=\"secondary\" onClick={() => this.props.onClose()}>Cancel</Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button disabled={this.state.selectedItems.length < 1 ? true : false}\n                            style={classes.saveButton}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => this.handleOnSaveItems()}>\n                            Add\n                        </Button>\n                    </Grid>\n                </Grid>\n            </>\n        )\n    }\n\n}\n// export const AddRoleBody : React.FC<IAddRoleBodyProps> = (props: IAddRoleBodyProps): JSX.Element => {\n\n// }","import * as React from 'react';\nimport { Typography, Grid, Link, Button } from '@material-ui/core';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { ReactTable } from 'Components/UI/TableComponent/ReactTable';\nimport { useState } from 'react';\nimport classNames from 'classnames';\nimport { SideModalBlock } from 'Components/UI';\nimport { AddUserRoleBody } from './AddUserRoleBody';\nimport { AddGroupRoleBody } from './AddGroupRoleBody';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\n\nimport {\n    getRolesUsersLists,\n    attachUserRoles,\n    detachUserRoles\n} from 'Pages/API/Calls/Roles';\nimport moment from 'moment';\nimport { attachRoleToGroups } from 'Pages/API/Calls/Roles';\nimport { getAllGroupsAttachToRole } from 'Pages/API/Calls/Roles';\nimport { UI } from 'Components';\n// import { TableComponent } from './TableComponent'\n\n\n\nconst user_fields = {\n    _id: true,\n    first_name: true,\n    last_name: true,\n    middle_name: true,\n    username: true,\n    employee_id: true,\n    department: true,\n    main_module: true,\n    main_role: true,\n    group: true,\n    group_name: true,\n    reports_to: true,\n    roles: true,\n    full_name: true,\n    last_login: true,\n    status: true\n}\n\nexport interface IGroupsAndUsersProps {\n    rows?: any,\n    viewOnly: boolean,\n    classes: any,\n    openSideModalBlock?: boolean,\n}\n\nexport const GroupsAndUsers: React.FC<IGroupsAndUsersProps> = (props: IGroupsAndUsersProps): JSX.Element => {\n    const {\n        rows,\n        classes,\n    } = props;\n    const [activeItem, setActiveItem] = useState('Groups');\n    const [activeClass, setActiveClass] = useState(0);\n    const [groupShowBlock, setGroupShowBlock] = useState('none');\n    const [userShowBlock, setUserShowBlock] = useState('none');\n    const [isFetching, setIsFetching] = React.useState(false);\n    const [typingTimeout, setTypingTimeout] = React.useState<any>(0)\n    const [userList, setUserList] = useState<any>();\n    const [userTable, setUserTable] = useState<any>({\n        limit: 10,\n        skip: 0,\n        currentPage: 0,\n        order: [],\n        filter: [],\n        count: 0\n    })\n\n    // const [statuses, setStatuses] = React.useState<any>()\n    const [tableStates, setTableState] = React.useState<any>({\n        rows: [],\n        currentPage: 0,\n        totalCount: 0,\n        pageSize: 10,\n        offset: 0,\n        order: '',\n        where: {},\n        query: ''\n    })\n    const [modalProps, setModalProps] = React.useState({\n        title: '',\n        message: '',\n        open: false,\n        method: () => { }\n    });\n    const [confirmationModalProps, setConfirmationModalProps] = React.useState({\n        title: '',\n        message: '',\n        open: false,\n        method: () => { }\n    });\n    const [selectedUsers, setSelectedUsers] = useState<any[]>([]);\n    const [usersWithRole, setUsersWithRole] = useState<any[]>([]);\n    const [refreshUsers, setRefreshUsers] = useState<boolean>(false);\n    const [isConfirmDetachUserRoleModalOpen, setIsConfirmDetachUserRoleModalOpen] = useState<boolean>(false);\n    const [userDetachRole, setUserDetachRole] = useState<any>(null);\n    const [attachUserRoleNotifModalOpen, setAttachUserRoleNotifModalOpen] = useState<boolean>(false);\n    const [attachUserRoleSuccess, setAttachUserRoleSuccess] = useState<boolean>(false);\n\n\n    const userColumns: any = [\n        {\n            name: 'username',\n            title: 'Username',\n        },\n        {\n            name: 'full_name',\n            title: 'User Account',\n        },\n        {\n            name: 'last_login',\n            title: 'Last Activity Date',\n            getCellValue: row => (row.last_login ? moment(row.last_login).format('MMMM DD, YYYY') : 'N/A')\n        },\n        {\n            name: 'status',\n            title: 'Status',\n            getCellValue: row => (row.status ? row.status.charAt(0).toUpperCase() + row.status.slice(1) : '')\n        },\n        {\n            name: 'action_delete',\n            title: ' ',\n        },\n    ]\n\n    const groupsColumns: any = [\n        {\n            name: 'group_id',\n            title: 'Group ID',\n        },\n        {\n            name: 'name',\n            title: 'Group',\n        },\n        {\n            name: 'user_count',\n            title: 'Users in the Group',\n        },\n        {\n            name: 'status',\n            title: 'Status',\n        },\n        {\n            name: 'action_delete',\n            title: ' ',\n        },\n    ];\n\n    const menuItems = [\n        'Groups',\n        'Users'\n    ]\n\n\n\n\n\n    React.useEffect(() => {\n        // groups list endpoint\n        console.log(rows)\n        APIGetGroupsAttachToRoleList({\n            pageSize: 10,\n            offset: 0,\n            role_id: `${rows[\"role_id\"]}`,\n            where: {},\n            order: [\"group_id ASC\"]\n        }, true);\n    }, []);\n\n\n\n    const handleMenuClick = (item, index) => {\n        setActiveItem(item);\n        setActiveClass(index)\n        if (item == 'Users') {\n            getUserLists(\n                10,\n                0,\n                [],\n                0,\n                [],\n            )\n        }\n        if (item == 'Groups') {\n            APIGetGroupsAttachToRoleList({\n                pageSize: 10,\n                offset: 0,\n                role_id: `${rows[\"role_id\"]}`,\n                where: {},\n                order: [\"group_id ASC\"]\n            }, true);\n        }\n    }\n\n\n    const removeDuplicateRoles = (array: any[]) => {\n        let a: any[] = []\n        array.map(x => {\n            if (!a.some(b => b.role_id === x.role_id)) {\n                a.push(x)\n            }\n        })\n        return a\n    };\n\n\n\n    const attachUserRole = async (data: any) => {\n        setIsFetching(true);\n        await attachUserRoles(rows.role_id, data).then(resp => {\n            console.log(resp)\n            setAttachUserRoleSuccess(true);\n        }).catch(e => {\n            setAttachUserRoleSuccess(false);\n            console.log(e)\n        });\n        setAttachUserRoleNotifModalOpen(true);\n        setSelectedUsers([]);\n        setUserShowBlock('none');\n        getUserLists(\n            userTable.limit,\n            userTable.skip,\n            userTable.order,\n            userTable.currentPage,\n            userTable.filter,\n        );\n        setRefreshUsers(!refreshUsers);\n    }\n\n    const detachUserRole = async (data: any) => {\n        setIsConfirmDetachUserRoleModalOpen(false);\n        setIsFetching(true);\n        await detachUserRoles(rows.role_id, data).then(resp => console.log(resp)).catch(e => console.log(e));\n        setUserShowBlock('none');\n        getUserLists(\n            userTable.limit,\n            userTable.skip,\n            userTable.order,\n            userTable.currentPage,\n            userTable.filter,\n        );\n        setRefreshUsers(!refreshUsers);\n    }\n\n\n    const getUserLists = (\n        limit: number,\n        skip: number,\n        order: any,\n        page: number,\n        filter: any,\n        search?: string\n    ) => {\n\n        if (typingTimeout) {\n            clearTimeout(typingTimeout)\n        }\n\n        let _filter: any = {};\n        let _order = order.length > 0 ? `${order[0].columnName === 'full_name' ? 'first_name' : order[0].columnName} ${order[0].direction}` : [];\n\n        if (filter.length > 0) {\n            filter.map((item: any) => {\n                if (item.columnName == 'status') {\n                    if (item.value !== 'all') {\n                        _filter[item.columnName] = item.value\n                    }\n                } else if (item.columnName == 'full_name') {\n                    _filter['first_name'] = {\n                        like: `^${item.value}.*`,\n                        options: \"i\"\n                    }\n                } else if (item.columnName == 'last_login') {\n                    _filter['and'] = [\n                        { last_login: { lte: `${moment(item.value).endOf('day').toISOString()}` } },\n                        { last_login: { gte: `${moment(item.value).startOf('day').toISOString()}` } }\n                    ]\n                    // _filter['last_login'] = {\n                    //     lte: `${moment(item.value).toISOString()}`\n                    // }\n                } else {\n                    _filter[item.columnName] = {\n                        like: `^${item.value}.*`,\n                        options: \"i\"\n                    }\n                }\n            })\n        }\n\n        let params = {\n            fields: user_fields,\n            limit: limit,\n            offset: skip,\n            order: _order,\n            where: {\n                \"and\": [\n                    {\n                        \"roles.role_id\": rows.role_id,\n                    },\n                    {\n                        \"or\": [_filter]\n                    }\n                ],\n            }\n        }\n\n        setTypingTimeout(\n            setTimeout(() => {\n                // setLoading(true)\n                setIsFetching(true)\n                getRolesUsersLists(params, search ? search : '').then((response) => {\n                    const resp_body = response.body.map(item => {\n                        item.roles = removeDuplicateRoles(item.roles);\n                        return item;\n                    });\n                    setUserList(resp_body)\n                    setUserTable({\n                        currentPage: userTable.currentPage > (Math.ceil(response.count / limit) - 1) ? (Math.ceil(response.count / limit) - 1) : page,\n                        order: order,\n                        limit: limit,\n                        skip: skip,\n                        filter: filter,\n                        count: response.count\n                    })\n                    // setLoading(false)\n                    setIsFetching(false)\n                    console.log(resp_body)\n                }).catch(err => {\n                    // alert(err);\n                    setUserList([])\n                    console.log(err)\n                    setIsFetching(false)\n                    // setLoading(false)\n                })\n            }, filter.length > 0 || search ? 2000 : 0)\n        )\n    }\n\n\n\n    const APIGetGroupsAttachToRoleList = (newState?: any, saveSummary?: boolean) => {\n        setIsFetching(true)\n\n\n        getAllGroupsAttachToRole(\n            newState.role_id,\n            newState.pageSize,\n            newState.offset,\n            newState.where,\n            newState.order,\n            newState.query).then((data: any) => {\n                console.log(data)\n                if (!data.error) {\n\n                    const state = {\n                        ...newState,\n                        rows: data.body,\n                        totalCount: data.count.count\n                    }\n\n\n                    if (saveSummary && saveSummary === true) {\n                        // setStatuses(data.statuses)\n                    }\n\n                    updateTableState(state)\n\n\n                } else {\n                    const state = {\n                        ...newState,\n                        rows: [],\n                        totalCount: 0\n                    }\n\n                    updateTableState(state)\n                }\n\n                setIsFetching(false)\n            }).catch(() => {\n                console.log(\"catch\")\n                setIsFetching(false)\n                const state = {\n                    ...newState,\n                    rows: [],\n                    totalCount: 0\n                }\n\n                updateTableState(state)\n            })\n    }\n\n\n\n\n    const updateTableState = (prop) => {\n        setTableState({\n            ...tableStates,\n            ...prop\n        })\n    }\n\n\n    const onSaveAddRoleToGroup = (items) => {\n        // console.log(items)\n        setIsFetching(true)\n        let data = {\n            body: items\n        }\n        let payload: any = [];\n\n        if (tableStates && tableStates.length !== null) {\n            payload.push(...tableStates.rows)\n        }\n\n        if (data.body && data.body.length > 0) {\n            data.body.map(c => {\n                let selectedGroupId = {\n                    _id: c[\"id\"],\n                    group_id: c[\"group_id\"],\n                    name: c[\"name\"],\n                    description: c[\"description\"],\n                    user_account: c[\"user_count\"],\n                    effectivity_date: c[\"effectivity_date\"],\n                    date_updated: c[\"date_updated\"],\n                    is_processmaker: c[\"is_processmaker\"],\n                    pmaker_uid: c[\"pmaker_uid\"],\n                    amount_limit: c[\"amount_limit\"],\n                    user_count: c[\"user_count\"],\n                    status: c[\"status\"]\n                }\n                let groupRoles = c[\"roles\"]\n\n                if (groupRoles && groupRoles.length > 0) {\n                    var isUnique = true;\n                    groupRoles.map(e => {\n                        var role_id = e[\"_id\"];\n                        if (role_id === rows[\"_id\"]) {\n                            isUnique = false;\n                        }\n                    })\n                    if (isUnique === true) {\n                        groupRoles.push(rows)\n                    }\n                } else {\n                    groupRoles.push(rows)\n                }\n\n                selectedGroupId[\"roles\"] = groupRoles;\n\n                payload.push(selectedGroupId)\n            })\n        }\n        console.log(payload)\n        attachRoleToGroups(rows[\"role_id\"], payload, '').then((resp: any) => {\n            setIsFetching(false)\n            if (!resp.error) {\n                setModalProps({\n                    ...modalProps,\n                    open: true,\n                    title: 'User group added!',\n                    message: 'New user group have been successfully added.',\n                    method: handleCloseModalProps\n                })\n            } else {\n                setModalProps({\n                    ...modalProps,\n                    open: true,\n                    title: 'Add User Group Failed!',\n                    message: 'Something went wrong. New user wasn’t added.',\n                    method: handleCloseModalProps\n                })\n            }\n        }).catch((err) => {\n            setIsFetching(false)\n            setModalProps({\n                ...modalProps,\n                open: true,\n                title: 'Add User Group Failed!',\n                message: err.message,\n                method: handleCloseModalProps\n            })\n            console.log(err)\n        })\n        console.log(JSON.stringify(payload));\n    }\n\n    const handleDeleteGroup = (roledata) => {\n        handleCloseConfirmationModalProps();\n        setIsFetching(true)\n        let data = {\n            body: [roledata],\n            label: \"name\"\n        }\n\n        let payload: any = [];\n\n        if (data.body && data.body.length > 0) {\n            data.body.map(a => {\n                let selectedGroupToRemove = {\n                    _id: a[\"_id\"],\n                    group_id: a[\"group_id\"],\n                    name: a[\"name\"],\n                    description: a[\"description\"],\n                    user_account: a[\"user_count\"],\n                    effectivity_date: a[\"effectivity_date\"],\n                    date_updated: a[\"date_updated\"],\n                    is_processmaker: a[\"is_processmaker\"],\n                    pmaker_uid: a[\"pmaker_uid\"],\n                    amount_limit: a[\"amount_limit\"],\n                    user_count: a[\"user_count\"],\n                    status: a.status.props.children\n                }\n                let groupRoles = a[\"roles\"]\n                let newGroupRoles: any = [];\n\n                if (groupRoles && groupRoles.length > 0) {\n\n                    groupRoles.map(e => {\n                        var role_id = e[\"_id\"];\n                        if (role_id === rows[\"_id\"]) {\n                            newGroupRoles.push(e)\n                        }\n                    })\n                }\n                selectedGroupToRemove[\"roles\"] = newGroupRoles;\n                payload.push(selectedGroupToRemove)\n            })\n        }\n        console.log(payload)\n        attachRoleToGroups(rows[\"role_id\"], payload, 'remove').then((resp: any) => {\n            setIsFetching(false)\n            if (!resp.error) {\n                setModalProps({\n                    ...modalProps,\n                    open: true,\n                    title: 'User group removed!',\n                    message: `${roledata[\"name\"]} has been successfully removed.`,\n                    method: handleCloseModalProps\n                })\n            } else {\n                setModalProps({\n                    ...modalProps,\n                    open: true,\n                    title: 'Remove User Group Failed!',\n                    message: 'Something went wrong. User group wasn’t removed.',\n                    method: handleCloseModalProps\n                })\n            }\n        }).catch((err) => {\n            setIsFetching(false)\n            setModalProps({\n                ...modalProps,\n                open: true,\n                title: 'Removed User Group Failed!',\n                message: err.message,\n                method: handleCloseModalProps\n            })\n            console.log(err)\n        })\n        console.log(JSON.stringify(payload));\n\n    }\n\n\n    const rowDataFixer = (array: any) => {\n        let newEntry: any = [];\n        if (array.length > 0) {\n            array.forEach(data => {\n                let newRow = {\n                    ...data,\n                    group_id: `${data.group_id}`,\n                    name: data.hasOwnProperty('name') ? data.name : 'N/A',\n                    user_count: data.hasOwnProperty('user_count') ? data.user_count : 'N/A',\n                    status: data.hasOwnProperty('status') ? <span style={{ textTransform: 'capitalize' }}>{data.status}</span> : 'N/A',\n                }\n\n                newEntry.push(newRow)\n            })\n\n            return newEntry\n        }\n\n        return []\n    }\n\n    const handleTimeOutGroupSearch = (value) => {\n        if (typingTimeout) {\n            clearTimeout(typingTimeout);\n        }\n\n        setTypingTimeout(setTimeout(function () {\n            const state = {\n                currentPage: 0,\n                pageSize: tableStates.pageSize,\n                offset: 0,\n                role_id: `${rows[\"role_id\"]}`,\n                order: tableStates.order ? tableStates.order : \"group_id ASC\",\n                where: tableStates.where,\n                query: value\n            }\n\n            APIGetGroupsAttachToRoleList(state)\n\n        }, 3000));\n    }\n\n\n    const handleSearchGroup = (e) => {\n        if (typingTimeout) {\n            clearTimeout(typingTimeout);\n        }\n        const state = {\n            currentPage: 0,\n            pageSize: tableStates.pageSize,\n            offset: 0,\n            role_id: `${rows[\"role_id\"]}`,\n            order: tableStates.order ? tableStates.order : \"group_id ASC\",\n            where: tableStates.where,\n            query: e\n        }\n\n        APIGetGroupsAttachToRoleList(state)\n\n    }\n\n\n    const onFilterChange = (value) => {\n        if (typingTimeout) {\n            clearTimeout(typingTimeout);\n        }\n\n        setTypingTimeout(setTimeout(function () {\n            const state = {\n                currentPage: 0,\n                pageSize: tableStates.pageSize,\n                offset: 0,\n                role_id: `${rows[\"role_id\"]}`,\n                order: tableStates.order ? tableStates.order : \"group_id ASC\",\n                where: {},\n                query: tableStates.query\n            }\n\n            value.map(w =>\n                w.columnName === 'group_id' && w.value !== '' ?\n                    state.where['group_id'] = parseInt(w.value)\n                    : w.columnName === 'name' ?\n                        state.where['name'] = {\n                            like: `${w.value}.*`,\n                            options: 'i'\n                        }\n                        : w.columnName === 'user_count' && w.value !== '' ?\n                            state.where[\"user_count\"] = parseInt(w.value)\n                            : w.columnName === 'status' && w.value !== 'all' ?\n                                state.where[\"status\"] = w.value\n                                : ''\n            )\n\n            console.log(state)\n            APIGetGroupsAttachToRoleList(state)\n        }, 3000));\n    }\n\n    const onCurrentPageChange = (value) => {\n        const state = {\n            pageSize: tableStates.pageSize,\n            currentPage: value,\n            role_id: `${rows[\"role_id\"]}`,\n            order: tableStates.order ? tableStates.order : \"group_id ASC\",\n            offset: tableStates.pageSize * value,\n            where: tableStates.where,\n            query: tableStates.query\n        }\n\n        APIGetGroupsAttachToRoleList(state)\n    }\n\n    const onPageSizeChange = (value) => {\n        const state = {\n            pageSize: value,\n            offset: tableStates.offset,\n            role_id: `${rows[\"role_id\"]}`,\n            order: tableStates.order ? tableStates.order : \"group_id ASC\",\n            where: tableStates.where,\n            query: tableStates.query\n        }\n\n        if (tableStates.currentPage > (Math.ceil(tableStates.totalCount / value) - 1)) {\n            state['currentPage'] = ((Math.ceil(tableStates.totalCount / value) - 1))\n            state['offset'] = ((Math.ceil(tableStates.totalCount / value) - 1)) * value\n        }\n\n        APIGetGroupsAttachToRoleList(state)\n    }\n\n    const onSortingChange = (value) => {\n\n        let filter = {\n            ...value[0],\n            direction: value[0].direction.toUpperCase()\n        }\n\n        let a = Object.values(filter).join(' ')\n\n        const state = {\n            pageSize: tableStates.pageSize,\n            offset: tableStates.offset,\n            role_id: `${rows[\"role_id\"]}`,\n            order: [a],\n            where: tableStates.where,\n            query: tableStates.query\n        }\n\n        APIGetGroupsAttachToRoleList(state)\n    }\n\n\n    const handleCloseModalProps = () => {\n        setModalProps({\n            ...modalProps,\n            open: false\n        })\n        setGroupShowBlock('none')\n        APIGetGroupsAttachToRoleList({\n            pageSize: 10,\n            offset: 0,\n            role_id: `${rows[\"role_id\"]}`,\n            where: {},\n            order: [\"group_id ASC\"]\n        }, true);\n    };\n\n    const handleOpenConfirmationModalProps = (data) => {\n        console.log(\"this is for deletion\")\n        console.log(data)\n        setConfirmationModalProps({\n            ...confirmationModalProps,\n            open: true,\n            title: \"Remove from role\",\n            message: `Are you sure you want to remove ${data.name} from the role ${rows[\"name\"]}?`,\n            method: () => { handleDeleteGroup(data) }\n        });\n    }\n\n    const handleCloseConfirmationModalProps = () => {\n        setConfirmationModalProps({\n            ...confirmationModalProps,\n            open: false\n        })\n    };\n\n\n    return (\n        <>\n            {isFetching && <UI.LoadingIndicator />}\n            <Grid container xs={12}>\n                <Grid item xs={12}>\n                    <Typography><b>Attached Groups and Users</b></Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container xs={12} alignItems={'center'}>\n                        <Grid item xs={6}>\n                            <ul style={{ padding: '0', margin: '0' }}>\n                                {\n                                    menuItems.map((item, i) => (\n                                        <li className={classes.menuList}>\n                                            <Link\n                                                className={classNames(classes.menuLink, activeClass === i ? classes.LinkActive : null)}\n                                                onClick={() => handleMenuClick(item, i)}>\n                                                {item}\n                                            </Link>\n                                        </li>\n                                    ))\n                                }\n                            </ul>\n                        </Grid>\n                        <Grid item xs={6} className={classes.alignRight}>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    {\n                        activeItem == 'Groups' ?\n                            <>\n                                <Grid className={classes.alignRight}>\n                                    <Link onClick={() => { setGroupShowBlock('block') }}> Add to this role</Link>\n                                </Grid>\n                                <ReactSearch\n                                    onChange={handleTimeOutGroupSearch}\n                                    placeholder={'Search user'}\n                                    onSearch={handleSearchGroup} />\n                                <ReactTable\n                                    rows={rowDataFixer(tableStates.rows)}\n                                    columns={groupsColumns}\n                                    viewOnly={false}\n                                    enableSelection={false}\n                                    totalCount={tableStates.totalCount}\n                                    currentPage={tableStates.currentPage}\n                                    pageSize={tableStates.pageSize}\n                                    columnExtensions={\n                                        [{\n                                            columnName: 'action_delete',\n                                            width: 75,\n                                            wordWrapEnabled: true,\n                                            align: 'center'\n                                        }]\n                                    }\n                                    message={'There are no user accounts to show yet.'}\n                                    sortingStateColumnExtensions={[\n                                        { columnName: 'action_delete', sortingEnabled: false }\n                                    ]}\n                                    onFilterChange={onFilterChange}\n                                    onPageChange={onCurrentPageChange}\n                                    onSetPageSize={onPageSizeChange}\n                                    onSortingChange={onSortingChange}\n                                    onDeleteRow={(row) => {\n                                        handleOpenConfirmationModalProps(row)\n                                    }}\n                                />\n                            </>\n                            : null\n                    }\n                    {\n                        activeItem == 'Users' ?\n                            <>\n                                <Grid className={classes.alignRight}>\n                                    <Link onClick={() => { setUserShowBlock('block') }}> Add to this role</Link>\n                                </Grid>\n                                <ReactSearch\n                                    onSearch={(search: string) => {\n                                        getUserLists(\n                                            userTable.limit,\n                                            userTable.skip,\n                                            userTable.order,\n                                            userTable.currentPage,\n                                            userTable.filter,\n                                            search\n                                        )\n                                    }}\n                                    onChange={(search: string) => {\n                                        getUserLists(\n                                            userTable.limit,\n                                            userTable.skip,\n                                            userTable.order,\n                                            userTable.currentPage,\n                                            userTable.filter,\n                                            search\n                                        )\n                                    }}\n                                    placeholder={'Search a user account'} />\n                                <ReactTable\n                                    rows={userList ? userList : []}\n                                    columns={userColumns}\n                                    columnExtensions={\n                                        [{\n                                            columnName: 'action_delete',\n                                            width: 75,\n                                            wordWrapEnabled: true,\n                                            align: 'center'\n                                        }]\n                                    }\n                                    message={'There are no user accounts to show yet.'}\n                                    sortingStateColumnExtensions={[\n                                        { columnName: 'action_delete', sortingEnabled: false }\n                                    ]}\n                                    onDeleteRow={(row) => {\n                                        setUserDetachRole(row);\n                                        setIsConfirmDetachUserRoleModalOpen(true);\n                                        console.log(row, 'rowdeleted');\n                                    }}\n                                    currentPage={userTable.currentPage}\n                                    pageSize={userTable.limit}\n                                    totalCount={userTable.count}\n                                    defaultFilters={userTable.filter}\n                                    onFilterChange={(filter: any) => {\n                                        getUserLists(\n                                            userTable.limit,\n                                            0,\n                                            userTable.order,\n                                            0,\n                                            filter,\n                                        )\n                                    }}\n                                    onSortingChange={(sort: any) => {\n                                        getUserLists(\n                                            userTable.limit,\n                                            userTable.skip,\n                                            sort,\n                                            userTable.currentPage,\n                                            userTable.filter,\n                                        )\n                                    }}\n                                    onSetPageSize={(size: number) => {\n                                        getUserLists(\n                                            size,\n                                            userTable.skip,\n                                            userTable.order,\n                                            userTable.currentPage,\n                                            userTable.filter,\n                                        )\n                                    }}\n                                    onPageChange={(page: number) => {\n                                        let skip = page * userTable.limit\n                                        getUserLists(\n                                            userTable.limit,\n                                            skip,\n                                            userTable.order,\n                                            page,\n                                            userTable.filter,\n                                        )\n                                    }}\n\n                                />\n                            </>\n                            : null\n                    }\n                </Grid>\n            </Grid>\n\n            <SideModalBlock\n                handleClose={() => { setGroupShowBlock('none') }}\n                showBlock={activeItem == 'Groups' ? groupShowBlock : 'none'}\n                title={'Add to this Role'}>\n                <AddGroupRoleBody\n                    onClose={() => {\n                        setGroupShowBlock('none')\n                    }}\n                    onSave={(data: any) => {\n                        onSaveAddRoleToGroup(data)\n                    }}\n                />\n            </SideModalBlock>\n\n            <SideModalBlock\n                handleClose={() => { setUserShowBlock('none') }}\n                showBlock={activeItem == 'Users' ? userShowBlock : 'none'}\n                title={'Add to this Role'}>\n                <AddUserRoleBody\n                    apiCallFields={user_fields}\n                    roleId={rows.role_id}\n                    refreshUsersWithRole={refreshUsers}\n                    selectedUsers={selectedUsers}\n                    setSelectedUsers={(data: any) => setSelectedUsers([...data])}\n                    usersWithRole={usersWithRole}\n                    setUsersWithRole={(data: any) => setUsersWithRole([...data])}\n                    onClose={() => {\n                        setUserShowBlock('none')\n                    }}\n                    onSave={(data: any) => {\n                        if (!Array.isArray(data)) return;\n\n                        const attach_role_data = data.filter(user => {\n                            if (user && user.roles && user.roles.some(role => role.role_id === rows.role_id)) {\n                                return false;\n                            }\n                            return true;\n                        });\n                        console.log('ATTACH DATA', attach_role_data);\n                        attachUserRole(attach_role_data);\n                    }}\n                />\n            </SideModalBlock>\n\n\n            {/* {this modal is for success and error for both adding groups and accounts} */}\n            <ModalComponent\n                isModalOpen={modalProps.open}\n                onClose={modalProps.method}\n                message={modalProps.message}\n                title={modalProps.title}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item >\n                            <Button\n                                onClick={modalProps.method}\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}>\n                                Okay\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n\n            {/* {this modal is for confirmation for both removing groups and accounts} */}\n            <ModalComponent\n                isModalOpen={confirmationModalProps.open}\n                onClose={handleCloseConfirmationModalProps}\n                message={confirmationModalProps.message}\n                title={confirmationModalProps.title}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Button\n                                onClick={handleCloseConfirmationModalProps}\n                                className={classes.button}\n                                variant={'outlined'}\n                                color={'secondary'}>\n                                Cancel\n                            </Button>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button\n                                onClick={confirmationModalProps.method}\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}>\n                                Remove\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n\n\n            <ModalComponent\n                isModalOpen={isConfirmDetachUserRoleModalOpen}\n                onClose={() => {\n                    setIsConfirmDetachUserRoleModalOpen(false);\n                }}\n                message={`Remove ${userDetachRole && userDetachRole.full_name ? userDetachRole.full_name : 'user'} from this role?`}\n                title={'Remove from Role'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Button onClick={() => { setIsConfirmDetachUserRoleModalOpen(false) }} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button className={classes.button} variant={'contained'} color={'primary'} onClick={() => detachUserRole([userDetachRole])}>Remove</Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n            {/* To-do: apply success and fail messages. */}\n            <ModalComponent\n                isModalOpen={attachUserRoleNotifModalOpen}\n                onClose={() => setAttachUserRoleNotifModalOpen(false)}\n                message={attachUserRoleSuccess ? 'New user account/s have been successfully added.' : 'New user account/s have been successfully added.'}\n                title={attachUserRoleSuccess ? 'User account added!' : 'User account added!'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Button className={classes.button} variant={'contained'} color={'primary'} onClick={() => setAttachUserRoleNotifModalOpen(false)}>Okay</Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n        </>\n    )\n}\n","//#region Global Imports\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\n// import NEOLink from 'next/link';\n//#endregion Global Imports\n\n//#region Interface Imports\n// import { Heading } from 'Components/UI/Heading';\nimport { Store } from 'Components/Stores/IStore';\nimport { RolesActions } from './RolesActions';\nimport { IRolesPage } from './IRolesPage';\nimport { Grid, Button } from '@material-ui/core';\n// import Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { LoadingIndicator, FloatingFooter } from 'Components/UI';\nimport { Policies } from './Components/Policies';\nimport { GroupsAndUsers } from './Components/GroupsAndUsers';\nimport { SubHeader } from 'Components/UI/SubHeader';\nimport { SideMenu } from 'Components/UI/SideMenu';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\nimport { getRoleData, getRbacList, updateRoleRbac } from 'Pages/API/Calls/Roles';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment'\n\n// import { LoadingIndicator } from 'Components/UI';\n//#endregion Interface Imports\n\nconst useStyles = makeStyles(theme => ({\n\tmainContainer: {\n\t\tpadding: '32px 24px 25px'\n\t},\n\tmain: {\n\t\tbackgroundColor: '#F5F7FB',\n\t\tpadding: '32px 24px',\n\t\tposition: 'relative'\n\t},\n\theadMain: {\n\t\t// backgroundColor: '#F5F7FB',\n\t},\n\tgridContainer: {\n\t\tpadding: theme.spacing(1),\n\t\tpaddingBottom: '75px'\n\t},\n\tgridContainerNoPadding: {\n\t\tpadding: theme.spacing(1),\n\t},\n\tsectionTitle: {\n\t\tfontSize: 24,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tsubSectionTitle: {\n\t\tfontSize: 14,\n\t\tfontWeight: 400,\n\t\tcolor: '#272e4c',\n\t},\n\teditBtn: {\n\t\twidth: '135px',\n\t\tfontSize: '14px',\n\t\tcolor: '#fff',\n\t},\n\talignRight: {\n\t\ttextAlign: 'right',\n\t},\n\tsideBarContainer: {\n\t\tborderRight: \"1px solid #ccc\",\n\t\tpaddingRight: \"25px\",\n\t},\n\tcontentContainer: {\n\t\tpaddingLeft: \"25px\",\n\t},\n\tsideBarLists: {\n\t\tpadding: 0,\n\t\tmargin: 0,\n\t\tlistStyle: 'none'\n\t},\n\tsideBarLink: {\n\t\tcolor: \"#272e4c\",\n\t\tmargin: \"0 0 10px\",\n\t\tdisplay: \"block\"\n\t},\n\tfieldGroupTitle: {\n\t\tfontSize: 13,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tlistItemTextRoot: {\n\t\tflex: 'none',\n\t},\n\tlistItemTextPrimarySelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 1)',\n\t\tcursor: 'pointer',\n\t},\n\tlistItemTextPrimaryNotSelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 0.3)',\n\t\tcursor: 'pointer',\n\t},\n\tdropzone: {\n\t\twidth: '460px',\n\t\theight: '88px',\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\tborder: '2px dashed rgba(30, 32, 113, 0.3)',\n\t\tborderRadius: '5px',\n\t\tbackgroundColor: '#e6e8ee',\n\t\tcolor: '#7b8094',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tflexDirection: 'column',\n\t},\n\tinputLabel: {\n\t\tcolor: '#272e4c',\n\t\tfontSize: '12px',\n\t\tmarginBottom: '5px'\n\t},\n\tkeyboardDatePicker: {\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\twidth: '212px',\n\t},\n\tcheckbox: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tradio: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tappBar: {\n\t\ttop: 'auto',\n\t\tbottom: 0,\n\t\tborder: '1px solid #707070',\n\t\tbackgroundColor: 'rgba(54, 54, 54, 0.64)',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: 'calc(100% - 72px)',\n\t\t},\n\t},\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\tbutton: {\n\t\tmargin: '0 10px',\n\t\tminHeight: '42px',\n\t\tminWidth: '150px',\n\t\tfontSize: 14\n\t},\n\tbuttonTitle: {\n\t\tfontWeight: 700,\n\t\tfontSize: 13,\n\t},\n\tbuttonSubTitle: {\n\t\tfontWeight: 400,\n\t\tfontSize: 7,\n\t},\n\tmenuList: {\n\t\tdisplay: \"inline-block\",\n\t\tpadding: \"10px 45px 10px 0\"\n\t},\n\tmenuLink: {\n\t\tcolor: \"#929292\",\n\t\tdisplay: \"block\",\n\t\tfontSize: \"1.10em\",\n\t\t'&:hover': {\n\t\t\tcolor: \"#3ab77d\",\n\t\t}\n\t},\n\tLinkActive: {\n\t\tcolor: \"#3ab77d\",\n\t\tfontWeight: \"bold\",\n\t\ttextDecoration: \"underline\"\n\t}\n}));\n\n\nexport const RolesPage: React.FC<IRolesPage.IProps> = (props: IRolesPage.IProps): JSX.Element => {\n\tconst classes = useStyles();\n\tconst [viewOnly, setViewOnly] = useState(true);\n\tconst [isEdited, setIsEdited] = useState(false);\n\tconst [loading, setLoading] = useState(false);\n\tconst [activeItem, setActiveItem] = useState('Policies');\n\tconst [activeItemIndex, setActiveItemIndex] = useState(0);\n\tconst [isModalConfirmExitOpen, setIsModalConfirmExitOpen] = useState(false);\n\tconst [isModalConfirmSaveOpen, setIsModalConfirmSaveOpen] = useState(false);\n\tconst [isModalSaveSuccessOpen, setIsmodalSaveSuccessOpen] = useState(false);\n\tconst [mode, setMode] = useState('view');\n\t// const [dataResponse, setDataResponse ] = useState([]);\n\tconst [isOpenSideModalBlock, setIsOpenSideModalBlock] = useState(false);\n\tconst [policyResponse, setPolicyResponse] = useState<any>([]);\n\tconst [moduleName, setModuleName] = useState('User Management');\n\tconst [rbacList, setRbacList] = useState([]);\n\tconst [breadCrumbs, setBreadCrumbs] = useState<any[]>([])\n\tconst [rbacCount,] = useState(0);\n\tconst [roleId, setRoleId] = useState('');\n\tconst [policyData, setPolicyData] = useState<any>({})\n\tconst [isRedirect, setIsRedirect] = useState<boolean>(false)\n\tconst [currentModule, setCurrentModule] = useState<string>('')\n\tconst [rbacState, setRbacState] = useState<any>({\n\t\tfilter: [],\n\t\torder: '',\n\t\tlimit: 40,\n\t\tskip: 0,\n\t\tcount: 0,\n\t\tcurrentPage: 0\n\t})\n\tconst [loadRbacList, setLoadRbacList] = useState<any>({\n\t\tset: false,\n\t\tdata: [],\n\t})\n\tconst [typingTimeout, setTypingTimeout] = useState<any>(0);\n\tconst [showDeactivationWarning, setShowDeactivationWarning] = useState<boolean>(false)\n\n\tconst sideBarItems = [\n\t\t{\n\t\t\tname: 'Policies',\n\t\t\t// label: 'POLICY'\n\t\t},\n\t\t{\n\t\t\tname: 'Groups And Users',\n\t\t\t// label: 'GROUPIE'\n\t\t},\n\t];\n\n\tReact.useEffect(() => {\n\t\thandleGetRoleData()\n\t}, []);\n\n\tconst handleGetRoleData = () => {\n\t\tsetMode('view');\n\t\tsetLoading(true)\n\t\tgetRoleData(props.match.params.id).then(response => {\n\t\t\tvar _crumbs: any[] = [\n\t\t\t\t{\n\t\t\t\t\tname: \"ROLES\",\n\t\t\t\t\tlink: \"/system-admin/users/roles\"\n\t\t\t\t},\n\t\t\t];\n\t\t\t_crumbs.push({ name: response.name })\n\t\t\tsetBreadCrumbs(_crumbs);\n\t\t\tsetPolicyResponse(response);\n\t\t\tsetCurrentModule(response.module);\n\t\t\thandGetRbacList(\n\t\t\t\trbacState.filter,\n\t\t\t\trbacState.order,\n\t\t\t\trbacState.limit,\n\t\t\t\trbacState.skip,\n\t\t\t\trbacState.currentPage,\n\t\t\t\tresponse,\n\t\t\t\t'view',\n\t\t\t\t'',\n\t\t\t\tresponse.module\n\t\t\t);\n\t\t\tconsole.log(response)\n\t\t}).catch(err => {\n\t\t\tsetLoading(false)\n\t\t\tconsole.log(err)\n\t\t\talert(err);\n\t\t})\n\t}\n\n\tconst isEmpty = (obj) => {\n\t\tfor(var key in obj) {\n\t\t\tif(obj.hasOwnProperty(key))\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tconst handGetRbacList = (\n\t\tfilter: any,\n\t\tsort: any,\n\t\tlimit: number,\n\t\tskip: number,\n\t\tcurrentPage: number,\n\t\tresParam?: any,\n\t\t_mode?: string,\n\t\tsearch?: string,\n\t\tcurModule?: string\n\t) => {\n\t\tconsole.log(resParam);\n\t\t\n\t\tif (typingTimeout) {\n\t\t\tclearTimeout(typingTimeout)\n\t\t}\n\n\t\tlet _filter: any = {};\n\t\tlet _order = sort ? `${sort[0].columnName} ${sort[0].direction}` : '';\n\n\t\tif (filter.length > 0) {\n\t\t\tfilter.map((item: any) => {\n\t\t\t\t_filter[item.columnName] = {\n\t\t\t\t\tlike: `^${item.value}.*`,\n\t\t\t\t\toptions: \"i\"\n\t\t\t\t}\n\t\t\t})\n\t\t\t_filter['module'] = {\n\t\t\t\tlike: `^${currentModule}.*`,\n\t\t\t\toptions: \"i\"\n\t\t\t}\n\t\t} else {\n\t\t\t_filter = {\n\t\t\t\tmodule: {\n\t\t\t\t\tlike: `^${curModule ? curModule : currentModule}.*`,\n\t\t\t\t\toptions: \"i\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tlet params = {\n\t\t\tlimit: limit,\n\t\t\tskip: skip,\n\t\t\torder: _order,\n\t\t\twhere: _filter\n\t\t}\n\n\t\tsetTypingTimeout(setTimeout(() => {\n\t\t\tsetLoading(true)\n\t\t\tgetRbacList(params, search ? search : '').then(response => {\n\t\t\t\tlet res = response.body;\n\t\t\t\tresParam = isEmpty(resParam) ? !isEmpty(policyData) ? policyData : policyResponse : resParam\t\n\t\t\t\t\n\t\t\t\tsetRbacState({\n\t\t\t\t\tcurrentPage: currentPage,\n\t\t\t\t\tfilter: filter,\n\t\t\t\t\torder: sort,\n\t\t\t\t\tlimit: limit,\n\t\t\t\t\tskip: skip,\n\t\t\t\t\tcount: response.count\n\t\t\t\t})\n\n\t\t\t\tres.length > 0 && res.map((item: any) => {\n\t\t\t\t\tresParam.rbac && resParam.rbac.length > 0 && resParam.rbac.map((policy: any) => {\n\t\t\t\t\t\tif (item._id === policy._id) {\n\t\t\t\t\t\t\titem['checked'] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t// if (_mode === 'view' && resParam) {\n\t\t\t\t// \tres = res.length > 0 && res.filter((item: any) => {\n\t\t\t\t// \t\treturn item.checked ? true : false\n\t\t\t\t// \t})\n\t\t\t\t// }\n\t\t\t\tif (loadRbacList.set === false){\n\t\t\t\t\tsetLoadRbacList({\n\t\t\t\t\t\tset: true,\n\t\t\t\t\t\tdata: res,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tconsole.log(loadRbacList);\n\t\t\t\tsetRbacList(res)\n\t\t\t\tsetLoading(false)\n\t\t\t}).catch(err => {\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetLoading(false)\n\t\t\t\talert(err);\n\t\t\t})\n\t\t}, filter.length > 0 || search ? 2000 : 0))\n\t}\n\n\tconst editRole = () => {\n\t\tsetViewOnly(false);\n\t\tsetMode('edit');\n\t\thandGetRbacList(\n\t\t\trbacState.filter,\n\t\t\trbacState.order,\n\t\t\trbacState.limit,\n\t\t\trbacState.skip,\n\t\t\trbacState.currentPage,\n\t\t\tpolicyResponse,\n\t\t\t'edit',\n\t\t)\n\t}\n\n\tconst activeSideBarItem = (item) => {\n\t\tsetActiveItem(item);\n\t\tsetViewOnly(true);\n\t\tsideBarItems.map((data, index) => {\n\t\t\tif (data.name === item) {\n\t\t\t\tif (item === 'Groups And Users') {\n\t\t\t\t\tsetIsOpenSideModalBlock(true)\n\t\t\t\t}\n\t\t\t\tsetActiveItemIndex(index);\n\t\t\t}\n\t\t})\n\t}\n\n\tconst handleModalConfirmationClose = () => {\n\t\tsetIsModalConfirmSaveOpen(false);\n\t\tsetIsModalConfirmExitOpen(false);\n\t}\n\n\tconst generateRoleId = (moduleName: string, count: number) => {\n\t\tlet roleId = '';\n\n\t\tswitch (moduleName) {\n\t\t\tcase 'User Management':\n\t\t\t\troleId = `UMRID0${count}`\n\t\t\t\tbreak;\n\t\t\tcase 'Membership':\n\t\t\t\troleId = `MRID0${count}`\n\t\t\t\tbreak;\n\t\t\tcase 'Underwriting':\n\t\t\t\troleId = `URID0${count}`\n\t\t\t\tbreak;\n\t\t\tcase 'Customer Care':\n\t\t\t\troleId = `CRID0${count}`\n\t\t\t\tbreak;\n\t\t\tcase 'Claims':\n\t\t\t\troleId = `CLRID0${count}`\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\troleId = `UMRID0${count}`\n\t\t\t\tbreak;\n\t\t}\n\t\treturn roleId;\n\t}\n\n\tconst handleChangeModuleName = (moduleName) => {\n\t\tsetRoleId(generateRoleId(moduleName, rbacCount));\n\t}\n\n\n\tconst handleOnSave = () => {\n\t\tlet data = policyData;\n\n\t\tif (!data[\"expiry_date\"] && data.expiry_date === null) {\n\t\t\tdelete data.expiry_date\n\t\t}\n\n\t\tdata.rbac && data.rbac.map((rbac: any) => {\n\t\t\tif (rbac.checked) {\n\t\t\t\tdelete rbac.checked\n\t\t\t}\n\t\t})\n\t\tsetLoading(true)\n\t\tupdateRoleRbac(data._id, data).then((response: any) => {\n\t\t\tconsole.log(response)\n\t\t\tsetMode('view');\n\t\t\thandGetRbacList(\n\t\t\t\trbacState.filter,\n\t\t\t\trbacState.order,\n\t\t\t\trbacState.limit,\n\t\t\t\trbacState.skip,\n\t\t\t\trbacState.currentPage,\n\t\t\t\tresponse,\n\t\t\t\t'view',\n\t\t\t)\n\t\t\tsetPolicyResponse(response)\n\t\t\tsetIsmodalSaveSuccessOpen(true)\n\t\t\tsetIsModalConfirmSaveOpen(false);\n\t\t\tsetBreadCrumbs([\n\t\t\t\t{\n\t\t\t\t\tname: \"ROLES\",\n\t\t\t\t\tlink: \"/system-admin/users/roles\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: response.name\n\t\t\t\t}\n\t\t\t])\n\t\t\tsetModuleName(response.module)\n\t\t\tsetLoading(false);\n\t\t\tsetIsEdited(false);\n\t\t}).catch(err => {\n\t\t\tsetLoading(false)\n\t\t\talert(err);\n\t\t})\n\t}\n\n\tconst handleRemoveAllChanges = () => {\n\t\thandleGetRoleData()\n\t\thandGetRbacList(\n\t\t\trbacState.filter,\n\t\t\trbacState.order,\n\t\t\trbacState.limit,\n\t\t\trbacState.skip,\n\t\t\trbacState.currentPage,\n\t\t\tpolicyResponse,\n\t\t\t'view',\n\t\t)\n\t\tsetIsModalConfirmExitOpen(false)\n\t\tsetIsRedirect(true)\n\t}\n\n\tconst renderSaveChangesMessage = () => {\n\t\tif (showDeactivationWarning)\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<span>Save all changes made?</span>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<strong>NOTE:</strong><br />\n\t\t\t\t\t<span>You changed the expiry date of this role. This will deactivate the role.</span>\n\t\t\t\t</>\n\t\t\t)\n\t\telse\n\t\t\treturn 'Save all changes made?'\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\tisRedirect &&\n\t\t\t\t<Redirect\n\t\t\t\t\tto={{\n\t\t\t\t\t\tpathname: '/system-admin/users',\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\t<SubHeader\n\t\t\t\theadingTitle={breadCrumbs[1] ? breadCrumbs[1].name : ''}\n\t\t\t\tbreadCrumbsArray={breadCrumbs}\n\t\t\t\tbuttonFunc={editRole}\n\t\t\t\tbuttonName={'Edit Role'}\n\t\t\t\tlayoutType={'layout_1'}\n\t\t\t\tenableButton={mode === 'view' && activeItem === 'Policies' && policyResponse.is_processmaker === false ? true : false}\n\t\t\t></SubHeader>\n\t\t\t<div className={classes.main}>\n\t\t\t\t{loading ?\n\t\t\t\t\t(<LoadingIndicator />) : null\n\t\t\t\t}\n\t\t\t\t<Grid container xs={12}>\n\t\t\t\t\t<Grid item xs={3} className={classes.sideBarContainer}>\n\t\t\t\t\t\t<SideMenu\n\t\t\t\t\t\t\titems={sideBarItems}\n\t\t\t\t\t\t\tactiveItems={activeSideBarItem}\n\t\t\t\t\t\t\tsetActiveItem={activeItemIndex}\n\t\t\t\t\t\t></SideMenu>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={9} className={classes.contentContainer}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tactiveItem == 'Policies' &&\n\t\t\t\t\t\t\t<Policies\n\t\t\t\t\t\t\t\trbacList={rbacList}\n\t\t\t\t\t\t\t\tloadRbacList={loadRbacList.data}\n\t\t\t\t\t\t\t\tmoduleName={moduleName}\n\t\t\t\t\t\t\t\troleId={roleId}\n\t\t\t\t\t\t\t\trows={policyResponse}\n\t\t\t\t\t\t\t\tmode={mode}\n\t\t\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\t\t\tviewOnly={viewOnly}\n\t\t\t\t\t\t\t\tisEdited={isEdited}\n\t\t\t\t\t\t\t\trbacState={rbacState}\n\t\t\t\t\t\t\t\tonSearch={(search: string) => {\n\t\t\t\t\t\t\t\t\thandGetRbacList(\n\t\t\t\t\t\t\t\t\t\trbacState.filter,\n\t\t\t\t\t\t\t\t\t\trbacState.order,\n\t\t\t\t\t\t\t\t\t\trbacState.limit,\n\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\trbacState.page,\n\t\t\t\t\t\t\t\t\t\tpolicyData ? policyData : policyResponse,\n\t\t\t\t\t\t\t\t\t\tmode,\n\t\t\t\t\t\t\t\t\t\tsearch\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonNavigateSideMenu={(name: string) => {\n\t\t\t\t\t\t\t\t\tactiveSideBarItem(name)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChangeModuleName={(name: string) => {\n\t\t\t\t\t\t\t\t\thandleChangeModuleName(name)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonUpdateChange={(data: any) => {\n\t\t\t\t\t\t\t\t\tsetPolicyData(data);\n\t\t\t\t\t\t\t\t\tsetIsEdited(true);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonPageChange={(page: number) => {\n\t\t\t\t\t\t\t\t\tlet skip = page * rbacState.limit\n\t\t\t\t\t\t\t\t\thandGetRbacList(\n\t\t\t\t\t\t\t\t\t\trbacState.filter,\n\t\t\t\t\t\t\t\t\t\trbacState.order,\n\t\t\t\t\t\t\t\t\t\trbacState.limit,\n\t\t\t\t\t\t\t\t\t\tskip,\n\t\t\t\t\t\t\t\t\t\tpage,\n\t\t\t\t\t\t\t\t\t\tpolicyData ? policyData : policyResponse,\n\t\t\t\t\t\t\t\t\t\tmode,\n\t\t\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonPageSizeChange={(size: number) => {\n\t\t\t\t\t\t\t\t\thandGetRbacList(\n\t\t\t\t\t\t\t\t\t\trbacState.filter,\n\t\t\t\t\t\t\t\t\t\trbacState.order,\n\t\t\t\t\t\t\t\t\t\tsize,\n\t\t\t\t\t\t\t\t\t\trbacState.skip,\n\t\t\t\t\t\t\t\t\t\trbacState.currentPage,\n\t\t\t\t\t\t\t\t\t\tpolicyData ? policyData : policyResponse,\n\t\t\t\t\t\t\t\t\t\tmode,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonFilterChange={(filter: any) => {\n\t\t\t\t\t\t\t\t\thandGetRbacList(\n\t\t\t\t\t\t\t\t\t\tfilter,\n\t\t\t\t\t\t\t\t\t\trbacState.order,\n\t\t\t\t\t\t\t\t\t\trbacState.limit,\n\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\tpolicyData ? policyData : policyResponse,\n\t\t\t\t\t\t\t\t\t\tmode,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonSortChange={(sort: any) => {\n\t\t\t\t\t\t\t\t\thandGetRbacList(\n\t\t\t\t\t\t\t\t\t\trbacState.filter,\n\t\t\t\t\t\t\t\t\t\tsort,\n\t\t\t\t\t\t\t\t\t\trbacState.limit,\n\t\t\t\t\t\t\t\t\t\trbacState.skip,\n\t\t\t\t\t\t\t\t\t\trbacState.currentPage,\n\t\t\t\t\t\t\t\t\t\tpolicyData ? policyData : policyResponse,\n\t\t\t\t\t\t\t\t\t\tmode,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tactiveItem == 'Groups And Users' &&\n\t\t\t\t\t\t\t<GroupsAndUsers\n\t\t\t\t\t\t\t\trows={policyResponse}\n\t\t\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\t\t\tviewOnly={viewOnly}\n\t\t\t\t\t\t\t\topenSideModalBlock={isOpenSideModalBlock}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t\t<ModalComponent\n\t\t\t\tisModalOpen={isModalConfirmSaveOpen}\n\t\t\t\tonClose={handleModalConfirmationClose}\n\t\t\t\tmessage={renderSaveChangesMessage()}\n\t\t\t\ttitle={'Confirmation'}\n\t\t\t\tbuttons={\n\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button onClick={() => { setIsModalConfirmSaveOpen(false) }} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant={'contained'}\n\t\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\t\tonClick={() => handleOnSave()}\n\t\t\t\t\t\t\t>Save</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<ModalComponent\n\t\t\t\tisModalOpen={isModalConfirmExitOpen}\n\t\t\t\tonClose={handleModalConfirmationClose}\n\t\t\t\tmessage={'Exit and remove all changes made?'}\n\t\t\t\ttitle={'Confirmation'}\n\t\t\t\tbuttons={\n\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetIsModalConfirmExitOpen(false)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant={'outlined'}\n\t\t\t\t\t\t\t\tcolor={'secondary'}\n\t\t\t\t\t\t\t>Cancel</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant={'contained'}\n\t\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\thandleRemoveAllChanges()\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>Continue</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<ModalComponent\n\t\t\t\tisModalOpen={isModalSaveSuccessOpen}\n\t\t\t\tonClose={() => { setIsmodalSaveSuccessOpen(false) }}\n\t\t\t\tmessage={'Changes has been saved.'}\n\t\t\t\ttitle={'Save Success'}\n\t\t\t\tbuttons={\n\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant={'contained'}\n\t\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\t\tonClick={() => { setIsmodalSaveSuccessOpen(false) }}\n\t\t\t\t\t\t\t>Okay</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t{\n\t\t\t\tmode === 'edit' && activeItem === 'Policies' && policyData !== '' && isEdited === true ?\n\t\t\t\t\t<FloatingFooter>\n\t\t\t\t\t\t<Grid container spacing={1} justify={'flex-end'} style={{ textAlign: 'right' }}>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\tvariant={'contained'}\n\n\t\t\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: '#3C394A' }}\n\t\t\t\t\t\t\t\t\tonClick={() => setIsModalConfirmExitOpen(true)}\n\t\t\t\t\t\t\t\t>Cancel</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\tvariant={'contained'}\n\t\t\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tconst today = moment().startOf('day')\n\t\t\t\t\t\t\t\t\t\tconst exp_date = policyData && policyData.expiry_date ? moment(policyData.expiry_date).startOf('day') : undefined;\n\n\t\t\t\t\t\t\t\t\t\tif (today.isSameOrAfter(exp_date)) {\n\t\t\t\t\t\t\t\t\t\t\tsetShowDeactivationWarning(true)\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tsetShowDeactivationWarning(false)\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tsetIsModalConfirmSaveOpen(true)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>Save Changes</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</FloatingFooter>\n\n\t\t\t\t\t: \"\"\n\t\t\t}\n\t\t</>\n\t);\n}\n\nconst mapStateToProps = (state: Store) => state.roles;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tMap: bindActionCreators(RolesActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };\n"],"sourceRoot":""}