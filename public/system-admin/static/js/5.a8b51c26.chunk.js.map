{"version":3,"sources":["Components/UI/ModalComponent/ModalComponent.tsx","Components/UI/TableComponent/ReactTable.tsx","Pages/Lookup/Components/Loader/index.tsx","Pages/API/Calls/Roles.ts","Pages/Users/ActionConsts.ts","Pages/Users/UsersActions.ts","Pages/Users/Sections/UsersTable/RolesTableList.tsx","Pages/Users/Tabs/Account/TableComponent.tsx","Pages/Users/Tabs/Account/Accounts.const.ts","Pages/Users/Tabs/Account/AccountsTab.tsx","Pages/Users/UsersPage.tsx"],"names":["useStyles","makeStyles","theme","dialog","dialogAction","marginBottom","spacing","marginTop","justifyContent","dialogContentContainer","width","container","paddingRight","paddingLeft","closeButton","position","right","top","color","palette","grey","dialogTitle","fontSize","fontWeight","ModalComponent","props","classes","open","isModalOpen","onClose","aria-labelledby","maxWidth","className","justify","alignItems","direction","item","xs","disableTypography","id","title","aria-label","onClick","message","children","undefined","buttons","defaultProps","FilterCell","filter","onFilter","filteringEnabled","column","name","style","padding","value","labelWidth","onChange","e","target","placeholder","SortingIcon","marginLeft","icon","faSortUp","faSortDown","SortLabel","onSort","hideSortIcon","textOverflow","overflow","faSort","groupContentCell","row","Object","getOwnPropertySymbols","length","selectCell","selected","onToggle","faMinusSquare","checkedIcon","faCheckSquare","checked","stopPropagation","console","log","ReactTable","rows","columns","disableSort","disableFilter","enableGrouping","groupColumnName","viewOnly","columnExtensions","sortingStateColumnExtensions","defaultSorting","onDeleteRow","enableSelection","enableSelectAll","onRowClick","totalCount","onPageChange","currentPage","pageSize","onSetPageSize","React","selection","setSelection","pageSizes","onCurrentPageChange","onPageSizeChange","onSelectionChange","grouping","columnName","defaultFilters","messages","noData","cellComponent","textAlign","faMinusCircle","showSortingControls","sortLabelComponent","highlightRow","selectByRowClick","showSelectAll","showSelectionColumn","contentComponent","root","height","zIndex","bottom","left","backgroundColor","outline","display","flexDirection","Loader","size","fetch","Fetch","getRolesList","limit","offset","skip","call","method","getRoleData","ActionConsts","ResetReducer","SetReducer","UsersActions","payload","type","RolesTableList","APIGetRolesList","page","setState","loading","then","res","body","count","catch","err","onSearchTableRoles","data","handleRowClick","state","redirect_to_role","redirect_data","handleAddRole","isModuleModalOpen","handleContinueRole","moduleItems","Number","moduleValue","redirect_to_addrole","_self","this","to","pathname","_id","from","Grid","md","ReactSearch","onSearch","faDownload","addFieldIcon","Link","linkStyleSelected","faPlus","Button","variant","button","margin","BasicSelect","menuItems","Select","items","restProps","renderValue","find","label","map","i","key","utils","MomentUtils","format","inputVariant","invalidDateMessage","date","toISOString","paddingTop","renderSortable","sortingEnabled","TableComponent","onFilterChange","onSortingChange","useState","getRowId","onFiltersChange","userTableColumn","tableConst","cursor","marginRight","AccountTabPage","useEffect","getUsers","array","newState","setLoading","getUserList","where","order","error","updateTableState","prop","setTableState","tableStates","isLoading","isRowClicked","setIsRowClicked","userIdSelected","setUserIdSelected","typingTimeout","setTypingTimeout","LoadingIndicator","GenerateReport","forEach","first_name","middlename","last_name","clearTimeout","setTimeout","w","a","values","join","page_tab_titles","UsersTabs","withStyles","indicator","Tabs","UsersTab","minWidth","textDecoration","Tab","gridContainerNoPadding","sectionTitle","subSectionTitle","fieldGroupTitle","dropzone","border","borderRadius","inputLabel","keyboardDatePicker","checkbox","radio","appBar","breakpoints","up","grow","flexGrow","minHeight","buttonTitle","buttonSubTitle","gridContainer","breadCrumbs","headerTitle","paddingBottom","linkPrevious","sideBar","borderRight","selectedpage","linkCurrent","main","gridItemLayout","avatar","sideNavHeader","listItemTextRoot","flex","listItemTextPrimarySelected","listItemTextPrimaryNotSelected","addACode","codeHeader","opacity","letterSpacing","textAlignLast","codeItems","codeListItems","UsersPage","selectedTab","setSelectedTab","Typography","_event","tab","index","aria-controls","mapStateToProps","users","mapDispatchToProps","dispatch","Map","bindActionCreators"],"mappings":"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","file":"static/js/5.a8b51c26.chunk.js","sourcesContent":["import React, { FC } from 'react';\n// import Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\n\nimport { IModalComponent } from './IModalComponent';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tdialog: {},\n\tdialogAction: {\n\t\tmarginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        justifyContent:'center'\n\t},\n\tdialogContentContainer: {\n        width: '100%'\n\t},\n\tcontainer: {\n        paddingRight:'15px',\n        paddingLeft:'15px',\n        width: '450px'\n\t},\n\tcloseButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n\t},\n\tdialogTitle: {\n        marginTop: theme.spacing(2),\n        // marginBottom: theme.spacing(2),\n        fontSize: '16px',\n        color: '#272E4C',\n\t\tfontWeight: 700\n    },\n}));\n\nexport const ModalComponent: FC<IModalComponent.IProps> = props => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={props.isModalOpen}\n\t\t\tonClose={props.onClose}\n\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\tmaxWidth=\"sm\"\n\t\t\tclassName={classes.dialog}\n\t\t> \n\t\t\t <div>\n                <Grid container className={classes.container} justify=\"flex-start\" alignItems=\"flex-start\" direction=\"column\">\n                    <Grid item xs>\n\t\t\t\t\t\t<DialogTitle className={classes.dialogTitle} disableTypography={false} id=\"form-dialog-title\" >\n\t\t\t\t\t\t\t<Box fontWeight={700}>{props.title}</Box>\n\t\t\t\t\t\t\t<IconButton aria-label=\"close\" className={classes.closeButton} onClick={props.onClose}>\n                                <CloseIcon />\n                            </IconButton>\n\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs className={classes.dialogContentContainer}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\tprops.message ? \n\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"flex-start\">\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t{props.message}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</DialogContent> : null\n\t\t\t\t\t\t} \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprops.children ? props.children : null\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<DialogActions className={classes.dialogAction}>\n\t\t\t\t\t\t\t{ props.buttons !== undefined ?\n\t\t\t\t\t\t\t\tprops.buttons: null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t</Grid>\n                </Grid>\n\t\t\t</div>\n\t\t</Dialog>\n\t);\n};\n\nModalComponent.defaultProps = {\n\tisModalOpen: false,\n};\n","import * as React from 'react';\n// import { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n    FilteringState,\n    IntegratedFiltering,\n    SortingState,\n    IntegratedSorting,\n    IntegratedGrouping,\n    GroupingState,\n    SelectionState,\n    // IntegratedPaging,\n    PagingState,\n    CustomPaging,\n} from '@devexpress/dx-react-grid';\nimport {\n    Grid,\n    Table,\n    //   Toolbar,\n    TableHeaderRow,\n    TableFilterRow,\n    TableGroupRow,\n    TableSelection,\n    PagingPanel,\n} from '@devexpress/dx-react-grid-material-ui';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    // faSearch,\n    faCheckSquare,\n    faMinusSquare,\n    faSort,\n    faSortUp,\n    faSortDown,\n    faMinusCircle,\n    // faPlus,\n    // faCheck, \n    // faTimes\n} from '@fortawesome/free-solid-svg-icons';\nimport * as MaterialUI from '@material-ui/core';\n\nexport interface IReactTableProps {\n    rows: any,\n    columns: any,\n    disableSort?: boolean,\n    disableFilter?: boolean,\n    enableGrouping?: boolean,\n    enableSelection?: boolean,\n    enableSelectAll?: boolean,\n    groupColumnName?: string,\n    viewOnly?: boolean,\n    columnExtensions?: any[],\n    message?: string,\n    sortingStateColumnExtensions?: any[],\n    defaultSorting?: any[],\n    totalCount?: number,\n    currentPage?: number,\n    pageSize?: number,\n    onDeleteRow?: (row) => void,\n    onRowClick?: (row) => void,\n    onPageChange?: (page) => void,\n    onSetPageSize?: (size) => void,\n}\n\nconst defaultProps: IReactTableProps = {\n    rows: [],\n    columns: [],\n    disableSort: false,\n    disableFilter: false,\n    enableGrouping: false,\n    enableSelection: false,\n    enableSelectAll: false,\n    groupColumnName: '',\n    viewOnly: true,\n    columnExtensions: [],\n    message: '',\n    sortingStateColumnExtensions: [],\n    defaultSorting: [],\n    totalCount: 0,\n    currentPage: 0,\n    pageSize: 0,\n}\n\nconst FilterCell = ({ filter, onFilter, filteringEnabled, classes, column }: any) => {\n    if (filteringEnabled) {\n        if (column.name === 'action_delete') {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n                </MaterialUI.TableCell>\n            )\n        } else {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n                    <MaterialUI.OutlinedInput\n                        classes={classes}\n                        style={{ width: '100%' }}\n                        value={filter ? filter.value : ''}\n                        labelWidth={0}\n                        onChange={e => onFilter(e.target.value ? { value: e.target.value } : null)}\n                        placeholder=\"\"\n                    />\n                </MaterialUI.TableCell>\n            );\n        }\n    }\n    return null;\n}\n\nconst SortingIcon = ({ direction }: any) =>\n    direction === 'asc' ? (\n        <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortUp} />\n    ) : (\n            <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortDown} />\n        );\n\nconst SortLabel = ({ column, onSort, children, direction }: any) => {\n    if (column.name === 'action_delete') {\n        return null;\n    } else {\n        return (\n            <MaterialUI.TableSortLabel hideSortIcon={true} onClick={onSort} style={{ textOverflow: \"ellipsis\", overflow: \"hidden\" }}>\n                {children}\n                {direction ? (\n                    <SortingIcon direction={direction} />\n                ) : (\n                        <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSort} />\n                    )}\n            </MaterialUI.TableSortLabel>\n        );\n    }\n};\n\nconst groupContentCell = ({row}: any) => {\n    return (\n        <>\n            <span>{row.value}</span>\n            <span>1/{row[Object.getOwnPropertySymbols(row)[2]] ? row[Object.getOwnPropertySymbols(row)[2]].length : 0}</span>\n        </>\n    )\n}\n\nconst selectCell = ({row, selected, onToggle}: any) => {\n    return (\n        <MaterialUI.TableCell>\n            <MaterialUI.Checkbox\n                icon={<FontAwesomeIcon icon={faMinusSquare} />}\n                checkedIcon={<FontAwesomeIcon icon={faCheckSquare} />}\n                checked={selected}\n                onClick={e => {\n                    e.stopPropagation();\n                    onToggle();\n                    console.log(row);\n                }}\n            />\n        </MaterialUI.TableCell>\n    )\n}\n\nexport const ReactTable: React.FC<IReactTableProps> = (props: IReactTableProps): JSX.Element => {\n    const {\n        rows,\n        columns,\n        disableSort,\n        disableFilter,\n        enableGrouping,\n        groupColumnName,\n        viewOnly,\n        message,\n        columnExtensions,\n        sortingStateColumnExtensions,\n        defaultSorting,\n        onDeleteRow,\n        enableSelection,\n        enableSelectAll,\n        onRowClick,\n        totalCount,\n        onPageChange,\n        currentPage,\n        pageSize,\n        onSetPageSize\n    } = props;\n\n\n    const [selection, setSelection] = React.useState<any>([])\n    const [pageSizes] = React.useState([5, 10, 15]);\n    // const [pageSize, setPageSize] = React.useState(10);\n\n    const handleSelectionChange = (row : any[]) => {\n        if (onRowClick) {\n            if (!enableSelection) {\n                onRowClick(row[0]);\n            }\n        } else {\n            setSelection(row);\n        }\n    }\n\n    const tableCell = ({ value, row, column }: any) => {\n        if (column.name === 'action_delete') {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 30px 8px 10px', textAlign: 'right' }}>\n                    <span\n                        onClick={() => {\n                            onDeleteRow && onDeleteRow(row)\n                        }}>\n                        <FontAwesomeIcon\n                            icon={faMinusCircle}\n                        />\n                    </span>\n\n                </MaterialUI.TableCell>\n            )\n        } else {\n            return (\n                <MaterialUI.TableCell>\n                    {value}\n                </MaterialUI.TableCell>\n            )\n        }\n    }\n\n\n    return (\n        <div style={{ padding: '10px 0' }}>\n            <Paper>\n                <Grid\n                    rows={rows}\n                    columns={columns}\n                >\n                    <PagingState\n                        currentPage={currentPage}\n                        onCurrentPageChange={onPageChange}\n                        pageSize={pageSize}\n                        onPageSizeChange={onSetPageSize}\n                    />\n                    <CustomPaging\n                        totalCount={totalCount}\n                    />\n                    {!disableSort ? (\n                        <SortingState\n                            defaultSorting={defaultSorting}\n                            columnExtensions={sortingStateColumnExtensions}\n                        />\n                    ) : null}\n                    {!viewOnly ? <SelectionState\n                        selection={selection}\n                        onSelectionChange={handleSelectionChange}\n                    /> : null}\n                    {enableGrouping && groupColumnName ? <GroupingState grouping={[{ columnName: groupColumnName }]} /> : null}\n                    {!disableFilter ? <FilteringState defaultFilters={[]} /> : null}\n                    {/* <IntegratedPaging /> */}\n                    {!disableFilter ? <IntegratedFiltering /> : null}\n                    {!disableSort ? <IntegratedSorting /> : null}\n                    {enableGrouping ? <IntegratedGrouping /> : null}\n                    <Table\n                        columnExtensions={columnExtensions}\n                        messages={{ noData: message }}\n                        cellComponent={tableCell}\n                    />\n                    <TableHeaderRow\n                        showSortingControls={!disableSort}\n                        sortLabelComponent={SortLabel}\n                    />\n                    <PagingPanel\n                        pageSizes={pageSizes}\n                    />\n                    {!viewOnly ? \n                    <TableSelection \n                        highlightRow \n                        selectByRowClick\n                        showSelectAll={enableSelectAll ? true : undefined} \n                        cellComponent={selectCell} \n                        showSelectionColumn={enableSelection}\n                        \n                    /> : null}\n                    {enableGrouping ? <TableGroupRow contentComponent={groupContentCell}/> : null}\n                    {!disableFilter ? <TableFilterRow cellComponent={FilterCell} /> : null}\n                </Grid>\n            </Paper>\n        </div>\n    )\n}\n\nReactTable.defaultProps = defaultProps;","import * as React from 'react';\nimport { CircularProgress } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface LoaderProps {\n}\n\nconst useStyles = makeStyles({\n\troot: {\n        position: 'fixed',\n        width: '100%',\n        height: '100%',\n        zIndex: 9999,\n        right: '0px',\n        bottom: '0px',\n        top: '0px',\n        left: '0px',\n        textAlign: \"center\",\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    },\n    container:{\n        height: '100%',\n        outline: 0,\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        flexDirection: 'column'\n    }\n});\n\nexport const Loader: React.FC<LoaderProps> = (): JSX.Element => {\n    // const buttonclasses = ButtonStyle();\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <div className={classes.container}>\n                <CircularProgress size={150}/>\n            </div>\n        </div>\n    )\n}\n\nLoader.defaultProps = {}","import Fetch, { requestOption } from '../index'\n\nconst fetch = new Fetch();\n\nexport const getRolesList = (limit: number, offset?: number, skip?: number) => {\n\n    let option: requestOption = {\n        method: 'GET'\n    }\n\n    return fetch.call(option, `account-roles?filter[offset]=${offset}&filter[limit]=${limit}&filter[skip]=${skip}`)\n}\n\n\nexport const getRoleData = (id: any) => {\n    let option: requestOption = {\n        method: 'GET'\n    }\n\n    return fetch.call(option, `account-roles?filter={\"where\":{\"_id\":\"${id}\"}}`)\n}","export const ActionConsts = {\n\tUsers: {\n\t\tResetReducer: 'Users_ResetReducer',\n\t\tSetReducer: 'Users_SetReducer',\n\t},\n};\n","//#region Global Imports\n// import { Dispatch } from 'redux';\n//#endregion Global Imports\n\n//#region Local Imports\nimport { ActionConsts } from './ActionConsts';\n// import { PlanetaryService } from 'Components/Services';\n//#endregion Local Imports\n\n//#region Interface Imports\n//#endregion Interface Imports\n\nexport const UsersActions = {\n\tMap: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.Users.SetReducer,\n\t}),\n\n\tReset: () => ({\n\t\ttype: ActionConsts.Users.ResetReducer,\n\t}),\n\n\t// GetApod: (payload) => async (dispatch: Dispatch) => {\n\n\t// },\n};\n","import * as React from 'react';\nimport {\n    Grid,\n    // InputLabel, \n    // Typography,\n    Link,\n    Button\n} from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { ReactTable } from 'Components/UI/TableComponent/ReactTable';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { getRolesList } from 'Pages/API/Calls/Roles';\nimport { Redirect } from 'react-router-dom';\nimport { Loader } from 'Pages/Lookup/Components/Loader';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\nimport  BasicSelect  from 'Components/UI/BasicSelect'\n\ninterface IProps {\n    classes: any;\n}\n\ninterface IState {\n    rows: any;\n    columns: any;\n    loading: boolean;\n    redirect_to_role: boolean;\n    redirect_to_addrole: boolean;\n    redirect_data: any;\n    isModuleModalOpen: boolean;\n    moduleItems: any[];\n    moduleValue: number;\n    totalCount: number;\n    currentPage: number;\n    limit: number;\n}\n\nexport class RolesTableList extends React.Component<IProps, IState> {\n    constructor(props) {\n        super(props);\n        const moduleItems = [\n            {\n                name: 'User Management',\n                value: 0\n            },\n            {\n                name: 'Membership',\n                value: 1\n            },\n            {\n                name: 'Underwriting',\n                value: 2\n            },\n            {\n                name: 'Customer Care',\n                value: 3\n            },\n            {\n                name: 'Claims',\n                value: 4,\n            },\n            {\n                name: 'Billing',\n                value: 5,\n            },\n        ] \n        const columns = [\n            {\n                name: 'name',\n                title: 'Role Name',\n            },\n            {\n                name: 'role_id',\n                title: 'Role ID',\n            },\n            {\n                name: 'associate_groups',\n                title: 'Associated Groups',\n            },\n            {\n                name: 'module',\n                title: 'Module',\n            },\n            {\n                name: 'status',\n                title: 'Status',\n            },\n        ];   \n        \n        this.state = {\n            loading: true,\n            columns: columns,\n            rows: [],\n            redirect_to_role: false,\n            redirect_to_addrole: false,\n            redirect_data: [],\n            isModuleModalOpen: false,\n            moduleItems: moduleItems,\n            moduleValue: 0,\n            totalCount: 0,\n            currentPage: 0,\n            limit: 10,\n        }\n    }\n\n    componentDidMount() {\n        let _self = this;\n        this.setState({\n            loading: true,\n        },() => {\n           _self.APIGetRolesList(this.state.currentPage, this.state.limit);\n        });\n    }\n\n    APIGetRolesList = (page: number, limit: number) => {\n        var skip = 0;\n        this.setState({\n            loading: true,\n        })\n\n        if (page) {\n            skip = page * limit;\n        }\n\n        getRolesList(limit, 0, skip).then(res => {\n            this.setState({\n                rows: res.body,\n                loading: false,\n                totalCount: res.count,\n                currentPage: page,\n                limit: limit\n            });\n        }).catch(err => {\n            console.log(err);\n            this.setState({\n                loading: false,\n            })\n        })\n    }\n\n    onSearchTableRoles = (data) => {\n        console.log(data);\n    }\n\n    handleRowClick = (row) => {\n        var data = this.state.rows;\n        this.setState({\n            redirect_to_role: true,\n            redirect_data: data[row]\n        })\n    }\n\n    handleAddRole = () => {\n        console.log('handleAddRole');\n        this.setState({\n            isModuleModalOpen: true,\n        })\n    }\n\n    handleContinueRole = () => {\n        var data = this.state.moduleItems[Number(this.state.moduleValue)].name;\n        console.log(data,'datawew');\n        this.setState({\n            redirect_to_addrole: true,\n            redirect_data: data\n        })\n    }\n\n    render(): JSX.Element {\n\n        if (this.state.redirect_to_role) {\n            return (\n              <Redirect\n                to={{\n                  pathname: '/system-admin/roles/' + this.state.redirect_data._id,\n                //   state: { from: this.state.redirect_data },\n                }}\n              />\n            );\n        }\n        if (this.state.redirect_to_addrole) {\n            return (\n                <Redirect\n                  to={{\n                    pathname: '/system-admin/roles/add-role',\n                    state: { from: this.state.redirect_data },\n                  }}\n                />\n            );\n        }\n        return (\n            \n            <div>\n                {this.state.loading ? <Loader /> : null}\n                <Grid container alignItems={'center'} style={{textAlign: 'center'}} spacing={4}>\n                    <Grid item xs={8} md={9}>\n                        <ReactSearch placeholder={'Search a role'} onSearch={this.onSearchTableRoles} />\n                    </Grid>\n                    <Grid item xs={4} md={3}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <FontAwesomeIcon icon={faDownload} className={this.props.classes.addFieldIcon} />\n                                <Link className={this.props.classes.linkStyleSelected}>Generate Report</Link>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <FontAwesomeIcon icon={faPlus} className={this.props.classes.addFieldIcon} />\n                                <Link className={this.props.classes.linkStyleSelected} onClick={() => this.handleAddRole()}>Add Role</Link>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                { !this.state.loading && \n                    <ReactTable \n                        rows={this.state.rows}\n                        columns={this.state.columns}\n                        message={'There are no user roles to show yet.'}\n                        viewOnly={false}\n                        enableSelection={false}\n                        onRowClick={this.handleRowClick}\n                        totalCount={this.state.totalCount}\n                        currentPage={this.state.currentPage}\n                        pageSize={this.state.limit}\n                        onSetPageSize={(size: any) => {\n                            this.APIGetRolesList(this.state.currentPage, size);\n                        }}\n                        onPageChange={(page : any) => {\n                            console.log(page);\n                            this.APIGetRolesList(page, this.state.limit);\n                        }}\n                    />\n                }\n                <ModalComponent\n                    isModalOpen={this.state.isModuleModalOpen}\n                    onClose={() => { \n                        this.setState({\n                            isModuleModalOpen: false\n                        })  \n                     }}\n                    message={'Select a module for the role you will create:'}\n                    title={'Choose a Module'}\n                    buttons={\n                        <Grid container justify=\"center\" alignItems=\"center\" style={{textAlign: 'center'}}>\n                            <Grid item xs={6}>\n                                <Button \n                                    onClick={() => { \n                                        this.setState({\n                                            isModuleModalOpen: false\n                                        }) \n                                    }}\n                                    variant={'outlined'}\n                                    color={'secondary'} \n                                    className={this.props.classes.button} \n                                >Cancel</Button>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Button className={this.props.classes.button} variant={'contained'} color={'primary'} onClick={() => this.handleContinueRole()}>Continue</Button>\n                            </Grid>\n                        </Grid>\n                    }\n                >\n                <div style={{width:'90%', margin: 'auto'}}>\n                    <BasicSelect\n                        menuItems={this.state.moduleItems}\n                        width={'100%'}\n                        value={this.state.moduleValue}\n                        onChange={(e : any) => {\n                            this.setState({\n                                moduleValue: e.target.value\n                            })\n                        }}\n                    />\n                </div>\n                </ModalComponent>\n            </div>\n        )\n    }\n}","import React from 'react'\n\nimport {\n    Grid,\n    VirtualTable,\n    TableHeaderRow,\n    TableSelection,\n    PagingPanel,\n    TableFilterRow\n} from '@devexpress/dx-react-grid-material-ui'\n\nimport {\n    PagingState,\n    CustomPaging,\n    SortingState,\n    SelectionState,\n    FilteringState,\n    // IntegratedFiltering\n  } from '@devexpress/dx-react-grid'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport MomentUtils from '@date-io/moment'\nimport {\n    faSort,\n    faSortUp,\n    faSortDown\n} from '@fortawesome/free-solid-svg-icons'\nimport * as MaterialUI from '@material-ui/core'\n\ninterface IProps {\n    rows: any[]\n    columns: any[]\n    totalCount: number\n    currentPage: number\n    pageSize: number\n    pageSizes: number[]\n    // Evemts\n    onCurrentPageChange: (value) => void\n    onFilterChange: (value) => void\n    onPageSizeChange: (value) => void\n    onSortingChange: (value) => void\n    onRowClick: (value) => void\n}\n\nconst Select = ({ items, ...restProps  }: any) => {\n  return (\n      <MaterialUI.Select\n          variant='outlined'\n          style={{ width: '100%' }}\n          renderValue={(selected: any) => {\n              if (selected != null) {\n                  const value: any = items.find((item: any) => {\n                      return item.value === selected;\n                  });\n                  if (value) {\n                      return value.label;\n                  } else {\n                      return '——';\n                  }\n              }\n              return '——';\n          }}\n          {...restProps}\n      >\n          {items.map((item: any, i: number) => (\n              <MaterialUI.MenuItem key={i} value={item.value}>\n                  {item.label}\n              </MaterialUI.MenuItem>\n          ))}\n      </MaterialUI.Select>\n  );\n};\n\nconst FilterCell = ({ filter, onFilter, filteringEnabled, classes, column }: any) => {\n  if (filteringEnabled) {\n      if (column.name === 'last_login' || column.name === 'expiry_date') {\n          return (\n            <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n              <MuiPickersUtilsProvider utils={MomentUtils}>\n                <KeyboardDatePicker\n                    variant=\"dialog\"\n                    format=\"MMMM DD, YYYY\"\n                    inputVariant=\"outlined\"\n                    // className={datePickerClasses.keyboardDatePicker}\n                    value={filter ? filter.value : ''}\n                    invalidDateMessage=\"\"\n                    onChange={date => {console.log(date); onFilter(date ? { value: date.toISOString() } : null)}}\n                />\n              </MuiPickersUtilsProvider>\n            </MaterialUI.TableCell>\n          )\n      } else if (column.name === 'status') {\n        return (\n          <MaterialUI.TableCell classes={classes} style={{paddingTop: '5px'}}>\n            <Select\n                onChange={e => onFilter(e.target.value ? { value: e.target.value } : null)}\n                name={'status'}\n                items={[]}\n                id={'status'}\n                value={filter ? filter.value : ''}\n            />\n          </MaterialUI.TableCell>\n        )\n      } else {\n          return (\n              <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n                  <MaterialUI.OutlinedInput\n                      classes={classes}\n                      style={{ width: '100%' }}\n                      value={filter ? filter.value : ''}\n                      labelWidth={0}\n                      onChange={e => onFilter(e.target.value ? { value: e.target.value } : null)}\n                      placeholder=\"\"\n                  />\n              </MaterialUI.TableCell>\n          );\n      }\n  }\n  return null;\n}\n\nconst SortingIcon = ({ direction }: any) =>\n  direction === 'asc' ? (\n    <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortUp} />\n  ) : (\n    <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortDown} />\n  );\n\nconst renderSortable = ({ column, onSort, children, direction }: any) => {\n  if (\n      column.sortingEnabled !== undefined &&\n      column.sortingEnabled !== null &&\n      column.sortingEnabled === false\n    ) {\n      return <span>{column.title}</span>;\n    } else {\n      return (\n        <MaterialUI.TableSortLabel hideSortIcon={true} onClick={onSort}>\n          {children}\n          {direction ? (\n            <SortingIcon direction={direction} />\n          ) : (\n            <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSort} />\n          )}\n        </MaterialUI.TableSortLabel>\n      );\n  }\n}\n\nexport const TableComponent: React.FC<IProps> = (props: IProps): JSX.Element => {\n    const {\n        rows,\n        columns,\n        totalCount,\n        currentPage,\n        pageSize,\n        pageSizes,\n        // events\n        onFilterChange,\n        onCurrentPageChange,\n        onPageSizeChange,\n        onSortingChange,\n        onRowClick\n    } = props;\n\n    const getRowId = row => row._id;\n\n    const [selection, setSelection] = React.useState([]);\n\n    const handleSelection = (e) => {\n      setSelection(e);\n      onRowClick(e);\n    }\n\n    return (\n        <>\n            <Grid\n                getRowId={getRowId}\n                rows={rows}\n                columns={columns}>\n\n                <FilteringState\n                  onFiltersChange={onFilterChange} />\n                {/* <IntegratedFiltering /> */}\n\n                <SelectionState\n                  selection={selection}\n                  onSelectionChange={handleSelection}\n                />\n\n                <SortingState onSortingChange={onSortingChange} />\n\n                <PagingState\n                    currentPage = {currentPage}\n                    pageSize = {pageSize}\n                    // Events\n                    onCurrentPageChange = {onCurrentPageChange}\n                    onPageSizeChange = {onPageSizeChange}\n                />\n\n                <CustomPaging totalCount = {totalCount}/>\n\n                <VirtualTable />\n                <TableHeaderRow showSortingControls sortLabelComponent={renderSortable}/>\n\n                <TableFilterRow cellComponent={FilterCell} />\n\n                <TableSelection\n                  selectByRowClick\n                  highlightRow\n                  showSelectionColumn={false}\n                />\n\n                <PagingPanel pageSizes = {pageSizes} />\n            </Grid>\n        </>\n    )\n}","export const userTableColumn = [\n    { name: 'username', title: 'Username' },\n    { name: 'name', title: 'Name' },\n    { name: 'user_group', title: 'User Group/s' },\n    { name: 'user_role', title: 'User Role/s' },\n    { name: 'last_login', title: 'Last Login Date' },\n    { name: 'expiry_date', title: 'Expiry Date' },\n    { name: 'status', title: 'Status' }\n]\n\nexport const tableConst = [10, 15, 20]","import React from 'react'\nimport { TableComponent } from './TableComponent'\n\nimport { userTableColumn, tableConst } from './Accounts.const'\nimport { getUserList } from 'Pages/API/Calls/User'\nimport { UI } from 'Components'\nimport { Grid } from '@material-ui/core';\n\nimport { GridHorizontalDivider } from 'Components/UI';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouteTo } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Redirect } from 'react-router-dom'\n\ninterface IProps {\n\n}\n\n\nconst useStyles = makeStyles({\n    addFieldIcon: {\n        color: '#3AB77D',\n        cursor: 'pointer',\n        fontSize: '13px',\n        marginRight: '8px',\n    },\n});\n\nexport const AccountTabPage: React.FC<IProps> = (props: IProps): JSX.Element => {\n    const classes = useStyles();\n    React.useEffect(() => {\n        getUsers({pageSize: 10, offset: 0})\n    }, [])\n\n    const {\n\n    } = props;\n\n    // Fetch\n    const getUsers = (newState?: any) => {\n        setLoading(true)\n        getUserList(\n            newState.pageSize,\n            newState.offset,\n            newState.where,\n            newState.order).then((data: any) => {\n\n            if (!data.error) {\n                const state = {\n                    ...newState,\n                    rows: data.body,\n                    totalCount: data.count\n                }\n\n                updateTableState(state)\n            } else {\n                const state = {\n                    ...newState,\n                    rows: [],\n                    totalCount: 0\n                }\n\n                updateTableState(state)\n            }\n           \n            setLoading(false)\n        }).catch(() => {\n            setLoading(false)\n        })\n    }\n\n    // Table event handlers\n    const onCurrentPageChange = (value) => {\n        const state = {\n            currentPage: value,\n            offset: tableStates.pageSize * value,\n            order: tableStates.order,\n            where: tableStates.where\n        }\n\n        getUsers(state)\n    }\n\n    const onPageSizeChange = (value) => {\n        const state = {\n            pageSize: value,\n            offset: tableStates.offset,\n            order: tableStates.order,\n            where: tableStates.where\n        }\n\n        getUsers(state)\n    }\n\n    const onFilterChange = (value) => {\n        if (typingTimeout) {\n            clearTimeout(typingTimeout);\n        }\n\n        setTypingTimeout (setTimeout(function () {\n            const state = {\n                pageSize: tableStates.pageSize,\n                offset: 0,\n                order: tableStates.order,\n                where: {}\n            }\n    \n            value.map(w => \n                state.where[w.columnName] = w.value\n            )\n\n            getUsers(state)\n        }, 3000));\n    }\n\n    const onSortingChange = (value) => {\n        let a = Object.values(value[0]).join(' ')\n        \n        const state = {\n            pageSize: tableStates.pageSize,\n            offset: tableStates.offset,\n            order: a,\n            where: tableStates.where\n        }\n\n        getUsers(state)\n    }\n\n    const onRowClick = (value) => {\n        setUserIdSelected(value)\n        setIsRowClicked(true)\n    }\n\n    // const handleSearchChange = ({target}) => {\n    //     setSearchValue(target.value)\n    // }\n\n    const updateTableState = (prop) => {\n        setTableState({\n            ...tableStates,\n            ...prop\n        })\n    }\n\n    const rowDataFixer = (array: any) => {\n        if (array.length > 0) {\n            array.forEach(data => \n                data.name = `${data.first_name} ${data.middlename} ${data.last_name}`\n            )\n            return array\n        }   \n\n        return []\n    }\n\n    // States\n    const [tableStates, setTableState] = React.useState<any>({\n        rows: [],\n        currentPage: 0,\n        totalCount: 0,\n        pageSize: 10,\n        offset: 0,\n        order: '',\n        where: {}\n    })\n\n    // const [searchValue, setSearchValue] = React.useState<string>('')\n    const [isLoading, setLoading] = React.useState<boolean>(true)\n    const [isRowClicked, setIsRowClicked] = React.useState<boolean>(false)\n    const [userIdSelected, setUserIdSelected] = React.useState<string>('')\n    const [typingTimeout, setTypingTimeout] = React.useState<any>(0)\n\n    if (isRowClicked === true) {\n        return <Redirect to={`accounts/${userIdSelected}`} />\n    }\n  \n    return (\n        <>\n        { isLoading && <UI.LoadingIndicator /> }\n            <Grid container xs={12} spacing={2}>\n                <Grid item xs={8}>\n                    <UI.ReactSearch placeholder='Search user' onSearch={() => { }}></UI.ReactSearch>\n                </Grid>\n                <Grid item xs={2} md={2}>\n                    <UI.GenerateReport></UI.GenerateReport>\n                </Grid>\n                <Grid item xs={2} md={2}>\n                    <GridHorizontalDivider height=\"25px\" />\n                    <FontAwesomeIcon icon={faPlus} className={classes.addFieldIcon} />\n                    <RouteTo to='adduser'>\n                        <Link>Add User</Link>\n                    </RouteTo>\n                </Grid>\n\n            </Grid>\n            <TableComponent\n                rows = {rowDataFixer(tableStates.rows)}\n                columns = {userTableColumn}\n                pageSize = {tableStates.pageSize}\n                pageSizes = {tableConst}\n                currentPage = {tableStates.currentPage}\n                totalCount = {tableStates.totalCount}\n                // Events\n                onRowClick = {onRowClick}\n                onFilterChange = {onFilterChange}\n                onCurrentPageChange = {onCurrentPageChange}\n                onPageSizeChange = {onPageSizeChange}\n                onSortingChange = {onSortingChange} />\n        </>\n    )\n} ","//#region Global Imports\nimport * as React from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\n// import NEOLink from 'next/link';\n//#endregion Global Imports\n\n//#region Interface Imports\n// import { Heading } from 'Components/UI/Heading';\n// import { Grid } from '@material-ui/core';\nimport { Store } from 'Components/Stores/IStore';\nimport { UsersActions } from './UsersActions';\n// import { IUsersPage } from './IUsersPage';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  Tab,\n  Tabs,\n  Typography,\n} from '@material-ui/core';\nimport { useState } from \"react\";\n// import { UsersTable } from './Sections/UsersTable';\nimport { RolesTableList } from './Sections/UsersTable/RolesTableList';\n// import {UsersTable} from './Sections/UsersTable';\nimport { AccountTabPage } from './Tabs/Account/AccountsTab';\n// import {GridHorizontalDivider} from \"../../Components/UI\";\n\n//#endregion Interface Imports\nconst page_tab_titles: any = ['Accounts', 'Roles', 'Groups', 'Policies'];\nconst UsersTabs = withStyles({\n  root: {},\n  indicator: {\n    display: 'none',\n  },\n})(Tabs);\n\nconst UsersTab = withStyles({\n  root: {\n    color: 'rgba(39, 46, 76, 0.5)',\n    minWidth: 80,\n    paddingLeft: 24,\n    paddingRight: 24,\n    fontSize: '0.875rem',\n    fontWeight: 400,\n    '&:hover': {\n      color: 'rgba(39, 46, 76, 1)',\n      fontWeight: 400,\n    },\n    '&$selected': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n  },\n  selected: {},\n})(Tab);\n\nconst useStyles = makeStyles(theme => ({\n  gridContainerNoPadding: {\n    padding: theme.spacing(1),\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: 700,\n    color: '#272e4c',\n  },\n  subSectionTitle: {\n    fontSize: 16,\n    fontWeight: 400,\n    color: '#272e4c',\n  },\n  fieldGroupTitle: {\n    fontSize: 13,\n    fontWeight: 700,\n    color: '#272e4c',\n  },\n  // listItemTextRoot: {\n  // \tflex: 'none',\n  // },\n  // listItemTextPrimarySelected: {\n  // \tfontSize: 14,\n  // \tfontWeight: 700,\n  // \tcolor: 'rgba(39, 46, 76, 1)',\n  // \tcursor: 'pointer',\n  // },\n  // listItemTextPrimaryNotSelected: {\n  // \tfontSize: 14,\n  // \tfontWeight: 700,\n  // \tcolor: 'rgba(39, 46, 76, 0.3)',\n  // \tcursor: 'pointer',\n  // },\n  dropzone: {\n    width: '460px',\n    height: '88px',\n    marginTop: '10px',\n    marginBottom: '20px',\n    border: '2px dashed rgba(30, 32, 113, 0.3)',\n    borderRadius: '5px',\n    backgroundColor: '#e6e8ee',\n    color: '#7b8094',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  inputLabel: {\n    color: '#272e4c',\n  },\n  keyboardDatePicker: {\n    marginTop: '10px',\n    marginBottom: '20px',\n    width: '212px',\n  },\n  checkbox: {\n    '&.Mui-checked': {\n      color: '#1e2071',\n    },\n  },\n  radio: {\n    '&.Mui-checked': {\n      color: '#1e2071',\n    },\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n    border: '1px solid #707070',\n    backgroundColor: 'rgba(54, 54, 54, 0.64)',\n    [theme.breakpoints.up('sm')]: {\n      width: 'calc(100% - 72px)',\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  button: {\n    margin: '0 10px',\n    minHeight: '42px',\n    minWidth: '150px',\n  },\n  buttonTitle: {\n    fontWeight: 700,\n    fontSize: 13,\n  },\n  buttonSubTitle: {\n    fontWeight: 400,\n    fontSize: 7,\n  },\n  gridContainer: {\n    backgroundColor: '',\n    minHeight: '100px',\n  },\n  breadCrumbs: {\n    marginBottom: '20px',\n  },\n  headerTitle: {\n    fontSize: '1.5rem',\n    alignItems: 'flex-start',\n    fontWeight: 600,\n    paddingBottom: '20px',\n  },\n  linkPrevious: {\n    fontSize: 12,\n    fontWeight: 300,\n    color: 'black',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n  },\n  sideBar: {\n    borderRight: '1px solid #C3C3C3',\n  },\n  selectedpage: {\n    paddingLeft: '37px',\n  },\n  linkCurrent: {\n    fontSize: 12,\n    fontWeight: 600,\n    color: 'black',\n    cursor: 'pointer',\n  },\n  main: {\n    backgroundColor: '#F5F7FB',\n    padding: '32px 24px',\n  },\n  gridItemLayout: {\n    padding: theme.spacing(1),\n  },\n  avatar: {\n    width: '130px',\n    height: '130px',\n  },\n\n  sideNavHeader: {\n    fontSize: 13,\n    fontWeight: 700,\n    color: 'rgba(39, 46, 76, 0.3)',\n  },\n  listItemTextRoot: {\n    flex: 'none',\n  },\n  listItemTextPrimarySelected: {\n    fontSize: 14,\n    fontWeight: 700,\n    color: '#2c2e8e',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n  },\n  listItemTextPrimaryNotSelected: {\n    fontSize: 14,\n    color: '#272e4c',\n    cursor: 'pointer',\n  },\n  addFieldIcon: {\n    color: '#3AB77D',\n    cursor: 'pointer',\n    fontSize: '13px',\n    marginRight: '8px',\n  },\n  addACode: {\n    paddingRight: '15px',\n    marginTop: 15,\n    textAlign: 'center',\n  },\n  codeHeader: {\n    color: '#272E4C',\n    textAlign: 'left',\n    // font: 'Medium 16px/22px Usual',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '16px',\n  },\n  codeItems: {\n    color: '#272E4C',\n    textAlign: 'left',\n    // font: 'Regular 12px/14px Usual',\n    opacity: 0.6,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '12px',\n  },\n  codeListItems: {\n    color: '#272E4C',\n    textAlign: 'left',\n    // font: 'Regular 12px/14px Usual',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '12px',\n    // width: '230px',\n    // height: '22px',\n    '&:hover': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n    '&$selected': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n  }\n}));\n\nexport const UsersPage = () => {\n  const [selectedTab, setSelectedTab] = useState(0);\n  // const [sideNav, setSideNav] = useState('information');\n  const classes = useStyles();\n\n  const handleTabChange = (\n    _event: React.ChangeEvent<HTMLDivElement>,\n    tab: number,\n  ) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className={classes.main}>\n      <Grid\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n        className={classes.gridContainer}\n      >\n        <Grid item>\n          <Typography className={classes.headerTitle}>Users\n        <UsersTabs\n              value={selectedTab}\n              onChange={handleTabChange}\n              aria-label=\"page tab\"\n            >\n              {page_tab_titles.map((title: string, index: number) => (\n                <UsersTab\n                  label={title}\n                  id={'users_tab_' + index}\n                  aria-controls={'users-tabpanel-' + index}\n                  key={index}\n                />\n              ))}\n            </UsersTabs>\n          </Typography>\n        </Grid>\n      </Grid>\n\n      {/* Headers */}\n\n\n      {/* Body */}\n      <Grid container>\n        <Grid item xs={12} md={12} className={classes.selectedpage}>\n          {\n            selectedTab === 0 ?\n            (<AccountTabPage />)\n              : selectedTab === 1 ?\n                (<RolesTableList classes={classes} />)\n              : null\n          }\n          {/* <UsersTable classes={classes} /> */}\n        </Grid>\n      </Grid>\n\n\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: Store) => state.users;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  Map: bindActionCreators(UsersActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };\n"],"sourceRoot":""}