{"version":3,"sources":["Pages/Lookup/Components/Loader/index.tsx","Components/UI/SideMenu/index.tsx","Pages/Lookup/ActionConsts.ts","Pages/Lookup/LookupActions.ts","Components/UI/TableComponent/CodeListTable.tsx","Pages/API/Calls/ICD10.ts","Pages/Lookup/Components/ConfirmationModal.tsx","Pages/Lookup/Components/ConstructPayloads.ts","Pages/Lookup/Components/ICD10Section/index.tsx","Pages/Lookup/Components/ICD10SynonymsSection/AddSynonymsBody.tsx","Pages/Lookup/Components/ICD10SynonymsSection/index.tsx","Pages/API/Calls/CPT.ts","Pages/Lookup/Components/CPTSection/index.tsx","Pages/Lookup/LookupPage.tsx"],"names":["useStyles","makeStyles","root","position","width","height","zIndex","right","bottom","top","left","textAlign","backgroundColor","container","outline","alignItems","justifyContent","display","flexDirection","Loader","classes","className","size","defaultProps","sideBarLists","padding","margin","listStyle","sideBarLink","color","sideBarLinkDisabled","pointerEvents","LinkActive","fontWeight","textDecoration","SideMenu","props","items","activeItems","setActiveItem","useState","activeClass","setActiveClass","useEffect","undefined","reset","name","map","item","i","label","variant","style","fontSize","disabled","classNames","onClick","itemName","index","LookupConsts","ResetReducer","SetReducer","LookupActions","payload","type","radioSelected","selectedValue","clickCell","clickValue","global_approve_disapprove","cellSelectStyles","select","textFieldStyles","checkboxStyles","Select","id","value","cellSelectClasses","renderValue","selected","find","key","TableFilterCell","filter","onFilter","filteringEnabled","labelWidth","onChange","e","target","placeholder","TableRadio","onToggle","restProps","checked","stopPropagation","TableCheckBox","icon","faCheckSquare","checkedIcon","TableSearchPanel","onValueChange","fullWidth","startAdornment","faSearch","DefaultTableToolbar","children","disableGutters","SortingIcon","direction","marginLeft","faSortUp","faSortDown","TableSortLabel","column","onSort","sortingEnabled","title","hideSortIcon","faSort","EmptyCellFormatter","faExclamationCircle","EmptyCellDataTypeProvider","formatterComponent","RequiredFormatter","row","RequiredDataTypeProvider","RequiredCheckboxFormatter","control","RequiredCheckboxDataTypeProvider","UploadFileFormatter","console","log","paddingTop","paddingRight","faFileUpload","UploadFileDataTypeProvider","ApproveDisapproveRadioFormatter","handleClick","event","aria-label","_id","some","action_chosen","cnt","labelPlacement","ApproveDisapproveRadioDataTypeProvider","IncompleteRadioFormatter","IncompleteRadioDataTypeProvider","RadioNameFormatter","RadioDataTypeProvider","ValuesNameFormatter","ValuesNameDataTypeProvider","SystemNameFormatter","SystemNameDataTypeProvider","DataFormatter","DataDataTypeProvider","NumberFormatter","textFieldClasses","NumberDataTypeProvider","TextFormatter","TextDataTypeProvider","DateFormatter","text","moment","format","error","DateCellDataTypeProvider","TimeFormatter","TimeCellDataTypeProvider","TableComponent","disableIntegratedFiltering","columns","formattedColumns","singleSelect","disablePaging","disableSearch","disableSelect","disableSort","disableFilter","toolbarType","columnExtensions","columnBands","showSelectionColumn","query","totalCount","currentPage","limit","selection","setSelection","pageSizes","sorting","setSorting","rows","setRows","approveDisapproveItems","dataTypeProviders","Object","keys","length","push","for","number","system_name","data_name","value_name","required_columns","radio","incomplete_radio","approve_disapprove_action","required_checkbox","upload_file","required_cell","date","time","toolbar","Paper","topBar","onCurrentPageChange","page","skip","onPageChange","pageSize","onPageSizeChange","ongPageSizeChange","defaultSorting","onSortingChange","updateSorting","onSelectionChange","newSelection","onClickRow","onSelectedRadio","onClickCell","lastSelected","indexOf","defaultFilters","filters","defaultFilter","columnFilteringEnabled","filterExtensions","onFiltersChange","onFilterChange","messages","noData","message","selectByRowClick","cellComponent","headerCellComponent","showSelectAll","showSortingControls","sortLabelComponent","rootComponent","inputComponent","fetch","Fetch","getAccessToken","getICD","option","method","call","JSON","stringify","fetchAccessToken","then","searchICD","offset","filter_key_str","sorting_str","filter_str","forEach","search","ICD_URL","addICD10Codes","body","editICD","getICDSynonyms","uri_obj","uri_string","Array","isArray","like","options","entries","getActiveSynonyms","where","search_str","theme","dialog","dialogAction","marginBottom","spacing","ConfirmationModal","Dialog","open","isModalOpen","onClose","aria-labelledby","maxWidth","DialogTitle","DialogContent","Grid","justify","xs","DialogActions","clsx","Button","onSubmit","submitType","constructIcd10","data","status","today","Date","eff_date","setHours","exp_date","isValid","gender_limited","gender","category_code","diagnosis_code","toString","full_code","abbreviated_description","full_description","category_title","main_category","effectivity_date","expiry_date","date_updated","constructCpt","code","description","category","reconstructIcd10","Boolean","constructEmptyIcd10","reconstructCpt","constructEmptyCpt","constructPutIcd10","assign","constructPutCpt","constructPostIcd10","data_arr","constructPostCpt","helper","Utils","IndexedDBHelper","ICD10Section","requiredFields","excludeFields","escFunction","keyCode","handleCloseSideModalBlock","initialData","setState","no_data_message","searchCode","state","default_filters","global_filter","default_sorting","default_clicked","addCodeIndexdb","openDb","res","db","result","saveToStore","catch","patchCodeIndexdb","updateEntryByKey","fetchICDCategoriesIndexdb","a","StorageService","icds","category_arr","category_dropdown_choices_arr","includes","setICDCategories","setICDCategoryDropdown","icd_categories","icd_category_dropdown_choices","err","filters_global","clicked","response","table","generateDataForTable","code_response","code_data_all","code_data","loading_state","total","count","statusCode","modalTitle","modalMessage","patchCode","changePageUpdate","disableSaveButton","addCodes","handleChangeSorting","handleFilterByColumn","self","typingTimeout","clearTimeout","typing","setTimeout","handleSearch","handleClickRow","checkFields","code_info","handleChangeSideModalBlockMode","handlePageChange","handlePageSizeChange","isPageSizeModal","handleClickItemFromList","show_side_modal_block","side_modal_block_mode","block_title","reform_data","cloneDeep","handleOpenBlock","passDataToSideModalBlockBody","handleInvalidFieldsPrompt","formFields","disableButton","invalid_fields","getInvalidFields","clickSaveButton","confirm_modal_message","confirm_modal_open","confirm_modal_title","action_after_confirm","invalid_fields_submit","invalid_fields_editing","exclude_fields","fields_excluded","field","startOf","diff","SIDE_MODAL_BLOCK_FIELDS","ICD10","editOrAdd","checkInvalidFields","columnName","wordWrapEnabled","icdCategoryDropdown","icdCategories","highlightedCodeFromList","action_after_info","this","document","addEventListener","temp_row","blockPosition","editIconDescription","showBlock","handleClose","sideModalBlockMode","changeMode","invalidFields","refreshData","handleSave","formName","mode","checkBoxWithDropDownFieldsInitState","dynamicDropdownChoices","datePairField1MaxDate","datePairField2MinDate","Fragment","codeHeader","codeHeaderValue","ListItemText","codeListItemsRoot","primary","codeListItemsSelected","codeListItems","categories","md","scrollList","maxHeight","overflow","List","renderCodeInfo","renderCodeList","selectedpage","TextField","searchField","inputProps","InputProps","InputAdornment","Search","searchBar","faPlus","addFieldIcon","Link","addACode","minHeight","update","renderSideModalBlock","React","Component","selectedItems","borderRadius","xIcon","input","inputLabel","marginTop","AddSynonymsBody","addSynonym","textFieldValue","synonym","synonyms","approve","handleMenuClick","activeLink","menuTabs","prevProps","InputLabel","required","ICD10SynonymsSection","condition","code_repo","searchSynonyms","unapproved_filter","generateDataForUnapprovedTable","code_data_all_unapproved","code_data_unapproved","total_count_unapproved","page_unapproved","handleGetAction","unapproved_codes_actions","changePageUpdateUnapproved","default_filters_unapproved","default_sorting_unapproved","handleChangeSortingUnapproved","limit_unapproved","handleFilterByColumnUnapproved","activeTableSkip","activeTableCurrentpage","getActive","activeTableRows","handlePageChangeUnapproved","handlePageSizeChangeUnapproved","handleRadioClick","action","unapproved_actions","unapproved_row","setICDSynonymAction","handleSaveUnapproved","disapprove","titleCase","sentence","toLowerCase","split","toUpperCase","slice","join","activeTableFilter","activeTableLimit","activeTableSort","icd10Active","d","full_synonyms","activeTableCount","Math","ceil","handleActiveFilter","active_default_filter","handleActiveSorting","values","handleActivePageSizeChange","handleActiveCurrentPageChange","unapprovedTable","icdSynonymAction","activeTableColumns","snackbarOpen","snackbarMessage","prevState","textTransform","formattedSynonyms","addSynonyms","resp","onKeyUp","which","links","menuList","menuLink","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","getCPT","searchCPT","CPT_URL","addCPTCodes","editCPT","deleteCPT","CPTSection","addCPTIndexDB","patchCPTIndexDB","fetchCPTCategories","cpts","category_ranges","setCPTCategories","setCPTCategoryDropdown","setCPTCategoryRanges","cpt_categories","cpt_category_range","category_dropdown_choices","CPT","cptCategoryDropdown","cptCategories","cptCategoryRanges","delete","ranges","range","page_tab_titles","sideBarItems","Codes","Locations","Industries","gridContainerNoPadding","sectionTitle","subSectionTitle","gridContainer","headerTitle","linkPrevious","cursor","sideBar","paddingLeft","borderRight","linkCurrent","main","gridItemLayout","sideNavHeader","listItemTextRoot","whiteSpace","flex","listItemTextPrimarySelected","listItemTextPrimaryNotSelected","marginRight","opacity","letterSpacing","textAlignLast","codeNestedListItemsRoot","codeNestedListItems","codeNestedListItemsSelected","SideModalBlockContainer","paddingBottom","boxShadow","CodeInfoHeaders","CodeInfoHeadersValues","keyboardDatePicker","viewHeader","viewHeaderValue","editButton","deleteButton","closeButton","sideBarContainer","caretStyle","checkbox","LookupPage","activeHeader","setActiveHeader","activeItem","Typography","mapStateToProps","home","mapDispatchToProps","dispatch","Map","bindActionCreators"],"mappings":"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","file":"static/js/10.f3882665.chunk.js","sourcesContent":["import * as React from 'react';\nimport { CircularProgress } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface LoaderProps {\n}\n\nconst useStyles = makeStyles({\n\troot: {\n        position: 'fixed',\n        width: '100%',\n        height: '100%',\n        zIndex: 9999,\n        right: '0px',\n        bottom: '0px',\n        top: '0px',\n        left: '0px',\n        textAlign: \"center\",\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    },\n    container:{\n        height: '100%',\n        outline: 0,\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        flexDirection: 'column'\n    }\n});\n\nexport const Loader: React.FC<LoaderProps> = (): JSX.Element => {\n    // const buttonclasses = ButtonStyle();\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <div className={classes.container}>\n                <CircularProgress size={150}/>\n            </div>\n        </div>\n    )\n}\n\nLoader.defaultProps = {}","import * as React from 'react';\nimport { Link, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles({\n\tsideBarLists: {\n\t\tpadding: 0,\n\t\tmargin: 0,\n        listStyle: 'none',\n        position: 'sticky',\n        top: 20\n\t},\n\tsideBarLink: {\n\t\tcolor: \"#272e4c\",\n\t\tmargin: \"0 0 10px\",\n\t\tdisplay: \"block\"\n    },\n    sideBarLinkDisabled: {\n        color: \"rgba(39, 46, 76, 0.6)\",\n\t\tmargin: \"0 0 10px\",\n        display: \"block\",\n        pointerEvents: 'none'\n    },\n    LinkActive: {\n        color: \"#2C2E8E\",\n        fontWeight: \"bold\",\n        textDecoration: \"underline\"\n    }\n});\n\nexport interface ISideMenuProps {\n    items: any,\n    activeItems: (item) => void,\n    reset?: any,\n    setActiveItem?: number,\n}\n\nexport const SideMenu : React.FC<ISideMenuProps> = (props: ISideMenuProps): JSX.Element => {\n    const {items , activeItems, setActiveItem} = props;\n    const [activeClass, setActiveClass] = useState(0);\n    const classes = useStyles();\n    useEffect(() => {\n        // resets the active item to zero when\n        // the reset props changes\n        setActiveItem && setActiveClass(setActiveItem)\n        if(props.reset !== undefined){\n            setActiveClass(0)\n            activeItems(items[0].name)\n        }\n    }, [props.reset])\n\n    const sideBarlinkClick = (itemName, index) => {\n        activeItems(itemName)\n        setActiveClass(index)\n    }\n\n    return (\n        <>\n            <ul className={classes.sideBarLists}>\n                {\n                    items.map((item, i) => (\n                        <li>\n                            {\n                                item.label !== undefined &&\n                                <Typography variant={'subtitle2'} style={{color:'#929292', fontSize: '12px'}}>{ item.label }</Typography>\n                            }\n                            {\n                                !item.disabled ? \n                                 <Link \n                                    className={classNames(classes.sideBarLink, setActiveItem ? setActiveItem === i ?  classes.LinkActive : null : activeClass === i ? classes.LinkActive : null)} \n                                    onClick={() => sideBarlinkClick(item.name, i)}\n                                >\n                                    { item.name } \n                                </Link> :\n                                <Link\n                                    className={classNames(classes.sideBarLinkDisabled)}\n                                >\n                                    { item.name }\n                                </Link>\n                            }\n                        </li>\n                    ))\n                }\n            </ul>\n        </>\n    )\n}","export const LookupConsts = {\n  Lookup: {\n    ResetReducer: 'Lookup_ResetReducer',\n    SetReducer: 'Lookup_SetReducer',\n  },\n};\n","import { LookupConsts } from './ActionConsts';\n\nexport const LookupActions = {\n  Map: (payload: []) => ({\n    payload,\n    type: LookupConsts.Lookup.SetReducer,\n  }),\n\n  Reset: () => ({\n    type: LookupConsts.Lookup.ResetReducer,\n  }),\n};\n","//#region Global Imports\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Table,\n  TableSelection,\n  TableHeaderRow,\n  TableFilterRow,\n  Toolbar,\n  SearchPanel,\n  PagingPanel,\n  TableBandHeader,\n} from '@devexpress/dx-react-grid-material-ui';\nimport { Paper } from '@material-ui/core/';\nimport {\n  PagingState,\n  CustomPaging,\n  SelectionState,\n  IntegratedSelection,\n  FilteringState,\n  IntegratedFiltering,\n  SortingState,\n  IntegratedSorting,\n  SearchState,\n  DataTypeProvider,\n} from '@devexpress/dx-react-grid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSearch,\n  faCheckSquare,\n  faSort,\n  faSortUp,\n  faSortDown,\n  faExclamationCircle,\n  faFileUpload,\n} from '@fortawesome/free-solid-svg-icons';\nimport { makeStyles } from '@material-ui/styles';\nimport * as MaterialUI from '@material-ui/core';\nimport moment from 'moment';\n//import { Components } from '@hims/core';\n//#endregion Global Imports\n\nlet radioSelected = false;\nlet selectedValue = '';\nlet clickCell = false;\nlet clickValue = {};\nlet global_approve_disapprove: any = [];\n\nconst cellSelectStyles = makeStyles({\n  select: {\n    backgroundColor: 'transparent',\n  },\n});\n\nconst textFieldStyles = makeStyles({\n  root: {\n    '& div.MuiInputBase-root': {\n      backgroundColor: 'transparent',\n    },\n  },\n});\n\nconst checkboxStyles = makeStyles({\n  root: {\n    '&.Mui-checked': {\n      color: '#3AB77D',\n    },\n  },\n});\n\nconst Select = ({ id, value, items }: any) => {\n  const cellSelectClasses = cellSelectStyles();\n  return (\n    <MaterialUI.Select\n      id={id}\n      classes={cellSelectClasses}\n      value={value}\n      style={{ width: '100%', backgroundColor: 'transparent' }}\n      renderValue={(selected: any) => {\n        if (selected !== null) {\n          const value: any = items.find((item: any) => {\n            return item.value === selected;\n          });\n          if (value) {\n            return value.name;\n          } else {\n            return '—';\n          }\n        }\n        return '—';\n      }}\n    >\n      {items.map((item: any) => (\n        <MaterialUI.MenuItem key={item.value} value={item.value}>\n          {item.name}\n        </MaterialUI.MenuItem>\n      ))}\n    </MaterialUI.Select>\n  );\n};\n\nconst TableFilterCell = ({\n  filter,\n  onFilter,\n  filteringEnabled,\n  classes,\n}: any) => {\n  if (filteringEnabled) {\n    return (\n      <MaterialUI.TableCell\n        style={{ padding: '0px 10px 8px 10px' }}\n        classes={classes}\n      >\n        <MaterialUI.OutlinedInput\n          classes={classes}\n          style={{ width: '100%' }}\n          value={filter ? filter.value : ''}\n          labelWidth={0}\n          onChange={e =>\n            onFilter(e.target.value ? { value: e.target.value } : null)\n          }\n          placeholder=\"\"\n        />\n      </MaterialUI.TableCell>\n    );\n  } else {\n    // return null;\n    return (\n      <MaterialUI.TableCell\n        style={{ padding: '0px 10px 8px 10px' }}\n        classes={classes}\n      ></MaterialUI.TableCell>\n    );\n  }\n};\n\nconst TableRadio = ({\n  style,\n  selected,\n  onToggle,\n  classes,\n  ...restProps\n}: any) => {\n  return (\n    <MaterialUI.TableCell\n      padding=\"checkbox\"\n      style={style}\n      classes={classes}\n      {...restProps}\n    >\n      <MaterialUI.Radio\n        classes={classes}\n        checked={selected}\n        onClick={e => {\n          e.stopPropagation();\n          onToggle();\n        }}\n      />\n    </MaterialUI.TableCell>\n  );\n};\n\nconst TableCheckBox = ({\n  style,\n  selected,\n  onToggle,\n  classes,\n  ...restProps\n}: any) => {\n  return (\n    <MaterialUI.TableCell\n      padding=\"checkbox\"\n      style={style}\n      classes={classes}\n      {...restProps}\n    >\n      <MaterialUI.Checkbox\n        icon={<FontAwesomeIcon icon={faCheckSquare} />}\n        checkedIcon={<FontAwesomeIcon icon={faCheckSquare} />}\n        classes={classes}\n        checked={selected}\n        onClick={e => {\n          e.stopPropagation();\n          onToggle();\n        }}\n      />\n    </MaterialUI.TableCell>\n  );\n};\n\nconst TableSearchPanel = ({ value, onValueChange }: any) => {\n  return (\n    <MaterialUI.OutlinedInput\n      value={value ? value : ''}\n      labelWidth={0}\n      onChange={e => onValueChange(e.target.value ? e.target.value : null)}\n      placeholder=\"Search a benefit or benefit category\"\n      fullWidth\n      startAdornment={\n        <MaterialUI.InputAdornment position=\"start\">\n          <FontAwesomeIcon icon={faSearch} />\n        </MaterialUI.InputAdornment>\n      }\n    />\n  );\n};\n\nconst DefaultTableToolbar = ({ children }: any) => {\n  return <MaterialUI.Toolbar disableGutters={true} children={children} />;\n};\n\nconst SortingIcon = ({ direction }: any) =>\n  direction === 'asc' ? (\n    <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortUp} />\n  ) : (\n      <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortDown} />\n    );\n\nconst TableSortLabel = ({ column, onSort, children, direction }: any) => {\n  if (\n    column.sortingEnabled !== undefined &&\n    column.sortingEnabled !== null &&\n    column.sortingEnabled === false\n  ) {\n    return <span>{column.title}</span>;\n  } else {\n    return (\n      <MaterialUI.TableSortLabel hideSortIcon={true} onClick={onSort}>\n        {children}\n        {direction ? (\n          <SortingIcon direction={direction} />\n        ) : (\n            <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSort} />\n          )}\n      </MaterialUI.TableSortLabel>\n    );\n  }\n};\n\nconst EmptyCellFormatter = ({ value }: any) => {\n  if (value === '' || value === undefined || value === null) {\n    return (\n      <FontAwesomeIcon\n        style={{ color: '#FD5451', fontSize: '16px' }}\n        icon={faExclamationCircle}\n      />\n    );\n  } else {\n    return value;\n  }\n};\n\nconst EmptyCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={EmptyCellFormatter} {...props} />\n);\n\nconst RequiredFormatter = ({ row, value }: any) => {\n  if (\n    row['required'] === true &&\n    (value === '' || value === undefined || value === null)\n  ) {\n    return (\n      <FontAwesomeIcon\n        style={{ color: '#FD5451', fontSize: '16px' }}\n        icon={faExclamationCircle}\n      />\n    );\n  } else if (\n    row['required'] === false &&\n    (value === '' || value === undefined || value === null)\n  ) {\n    return 'N/A';\n  } else {\n    return value;\n  }\n};\n\nconst RequiredDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={RequiredFormatter} {...props} />\n);\n\nconst RequiredCheckboxFormatter = ({ column, row, value }: any) => {\n  const classes = checkboxStyles();\n  return (\n    <div>\n      <MaterialUI.FormControlLabel\n        control={\n          <MaterialUI.Checkbox\n            checked={value === true || value === 'true' ? true : false}\n            value={value}\n            style={{ padding: '5px' }}\n            className={classes.root}\n            color=\"primary\"\n            onChange={e => {\n              clickCell = true;\n              clickValue = {\n                value: e.target.checked,\n                name: column['name'],\n                id: row['id'],\n              };\n            }}\n          />\n        }\n        label=\"\"\n      />\n    </div>\n  );\n};\n\nconst RequiredCheckboxDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={RequiredCheckboxFormatter} {...props} />\n);\n\nconst UploadFileFormatter = ({ column, row }: any) => {\n  const id: string = column['name'] + '_' + row['id'];\n  return (\n    <div\n      id={id}\n      onClick={e => {\n        // e.stopPropagation();\n        console.log('e>', e);\n      }}\n    >\n      <MaterialUI.Typography color=\"textPrimary\" style={{ paddingTop: '5px' }}>\n        <span>\n          <span style={{ paddingRight: '10px', fontSize: '15px' }}>\n            <FontAwesomeIcon icon={faFileUpload} style={{ color: '#0D5E40' }} />\n          </span>\n          <span style={{ textDecoration: 'underline', color: '#0D5E40' }}>\n            Upload File\n          </span>\n        </span>\n      </MaterialUI.Typography>\n    </div>\n  );\n};\n\nconst UploadFileDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={UploadFileFormatter} {...props} />\n);\n\nconst ApproveDisapproveRadioFormatter = (props: any) => {\n  const {row} = props;\n\n  const items = [\n    { value: 'approve', label: 'Approve' },\n    { value: 'disapprove', label: 'Disapprove' },\n  ];\n\n  const handleClick = (event) => {\n    row['action_chosen'] = event.target.value;\n  }\n\n\n  return (\n    <div>\n      <MaterialUI.RadioGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={row && row._id && global_approve_disapprove && global_approve_disapprove.some(item => item._id === row._id) && row.action_chosen ? row.action_chosen : ''}\n        onChange={e => {\n          e.stopPropagation();\n          radioSelected = true;\n          selectedValue = e.target.value;\n          \n        }}\n        row\n      >\n        {items.map((item: any, cnt: number) => (\n          <MaterialUI.FormControlLabel\n            // className={classes.root}\n            key={cnt}\n            value={item.value}\n            control={<MaterialUI.Radio onClick={handleClick} color=\"primary\" size=\"small\"/>}\n            label={<span style={{fontSize: '14px', fontWeight: 600}}>{item.label}</span>}\n            labelPlacement=\"end\"\n          />\n        ))}\n      </MaterialUI.RadioGroup>\n    </div>\n  );\n};\n\nconst ApproveDisapproveRadioDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={ApproveDisapproveRadioFormatter} {...props} />\n);\n\nconst IncompleteRadioFormatter = ({ value }: any) => {\n  const items = [\n    { value: 'approve', label: 'Approve' },\n    { value: 'disapprove', label: 'Disapprove' },\n    { value: 'for confirmation', label: 'For Confirmation' },\n  ];\n  return (\n    <div>\n      <MaterialUI.RadioGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={value}\n        onChange={e => {\n          e.stopPropagation();\n          radioSelected = true;\n          selectedValue = e.target.value;\n        }}\n        row\n      >\n        {items.map((item: any, cnt: number) => (\n          <MaterialUI.FormControlLabel\n            key={cnt}\n            value={item.value}\n            control={<MaterialUI.Radio color=\"primary\" />}\n            label={item.label}\n            labelPlacement=\"end\"\n            onClick={e => {\n              radioSelected = true;\n              console.log('radio button label onclick', e);\n            }}\n            onChange={e => {\n              radioSelected = true;\n              // selectedValue = e.target.value;\n              console.log('radio button label onchange', e);\n            }}\n          />\n        ))}\n      </MaterialUI.RadioGroup>\n    </div>\n  );\n};\n\nconst IncompleteRadioDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={IncompleteRadioFormatter} {...props} />\n);\n\nconst RadioNameFormatter = ({ value }: any) => {\n  const items = [\n    { value: 'match', label: 'Match' },\n    { value: 'not', label: 'Not Match' },\n    { value: 'confirmation', label: 'For Confirmation' },\n  ];\n  console.log('Radio group value: ', value);\n  return (\n    <div>\n      <MaterialUI.RadioGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={value}\n        onChange={e => {\n          e.stopPropagation();\n          radioSelected = true;\n          selectedValue = e.target.value;\n        }}\n        row\n      >\n        {items.map((item: any, cnt: number) => (\n          <MaterialUI.FormControlLabel\n            key={cnt}\n            value={item.value}\n            control={<MaterialUI.Radio color=\"primary\" />}\n            label={item.label}\n            labelPlacement=\"end\"\n            onClick={e => {\n              radioSelected = true;\n              console.log('radio button label onclick', e);\n            }}\n            onChange={e => {\n              radioSelected = true;\n              // selectedValue = e.target.value;\n              console.log('radio button label onchange', e);\n            }}\n          />\n        ))}\n      </MaterialUI.RadioGroup>\n    </div>\n  );\n};\n\nconst RadioDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={RadioNameFormatter} {...props} />\n);\n\nconst ValuesNameFormatter = ({ value }: any) => {\n  const items = [\n    { name: '', value: '' },\n    { name: 'Married', value: 'married' },\n    { name: 'Single', value: 'single' },\n    { name: 'Widowed', value: 'widowed' },\n    { name: 'Annulled', value: 'annulled' },\n  ];\n  return <Select items={items} value={value} />;\n};\n\nconst ValuesNameDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={ValuesNameFormatter} {...props} />\n);\n\nconst SystemNameFormatter = ({ value }: any) => {\n  const items = [\n    { name: 'First Name', value: 'first_name' },\n    { name: 'Middle Name', value: 'middle_name' },\n    { name: 'Last Name', value: 'last_name' },\n    { name: 'Birthday', value: 'birthday' },\n    { name: 'Civil Status', value: 'civil_status' },\n    { name: 'Gender', value: 'gender' },\n    { name: 'Plan Type', value: 'plan_type' },\n    { name: 'Type', value: 'type' },\n  ];\n\n  return <Select items={items} value={value} />;\n};\n\nconst SystemNameDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={SystemNameFormatter} {...props} />\n);\n\nconst DataFormatter = ({ value }: any) => {\n  const items = [\n    { name: 'Civil Status', value: 'civil_status' },\n    { name: 'Gender', value: 'gender' },\n  ];\n  return <Select items={items} value={value} />;\n};\n\nconst DataDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={DataFormatter} {...props} />\n);\n\nconst NumberFormatter = ({ value }: any) => {\n  const textFieldClasses = textFieldStyles();\n  return (\n    <MaterialUI.TextField\n      value={value}\n      type={'number'}\n      classes={textFieldClasses}\n    />\n  );\n};\n\nconst NumberDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={NumberFormatter} {...props} />\n);\n\nconst TextFormatter = ({ value }: any) => {\n  const textFieldClasses = textFieldStyles();\n  return <MaterialUI.TextField value={value} classes={textFieldClasses} />;\n};\n\nconst TextDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={TextFormatter} {...props} />\n);\n\nconst DateFormatter = ({ value }: any) => {\n  let text = value;\n  if (text) {\n    try {\n      text = moment(value).format('MMM DD, YYYY');\n    } catch (error) {\n      text = value;\n    }\n  } else {\n    text = '';\n  }\n\n  return text;\n};\n\nconst DateCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={DateFormatter} {...props} />\n);\n\nconst TimeFormatter = ({ value }: any) => {\n  let text = value;\n  if (text) {\n    try {\n      text = moment(value).format('hh:mm:ss A');\n    } catch (error) {\n      text = value;\n    }\n  } else {\n    text = '';\n  }\n\n  return text;\n};\n\nconst TimeCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={TimeFormatter} {...props} />\n);\n\ninterface TableComponentProps {\n  rows: any[];\n  columns: any[];\n  columnFilteringEnabled?: boolean;\n  columnExtensions?: any[];\n  filterExtensions?: any[];\n  formattedColumns?: any;\n  columnBands?: any[] | null;\n  singleSelect?: boolean;\n  disableSearch?: boolean;\n  disablePaging?: boolean;\n  disableSelect?: boolean;\n  disableFilter?: boolean;\n  disableSort?: boolean;\n  showSelectionColumn?: boolean;\n  toolbarType?: string | null;\n  topBar?: () => JSX.Element;\n  id: string;\n  totalCount: number;\n  message: string;\n  defaultFilter?: any[];\n  update: (skip: number, limit: number) => void;\n  updateSorting: (sort: object) => void;\n  onClickRow?: (row: number[]) => void;\n  onSelectedRadio?: (row: number, value: string) => void;\n  onFilterChange?: (response: any) => void;\n  onSortingChange?: (response: any) => void;\n  onClickCell?: (row: any) => void;\n  onPageChange: (currentPage: any, skip: any) => void;\n  ongPageSizeChange: (value: number) => void;\n  defaultSort?: any[];\n  query?: string;\n  currentPage: number;\n  limit: number;\n  pageSizes?: number[];\n  approveDisapproveItems?: any[];\n  disableIntegratedFiltering?: boolean;\n}\n\nexport const TableComponent: React.FC<TableComponentProps> = (\n  props: TableComponentProps,\n): JSX.Element => {\n  const {\n    disableIntegratedFiltering,\n    columns,\n    formattedColumns,\n    singleSelect,\n    disablePaging,\n    disableSearch,\n    disableSelect,\n    disableSort,\n    disableFilter,\n    toolbarType,\n    columnExtensions,\n    columnBands,\n    id,\n    showSelectionColumn,\n    query,\n    totalCount,\n    currentPage,\n    limit\n  } = props;\n  const [selection, setSelection] = useState<number[]>([]);\n  const [pageSizes] = useState(props.pageSizes ? props.pageSizes : [10, 25, 50, 100, 0]);\n  const [sorting, setSorting] = useState([]);\n  const [rows, setRows] = useState(props.rows);\n  useEffect(() => {\n    setRows(props.rows);\n  }, [props.rows]);\n\n  useEffect(() => {\n    global_approve_disapprove = props.approveDisapproveItems;\n    console.log('USE EFF GLOBAL APP')\n  }, [props.approveDisapproveItems]);\n\n  const dataTypeProviders: any[] = [];\n\n  const changePageSize = (value) => {\n    // props.update(currentPage, value);\n    props.ongPageSizeChange(value);\n  }\n\n  const setCurrentPageMethod = (page) => {\n    let skip = (limit * page);\n\n    props.onPageChange(page, skip);\n  }\n\n  const setSortingMethod = (e) => {\n    props.updateSorting(e);\n    setSorting(e);\n    setRows([]);\n  }\n\n  function handleSelectionChange(newSelection: any[]) {\n    console.log('here click row');\n    if (props.onClickRow) {\n      // selectedRow = newSelection[0];\n      if (!radioSelected && !clickCell) {\n        console.log('onclickrow');\n        props.onClickRow(newSelection);\n      } else if (radioSelected) {\n        console.log('radioselected', newSelection);\n        if (props.onSelectedRadio)\n          props.onSelectedRadio(newSelection[0], selectedValue);\n        radioSelected = false;\n      } else if (clickCell) {\n        console.log(' here !!! >>>', props.onClickCell);\n        if (props.onClickCell) props.onClickCell(clickValue);\n        clickCell = false;\n        clickValue = {};\n      }\n    } else {\n      if (singleSelect) {\n        const lastSelected = newSelection.find(\n          (selected: number) => selection.indexOf(selected) === -1,\n        );\n\n        console.log(newSelection, selection, lastSelected);\n        if (lastSelected !== undefined) {\n          setSelection([lastSelected]);\n        }\n      } else {\n        setSelection(newSelection);\n      }\n    }\n  }\n  if (\n    formattedColumns !== undefined &&\n    Object.keys(formattedColumns).length > 0\n  ) {\n    if (formattedColumns['number'] !== undefined) {\n      dataTypeProviders.push(\n        <NumberDataTypeProvider for={formattedColumns.number} />,\n      );\n    }\n    if (formattedColumns['text'] !== undefined) {\n      dataTypeProviders.push(\n        <TextDataTypeProvider for={formattedColumns.text} />,\n      );\n    }\n    if (formattedColumns['system_name'] !== undefined) {\n      dataTypeProviders.push(\n        <SystemNameDataTypeProvider for={formattedColumns.system_name} />,\n      );\n    }\n    if (formattedColumns['data_name'] !== undefined) {\n      dataTypeProviders.push(\n        <DataDataTypeProvider for={formattedColumns.data_name} />,\n      );\n    }\n    if (formattedColumns['value_name'] !== undefined) {\n      dataTypeProviders.push(\n        <ValuesNameDataTypeProvider for={formattedColumns.value_name} />,\n      );\n    }\n    if (formattedColumns['required_columns'] !== undefined) {\n      dataTypeProviders.push(\n        <EmptyCellDataTypeProvider for={formattedColumns.required_columns} />,\n      );\n    }\n    if (formattedColumns['radio'] !== undefined) {\n      dataTypeProviders.push(\n        <RadioDataTypeProvider for={formattedColumns.radio} />,\n      );\n    }\n    if (formattedColumns['incomplete_radio'] !== undefined) {\n      dataTypeProviders.push(\n        <IncompleteRadioDataTypeProvider\n          for={formattedColumns.incomplete_radio}\n        />,\n      );\n    }\n    if (formattedColumns['approve_disapprove_action'] !== undefined) {\n      dataTypeProviders.push(\n        <ApproveDisapproveRadioDataTypeProvider\n          for={formattedColumns.approve_disapprove_action}\n        />,\n      );\n    }\n    if (formattedColumns['required_checkbox'] !== undefined) {\n      dataTypeProviders.push(\n        <RequiredCheckboxDataTypeProvider\n          for={formattedColumns.required_checkbox}\n        />,\n      );\n    }\n    if (formattedColumns['upload_file'] !== undefined) {\n      dataTypeProviders.push(\n        <UploadFileDataTypeProvider\n          for={formattedColumns.upload_file}\n          {...props}\n        />,\n      );\n    }\n    if (formattedColumns['required_cell'] !== undefined) {\n      dataTypeProviders.push(\n        <RequiredDataTypeProvider\n          for={formattedColumns.required_cell}\n          {...props}\n        />,\n      );\n    }\n    if (formattedColumns['date'] !== undefined) {\n      dataTypeProviders.push(\n        <DateCellDataTypeProvider for={formattedColumns.date} />,\n      );\n    }\n    if (formattedColumns['time'] !== undefined) {\n      dataTypeProviders.push(\n        <TimeCellDataTypeProvider for={formattedColumns.time} />,\n      );\n    }\n  }\n\n  let toolbar = DefaultTableToolbar;\n\n  return (\n    <Paper id={id}>\n      {props.topBar ? props.topBar() : null}\n      <Grid rows={rows} columns={columns}>\n        {dataTypeProviders}\n        {/* Need to initialize paging state before paging panel */}\n        {!disablePaging ? (\n          <PagingState\n            currentPage={currentPage}\n            onCurrentPageChange={setCurrentPageMethod}\n            pageSize={limit}\n            onPageSizeChange={changePageSize}\n          />\n        ) : null}\n\n        {!disablePaging ? <CustomPaging totalCount={totalCount} /> : null}\n\n        {!disableSearch || query ? <SearchState value={query} /> : null}\n\n        {!disableSort ? (//&& props.defaultSort !== undefined ? (\n          <SortingState\n            defaultSorting={[]}\n            sorting={sorting}\n            onSortingChange={setSortingMethod}\n          />\n        ) : !disableSort ? (\n          <SortingState\n            defaultSorting={[]}\n          />\n        ) : null}\n\n        {!disableSort ? <IntegratedSorting /> : null}\n\n        {!disableSelect || !showSelectionColumn ? (\n          <SelectionState\n            selection={selection}\n            onSelectionChange={handleSelectionChange}\n          />\n        ) : null}\n        {!disableSelect ? <IntegratedSelection /> : null}\n\n        {!disableFilter ? (\n          <FilteringState\n            defaultFilters={[]}\n            filters={\n              props.defaultFilter !== undefined ? props.defaultFilter : []\n            }\n            columnFilteringEnabled={props.columnFilteringEnabled}\n            columnExtensions={props.filterExtensions}\n            onFiltersChange={props.onFilterChange}\n          />\n        ) : null}\n\n        {!disableFilter && !disableIntegratedFiltering ? <IntegratedFiltering /> : null}\n\n        <Table\n          columnExtensions={columnExtensions}\n          messages={{ noData: props.message }}\n        />\n\n        {!disableSelect && !showSelectionColumn ? (\n          <TableSelection\n            showSelectAll={!singleSelect ? true : false}\n            cellComponent={!singleSelect ? TableCheckBox : TableRadio}\n            headerCellComponent={TableCheckBox}\n          />\n        ) : !showSelectionColumn ? (\n          <TableSelection\n            selectByRowClick\n            showSelectionColumn={false}\n            cellComponent={!singleSelect ? TableCheckBox : TableRadio}\n            headerCellComponent={TableCheckBox}\n          />\n        ) : null}\n\n        <TableHeaderRow\n          showSortingControls={!disableSort}\n          sortLabelComponent={TableSortLabel}\n        />\n        {!disableFilter ? (\n          <TableFilterRow cellComponent={TableFilterCell} />\n        ) : null}\n        {columnBands ? <TableBandHeader columnBands={columnBands} /> : null}\n\n        {!disableSearch || toolbarType ? (\n          <Toolbar rootComponent={toolbar} />\n        ) : null}\n        {!disableSearch ? (\n          <SearchPanel inputComponent={TableSearchPanel} />\n        ) : null}\n\n        {!disablePaging ? <PagingPanel pageSizes={pageSizes} /> : null}\n      </Grid>\n    </Paper>\n  );\n};\n\nTableComponent.defaultProps = {\n  rows: [],\n  columns: [],\n  columnExtensions: [],\n  filterExtensions: [],\n  columnBands: null,\n  formattedColumns: {},\n  singleSelect: false,\n  disableSearch: false,\n  disablePaging: false,\n  disableSelect: false,\n  disableFilter: false,\n  disableSort: false,\n  toolbarType: null,\n  defaultFilter: [],\n  showSelectionColumn: false,\n  columnFilteringEnabled: true,\n  id: 'table-1',\n  totalCount: 0,\n  message: 'No available data',\n  query: '',\n  currentPage: 0,\n  limit: 0\n};\n","import Fetch, { requestOption } from '../index'\n\nconst fetch = new Fetch();\nfetch.getAccessToken();\n\nexport const getICD = (limit: number, skip: number) => {\n\n    let filters = {\n        limit: limit,\n        skip: skip,\n      };\n    let option: requestOption = {\n        method: 'GET'\n    }\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `icd10-codes/search?filter=${JSON.stringify(filters)}`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `icd10-codes/search?filter=${JSON.stringify(filters)}`, true))\n}\n\nexport const searchICD = (limit: number, offset: number, filters: any, query: string, sorting?: any, key?: string,) => {\n\n\n    let filter_key_str = '';\n    if (key !== undefined && key !== '') {\n      filter_key_str = `&filter[where][main_category][like]=${key}`;\n    }\n    let sorting_str = '';\n    if (sorting && sorting.length !== 0) {\n      sorting_str =\n        '&filter[order]=' +\n        sorting[0]['columnName'] +\n        ' ' +\n        sorting[0]['direction'];\n    }\n    let filter_str = '';\n    if (filters) {\n      filters.forEach(filter => {\n        filter_str =\n          filter_str + '&' + filter['columnName'] + '=' + filter['value'];\n      });\n    }\n    let search = query ? '&search=' + query : '';\n    let ICD_URL =\n      `icd10-codes/search?filter[limit]=${limit}&filter[skip]=${offset}` +\n      search +\n      filter_str +\n      sorting_str +\n      filter_key_str;\n    if (limit === 0)\n        ICD_URL =\n        `icd10-codes/search?filter[skip]=${offset}` +\n        search +\n        filter_str +\n        sorting_str +\n        filter_key_str;\n    let option: requestOption = {\n        method: 'GET'\n    }\n \n    if(fetch.getAccessToken()){\n        return fetch.call(option, ICD_URL, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, ICD_URL, true))\n}\n\nexport const addICD10Codes = (payload: any) => {\n\n    let option: requestOption = {\n        method: 'POST',\n        body: payload\n    }\n\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `icd10-codes/multiple`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `icd10-codes/multiple`, true))\n}\n\nexport const editICD = (payload: any, id: string | undefined) => {\n\n    let option: requestOption = {\n        method: 'PUT',\n        body: payload\n    }\n\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `icd10-codes/edit/${id}`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `icd10-codes/edit/${id}`, true))\n}\n\nexport const deleteICD = (id: string) => {\n\n    let option: requestOption = {\n        method: 'DELETE'\n    }\n\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `icd10-codes/${id}`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `icd10-codes/${id}`, true))\n}\n\nexport const getICDSynonyms = (filters?: any, query?: string, limit?: number, offset?: number, sorting?: any) => {\n\n    let uri_obj: any = {};\n    let uri_string: string = `icd10-synonyms/list`;\n    let filter = {};\n    if(filters && Array.isArray(filters) && filters.length > 0){\n        filter['where'] = {};\n        filters.forEach(item => {\n            if(item['columnName'] !== 'status')\n                filter['where'][item['columnName']] = {like: item['value'], options: 'i'}\n            else\n                filter['where'][item['columnName']] = item['value']\n        });\n    }\n\n    if(sorting && Array.isArray(sorting) && sorting.length > 0)\n        filter['order'] = `${sorting[0]['columnName']} ${sorting[0]['direction']}`;\n\n    if(offset) filter['skip'] = offset;\n\n    if(limit) filter['limit'] = limit;\n\n    if(query) uri_obj['search'] = query;\n\n    if(Object.entries(filter).length > 0) uri_obj['filter'] = JSON.stringify(filter);\n\n    let i = 0;\n    for(let key of Object.keys(uri_obj)){\n        if(!i) uri_string += '?';\n        else uri_string += '&';\n        uri_string += `${key}=${uri_obj[key]}`;\n        i+=1;\n    }\n\n    let option: requestOption = {\n        method: 'GET'\n    }\n \n    if(fetch.getAccessToken()){\n        return fetch.call(option, uri_string, true);\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, uri_string, true))\n}\n\n\nexport const getActiveSynonyms = (\n    filters?: any,\n    query?: string,\n    limit?: number,\n    offset?: number,\n    sorting?: any\n) => {\n    let filter: any = {\n        limit: limit,\n        skip: offset,\n        where: filters\n    }\n\n    let search_str = '';\n    if (query) search_str = '&search='+query;\n    \n\n    if (sorting) {\n        filter['order'] = sorting;\n    }\n\n    let option: requestOption = {\n        method: 'GET'\n    }\n\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `icd10-synonyms/search?filter=${JSON.stringify(filter)}${search_str}`, true))\n}\n\n\nexport const addSynonyms = (payload: any) => {\n\n    console.log('payload',payload);\n\n    let option: requestOption = {\n        method: 'POST',\n        body: payload\n    }\n\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `icd10-synonyms/create`, true))\n}","import React, { FC } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { IConfirmationModal } from './IConfirmationModal';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tdialog: {},\n\tdialogAction: {\n\t\tmarginBottom: theme.spacing(2),\n\t},\n}));\n\nexport const ConfirmationModal: FC<IConfirmationModal.IProps> = props => {\n\tconst classes = useStyles();\n\tconst reset = () => {};\n\n\tconst handleCancel = () => {\n\t\treset();\n\t\tprops.onClose(true);\n\t}\n\n\tconst handleClose = () => {\n\t\treset();\n\t\tprops.onClose();\n\t};\n\n\tconst handleSubmit = () => {\n\t\treset();\n\t\tprops.onSubmit();\n\t\tprops.onClose();\n\t};\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={props.isModalOpen}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\tmaxWidth=\"sm\"\n\t\t\tclassName={classes.dialog}\n\t\t>\n\t\t\t<DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"flex-start\">\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t{props.message}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions className={clsx(classes.dialogAction)}>\n\t\t\t\t<Grid container spacing={2} justify=\"center\" alignItems=\"flex-start\">\n\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t<Button onClick={handleCancel} variant=\"outlined\" color=\"default\" fullWidth>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{props.submitType === 'submit' ? 'Submit' : 'Confirm'}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n\nConfirmationModal.defaultProps = {\n\tisModalOpen: false,\n};\n\nexport default ConfirmationModal;","import { Icd10, Cpt } from '../LookupModels';\nimport moment from 'moment';\n\nexport const constructIcd10 = (data: Icd10) => {\n\n\tlet status = 'Awaiting Activation';\n\tconst today = new Date()\n\tconst eff_date = data['effectivity_date'] ?\n\t\tnew Date(new Date(data['effectivity_date']).setHours(0, 0, 0, 0)) :\n\t\tundefined\n\tconst exp_date = data['expiry_date'] ?\n\t\tnew Date(new Date(data['expiry_date']).setHours(0, 0, 0, 0)) :\n\t\tundefined\n\n\tconsole.log('DATES : ', today, eff_date, exp_date);\n\tif (exp_date && eff_date)\n\t\tconsole.log('BOOLS', eff_date <= today, exp_date <= today);\n\n\tif (eff_date && moment(eff_date).isValid() && eff_date <= today)\n\t\tstatus = 'Active';\n\n\tif (exp_date && moment(exp_date).isValid() && exp_date <= today)\n\t\tstatus = 'Deactivated';\n\n\tconst gender_limited = data['gender'] ? true : undefined;\n\tconst gender = data['gender'] ? data['gender'] : undefined;\n\n\tconst payload: Icd10 = {\n\t\t_id: data['_id'],\n\t\tcategory_code: data['category_code'],\n\t\tdiagnosis_code: data['diagnosis_code'] ? data['diagnosis_code'].toString() : undefined,\n\t\tfull_code: data['full_code'],\n\t\tabbreviated_description: data['abbreviated_description'],\n\t\tfull_description: data['full_description'],\n\t\tcategory_title: data['category_title'],\n\t\tmain_category: data['main_category'],\n\t\tgender_limited: gender_limited,\n        gender: gender,\n\t\teffectivity_date: data['effectivity_date'],\n\t\texpiry_date: data['expiry_date'],\n\t\tstatus: status,\n\t\tdate_updated: data['date_updated'],\n\t}\n\n\treturn payload\n}\n\nexport const constructCpt = (data: Cpt) => {\n\n\tlet status = 'Awaiting Activation';\n\tconst today = new Date()\n\tconst eff_date = data['effectivity_date'] ?\n\t\tnew Date(new Date(data['effectivity_date']).setHours(0, 0, 0, 0)) :\n\t\tundefined\n\tconst exp_date = data['expiry_date'] ?\n\t\tnew Date(new Date(data['expiry_date']).setHours(0, 0, 0, 0)) :\n\t\tundefined\n\n\tconsole.log('DATES : ', today, eff_date, exp_date);\n\tif (exp_date && eff_date)\n\t\tconsole.log('BOOLS', eff_date <= today, exp_date <= today);\n\n\tif (eff_date && moment(eff_date).isValid() && eff_date <= today)\n\t\tstatus = 'Active';\n\n\tif (exp_date && moment(exp_date).isValid() && exp_date <= today)\n\t\tstatus = 'Deactivated';\n\n\n\tconst gender_limited = data['gender'] ? true : undefined;\n\tconst gender = data['gender'] ? data['gender'] : undefined;\n\t\n\tconst payload : Cpt = {\n        _id: data['_id'],\n        code: data['code'],\n        description: data['description'],\n        category: data['category'],\n        gender_limited: gender_limited,\n        gender: gender,\n        effectivity_date: data['effectivity_date'],\n        expiry_date: data['expiry_date'],\n        status: status,\n        date_updated: data['date_updated'],\n      }\n\n\treturn payload\n}\n\nexport const reconstructIcd10 = (data : Icd10 | undefined) => {\n\tif(!data) \n\t\treturn constructEmptyIcd10();\n\tconst reform_data : Icd10 = {\n\t\t_id: data._id,\n\t\tcategory_code: data['category_code'],\n\t\tdiagnosis_code: data['diagnosis_code'] ? data['diagnosis_code'].toString() : undefined,\n\t\tfull_code: data.full_code,\n\t\tabbreviated_description: data.abbreviated_description,\n\t\tfull_description: data.full_description,\n\t\tcategory_title: data.category_title,\n\t\tmain_category: data.main_category,\n        effectivity_date: data.effectivity_date,\n        expiry_date: data.expiry_date,\n        status: data.status,\n        gender_limited: Boolean(data.gender_limited),\n\t\tgender: data.gender_limited ? data.gender : '',\n\t\tdate_updated: data['date_updated'],\n\t  }\n\treturn reform_data\n}\n\nexport const reconstructCpt = (data : Cpt | undefined) => {\n\tif(!data) \n\t\treturn constructEmptyCpt();\n\tconst reform_data : Cpt = {\n        _id: data._id,\n        code: data.code,\n        description: data.description,\n        category: data.category,\n        effectivity_date: data.effectivity_date,\n        expiry_date: data.expiry_date,\n        status: data.status,\n        gender_limited: Boolean(data.gender_limited),\n        gender: data.gender_limited ? data.gender : '',\n\t  }\n\treturn reform_data\n}\n\nexport const constructEmptyIcd10 = () => {\n\tconst payload: Icd10 = {\n\t\tfull_code: '',\n\t\tfull_description: '',\n\t\tcategory_title: '',\n\t\tmain_category: '',\n\t\teffectivity_date: '',\n\t\texpiry_date: '',\n\t\tstatus: '',\n\t\tgender_limited: false,\n\t\tgender: '',\n\t}\n\treturn payload\n}\n\nexport const constructEmptyCpt = () => {\n\tconst payload: Cpt = {\n\t\tcode: '',\n\t\tdescription: '',\n\t\tcategory: '',\n\t\teffectivity_date: '',\n\t\texpiry_date: '',\n\t\tstatus: '',\n\t\tgender_limited: false,\n\t\tgender: '',\n\t}\n\treturn payload\n}\n\nexport const constructPutIcd10 = (data: Icd10) => {\n\tconst payload: Icd10 = Object.assign({}, data)\n\n\tpayload['gender'] = payload['gender_limited'] ? payload['gender'] : '';\n\n\tif (payload['status'] !== undefined) {\n\t\tdelete payload['status']\n\t}\n\tif (payload['expiry_date'] === '') {\n\t\tdelete payload['expiry_date']\n\t}\n\treturn payload\n}\n\nexport const constructPutCpt = (data: Cpt) => {\n\tconst payload: Cpt = Object.assign({}, data)\n\n\tpayload['gender'] = payload['gender_limited'] ? payload['gender'] : '';\n\n\tif (payload['status'] !== undefined) {\n\t\tdelete payload['status']\n\t}\n\tif (payload['expiry_date'] === '') {\n\t\tdelete payload['expiry_date']\n\t}\n\treturn payload\n}\n\nexport const constructPostIcd10 = (data: any) => {\n\tlet data_arr: Icd10[] = [];\n\tif (Array.isArray(data)) {\n\t\tdata_arr = data\n\t} else {\n\t\tdata_arr.push(data)\n\t}\n\tconst payload: Icd10[] = data_arr.map(item => {\n\t\tif (item['expiry_date'] === '') {\n\t\t\tdelete item['expiry_date'];\n\t\t}\n\t\tif (item['status'] !== undefined) {\n\t\t\tdelete item['status']\n\t\t}\n\t\titem['gender'] = item['gender_limited'] ? item['gender'] : '';\n\t\treturn item;\n\t})\n\treturn payload\n}\n\nexport const constructPostCpt = (data: any) => {\n\tlet data_arr: Cpt[] = [];\n\tif (Array.isArray(data)) {\n\t\tdata_arr = data\n\t} else {\n\t\tdata_arr.push(data)\n\t}\n\tconst payload: Cpt[] = data_arr.map(item => {\n\t\tif (item['expiry_date'] === '') {\n\t\t\tdelete item['expiry_date'];\n\t\t}\n\t\tif (item['status'] !== undefined) {\n\t\t\tdelete item['status']\n\t\t}\n\t\titem['gender'] = item['gender_limited'] ? item['gender'] : '';\n\t\treturn item;\n\t})\n\treturn payload\n}","import React from 'react';\nimport { TableComponent } from 'Components/UI/TableComponent/CodeListTable';\nimport {\n  TextField,\n  InputAdornment,\n  Grid,\n  List,\n  ListItemText,\n} from '@material-ui/core';\nimport { Search } from '@material-ui/icons/';\nimport { Loader } from '../Loader';\nimport Link from '@material-ui/core/Link';\nimport { GridHorizontalDivider } from 'Components/UI';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { SideModalBlock } from 'Components/UI';\nimport { SideModalBody } from 'Components/UI';\nimport { SIDE_MODAL_BLOCK_FIELDS } from 'Components/UI/SideModalBlock/FieldConstants';\nimport { MsgModal } from 'Components/UI';\nimport moment from 'moment';\nimport {\n  getICD,\n  searchICD,\n  addICD10Codes,\n  editICD,\n  // deleteICD,\n} from 'Pages/API/Calls/ICD10'\nimport { ConfirmationModal } from '../ConfirmationModal'\nimport { Utils } from '@hims/core'\nimport { Icd10 } from '../../LookupModels'\nimport {\n  constructIcd10,\n  constructEmptyIcd10,\n  constructPutIcd10,\n  constructPostIcd10,\n  reconstructIcd10\n} from '../ConstructPayloads'\nimport { cloneDeep } from 'lodash'\n\n\nconst helper = new Utils.IndexedDBHelper();\n\ninterface IState {\n  confirm_modal_title: string;\n  confirm_modal_message: string;\n  confirm_modal_open: boolean;\n  action_after_confirm: () => void;\n  invalid_fields: string[];\n  loading_state: boolean;\n  block_title?: string;\n  show_side_modal_block?: string;\n  side_modal_block_mode: 'view' | 'edit' | 'add' | '';\n  code_info?: Icd10;\n  code_response: any;\n  code_data_all: any;\n  code_data: any;\n  global_filter: string;\n  default_filters: any;\n  default_sorting: any;\n  default_clicked: string;\n  isModalOpen: boolean;\n  modalTitle: string;\n  modalMessage: string;\n  action_after_info: () => void;\n  totalCount: number;\n  typing: boolean;\n  typingTimeout: any;\n  page: number;\n  limit: number;\n  isPageSizeModal: boolean;\n  highlightedCodeFromList: number;\n  // init_expiry_date: Date | null;\n  icd_categories: string[];\n  no_data_message: string;\n  icd_category_dropdown_choices: any[];\n  disableSaveButton: boolean;\n  clickSaveButton: boolean;\n}\n\ninterface IProps {\n  classes: any;\n\n  // icd10Response: any;\n  // icd10CodeData: any;\n  icdCategories: string[];\n  icdCategoryDropdown: any;\n  // icd10ListClicked: number;\n\n  // setICD10Response: (data: any) => void;\n  // setICD10CodeData: (data: any) => void;\n  setICDCategories: (categories: string[]) => void;\n  setICDCategoryDropdown: (dropdown: any) => void;\n  // setICD10ListClicked: (index: number) => void;\n}\n\nexport class ICD10Section extends React.Component<IProps, IState> {\n  private requiredFields: any;\n  private excludeFields: any;\n\n  constructor(props) {\n    super(props);\n\n    this.requiredFields = SIDE_MODAL_BLOCK_FIELDS.ICD10.editOrAdd.checkInvalidFields;\n    this.excludeFields = SIDE_MODAL_BLOCK_FIELDS.ICD10.editOrAdd.excludeFields\n\n     // if (props.icd10CodeData) {\n    //   table = props.icd10CodeData\n    // }\n    const table: any = {\n      formattedColumns: {},\n      columnExtensions: [\n        {\n          columnName: 'full_code',\n          width: 150,\n          wordWrapEnabled: true,\n        },\n        {\n          columnName: 'full_description',\n          width: 500,\n          wordWrapEnabled: true,\n        },\n      ],\n      columns: [\n        {\n          name: 'full_code',\n          title: 'ICD10 Code',\n        },\n        {\n          name: 'full_description',\n          title: 'Description',\n        },\n      ],\n      rows: [],\n    };\n\n   \n    this.state = {\n      icd_category_dropdown_choices: props.icdCategoryDropdown,\n      icd_categories: props.icdCategories,\n      no_data_message: '',\n      // init_expiry_date: null,\n      confirm_modal_title: '',\n      confirm_modal_message: '',\n      confirm_modal_open: false,\n      action_after_confirm: () => { },\n      invalid_fields: [],\n      highlightedCodeFromList: -1,//props.icd10ListClicked,\n      loading_state: true,\n      code_response: [],//props.icd10Response,\n      code_info: constructEmptyIcd10(),\n      show_side_modal_block: 'none',\n      side_modal_block_mode: '',\n      code_data: table,\n      code_data_all: table,\n      block_title: '',\n      global_filter: '',\n      default_filters: [],\n      default_sorting: [{\n          columnName: 'full_code',\n          direction: 'asc'\n        }\n      ],\n      default_clicked: '',\n      isModalOpen: false,\n      isPageSizeModal: false,\n      modalTitle: '',\n      modalMessage: '',\n      action_after_info: () => { },\n      totalCount: 0,\n      typing: false,\n      typingTimeout: 0,\n      page: 0,\n      limit: 10,\n      disableSaveButton: false,\n      clickSaveButton: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.icd_category_dropdown_choices || !this.state.icd_categories.length) {\n      this.fetchICDCategoriesIndexdb()\n        .then(() => this.initialData())\n        .catch(() => this.initialData())\n    } else {\n      this.initialData()\n    }\n\n    document.addEventListener('keydown', this.escFunction, false);\n  }\n\n  escFunction = (event) => {\n    if (event.keyCode === 27) {\n      this.handleCloseSideModalBlock()\n    }\n  }\n\n  initialData = () => {\n    this.setState({ no_data_message: `Searching for ICD10 codes` })\n    this.searchCode(\n      10,\n      0,\n      this.state.default_filters,\n      this.state.global_filter,\n      this.state.default_sorting,\n      this.state.default_clicked)\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /***********************  \n       CRUD FUNCTIONS \n  ***********************/\n\n  addCodeIndexdb = (data: any[]) => {\n    helper.openDb('himsDb').then(res => {\n      let db = res.result\n      try {\n        helper.saveToStore(db, 'icd10_list', data)\n          .then(res => console.log('RES', res))\n          .catch(e => console.log(e))\n      } catch (e) {\n        console.log(e)\n      } finally { }\n    })\n  }\n\n  patchCodeIndexdb = (data: any) => {\n    helper.openDb('himsDb').then(res => {\n      let db = res.result\n      try {\n        helper.updateEntryByKey(db, 'icd10_list', data['_id'], data)\n          .then(res => console.log('Successfully patched code in IndexDB', res))\n          .catch(e => console.log(e))\n      } catch (e) {\n        console.log(e)\n      } finally { }\n    })\n  }\n\n\n  fetchICDCategoriesIndexdb = async () => {\n    await Utils.StorageService('icd10_list')\n      .then(icds => {\n        if (Array.isArray(icds) && icds.length > 0) {\n          let category_arr: string[] = []\n          let category_dropdown_choices_arr: any[] = [{ name: '', value: '' }]\n          icds.filter(item => {\n            if (item && item.main_category && !category_arr.includes(item.main_category)) {\n              category_arr.push(item.main_category)\n              category_dropdown_choices_arr.push({ name: item.main_category, value: item.main_category })\n              return true;\n            }\n            return false;\n          })\n          this.props.setICDCategories(category_arr)\n          this.props.setICDCategoryDropdown(category_dropdown_choices_arr)\n          this.setState({\n            icd_categories: category_arr,\n            icd_category_dropdown_choices: category_dropdown_choices_arr\n          })\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  searchCode = (\n    limit: number,\n    skip: number,\n    filters: any,\n    filters_global: any,\n    sorting: any,\n    clicked: any) => {\n\n    searchICD(limit, skip, filters, filters_global, sorting, clicked).then(response => {\n      this.setState({ no_data_message: 'No available data' })\n      if (response && response.error === undefined) {\n        const table = this.generateDataForTable(\n          response.result ? response.result : [],\n        );\n        // this.props.setICD10CodeData(table)\n        // this.props.setICD10Response(response)\n        this.setState({\n          code_response: response,\n          code_data_all: table,\n          code_data: table,\n          loading_state: false,\n          totalCount: response.total && response.total.count ? response.total.count : 0,\n        });\n      } else if (response && response.error && response.error.statusCode === 401) {\n        const table = this.generateDataForTable([]);\n        // this.props.setICD10CodeData(table)\n        // this.props.setICD10Response(undefined)\n        this.setState({\n          code_response: [],\n          code_data_all: table,\n          loading_state: false,\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to view ICD10 codes.',\n        });\n      } else {\n        const table = this.generateDataForTable([]);\n        // this.props.setICD10CodeData(table)\n        // this.props.setICD10Response(undefined)\n        this.setState({\n          code_response: [],\n          code_data_all: table,\n          loading_state: false,\n          isModalOpen: true,\n          modalTitle: 'Loading failed',\n          modalMessage: 'An error occured while loading the list of codes.',\n        });\n      }\n    }).catch(() => {\n      const table = this.generateDataForTable([]);\n      // this.props.setICD10CodeData(table)\n      // this.props.setICD10Response(undefined)\n      this.setState({\n        code_response: [],\n        code_data_all: table,\n        loading_state: false,\n        isModalOpen: true,\n        modalTitle: 'Loading failed',\n        modalMessage: 'An error occured while loading the list of codes.',\n        page: 0,\n      });\n    });\n  }\n\n\n  patchCode = (data: any) => {\n    const payload: Icd10 = constructPutIcd10(data)\n\n    this.setState({\n      loading_state: true,\n      no_data_message: `Searching for ICD10 codes`\n    })\n    editICD(JSON.stringify(payload), payload._id).then(response => {\n      this.setState({\n        loading_state: false,\n        no_data_message: 'No available data'\n      })\n      if (response && response.error === undefined && response.message !== undefined) {\n        this.changePageUpdate(this.state.limit, this.state.limit * this.state.page)\n        this.patchCodeIndexdb(payload)\n        this.setState({\n          disableSaveButton: true,\n          isModalOpen: true,\n          modalTitle: 'Success',\n          modalMessage: `You have ${response.message} code!`\n        });\n      } else if (response && response.error && response.error.statusCode === 401) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to edit ICD10 codes.'\n        });\n      } else if (response && response.error && response.error.statusCode === 400 && response.error.message) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Duplicate Codes',\n          modalMessage: response.error.message\n        });\n      } else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while saving!'\n        });\n      }\n    }).catch(error => {\n      if (error == 'Error: This code already exists.') {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Duplicate Codes',\n          modalMessage: 'This code already exists.',\n          loading_state: false\n        });\n      } else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while saving!',\n          loading_state: false\n        });\n      }\n    });\n  }\n\n\n\n  addCodes = (data: any) => {\n    this.setState({\n      loading_state: true\n    })\n\n    const payload: Icd10[] = constructPostIcd10(data)\n    addICD10Codes(JSON.stringify(payload)).then(response => {\n      this.setState({\n        loading_state: false\n      })\n      if (response && response.error === undefined && response.message && response.result) {\n        this.changePageUpdate(this.state.limit, this.state.limit * this.state.page)\n        this.addCodeIndexdb(response.result)\n        this.setState({\n          disableSaveButton: true,\n          isModalOpen: true,\n          modalTitle: 'Success',\n          modalMessage: `You have successfully added ${response.result.length} ICD10 code/s!`\n        });\n      } else if (response && response.error && response.error.statusCode === 401) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to add ICD10 codes.'\n        });\n      } else if (response && response.error && response.error.statusCode === 400 && response.error.message) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Duplicate Codes',\n          modalMessage: response.error.message\n        });\n      }\n      else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while adding!'\n        });\n      }\n    }).catch(error => {\n      if (error == 'Error: This code already exists.') {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Duplicate Codes',\n          modalMessage: 'This code already exists.',\n          loading_state: false\n        });\n      } else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while saving!',\n          loading_state: false\n        });\n      }\n    });\n\n  }\n\n  // deleteICD = (id: string) => {\n  //   if (!id) {\n  //     return\n  //   }\n  //   this.setState({ loading_state: true })\n  //   deleteICD(id).then(response => {\n  //     this.setState({\n  //       loading_state: false\n  //     })\n  //     this.changePageUpdate(this.state.limit, this.state.limit * this.state.page)\n  //     if (response && response.error && response.error.statusCode && response.error.statusCode !== 401) {\n  //       this.setState({\n  //         isModalOpen: true,\n  //         modalTitle: 'Failed',\n  //         modalMessage: 'Something went wrong while deleting ICD10 Code!'\n  //       });\n  //     } else if (response && response.error && response.error.statusCode === 401) {\n  //       this.setState({\n  //         isModalOpen: true,\n  //         modalTitle: 'Unauthorized',\n  //         modalMessage: 'You are not authorized to delete ICD10 codes.'\n  //       });\n  //     }\n  //     else {\n  //       this.setState({\n  //         isModalOpen: true,\n  //         modalTitle: 'Success',\n  //         modalMessage: 'You have successfully deleted an ICD10 code!'\n  //       });\n  //     }\n  //   }).catch(error => {\n  //     this.setState({\n  //       isModalOpen: true,\n  //       modalTitle: 'Failed',\n  //       modalMessage: 'Something went wrong while deleting ICD10 Code!'\n  //     });\n  //     this.setState({\n  //       loading_state: false\n  //     })\n  //     console.log('client error: ', error);\n  //   });\n  // }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /***********************  \n  TABLE AND PAGE FUNCTIONS \n  ***********************/\n\n  generateDataForTable(response: any) {\n    const table: any = {\n      formattedColumns: {},\n      columnExtensions: [\n        {\n          columnName: 'full_code',\n          width: 150,\n          wordWrapEnabled: true,\n        },\n        {\n          columnName: 'full_description',\n          width: 500,\n          wordWrapEnabled: true,\n        },\n      ],\n      columns: [\n        {\n          name: 'full_code',\n          title: 'ICD10 Code',\n        },\n        {\n          name: 'full_description',\n          title: 'Description',\n        },\n      ],\n      rows: [],\n    };\n    for (const cnt in response) {\n      const item = response[cnt];\n      const temp_row: any = {};\n      temp_row['full_code'] = item['full_code'];\n      temp_row['full_description'] = item['full_description'];\n      table['rows'].push(temp_row);\n    }\n    return table;\n  }\n\n\n\n\n\n\n\n  changePageUpdate = (limit: number, skip: number) => {\n    this.handleCloseSideModalBlock();\n    this.setState({\n      loading_state: true,\n      no_data_message: `Searching for ICD10 codes`\n    });\n    if (\n      this.state.default_filters.length !== 0 ||\n      this.state.global_filter !== '' ||\n      this.state.default_sorting.length !== 0 ||\n      this.state.default_clicked !== ''\n    ) {\n      this.searchCode(\n        limit,\n        skip,\n        this.state.default_filters,\n        this.state.global_filter,\n        this.state.default_sorting,\n        this.state.default_clicked)\n    } else {\n      getICD(limit, skip).then(response => {\n        this.setState({ no_data_message: 'No available data' })\n        if (response && response.error === undefined) {\n          const table = this.generateDataForTable(\n            response.result ? response.result : [],\n          );\n          // this.props.setICD10CodeData(table)\n          // this.props.setICD10Response(response)\n          this.setState({\n            code_response: response,\n            code_data_all: table,\n            code_data: table,\n            loading_state: false,\n            totalCount: response.total && response.total.count ? response.total.count : 0,\n          });\n        } else if (response && response.error && response.error.statusCode === 401) {\n          const table = this.generateDataForTable([]);\n          // this.props.setICD10CodeData(table)\n          // this.props.setICD10Response(undefined)\n          this.setState({\n            code_response: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Unauthorized',\n            modalMessage: 'You are not authorized to view ICD10 codes.',\n          });\n        } else {\n          const table = this.generateDataForTable([]);\n          // this.props.setICD10CodeData(table)\n          // this.props.setICD10Response(undefined)\n          this.setState({\n            code_response: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Loading failed',\n            modalMessage: 'An error occured while loading the list of codes.',\n          });\n        }\n      });\n    }\n  };\n\n\n\n\n\n\n  handleChangeSorting = (sorting: any) => {\n    this.setState({\n      default_sorting: sorting,\n      loading_state: true,\n      no_data_message: `Searching for ICD10 codes`\n    });\n    if (sorting && sorting.length > 0) {\n      this.searchCode(\n        this.state.limit,\n        this.state.page * this.state.limit,\n        this.state.default_filters,\n        this.state.global_filter,\n        sorting,\n        this.state.default_clicked,\n      )\n    }\n  };\n\n\n\n\n\n  handleFilterByColumn = (filter: any) => {\n    const self = this;\n\n    if (self.state.typingTimeout) {\n      clearTimeout(self.state.typingTimeout);\n    }\n\n    self.setState({\n      default_filters: filter,\n      typing: false,\n      page: 0,\n      typingTimeout: setTimeout(function () {\n        self.setState({\n          loading_state: true,\n          no_data_message: `Searching for ICD10 codes`\n        });\n        if (self.state.default_filters !== 0) {\n          self.searchCode(\n            self.state.limit,\n            0,\n            filter,\n            self.state.global_filter,\n            self.state.default_sorting,\n            self.state.default_clicked,\n          )\n        } else {\n          self.initialData();\n        }\n      }, 2000),\n    });\n  };\n\n  handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    const self = this;\n\n    if (self.state.typingTimeout) {\n      clearTimeout(self.state.typingTimeout);\n    }\n    self.setState({\n      global_filter: value,\n      typing: false,\n      page: 0,\n      typingTimeout: setTimeout(function () {\n        self.setState({\n          loading_state: true,\n          limit: 10,\n          no_data_message: `Searching for ICD10 codes`\n        });\n        if (self.state.global_filter !== '') {\n          self.searchCode(\n            self.state.limit,\n            0,\n            self.state.default_filters,\n            self.state.global_filter,\n            self.state.default_sorting,\n            self.state.default_clicked,\n          )\n        } else {\n          self.initialData();\n        }\n      }, 2000),\n    });\n  };\n\n\n\n\n\n  handleClickRow = (row: any) => {\n\n    const { code_response } = this.state;\n    if (!this.state.code_response || !this.state.code_response.result)\n      return;\n\n    const data: Icd10 = constructIcd10(code_response.result[row])\n    this.checkFields(data, true)\n    this.setState({\n      code_info: data,\n    }, () => this.handleChangeSideModalBlockMode('view'));\n  };\n\n\n\n\n\n  handlePageChange = (currentPage: number, skip: number) => {\n    this.setState({\n      page: currentPage,\n    });\n    this.changePageUpdate(this.state.limit, skip);\n  };\n\n\n\n\n  handlePageSizeChange = value => {\n    let pageLimit = 100000;\n\n    if (this.state.totalCount >= pageLimit) {\n      this.setState({\n        isPageSizeModal: true,\n      });\n    } else {\n      this.setState({\n        limit: value,\n      });\n\n      this.changePageUpdate(value, value * this.state.page);\n    }\n  };\n\n\n\n\n\n  handleClickItemFromList = (key: string) => {\n    this.setState({default_clicked: key});\n    this.handleCloseSideModalBlock()\n    this.setState({\n      page: 0,\n      loading_state: true,\n      no_data_message: `Searching for ICD10 codes`\n    });\n    if (key !== undefined) {\n      this.searchCode(\n        this.state.limit,\n        0,\n        this.state.default_filters,\n        this.state.global_filter,\n        this.state.default_sorting,\n        key,\n      )\n    }\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /*****************************  \n  ACTIONS / SIDE MODAL FUNCTIONS \n  ******************************/\n\n  handleCloseSideModalBlock = () => {\n    this.setState({\n      show_side_modal_block: 'none',\n      side_modal_block_mode: '',\n      code_info: constructEmptyIcd10(),\n    });\n  };\n\n\n\n\n\n  handleChangeSideModalBlockMode = (value: 'view' | 'edit' | 'add' | '') => {\n    let title = ``;\n    if (value && value === 'edit') {\n      title = `Edit ${this.state.block_title}`;\n      const reform_data: Icd10 = reconstructIcd10(cloneDeep(this.state.code_info))\n      this.setState({ code_info: reform_data })\n    } else if (value && value === 'view' && this.state.code_info) {\n      title = this.state.code_info['full_code'] ? this.state.code_info['full_code'] : '';\n    } else if (value && value === 'add') {\n      title = `Add ICD10 Code`;\n    }\n    this.setState({\n      side_modal_block_mode: value,\n      block_title: title,\n    }, () => this.handleOpenBlock());\n  };\n\n\n\n\n\n  handleOpenBlock = () => {\n    this.setState({\n      show_side_modal_block: 'block',\n    }, () => this.passDataToSideModalBlockBody());\n  };\n\n\n\n\n  handleInvalidFieldsPrompt = () => {\n    this.setState({\n      isModalOpen: true,\n      modalTitle: 'Incomplete/Invalid Fields',\n      modalMessage: 'Please complete the form before proceeding.',\n    })\n  }\n\n\n\n  passDataToSideModalBlockBody = () => {\n\n    if (this.state.code_info && !this.state.code_info.gender_limited) {\n      this.state.code_info.gender = ''\n      this.setState({\n        code_info: this.state.code_info\n      });\n    }\n  };\n\n\n\n\n  checkFields = (formFields?: any, disableButton?: boolean) => {\n    this.setState({ loading_state: true })\n\n    if (formFields) {\n      let invalid_fields = this.getInvalidFields(formFields, disableButton);\n      if (!invalid_fields || invalid_fields.length === 0) {\n        if (this.state.disableSaveButton || !this.state.clickSaveButton) {\n          return\n        }\n        if (this.state.side_modal_block_mode === 'edit') {\n          this.setState({\n            clickSaveButton: false,\n            confirm_modal_message: `Are you sure you want to edit this ICD10 code?`,\n            confirm_modal_open: true,\n            confirm_modal_title: `Confirm edit ICD10 code`,\n            action_after_confirm: () => this.patchCode(formFields)\n          })\n        } else if (this.state.side_modal_block_mode === 'add') {\n          this.setState({\n            clickSaveButton: false,\n            confirm_modal_message: `Are you sure you want to add this ICD10 code?`,\n            confirm_modal_open: true,\n            confirm_modal_title: `Confirm add ICD10 code`,\n            action_after_confirm: () => this.addCodes(formFields)\n          })\n        }\n      } else {\n        this.handleInvalidFieldsPrompt()\n      }\n    }\n  }\n\n\n\n\n\n  getInvalidFields = (formFields: any, disableButton?: boolean) => {\n    let invalid_fields_submit: any[] = [];\n    let invalid_fields_editing: any[] = [];\n    let exclude_fields = {}\n    if (this.excludeFields !== undefined) {\n      exclude_fields = this.excludeFields\n    }\n    const fields_excluded: string[] = Object.keys(exclude_fields)\n    const form_keys: string[] = Object.keys(formFields)\n\n    form_keys.forEach(field => {\n      if (this.requiredFields &&\n        this.requiredFields.includes(field) &&\n        !fields_excluded.includes(field) &&\n        !formFields[field]) {\n        if (!disableButton) {\n          invalid_fields_submit.push(field)\n        } else {\n          invalid_fields_editing.push(field)\n        }\n      }\n    })\n\n    const eff_date = moment(formFields['effectivity_date'])\n    const exp_date = moment(formFields['expiry_date'])\n    if (formFields &&\n      formFields['effectivity_date'] &&\n      formFields['expiry_date'] &&\n      eff_date.isValid() &&\n      exp_date.isValid() &&\n      eff_date.startOf('day').diff(exp_date.startOf('day')) > 0) {\n      if (disableButton) {\n        invalid_fields_editing.push('effectivity_date')\n      } else {\n        invalid_fields_submit.push('effectivity_date')\n      }\n    }\n\n    if (formFields && formFields['gender_limited'] && !formFields['gender']) {\n      if (!disableButton) {\n        invalid_fields_submit.push('gender')\n      } else {\n        invalid_fields_editing.push('gender')\n      }\n    }\n    if (!invalid_fields_editing || invalid_fields_editing.length === 0) {\n      this.setState({ disableSaveButton: false })\n    } else if (!this.state.disableSaveButton) {\n      this.setState({ disableSaveButton: true })\n    }\n    this.setState({ loading_state: false, invalid_fields: invalid_fields_submit })\n    return invalid_fields_submit\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /***********************  \n       RENDER SECTIONS \n  ***********************/\n\n  renderSideModalBlock(): JSX.Element {\n    const { classes } = this.props;\n\n    return (\n      <SideModalBlock\n        blockPosition={'fixed'}\n        title={this.state.block_title}\n        editIconDescription={'Edit Code'}\n        showBlock={this.state.show_side_modal_block}\n        classes={classes}\n        handleClose={this.handleCloseSideModalBlock}\n        sideModalBlockMode={this.state.side_modal_block_mode}\n        changeMode={this.handleChangeSideModalBlockMode}\n\n      >\n        {this.state.side_modal_block_mode ? (\n          <SideModalBody\n            formFields={this.state.code_info}\n            invalidFields={this.state.invalid_fields}\n            classes={this.props.classes}\n            handleClose={this.handleCloseSideModalBlock}\n            refreshData={(data: any) => {\n              this.setState({ code_info: data },\n                () => this.checkFields(data, true))\n            }}\n            // delete={(data: any) => {\n            //   if (this.state.side_modal_block_mode === 'edit') {\n            //     this.setState({\n            //       confirm_modal_message: 'Are you sure you want to delete this ICD10 code?',\n            //       confirm_modal_open: true,\n            //       confirm_modal_title: 'Confirm delete ICD10 code',\n            //       action_after_confirm: () => this.deleteICD(data['_id'])\n            //     })\n            //   }\n            // }}\n            handleSave={(formFields?: any) => {\n              if (this.state.side_modal_block_mode) {\n                this.setState({ clickSaveButton: true }, () => this.checkFields(formFields))\n              }\n            }}\n            // deactivateIcon={'Deactivate'}\n            formName={'ICD10'}\n            mode={this.state.side_modal_block_mode ? this.state.side_modal_block_mode : ''}\n            checkBoxWithDropDownFieldsInitState={this.state.code_info && this.state.code_info['gender_limited'] ? true : false}\n            dynamicDropdownChoices={this.state.icd_category_dropdown_choices}\n            disableSaveButton={this.state.disableSaveButton}\n            datePairField1MaxDate={\n              this.state.code_info &&\n                this.state.code_info['expiry_date'] &&\n                moment(this.state.code_info['expiry_date']).isValid() ?\n                moment(this.state.code_info['expiry_date']).format('MM-DD-YY').toString() : undefined\n            }\n            datePairField2MinDate={\n              this.state.code_info &&\n                this.state.code_info['effectivity_date'] &&\n                moment(this.state.code_info['effectivity_date']).isValid() ?\n                moment(this.state.code_info['effectivity_date']).format('MM-DD-YY').toString() : undefined\n            }\n          />\n        ) : null}\n      </SideModalBlock>\n    )\n  }\n\n\n\n\n\n\n\n  renderCodeInfo(): JSX.Element {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <li key={'year-of-release'} className={classes.codeHeader}>YEAR OF RELEASE</li>\n        <li key={'year-of-release-value'} className={classes.codeHeaderValue}>2020</li>\n        <ListItemText key={'effectivity-date'}>\n          <div className={classes.codeHeader}>EFFECTIVITY DATE</div>\n          <div className={classes.codeHeaderValue}>Jan 1, 2020</div>\n        </ListItemText>\n      </React.Fragment>\n    )\n  }\n\n\n\n\n\n  renderCodeList(key: string): JSX.Element {\n    const { classes } = this.props;\n\n    return (\n      <ListItemText\n        key={key}\n        classes={{\n          root: classes.codeListItemsRoot,\n          primary:\n            this.state.highlightedCodeFromList ===\n              this.state.icd_categories.indexOf(key)\n              ? classes.codeListItemsSelected\n              : classes.codeListItems,\n        }}\n        onClick={() => {\n          if (this.state.icd_categories.indexOf(key) !== this.state.highlightedCodeFromList) {\n            // this.props.setICD10ListClicked(this.state.icd_categories.indexOf(key))\n            this.setState({\n              highlightedCodeFromList: this.state.icd_categories.indexOf(key),\n            });\n            this.handleClickItemFromList(key);\n          } else {\n            // this.props.setICD10ListClicked(-1)\n            this.setState({\n              highlightedCodeFromList: -1,\n            });\n            this.handleClickItemFromList('');\n          }\n        }}\n      >\n        <br />\n        {/* {this.state.icd_categories.indexOf(key) + 1}  */}\n        {key}\n      </ListItemText>\n    )\n\n  }\n\n\n\n\n  render(): JSX.Element {\n    const { classes } = this.props;\n    const categories = this.state.icd_categories\n\n    return (\n      <div>\n        {this.state.loading_state ? <Loader /> : null}\n        <Grid container>\n          <Grid container item xs={12} md={3}>\n            <Grid container className={classes.scrollList} style={{ maxHeight: 715, overflow: 'auto' }}>\n              <List>\n                {this.renderCodeInfo()}\n                {categories ? categories.map(key => this.renderCodeList(key)) : null}\n              </List>\n            </Grid>\n          </Grid>\n\n\n\n\n\n\n\n\n          <Grid container item xs={12} md={9} className={classes.selectedpage}>\n            <Grid container>\n              <Grid item xs={12} md={9}>\n                <TextField\n                  style={{ width: '100%' }}\n                  id=\"code_search\"\n                  placeholder=\"Search a code or description\"\n                  label=\"\"\n                  margin=\"none\"\n                  fullWidth\n                  className={classes.searchField}\n                  variant=\"outlined\"\n                  value={this.state.global_filter}\n                  inputProps={{ 'aria-label': 'bare' }}\n                  onChange={this.handleSearch}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Search style={{ color: 'rgba(54, 54, 54, 0.4)' }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n\n\n\n\n\n              <Grid item xs={8} md={3} className={classes.searchBar}>\n                <FontAwesomeIcon icon={faPlus} className={classes.addFieldIcon} />\n                <Link\n                  className={classes.addACode}\n                  onClick={() => {\n                    this.setState(\n                      {\n                        block_title: `Add ICD10 Code`,\n                        code_info: constructEmptyIcd10(),\n                        disableSaveButton: true\n                      }, () => this.handleChangeSideModalBlockMode('add'));\n                  }}>\n                  Add a Code\n                  </Link>\n              </Grid>\n\n\n\n\n\n              <GridHorizontalDivider height=\"30px\" />\n              <Grid style={{ minHeight: 690, overflow: 'auto' }}>\n                <TableComponent\n                  id=\"tab-all\"\n                  totalCount={this.state.totalCount}\n                  update={this.changePageUpdate}\n                  updateSorting={this.handleChangeSorting}\n                  rows={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['rows']\n                      : []\n                  }\n                  columns={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['columns']\n                      : []\n                  }\n                  message={\n                    this.state.global_filter\n                      ? 'No available data'\n                      : this.state.no_data_message\n                  }\n                  onClickRow={this.handleClickRow}\n                  disableSelect\n                  disableSearch\n                  formattedColumns={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['formattedColumns']\n                      : {}\n                  }\n                  columnExtensions={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['columnExtensions']\n                      : []\n                  }\n                  onFilterChange={this.handleFilterByColumn}\n                  onSortingChange={this.handleChangeSorting}\n                  onPageChange={this.handlePageChange}\n                  ongPageSizeChange={this.handlePageSizeChange}\n                  defaultFilter={this.state.default_filters}\n                  currentPage={this.state.page}\n                  limit={this.state.limit}\n                  pageSizes={[10, 25, 50, 100]}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n\n\n        {this.renderSideModalBlock()}\n\n        <MsgModal\n          onClose={() => {\n            this.setState({\n              isModalOpen: false,\n            })\n          }}\n          title={this.state.modalTitle}\n          isModalOpen={this.state.isModalOpen}\n          message={this.state.modalMessage}\n        />\n        <ConfirmationModal\n          onClose={() => this.setState({ confirm_modal_open: false })}\n          title={this.state.confirm_modal_title}\n          isModalOpen={this.state.confirm_modal_open}\n          submitType={'confirm'}\n          onSubmit={() => {\n            if (this.state.action_after_confirm) {\n              this.state.action_after_confirm()\n            }\n          }}\n          message={this.state.confirm_modal_message} />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n// import { InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Button,\n    Grid,\n    // TextField,\n    InputLabel,\n    Link\n} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n// import { getAllGroups } from 'Pages/API/Calls/Roles';\n\nconst useStyles = makeStyles(() => ({\n    selectedItems: {\n        borderRadius: 20,\n        fontSize: 13,\n        backgroundColor: '#d1d4db',\n        padding: '5px 10px'\n    },\n    xIcon: {\n        fontSize: 16\n    },\n    input: {\n        marginBottom: \"2px\"\n    },\n    inputLabel: {\n        color: '#272e4c',\n        fontSize: '12px',\n        marginBottom: '5px',\n        marginTop: '20px'\n    },\n}));\nconsole.log(useStyles);\n\ninterface IAddSynonymsBodyProps {\n    onClose: () => void;\n    data: any\n    addSynonym: (payload: any) => void;\n}\n\ninterface IAddSynonymsBodyState {\n    textFieldValue: string;\n    menuTabs: any;\n    activeLink: any;\n}\n\nexport class AddSynonymsBody extends React.Component<IAddSynonymsBodyProps, IAddSynonymsBodyState> {\n    constructor(props) {\n        super(props);\n\n        const menuItems = [\n            \"All\",\n            \"Unapproved\",\n            \"Active\",\n            \"Inactive\"\n        ]\n\n        this.state = {\n            textFieldValue: '',\n            menuTabs: menuItems,\n            activeLink: 'All',\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            console.log(this.props.data)\n        }\n    }\n\n    addSynonym = () => {\n        if (!this.props.data || !this.props.data.full_code || !this.state.textFieldValue) return;\n        const synonym = { full_code: this.props.data.full_code, synonyms: [this.state.textFieldValue] }\n        this.setState({ textFieldValue: '' });\n\n        const payload = { approve: [synonym] }\n        console.log('PAYLOAD', payload)\n\n        this.props.addSynonym(payload);\n\n    }\n\n\n    handleMenuClick = async (item, index) => {\n        this.setState({\n            activeLink: item\n        })\n\n        console.log(item)\n        console.log(index)\n\n    }\n\n\n    public render(): JSX.Element {\n\n\n        return (\n            <>\n                <div style={{ minHeight: 600, width: 500 }}>\n                    <b>\n                        <span style={{\n                            fontSize: '16px'\n                        }}>\n                            {this.props.data.full_code}\n                        </span><br />\n                        <span style={{\n                            fontSize: '18px'\n                        }}>\n                            {this.props.data.full_description}\n                        </span>\n                    </b>\n\n                    <hr />\n                    <Grid item container justify=\"space-between\">\n                        <Grid container item xs={8}>\n                            <InputLabel style={{\n                                color: '#272e4c',\n                                fontSize: '12px',\n                                marginBottom: '5px',\n                                marginTop: '5px'\n                            }}>\n                                Add a Synonym\n                                    </InputLabel>\n\n                            <TextField type=\"text\"\n                                style={{\n                                    width: '335px',\n                                    marginBottom: \"2px\"\n                                }}\n\n                                value={this.state.textFieldValue}\n                                required\n                                id=\"outline-add-synonyms\"\n                                variant=\"outlined\"\n                                onChange={(e: any) => this.setState({ textFieldValue: e.target.value })} />\n                        </Grid>\n                        <Grid container item xs={4} justify=\"flex-end\">\n                            <Button\n                                style={{\n                                    height: '40px',\n                                    width: '140px',\n                                    fontSize: '14px',\n                                    color: '#fff',\n                                    marginTop: '22px'\n                                }}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.addSynonym}\n                            >\n                                Add Synonym\n                            </Button>\n                        </Grid>\n                    </Grid>\n\n                    <Grid\n                        item\n                        xs={12}\n                        md={12}\n                        style={{\n                            paddingRight: '8px',\n                            marginTop: 15,\n                        }}>\n\n                        <Grid item xs={12} md={12} style={{ marginLeft: '8px' }}>\n                            <ul style={{ padding: '0', margin: '0' }}>\n                                {this.state.menuTabs.map((item, i) => (\n                                    <li style={{\n                                        display: \"inline-block\",\n                                        padding: \"10px 30px 10px 0\"\n                                    }}>\n                                        <Link\n                                            style={this.state.activeLink === item ? {\n                                                color: \"#3ab77d\",\n                                                fontWeight: \"bold\",\n                                                textDecoration: \"underline\"\n                                            } : {\n                                                    color: \"#929292\",\n                                                    display: \"block\",\n                                                    fontSize: \"1.10em\",\n                                                }\n                                            }\n                                            onClick={() => this.handleMenuClick(item, i)}\n                                        >\n                                            {item}(0)\n                                        </Link>\n                                    </li>\n                                ))\n                                }\n                            </ul>\n                        </Grid>\n\n                    </Grid>\n\n                    <hr />\n\n                    {/* <Grid item container justify=\"space-between\" style={{ marginTop: '250px' }}>\n                        <Grid container item xs={8}>\n\n                        </Grid>\n                        <Grid container item xs={4} justify=\"flex-end\">\n                            <Button\n                                style={{\n                                    height: '40px',\n                                    width: '140px',\n                                    fontSize: '14px',\n                                    color: '#fff',\n                                    marginTop: '22px'\n                                }}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.addSynonym}\n                            >\n                                Save\n                            </Button>\n                        </Grid>\n                    </Grid> */}\n\n                </div>\n\n            </>\n        )\n    }\n\n}\n","import React from 'react';\nimport { TableComponent } from 'Components/UI/TableComponent/CodeListTable';\nimport {\n    TextField,\n    InputAdornment,\n    Grid,\n    Button,\n    Snackbar,\n    // IconButton,\n} from '@material-ui/core';\n// import CloseIcon from '@material-ui/icons/Close';\nimport { Search } from '@material-ui/icons/';\nimport { Loader } from '../Loader';\nimport Link from '@material-ui/core/Link';\nimport { GridHorizontalDivider } from 'Components/UI';\nimport { SideModalBlock } from 'Components/UI';\nimport { MsgModal } from 'Components/UI';\nimport {\n    // getICD,\n    // searchICD,\n    getICDSynonyms,\n    getActiveSynonyms,\n    addSynonyms\n} from 'Pages/API/Calls/ICD10'\nimport { ConfirmationModal } from '../ConfirmationModal'\n// import { Utils } from '@hims/core'\nimport { Icd10Synonym } from '../../LookupModels'\n\nimport { cloneDeep } from 'lodash'\nimport { AddSynonymsBody } from './AddSynonymsBody';\n\n\ninterface IState {\n\n    confirm_modal_title: string;\n    confirm_modal_message: string;\n    confirm_modal_open: boolean;\n    action_after_confirm: () => void;\n    invalid_fields: string[];\n    loading_state: boolean;\n    block_title?: string;\n    show_side_modal_block?: string;\n    side_modal_block_mode: 'view' | 'edit' | 'add' | '';\n    code_info?: any;\n    code_response: any;\n    code_data_all: any;\n    code_data: any;\n    global_filter: string;\n    default_filters: any;\n    default_sorting: any;\n\n\n    // FOR UNAPPROVED TAB\n    code_info_unapproved?: Icd10Synonym;\n    unapproved_codes_actions: any[];\n    code_data_all_unapproved: any;\n    code_data_unapproved: any;\n    default_filters_unapproved: any;\n    default_sorting_unapproved: any;\n    // global_filter_unapproved: string;\n    total_count_unapproved: number;\n    page_unapproved: number;\n    limit_unapproved: number;\n\n    activeTableRows: any;\n    activeTableColumns: any;\n    activeTableCount: number;\n    activeTableCurrentpage: number;\n    activeTableLimit: number;\n    activeTableFilter: any[];\n    activeTableSort: any[];\n    activeTableSkip: number;\n\n    default_clicked: string;\n    isModalOpen: boolean;\n    modalTitle: string;\n    modalMessage: string;\n    action_after_info: () => void;\n    totalCount: number;\n    typing: boolean;\n    typingTimeout: any;\n    page: number;\n    limit: number;\n    isPageSizeModal: boolean;\n    highlightedCodeFromList: number;\n    // init_expiry_date: Date | null;\n    icd_categories: string[];\n    no_data_message: string;\n    icd_category_dropdown_choices: any[];\n    disableSaveButton: boolean;\n    clickSaveButton: boolean;\n    menuTabs: any,\n    activeLink: any,\n    synonyms: string[],\n    code_repo: any;\n    active_default_filter: any[],\n    snackbarOpen: any,\n    snackbarMessage: any,\n\n\n}\n\ninterface IProps {\n    classes: any;\n\n    icdSynonymAction: any[];\n    setICDSynonymAction: (data: any[]) => void;\n}\n\nexport class ICD10SynonymsSection extends React.Component<IProps, IState> {\n\n    constructor(props) {\n        super(props);\n\n        const table: any = {\n            formattedColumns: {},\n            columnExtensions: [\n                {\n                    columnName: 'full_code',\n                    width: 100,\n                    wordWrapEnabled: true,\n                },\n                {\n                    columnName: 'diagnosis',\n                    width: 200,\n                    wordWrapEnabled: true,\n                },\n                {\n                    columnName: 'synonyms',\n                    width: 200,\n                    wordWrapEnabled: true,\n                },\n                {\n                    columnName: 'status',\n                    width: 200,\n                    wordWrapEnabled: true,\n                },\n            ],\n            columns: [\n                {\n                    name: 'full_code',\n                    title: 'ICD10 Code',\n                },\n                {\n                    name: 'diagnosis',\n                    title: 'Diagnosis',\n                },\n                {\n                    name: 'synonyms',\n                    title: 'Synonyms',\n                },\n                {\n                    name: 'status',\n                    title: 'Status',\n                },\n            ],\n            rows: [],\n        };\n\n        const unapprovedTable: any = {\n            formattedColumns: {\n                approve_disapprove_action: ['action'],\n            },\n            filterExtensions: [\n                {\n                    columnName: 'action',\n                    filteringEnabled: false,\n                    sortingEnabled: false,\n                },\n            ],\n            columnExtensions: [\n                {\n                    columnName: 'full_code',\n                    width: 130,\n                    wordWrapEnabled: true,\n                },\n                {\n                    columnName: 'full_description',\n                    width: 340,\n                    wordWrapEnabled: true,\n                },\n                {\n                    columnName: 'title',\n                    width: 180,\n                    wordWrapEnabled: true,\n                },\n                {\n                    columnName: 'action',\n                    width: 250,\n                    wordWrapEnabled: true,\n                },\n            ],\n            columns: [\n                {\n                    name: 'full_code',\n                    title: 'ICD10 Code',\n                },\n                {\n                    name: 'full_description',\n                    title: 'Diagnosis',\n                },\n                {\n                    name: 'title',\n                    title: 'Synonyms',\n                },\n                {\n                    name: 'action',\n                    title: 'Action',\n                    sortingEnabled: false,\n                },\n            ],\n            rows: [],\n        };\n\n        const activeTable: any = {\n            columnExtensions: [\n                {\n                    columnName: 'full_code',\n                    width: 130,\n                    wordWrapEnabled: true,\n                },\n                {\n                    columnName: 'full_description',\n                    width: 305,\n                    wordWrapEnabled: true,\n                },\n                {\n                    columnName: 'synonyms',\n                    width: 320,\n                    wordWrapEnabled: true,\n                },\n                {\n                    columnName: 'status',\n                    width: 150,\n                    wordWrapEnabled: true,\n                },\n            ],\n            columns: [\n                {\n                    name: 'full_code',\n                    title: 'ICD10 Code',\n                },\n                {\n                    name: 'full_description',\n                    title: 'Diagnosis',\n                },\n                {\n                    name: 'synonyms',\n                    title: 'Synonyms',\n                },\n                {\n                    name: 'status',\n                    title: 'Status',\n                },\n            ],\n            rows: [],\n        };\n\n        const menuItems = [\n            \"All Diagnosis\",\n            \"Unapproved Synonyms\"\n        ]\n\n\n        this.state = {\n            icd_category_dropdown_choices: props.icdCategoryDropdown,\n            icd_categories: props.icdCategories,\n            no_data_message: '',\n            // init_expiry_date: null,\n            confirm_modal_title: '',\n            confirm_modal_message: '',\n            confirm_modal_open: false,\n            action_after_confirm: () => { },\n            invalid_fields: [],\n            highlightedCodeFromList: -1,//props.icd10ListClicked,\n            loading_state: true,\n            code_response: [],//props.icd10Response,\n            code_info: [],\n            show_side_modal_block: 'none',\n            side_modal_block_mode: '',\n            code_data: table,\n            code_data_all: table,\n\n\n\n            // FOR UNAPPROVED TAB\n            default_filters_unapproved: [],\n            unapproved_codes_actions: props.icdSynonymAction ? props.icdSynonymAction : [],\n            code_data_unapproved: unapprovedTable,\n            code_data_all_unapproved: unapprovedTable,\n            default_sorting_unapproved: [{\n                columnName: 'full_code',\n                direction: 'asc'\n            }\n            ],\n            total_count_unapproved: 0,\n            page_unapproved: 0,\n            limit_unapproved: 10,\n\n            active_default_filter: [],\n\n            block_title: '',\n            global_filter: '',\n            default_filters: [],\n            default_sorting: [{\n                columnName: 'full_code',\n                direction: 'asc'\n            }\n            ],\n            default_clicked: '',\n            isModalOpen: false,\n            isPageSizeModal: false,\n            modalTitle: '',\n            modalMessage: '',\n            action_after_info: () => { },\n            totalCount: 0,\n            typing: false,\n            typingTimeout: 0,\n            page: 0,\n            limit: 10,\n            disableSaveButton: false,\n            clickSaveButton: false,\n            menuTabs: menuItems,\n            activeLink: 'All Diagnosis',\n            synonyms: [],\n            code_repo: [],\n            activeTableRows: [],\n            activeTableColumns: activeTable,\n            activeTableCount: 0,\n            activeTableCurrentpage: 0,\n            activeTableLimit: 10,\n            activeTableFilter: [],\n            activeTableSort: [],\n            activeTableSkip: 0,\n            snackbarOpen: false,\n            snackbarMessage: ''\n        };\n    }\n\n    componentDidMount() {\n        if (this.state.activeLink === 'All Diagnosis') {\n            this.getActive();\n        }\n        document.addEventListener('keydown', this.escFunction, false);\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.activeLink !== this.state.activeLink) {\n            if (this.state.activeLink === 'Unapproved Synonyms') {\n                this.setState({\n                    default_sorting_unapproved: [{\n                        columnName: 'full_code',\n                        direction: 'asc'\n                    }\n                    ]\n                }, () => this.searchSynonyms(\n                    this.state.default_filters_unapproved,\n                    this.state.global_filter,\n                    this.state.limit_unapproved,\n                    this.state.limit_unapproved * this.state.page_unapproved,\n                    this.state.default_sorting_unapproved));\n                this.handleCloseSideModalBlock();\n            } else if (this.state.activeLink === 'All Diagnosis') {\n                this.setState({ activeTableSort: [] }, this.getActive);\n                // this.getActive();\n            }\n        }\n\n\n        if (prevProps.icdSynonymAction !== this.props.icdSynonymAction && this.props.icdSynonymAction)\n            this.setState({ unapproved_codes_actions: this.props.icdSynonymAction }, () => console.log('COMP DID UPDATE SET', this.state.unapproved_codes_actions));\n    }\n\n    escFunction = (event) => {\n        if (event.keyCode === 27) {\n            this.handleCloseSideModalBlock()\n        }\n    }\n\n\n\n\n    search = (limit: number, skip: number) => {\n\n        console.log(skip)\n\n        let data: any = [];\n\n        let condition = skip + limit;\n\n        for (let i = skip; i < condition; i++) {\n            data.push(this.state.code_repo[i])\n        }\n\n        const table = this.generateDataForTable(\n            data ? data : [],\n        );\n\n        this.setState({\n            code_data_all: table,\n            code_data: table,\n            loading_state: false,\n            totalCount: this.state.code_repo.length\n        });\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /***********************  \n         CRUD FUNCTIONS \n    ***********************/\n\n\n    // fetchICDCategoriesIndexdb = async () => {\n    //     await Utils.StorageService('icd10_list')\n    //         .then(icds => {\n    //             console.log(icds)\n    //             if (Array.isArray(icds) && icds.length > 0) {\n    //                 this.setState({\n    //                     code_response: icds,\n    //                     code_repo: icds,\n    //                 });\n\n    //             }\n    //         })\n    //         .catch(err => console.log(err));\n    // }\n\n    searchCode = (\n        limit: number,\n        skip: number,\n        filters: any,\n        filters_global: any,\n        sorting: any,\n        clicked: any) => {\n\n        console.log(limit)\n        console.log(skip)\n        console.log(filters)\n        console.log(filters_global)\n        console.log(sorting)\n        console.log(clicked)\n\n        const table = this.generateDataForTable([]);\n        this.setState({\n            code_response: \"\",\n            code_data_all: table,\n            code_data: table,\n            loading_state: false,\n            totalCount: 0,\n        });\n    }\n\n    searchSynonyms = (filters: any, filters_global: any, limit: number, skip: number, sorting: any) => {\n\n        this.setState({ loading_state: true });\n        let table: any = [];\n\n        let unapproved_filter = cloneDeep(filters);\n        unapproved_filter.push({ columnName: 'status', value: 'unapproved' });\n        getICDSynonyms(unapproved_filter, filters_global, limit, skip, sorting)\n            .then(response => {\n                if (response && response.error === undefined) {\n                    table = this.generateDataForUnapprovedTable(\n                        response.result ? response.result : [],\n                    );\n                    this.setState({\n                        code_data_all_unapproved: table,\n                        code_data_unapproved: table,\n                        total_count_unapproved: response.total && response.total.count ? response.total.count : 0,\n                        loading_state: false,\n                    });\n                } else {\n                    table = this.generateDataForUnapprovedTable([]);\n                    this.setState({\n                        code_data_all_unapproved: table,\n                        page_unapproved: 0,\n                        isModalOpen: true,\n                        modalTitle: 'Loading failed',\n                        modalMessage: 'An error occured while loading the list of codes.',\n                        loading_state: false,\n                    });\n                }\n            }).catch(e => {\n                console.log('fetch synonyms table error', e);\n                table = this.generateDataForUnapprovedTable([]);\n                this.setState({\n                    code_data_all_unapproved: table,\n                    page_unapproved: 0,\n                    isModalOpen: true,\n                    modalTitle: 'Loading failed',\n                    modalMessage: 'An error occured while loading the list of codes.',\n                    loading_state: false,\n                });\n            });\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /***********************  \n    TABLE AND PAGE FUNCTIONS \n    ***********************/\n\n    generateDataForUnapprovedTable(response: any) {\n        const table: any = {\n            formattedColumns: {\n                approve_disapprove_action: ['action'],\n            },\n            filterExtensions: [\n                {\n                    columnName: 'action',\n                    filteringEnabled: false,\n                    sortingEnabled: false,\n                },\n            ],\n            columnExtensions: [\n                {\n                    columnName: 'full_code',\n                    width: 130,\n                    wordWrapEnabled: true,\n                },\n                {\n                    columnName: 'full_description',\n                    width: 340,\n                    wordWrapEnabled: true,\n                },\n                {\n                    columnName: 'title',\n                    width: 180,\n                    wordWrapEnabled: true,\n                },\n                {\n                    columnName: 'action',\n                    width: 250,\n                    wordWrapEnabled: true,\n                },\n            ],\n            columns: [\n                {\n                    name: 'full_code',\n                    title: 'ICD10 Code',\n                },\n                {\n                    name: 'full_description',\n                    title: 'Diagnosis',\n                },\n                {\n                    name: 'title',\n                    title: 'Synonyms',\n                },\n                {\n                    name: 'action',\n                    title: 'Action',\n                    sortingEnabled: false,\n                },\n            ],\n            rows: [],\n        };\n        for (const cnt in response) {\n            const item = response[cnt];\n            console.log('item', item);\n            const temp_row: any = {};\n            temp_row['_id'] = item['_id'];\n            temp_row['full_code'] = item['full_code'];\n            temp_row['full_description'] = item['full_description'];\n            temp_row['title'] = item['title'];\n            temp_row['action_chosen'] = this.handleGetAction(temp_row['_id']);\n            table['rows'].push(temp_row);\n        }\n        return table;\n    }\n\n    handleGetAction = (id: string) => {\n        const { unapproved_codes_actions } = this.state;\n        console.log('unapproved_codes_actions', unapproved_codes_actions);\n        if (unapproved_codes_actions && unapproved_codes_actions.some(item => item._id === id)) {\n            const temp = unapproved_codes_actions.filter(item => item._id === id);\n            return temp[0]['action_chosen'];\n        }\n        return '';\n    }\n\n\n    generateDataForTable(response: any) {\n        const table: any = {\n            formattedColumns: {},\n            columnExtensions: [\n                {\n                    columnName: 'full_code',\n                    width: 100,\n                    wordWrapEnabled: true,\n                },\n                {\n                    columnName: 'diagnosis',\n                    // width: 350,\n                    wordWrapEnabled: true,\n                },\n                {\n                    columnName: 'synonyms',\n                    // width: 350,\n                    wordWrapEnabled: true,\n                },\n                {\n                    columnName: 'status',\n                    width: 100,\n                    wordWrapEnabled: true,\n                    textAlign: 'center',\n                    textTransform: 'capitalize'\n                },\n            ],\n            columns: [\n                {\n                    name: 'full_code',\n                    title: 'ICD-10 Code',\n                },\n                {\n                    name: 'full_description',\n                    title: 'Diagnosis',\n                },\n                {\n                    name: 'synonyms',\n                    title: 'Synonyms',\n                },\n                {\n                    name: 'status',\n                    title: 'Status',\n                },\n            ],\n            rows: [],\n        };\n        for (const cnt in response) {\n            const item = response[cnt];\n            if (!item) continue;\n            console.log(item)\n            const temp_row: any = {};\n            let formattedSynonyms = <span style={{ textTransform: 'capitalize' }}>{item['synonyms'].join(\", \")}</span>\n            temp_row['full_code'] = item['full_code'];\n            temp_row['full_description'] = item['full_description'];\n            temp_row['synonyms'] = formattedSynonyms\n            temp_row['status'] = <span style={{ textTransform: 'capitalize' }}>{item['status']}</span>\n\n            table['rows'].push(temp_row);\n        }\n        return table;\n    }\n\n\n\n\n\n\n\n    changePageUpdate = (limit: number, skip: number) => {\n        this.handleCloseSideModalBlock();\n        this.setState({\n            loading_state: true,\n            no_data_message: `Searching for ICD10 codes`\n        });\n        if (\n            this.state.default_filters.length !== 0 ||\n            this.state.global_filter !== '' ||\n            this.state.default_sorting.length !== 0 ||\n            this.state.default_clicked !== ''\n        ) {\n            this.search(\n                limit,\n                skip,\n            )\n        }\n    };\n\n\n\n    changePageUpdateUnapproved = (limit: number, skip: number) => {\n        this.handleCloseSideModalBlock();\n        this.setState({\n            loading_state: true,\n            no_data_message: `Searching for ICD10 codes`\n        });\n        this.searchSynonyms(\n            this.state.default_filters_unapproved,\n            this.state.global_filter,\n            limit,\n            skip,\n            this.state.default_sorting_unapproved\n        )\n    }\n\n\n\n    handleChangeSorting = (sorting: any) => {\n        this.setState({\n            loading_state: true,\n            no_data_message: `Searching for ICD10 codes`\n        });\n        if (sorting && sorting.length > 0) {\n            this.searchCode(\n                this.state.limit,\n                this.state.page * this.state.limit,\n                this.state.default_filters,\n                this.state.global_filter,\n                sorting,\n                this.state.default_clicked,\n            )\n        }\n    };\n\n\n    handleChangeSortingUnapproved = (sorting: any) => {\n        this.setState({\n            default_sorting_unapproved: sorting,\n            loading_state: true,\n            no_data_message: `Searching for ICD10 codes`\n        });\n        if (sorting && sorting.length > 0) {\n            this.searchSynonyms(\n                this.state.default_filters_unapproved,\n                this.state.global_filter,\n                this.state.limit_unapproved,\n                this.state.limit_unapproved * this.state.page_unapproved,\n                sorting\n            )\n        }\n    }\n\n\n\n\n    handleFilterByColumn = (filter: any) => {\n        const self = this;\n\n        if (self.state.typingTimeout) {\n            clearTimeout(self.state.typingTimeout);\n        }\n\n        self.setState({\n            default_filters: filter,\n            // typing: false,\n            page: 0,\n            typingTimeout: setTimeout(function () {\n                self.setState({\n                    loading_state: true,\n                    no_data_message: `Searching for ICD10 codes`\n                });\n                if (self.state.default_filters !== 0) {\n                    self.searchCode(\n                        self.state.limit,\n                        0,\n                        filter,\n                        self.state.global_filter,\n                        self.state.default_sorting,\n                        self.state.default_clicked,\n                    )\n                } else {\n                    // self.initialData();\n                }\n            }, 2000),\n        });\n    };\n\n    handleFilterByColumnUnapproved = (filter: any) => {\n        const self = this;\n\n        if (self.state.typingTimeout) {\n            clearTimeout(self.state.typingTimeout);\n        }\n\n        self.setState({\n            default_filters_unapproved: filter,\n            // typing: false,\n            page_unapproved: 0,\n            typingTimeout: setTimeout(function () {\n                self.setState({\n                    loading_state: true,\n                    no_data_message: `Searching for ICD10 codes`\n                });\n                self.searchSynonyms(\n                    filter,\n                    self.state.global_filter,\n                    self.state.limit_unapproved,\n                    0,\n                    self.state.default_sorting_unapproved\n                )\n            }, 2000),\n        });\n    }\n\n    handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = e.target;\n\n        const self = this;\n\n        if (self.state.typingTimeout) {\n            clearTimeout(self.state.typingTimeout);\n        }\n        self.setState({\n            global_filter: value,\n            typing: true,\n            page: 0,\n            page_unapproved: 0,\n            typingTimeout: setTimeout(function () {\n\n                self.setState({\n                    typing: false,\n                    loading_state: true,\n                    no_data_message: `Searching for ICD10 codes`\n                });\n                if (self.state.activeLink === 'Unapproved Synonyms') {\n                    self.searchSynonyms(\n                        self.state.default_filters_unapproved,\n                        self.state.global_filter,\n                        self.state.limit_unapproved,\n                        0,\n                        self.state.default_sorting_unapproved\n                    )\n                } else if (self.state.activeLink === 'All Diagnosis') {\n                    self.setState({ activeTableSkip: 0, activeTableCurrentpage: 0 }, self.getActive);\n                    // self.getActive();\n                }\n            }, 2000),\n        });\n    };\n\n\n\n\n\n    handleClickRow = (row: any) => {\n\n        const { activeTableRows } = this.state;\n        if (!activeTableRows) return;\n\n        let data = activeTableRows[row];\n\n        // console.log(this.state.code_response)\n        this.setState({\n            code_info: data,\n        }, () => this.handleOpenBlock());\n    };\n\n\n\n\n\n    handlePageChange = (currentPage: number, skip: number) => {\n        this.setState({\n            page: currentPage,\n        });\n        this.changePageUpdate(this.state.limit, skip);\n    };\n\n    handlePageChangeUnapproved = (currentPage: number, skip: number) => {\n        this.setState({\n            page_unapproved: currentPage,\n        });\n        this.changePageUpdateUnapproved(this.state.limit, skip);\n    };\n\n\n\n\n    handlePageSizeChange = value => {\n        let pageLimit = 100000;\n\n        if (this.state.totalCount >= pageLimit) {\n            this.setState({\n                isPageSizeModal: true,\n            });\n        } else {\n            this.setState({\n                limit: value,\n            });\n\n            // this.changePageUpdate(value, value * this.state.page);\n            this.changePageUpdate(value, value * this.state.page);\n        }\n    };\n\n    handlePageSizeChangeUnapproved = (value: number) => {\n        let pageLimit = 100000;\n\n        if (this.state.total_count_unapproved >= pageLimit) {\n            this.setState({\n                isPageSizeModal: true,\n            });\n        } else {\n            this.setState({\n                limit_unapproved: value,\n            });\n\n            this.changePageUpdateUnapproved(value, value * this.state.page_unapproved);\n        }\n    };\n\n\n\n\n\n    handleRadioClick = (row: number, action: string) => {\n        let unapproved_actions = this.state.unapproved_codes_actions;\n        const unapproved_rows = this.state.code_data_unapproved.rows;\n        const unapproved_row = unapproved_rows[row];\n\n        if (unapproved_actions && unapproved_actions.some(code => code._id === unapproved_row._id)) {\n            unapproved_actions = unapproved_actions.filter(code => code._id !== unapproved_row._id)\n        }\n\n        unapproved_actions.push({\n            _id: unapproved_row._id, action_chosen: action\n        });\n\n        this.props.setICDSynonymAction(unapproved_actions);\n    }\n\n    handleSaveUnapproved = () => {\n        const { unapproved_codes_actions } = this.state;\n        if (!unapproved_codes_actions) return;\n        console.log('unapproved', unapproved_codes_actions);\n\n        const approve = unapproved_codes_actions.filter(code => code.action_chosen === 'approve').map(code => { return code._id });\n\n        const disapprove = unapproved_codes_actions.filter(code => code.action_chosen === 'disapprove').map(code => { return code._id });\n\n        console.log('APPROVE', approve);\n        console.log('DISAPPROVE', disapprove);\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /*****************************  \n    ACTIONS / SIDE MODAL FUNCTIONS \n    ******************************/\n\n    handleCloseSideModalBlock = () => {\n        this.setState({\n            show_side_modal_block: 'none',\n            side_modal_block_mode: '',\n        });\n    };\n\n\n\n    handleOpenBlock = () => {\n        this.setState({\n            show_side_modal_block: 'block',\n        });\n    };\n\n\n\n\n    handleMenuClick = async (item, index) => {\n        this.setState({\n            activeLink: item\n        })\n\n        console.log(item)\n        console.log(index)\n        if (item == 'Unapproved Synonyms') {\n            console.log(\"Unapproved Synonyms\", this.state.unapproved_codes_actions);\n        }\n\n        // if (item === \"All Diagnosis\") {\n        //     this.getActive()\n        // }\n    }\n\n\n\n\n    titleCase = (title: string) => {\n        var sentence: string[] = title.toLowerCase().split(\" \");\n        for (var i = 0; i < sentence.length; i++) {\n            sentence[i] = sentence[i][0].toUpperCase() + sentence[i].slice(1);\n        }\n        const output: string = sentence.join(\" \");\n        return output;\n    }\n\n\n    getActive = async () => {\n\n        this.setState({\n            loading_state: true\n        });\n\n        let icd10Active = await getActiveSynonyms(\n            this.state.activeTableFilter,\n            this.state.global_filter,\n            this.state.activeTableLimit,\n            this.state.activeTableSkip,\n            this.state.activeTableSort)\n            .catch(err => console.log(err));\n\n        console.log('RESP', icd10Active);\n\n        if (icd10Active) {\n            if (icd10Active.result.length > 0)\n                icd10Active.result.map((d: any) => {\n                    d.synonyms =\n                        d && d.synonyms && Array.isArray(d.synonyms) &&\n                            d.synonyms.length > 0 ?\n                            d.synonyms.length > 2 ?\n                                `${d.synonyms[0]}, ${d.synonyms[1]}, ${d.synonyms.length - 2} more` : d.synonyms.join(', ') : 'N/A'\n                    d.full_synonyms = d && d.synonyms && Array.isArray(d.synonyms) && d.synonyms.length > 0 ? d.synonyms.join(', ') : 'N/A';\n                    d.status = d.status ? this.titleCase(d.status) : 'N/A';\n                });\n            this.setState({\n                activeTableRows: icd10Active.result,\n                activeTableCount: icd10Active.total.count,\n                activeTableCurrentpage: this.state.activeTableCurrentpage > (Math.ceil(icd10Active.total.count / this.state.activeTableLimit) - 1) ? (Math.ceil(icd10Active.total.count / this.state.activeTableLimit) - 1) : this.state.activeTableCurrentpage\n            })\n        }\n\n        this.setState({\n            loading_state: false\n        });\n    }\n\n    handleActiveFilter = (filter: any) => {\n        const self = this;\n\n        if (self.state.typingTimeout) {\n            clearTimeout(self.state.typingTimeout);\n        }\n\n        let where: any = {};\n\n        filter.map(d =>\n            where[d.columnName] = { like: d.value, options: 'i' }\n        )\n\n        self.setState({\n            activeTableSkip: 0,\n            activeTableCurrentpage: 0,\n            activeTableFilter: where,\n            active_default_filter: filter,\n            typingTimeout: setTimeout(function () {\n                self.setState({\n                    no_data_message: `No available data`\n                });\n                self.getActive()\n            }, 2000),\n        });\n    }\n\n    handleActiveSorting = (value: any) => {\n        let filter = {\n            ...value[0],\n            direction: value[0].direction.toUpperCase()\n        }\n\n        if (filter['columnName'] === 'synonyms') filter['columnName'] = 'main_synonym';\n\n        let a = Object.values(filter).join(' ')\n\n        this.setState({\n            activeTableSort: [a]\n        }, this.getActive)\n    }\n\n    handleActivePageSizeChange = (value: any) => {\n        // @ts-ignore\n        this.setState({\n            activeTableLimit: value\n        }, this.getActive)\n    }\n\n    handleActiveCurrentPageChange = (value: any) => {\n        // @ts-ignore\n        this.setState({\n            activeTableSkip: value * this.state.activeTableLimit,\n            activeTableCurrentpage: value\n        }, this.getActive)\n    }\n\n\n\n\n\n\n\n\n\n    /***********************  \n         RENDER SECTIONS \n    ***********************/\n\n    renderSideModalBlock(): JSX.Element {\n        const { classes } = this.props;\n\n        return (\n            <SideModalBlock\n                handleClose={this.handleCloseSideModalBlock}\n                showBlock={this.state.show_side_modal_block}\n                blockPosition={'fixed'}\n                title={this.state.block_title}\n                classes={classes}>\n                <AddSynonymsBody\n                    onClose={this.handleCloseSideModalBlock}\n                    data={this.state.code_info}\n                    addSynonym={(payload: any) => {\n                        this.setState({ loading_state: true });\n                        addSynonyms(JSON.stringify(payload)).then((resp: any) => {\n\n                            if (!resp.error) {\n                                this.setState({\n                                    ...this.state,\n                                    snackbarOpen: true,\n                                    snackbarMessage: `New Synonyms has been successfully added.`,\n                                })\n                            } else {\n                                this.setState({\n                                    snackbarOpen: true,\n                                    snackbarMessage: 'Something went wrong. User group wasn’t removed.',\n                                })\n                            }\n\n                            this.getActive();\n                            this.handleCloseSideModalBlock();\n                        }).catch(e => {\n                            this.setState({\n                                snackbarOpen: true,\n                                snackbarMessage: 'Something went wrong. User group wasn’t removed.',\n                            })\n                            this.getActive();\n                            console.log(e);\n                            this.handleCloseSideModalBlock();\n                        })\n                    }}\n                />\n            </SideModalBlock>\n        )\n    }\n\n    render(): JSX.Element {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                {this.state.loading_state ? <Loader /> : null}\n                <Grid container>\n\n                    <Grid container item xs={12} md={12} className={classes.selectedpage}>\n                        <Grid container>\n                            <Grid item xs={12} md={12}>\n                                <TextField\n                                    style={{ width: '100%' }}\n                                    id=\"code_search\"\n                                    placeholder=\"Search a code or description\"\n                                    label=\"\"\n                                    margin=\"none\"\n                                    fullWidth\n                                    className={classes.searchField}\n                                    variant=\"outlined\"\n                                    value={this.state.global_filter}\n                                    onKeyUp={(event) => {\n                                        let code = event.keyCode || event.which\n                                        if (code == 13 && this.state.typing && this.state.global_filter) {\n                                            if (this.state.typingTimeout) {\n                                                clearTimeout(this.state.typingTimeout);\n                                            }\n                                            this.setState({\n                                                page_unapproved: 0,\n                                                loading_state: true,\n                                                typing: false,\n                                                no_data_message: `Searching for ICD10 codes`\n                                            });\n                                            if (this.state.activeLink === 'Unapproved Synonyms') {\n                                                this.searchSynonyms(\n                                                    this.state.default_filters_unapproved,\n                                                    this.state.global_filter,\n                                                    this.state.limit_unapproved,\n                                                    0,\n                                                    this.state.default_sorting_unapproved\n                                                )\n                                            } else if (this.state.activeLink === 'All Diagnosis') {\n                                                this.setState({ activeTableSkip: 0, activeTableCurrentpage: 0 }, this.getActive);\n                                                // this.getActive();\n                                            }\n\n                                        }\n                                    }}\n                                    inputProps={{ 'aria-label': 'bare' }}\n                                    onChange={this.handleSearch}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <Search style={{ color: 'rgba(54, 54, 54, 0.4)' }} />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            </Grid>\n\n\n\n                            <Grid item xs={12} md={12} className={classes.links}>\n                                <Grid item xs={12} md={12} style={{ marginLeft: '15px' }}>\n                                    <ul style={{ padding: '0', margin: '0' }}>\n                                        {this.state.menuTabs.map((item, i) => (\n                                            <li className={classes.menuList}>\n                                                <Link\n                                                    className={this.state.activeLink === item ? classes.LinkActive : classes.menuLink}\n                                                    onClick={() => this.handleMenuClick(item, i)}>\n                                                    {item}\n                                                </Link>\n                                            </li>\n                                        ))\n                                        }\n                                    </ul>\n                                </Grid>\n                                <Grid item xs={6} md={6}></Grid>\n                            </Grid>\n\n                            {this.state.activeLink === 'All Diagnosis' ? (\n                                <>\n                                    <GridHorizontalDivider height=\"30px\" />\n                                    <Grid style={{ overflow: 'auto' }}>\n                                        <TableComponent\n                                            id=\"tab-all\"\n                                            totalCount={this.state.activeTableCount}\n                                            update={this.changePageUpdateUnapproved}\n                                            updateSorting={this.handleActiveSorting}\n                                            rows={this.state.activeTableRows}\n                                            columns={this.state.activeTableColumns.columns}\n                                            message={\n                                                this.state.global_filter\n                                                    ? 'No available data'\n                                                    : this.state.no_data_message\n                                            }\n                                            onClickRow={this.handleClickRow}\n                                            columnExtensions={\n                                                Object.keys(this.state.activeTableColumns).length > 0\n                                                    ? this.state.activeTableColumns['columnExtensions']\n                                                    : []\n                                            }\n                                            disableSelect\n                                            disableSearch\n                                            onFilterChange={this.handleActiveFilter}\n                                            onSortingChange={this.handleActiveSorting}\n                                            onPageChange={this.handleActiveCurrentPageChange}\n                                            ongPageSizeChange={this.handleActivePageSizeChange}\n                                            defaultFilter={this.state.active_default_filter}\n                                            currentPage={this.state.activeTableCurrentpage}\n                                            limit={this.state.activeTableLimit}\n                                            pageSizes={[10, 25, 50, 100]}\n                                            disableIntegratedFiltering={true}\n                                        />\n                                    </Grid>\n                                </>\n                            ) : null}\n                            {this.state.activeLink === 'Unapproved Synonyms' ? (\n                                <>\n\n                                    <GridHorizontalDivider height=\"30px\" />\n                                    <Grid style={{ minHeight: 690, overflow: 'auto' }}>\n                                        <TableComponent\n                                            id=\"tab-unapproved\"\n                                            totalCount={this.state.total_count_unapproved}\n                                            update={this.changePageUpdateUnapproved}\n                                            updateSorting={this.handleChangeSortingUnapproved}\n                                            rows={\n                                                Object.keys(this.state.code_data_unapproved).length > 0\n                                                    ? this.state.code_data_unapproved['rows']\n                                                    : []\n                                            }\n                                            columns={\n                                                Object.keys(this.state.code_data_unapproved).length > 0\n                                                    ? this.state.code_data_unapproved['columns']\n                                                    : []\n                                            }\n                                            message={\n                                                this.state.global_filter\n                                                    ? 'No available data'\n                                                    : this.state.no_data_message\n                                            }\n                                            onClickRow={() => { }}\n                                            disableSelect\n                                            disableSearch\n                                            formattedColumns={\n                                                Object.keys(this.state.code_data_unapproved).length > 0\n                                                    ? this.state.code_data_unapproved['formattedColumns']\n                                                    : {}\n                                            }\n                                            columnExtensions={\n                                                Object.keys(this.state.code_data_unapproved).length > 0\n                                                    ? this.state.code_data_unapproved['columnExtensions']\n                                                    : []\n                                            }\n                                            filterExtensions={\n                                                Object.keys(this.state.code_data_unapproved).length > 0\n                                                    ? this.state.code_data_unapproved['filterExtensions']\n                                                    : []\n                                            }\n                                            onFilterChange={this.handleFilterByColumnUnapproved}\n                                            onSortingChange={this.handleChangeSortingUnapproved}\n                                            onPageChange={this.handlePageChangeUnapproved}\n                                            ongPageSizeChange={this.handlePageSizeChangeUnapproved}\n                                            defaultFilter={this.state.default_filters_unapproved}\n                                            currentPage={this.state.page_unapproved}\n                                            limit={this.state.limit_unapproved}\n                                            pageSizes={[10, 25, 50, 100]}\n                                            approveDisapproveItems={this.state.unapproved_codes_actions}\n                                            onSelectedRadio={(row: number, value: string) => {\n                                                this.handleRadioClick(row, value);\n                                            }}\n                                        />\n                                        <GridHorizontalDivider height=\"30px\" />\n                                        <div>\n                                            <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                                                <Button\n                                                    style={{ width: '130px' }}\n                                                    onClick={this.handleSaveUnapproved}\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    disabled={this.state.unapproved_codes_actions && this.state.unapproved_codes_actions.length ? false : true}\n                                                >\n                                                    Save\n                                            </Button>\n                                            </div>\n                                        </div>\n                                    </Grid>\n                                </>\n                            ) : null}\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n\n                {this.renderSideModalBlock()}\n\n                <MsgModal\n                    onClose={() => {\n                        this.setState({\n                            isModalOpen: false,\n                        })\n                    }}\n                    title={this.state.modalTitle}\n                    isModalOpen={this.state.isModalOpen}\n                    message={this.state.modalMessage}\n                />\n                <ConfirmationModal\n                    onClose={() => this.setState({ confirm_modal_open: false })}\n                    title={this.state.confirm_modal_title}\n                    isModalOpen={this.state.confirm_modal_open}\n                    submitType={'confirm'}\n                    onSubmit={() => {\n                        if (this.state.action_after_confirm) {\n                            this.state.action_after_confirm()\n                        }\n                    }}\n                    message={this.state.confirm_modal_message} />\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                    open={this.state.snackbarMessage ? true : false}\n                    autoHideDuration={6000}\n                    message={this.state.snackbarMessage}\n                    onClose={() => {\n                        this.setState({ snackbarMessage: null });\n                    }}\n                />\n\n\n            </div>\n        );\n    }\n}\n","import Fetch, { requestOption } from '../index'\n\nconst fetch = new Fetch();\nfetch.getAccessToken();\n\nexport const getCPT = (limit: number, skip: number) => {\n\n    let filters = {\n        limit: limit,\n        skip: skip,\n      };\n    let option: requestOption = {\n        method: 'GET'\n    }\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `cpts/search?filter=${JSON.stringify(filters)}`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `cpts/search?filter=${JSON.stringify(filters)}`, true))\n}\n\nexport const searchCPT = (limit: number, offset: number, filters: any, query: string, sorting?: any, key?: string,) => {\n\n    let filter_key_str = '';\n    if (key !== undefined && key !== '' && key.length > 0) {\n        // console.log('KEY', key)\n        filter_key_str = '&filter[where][category]='+key\n\n    }\n    let sorting_str = '';\n    if (sorting && sorting.length !== 0) {\n      sorting_str =\n        '&filter[order]=' +\n        sorting[0]['columnName'] +\n        ' ' +\n        sorting[0]['direction'];\n    }\n    let filter_str = '';\n    if (filters) {\n      filters.forEach(filter => {\n        filter_str =\n          filter_str + '&' + filter['columnName'] + '=' + filter['value'];\n      });\n    }\n    let search = query ? '&search=' + query : '';\n    let CPT_URL =\n      `cpts/search?filter[limit]=${limit}&filter[skip]=${offset}` +\n      search +\n      filter_str +\n      sorting_str +\n      filter_key_str;\n    if (limit === 0)\n        CPT_URL =\n        `cpts/search?filter[skip]=${offset}` +\n        search +\n        filter_str +\n        sorting_str +\n        filter_key_str;\n\n    let option: requestOption = {\n        method: 'GET'\n    }\n \n    if(fetch.getAccessToken()){\n        return fetch.call(option, CPT_URL, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, CPT_URL, true))\n}\n\nexport const addCPTCodes = (payload: any) => {\n\n    let option: requestOption = {\n        method: 'POST',\n        body: payload\n    }\n\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `cpts/multiple`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `cpts/multiple`, true))\n}\n\nexport const editCPT = (payload: any, id: string | undefined) => {\n\n    let option: requestOption = {\n        method: 'PUT',\n        body: payload\n    }\n\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `cpts/edit/${id}`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `cpts/edit/${id}`, true))\n}\n\nexport const deleteCPT = (id: string) => {\n\n    let option: requestOption = {\n        method: 'DELETE'\n    }\n\n    if(fetch.getAccessToken()){\n        return fetch.call(option, `cpts/${id}`, true)\n    }\n    return fetch.fetchAccessToken().then(()=> fetch.call(option, `cpts/${id}`, true))\n}","import React from 'react';\nimport { TableComponent } from 'Components/UI/TableComponent/CodeListTable';\nimport {\n  TextField,\n  InputAdornment,\n  Grid,\n  List,\n  ListItemText,\n} from '@material-ui/core';\nimport { Search } from '@material-ui/icons/';\nimport { Loader } from '../Loader';\nimport Link from '@material-ui/core/Link';\nimport { GridHorizontalDivider } from 'Components/UI';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { SideModalBlock } from 'Components/UI';\nimport { SideModalBody } from 'Components/UI';\nimport { MsgModal } from 'Components/UI';\nimport { SIDE_MODAL_BLOCK_FIELDS } from 'Components/UI/SideModalBlock/FieldConstants';\nimport moment from 'moment';\n// import NestedList from './NestedList';\n// import { API } from '../../API'\nimport { ConfirmationModal } from '../ConfirmationModal'\nimport {\n  getCPT,\n  searchCPT,\n  addCPTCodes,\n  editCPT,\n  deleteCPT\n} from 'Pages/API/Calls/CPT'\nimport { cloneDeep } from 'lodash'\nimport { Utils } from '@hims/core'\nimport {\n  constructCpt,\n  constructEmptyCpt,\n  constructPutCpt,\n  constructPostCpt,\n  reconstructCpt\n} from '../ConstructPayloads'\nimport { Cpt } from '../../LookupModels';\nconst helper = new Utils.IndexedDBHelper();\n\ninterface IState {\n  confirm_modal_title: string;\n  confirm_modal_message: string;\n  confirm_modal_open: boolean;\n  action_after_confirm: () => void;\n  invalid_fields: string[];\n  loading_state: boolean;\n  block_title?: string;\n  show_side_modal_block?: string;\n  side_modal_block_mode: 'view' | 'edit' | 'add' | '';\n  code_info?: Cpt;\n  code_response: any;\n  code_data_all: any;\n  code_data: any;\n  global_filter: string;\n  default_filters: any;\n  default_sorting: any;\n  default_clicked: string;\n  isModalOpen: boolean;\n  modalTitle: string;\n  modalMessage: string;\n  totalCount: number;\n  typing: boolean;\n  typingTimeout: any;\n  page: number;\n  limit: number;\n  isPageSizeModal: boolean;\n  highlightedCodeFromList: number;\n  // init_expiry_date: Date | null;\n  no_data_message: 'Searching for CPT codes' | 'No available data' | '';\n  cpt_categories: string[];\n  cpt_category_range: string[];\n  disableSaveButton: boolean;\n  clickSaveButton: boolean;\n  category_dropdown_choices: any[];\n}\n\ninterface IProps {\n  classes: any\n\n  // cptResponse: any;\n  // cptCodeData: any;\n  cptCategories: string[];\n  cptCategoryRanges: string[];\n  cptCategoryDropdown: any;\n  // cptListClicked: number;\n\n  // setCPTResponse: (data : any) => void;\n  // setCPTCodeData: (data : any) => void;\n  setCPTCategories: (categories: string[]) => void;\n  setCPTCategoryRanges: (ranges: string[]) => void;\n  setCPTCategoryDropdown: (dropdown: any) => void;\n  // setCPTListClicked: (index: number) => void;\n}\n\n\nexport class CPTSection extends React.Component<IProps, IState> {\n  private requiredFields: any;\n  private excludeFields: any;\n\n  constructor(props) {\n    super(props);\n\n    this.requiredFields = SIDE_MODAL_BLOCK_FIELDS.CPT.editOrAdd.checkInvalidFields;\n    this.excludeFields = SIDE_MODAL_BLOCK_FIELDS.CPT.editOrAdd.excludeFields\n\n    const table: any = {\n      formattedColumns: {},\n      columnExtensions: [\n        {\n          columnName: 'code',\n          width: 150,\n          wordWrapEnabled: true,\n        },\n        {\n          columnName: 'description',\n          width: 500,\n          wordWrapEnabled: true,\n        },\n      ],\n      columns: [\n        {\n          name: 'code',\n          title: 'CPT Code',\n        },\n        {\n          name: 'description',\n          title: 'Description',\n        },\n      ],\n      rows: [],\n    };\n\n    this.state = {\n      category_dropdown_choices: props.cptCategoryDropdown,\n      cpt_categories: props.cptCategories,\n      cpt_category_range: props.cptCategoryRanges,\n      no_data_message: '',\n      // init_expiry_date: null,\n      confirm_modal_title: '',\n      confirm_modal_message: '',\n      confirm_modal_open: false,\n      action_after_confirm: () => { },\n      invalid_fields: [],\n      highlightedCodeFromList: -1,\n      loading_state: true,\n      code_response: [],\n      code_info: constructEmptyCpt(),\n      show_side_modal_block: 'none',\n      side_modal_block_mode: '',\n      code_data: table,\n      code_data_all: table,\n      block_title: '',\n      global_filter: '',\n      default_filters: [],\n      default_sorting: [{\n        columnName: 'code',\n        direction: 'asc'\n      }],\n      default_clicked: '',\n      isModalOpen: false,\n      isPageSizeModal: false,\n      modalTitle: '',\n      modalMessage: '',\n      totalCount: 0,\n      typing: false,\n      typingTimeout: 0,\n      page: 0,\n      limit: 10,\n      disableSaveButton: false,\n      clickSaveButton: false,\n    };\n  }\n\n\n  componentDidMount() {\n    if (!this.state.category_dropdown_choices || !this.state.cpt_categories || !this.state.cpt_category_range) {\n      this.fetchCPTCategories()\n        .then(() => this.initialData())\n        .catch(() => this.initialData())\n    } else {\n      this.initialData()\n    }\n\n    document.addEventListener('keydown', this.escFunction, false);\n\n  }\n\n  escFunction = (event) => {\n    if (event.keyCode === 27) {\n      this.handleCloseSideModalBlock()\n    }\n  }\n\n\n  initialData = () => {\n    this.setState({ no_data_message: 'Searching for CPT codes' })\n    this.searchCode(\n      10,\n      0,\n      this.state.default_filters,\n      this.state.global_filter,\n      this.state.default_sorting,\n      this.state.default_clicked)\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /***********************  \n       CRUD FUNCTIONS \n  ***********************/\n\n  addCPTIndexDB = (data: any[]) => {\n    helper.openDb('himsDb').then(res => {\n      let db = res.result\n      try {\n        helper.saveToStore(db, 'cpt_list', data)\n          .then(res => console.log('RES', res))\n          .catch(e => console.log(e))\n      } catch (e) {\n        console.log(e)\n      } finally { }\n    })\n  }\n\n  patchCPTIndexDB = (data: any) => {\n    helper.openDb('himsDb').then(res => {\n      let db = res.result\n      try {\n        helper.updateEntryByKey(db, 'cpt_list', data['_id'], data)\n          .then(res => console.log('RES', res))\n          .catch(e => console.log(e))\n      } catch (e) {\n        console.log(e)\n      } finally { }\n    })\n  }\n\n  fetchCPTCategories = async () => {\n    this.setState({ loading_state: true })\n    await Utils.StorageService('cpt_list')\n      .then(cpts => {\n        if (Array.isArray(cpts) && cpts.length > 0) {\n          let category_arr: string[] = []\n          let category_ranges: string[] = []\n          let category_dropdown_choices_arr: any[] = [{ name: '', value: '' }]\n          cpts.filter(item => {\n            if (!category_arr.includes(item.category)) {\n              category_arr.push(item.category)\n              // const category_range = item.code.match(/[a-z]+|\\d+/ig)[0] + '0000' + '-' + item.code.match(/[a-z]+|\\d+/ig)[0] + '9999'\n              category_ranges.push(item.code)\n              category_dropdown_choices_arr.push({ name: item.category, value: item.category })\n              return true;\n            }\n            return false;\n          })\n          this.props.setCPTCategories(category_arr)\n          this.props.setCPTCategoryDropdown(category_dropdown_choices_arr)\n          this.props.setCPTCategoryRanges(cloneDeep(category_ranges))\n          this.setState({\n            cpt_categories: category_arr,\n            cpt_category_range: category_ranges,\n            category_dropdown_choices: category_dropdown_choices_arr\n          }, () => this.setState({ loading_state: false }))\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  patchCode = (data: any) => {\n\n    const payload: Cpt = constructPutCpt(data)\n\n    this.setState({\n      loading_state: true,\n      no_data_message: 'Searching for CPT codes'\n    })\n    editCPT(JSON.stringify(payload), payload._id).then(response => {\n      this.setState({\n        no_data_message: 'No available data',\n        loading_state: false\n      })\n      if (response && response.error === undefined && response.message) {\n        this.changePageUpdate(this.state.limit, this.state.limit * this.state.page)\n        this.patchCPTIndexDB(data)\n        this.setState({\n          disableSaveButton: true,\n          isModalOpen: true,\n          modalTitle: 'Success',\n          modalMessage: `You have ${response.message} code!`\n        });\n      } else if (response && response.error && response.error.statusCode === 401) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to edit CPT codes.'\n        });\n      } else if (response && response.error && response.error.statusCode === 400 && response.error.message) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Duplicate Codes',\n          modalMessage: 'This code already exists.'\n        });\n      } else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while saving!'\n        });\n      }\n    }).catch(error => {\n      if (error == 'Error: This code already exists.') {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Duplicate Codes',\n          modalMessage: 'This code already exists.',\n          loading_state: false\n        });\n      } else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while saving!',\n          loading_state: false\n        });\n      }\n    });\n  }\n\n  addCodes = (data: any) => {\n\n    this.setState({\n      loading_state: true,\n      no_data_message: 'Searching for CPT codes'\n    })\n\n    const payload: Cpt[] = constructPostCpt(data)\n\n    addCPTCodes(JSON.stringify(payload)).then(response => {\n      this.setState({\n        loading_state: false,\n        no_data_message: 'No available data'\n      })\n      if (response && response.error === undefined && response.message && response.result) {\n        this.changePageUpdate(this.state.limit, this.state.limit * this.state.page)\n        this.addCPTIndexDB(response.result)\n        this.setState({\n          disableSaveButton: true,\n          isModalOpen: true,\n          modalTitle: 'Success',\n          modalMessage: `You have successfully added ${response.result.length} CPT code/s!`\n        });\n      } else if (response && response.error && response.error.statusCode === 401) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to add CPT codes.'\n        });\n      } else if (response && response.error && response.error.statusCode === 400 && response.error.message) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Duplicate Codes',\n          modalMessage: 'This code already exists.'\n        });\n      } else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while adding!'\n        });\n      }\n    }).catch(error => {\n      if (error == 'Error: This code already exists.') {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Duplicate Codes',\n          modalMessage: 'This code already exists.',\n          loading_state: false\n        });\n      } else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while saving!',\n          loading_state: false\n        });\n      }\n    });\n  }\n\n  searchCode = (\n    limit: number, skip: number, filters: any, filters_global: any, sorting: any, clicked: any) => {\n\n    searchCPT(limit, skip, filters, filters_global, sorting, clicked).then(response => {\n      this.setState({ no_data_message: 'No available data' })\n      if (response && response.error === undefined) {\n        const table = this.generateDataForTable(\n          response.result ? response.result : [],\n        );\n        this.setState({\n          code_response: response,\n          code_data_all: table,\n          code_data: table,\n          loading_state: false,\n          totalCount:\n            response.total && response.total.count\n              ? response.total.count\n              : 0,\n        });\n      } else if (response && response.error && response.error.statusCode === 401) {\n        const table = this.generateDataForTable([]);\n        this.setState({\n          code_response: [],\n          code_data_all: table,\n          loading_state: false,\n          isModalOpen: true,\n          modalTitle: 'Unauthorized',\n          modalMessage: 'You are not authorized to view CPT codes.',\n        });\n      } else {\n        const table = this.generateDataForTable([]);\n        this.setState({\n          code_response: [],\n          code_data_all: table,\n          loading_state: false,\n          isModalOpen: true,\n          modalTitle: 'Loading failed',\n          modalMessage: 'An error occured while loading the list of codes.',\n        });\n      }\n    }).catch(() => {\n      const table = this.generateDataForTable([]);\n      this.setState({\n        code_response: [],\n        code_data_all: table,\n        loading_state: false,\n        isModalOpen: true,\n        modalTitle: 'Loading failed',\n        modalMessage: 'An error occured while loading the list of codes.',\n      });\n    });\n  }\n\n\n  deleteCPT = (id: string) => {\n    if (!id) {\n      return\n    }\n    this.setState({ loading_state: true })\n    deleteCPT(id).then(response => {\n      this.setState({\n        loading_state: false\n      })\n      this.changePageUpdate(this.state.limit, this.state.limit * this.state.page)\n      if (response && response.error) {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Failed',\n          modalMessage: 'Something went wrong while deleting the CPT Code!'\n        });\n      }\n      else {\n        this.setState({\n          isModalOpen: true,\n          modalTitle: 'Success',\n          modalMessage: 'You have successfully deleted a CPT code!'\n        });\n      }\n    }).catch(error => {\n      this.setState({\n        isModalOpen: true,\n        modalTitle: 'Failed',\n        modalMessage: 'Something went wrong while deleting the ICD10 Code!'\n      });\n      this.setState({\n        loading_state: false\n      })\n      console.log('client error: ', error);\n    });\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /***********************  \n  TABLE AND PAGE FUNCTIONS \n  ***********************/\n\n  generateDataForTable(response: any) {\n    const table: any = {\n      formattedColumns: {},\n      columnExtensions: [\n        {\n          columnName: 'code',\n          width: 150,\n          wordWrapEnabled: true,\n        },\n        {\n          columnName: 'description',\n          width: 500,\n          wordWrapEnabled: true,\n        },\n      ],\n      columns: [\n        {\n          name: 'code',\n          title: 'CPT Code',\n        },\n        {\n          name: 'description',\n          title: 'Description',\n        },\n      ],\n      rows: [],\n    };\n    for (const cnt in response) {\n      const item = response[cnt];\n      const temp_row: any = {};\n      temp_row['code'] = item['code'];\n      temp_row['description'] = item['description'];\n      table['rows'].push(temp_row);\n    }\n\n    return table;\n  }\n\n  changePageUpdate = (limit: number, skip: number) => {\n    this.handleCloseSideModalBlock();\n    this.setState({ no_data_message: 'Searching for CPT codes' })\n    this.setState({\n      loading_state: true,\n    });\n    if (\n      this.state.default_filters.length !== 0 ||\n      this.state.global_filter !== '' ||\n      this.state.default_sorting.length !== 0 ||\n      this.state.default_clicked !== ''\n    ) {\n      this.searchCode(\n        limit,\n        skip,\n        this.state.default_filters,\n        this.state.global_filter,\n        this.state.default_sorting,\n        this.state.default_clicked,\n      )\n    } else {\n      this.setState({ no_data_message: 'Searching for CPT codes' })\n      getCPT(limit, skip).then(response => {\n        this.setState({ no_data_message: 'No available data' })\n        if (response && response.error === undefined) {\n          const table = this.generateDataForTable(\n            response.result ? response.result : [],\n          );\n          this.setState({\n            code_response: response,\n            code_data_all: table,\n            code_data: table,\n            loading_state: false,\n            totalCount:\n              response.total && response.total.count\n                ? response.total.count\n                : 0,\n          });\n        } else if (response && response.error && response.error.statusCode === 401) {\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_response: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Unauthorized',\n            modalMessage: 'You are not authorized to view CPT codes.',\n          });\n        } else {\n          const table = this.generateDataForTable([]);\n          this.setState({\n            code_response: [],\n            code_data_all: table,\n            loading_state: false,\n            isModalOpen: true,\n            modalTitle: 'Loading failed',\n            modalMessage: 'An error occured while loading the list of codes.',\n          });\n        }\n      });\n    }\n  };\n\n  handleChangeSorting = (sorting: any) => {\n    this.setState({ no_data_message: 'Searching for CPT codes' })\n    this.setState({\n      default_sorting: sorting,\n      loading_state: true,\n    });\n    if (sorting && sorting.length > 0) {\n\n      this.searchCode(\n        this.state.limit,\n        this.state.page * this.state.limit,\n        this.state.default_filters,\n        this.state.global_filter,\n        sorting,\n        this.state.default_clicked,\n      )\n    }\n  };\n\n  handleFilterByColumn = (filter: any) => {\n    const self = this;\n\n    if (self.state.typingTimeout) {\n      clearTimeout(self.state.typingTimeout);\n    }\n\n    self.setState({\n      default_filters: filter,\n      typing: false,\n      page: 0,\n      typingTimeout: setTimeout(function () {\n        self.setState({\n          no_data_message: 'Searching for CPT codes',\n          loading_state: true,\n        });\n        if (self.state.default_filters !== 0) {\n          self.searchCode(\n            self.state.limit,\n            0,\n            filter,\n            self.state.global_filter,\n            self.state.default_sorting,\n            self.state.default_clicked,\n          )\n        } else {\n          self.initialData();\n        }\n      }, 2000),\n    });\n\n  };\n\n  handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    const self = this;\n\n    if (self.state.typingTimeout) {\n      clearTimeout(self.state.typingTimeout);\n    }\n    self.setState({\n      global_filter: value,\n      typing: false,\n      page: 0,\n      typingTimeout: setTimeout(function () {\n        self.setState({\n          no_data_message: 'Searching for CPT codes',\n          loading_state: true,\n          limit: 10,\n        });\n        if (self.state.global_filter !== '') {\n          self.searchCode(\n            self.state.limit,\n            0,\n            self.state.default_filters,\n            self.state.global_filter,\n            self.state.default_sorting,\n            self.state.default_clicked,\n          )\n        } else {\n          self.initialData();\n        }\n      }, 2000),\n    });\n  };\n\n  handleClickRow = (row: any) => {\n    const { code_response } = this.state;\n\n    if (!this.state.code_response || !this.state.code_response.result)\n      return;\n\n    const data: Cpt = constructCpt(code_response.result[row])\n    this.checkFields(data, true)\n    this.setState({\n      code_info: data,\n    }, () => this.handleChangeSideModalBlockMode('view'));\n  };\n\n\n  handlePageChange = (currentPage: number, skip: number) => {\n    this.setState({\n      page: currentPage,\n    });\n\n    this.changePageUpdate(this.state.limit, skip);\n  };\n\n  handlePageSizeChange = value => {\n    let pageLimit = 100000;\n\n    if (this.state.totalCount >= pageLimit) {\n      this.setState({\n        isPageSizeModal: true,\n      });\n    } else {\n      this.setState({\n        limit: value,\n      });\n\n      this.changePageUpdate(value, value * this.state.page);\n    }\n  };\n\n  handleClickItemFromList = (key: string) => {\n    this.setState({default_clicked: key});\n    this.handleCloseSideModalBlock()\n    this.setState({\n      no_data_message: 'Searching for CPT codes',\n      page: 0,\n      loading_state: true,\n    });\n    if (key !== undefined) {\n      this.searchCode(\n        this.state.limit,\n        0,\n        this.state.default_filters,\n        this.state.global_filter,\n        this.state.default_sorting,\n        key,\n      )\n    }\n  };\n\n  // handleSetClickedCodeFromList = (item: number, key: string) => {\n  //   this.setState({\n  //     highlightedCodeFromList: item,\n  //   });\n  //   this.handleClickItemFromList(key);\n  // }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /*****************************  \n  ACTIONS / SIDE MODAL FUNCTIONS \n  ******************************/\n\n  handleCloseSideModalBlock = () => {\n    this.setState({\n      show_side_modal_block: 'none',\n      side_modal_block_mode: '',\n      code_info: constructEmptyCpt(),\n    });\n  };\n\n  handleChangeSideModalBlockMode = (value: 'view' | 'edit' | 'add' | '') => {\n    let title = '';\n    if (value && value === 'edit' && this.state.block_title) {\n      title = `Edit ${this.state.block_title}`;\n      const reform_data: Cpt = reconstructCpt(cloneDeep(this.state.code_info))\n      this.setState({ code_info: reform_data })\n    } else if (value && value === 'view' && this.state.code_info) {\n      title = this.state.code_info['code'] ? this.state.code_info['code'] : '';\n    } else if (value && value === 'add') {\n      title = `Add CPT Code`;\n    }\n    this.setState({\n      side_modal_block_mode: value,\n      block_title: title,\n    }, () => this.handleOpenBlock());\n  };\n\n  handleOpenBlock = () => {\n    this.setState({\n      show_side_modal_block: 'block',\n    }, () => this.passDataToSideModalBlockBody());\n  };\n\n  handleInvalidFieldsPrompt = () => {\n    this.setState({\n      isModalOpen: true,\n      modalTitle: 'Incomplete/Invalid Fields',\n      modalMessage: 'Please complete the form before proceeding.',\n    })\n  }\n\n\n  passDataToSideModalBlockBody = () => {\n\n    if (this.state.code_info && !this.state.code_info.gender_limited) {\n      this.state.code_info.gender = ''\n      this.setState({\n        code_info: this.state.code_info\n      });\n    }\n  };\n\n\n  checkFields = (formFields?: any, disableButton?: boolean) => {\n    this.setState({ loading_state: true })\n\n    if (formFields) {\n      let invalid_fields = this.getInvalidFields(formFields, disableButton);\n      if (!invalid_fields || invalid_fields.length === 0) {\n        if (this.state.disableSaveButton || !this.state.clickSaveButton) {\n          return\n        }\n        if (this.state.side_modal_block_mode === 'edit') {\n          this.setState({\n            clickSaveButton: false,\n            confirm_modal_message: 'Are you sure you want to edit this CPT code?',\n            confirm_modal_open: true,\n            confirm_modal_title: 'Confirm edit CPT code',\n            action_after_confirm: () => this.patchCode(formFields)\n          })\n        } else if (this.state.side_modal_block_mode === 'add') {\n          this.setState({\n            clickSaveButton: false,\n            confirm_modal_message: 'Are you sure you want to add this CPT code?',\n            confirm_modal_open: true,\n            confirm_modal_title: 'Confirm add CPT code',\n            action_after_confirm: () => this.addCodes(formFields)\n          })\n        }\n      } else {\n        this.handleInvalidFieldsPrompt()\n      }\n    }\n  }\n\n  getInvalidFields = (formFields: any, disableButton?: boolean) => {\n    let invalid_fields_submit: any[] = [];\n    let invalid_fields_editing: any[] = [];\n    let exclude_fields = {}\n    if (this.excludeFields !== undefined) {\n      exclude_fields = this.excludeFields\n    }\n    const fields_excluded: string[] = Object.keys(exclude_fields)\n    const form_keys: string[] = Object.keys(formFields)\n\n    form_keys.forEach(field => {\n      if (this.requiredFields !== undefined &&\n        this.requiredFields.includes(field) &&\n        !fields_excluded.includes(field) &&\n        !formFields[field]) {\n        if (!disableButton) {\n          invalid_fields_submit.push(field)\n        } else {\n          invalid_fields_editing.push(field)\n        }\n\n      }\n    });\n\n    const eff_date = moment(formFields['effectivity_date'])\n    const exp_date = moment(formFields['expiry_date'])\n    if (formFields &&\n      formFields['effectivity_date'] &&\n      formFields['expiry_date'] &&\n      eff_date.isValid() &&\n      exp_date.isValid() &&\n      eff_date.startOf('day').diff(exp_date.startOf('day')) > 0) {\n      if (disableButton) {\n        invalid_fields_editing.push('effectivity_date')\n      } else {\n        invalid_fields_submit.push('effectivity_date')\n      }\n    }\n\n    if (formFields && formFields['gender_limited'] && !formFields['gender']) {\n      if (!disableButton) {\n        invalid_fields_submit.push('gender')\n      } else {\n        invalid_fields_editing.push('gender')\n      }\n    }\n    if (!invalid_fields_editing || invalid_fields_editing.length === 0) {\n      this.setState({ disableSaveButton: false })\n    } else if (!this.state.disableSaveButton) {\n      this.setState({ disableSaveButton: true })\n    }\n    this.setState({ loading_state: false, invalid_fields: invalid_fields_submit })\n    return invalid_fields_submit\n  }\n\n\n\n  renderSideModalBlock(): JSX.Element {\n    const { classes } = this.props;\n\n    return (\n      <SideModalBlock\n        blockPosition={'fixed'}\n        title={this.state.block_title}\n        editIconDescription={'Edit Code'}\n        showBlock={this.state.show_side_modal_block}\n        classes={classes}\n        handleClose={this.handleCloseSideModalBlock}\n        sideModalBlockMode={this.state.side_modal_block_mode}\n        changeMode={this.handleChangeSideModalBlockMode}\n      >\n        {this.state.side_modal_block_mode ? (\n          <SideModalBody\n            formFields={this.state.code_info}\n            invalidFields={this.state.invalid_fields}\n            classes={this.props.classes}\n            handleClose={this.handleCloseSideModalBlock}\n            // deleteIcon={'Delete Code'}\n            disableSaveButton={this.state.disableSaveButton}\n            dynamicDropdownChoices={this.state.category_dropdown_choices}\n            refreshData={(data: any) => {\n              this.setState({ code_info: data },\n                () => this.checkFields(data, true))\n            }}\n            delete={(data: any) => {\n              if (this.state.side_modal_block_mode) {\n                if (this.state.side_modal_block_mode === 'edit') {\n                  this.setState({\n                    confirm_modal_message: 'Are you sure you want to delete this CPT code?',\n                    confirm_modal_open: true,\n                    confirm_modal_title: 'Confirm delete CPT code',\n                    action_after_confirm: () => this.deleteCPT(data['_id'])\n                  })\n                }\n              }\n            }}\n            handleSave={(formFields?: any) => {\n              if (this.state.side_modal_block_mode) {\n                this.setState({ clickSaveButton: true }, () => this.checkFields(formFields))\n              }\n            }}\n            formName={'CPT'}\n            mode={this.state.side_modal_block_mode ? this.state.side_modal_block_mode : ''}\n            checkBoxWithDropDownFieldsInitState={this.state.code_info && this.state.code_info['gender_limited'] ? true : false}\n            datePairField1MaxDate={\n              this.state.code_info &&\n                this.state.code_info['expiry_date'] &&\n                moment(this.state.code_info['expiry_date']).isValid() ?\n                moment(this.state.code_info['expiry_date']).format('MM-DD-YY').toString() : undefined\n            }\n            datePairField2MinDate={\n              this.state.code_info &&\n                this.state.code_info['effectivity_date'] &&\n                moment(this.state.code_info['effectivity_date']).isValid() ?\n                moment(this.state.code_info['effectivity_date']).format('MM-DD-YY').toString() : undefined\n            }\n          />\n        ) : null}\n      </SideModalBlock>\n    )\n  }\n\n  renderCodeInfo(): JSX.Element {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <li key={'version'} className={classes.codeHeader}>VERSION</li>\n        <li key={'year-of-release-value'} className={classes.codeHeaderValue}>2020</li>\n        <ListItemText key={'effectivity-date'}>\n          <div className={classes.codeHeader}>EFFECTIVITY DATE</div>\n          <div className={classes.codeHeaderValue}>Jan 1, 2020</div>\n        </ListItemText>\n      </React.Fragment>\n    )\n  }\n\n  renderCodeList(key: string): JSX.Element {\n    const { classes } = this.props;\n    const ranges = this.state.cpt_category_range\n    const categories = this.state.cpt_categories\n\n    let display : string = ''\n    if(ranges.length > 0 && categories.length > 0){\n      console.log('CROO', ranges)\n      const range = ranges[categories.indexOf(key)]\n      // console.log('RANGE', range, categories.length)\n      if(range){\n        display = `${range.slice(0, 4)}0000 - ${range.slice(0, 4)}9999 :`\n      }\n    }else{\n      return (\n        <>\n        </>\n      )\n    }\n\n    return (\n      <ListItemText\n        key={key}\n        classes={{\n          root: classes.codeListItemsRoot,\n          primary:\n            this.state.highlightedCodeFromList ===\n              categories.indexOf(key)\n              ? classes.codeListItemsSelected\n              : classes.codeListItems,\n        }}\n        onClick={() => {\n          if (categories.indexOf(key) !== this.state.highlightedCodeFromList) {\n            this.setState({\n              highlightedCodeFromList: categories.indexOf(key),\n            });\n            this.handleClickItemFromList(key);\n          }else {\n            this.setState({\n              highlightedCodeFromList: -1,\n            });\n            this.handleClickItemFromList('');\n          }\n        }}\n      >\n        <br/>{display}<br/>\n        {key}\n      </ListItemText>\n    )\n  }\n\n\n  render(): JSX.Element {\n    const { classes } = this.props;\n    const categories = this.state.cpt_categories\n\n    return (\n      <div>\n        {this.state.loading_state ? <Loader /> : null}\n\n\n        <Grid container>\n          <Grid container item xs={12} md={3}>\n            <Grid container className={classes.scrollList} style={{ maxHeight: 715, overflow: 'auto' }}>\n              <List>\n                {this.renderCodeInfo()}\n                {categories ? categories.map(key => this.renderCodeList(key)) : null}\n              </List>\n            </Grid>\n          </Grid>\n\n\n\n\n\n\n\n          <Grid container item xs={12} md={9} className={classes.selectedpage}>\n            <Grid container>\n              <Grid item xs={12} md={9}>\n                <TextField\n                  style={{ width: '100%' }}\n                  id=\"code_search\"\n                  placeholder=\"Search a code or description\"\n                  label=\"\"\n                  margin=\"none\"\n                  fullWidth\n                  className={classes.searchField}\n                  variant=\"outlined\"\n                  value={this.state.global_filter}\n                  inputProps={{ 'aria-label': 'bare' }}\n                  onChange={this.handleSearch}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Search style={{ color: 'rgba(54, 54, 54, 0.4)' }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n\n\n\n              <Grid item xs={8} md={3} className={classes.searchBar}>\n                <FontAwesomeIcon\n                  icon={faPlus}\n                  className={classes.addFieldIcon}\n                />\n                <Link className={classes.addACode} onClick={() => {\n                  this.setState({\n                    block_title: 'Add CPT Code',\n                    code_info: constructEmptyCpt(),\n                    disableSaveButton: true\n                  }, () => this.handleChangeSideModalBlockMode('add'));\n                }}>Add a Code</Link>\n              </Grid>\n\n\n\n\n\n              <GridHorizontalDivider height=\"30px\" />\n              <Grid style={{ minHeight: 690, overflow: 'auto' }}>\n                <TableComponent\n                  id=\"tab-all\"\n                  totalCount={this.state.totalCount}\n                  update={this.changePageUpdate}\n                  updateSorting={this.handleChangeSorting}\n                  rows={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['rows']\n                      : []\n                  }\n                  columns={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['columns']\n                      : []\n                  }\n                  message={\n                    this.state.global_filter\n                      ? 'No available data.'\n                      : this.state.no_data_message\n                  }\n                  onClickRow={this.handleClickRow}\n                  disableSelect\n                  disableSearch\n                  formattedColumns={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['formattedColumns']\n                      : {}\n                  }\n                  columnExtensions={\n                    Object.keys(this.state.code_data).length > 0\n                      ? this.state.code_data['columnExtensions']\n                      : []\n                  }\n                  onFilterChange={this.handleFilterByColumn}\n                  onSortingChange={this.handleChangeSorting}\n                  onPageChange={this.handlePageChange}\n                  ongPageSizeChange={this.handlePageSizeChange}\n                  defaultFilter={this.state.default_filters}\n                  currentPage={this.state.page}\n                  limit={this.state.limit}\n                  pageSizes={[10, 25, 50, 100]}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n\n\n\n        {this.renderSideModalBlock()}\n\n        <MsgModal\n          onClose={() => this.setState({ isModalOpen: false })}\n          title={this.state.modalTitle}\n          isModalOpen={this.state.isModalOpen}\n          message={this.state.modalMessage}\n        />\n        <ConfirmationModal\n          onClose={() => this.setState({ confirm_modal_open: false })}\n          title={this.state.confirm_modal_title}\n          isModalOpen={this.state.confirm_modal_open}\n          submitType={'confirm'}\n          onSubmit={() => {\n            if (this.state.action_after_confirm) {\n              this.state.action_after_confirm()\n            }\n          }}\n          message={this.state.confirm_modal_message} />\n      </div>\n    );\n  }\n}\n","import React, {\n  useState,\n  useEffect,\n} from 'react';\n\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { Store } from 'Components/Stores/IStore';\nimport { LookupActions } from './LookupActions';\nimport {\n  GridHorizontalDivider,\n} from 'Components/UI/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ICD10Section } from './Components/ICD10Section';\nimport { ICD10SynonymsSection } from './Components/ICD10SynonymsSection';\nimport { CPTSection } from './Components/CPTSection';\nimport { SideMenu } from 'Components/UI/SideMenu';\nimport classNames from 'classnames';\n\nimport {\n  Grid,\n  Typography,\n  Link\n} from '@material-ui/core';\n\nconst page_tab_titles: any = ['Codes', 'Locations', 'Industries'];\n\nconst sideBarItems = {\n  Codes: [\n    {\n      name: 'ICD-10',\n      label: ''\n    },\n    {\n      name: 'CPT',\n      label: ''\n    },\n    {\n      name: 'Doctor Specialization',\n      label: ''\n    },\n    {\n      name: 'Diagnosis - Procedures Matrix',\n      label: ''\n    },\n    {\n      name: 'ICD10 Synonyms',\n      label: ''\n    },\n  ], Locations: [\n    {\n      name: 'Regions',\n      label: ''\n    },\n    {\n      name: 'Provinces',\n      label: ''\n    },\n    {\n      name: 'Municipalities and Cities',\n      label: ''\n    },\n  ], Industries: [\n    {\n      name: 'Agriculture, Hunting, Forestry And Fishing Sector',\n      label: ''\n    },\n    {\n      name: 'Industry Sector',\n      label: ''\n    },\n    {\n      name: 'Service Sector',\n      label: ''\n    },\n  ]\n};\n\nconst useStyles = makeStyles(theme => ({\n  gridContainerNoPadding: {\n    padding: theme.spacing(1),\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: 700,\n    color: '#272e4c',\n  },\n  subSectionTitle: {\n    fontSize: 16,\n    fontWeight: 400,\n    color: '#272e4c',\n  },\n  gridContainer: {\n    backgroundColor: '',\n  },\n  headerTitle: {\n    fontSize: '1.5rem',\n    fontWeight: 800,\n  },\n  linkPrevious: {\n    fontSize: 12,\n    fontWeight: 300,\n    color: 'black',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n  },\n  sideBar: {\n    paddingRight: '10px',\n    paddingLeft: '10px',\n    borderRight: '1px solid #C3C3C3',\n  },\n  scrollList: {\n    paddingRight: '15px',\n    paddingLeft: '15px',\n    borderRight: '1px solid #C3C3C3',\n  },\n  selectedpage: {\n    paddingLeft: '37px',\n  },\n  linkCurrent: {\n    fontSize: 12,\n    fontWeight: 600,\n    color: 'black',\n    cursor: 'pointer',\n  },\n  main: {\n    backgroundColor: '#F5F7FB',\n    padding: '32px 24px',\n  },\n  gridItemLayout: {\n    padding: theme.spacing(1),\n  },\n  sideNavHeader: {\n    fontSize: 13,\n    fontWeight: 700,\n    color: 'rgba(39, 46, 76, 0.3)',\n  },\n  listItemTextRoot: {\n    whiteSpace: 'normal',\n    flex: 'none',\n  },\n  listItemTextPrimarySelected: {\n    fontSize: 14,\n    fontWeight: 700,\n    color: '#2c2e8e',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n  },\n  listItemTextPrimaryNotSelected: {\n    fontSize: 14,\n    color: '#272e4c',\n    cursor: 'pointer',\n  },\n  addFieldIcon: {\n    color: '#3AB77D',\n    cursor: 'pointer',\n    fontSize: 14,\n    marginRight: '15px',\n  },\n  searchBar: {\n    paddingRight: '15px',\n    marginTop: 15,\n    textAlign: 'center',\n  },\n  links: {\n    paddingRight: '8px',\n    marginTop: 15,\n    // textAlign: 'center',\n  },\n  searchField: {\n    backgroundColor: 'white',\n  },\n  addACode: {\n    fontSize: 14,\n    fontWeight: 700,\n    color: 'rgba(58, 183, 125, 1)',\n    cursor: 'pointer',\n  },\n  codeHeader: {\n    color: '#272E4C',\n    textAlign: 'left',\n    opacity: 0.6,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '12px',\n  },\n  codeHeaderValue: {\n    color: '#272E4C',\n    textAlign: 'left',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '16px',\n    fontWeight: 500,\n  },\n  codeListItemsRoot: {\n    flex: 'none',\n  },\n  codeListItems: {\n    fontSize: '14px',\n    color: '#272E4C',\n    textAlign: 'left',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    '&:hover': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n    '&$selected': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n  },\n  codeListItemsSelected: {\n    fontSize: '14px',\n    textDecoration: 'underline',\n    color: '#3AB77D',\n    fontWeight: 600,\n    textAlign: 'left',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n  },\n  codeNestedListItemsRoot: {\n    flex: 'none',\n  },\n  codeNestedListItems: {\n    fontSize: '14px',\n    color: '#272E4C',\n    textAlign: 'left',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    '&:hover': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n    '&$selected': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n  },\n  codeNestedListItemsSelected: {\n    fontSize: '14px',\n    textDecoration: 'underline',\n    color: '#3AB77D',\n    fontWeight: 600,\n    textAlign: 'left',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n  },\n  SideModalBlockContainer: {\n    position: 'fixed',\n    right: 0,\n    top: 0,\n    zIndex: 200,\n    backgroundColor: '#f5f7fb',\n    paddingLeft: '25px',\n    paddingRight: '25px',\n    paddingTop: '0px',\n    paddingBottom: '25px',\n    borderRadius: '10px',\n    boxShadow:\n      '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n  CodeInfoHeaders: {\n    paddingRight: '20px',\n  },\n  CodeInfoHeadersValues: {\n    paddingRight: '20px',\n  },\n  inputLabel: {\n    paddingRight: '20px',\n    color: '#272e4c',\n    fontSize: '12px'\n  },\n  keyboardDatePicker: {\n    marginTop: '10px',\n    marginBottom: '15px',\n    width: '212px',\n  },\n  viewHeader: {\n    color: '#272E4C',\n    textAlign: 'left',\n    opacity: 0.6,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '12px',\n  },\n  viewHeaderValue: {\n    color: '#272E4C',\n    textAlign: 'left',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '14px',\n    fontWeight: 600,\n  },\n  editButton: {\n    textDecoration: 'underline',\n    color: '#3AB77D',\n    fontSize: '0.875rem',\n    fontWeight: 600,\n    cursor: 'pointer',\n\n  },\n  deleteButton: {\n    textDecoration: 'underline',\n    color: '#272E4C',\n    opacity: 0.6,\n    cursor: 'pointer',\n  },\n  closeButton: {\n    color: '#272E4C',\n    '&hover': {\n      fontSize: '0.875rem',\n    }\n  },\n  sideBarContainer: {\n    borderRight: \"1px solid #ccc\",\n    paddingRight: \"25px\",\n  },\n  caretStyle: {\n    textDecoration: 'none',\n    color: '#272E4C',\n    opacity: 0.6\n  },\n  checkbox: {\n    '&.Mui-checked': {\n      color: '#1e2071',\n    },\n  },\n  menuList: {\n    display: \"inline-block\",\n    padding: \"10px 80px 10px 0\"\n  },\n  menuLink: {\n    color: \"#929292\",\n    display: \"block\",\n    fontSize: \"1.10em\",\n    '&:hover': {\n      color: \"#3ab77d\",\n    }\n  },\n  LinkActive: {\n    color: \"#3ab77d\",\n    fontWeight: \"bold\",\n    textDecoration: \"underline\"\n  }\n}));\n\nexport const LookupPage = () => {\n  const [activeHeader, setActiveHeader] = useState('Codes');\n  const [activeClass, setActiveClass] = useState(0);\n  const [activeItem, setActiveItem] = useState('ICD-10');\n\n\n\n  const [icdCategories, setICDCategories] = useState<string[]>([]);\n  const [icdCategoryDropdown, setICDCategoryDropdown] = useState<any>(undefined);\n\n  const [icdSynonymAction, setICDSynonymAction] = useState<any[]>([]);\n\n  const [cptCategories, setCPTCategories] = useState<string[]>([]);\n  const [cptCategoryRanges, setCPTCategoryRanges] = useState<string[]>([]);\n  const [cptCategoryDropdown, setCPTCategoryDropdown] = useState<any>(undefined);\n\n  const classes = useStyles();\n\n  const activeSideBarItem = (item) => {\n    setActiveItem(item);\n  }\n\n  const handleMenuClick = (item, index) => {\n    setActiveHeader(item);\n    setActiveClass(index)\n  }\n\n  useEffect(() => {\n    console.log('CHANGE TO icdSynonymAction', icdSynonymAction)\n  }, [icdSynonymAction])\n\n  return (\n    <div className={classes.main}>\n      <Grid\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n        spacing={0}\n        className={classes.gridContainer}\n      >\n        <Grid item>\n          <Typography className={classes.headerTitle}>Lookup</Typography>\n        </Grid>\n      </Grid>\n      <GridHorizontalDivider height=\"15px\" />\n\n\n\n\n\n\n\n\n      {/* HEADER */}\n\n      <Grid item xs={6}>\n        <ul style={{ padding: '0', margin: '0' }}>\n          {\n            page_tab_titles.map((item, i) => (\n              <li className={classes.menuList}>\n                <Link className={classNames(classes.menuLink, activeClass === i ? classes.LinkActive : null)} onClick={() => handleMenuClick(item, i)}>{item}</Link>\n              </li>\n            ))\n          }\n        </ul>\n      </Grid>\n\n\n\n\n\n\n\n\n\n\n\n      <Grid container justify=\"space-between\" spacing={0}>\n        <GridHorizontalDivider height=\"30px\" />\n\n\n        {/* SIDE MENU */}\n        <Grid item xs={2} className={classes.sideBarContainer}>\n          <SideMenu\n            items={sideBarItems[activeHeader]}\n            activeItems={activeSideBarItem}\n            reset={activeHeader}\n          ></SideMenu>\n        </Grid>\n\n\n        {/* SECTIONS */}\n        {activeItem === 'ICD-10' && activeHeader === 'Codes' ? (\n          <Grid item xs={12} md={10}>\n            <ICD10Section\n              classes={classes}\n              icdCategories={icdCategories}\n              setICDCategories={setICDCategories}\n              icdCategoryDropdown={icdCategoryDropdown}\n              setICDCategoryDropdown={setICDCategoryDropdown}\n            />\n          </Grid>\n\n        ) : activeItem === 'CPT' && activeHeader === 'Codes' ? (\n          <Grid item xs={12} md={10}>\n            <CPTSection\n              classes={classes}\n              cptCategories={cptCategories}\n              setCPTCategories={setCPTCategories}\n              cptCategoryRanges={cptCategoryRanges}\n              setCPTCategoryRanges={setCPTCategoryRanges}\n              cptCategoryDropdown={cptCategoryDropdown}\n              setCPTCategoryDropdown={setCPTCategoryDropdown}\n            />\n          </Grid>\n        ) : activeItem === 'ICD10 Synonyms' && activeHeader === 'Codes' ? (\n          <Grid item xs={12} md={10}>\n            <ICD10SynonymsSection\n              classes={classes}\n              icdSynonymAction={icdSynonymAction}\n              setICDSynonymAction={(data: any[]) => setICDSynonymAction([...data])}\n            />\n          </Grid>\n\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: Store) => state.home;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  Map: bindActionCreators(LookupActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };\n"],"sourceRoot":""}