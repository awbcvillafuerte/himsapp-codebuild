{"version":3,"sources":["../node_modules/@material-ui/icons/Visibility.js","Pages/Accounts/ActionConsts.ts","Pages/Accounts/AccountsActions.ts","Pages/Accounts/style.tsx","Pages/Accounts/Components/ChangePassword.tsx","Components/UI/ConfirmationModalComponent/index.tsx","Pages/Accounts/Components/Account.tsx","Pages/Accounts/Components/AddRoleBody.tsx","Pages/Accounts/Components/GroupsAndUsers.tsx","Pages/Accounts/AccountsPage.tsx"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","ActionConsts","ResetReducer","SetReducer","AccountsActions","payload","type","accountsPageStyles","makeStyles","theme","mainContainer","padding","main","backgroundColor","position","headMain","gridContainer","spacing","paddingBottom","gridContainerNoPadding","sectionTitle","fontSize","fontWeight","color","subSectionTitle","editBtn","width","alignRight","textAlign","sideBarContainer","borderRight","paddingRight","contentContainer","paddingLeft","sideBarLists","margin","listStyle","sideBarLink","display","fieldGroupTitle","listItemTextRoot","flex","listItemTextPrimarySelected","cursor","listItemTextPrimaryNotSelected","dropzone","height","marginTop","marginBottom","border","borderRadius","justifyContent","alignItems","flexDirection","inputLabel","keyboardDatePicker","checkbox","radio","appBar","top","bottom","breakpoints","up","grow","flexGrow","button","minHeight","minWidth","buttonTitle","buttonSubTitle","menuList","menuLink","LinkActive","textDecoration","changePasswordModalStyle","dialog","dialogAction","dialogContentContainer","container","closeButton","right","palette","grey","dialogTitle","inputTextField","iconEye","labelNote","errorMessage","errorIcon","ChangePassword","props","visible","onClose","userId","classes","handleTextFieldChange","e","prop","target","setPasswordValues","passwordValues","resetPasswordValues","oldPassword","newPassword","confirmPassword","setOerror","oError","error","setNerror","nError","setCerror","cError","validatePasswordValue","password","length","confirmNewPassword","newP1","newP2","React","useState","message","title","modalDone","setModalDone","Dialog","open","aria-labelledby","maxWidth","className","Grid","justify","direction","item","xs","DialogTitle","disableTypography","id","Box","IconButton","aria-label","onClick","DialogContent","errorMsg","label","onChange","note","DialogActions","Button","variant","constructParams","old_password","new_password","confirm_password","changePassword","then","data","console","log","status","catch","err","MsgModal","isModalOpen","visibile","TextFieldWithEyeIcon","options","setType","InputLabel","htmlFor","OutlinedInput","labelWidth","endAdornment","InputAdornment","style","useStyles","root","flexWrap","align","fontFamily","dialogContent","paddingTop","dialogContentText","boldText","cancelButton","marginRight","submitButton","marginLeft","textTransform","primary","danger","ConfirmationModalComponent","setVariant","zIndex","modalTitle","DialogContentText","modalMessage","closeText","clsx","onConfirm","confirmText","defaultProps","saveButton","background","userAlignRight","Account","styles","otherRoles","isConfirmModalOpen","setConfirmModalOpen","isSuccessModalOpen","setSuccessModalOpen","editUserDetails","setEditUserDetails","username","first_name","middle_name","last_name","email","expiry_date","location","job_title","department","profile_pic","employee_id","main_module","main_role","section","effectivity_date","roles","group","reports_to","editData","setEditData","testData","getUserDetails","window","href","substring","lastIndexOf","body","i","role","push","name","join","mode","defaultSelectOption","inputTypes","handleData","event","ChangePasswordModalVisibility","setChangePasswordModalVisibility","openChangePasswordModal","onSaveChanges","a","updateUserDetails","user_id","Typography","user_groups","is_locked","Link","job_position","disabled","views","Date","format","inputVariant","menuItems","invalidFields","includes","setMode","selectedItems","xIcon","AddRoleBody","handleOnSearch","list","arr","state","setState","handleRemoveItem","index","splice","handleOnSaveItems","onSave","comboArray","this","buttonsContainer","selectedContainer","selectedText","ReactSearch","searchLabel","onSearch","comboBoxMode","comboListsArray","map","icon","faTimesCircle","GroupsAndUsers","rows","viewOnly","activeItem","setActiveItem","activeClass","setActiveClass","showBlock","setShowBlock","isModalRemoveOpen","setIsModalRemoveOpen","classNames","handleMenuClick","placeholder","ReactTable","group_id","users_in_group","columns","columnExtensions","columnName","wordWrapEnabled","sortingStateColumnExtensions","sortingEnabled","onDeleteRow","row","user_account","last_activity_date","handleClose","items","ModalComponent","buttons","AccountsPage","setName","setViewOnly","loading","setLoading","isModalConfirmExitOpen","setIsModalConfirmExitOpen","isModalConfirmSaveOpen","setIsModalConfirmSaveOpen","userData","setUserData","userRoles","setUserRoles","handleModalConfirmationClose","SubHeader","headingTitle","breadCrumbsArray","buttonFunc","buttonName","layoutType","enableButton","edge","Avatar","src","alt","SideMenu","activeItems","mapStateToProps","accounts","mapDispatchToProps","dispatch","Map","bindActionCreators"],"mappings":"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","file":"static/js/8.7cd39ddc.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","export const ActionConsts = {\n\tAccounts: {\n\t\tResetReducer: 'Accounts_ResetReducer',\n\t\tSetReducer: 'Accounts_SetReducer',\n\t},\n};\n","//#region Global Imports\n// import { Dispatch } from 'redux';\n//#endregion Global Imports\n\n//#region Local Imports\nimport { ActionConsts } from './ActionConsts';\n// import { PlanetaryService } from 'Components/Services';\n//#endregion Local Imports\n\n//#region Interface Imports\n//#endregion Interface Imports\n\nexport const AccountsActions = {\n\tMap: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.Accounts.SetReducer,\n\t}),\n\n\tReset: () => ({\n\t\ttype: ActionConsts.Accounts.ResetReducer,\n\t}),\n\n\t// GetApod: (payload) => async (dispatch: Dispatch) => {\n\n\t// },\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const accountsPageStyles = makeStyles(theme => ({\n\tmainContainer: {\n\t\tpadding: '32px 24px 25px'\n\t},\n\tmain: {\n\t\tbackgroundColor: '#F5F7FB',\n\t\tpadding: '32px 24px',\n\t\tposition: 'relative'\n\t},\n\theadMain: {\n\t\t// backgroundColor: '#F5F7FB',\n\t},\n\tgridContainer: {\n\t\tpadding: theme.spacing(1),\n\t\tpaddingBottom: '75px'\n\t},\n\tgridContainerNoPadding: {\n\t\tpadding: theme.spacing(1),\n\t},\n\tsectionTitle: {\n\t\tfontSize: 24,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tsubSectionTitle: {\n\t\tfontSize: 14,\n\t\tfontWeight: 400,\n\t\tcolor: '#272e4c',\n\t},\n\teditBtn: {\n\t\twidth: '135px',\n\t\tfontSize: '14px',\n\t\tcolor: '#fff',\n\t},\n\talignRight: {\n\t\ttextAlign: 'right',\n\t},\n\tsideBarContainer: {\n\t\tborderRight: \"1px solid #ccc\",\n\t\tpaddingRight: \"25px\",\n\t},\n\tcontentContainer: {\n\t\tpaddingLeft: \"25px\",\n\t},\n\tsideBarLists: {\n\t\tpadding: 0,\n\t\tmargin: 0,\n\t\tlistStyle: 'none'\n\t},\n\tsideBarLink: {\n\t\tcolor: \"#272e4c\",\n\t\tmargin: \"0 0 10px\",\n\t\tdisplay: \"block\"\n\t},\n\tfieldGroupTitle: {\n\t\tfontSize: 13,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tlistItemTextRoot: {\n\t\tflex: 'none',\n\t},\n\tlistItemTextPrimarySelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 1)',\n\t\tcursor: 'pointer',\n\t},\n\tlistItemTextPrimaryNotSelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 0.3)',\n\t\tcursor: 'pointer',\n\t},\n\tdropzone: {\n\t\twidth: '460px',\n\t\theight: '88px',\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\tborder: '2px dashed rgba(30, 32, 113, 0.3)',\n\t\tborderRadius: '5px',\n\t\tbackgroundColor: '#e6e8ee',\n\t\tcolor: '#7b8094',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tflexDirection: 'column',\n\t},\n\tinputLabel: {\n\t\tcolor: '#272e4c',\n\t\tfontSize: '12px',\n\t\tmarginBottom: '5px'\n\t},\n\tkeyboardDatePicker: {\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\twidth: '212px',\n\t},\n\tcheckbox: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tradio: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tappBar: {\n\t\ttop: 'auto',\n\t\tbottom: 0,\n\t\tborder: '1px solid #707070',\n\t\tbackgroundColor: 'rgba(54, 54, 54, 0.64)',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: 'calc(100% - 72px)',\n\t\t},\n\t},\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\tbutton: {\n\t\tmargin: '0 10px',\n\t\tminHeight: '42px',\n\t\tminWidth: '150px',\n\t},\n\tbuttonTitle: {\n\t\tfontWeight: 700,\n\t\tfontSize: 13,\n\t},\n\tbuttonSubTitle: {\n\t\tfontWeight: 400,\n\t\tfontSize: 7,\n\t},\n\tmenuList: {\n\t\tdisplay: \"inline-block\",\n\t\tpadding: \"10px 45px 10px 0\"\n\t},\n\tmenuLink: {\n\t\tcolor: \"#929292\",\n\t\tdisplay: \"block\",\n\t\tfontSize: \"1.10em\",\n\t\t'&:hover': {\n\t\t\tcolor: \"#3ab77d\",\n\t\t}\n\t},\n\tLinkActive: {\n\t\tcolor: \"#3ab77d\",\n\t\tfontWeight: \"bold\",\n\t\ttextDecoration: \"underline\"\n\t}\n}));\n\nexport const changePasswordModalStyle = makeStyles(theme => ({\n\tdialog: {},\n\tdialogAction: {\n\t\tmarginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        justifyContent:'center'\n\t},\n\tdialogContentContainer: {\n        width: '100%'\n\t},\n\tcontainer: {\n        paddingRight:'15px',\n        paddingLeft:'15px',\n        width: '450px'\n\t},\n\tcloseButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n\t},\n\tdialogTitle: {\n        marginTop: theme.spacing(2),\n        // marginBottom: theme.spacing(2),\n        fontSize: '16px',\n        color: '#272E4C',\n\t\tfontWeight: 700\n\t},\n\tbutton: {\n\t\tmargin: '0 10px',\n\t\tminHeight: '42px',\n\t\tminWidth: '150px'\n\t},\n\tinputLabel: {\n\t\tcolor: '#272e4c',\n\t\tfontSize: '12px',\n\t\tmarginBottom: '5px'\n\t},\n\tinputTextField: {\n\t\twidth: '100%',\n\t\tmarginTop: theme.spacing(1),\n\t\tmarginBottom: theme.spacing(1),\n\t\tpaddingRight: 0\n\t},\n\ticonEye: {\n\t\tcolor: '#9EA3AC'\n\t},\n\tlabelNote: {\n\t\tcolor: '#797F92',\n\t\tfontSize: 12\n\t},\n\terrorMessage: {\n\t\tcolor: '#E53935',\n\t\tfontSize: 14\n\t},\n\terrorIcon: {\n\t\tcolor: '#E53935',\n\t}\n\t\n}));","import React from 'react'\nimport { changePasswordModalStyle } from '../style'\n\n// Material UI Imports\nimport {\n    Grid,\n    Box,\n    Dialog,\n    Button,\n    DialogTitle,\n    DialogActions,\n    DialogContent,\n    IconButton,\n    // TextField,\n    InputLabel,\n    OutlinedInput,\n    InputAdornment\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close'\nimport Visibility from '@material-ui/icons/Visibility'\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport { UI } from 'Components'\nimport { changePassword } from 'Pages/API/Calls/User'\n//import { SampleFetch } from 'Pages/API/Calls/testCall'\n\ninterface IProps {\n    visible: boolean,\n    userId: string,\n    onClose: () => void;\n}\n\ninterface textFieldProps {\n    label: string,\n    value: string,\n    classes: any,\n    note?: string,\n    id: string\n    error: boolean,\n    errorMsg: string,\n    onChange: (value, prop) => void;\n}\n\nexport const ChangePassword:\n    React.FC<IProps> = (props: IProps): JSX.Element => {\n\n        // React.useEffect(() => {\n        //     SampleFetch().then((res: any) => res.json().then((data) => {\n        //         console.log(data)\n        //     }))\n        // }, [])\n\n        const {\n            visible,\n            onClose,\n            userId\n        } = props;\n        const classes = changePasswordModalStyle()\n\n        // Password values handling\n        const handleTextFieldChange = (e, prop) => {\n            const { value } = e.target\n\n            setPasswordValues({ ...passwordValues, [prop]: value })\n        }\n\n        // Password values reset default\n        const resetPasswordValues = () => {\n            setPasswordValues({\n                oldPassword: '',\n                newPassword: '',\n                confirmPassword: ''\n            })\n            setOerror({\n                ...oError,\n                error: false\n            })\n            setNerror({\n                ...nError,\n                error: false\n            })\n            setCerror({\n                ...cError,\n                error: false\n            })\n\n            onClose()\n        }\n\n        const fetchChange = () => {\n            // Declare password values\n            const { oldPassword, newPassword, confirmPassword } = passwordValues\n\n\n            if (!validatePasswordValue(oldPassword)) setOerror({ message: 'Invalid input', error: true })\n            else setOerror({ message: '', error: false })\n\n            if (!validatePasswordValue(newPassword)) setNerror({ message: 'Invalid input', error: true })\n            else {\n                setNerror({ message: '', error: false })\n            }\n\n            if (!validatePasswordValue(confirmPassword)) setCerror({ message: 'Invalid input', error: true })\n            else {\n                if (confirmNewPassword(newPassword, confirmPassword)) {\n                    setNerror({ message: '', error: false })\n                    setCerror({ message: '', error: false })\n                } else {\n                    setNerror({ ...nError, error: true })\n                    setCerror({ message: 'Password doesn’t match', error: true })\n                }\n            }\n\n            if (validatePasswordValue(oldPassword) && validatePasswordValue(newPassword)\n                && validatePasswordValue(confirmPassword) && confirmNewPassword(newPassword, confirmPassword)) {\n                let constructParams = {\n                    old_password: oldPassword,\n                    new_password: newPassword,\n                    confirm_password: confirmPassword\n                }\n\n                changePassword(constructParams, userId).then((data) => {\n                    console.log(data);\n                    if (data.status === 200) {\n                        setModalDone({\n                            title: 'Change Password Success',\n                            message: 'You have successfully changed your password.',\n                            visible: true\n                        })\n                    } else {\n                        setModalDone({\n                            title: 'Error',\n                            message: 'Something went wrong. Your password has not been changed.',\n                            visible: true\n                        })\n                    }\n                }).catch((err) => {\n                    setModalDone({\n                        title: 'Error',\n                        message: err.message,\n                        visible: true\n                    })\n                })\n            }\n\n\n            // setNerror(newIsValid)\n            // setCerror(newCIsValid)\n\n        }\n\n        const validatePasswordValue = (password: string) => {\n            const minLenght = 6\n\n            if (password.length < minLenght) {\n                return false\n            }\n\n            return true\n        }\n\n        const confirmNewPassword = (newP1: string, newP2: string) => {\n            if ((newP1 !== '' && newP2 !== '') && (newP1 !== newP2)) {\n                return false\n            }\n\n            return true\n        }\n\n        const [passwordValues, setPasswordValues] = React.useState({\n            oldPassword: '',\n            newPassword: '',\n            confirmPassword: ''\n        })\n        const [oError, setOerror] = React.useState<any>({\n            message: '',\n            error: false\n        })\n        const [nError, setNerror] = React.useState<any>({\n            message: '',\n            error: false\n        })\n        const [cError, setCerror] = React.useState<any>({\n            message: '',\n            error: false\n        })\n\n        const [modalDone, setModalDone] = React.useState<any>({\n            message: '',\n            title: '',\n            visible: false\n        })\n\n        const handleDoneClose = () => {\n            setModalDone({\n                message: '',\n                title: '',\n                visibile: false\n            })\n        }\n\n        return (\n            <>\n                <Dialog\n                    open={visible}\n                    onClose={resetPasswordValues}\n                    aria-labelledby=\"form-dialog-title\"\n                    maxWidth=\"sm\"\n                    className={classes.dialog}>\n                    {/* Modal Content Area */}\n                    <Grid\n                        container\n                        className={classes.container}\n                        justify=\"flex-start\"\n                        alignItems=\"flex-start\"\n                        direction=\"column\">\n                        <Grid item xs>\n                            <DialogTitle\n                                className={classes.dialogTitle}\n                                disableTypography={false}\n                                id=\"form-dialog-title\" >\n                                <Box fontWeight={700}>Change Password</Box>\n                                <IconButton\n                                    aria-label=\"close\"\n                                    className={classes.closeButton}\n                                    onClick={resetPasswordValues}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </DialogTitle>\n                        </Grid>\n                        <Grid\n                            item\n                            xs\n                            className={classes.dialogContentContainer}>\n                            <DialogContent>\n                                <Grid\n                                    container\n                                    spacing={2}\n                                    justify=\"space-between\"\n                                    alignItems=\"flex-start\">\n                                    <Grid item xs={12}>\n                                        <TextFieldWithEyeIcon\n                                            id='oldPassword'\n                                            error={oError.error}\n                                            errorMsg={oError.message}\n                                            label='Enter your old password'\n                                            value={passwordValues.oldPassword}\n                                            onChange={handleTextFieldChange}\n                                            classes={classes} />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextFieldWithEyeIcon\n                                            id='newPassword'\n                                            error={nError.error}\n                                            errorMsg={nError.message}\n                                            label='Enter your new password'\n                                            note='At least 6 alphanumeric characters'\n                                            value={passwordValues.newPassword}\n                                            onChange={handleTextFieldChange}\n                                            classes={classes} />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextFieldWithEyeIcon\n                                            id='confirmPassword'\n                                            error={cError.error}\n                                            errorMsg={cError.message}\n                                            label='Confirm your new password'\n                                            value={passwordValues.confirmPassword}\n                                            onChange={handleTextFieldChange}\n                                            classes={classes} />\n                                    </Grid>\n                                </Grid>\n                            </DialogContent>\n                            <DialogActions className={classes.dialogAction}>\n                                <Grid\n                                    container\n                                    justify=\"center\"\n                                    alignItems=\"center\">\n                                    <Grid item xs={6}>\n                                        <Button\n                                            onClick={resetPasswordValues}\n                                            className={classes.button}\n                                            variant={'outlined'}\n                                            color={'secondary'}>Cancel</Button>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Button\n                                            onClick={fetchChange}\n                                            className={classes.button}\n                                            variant={'contained'}\n                                            color={'primary'}>Change</Button>\n                                    </Grid>\n                                </Grid>\n                            </DialogActions>\n                        </Grid>\n                    </Grid>\n                </Dialog>\n\n                <UI.MsgModal\n                    isModalOpen={modalDone.visible}\n                    onClose={handleDoneClose}\n                    title={modalDone.title}\n                    message={modalDone.message}\n                />\n            </>\n        )\n    }\n\n\n\nconst TextFieldWithEyeIcon: React.FC<textFieldProps> = (options: textFieldProps): JSX.Element => {\n    const {\n        classes,\n        label,\n        onChange,\n        value,\n        note,\n        id,\n        error,\n        errorMsg\n    } = options\n\n    const [type, setType] = React.useState<string>('password')\n\n    const handleClickShowPassword = () => {\n        if (type === 'password') {\n            setType('text')\n        } else {\n            setType('password')\n        }\n    }\n\n    return (\n        <>\n            <InputLabel\n                className={classes.inputLabel}\n                htmlFor=\"role_id\">{label}</InputLabel>\n            <span className={classes.labelNote}>{note && note}</span>\n            <OutlinedInput\n                id={id}\n                error={error}\n                type={type}\n                onChange={(e) => onChange(e, id)}\n                value={value}\n                className={classes.inputTextField}\n                labelWidth={0}\n                // helperText=\"Incorrect entry.\"\n                endAdornment={\n                    <InputAdornment position=\"end\">\n                        <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleClickShowPassword}>\n                            {type === 'text' ? <Visibility className={classes.iconEye} /> : <VisibilityOff className={classes.iconEye} />}\n                        </IconButton>\n                    </InputAdornment>\n                } />\n            {\n                error &&\n                <Grid container>\n                    <Grid item xs={9}>\n                        <span className={classes.errorMessage}>{errorMsg}</span>\n                    </Grid>\n                    <Grid item xs={3} style={{ textAlign: 'right' }}>\n                        <ErrorIcon className={classes.errorIcon} fontSize='small' />\n                    </Grid>\n                </Grid>\n            }\n        </>\n    )\n}","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Grid,\n  Button,\n  IconButton,\n} from '@material-ui/core/';\nimport CloseIcon from '@material-ui/icons/Close';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexWrap: 'wrap',\n  },\n  dialog: {\n    align: 'center',\n    justify: 'center',\n    width: '100%',\n    fontFamily: 'usual',\n  },\n  dialogContent: {\n    paddingTop: '0px',\n  },\n  dialogContentText: {\n    fontSize: '0.875rem',\n  },\n  container: {\n    paddingRight: '15px',\n    paddingLeft: '15px',\n    minWidth: '350px',\n  },\n  dialogTitle: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    fontSize: '16px',\n    color: '#272E4C',\n    fontWeight: 600,\n  },\n  dialogAction: {\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    justifyContent: 'center',\n  },\n  boldText: {\n    fontWeight: 'bold',\n  },\n  cancelButton: {\n    marginRight: 25,\n    paddingLeft: '24px',\n    paddingRight: '24px',\n    border: '1px solid #3AB77D',\n    color: '#3AB77D',\n    backgroundColor: '#FFFFFF',\n  },\n  submitButton: {\n    marginLeft: 25,\n    paddingLeft: '24px',\n    paddingRight: '24px',\n    textTransform: 'none',\n  },\n  primary: {\n    border: '1px solid #3AB77D',\n    color: '#FFFFFF',\n    backgroundColor: '#3AB77D',\n  },\n  danger: {\n    color: '#FFFFFF',\n    border: '1px solid #fd5451',\n    backgroundColor: '#fd5451',\n    '&:hover': {\n      backgroundColor: '#fd2724',\n    },\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}));\n\ninterface ConfirmationModalComponentProps {\n  id: string;\n  isModalOpen: boolean;\n  modalTitle: string;\n  modalMessage: string;\n  variant?: 'primary' | 'danger' | undefined;\n  closeText?: string;\n  confirmText?: string;\n  onClose: () => void;\n  onConfirm: () => void;\n}\n\nexport const ConfirmationModalComponent: React.FC<\n  ConfirmationModalComponentProps\n  > = (props: ConfirmationModalComponentProps): JSX.Element => {\n    const { isModalOpen, id } = props;\n    const classes = useStyles();\n    const [variant, setVariant] = React.useState('');\n\n    React.useEffect(() => {\n      if (props.variant) {\n        setVariant(props.variant);\n      }\n    }, [props.variant]);\n\n    return (\n      <Dialog\n        id={id}\n        open={isModalOpen}\n        aria-labelledby=\"modal-title\"\n        className={classes.dialog}\n        style={{ zIndex: 9999 }}\n      >\n        <div>\n          <Grid\n            container\n            className={classes.container}\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            direction=\"column\"\n          >\n            <Grid item xs>\n              <DialogTitle\n                className={classes.dialogTitle}\n                disableTypography={true}\n                id=\"modal-title\"\n              >\n                {props.modalTitle}\n                <IconButton\n                  aria-label=\"close\"\n                  className={classes.closeButton}\n                  onClick={props.onClose}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </DialogTitle>\n            </Grid>\n            <Grid item xs>\n              <DialogContent\n                className={classes.dialogContent}\n                style={{ padding: '0px 20px 10px 20px' }}\n              >\n                <DialogContentText className={classes.dialogContentText}>\n                  {props.modalMessage}\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions className={classes.dialogAction}>\n                <Button\n                  className={classes.cancelButton}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={props.onClose}\n                >\n                  {props.closeText || 'Cancel'}\n                </Button>\n                <Button\n                  className={clsx(classes.submitButton, classes[variant])}\n                  variant=\"contained\"\n                  onClick={props.onConfirm}\n                >\n                  {props.confirmText || 'Submit'}\n                </Button>\n              </DialogActions>\n            </Grid>\n          </Grid>\n        </div>\n      </Dialog>\n    );\n  };\n\nConfirmationModalComponent.defaultProps = {\n  id: 'confirm-modal-id',\n  isModalOpen: false,\n  modalTitle: '',\n  modalMessage: '',\n  variant: 'primary',\n};\n","import * as React from 'react';\nimport {\n    Grid,\n    // FormControl, \n    InputLabel,\n    Typography,\n    Link,\n    Button,\n    // TextareaAutosize,\n} from '@material-ui/core';\n//import { ReactTable } from 'Components/UI/TableComponent/ReactTable';\n//import { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { BasicTextField, BasicSelect, FloatingFooter, MsgModal } from 'Components/UI';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport { useState } from 'react';\nimport { ChangePassword } from './ChangePassword'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { updateUserDetails } from '../../API/Calls/User';\nimport { getUserDetails } from 'Pages/API/Calls/User';\nimport { ConfirmationModalComponent } from 'Components/UI/ConfirmationModalComponent';\n\nconst useStyles = makeStyles(() => ({\n    saveButton: {\n        width: '135px',\n        fontSize: '14px',\n        color: '#fff',\n    },\n    cancelButton: {\n        width: '135px',\n        fontSize: '14px',\n        marginRight: '14px',\n        color: '#fff',\n        background: '#3C394A'\n    },\n    userAlignRight: {\n        textAlign: 'right',\n    }\n\n}));\n\nexport interface IAccountsProps {\n    rows?: any,\n    viewOnly: boolean,\n    classes: any,\n    mode: string,\n    invalidFields?: any[],\n    data: any,\n    setMode: (data) => void,\n    otherRoles: string\n}\n\ninterface editData {\n    username: string,\n    first_name: string,\n    middle_name: string,\n    last_name: string,\n    email: string,\n    expiry_date: string,\n    location: string,\n    job_title: string,\n    department: string,\n    profile_pic: string,\n    employee_id: string,\n    main_module: string,\n    main_role: string,\n    section: string,\n    effectivity_date: string,\n    roles: string,\n    group: string,\n    reports_to: string\n}\n\nexport const Account: React.FC<IAccountsProps> = (props: IAccountsProps): JSX.Element => {\n    const styles = useStyles();\n    const otherRoles: any = [];\n    const [isConfirmModalOpen, setConfirmModalOpen] = useState(false);\n    const [isSuccessModalOpen, setSuccessModalOpen] = useState(false);\n    const [userId] = useState('');\n    const [editUserDetails, setEditUserDetails] = useState({});\n    const [editData, setEditData] = React.useState<editData>({\n        username: '',\n        first_name: '',\n        middle_name: '',\n        last_name: '',\n        email: '',\n        expiry_date: '',\n        location: '',\n        job_title: '',\n        department: '',\n        profile_pic: '',\n        employee_id: '',\n        main_module: '',\n        main_role: '',\n        section: '',\n        effectivity_date: '',\n        roles: '',\n        group: '',\n        reports_to: '',\n    })\n    const testData = {\n        // \"first_name\": \"test\",\n        // \"middle_name\": \"test\",\n        // \"last_name\": \"test\",\n        // \"group\": {\n        //     \"_id\": \"5e3165f4f8d04a10b1448e7c\",\n        //     \"name\": \"Membership Person GROUP\",\n        //     \"description\": \"Membership Group of Person\",\n        //     \"user_count\": 0,\n        //     \"effectivity_date\": \"2020-01-02T00:00:00.000Z\",\n        //     \"date_updated\": \"2020-01-29T11:01:08.506Z\",\n        //     \"is_processmaker\": false,\n        //     \"roles\": [\n        //         {\n        //             \"_id\": \"5e313a9324f8df078f752f92\",\n        //             \"name\": \"Person Profile Role\",\n        //             \"role_id\": \"MembershipPersonProfile\",\n        //             \"is_processmaker\": false,\n        //             \"effectivity_date\": \"2020-01-02T00:00:00.000Z\"\n        //         }\n        //     ]\n        // },\n        // \"email\": \"test@gmail.com\",\n        // \"employee_id\": \"123123\",\n        // \"department\": \"Department 1\",\n        // \"job_title\": \"rt\",\n        // \"location\": \"test\",\n        // \"section\": \"test\",\n        // \"username\": \"babiday_number_two\",\n        // \"main_module\": \"User Management\",\n        // \"main_role\": \"User Access Admin\",\n        // \"roles\": [\n        //     {\n        //         \"_id\": \"5e313a9324f8df078f752f92\",\n        //         \"name\": \"Person Profile Role\",\n        //         \"description\": \"description\",\n        //         \"role_id\": \"MembershipPersonProfile\",\n        //         \"is_processmaker\": false,\n        //         \"effectivity_date\": \"2020-01-02T00:00:00.000Z\",\n        //         \"rbac\": [\n        //             {\n        //                 \"_id\": \"5e312de4664c2d0b1fce7820\",\n        //                 \"module\": \"Membership\",\n        //                 \"method\": \"GET\",\n        //                 \"resource\": \"\",\n        //                 \"name\": \"Person Profile\",\n        //                 \"operation\": \"Search\",\n        //                 \"policy\": \"can search for a person profile\",\n        //                 \"policy_id\": \"MS2\",\n        //                 \"element_id\": \"\",\n        //                 \"effectivity_date\": \"2020-01-02T00:00:00.000Z\"\n        //             },\n        //             {\n        //                 \"_id\": \"5e312de4664c2d0b1fce781e\",\n        //                 \"module\": \"Membership\",\n        //                 \"method\": \"POST\",\n        //                 \"resource\": \"\",\n        //                 \"name\": \"Person Profile\",\n        //                 \"operation\": \"Create\",\n        //                 \"policy\": \"can create a person profile\",\n        //                 \"policy_id\": \"MS1\",\n        //                 \"element_id\": \"\",\n        //                 \"effectivity_date\": \"2020-01-02T00:00:00.000Z\"\n        //             }\n        //         ],\n        //         \"main_module\": \"Membership\"\n        //     }\n        // ],\n        // \"profile_pic\": \"\"\n        username: '',\n        first_name: '',\n        middle_name: '',\n        last_name: '',\n        email: '',\n        expiry_date: '',\n        location: '',\n        job_title: '',\n        department: '',\n        profile_pic: '',\n        employee_id: '',\n        main_module: '',\n        main_role: '',\n        section: '',\n        effectivity_date: '',\n        roles: '',\n        group: '',\n        reports_to: '',\n\n    }\n\n    const getLastSegment = () => {\n        return window.location.href.substring(window.location.href.lastIndexOf('/') + 1)\n    }\n\n    React.useEffect(() => {\n        getUserDetails(getLastSegment())\n            .then((data) => {\n                setEditData(data.body)\n\n                for (var i = 1; i < data.body.role.length; i++) {\n                    otherRoles.push(data.body.role[i].name)\n                }\n\n                otherRoles.join(', ')\n            })\n            .catch(error => {\n                console.log('get user error: ', error);\n            });\n    }, []);\n\n    const { classes, mode } = props;\n    //const { rows, viewOnly, classes, mode } = props;\n    //console.log(rows, viewOnly);\n\n    const defaultSelectOption = { name: 'Intellicare - Head Office', value: 'Intellicare - Head Office' };\n\n    const [inputTypes] = useState([\n        defaultSelectOption,\n        { name: 'Text Field', value: 'Text Field' },\n        //{ name: 'Dropdown', value: 'Dropdown' },\n    ]);\n\n    //const [fieldInputType, setFieldInputType] = useState('');\n\n    // const handleFieldInputTypeChange = (\n    //     event: React.ChangeEvent<HTMLInputElement>,\n    // ) => {\n    //     setFieldInputType(event.target.value);\n    // };\n\n    const handleData = (event, prop) => {\n        setEditData({\n            ...editData,\n            [prop]: event.target.value\n        });\n    };\n\n    // const fakeRows: any = [\n    // \t{\n    // \t\tobject_and_operations: 'User Activity Logs',\n    //         policies: '2',\n    //         policy_id: '31',\n    //     },\n    //     {\n    // \t\tobject_and_operations: 'User Activity Logs',\n    //         policies: '123',\n    //         policy_id: '123321',\n    //     },\n    //     {\n    // \t\tobject_and_operations: 'User Activity Logs2',\n    //         policies: '4555',\n    //         policy_id: '123132',\n    //     },\n    //     {\n    // \t\tobject_and_operations: 'User Activity Logs2',\n    //         policies: '53',\n    //         policy_id: '4',\n    //     },\n    // ];\n\n\n    // const columns: any = [\n    // \t{ \n    // \t\tname: 'object_and_operations',\n    // \t\ttitle: 'Object and Operations',\n    //     },\n    //     { \n    // \t\tname: 'policies',\n    // \t\ttitle: 'Policies',\n    //     },\n    //     { \n    // \t\tname: 'policy_id',\n    // \t\ttitle: 'Policy ID',\n    //     },\n    //     { \n    // \t\tname: 'action_delete',\n    //         title: ' ',\n    //         getCellValue: () => ('-') \n    //     },\n    // ]\n    const [ChangePasswordModalVisibility, setChangePasswordModalVisibility] = React.useState<boolean>(false);\n\n    // const updateUserDetails = (prop, value) => {\n    //     setUserDetails({\n    //         ...userDetails,\n    //         [prop]: value\n    //     })\n    // }\n\n    const openChangePasswordModal = () => {\n        setChangePasswordModalVisibility(true);\n    }\n\n    // const updateUser = async () => {\n    //     const result = await onSaveChanges();\n    //     const details = await result;\n    //     console.log(editUserDetails)\n    //     if (Object.keys(editUserDetails).length) {\n    //         updateUserDetails(props.data.user_id, details)\n    //             .then(data => {\n    //                 console.log(data)\n    //             })\n    //             .catch(error => {\n    //                 console.log('update user error: ', error);\n    //             });\n    //     }\n    // }\n    const onSaveChanges = async () => {\n        setEditUserDetails(editData);\n        console.log(editData)\n        console.log(editUserDetails)\n        console.log(testData)\n        let payload = editData\n        updateUserDetails(props.data.user_id, payload)\n            .then(data => {\n                console.log(data)\n                setConfirmModalOpen(false); //for testing\n                setSuccessModalOpen(true); //for testing\n            })\n            .catch(error => {\n                console.log('update user error: ', error);\n            });\n    }\n\n    const viewRoleBody = () => {\n        return (\n            <>\n                <Grid item xs={12}>\n                    <Typography><b>ACCOUNT</b></Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">USERNAME</InputLabel>\n                    <Typography><b>{props.data.username}</b></Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">PRIMARY ROLE AND MODULE</InputLabel>\n                    <Typography><b>{props.data.main_role + \" - \" + props.data.main_module}</b></Typography>\n                    {/* <TextareaAutosize></TextareaAutosize> */}\n                    {/*<BasicTextField></BasicTextField>*/}\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">EMAIL</InputLabel>\n                    <Typography><b>{props.data.email}</b></Typography>\n                    {/*<BasicTextField></BasicTextField>*/}\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">USER GROUPS</InputLabel>\n                    <Typography><b><u>{props.data.user_groups == null || undefined ? \"N/A\" : props.data.user_groups}</u></b></Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">PASSWORD</InputLabel>\n                    <Typography>{\"*****\"}</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">ROLES FROM USER GROUPS</InputLabel>\n                    <Typography><b><u>{props.data.roles == null || undefined ? \"N/A\" : props.data.roles}</u></b></Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">STATUS</InputLabel>\n                    <Typography><b>{props.data.is_locked ? \"Locked\" : \"Unlocked\"}</b></Typography>\n                    {props.data.is_locked ? <Link>Unlock User</Link> : null}\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">OTHER ROLES</InputLabel>\n                    <Typography><b><u>{props.otherRoles}</u></b></Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">EFFECTIVITY DATE</InputLabel>\n                    <Typography><b>{props.data.effectivity_date}</b></Typography>\n                    {/* <KeyboardDatePicker\n                        views={[\"year\",\"date\",\"month\"]}\n                        value={new Date()}\n                        format={'MMM DD, YYYY'}\n                        style={{width: \"100%\", marginTop: 10}}\n                        onChange={(e) => {\n                            console.log(e);\n                        }}\n                        inputVariant={'outlined'}\n                        // disableFuture\n\t\t            /> */}\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">EXPIRY DATE (If applicable)</InputLabel>\n                    <Typography><b>{props.data.expiry_date}</b></Typography>\n                    {/* <KeyboardDatePicker\n                        views={[\"year\",\"date\",\"month\"]}\n                        value={new Date()}\n                        style={{width: \"100%\", marginTop: 10}}\n                        format={'MMM DD, YYYY'}\n                        onChange={(e) => {\n                            console.log(e);\n                        }}\n                        inputVariant={'outlined'}\n                        // disableFuture\n\t\t            /> */}\n                </Grid>\n                <Grid item xs={12}></Grid>\n                <Grid item xs={12}></Grid>\n                <Grid item xs={12}>\n                    <Typography><b>PROFILE</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">FIRST NAME</InputLabel>\n                    <Typography><b>{props.data.first_name}</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">MIDDLE NAME</InputLabel>\n                    <Typography><b>{props.data.middle_name}</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">LAST NAME</InputLabel>\n                    <Typography><b>{props.data.last_name}</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">EMPLOYEE ID NUMBER</InputLabel>\n                    <Typography><b>{props.data.employee_id}</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">DEPARTMENT</InputLabel>\n                    <Typography><b>{props.data.department}</b></Typography>\n                </Grid><Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">JOB POSITION / RANK</InputLabel>\n                    <Typography><b>{props.data.job_position}</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">SECTION</InputLabel>\n                    <Typography><b>{props.data.section}</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">LOCATION</InputLabel>\n                    <Typography><b>{props.data.location}</b></Typography>\n                </Grid>\n            </>\n        )\n    }\n\n    const addRoleBody = () => {\n        return (\n            <>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">MODULE</InputLabel>\n                    <Typography><b>User Management</b></Typography>\n                    <Link>Change Module</Link>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">ROLE ID</InputLabel>\n                    <Typography><b>RID2</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">DESCRIPTION</InputLabel>\n                    {/* <TextareaAutosize></TextareaAutosize> */}\n                    <BasicTextField></BasicTextField>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">ROLE NAME</InputLabel>\n                    <BasicTextField></BasicTextField>\n                </Grid>\n                <Grid item xs={6}>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">EFFECTIVITY DATE</InputLabel>\n                    <KeyboardDatePicker\n                        views={[\"year\", \"date\", \"month\"]}\n                        value={new Date()}\n                        format={'MMM DD, YYYY'}\n                        style={{ width: \"100%\", marginTop: 10 }}\n                        onChange={(e) => {\n                            console.log(e);\n                        }}\n                        inputVariant={'outlined'}\n                    // disableFuture\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">EXPIRY DATE (If applicable)</InputLabel>\n                    <KeyboardDatePicker\n                        views={[\"year\", \"date\", \"month\"]}\n                        value={new Date()}\n                        style={{ width: \"100%\", marginTop: 10 }}\n                        format={'MMM DD, YYYY'}\n                        onChange={(e) => {\n                            console.log(e);\n                        }}\n                        inputVariant={'outlined'}\n                    // disableFuture\n                    />\n                </Grid>\n            </>\n        )\n    }\n\n    const editRoleBody = () => {\n        return (\n            <>\n                <Grid item xs={12}>\n                    <Typography><b>ACCOUNT</b></Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Username</InputLabel>\n                    <BasicTextField\n                        onChange={(e) => {\n                            console.log(e.target.value)\n                            handleData(e, 'username')\n                        }}\n                        value={editData.username} />\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Primary Role</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        handleData(e, 'main_role')\n                    }}\n                        value={editData.main_role} />\n                    {/* <TextareaAutosize></TextareaAutosize> */}\n                    {/*<BasicTextField></BasicTextField>*/}\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Primary Module</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        handleData(e, 'main_module')\n                    }}\n                        value={editData.main_module} />\n                    {/* <TextareaAutosize></TextareaAutosize> */}\n                    {/*<BasicTextField></BasicTextField>*/}\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Email</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        handleData(e, 'email')\n                    }}\n                        value={editData.email} />\n                    {/*<BasicTextField></BasicTextField>*/}\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">User Groups</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        handleData(e, 'group')\n                    }}\n                        value={editData.group} />\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Password</InputLabel>\n                    <BasicTextField disabled value=\"*****\"></BasicTextField>\n                    <Link\n                        onClick={openChangePasswordModal}>Change Password</Link>\n                    <ChangePassword\n                        userId={userId}\n                        visible={ChangePasswordModalVisibility}\n                        onClose={() => { setChangePasswordModalVisibility(false) }} />\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Roles from User Groups</InputLabel>\n                    <Typography><b><u>{props.data.roles == null || undefined ? \"N/A\" : props.data.roles}</u></b></Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel disabled className={classes.inputLabel} htmlFor=\"role_id\">Status</InputLabel>\n                    <BasicTextField disabled value={props.data.is_locked ? \"Locked\" : \"Unlocked\"}></BasicTextField>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Other Roles</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                    }}\n                        value={props.otherRoles} />\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Effectivity Date</InputLabel>\n                    <KeyboardDatePicker\n                        views={[\"year\", \"date\", \"month\"]}\n                        value={new Date()}\n                        format={'MMM DD, YYYY'}\n                        style={{ width: \"100%\", marginTop: 10 }}\n                        onChange={(e) => {\n                            console.log(e);\n                        }}\n                        inputVariant={'outlined'}\n                    // disableFuture\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Expiry Date</InputLabel>\n                    <KeyboardDatePicker\n                        views={[\"year\", \"date\", \"month\"]}\n                        value={new Date()}\n                        style={{ width: \"100%\", marginTop: 10 }}\n                        format={'MMM DD, YYYY'}\n                        onChange={(e) => {\n                            console.log(e);\n                        }}\n                        inputVariant={'outlined'}\n                    // disableFuture\n                    />\n                </Grid>\n                <Grid item xs={12}></Grid>\n                <Grid item xs={12}></Grid>\n                <Grid item xs={12}>\n                    <Typography><b>Edit Profile</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">First Name</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        handleData(e, 'first_name')\n                    }}\n                        value={editData.first_name} />\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Middle Name</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        handleData(e, 'middle_name')\n                    }}\n                        value={editData.middle_name} />\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Last Name</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        handleData(e, 'last_name')\n                    }}\n                        value={editData.last_name} />\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Employee ID Number</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        handleData(e, 'employee_id')\n                    }}\n                        value={editData.employee_id} />\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Department</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        handleData(e, 'department')\n                    }}\n                        value={editData.department} />\n                </Grid><Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Job Position / Rank</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        handleData(e, 'job_title')\n                    }}\n                        value={editData.job_title} />\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Section</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        handleData(e, 'section')\n                    }}\n                        value={editData.section} />\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Location</InputLabel>\n                    <BasicSelect\n                        id=\"addFieldInputType\"\n                        menuItems={inputTypes}\n                        value={defaultSelectOption.value}\n                        error={props.invalidFields && props.invalidFields.includes('Input type not selected')}\n                        onChange={(e) => {\n                            handleData(e, 'location')\n                        }}\n                        width=\"100%\"\n                    />\n                </Grid>\n                <FloatingFooter>\n                    <Grid item xs={12} className={styles.userAlignRight}>\n                        <Button onClick={() => { props.setMode(\"view\") }} className={styles.cancelButton} variant=\"contained\" color=\"secondary\">Cancel</Button>\n                        <Button onClick={() => { setConfirmModalOpen(true) }} className={styles.saveButton} variant=\"contained\" color=\"primary\">Save Changes</Button>\n                    </Grid>\n                </FloatingFooter>\n                <ConfirmationModalComponent\n                    id=\"update-user-confirm-modal\"\n                    isModalOpen={isConfirmModalOpen}\n                    modalTitle={\"Confirm Changes\"}\n                    modalMessage={\"Are you sure you want to update your account details?\"}\n                    closeText=\"Cancel\"\n                    confirmText=\"Save Changes\"\n                    onClose={() => {\n                        setConfirmModalOpen(false);\n                    }}\n                    onConfirm={() => {\n                        onSaveChanges()\n                    }}\n                />\n                <MsgModal\n                    isModalOpen={isSuccessModalOpen}\n                    onClose={() => {\n                        setSuccessModalOpen(false);\n                    }}\n                    title={\"Changes Saved\"}\n                    message={\"Your changes to your account have been saved successfully.\"}\n                />\n            </>\n        )\n    }\n\n    return (\n        <>\n            <Grid container xs={12} spacing={3}>\n                {\n                    mode === 'view' ? (\n                        viewRoleBody()\n                    ) : mode === 'edit' ? (\n                        editRoleBody()\n                    ) : mode === 'add' ? (\n                        addRoleBody()\n                    ) : null\n                }\n                {/* <Grid item xs={12}>\n                    <ReactSearch \n                        onSearch={()=> console.log('on search')} \n                        placeholder={'Search policies'}\n                    />\n                    <ReactTable \n                        rows={fakeRows}\n                        columns={columns}\n                        enableGrouping={true}\n                        groupColumnName={'object_and_operations'}\n                        viewOnly={false}\n                        columnExtensions={\n                            [{\n                                columnName: 'action_delete',\n                                width: 75,\n                                wordWrapEnabled: true,\n                                align: 'center'\n                            }]\n                        }\n                        message={'There are no user accounts to show yet.'}\n                        sortingStateColumnExtensions={[\n                            { columnName: 'action_delete', sortingEnabled: false }\n                        ]}\n                        onDeleteRow={(row) => {\n                            console.log(row, 'rowdeleted')\n                        }}\n                    />\n                </Grid> */}\n            </Grid>\n        </>\n    )\n}","import * as React from 'react';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n// import { InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n    selectedItems: {\n        borderRadius: 20,\n        fontSize: 13,\n        backgroundColor: '#d1d4db',\n        padding: '5px 10px'\n    },\n    xIcon: {\n        fontSize: 16\n    }\n}));\nconsole.log(useStyles);\n\ninterface IAddRoleBodyProps {\n    onClose: () => void;\n    onSave: (items) => void;\n}\n\ninterface IAddRoleBodyState {\n    selectedItems: any;\n    comboArray: any;\n}\n\nexport class AddRoleBody extends React.Component<IAddRoleBodyProps, IAddRoleBodyState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedItems: [],\n            comboArray: [],\n        }\n    }\n    // const {} = props;\n    // const classes = useStyles();\n    // const [selectedItems, setSelectedItems] = React.useState<any>([]);\n    componentDidMount() {\n        this.setState({\n            comboArray: [\n                {\n                    name: 'John Ernest Seraspi',\n                    value: 'test',\n                },\n                {\n                    name: 'Teqpwoe',\n                    value: 'test2',\n                },\n            ]\n        })\n    }\n\n    handleOnSearch = (list) => {\n        let arr = this.state.selectedItems;\n        arr.push(list);\n        this.setState({\n            selectedItems: arr\n        })\n        console.log(arr);\n    }\n\n    handleRemoveItem = (index) => {\n        let arr = this.state.selectedItems;\n        arr.splice(index, 1);\n        this.setState({\n            selectedItems: arr\n        })\n    }\n\n    handleOnSaveItems = () => {\n        this.props.onSave(this.state.selectedItems);\n    }\n\n    public render(): JSX.Element {\n        const classes = {\n            buttonsContainer: {\n                padding: '1em',\n            },\n            selectedContainer: {\n                padding: '3em 0 2em'\n            },\n            selectedItems: {\n                borderRadius: 20,\n                fontSize: 13,\n                backgroundColor: '#d1d4db',\n                padding: '5px 10px',\n                margin: '5px',\n                display: 'inline-block',\n            },\n            selectedText: {\n                paddingRight: '5px'\n            },\n            saveButton: {\n                width: '135px',\n                fontSize: '14px',\n                color: '#fff',\n            },\n            cancelButton: {\n                width: '135px',\n                fontSize: '14px',\n            }\n        }; \n        \n        return (\n            <>\n                <ReactSearch \n                    searchLabel={'Search user account'} \n                    onSearch={this.handleOnSearch}\n                    comboBoxMode={true}\n                    comboListsArray={this.state.comboArray}\n                />\n                <div style={classes.selectedContainer}>\n                    <div>\n                        <label>Selected Users</label>\n                    </div>\n                    { this.state.selectedItems.map((item,index) => \n                                <div style={classes.selectedItems}>\n                                    <span style={classes.selectedText}>{item}</span>\n                                    <span onClick={() => this.handleRemoveItem(index)}>\n                                        <FontAwesomeIcon icon={faTimesCircle}/>\n                                    </span>\n                                </div>\n                            ) \n                        }\n                </div>\n                <Grid container spacing={1}>\n                    <Grid item xs={6}>\n                        <Button style={classes.cancelButton} variant=\"outlined\" color=\"secondary\" onClick={() => this.props.onClose()}>Cancel</Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button disabled={this.state.selectedItems.length < 1 ? true : false} style={classes.saveButton} variant=\"contained\" color=\"primary\" onClick={() => this.handleOnSaveItems()}>Save</Button> \n                    </Grid>\n                </Grid>\n            </>\n        )\n    }\n\n}\n// export const AddRoleBody : React.FC<IAddRoleBodyProps> = (props: IAddRoleBodyProps): JSX.Element => {\n   \n// }","import * as React from 'react';\nimport { Typography, Grid, Link, Button } from '@material-ui/core';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { ReactTable } from 'Components/UI/TableComponent/ReactTable';\nimport { useState } from 'react';\nimport classNames from 'classnames';\nimport { SideModalBlock } from 'Components/UI';\nimport { AddRoleBody } from './AddRoleBody';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\n\nexport interface IGroupsAndUsersProps {\n    rows?: any,\n    viewOnly: boolean,\n    classes: any\n}\n\nexport const GroupsAndUsers : React.FC<IGroupsAndUsersProps> = (props: IGroupsAndUsersProps): JSX.Element => {\n    const {\n        rows,\n        viewOnly, \n        classes\n    } = props;\n    const [activeItem, setActiveItem] = useState('Groups');\n    const [activeClass, setActiveClass] = useState(0);\n    const [showBlock, setShowBlock] = useState('none');\n    const [isModalRemoveOpen, setIsModalRemoveOpen] = useState(false);\n    console.log(rows, viewOnly);\n    \n    const userRows: any = [\n        {\n            username: 'Imstaana',\n            user_account: 'Louise Marianne Sta. Ana',\n            last_activity_date: 'Nov 12, 2019',\n            status: 'Active',\n        },\n        {\n            username: 'psbarrios',\n            user_account: 'Philip Salvador Q. Barrios',\n            last_activity_date: 'Nov 12, 2019',\n            status: 'Active',\n        },\n    ]\n\n    const userColumns: any = [\n        {\n            name: 'username',\n            title: 'Username',\n        },\n        {\n            name: 'user_account',\n            title: 'User Account',\n        },\n        {\n            name: 'last_activity_date',\n            title: 'Last Activity Date',\n        },\n        {\n            name: 'status',\n            title: 'Status',\n        },\n        { \n\t\t\tname: 'action_delete',\n\t\t\ttitle: ' ',\n        },\n    ]\n\n    const groupsRows: any = [\n\t\t{\n\t\t\tgroup_id: '0122-93282-0012',\n            group: \"APD Encoding\",\n            users_in_group: 10,\n            status: 'Active',\n        },\n        {\n\t\t\tgroup_id: '0132-232-0012',\n            group: \"APD Decoding\",\n            users_in_group: 34,\n            status: 'Active',\n\t\t},\n\t];\n\n    const groupsColumns: any = [\n\t\t{ \n\t\t\tname: 'group_id',\n\t\t\ttitle: 'Group ID',\n        },\n        { \n\t\t\tname: 'group',\n\t\t\ttitle: 'Group',\n        },\n        { \n\t\t\tname: 'users_in_group',\n\t\t\ttitle: 'Users in the Group',\n        },\n        { \n\t\t\tname: 'status',\n\t\t\ttitle: 'Status',\n        },\n        { \n\t\t\tname: 'action_delete',\n\t\t\ttitle: ' ',\n        },\n    ];\n\n    const menuItems = [\n        'Groups',\n        'Users'\n    ]\n\n    const handleMenuClick = (item, index) => {\n        setActiveItem(item);\n        setActiveClass(index)\n    }\n\n    const onSaveAddRole = (items) => {\n        console.log(items, 'onsaveaddrole')\n    }\n\n    const handleRemoveRoleModalClose = () => {\n        setIsModalRemoveOpen(true)\n    }\n\n    return (\n        <>\n            <Grid container xs={12}>\n                <Grid item xs={12}>\n                    <Typography><b>Attached Groups and Users</b></Typography>\n                </Grid> \n                <Grid item xs={12}>\n                    <Grid container xs={12} alignItems={'center'}>\n                        <Grid item xs={6}>\n                            <ul style={{padding: '0', margin: '0'}}>\n                                {\n                                    menuItems.map((item, i) => (\n                                        <li className={classes.menuList}>\n                                            <Link className={classNames(classes.menuLink, activeClass === i ? classes.LinkActive : null)} onClick={() => handleMenuClick(item, i)}>{item}</Link>\n                                        </li>\n                                    ))\n                                }\n                            </ul>\n                        </Grid>\n                        <Grid item xs={6} className={classes.alignRight}>\n                            <Link onClick={() => { setShowBlock('block') }}> Add to this role</Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    { \n                        activeItem == 'Groups' ?\n                            <>\n                                <ReactSearch onSearch={() => console.log('search')} placeholder={'Search a user group'}></ReactSearch>\n                                <ReactTable \n                                    rows={groupsRows} \n                                    columns={groupsColumns}\n                                    columnExtensions={\n                                        [{\n                                            columnName: 'action_delete',\n                                            width: 75,\n                                            wordWrapEnabled: true,\n                                            align: 'center'\n                                        }]\n                                    }\n                                    message={'There are no user accounts to show yet.'}\n                                    sortingStateColumnExtensions={[\n                                        { columnName: 'action_delete', sortingEnabled: false }\n                                    ]}\n                                    onDeleteRow={(row) => {\n                                        console.log(row, 'rowdeleted')\n                                    }}\n                                />\n                            </>\n                        : null\n                    }\n                    {\n                        activeItem == 'Users' ?\n                            <>\n                                <ReactSearch onSearch={() => console.log('search')} placeholder={'Search a user account'}/>\n                                <ReactTable \n                                    rows={userRows} \n                                    columns={userColumns}\n                                    columnExtensions={\n                                        [{\n                                            columnName: 'action_delete',\n                                            width: 75,\n                                            wordWrapEnabled: true,\n                                            align: 'center'\n                                        }]\n                                    }\n                                    message={'There are no user accounts to show yet.'}\n                                    sortingStateColumnExtensions={[\n                                        { columnName: 'action_delete', sortingEnabled: false }\n                                    ]}\n                                    onDeleteRow={(row) => {\n                                        console.log(row, 'rowdeleted')\n                                    }}\n                                />\n                            </>\n                        : null\n                    }\n                </Grid>\n            </Grid>\n            <SideModalBlock \n                handleClose={() => { setShowBlock('none') }} \n                showBlock={showBlock}\n                title={'Add to this Role'}>\n                <AddRoleBody \n                    onClose={() => {\n                        setShowBlock('none')\n                    }} \n                    onSave={onSaveAddRole}\n                />\n            </SideModalBlock>\n            <ModalComponent \n\t\t\t\tisModalOpen={ isModalRemoveOpen }\n\t\t\t\tonClose={handleRemoveRoleModalClose}\n\t\t\t\tmessage={'Remove APD screening from this role?'}\n\t\t\t\ttitle={'Remove from Role'}\n\t\t\t\tbuttons={\n\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button onClick={() => {setIsModalRemoveOpen(false)}} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button className={classes.button} variant={'contained'} color={'primary'}>Remove</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t/> \n        </>\n    )\n}","//#region Global Imports\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\n// import NEOLink from 'next/link';\n//#endregion Global Imports\n\n//#region Interface Imports\n// import { Heading } from 'Components/UI/Heading';\nimport { Store } from 'Components/Stores/IStore';\nimport { AccountsActions } from './AccountsActions';\nimport { IAccountsPage } from './IAccountsPage';\nimport { Grid, Button, IconButton, Avatar } from '@material-ui/core';\n// import Typography from '@material-ui/core/Typography';\n\nimport { LoadingIndicator } from 'Components/UI';\nimport { Account } from './Components/Account';\nimport { GroupsAndUsers } from './Components/GroupsAndUsers';\nimport { SubHeader } from 'Components/UI/SubHeader';\nimport { SideMenu } from 'Components/UI/SideMenu';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\nimport { accountsPageStyles } from './style';\n// import { LoadingIndicator } from 'Components/UI';\nimport { getUserDetails } from 'Pages/API/Calls/User';\n\nconst otherRoles: any = [];\n//#endregion Interface Imports\n\nexport const AccountsPage: React.FC<IAccountsPage.IProps> = (props: IAccountsPage.IProps): JSX.Element => {\n\n\tconst classes = accountsPageStyles();\n\tconst [name, setName] = useState(\"\");\n\tconst [viewOnly, setViewOnly] = useState(true);\n\tconst [loading, setLoading] = useState(false);\n\tconst [activeItem, setActiveItem] = useState('Account');\n\tconst [mode, setMode] = useState('view');\n\tconst [isModalConfirmExitOpen, setIsModalConfirmExitOpen] = useState(false);\n\tconst [isModalConfirmSaveOpen, setIsModalConfirmSaveOpen] = useState(false);\n\tconst [userData, setUserData] = useState({});\n\tconst [userRoles, setUserRoles] = useState(\"\");\n\n\tconsole.log(setLoading, activeItem);\n\tconsole.log(props);\n\n\tconst getLastSegment = () => {\n\t\treturn window.location.href.substring(window.location.href.lastIndexOf('/') + 1)\n\t}\n\n\tReact.useEffect(() => {\n\t\tgetUserDetails(getLastSegment())\n\t\t\t.then((data) => {\n\t\t\t\tsetName(data.body.first_name + \" \" + data.body.last_name)\n\t\t\t\tconsole.log(data.body);\n\t\t\t\tsetUserData(data.body);\n\n\t\t\t\tfor (var i = 1; i < data.body.role.length; i++) {\n\t\t\t\t\totherRoles.push(data.body.role[i].name)\n\t\t\t\t}\n\n\t\t\t\tsetUserRoles(otherRoles.join(', '));\n\t\t\t})\n\t}, []);\n\n\tconst sideBarItems = [\n\t\t{\n\t\t\tname: 'Account',\n\t\t\t// label: 'POLICY'\n\t\t},\n\t\t{\n\t\t\tname: 'Activity Logs',\n\t\t\t// label: 'GROUPIE'\n\t\t},\n\t\t{\n\t\t\tname: 'Audit Logs',\n\t\t\t// label: 'GROUPIE'\n\t\t},\n\t];\n\n\t// const menuItems = [\n\t// \t{\n\t// \t\tname: 'Notifications',\n\t// \t},\n\t// \t{\n\t// \t\tname: 'System',\n\t// \t},\n\t// \t{\n\t// \t\tname: 'Password',\n\t// \t},\n\t// ]\n\n\tconst breadCrumbs = [\n\t\t'ACCOUNT'\n\t];\n\n\tconst editRole = () => {\n\t\tsetViewOnly(false);\n\t\tsetMode('edit');\n\t\tconsole.log(setActiveItem, 'yes edit');\n\t}\n\n\tconst activeSideBarItem = (item) => {\n\t\tsetActiveItem(item);\n\t\tsetViewOnly(true);\n\t}\n\n\tconst handleModalConfirmationClose = () => {\n\t\tsetIsModalConfirmSaveOpen(false);\n\t\tsetIsModalConfirmExitOpen(false);\n\t}\n\n\t// const activeMenuItems = (item) => {\n\t// \tconsole.log(item);\n\t// }\n\n\tconst modeHandler = (data) => {\n\t\tsetMode(data);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<SubHeader\n\t\t\t\theadingTitle={name}\n\t\t\t\tbreadCrumbsArray={breadCrumbs}\n\t\t\t\tbuttonFunc={editRole}\n\t\t\t\tbuttonName={'Edit Account'}\n\t\t\t\tlayoutType={'layout_1'}\n\t\t\t\tenableButton={true}\n\t\t\t// activeItems={activeMenuItems}\n\t\t\t// menuItemsArray={menuItems}\n\t\t\t></SubHeader>\n\t\t\t<div className={classes.main}>\n\t\t\t\t{loading ?\n\t\t\t\t\t(<LoadingIndicator />) : null\n\t\t\t\t}\n\t\t\t\t<Grid container xs={12}>\n\t\t\t\t\t<Grid item xs={3} className={classes.sideBarContainer}>\n\t\t\t\t\t\t<IconButton edge=\"end\" onClick={() => { }}>\n\t\t\t\t\t\t\t<Avatar src={'user.jpg'} alt=\"avatar\" />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<SideMenu\n\t\t\t\t\t\t\titems={sideBarItems}\n\t\t\t\t\t\t\tactiveItems={activeSideBarItem}\n\t\t\t\t\t\t></SideMenu>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={9} className={classes.contentContainer}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tactiveItem == 'Account' && <Account data={userData} mode={mode} setMode={modeHandler} otherRoles={userRoles} classes={classes} viewOnly={viewOnly}></Account>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tactiveItem == 'Accounts' && <GroupsAndUsers classes={classes} viewOnly={viewOnly}></GroupsAndUsers>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t\t<ModalComponent\n\t\t\t\tisModalOpen={isModalConfirmSaveOpen}\n\t\t\t\tonClose={handleModalConfirmationClose}\n\t\t\t\tmessage={'Save all changes made?'}\n\t\t\t\ttitle={'Confirmation'}\n\t\t\t\tbuttons={\n\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button onClick={() => { setIsModalConfirmSaveOpen(false) }} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button className={classes.button} variant={'contained'} color={'primary'}>Save</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<ModalComponent\n\t\t\t\tisModalOpen={isModalConfirmExitOpen}\n\t\t\t\tonClose={handleModalConfirmationClose}\n\t\t\t\tmessage={'Exit and remove all changes made?'}\n\t\t\t\ttitle={'Confirmation'}\n\t\t\t\tbuttons={\n\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button onClick={() => { setIsModalConfirmExitOpen(false) }} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button className={classes.button} variant={'contained'} color={'primary'}>Continue</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nconst mapStateToProps = (state: Store) => state.accounts;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tMap: bindActionCreators(AccountsActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };\n"],"sourceRoot":""}