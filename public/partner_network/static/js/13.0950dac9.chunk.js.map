{"version":3,"sources":["Pages/Protected/Partner/AffiliationFormEncoder/Pages/MedicalClinicAffiliation/Components/Utilities/services/medicalAffilService.js"],"names":["mapAndFetchMedical","id","setIsloading","a","AffiliationEncoderService","getMedicalClinicById","data","console","log","mapData","res","philhealth","stage","affiliation_status","status","type","name","source","mno","email","afn_number","tvs","address","remarks","treasury","affiliation_infos","classification","process_type","clinic_schedule","room_number","license","contacts","operation","formOne","years","months","dohNumber","dohLicenseType","dohLicenseExp","philhealthNumber","philhealthExpiration","payee","formTwo","nonVatable","tinStatus","vatTaxRate","processType","formThree","unitFlrBldg","bldgName","street","subdivision","region","district","barangay","city","zipCode","clinicSchedule","roomNumber","formFour","affiliationInfos","dentalAssociates","remarksForm","externalRemarks","internalRemarks","affil","affiliationType","dateReceived","dateSubmitted","stageName","affiliationStatus","Date","toISOString","officeLocation","formData","form","Object","assign"],"mappings":"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","file":"static/js/13.0950dac9.chunk.js","sourcesContent":["import AffiliationEncoderService from 'Services/Api/Partner/affiliationEncoderService'\n\nexport async function mapAndFetchMedical (id, setIsloading) {\n  // setIsloading(true)\n  try {\n    const { data: { data } } = await AffiliationEncoderService.getMedicalClinicById(id)\n    console.log('response data', data)\n    // setIsloading(false)\n\n    return mapData(data)\n  } catch (error) {\n    console.log('res error get medical', error)\n    // setIsloading(false)\n  }\n}\n\nfunction mapData (res) {\n  const {\n    philhealth,\n    stage,\n    affiliation_status,\n    status,\n    id,\n    type,\n    name,\n    source,\n    mno,\n    afn_number,\n    tvs,\n    email,\n    address,\n    remarks,\n    treasury,\n    affiliation_infos,\n    classification,\n    process_type,\n    clinic_schedule,\n    room_number,\n    license,\n    contacts,\n    operation\n  } = res\n\n  const formOne = {\n    name: '',\n    email: '',\n    years: '',\n    months: '',\n    dohNumber: '',\n    dohLicenseType: '',\n    dohLicenseExp: '',\n    philhealthNumber: '',\n    philhealthExpiration: '',\n    payee: ''\n  }\n\n  const formTwo = {\n    classification: '',\n    nonVatable: '',\n    tinStatus: '',\n    vatTaxRate: '',\n    processType: ''\n  }\n\n  const formThree = {\n    unitFlrBldg: '',\n    bldgName: '',\n    street: '',\n    subdivision: '',\n    region: '',\n    district: '',\n    barangay: '',\n    city: '',\n    zipCode: '',\n    clinicSchedule: '',\n    roomNumber: ''\n  }\n\n  const formFour = {\n    affiliationInfos: [],\n    dentalAssociates: []\n  }\n\n  const remarksForm = {\n    externalRemarks: '',\n    internalRemarks: ''\n  }\n\n  const affil = {\n    affiliationType: '',\n    dateReceived: null,\n    id: '',\n    mno: '',\n    source: 'PNM',\n    type: 'CLINIC',\n    dateSubmitted: null,\n    stageName: 'ENCODING',\n    status: 'Active',\n    affiliationStatus: 'In-Progress'\n  }\n  affil.dateSubmitted = stage['date_submitted'] ? stage['date_submitted'] : new Date().toISOString()\n  affil.stageName = stage['stage_name'] ? stage['stage_name'] : ''\n  affil.type = type\n  affil.status = status\n  affil.source = source\n  affil.affiliationStatus = affiliation_status['name'] ? affiliation_status['name'] : ''\n  affil.mno = mno\n  affil.officeLocation = res['office_location']\n  affil.id = id\n\n  formOne.name = name\n  formOne.email = email\n  formOne.philhealthNumber = philhealth['accreditation_number'] ? philhealth['accreditation_number'] : ''\n  formOne.philhealthExpiration = philhealth['expiration_date'] ? philhealth['expiration_date'] : ''\n  formOne.years = operation['years'] || ''\n  formOne.months = operation['months'] || ''\n  formOne.dohNumber = license && license['doh'] ? license['doh']['number'] : ''\n  formOne.dohLicenseType = license && license['doh'] ? license['doh']['license_type'] : ''\n  formOne.dohLicenseExp = license && license['doh'] ? license['doh']['license_exp'] : ''\n  formOne.payee = treasury['payee'] ? treasury['payee'] : ''\n\n  formThree.unitFlrBldg = address['unit_flr_bldg'] ? address['unit_flr_bldg'] : ''\n  formThree.bldgName = address['building_name'] ? address['building_name'] : ''\n  formThree.street = address['street'] ? address['street'] : ''\n  formThree.barangay = address['barangay'] ? address['barangay'] : ''\n  formThree.district = address['district'] ? address['district'] : ''\n  formThree.city = address['city'] ? address['city'] : ''\n  formThree.region = address['region'] ? address['region'] : ''\n  formThree.zipCode = address['zip_code'] ? address['zip_code'] : ''\n  formThree.subdivision = address['subdivision'] ? address['subdivision'] : ''\n  formThree.clinicSchedule = clinic_schedule\n  formThree.roomNumber = room_number\n\n  formTwo.tinStatus = treasury['tin_status'] ? treasury['tin_status'] : ''\n  formTwo.nonVatable = treasury['non_vatable'] ? treasury['non_vatable'] : ''\n  formTwo.vatTaxRate = treasury['vat'] ? treasury['vat']['tax_rate'] : ''\n  formTwo.classification = classification\n  formTwo.processType = process_type\n\n  formFour.contacts = contacts || []\n  formFour.affiliationInfos = affiliation_infos || []\n\n  remarksForm.internalRemarks = remarks['internal_remarks'] ? remarks['internal_remarks'] : ''\n  remarksForm.externalRemarks = remarks['external_remarks'] ? remarks['external_remarks'] : ''\n\n  let formData = {}\n  formData.formOne = formOne\n  formData.formTwo = formTwo\n  formData.formThree = formThree\n  formData.formFour = formFour\n  formData.remarksForm = remarksForm\n\n  let form = Object.assign({}, formOne, formTwo, formThree, formFour, remarksForm)\n\n  console.log('form hehahaahhsdfshfshfdds', form)\n\n  return {affil, formData, form}\n}\n"],"sourceRoot":""}