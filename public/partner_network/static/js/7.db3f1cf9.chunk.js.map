{"version":3,"sources":["Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Sections/AutoCompletes/AutoCompletes.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Components/AutoComplete2/AutoComplete2.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Components/DatePicker2/DatePicker2.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Sections/DatePickers/DatePickers.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Components/PdfViewer2/PdfViewer2.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Sections/PdfViewers/PdfViewers.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Test.module.scss","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.module.scss","Pages/Protected/Claims/Components/MedicalConsultant/ViewList/ViewList.module.scss","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.module.scss","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.module.scss","SharedComponents/LoadingIndicator/LoadingIndicator.js","Pages/Protected/Claims/Components/ViewList2/ViewList.js","Pages/Protected/Claims/Components/Tiles/CreatedBundlesTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedBundlesTile.js","SharedComponents/TaskTrayComponent/TaskTrayComponent.js","SharedComponents/TicketListComponent/TicketListComponent.js","Services/Api/BatchEncodingServices.js","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.js","SharedComponents/AutoComplete2/AutoComplete2.js","SharedComponents/TextFieldNumber/TextFieldNumber.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.js","SharedComponents/DropDown/DropDown.js","Constant/claimTypes.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchFormValidator.js","Pages/Protected/Claims/Store/contants.js","Pages/Protected/Claims/Store/actions/BatchEncoding/index.js","Pages/Protected/Claims/Store/actions/BatchEncoding/batch.js","Pages/Protected/Claims/Store/actions/BatchEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claim.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/grandTotal.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dentalProcedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/error.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claim.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/discrepancy.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/error.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/escalation.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/inquiry.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reject.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/recon.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/utilization.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/return.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/RcsSoaValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.js","Services/Api/ClaimsEncodingServices.js","Utilities/PromiseUtil.js","Services/ArrayToCSV.js","Controllers/SoaEtlController.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Parser/index.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.js","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.js","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/UploadSoaPage.js","Services/Api/ClaimsServices.js","Utilities/SafeAccess.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/validator/DateRangeValidator.js","Pages/Protected/Claims/Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.js","SharedComponents/AutoComplete/AutoComplete.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/Footer/Footer.js","Services/Api/CustomerCareServices.js","Services/Api/MedicalConsultantServices.js","Services/Api/UserManagementServices.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/helper/constants.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/TransmittalReport.js","Pages/Protected/Claims/Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport.js","Pages/Protected/Claims/Components/Reports/PRCheckReport/PRCheckReport.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/mapData.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/pagination.js","Services/Api/ClaimsAdjudicationServices.js","Services/Api/ClaimsReconServices.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/style/theme.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/data/legend.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/config/months.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/UtilizationReport.js","Pages/Protected/Claims/Components/Reports/LoadingHimsData/LoadingHimsData.js","Pages/Protected/Claims/Components/Reports/ConfinementReport/ConfinementReport.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/helper/constants.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/Footer/Footer.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/PaymentRequestReport.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/helper/staticHeaderFooter.js","Pages/Protected/Claims/Components/Reports/ReimbursementReport/ReimbursementReport.js","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/validator/DateRangeValidator.js","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport.js","Pages/Protected/Claims/Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport.js","Pages/Protected/Claims/Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport.js","Pages/Protected/Claims/Components/Reports/PerformanceReport/PerformanceReport.js","Pages/Protected/Claims/Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport.js","Pages/Protected/Claims/Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport.js","Pages/Protected/Claims/Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport.js","Pages/Protected/Claims/Constant/ClaimTypes.js","Pages/Protected/Claims/Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport.js","Pages/Protected/Claims/Components/Reports/DetailedClaimsReport/DetailedClaimsReport.js","Pages/Protected/Claims/Components/Reports/DetailedPerformanceReport/DetailedPerformanceReport.js","Pages/Protected/Claims/Components/Reports/DetailedMonitoringReport/DetailedMonitoringReport.js","Pages/Protected/Claims/Routes/Reports.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/helper/staticHeaderFooter.js","Pages/Protected/Claims/Routes/BatchEncoder.js","Pages/Protected/Claims/Components/Tiles/BatchAndEncoderTile.js","Pages/Protected/Claims/Components/Tiles/ForReconciliationClaimsTile.js","Services/Api/BatchEncodingSupervisoryServices.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.js","Utilities/ArrayCompare.js","SharedComponents/ClientMemberLookup/ClientMemberLookup.js","SharedComponents/ClientMemberLookup/ClientMemberModal.js","Services/Api/CustomerCareService.js","Utilities/RenameProperty.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/InPatient.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Emergency.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Reimbursement.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/MedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Pharmacy.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Dental.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.js","SharedComponents/CustomTable/CustomTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.js","Utilities/Total.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ReconValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ReturnValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.js","SharedComponents/TextFieldSubmit/TextFieldSubmit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.js","SharedComponents/CustomTabs/CustomTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/Unit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/DefaultValue.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitHeaders.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitFooters.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/pagination.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/sortBy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators2.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","SharedComponents/ContractRange/ContractRange.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/3.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/4.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/TeethFactory.js","Pages/Protected/Claims/Components/DentalChart/TeethGroup.js","Pages/Protected/Claims/Components/DentalChart/DentalChart.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ReimbursementInfo/ReimbursementInfo.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/UploadedList/UploadedList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.js","SharedComponents/DashboardRedirect/DashboardRedirect.js","Pages/Protected/Claims/Components/ClaimsViewer/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeValidator.js","Pages/Protected/Claims/Routes/BatchEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/OpenBatchesTile.js","Pages/Protected/Claims/Components/Tiles/MyBatchesTile.js","Pages/Protected/Claims/Components/Tiles/CompletedBatchesTile.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/InPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Emergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Reimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Pharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Dental.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators2.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/UploadedList/UploadedList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/SoftValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoder.js","Pages/Protected/Claims/Components/Tiles/ClaimsEncoderTile.js","Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/ForAdjudicationTile.js","Pages/Protected/Claims/Components/Tiles/MyClaimsTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ReturnedEscalatedClaimsTile.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Components/AutoComplete2/AutoComplete2.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Sections/AutoCompletes/AutoCompletes.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Components/DatePicker2/DatePicker2.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Validations/DateValidator.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Sections/DatePickers/DatePickers.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Components/PdfViewer2/PdfViewer2.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Sections/PdfViewers/PdfViewers.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Test.js","Pages/Protected/Claims/Routes/ClaimsAnalyst.js","Pages/Protected/Claims/Components/Tiles/ForPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/OverrideClaimTile.js","Services/Api/PaymentRequestServices.js","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.js","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.js","Pages/Protected/Claims/Routes/PaymentRequest.js","Pages/Protected/Claims/Components/Tiles/SubmittedPrSupervisorTile.js","Services/Api/PaymentRequestSupervisorServices.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.js","Pages/Protected/Claims/Routes/PaymentRequestSupervisor.js","Pages/Protected/Claims/Components/MedicalConsultant/ViewList/ViewList.js","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/MedicalConsultant.js","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsRecon.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.js","Services/Api/ClaimsVerifierSupervisorServices/ClaimsAdjudicationServices.js","Services/Api/ClaimsVerifierSupervisorServices/MedicalCollectiblesServices.js","Services/Api/ClaimsVerifierSupervisorServices/index.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.js","Pages/Protected/Claims/Components/Tiles/RejectedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsVerifierTile.js","Pages/Protected/Claims/Components/Tiles/ReconciledClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsForApprovalTile.js","Pages/Protected/Claims/Components/Tiles/MedicalCollectiblesTile.js","Pages/Protected/Claims/Components/Tiles/ReimbursementClaimTile.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsVerifierSupervisor.js","Services/Api/ClaimsManagerServices/ClaimsManagerServices.js","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.js","Services/Api/ClaimsMaintainerServices.js","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.js","Pages/Protected/Claims/Routes/ClaimsManager.js","Pages/Protected/Claims/Constant/ClaimUsers.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/bundlesReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/batchReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/grandTotalReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dentalProcedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/errorReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/discrepancyReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/errorReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/escalationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/inquiryReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/rejectReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reconReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/utilizationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/returnReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/index.js","Pages/Protected/Claims/Store/reducers/index.js","Pages/Protected/Claims/index.js","Utilities/TextFormatter.js","SharedComponents/DatePicker2/DatePicker2.js","SharedComponents/Table/Table.js","SharedComponents/Alert/Alert.js","SharedComponents/DashboardTileComponent/DashboardTileComponent.js","SharedComponents/TextFieldCurrency/TextFieldCurrency.js","Pages/Protected/Claims/Components/DentalChart/Teeth/style.module.scss","SharedComponents/EnhancedTable/EnhancedTable.js","SharedComponents/DashboardTileComponent/DashboardTileComponent.module.scss","SharedComponents/Table/Table.module.scss","SharedComponents/DatePicker2/DatePicker2.module.scss","SharedComponents/TextFieldCurrency/TextFieldCurrency.module.scss","Pages/Protected/Partner/AffiliationFormEncoder/Pages/HospitalAffiliation/components/Utilities/dataHeader.js","SharedComponents/LoadingIndicator/LoadingIndicator.module.scss","Pages/Protected/Claims/Components/ViewList2/ViewList.module.scss","SharedComponents/TaskTrayComponent/TaskTrayComponent.module.scss","SharedComponents/TicketListComponent/TicketListComponent.module.scss","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.module.scss","SharedComponents/AutoComplete2/AutoComplete2.module.scss","SharedComponents/TextFieldNumber/TextFieldNumber.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.module.scss","SharedComponents/DropDown/DropDown.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.module.scss","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.module.scss","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/UploadSoaPage.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.module.scss","SharedComponents/AutoComplete/AutoComplete.module.scss","Pages/Protected/Claims/Components/Reports/TransmittalReport/Footer/Footer.module.scss","Pages/Protected/Claims/Components/Reports/TransmittalReport/TransmittalReport.module.scss","Pages/Protected/Claims/Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport.module.scss","Pages/Protected/Claims/Components/Reports/PRCheckReport/PRCheckReport.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.module.scss","Pages/Protected/Claims/Components/Reports/UtilizationReport/style/UtilizationReport.module.scss","Pages/Protected/Claims/Components/Reports/LoadingHimsData/LoadingHimsData.module.scss","Pages/Protected/Claims/Components/Reports/ConfinementReport/ConfinementReport.module.scss","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/Footer/Footer.module.scss","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/PaymentRequestReport.module.scss","Pages/Protected/Claims/Components/Reports/ReimbursementReport/ReimbursementReport.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport.module.scss","Pages/Protected/Claims/Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport.module.scss","Pages/Protected/Claims/Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport.module.scss","Pages/Protected/Claims/Components/Reports/PerformanceReport/PerformanceReport.module.scss","Pages/Protected/Claims/Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport.module.scss","Pages/Protected/Claims/Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport.module.scss","Pages/Protected/Claims/Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedClaimsReport/DetailedClaimsReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedPerformanceReport/DetailedPerformanceReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedMonitoringReport/DetailedMonitoringReport.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.module.scss","SharedComponents/ClientMemberLookup/ClientMemberLookup.module.scss","SharedComponents/ClientMemberLookup/ClientMemberModal.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.module.scss","SharedComponents/CustomTable/CustomTable.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.module.scss","SharedComponents/TextFieldSubmit/TextFieldSubmit.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.module.scss","SharedComponents/CustomTabs/CustomTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","SharedComponents/ContractRange/ContractRange.module.scss","Pages/Protected/Claims/Components/DentalChart/DentalChart.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ReimbursementInfo/ReimbursementInfo.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/UploadedList/UploadedList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.module.scss","SharedComponents/DashboardRedirect/Error.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/UploadedList/UploadedList.module.scss"],"names":["module","exports","LoadingIndicator","props","loading","children","Fragment","className","classes","root","id","CircularProgress","animation","size","CustomizedDialogs","columns","searchTextPlaceHolder","viewList","setViewList","onViewListChange","body","fetching","handleOnClose","p","show","React","useState","debounce","setDebounce","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","open","PaperProps","style","height","display","DialogTitle","disableTypography","header","Typography","variant","title","IconButton","aria-label","button","onClick","DialogContent","dividers","content","search","SearchTextComponent","onChange","e","target","value","clearTimeout","setTimeout","page","placeholder","TableContainerProps","overflow","position","TableProps","stickyHeader","head","map","headCell","TableCell","key","sortField","TableSortLabel","active","orderBy","direction","order","sort","name","event","args","field","match","filter","handleColumnFiltering","align","colSpan","length","data","count","limit","rowsPerPageOptions","CreatedBundlesTile","services","sizes","sm","items","setItems","initialValue","setFetching","fetchingViewList","setFetchingViewList","useEffect","Promise","all","getBundles","category","range","getBundleCount","then","values","batchResponse","batchCountResponse","results","finally","color","state","actionHeader","Button","LoadingService","createBundle","res","history","push","onFilterChange","prevState","TableHead","item","index","bundle_number","DateFormatter","date_due","facility_name","to","params","_params","_data","row","displayName","SubmittedBundlesTile","TaskTrayComponent","showTitle","Children","toArray","type","cloneElement","_sizes","xs","lg","Grid","container","wrapper","spacing","itemSize","s","TicketListComponent","viewAllLink","isFilterShown","setFilter","Paper","FormControl","Select","MenuItem","input","list","action","caption","axios","instance","BatchEncodingServices","url","method","batch_number","on","headers","ExcludeErrorConstants","Dashboard","PageTitleService","BreadcrumbsService","setSelectedItems","tiles","float","AutoComplete2","label","required","readOnly","other","error","suggestions","focus","setFocus","_error","setError","trim","handleOnChange","onBlur","currentTarget","contains","relatedTarget","Autocomplete","options","noOptionsText","renderInput","TextField","ref","InputProps","disableUnderline","endAdornment","getOptionLabel","option","onInputChange","onFocus","inputValue","freeSolo","autoSelect","openOnFocus","autoHighlight","TextFieldNumber","customInput","InputBase","isNumericString","displayType","allowLeadingZeros","onValueChange","floatValue","isAllowed","formattedValue","autoComplete","BundleDetails","details","errors","isReadOnly","disableControls","medicalPartner","doctorPartner","setSuggestions","facility_id","doctor_id","doctor_name","getMedicalPartnerSuggestions","by","lookups","query","getDoctorPartnerSuggestions","i","full_name","handleOnChangeAutosuggest","handleOnChangeMedicalPartner","handleOnChangeDoctorPartner","term","earliest_term","parseInt","isNaN","newDate","moment","date_received","add","format","md","total_rcs","date","toISOString","due_date","soa_number","TextFieldCurrency","total_soa_amt","disabled","reassign_notes","multiline","rows","headCells","numeric","disablePadding","BatchList","batches","onDelete","openDialog","onCancel","canEdit","openError","onEdit","setForDeletion","forDeletion","isBundleCompleted","searchFilter","selectStatus","batch","setBatch","includes","claim","toLowerCase","parseFloat","selected","indeterminate","undefined","checked","batch_numbers","changeSelectAllState","_batches","selected_count","batchNumbers","b","EnhancedTable","handleSelectAllClick","checkAll","padding","Checkbox","Boolean","_index","handleClick","buttonWrapper","Alert","message","deleteMessage","getMessage","cancelLabel","okLabel","onOk","DropDown","disableComponents","addNew","text","select","types","prefix","Reimbursement","Emergency","Dental","APE","ECU","Pharmacy","PPE","startsWith","schema","Joi","object","claim_type","string","claim_source","number","integer","min","amount_billed","less","greater","messages","notes","allow","when","is","otherwise","abortEarly","validate","ExtractValidationResult","BATCH_ENCODING","CLAIMS_ENCODING","CLAIMS_ANALYSIS","payload","for","constants","dasdas","resetClaim","setClaimFields","setClaimBaseDetails","setClaimFacility","setClaimDoctor","setClaimRoom","addClaimDiagnosis","setClaimDiagnosis","setClaimPrimaryDiagnosis","removeClaimDiagnosis","addClaimProcedure","updateClaimProcedure","removeClaimProcedure","addClaimHospitalItem","updateClaimHospitalItem","removeClaimHospitalItem","addClaimProfessionalFee","updateClaimProfessionalFee","removeClaimProfessionalFee","setClaimType","setDropDown","initDropDowns","initSuggestions","setSuggestion","resetSuggestion","setSuggestionObject","setSuggestionOnArray","addSuggestionToArray","removeSuggestionToArray","resetSuggestionObject","resetSuggestionArray","setProcedure","setHospitalItem","setProfessionalFee","initDiscrepancy","setDiscrepancy","resetError","resetEscalation","addEscalationMessages","setEscalationMessages","setEscalationMessage","setEscalationAssignee","resetInquiry","addInquiryMessages","setInquiryMessages","setInquiryMessage","setInquiryAssignee","resetReassign","addReassignMessages","setReassignMessages","setReassignMessage","setReassignAssignee","setRejectStatus","setClaimPro","resetRecon","setReconNotes","setLimitType","resetLimitType","resetReturn","setReturnNote","setShowBatchForm","actions","setSelectedBatch","claim_types","ClaimTypes","claim_sources","BatchForm","close","onSave","bundle","onChangeDoctor","dispatch","useDispatch","useSelector","BatchEncoding","saveControl","showPrompt","setShowPrompt","confirmAction","setConfirmAction","setErrors","CustomTextField","doctor","DialogActions","BatchFormValidator","max","bundle_soa","batches_soa","valid","bundle_rcs","batches_rcs","setBatchAction","setSaveBatchControl","BundlePage","originalState","setOriginalState","setBundle","setBatches","setIsReadOnly","setSearchFilter","setOpenDialog","openBundleDialog","setOpenBundleDialog","openRCSDialog","setOpenRCSDialog","setOpenError","submitStatus","setsubmitStatus","isSupervisor","user_id","setDisableComponents","disabledSubmit","setDisabledSubmit","getBundleDetails","getBundle","_status","status","received","due","soa","amount","facility","getBatches","cancelBundle","path","handleOnSubmit","submitBundle","getDoctorSuggestions","suggestion","handleOnDeleteBatch","BundleValidator","validateSoaRcs","reduce","accu","curr","RcsSoaValidator","join","newBatch","updateBatch","f","createBatch","split","_value","updateBundle","handleOnOk","deleteMultipleBatch","catch","onOpen","source","ClaimsEncodingServices","claim_number","responseType","Accept","PromiseUtil","executeInSequence","promises","callback","a","alert","chain","Download","fileName","extension","statics","mimeType","newLine","c_header","c_footer","_rows","joined","currentValue","slice","blob","Blob","ipcRenderer","window","require","reader","FileReader","readAsDataURL","onloadend","base64data","result","pop","send","FileSaver","saveAs","SoaEtlController","MINIMUM_KEYS","BUNDLE_SOA_NUM","BUNDLE_RCS_DATE","BUNDLE_FACILITY_NAME","BUNDLE_FACILITY_CODE","BATCH_CLAIMS_SOURCE","BATCH_CLAIM_TYPE","CLAIM_DATE_AVAILMENT","CLAIM_DATE_ADMITTED","CLAIM_DATE_DISCHARGE","CLAIM_LOA_NUM","CLAIM_APPROVAL_CODE","CLAIM_MEMBER_NUM","CLAIM_MEMBER_NAME","CLAIM_DIAGNOSIS_NAME","CLAIM_DIAGNOSIS_CODE","CLAIM_DOCTOR_NAME","CLAIM_DOCTOR_AMOUNT","CLAIM_PROCEDURE_NAME","CLAIM_PROCEDURE_AMOUNT","CLAIM_HOSPITAL_ITEM_NAME","CLAIM_HOSPITAL_ITEM_AMOUNT","COLUMN_TEMPLATES","DEFAULT","RCSNum","Diagnosis","Procedure","downloadTemplate","columnTemplates","console","log","ArrayToCSV","Object","keys","transform","dataRows","dataMapping","defaults","fields","prepData","_transformPreviewDataToPrepData","_transformPrepDataToHierarchicalData","JSON","stringify","loadToApi","successCallback","resolve","reject","bundleNumber","bundleParam","batchIndex","batchParam","claims","batchPromise","resolveBatch","rejectBatch","addClaim","addClaims","addBatches","outputEntries","forEach","dataEntry","outputEntry","hasSingleValue","columnKey","dataValue","outputKey","fieldKey","prepDataRows","currentBatch","currentClaim","soaNumber","dateReceived","claimType","approvalCode","memberName","nameParts","parseFullName","member_account_number","member_first_name","first","member_middle_name","middle","member_last_name","last","approval_code","loa_number","diagnosis","professional_fees","hospital_items","procedures","date_from","date_to","claim_sub_type","claim_sub_sub_type","with_corporate_guarantee","loa_notes","room_type","room_rate","pro_id","pro_name","diagnosisName","diagnosisCode","flag","code","description","primary","lineItem","lineAmount","gross_amount","specialization","vat_amount","amount_paid_by_member","philhealth_amount_paid","philhealth_remarks","amount_not_covered","reason","amount_due_from_member","reason_for_charging_member","item_code","DEBUG","test","IP","OPP","OPC","__index__","NewBundlePage","setDisableControls","openAlert","setOpenAlert","due_date_adjustment","newBundle","setNewBundle","doctor_full_name","NewBundleValidator","marginLeft","form","inputs","save","file","onComplete","onError","onload","workbook","XLSX","read","sheet","Sheets","SheetNames","utils","sheet_to_json","raw","shift","_item","onerror","ex","readAsBinaryString","Progress","withStyles","borderRadius","backgroundColor","bar","LinearProgress","UploadSpace","onSelectFile","dialogRef","useRef","dragged","setDragged","fileLoaded","setFileLoaded","progress","setProgress","handleOnDrag","preventDefault","stopPropagation","handleParse","Parser","onDrop","dataTransfer","files","onDragOver","onDragLeave","clickable","current","click","icon","warning","accept","DynamicTable","onRemoveFile","onDetectDataRows","tableState","setTableState","selectedItems","handleOnChangeItems","_items","endAt","find","table","flex","DataPair","targets","sources","onClickRemove","onChangeSource","onChangeTarget","pair","autoFocus","DataPairContainer","onClickAddNew","dropdown_source","dropdown_target","FieldMapper","claimSources","ApiService","onSaveSuccess","onChangeHeaderInputs","onChangeClaimTypeDataMapping","facilityTemplate","setFacilityTemplate","isDefault","template","setTemplate","templates","setTemplates","dialog","setDialog","mesage","alertDialog","setAlertDialog","getTemplates","_default","d","is_default","_id","handleOnChangeFacility","getFacilitySuggestions","handleOnChangeDialog","section","groups","_template","t","handleOnChangeTemplate","_fields","onClickAddField","splice","onRemoveField","storeTemplate","template_name","storeFacilityTemplate","template_id","FormControlLabel","control","default","footer","UploadSoaPage","setData","headerInputs","setHeaderInputs","claimTypeValues","setClaimTypeValues","setDataRows","handleOnCancel","claimTypeMap","element","fileHeaders","onSuccess","ClaimsAdjudicationServices","client","SafeAccess","def","delimeter","obj","completeColumns","remarks","ClaimsUtilLedgerReport","dataColumns","hideReport","hideHeader","dateRange","refresh","from","Date","setClaims","dateRangeError","setDateRangeError","setColumns","btnDisabled","setBtnDisabled","handleOnPaginate","handleOnFilter","fetchLedger","ClaimsServices","utilizationLegder","_claims","date_admission_from","date_admission_to","date_service","date_service_from","date_service_to","contract_from","contract_to","filtered","entry","indexOf","formatData","output","property","disableFuture","submit","DateRangeValidator","col","c","fontSize","typo","maxHeight","noMargin","claimIndex","colIndex","pagination","AutoComplete","square","hint","handleItemClick","username","total","CurrencyFormatter","ar_amount","signatories","CustomerCareServices","account_number","mct_id","token","localStorage","getItem","baseURL","CLAIMS_URL","process","replace","where","skip","offset","client_account_no","MedicalConsultantServices","member_account_no","icd_code","filters","UserManagementServices","role_name","this","getUsers","class","mapData","claim_no","diagnoses","primary_diagnosis","icd10_code","primary_icd10_code","provider","partner_name","doctors","setDoctors","partner_doctor_name","total_amount","grand_total","session","date_issued","concat","headCellsComplete","randomRange","Math","random","Utilization","ClaimsAnalysis","fetchService","isMember","member","utilizationLoa","hideSearchBar","hideActionColumn","setHeadCells","setRows","allList","setAllList","filteredRows","setFilteredRows","utilized","ibnr","graph","setGraph","benefit_limits","info","member_id","icd","category_code","IcdCptStorageServices","diagnosis_code","_utilizationLoa","_search","some","procedure_name","cpt_code","toString","itemFilter","handleSearchChange","exc","lodash","take","chunk","setPaginate","width","background","hover","role","tabIndex","cell","renderRows","claimNo","getClaimResponse","analyzeRespone","analysis_results","ClaimsReconServices","theme","InPatient","OutPatientProcedure","OutPatientConsultation","MedicineAllowance","MedicalSupplies","ClinicManagement","mockData","months","clientColumns","memberDataColumns","id_row","label_left","label_right","name_row","bundle_row","date_row","bundles","total_approved_amount","total_tax_amount","initialDetails","total_pr_amount","discount_amount","PaymentRequestReport","medical_partner_id","medical_partner_name","searchValue","setSearchValue","setDetails","column","isSuggestionClick","getBundleSoaSuggestions","handlePagination","paymentRequestClaims","handleGenerateReport","approved_amount","tax_amount","static_header","hasOwnProperty","_columns","no","static_footer","staticHeaderFooter","handleOnChangeBundleSoa","paymentRequestReport","TextFieldStyle","margin","member_name","handling","date_max","initialClaims","month","processed","total_received","total_processed","contract_plan","claim_status","user","geography","label2","suffix","other_name","subType","reportPages","transmittal","component","registered_name","corporate_account_no","setClient","returnClient","setReturnClient","setTotal","setUsername","getUserById","handleClientOnChange","getClientSuggestions","getClientInfo","fetchTransmittalItems","transmittalReport","_totam_amout","_ar_amount","total_due_from_member","contracts","PdfViewer2Service","service","getTransmittalReportPdf","utilizationLedger","treasuryTransmittalReport","reports","setReports","fetchReport","_reports","report","date_requested","check_date","minHeight","utilizationReport","reportType","setReportType","initial","actual","graphData","setGraphData","ABL","MBL","limitType","graphFilter","setGraphFilter","account_no","setMember","setUtilizationLoa","setMemberFetchStatus","fetchTable","newData","newChild","child","percentage","getPercentage","childContainer","utilizationClientTable","getMember","getMemberUtilizationLoa","err","response","RadioGroup","Radio","utilizationClient","getClientUtilization","getClientUtilizationLoa","graphClientRes","clientUtilRes","clientUtilLoaRes","utilAmount","loaAmount","total_utilization_amount","total_ibnr_amount","legend","mark","textAlign","tooltip","bottom","LargeNumberFormatter","year","toFixed","cases","availed_by_principals","availed_by_dependents","memberinfo","memberinfoRow","memberInfoLabel","memberInfoValue","diff","getUtilizations","prReports","loadingHimsData","fetchHIMSData","loadingHIMSData","availment_date","approved_date","posted_date","date_admitted","date_discharged","payment_due_date","handleOnColumnFilter","confinementReport","fetchRecords","reimbursementReport","grandTotal","reimbursementClaimReport","word","charAt","toUpperCase","substring","hidden","footerComponent","claimsSummaryReport","geopgraphy","_category","lookupsQuery","productivityPerformaceReport","region","receivedTotal","processedTotal","productivityReport","received_total","processed_total","grand","returnedClaimsReport","setDateRange","handleOnClickFilter","_total","claim_amount","return_reason","performanceReport","contract_plan_type","average","work","agingPartialApprovedReport","total15Days","total1Week","total1Month","totalAll","facility_region","agingPartialApprovedClaimsReport","agingReturnedClaims","agingReturnClaimsReport","claimsBeyond3Months","date_of_service","agingReimbursement","reimbursement_count","reimbursement_percent","reimbursement_category","const_types","j","reimbursmentAgingReport","detailedClaimsReport","detailedPerformanceReport","detailedMonitoringReport","reportsItems","BATCH_ENCODER","BATCH_ENCODER_SUPERVISOR","CLAIMS_DETAILS_ENCODER","CLAIMS_DETAILS_ENCODER_SUPERVISOR","CLAIMS_ANALYST","PR_OFFICER","PR_OFFICER_SUPERVISOR","MEDICAL_CONSULTANT","CLAIMS_RECON","CLAIMS_VERIFIER_SUPERVISOR","CLAIMS_MANAGER","generateBreadCrumbs","userRole","breads","r","generateSideBar","generateRoutes","exact","sideBarItems","breadcrumbs","dashboard","specificBundle","uploadSoa","BatchAndEncoderTile","getBatchEncoderWork","getBatchEncoderWorkCount","batchEncoders","total_bundle","total_batch","ForReconciliationClaimsTile","for_recon","ticket","getClaims","getClaimCount","claimResponse","claimCountResponse","allClaims","allClaimsCount","BatchEncodingSupervisoryServices","note","assignee","AssignDialog","setShow","onSubmit","reassign","setReassign","showAlert","setShowAlert","users","setUsers","reassignErrors","setReassignErrors","first_name","last_name","comment","assign","ReassignValidator","aria-describedby","columnss","CreatedBundlesPage","batchEncoderId","setBatchEncoderId","openModal","setOpenModal","activeAssigning","setActiveAssigning","headerCheckBox","setHeaderCheckBox","_batchEncoderId","handleOnViewListChange","marginTop","selectedCount","handleOnItemSelect","bundle_numbers","reassignBundles","DiscrepancyBase","discrepancy","iconStyle","others","retainSpace","autoWidth","showIcon","anchorEl","setAnchorEl","setMessage","Array","isArray","flat","Infinity","m","spreadResult","handleClose","Popover","anchorOrigin","vertical","horizontal","transformOrigin","whiteSpace","includesAny","s1","s2","ClientMemberLookup","allSearch","allSearchText","allSearchFields","mode","onRecordSet","apiData","setApiData","finalRows","setFinalRows","setSelected","colFilters","setColFilters","setLoading","fetchData","translateRows","filterData","fetches","responses","colIdx","val","handleOnSort","handleColumnFilter","_row","entries","revertRow","ClientMemberModal","CustomerCareService","renameProp","oldProp","newProp","old","AutoFillInitializer","AutoFill","loa","member_info","first_middle","given_name","middle_name","common","loa_no","proc","diagnosis_given_diagnosis","diagnosis_description","prof","diag","room","date_admitted_date","now","date_discharged_date","partner_id","rooms","localeCompare","sensitivity","rate","department","anesthesiologist_id","anesthesiologist_name","partner_doctor_id","recommendation","reimbursement_type","customer_account_number","client_id","company_name","client_name","medicine_category","tooth_number","tooth_numbers","date_issued_date","claim_remarks","BaseDetails","onChangeReimbursementType","handleMemberAccountNumber","permissions","requiredFields","showReimbursement","showApprovalCode","showClaimSource","showLoaNumber","showCompany","isDental","showMemberAccountNumber","isCM","memberAccountNumber","setMemberAccountNumber","contractPlanTypeLoading","setContractPlanTypeLoading","memberModal","setMemberModal","clientModal","setClientModal","handleOnClickClientLookup","handleFetchContracts","accountNumber","getContractList","latest_contract","custom_metadata","coverage_start_date","coverage_end_date","years","getLoaDetails","update","client_account_number","client_account_name","contract","getMembers","getMemberContractPlanType","handleSetMember","getClients","getClientrContractPlanType","handleSetClient","ICDTextFields","ICDTextField","codeId","onChangeDescription","onChangeCode","onChangePrimary","onDeleteDiagnosis","tooltipOpen","setTooltipOpen","delete","Tooltip","GivenDiagnosisField","givenDiag","onChangeGivenDiag","given_diagnosis","DiagnosisList","openDeleteDialog","setOpenDeleteDialog","handleOnClickAddDiagnosis","defaultBehaviour","lastEntry","handleOnChangeIcd10","getIcd10Suggestions","synonym","getICDSynonyms","handleOnConfirmDelete","create","Table","_children","TableHeader","TableBody","TableRow","expanded","expandable","setExpandable","cells","setCells","TableRowExpandable","ProcedureForm","doValidate","showAmountPaidByMember","showPhilhealthField","showAmountNotCovered","showAmountDueFromMember","procedure","dropDown","_errors","prop","handleOnChangeCpt","getCptSuggestions","handleOnChangeDiagnosis","fieldArr","_field","cpt","reason_charging","amount_due_from_client","reason_for_charging_client","buttons","handleOnUpdate","handleOnRemoveConfirm","handleOnRemove","Item","List","lineItems","dental_procedures","ProcedureList","handleClickLineDiscrepancy","Set","expand","center","right","Total","HospitalItemForm","showPhilhealthRemarks","hospitalItem","handleOnChangeHospitalItem","getHospitalItemSuggestions","hospital_item","handleOnSave","handleOCancel","HospitalItemList","ProfessionalFeeForm","professionalFee","pfSuggestions","pfDoctor","handleOnChangeDoctor","main","major","getSpecializationSuggestions","getDoctorSpecilizations","handleOnChangeSpecialization","professional_fee","ProfessionalFeeList","ClaimFooter","onReject","onViewAnalysisSheet","onViewLetterOfAdvice","onReassign","onEscalate","onApprove","isReimbursement","onRemove","onViewClaimNotice","onReturn","reimbursement_info","userManagementService","escalations","c_return","return","rejectStatus","confirm","escalateModal","setEscalateModal","reassignModal","setReassignModal","returnModal","setReturnModal","rejectModal","setRejectModal","discrepancyModal","setDiscrepancyModal","approveModal","setApproveModal","saveModal","setSaveModal","cancelModal","setCancelModal","removeModal","setRemoveModal","validateModal","setValidateModal","dropDownUsers","setDropDownUsers","escalationErrors","setEscalationErrors","returnError","setReturnErrors","initDropdownUsers","roles","getUsersByRole","sortBy","handleOnShowApprovalMatrix","AuthorityMatrix","approve","other_types","selected_amount","goBack","doValidateMiddleware","left","return_advice","analysis_sheet","enabled","visible","letter_of_advice","escalate","handleOnApproval","remove","modals","EscalateValidator","doValidateEscalation","ReconValidator","doValidateReassign","ReturnValidator","doValidateReturn","DisapprovedLabel","reasons","disapproved","generateMessage","TextFieldSubmit","ChatBox","confirmMessage","onSubmitComment","lastDate","confirmSubmitDialog","setConfirmSubmitDialog","setComment","isMe","timestamp","sdate","doDateSplit","balloon","sender","me","receive","mheader","time","mbody","ExcalateValidator","TabPanel","CustomTabs","defaultIndex","containerSyles","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","CustomTab","SideBar","contractId","nodes","onItemClick","TreeView","defaultCollapseIcon","defaultExpandIcon","node","TreeItem","nodeId","planPackage","benefitCategory","benefits","tree_id","ValueField","FloatingFields","elements","setFields","elem","layout","unit","Functions","parent_name","limit_type","limits","age_limit","max_availee","DefaultValue","no_of_days","time_from","time_to","member_type","plan_type","peso_limit_amt","no_of_members","peso_limit","payment","availment","limit_unit","DigitFormatter","Unit","rollover","UpperWord","eligible_availees","days_deployed","eligibility","empty","RB","EM","OP","PV","SD","MT","OM","CC","number_of_days","DNT","SH","ADD","mobile_ape_availees","partner","rb_limit_type","abl_mbl","rb_limit","rb_mode_of_payment","annual","semiannual","quarterly","monthly","mode_of_payment","rb_pec_limit_type","pec","PHP","Months","rb_pec_limit","rb_pec_limit_specify","time_based_limit","number_mount","day_based","billing_arangement","billingArrangement","premium","billback","rider_fee","imputed_in_premiums","billback_net","fixed_rate_rider","fixed_rate_personnel","soa_rate","soa_actual_cost","billback_fee","billback_type","rider_fee_unit","waiting_period","waiting_period_type","waitin_period_unit","limit_for_all","limit_for_all_unit","availment_per_year","voluntary_upgrading_type","voluntary_upgrading_amount","involuntary_upgrading_type","except_suite_room","involuntary_upgrading_amount","Benefits","setTable","setContractId","planType","setPlanType","setPlanPackage","setBenefitCategory","lastRoomAndBoard","setLastRoomAndBoard","roomAndBoard","setRoomAndBoard","coverages","setCoverages","riders","setRiders","rootNode","setRootNode","benefitNode","setBenefitNode","setHeaders","footers","setFooters","MCT","benefit_tree","rnb","_keys","_name","getRows","BenefitTable","getHeaders","getFooters","parent_keys","pkey","sub_node","acc","BenefitHeaders","BenefitFooters","handleTableSort","handleTableFilter","selectedPlan","setSelectedPlan","planTypes","setPlanTypes","allExclusions","setAllExclusions","exclusionList","setExclusionList","getExclusions2","handleOnSetItem","plan_types","plan_types_keys","planTypeKey","ex_nodes","exclusionKey","inner_node","innerKey","is_excluded","item_name","parent_code","handleOnSearch","benefit","queriedData","mutable_data","onQuery","sortedData","Link","headCellsDoctors","PartnerNetwork","partnerService","doctorService","partners","setPartners","fetchPartner","fetchDoctors","onQueryColumn","collection","onQueryAll","location","handleOnClickAffiliated","schedule","Contract","getMemberContract","getClientContract","setFileName","setTitle","setService","NameFormatter","format2","brand_name","pdf","initialPageNumber","initialScale","RightPanelTabs","onReturnEscalate","onReturnInquire","memberFetchStatus","clientFetchStatus","memberFetchMessage","getPartners","getDoctors","getMemberContractUrl","getClientContractUrl","inquiries","recon","tabs","communication","comments","ClaimsRemarks","selected_fields","available_fields","boolean","contract_year_from","contract_year_to","official_receipt_number","getValidators","getValidators2","ClaimInPatient","onChangeFacility","onChangePro","_type","getClaimDetails","getReason","doValidateAll","doValidateProcedure","doValidateHospitalItem","doValidateProfessionalFee","_allowedFields","_lineItemFields","getRooms","pro","claim_sub","sub_type","desc","base","startOf","constainerStyle","validator","MainValidator","ClaimOutPatientProcedure","onChangeAnaesthesiologist","anesthesiologist","ClaimOutPatientConsultation","ClaimEmergency","ClaimMedicineAllowance","account_name","ContractRange","hasDiscrepancy","handleOnItemClick","Incisor1","viewBox","crown","gums","fill","Incisor2","Incisor3","Incisor4","Canine1","Canine2","Premolar1","Molar1","Molar2","TeethFactory","flipY","circle","teeth","flipX","TeethGroup","states","_details","startAt","reverse","uppper","lower","DentalChart","chart","upper","ClaimDental","contract_year","constructDentalStates","ClaimAPE","ClaimECU","ClaimPharmacy","ClaimPPE","ppe_packagers","ppe_packages","ListItem","ListItemText","ClaimMedicalSupplies","ClaimClinicManagement","ReimbursementInfo","canPrintNotice","setShowModal","doReject","doViewClaimNotice","lookup","reimbursement_info_analysts","showAdd","setShowAdd","reasonDropdown","setReasonDropdown","showCell","handleOnClickCancel","handleOnClickUpdate","handleOnItemSave","date_created","prepared_by","date_encoded","released_to","date_released","date_return","handleOnClickSave","scrollTo","top","scrollHeight","behavior","ItemForm","defaultFunction","setItem","today","handleOnLookup","handleOnChangeReason","hasError","tempReasons","other_details","__index","mock_data","fileType","base64","UploadedList","aria-controls","aria-haspopup","other_fields","AdditionalFields","additional_fields","exist","ClaimReimbursement","batchNumber","setBatchNumber","allowedFields","setAllowedFields","initialAllowedFields","setInitialAllowedFields","showReimbursementModal","setShowReimbursementModal","_claim","reimbursement_details","endOf","wrap","permission","DashboardRedirect","counter","setCounter","_counter","interval","setInterval","clearInterval","GetClaimComponent","_props","SelectecClaimType","hasPrimary","itemError","ClaimAnalysis","breadCrumbsList","isManager","icd10","setMemberFetchMessage","setClientFetchStatus","setGrandTotal","claimNumber","setClaimNumber","getClaim","_claim_type","__type","getDiscrepancy","getClaimType","getEscalationLogs","getInquiryLogs","getReconNotes","group","groupEnd","getProSuggestions","proUsersLookup","getAnaesthesiologistSuggestions","anaesthesiologist","getClient","adjudicationResults","fieldIndex","item_type","item_id","getComments","getInquiries","getNotes","getReport","getAnalysisSheet","getReports","getLetterOfAdvice","getLetterNotice","doValidateBase","rest","doValidateDiagnosis","DiagnosisListValidator","not","ProcedureValidator","diagnosisError","exists","ProcedureDiagnosisValidator","HospitalItemValidator","HospitalItemDiagnosisValidator","ProfessionalFeeValidator","ProfessionalFeeDiagnosisValidator","inquire","receiver_id","onInquire","employee_id","removeClaim","returnClaim","base_errors","createdBundles","specificClaim","utilization","contact","OpenBatchesTile","getBatchCount","openBatches","openBatchCount","handleOnEncode","assignBatch","MyBatchesTile","myBatches","myBatchCount","CompletedBatchesTile","completedBatches","completedBatchCount","openTickets","BatchesPage","BatchDetails","ClaimListHeader","onClickAdd","onClickProviderSchedule","inputChange","cmHeadCells","prManagerheadCells","ClaimList","selectedClaimNumber","onConfirm","actionItems","setActionItems","submittedBatch","setPagination","setOrder","setOrderBy","claim_numbers","claimNumbers","handleRequestSort","rowsLength","allowCheck","allowCheckDisabled","ProviderSchedule","header1","fontStyle","partition","BatchPage","apiService","setSelectedClaimNumber","claimCount","setClaimCount","showProviderSchedule","setShowProviderSchedule","cancelDialog","setCancelDialog","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","getClaimsAndCount","_batchNumber","getBatch","submitBatch","deleteMultipleClaim","reqApprovalCode","reqLoaNumber","ClaimsEncoding","handleOnRemoveDiagnosis","CptTextFields","CptTextField","unsubscribe","subscribe","handleOnChangeProcedureForm","diagnosi","handleOnUpdateProcedure","HospitalItemTextFields","HospitalItemTextField","onChangeName","handleOnChangeHospitalForm","handleOnUpdateHospitalItem","handleOnChangeProfessionalFeeForm","handleOnUpdateProfessionalFee","setDentalProcedure","showProcedureForm","generateKey","showHospitalItemForm","showProfessionalFeeForm","lineItemFields","setlineItemFields","isAdd","ToothNumber","DentalProcedureForm","dentalProcedure","doValidateDentalProcedure","isModified","setIsModified","showSaveAlert","setShowSaveAlert","minWidth","setType","initial_values","_setDialog","_resolve","SoftValidatorAlertComponent","SoftValidatorService","resetGrandTotal","ClaimPage","_dentalProcedure","_procedure","_hospitalItem","_professionalFee","_claimNumber","pageTitle","breadCrumbs","getBatchDetails","DentalProcedureValidator","DentalProcedureDiagnosisValidator","claimFields","updateClaim","specificBatch","ClaimsEncoderTile","getEncoders","getEncodersBatches","total_count","startCase","total_batches","ClaimsEncoderSupervisorServices","setReassignNotes","handleOnSubmitReassign","CreatedBatchesPage","setSelectStatus","headcell","setId","getEncoderBatches","handleTableRenderer","handleSelectAll","handleItemSelect","cesFooter","prev_user","getEncoderBatch","assigned","ForAdjudicationTile","handleOnAnalyze","assignClaim","handleFilterChange","MyClaimsTile","my","SubmittedClaimsTile","disableLoaButton","setDisableLoaButton","handleClickSubmitted","has_amount_concerns","submitted","handleOnShowPdf","Menu","keepMounted","zIndex","ITEM_HEIGHT","ReturnedEscalatedClaimsTile","escalated","AutoCompletes","storage","handleOnChangeAutosuggest2","facilities","DatePicker","tabindex","InputRef","handleOnFocus","handleDateChange","MomentUtils","allowKeyboardControl","clearable","DatePickers","DateValidator","pdfjs","GlobalWorkerOptions","workerSrc","version","forwardRef","Slide","MozillaPdf","setUrl","_blob","blobUrl","URL","createObjectURL","_url","encodeURIComponent","blobToBase64","pdfAsDataUri","pdfArray","convertDataURIToBinary","PdfViewer","document","getElementById","contentWindow","PDFViewerApplication","base64Index","atob","rawLength","array","Uint8Array","ArrayBuffer","charCodeAt","iframe","src","MozillaPdfURL","mct","Service","Test","setStorage","toggle","setToggle","sidebar","analyze","exclusions","ForPaymentRequestTile","mTitle","paymentRequestClaimCount","SubmittedPaymentRequestTile","OverrideClaimTile","PaymentRequestServices","pendingHeadCells","submittedHeadCells","PaymentRequestPage","setBundleNumber","prRemarks","setPrRemarks","pending","getPaymentRequest","getPaymentRequestBatches","resetBatches","utilization_amount","pr_amount","selectedBatches","_batch","getSelectedPending","checkboxColor","requestBatch","should_include","supervisor","approved_by_uid","paymentRequest","specificPaymentRequest","submittedPaymentRequest","SubmittedPrSupervisorTile","getSubmittedPaymentRequest","bundleResponse","submittedRequestClaims","submittedRequestClaimCount","verifierName","total_bundles","processor_id","PaymentRequestSupervisorServices","pr_officer","getPaymentRequestBundles","handleOnSearchColumn","for_review","handleOnReview","review","reassignData","setReassignData","getClaimsAnalyst","claimsCount","ClaimsReimbursementServices","MedicalCollectiblesServices","ClaimsPage","userId","setClaimsCount","ClaimsVerifierSupervisorServices","getItems","handleUnselectAll","handleOnSearchAll","RejectedClaimsTile","getItemCount","ClaimsVerifierTile","verifiers","setVerifiers","totalSubordinatesClaims","getSubordinates","usersCount","prev","handleOnReviewUser","total_claims","ReconTIle","ClaimsForApprovalTile","MedicalCollectiblesTile","ReimbursementClaimTile","ReconciledClaimsTile","reconciled","forApproval","view","reimbursement","forAdjudicationPermissions","forApprovalPermissions","checkThreshold","forReconciledPermissions","viewPermission","reviewPermission","rejectedPermissions","ClaimsManagerServices","BatchDetailsPage","UserManagementApi","setClaim","forOverride","setForOverride","getClaimsVerifierSupervisors","analystRes","supervisorRes","getApprovedClaims","overrideClaims","handling_time_formatted","initialItem","deactivate","handling_time","kpi_columns","MaintenancePage","setLookup","showAddItem","setShowAddItem","setSection","setindex","lookupsAll","ClaimsMaintainerServices","isActive","handleOnSaveItem","initialLookup","storeLookups","updateLookups","handleOnEditItem","handleOnCancelItem","activate","showSeconds","maintenance","submittedSpecificPaymentRequest","prManagerPermissions","initialState","bundlesReducer","batchReducer","suggestionsReducer","combineReducers","claimReducer","claimTypeReducer","dropDownReducer","procedureReducer","hospitalItemReducer","professionalFeeReducer","grandTotalReducer","dentalProcedureReducer","reassignReducer","errorReducer","discrepancyReducer","escalationReducer","inquiryReducer","rejectReducer","reconReducer","utilizationReducer","returnReducer","reducers","createStore","ClaimsModule","setUserRole","isLoading","setIsLoading","mapRoles","store","Store","render","SideBarService","BatchEncoderRoutes","removeItem","batchEncoderLogic","BatchEncoderSupervisorRoutes","ClaimsDetailsEncoderRoutes","BatchePage","ClaimsDetailsEncoderSupervisorRoutes","ClaimsAnalystRoutes","SubmittedPaymentRequestPage","PaymentRequestRoutes","SubmittedPaymentRequestList","PaymentRequestSupervisorRoutes","MedicalConsultantRoutes","ClaimsReconRoutes","ClaimsList","ClaimsVerifierSupervisorRoutes","ClaimsManagerRoutes","numeral","sentence","isValid","DateFormatterByAbbreviation","abr","lastName","firstName","middleName","format1","onPaste","useStyles1","makeStyles","flexShrink","TablePaginationActions","useTheme","ceil","CustomTable","SelectProps","inputProps","native","ActionsComponent","DashboardTileComponent","currency","thousandSeparator","decimalScale","allowEmptyFormatting","fixedDecimalScale","useStyles","paddingLeft","paddingRight","highlight","palette","secondary","lighten","light","dark","spacer","paper","marginBottom","analystTable","tableWrapper","overflowX","visuallyHidden","border","clip","sorter","analyst","sortDirection","dataheader","newType"],"mappings":"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","file":"static/js/7.db3f1cf9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__2-8KB\",\"first-container\":\"ClaimReimbursement_first-container__18fTD\",\"wrap\":\"ClaimReimbursement_wrap__3HMhP\",\"input\":\"ClaimReimbursement_input__3la5w\",\"child-container\":\"ClaimReimbursement_child-container__1kWRr\",\"tables-container\":\"ClaimReimbursement_tables-container__PR9B_\",\"left-side\":\"ClaimReimbursement_left-side__1m7FN\",\"wrapper\":\"ClaimReimbursement_wrapper__246w6\",\"table\":\"ClaimReimbursement_table__2S73N\",\"table-header\":\"ClaimReimbursement_table-header__1zQ8j\",\"table-description\":\"ClaimReimbursement_table-description__2tmiu\",\"add-link\":\"ClaimReimbursement_add-link__2JH4c\",\"row\":\"ClaimReimbursement_row__1OSjx\",\"align\":\"ClaimReimbursement_align__3OEDi\",\"center\":\"ClaimReimbursement_center__13TIn\",\"right\":\"ClaimReimbursement_right__3fu2G\",\"table-total\":\"ClaimReimbursement_table-total__3dvpa\",\"caption\":\"ClaimReimbursement_caption__2HDFA\",\"amount\":\"ClaimReimbursement_amount__3l1fZ\",\"right-side\":\"ClaimReimbursement_right-side__14Gxn\",\"sticky\":\"ClaimReimbursement_sticky__26GxQ\",\"groups\":\"ClaimReimbursement_groups__38k8I\",\"grand-total\":\"ClaimReimbursement_grand-total__7vHa3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2d4M4\",\"tiles\":\"Dashboard_tiles__16_MG\",\"row\":\"Dashboard_row__2TDbS\",\"task-tray\":\"Dashboard_task-tray__1YmzT\",\"task-tray-monitor\":\"Dashboard_task-tray-monitor__1FeES\",\"ticket-list\":\"Dashboard_ticket-list__1Q0kW\",\"wrapper\":\"Dashboard_wrapper__1T3tt\",\"float\":\"Dashboard_float__1Xub9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2xUj2\",\"buttons\":\"ButtonFooter_buttons__3v_r7\",\"counter\":\"ButtonFooter_counter__1pqmU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__1B1lo\",\"header-container\":\"AssignDialog_header-container__2q19w\",\"header\":\"AssignDialog_header__4mmtH\",\"title\":\"AssignDialog_title__1t8cw\",\"content\":\"AssignDialog_content__Y7uRW\",\"input\":\"AssignDialog_input__2npYe\",\"footer\":\"AssignDialog_footer__3QHDI\",\"assign\":\"AssignDialog_assign__1aP36\",\"to\":\"AssignDialog_to__2eLiV\",\"action\":\"AssignDialog_action__2H051\",\"message-content\":\"AssignDialog_message-content__1NrdY\",\"message\":\"AssignDialog_message__27R73\",\"message-child\":\"AssignDialog_message-child__2eYo7\",\"alert-title\":\"AssignDialog_alert-title__ZMO3M\",\"footer-action\":\"AssignDialog_footer-action__27lzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBatchesPage_root__1b7-1\",\"table-container\":\"CreatedBatchesPage_table-container__1gFsH\",\"search-container\":\"CreatedBatchesPage_search-container__2wgNb\",\"reassign\":\"CreatedBatchesPage_reassign__14Y6T\",\"search\":\"CreatedBatchesPage_search__2mhtd\",\"action-container\":\"CreatedBatchesPage_action-container__Pa7R0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__1PwO3\",\"groups\":\"BatchDetails_groups__3A2VN\",\"input\":\"BatchDetails_input__3hwk1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__2YvdB\",\"title\":\"ClaimListHeader_title__2tIMg\",\"wrapper\":\"ClaimListHeader_wrapper__1gVaD\",\"button\":\"ClaimListHeader_button__2wf-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__27Pnu\",\"default-override\":\"ClaimList_default-override__2T421\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__3iS6_\",\"claims-container\":\"BatchPage_claims-container__FFC4C\",\"footer\":\"BatchPage_footer__6IBOB\",\"actions\":\"BatchPage_actions__BbrLm\",\"delete-button\":\"BatchPage_delete-button__1-tPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2It_d\",\"tiles\":\"Dashboard_tiles__2DX72\",\"task-tray\":\"Dashboard_task-tray__2MeJZ\",\"list-item\":\"Dashboard_list-item__1ixUY\",\"details\":\"Dashboard_details__39R6g\",\"detail-item\":\"Dashboard_detail-item__1qIsO\",\"label\":\"Dashboard_label__2wpxb\",\"content\":\"Dashboard_content__2vmkp\",\"action\":\"Dashboard_action__10xYG\",\"ticket-list\":\"Dashboard_ticket-list__1iTbF\",\"wrapper\":\"Dashboard_wrapper__3z4j1\",\"float\":\"Dashboard_float__1Hiew\",\"completed_task\":\"Dashboard_completed_task__RN1as\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoCompletes_root__3VomJ\",\"row\":\"AutoCompletes_row__2edh8\",\"input\":\"AutoCompletes_input__1HQMh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete2_root__3UklH\",\"label\":\"AutoComplete2_label__2aYnX\",\"wrapper\":\"AutoComplete2_wrapper__2l9AY\",\"read-only-value\":\"AutoComplete2_read-only-value__iw_ZE\",\"autocomplete-field\":\"AutoComplete2_autocomplete-field__3dqsR\",\"form-control\":\"AutoComplete2_form-control__3US8H\",\"input\":\"AutoComplete2_input__2Kacp\",\"suggestions\":\"AutoComplete2_suggestions__3Hk_p\",\"hint\":\"AutoComplete2_hint__1xnov\",\"focus\":\"AutoComplete2_focus__2MNoR\",\"has-error\":\"AutoComplete2_has-error__ENTzw\",\"error\":\"AutoComplete2_error__2W2Jj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker2_root__1r6Z9\",\"label\":\"DatePicker2_label__3BHxf\",\"wrapper\":\"DatePicker2_wrapper__2ZI6k\",\"read-only-value\":\"DatePicker2_read-only-value__2L4OC\",\"text-field\":\"DatePicker2_text-field__Lv2wC\",\"no-margin\":\"DatePicker2_no-margin__39w9o\",\"input\":\"DatePicker2_input__2hUsU\",\"date-button\":\"DatePicker2_date-button__2uQQh\",\"focus\":\"DatePicker2_focus__3TxVW\",\"has-error\":\"DatePicker2_has-error__2tZKL\",\"disabled\":\"DatePicker2_disabled__3QAJt\",\"error\":\"DatePicker2_error__M0Iam\",\"date\":\"DatePicker2_date__3RrS2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePickers_root__381pb\",\"row\":\"DatePickers_row__I0Ddo\",\"input\":\"DatePickers_input__2w9fM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-bar\":\"PdfViewer2_app-bar__2kwNx\",\"root\":\"PdfViewer2_root__3VQ5V\",\"controls\":\"PdfViewer2_controls__3laeY\",\"file-name\":\"PdfViewer2_file-name__O5GJF\",\"search\":\"PdfViewer2_search__pIcMV\",\"control\":\"PdfViewer2_control__2wFob\",\"disabled\":\"PdfViewer2_disabled__1M8Rk\",\"text-field\":\"PdfViewer2_text-field__3t01F\",\"viewport\":\"PdfViewer2_viewport__2D8bk\",\"pdf\":\"PdfViewer2_pdf__1ZjLL\",\"page\":\"PdfViewer2_page__3-kXS\",\"page-number\":\"PdfViewer2_page-number__2dQXJ\",\"iframe\":\"PdfViewer2_iframe__3685G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PdfViewers_root__2wO8p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Test_root__LER1m\",\"sidebar\":\"Test_sidebar__2YogX\",\"content\":\"Test_content__3fR18\",\"title\":\"Test_title__-J_1y\",\"wrapper\":\"Test_wrapper__2chOq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1WSgv\",\"tiles\":\"Dashboard_tiles__URUGc\",\"task-tray\":\"Dashboard_task-tray__3PFmp\",\"list-item\":\"Dashboard_list-item__1dXth\",\"details\":\"Dashboard_details__1uD2x\",\"detail-item\":\"Dashboard_detail-item__2Xq4I\",\"label\":\"Dashboard_label__2Y7DU\",\"content\":\"Dashboard_content__12k-O\",\"action\":\"Dashboard_action__3-klY\",\"ticket-list\":\"Dashboard_ticket-list__3SSgK\",\"wrapper\":\"Dashboard_wrapper__3sukD\",\"float\":\"Dashboard_float__3_xKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestPage_root__2gGvt\",\"text-fields\":\"PaymentRequestPage_text-fields__3gFF0\",\"sub-container\":\"PaymentRequestPage_sub-container__a_dOn\",\"input-container\":\"PaymentRequestPage_input-container__2GjiG\",\"ellipsis-container\":\"PaymentRequestPage_ellipsis-container__1Efns\",\"table-container\":\"PaymentRequestPage_table-container__2yAdZ\",\"headers\":\"PaymentRequestPage_headers__1XNVW\",\"header\":\"PaymentRequestPage_header__3MXgw\",\"submit-header\":\"PaymentRequestPage_submit-header__19DA-\",\"dialog-container\":\"PaymentRequestPage_dialog-container__1a70q\",\"group\":\"PaymentRequestPage_group__JBVfR\",\"buttonWrapper\":\"PaymentRequestPage_buttonWrapper__1W80E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestPage_root__3CH1o\",\"text-fields\":\"SubmittedPaymentRequestPage_text-fields__1EAYV\",\"sub-container\":\"SubmittedPaymentRequestPage_sub-container__39S8A\",\"input-container\":\"SubmittedPaymentRequestPage_input-container__1e-Ty\",\"ellipsis-container\":\"SubmittedPaymentRequestPage_ellipsis-container__1UrAU\",\"table-container\":\"SubmittedPaymentRequestPage_table-container__3oIBa\",\"headers\":\"SubmittedPaymentRequestPage_headers__IUsth\",\"header\":\"SubmittedPaymentRequestPage_header__1W3nu\",\"dialog-container\":\"SubmittedPaymentRequestPage_dialog-container__2sZln\",\"buttonWrapper\":\"SubmittedPaymentRequestPage_buttonWrapper__3s1pG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__3PeJc\",\"tiles\":\"Dashboard_tiles__OVU2I\",\"task-tray\":\"Dashboard_task-tray__1krbX\",\"list-item\":\"Dashboard_list-item__3vY_C\",\"details\":\"Dashboard_details__3NoCG\",\"detail-item\":\"Dashboard_detail-item__JLMfd\",\"label\":\"Dashboard_label__3AA6w\",\"content\":\"Dashboard_content__16txH\",\"action\":\"Dashboard_action__Apy9_\",\"ticket-list\":\"Dashboard_ticket-list__2Kmdx\",\"wrapper\":\"Dashboard_wrapper__1-oZ4\",\"float\":\"Dashboard_float__3w1H_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestList_root__dXrnn\",\"header-container\":\"SubmittedPaymentRequestList_header-container__33jMu\",\"header\":\"SubmittedPaymentRequestList_header__1UkBI\",\"title\":\"SubmittedPaymentRequestList_title__31KGj\",\"search\":\"SubmittedPaymentRequestList_search__1SQIf\",\"table\":\"SubmittedPaymentRequestList_table__1sht8\",\"buttonWrapper\":\"SubmittedPaymentRequestList_buttonWrapper__2ZvKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__2ue5H\",\"header-container\":\"ViewList_header-container__q77ZU\",\"header\":\"ViewList_header__2lKSa\",\"title\":\"ViewList_title__AuuEZ\",\"content\":\"ViewList_content__3GRUr\",\"search\":\"ViewList_search__cofXm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28Vtl\",\"tiles\":\"Dashboard_tiles__1wpMD\",\"task-tray\":\"Dashboard_task-tray__1IvyN\",\"list-item\":\"Dashboard_list-item__12jAd\",\"details\":\"Dashboard_details__2H0bw\",\"detail-item\":\"Dashboard_detail-item__3Fwan\",\"label\":\"Dashboard_label__3wCdh\",\"content\":\"Dashboard_content__39XQQ\",\"action\":\"Dashboard_action__1O7UY\",\"ticket-list\":\"Dashboard_ticket-list__kcd4U\",\"wrapper\":\"Dashboard_wrapper__2FBsH\",\"float\":\"Dashboard_float__WBsaU\",\"completed_task\":\"Dashboard_completed_task__y2ijY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2pt7a\",\"tiles\":\"Dashboard_tiles__2zhqD\",\"row\":\"Dashboard_row__3jP5M\",\"task-tray\":\"Dashboard_task-tray__2N8YZ\",\"list-item\":\"Dashboard_list-item__JD2zf\",\"details\":\"Dashboard_details__1uEl7\",\"detail-item\":\"Dashboard_detail-item__2ijgN\",\"label\":\"Dashboard_label__34lgV\",\"content\":\"Dashboard_content__3COhO\",\"action\":\"Dashboard_action__36U9f\",\"ticket-list\":\"Dashboard_ticket-list__2OwTr\",\"wrapper\":\"Dashboard_wrapper__Q93wn\",\"float\":\"Dashboard_float__2hGqR\",\"completed_task\":\"Dashboard_completed_task__3VhqT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2X5k5\",\"buttons\":\"ButtonFooter_buttons__2aw08\",\"counter\":\"ButtonFooter_counter__20NW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__RJlxK\",\"header-container\":\"AssignDialog_header-container__1o5Gi\",\"header\":\"AssignDialog_header__3ISr0\",\"title\":\"AssignDialog_title__2y4cT\",\"content\":\"AssignDialog_content__24eRW\",\"input\":\"AssignDialog_input__NW5vD\",\"footer\":\"AssignDialog_footer__2rmZz\",\"assign\":\"AssignDialog_assign__2WmDm\",\"to\":\"AssignDialog_to__1Lcwa\",\"action\":\"AssignDialog_action__2z0LV\",\"message-content\":\"AssignDialog_message-content__WGOqe\",\"message\":\"AssignDialog_message__3BYCA\",\"message-child\":\"AssignDialog_message-child__2BQeL\",\"alert-title\":\"AssignDialog_alert-title__gx1Vh\",\"footer-action\":\"AssignDialog_footer-action__rMIKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsList_root__32NKA\",\"table-container\":\"ClaimsList_table-container__2xz0B\",\"search-container\":\"ClaimsList_search-container__1JKTH\",\"reassign\":\"ClaimsList_reassign__177eW\",\"search\":\"ClaimsList_search__2869S\",\"action-container\":\"ClaimsList_action-container__3VFV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1zt4e\",\"tiles\":\"Dashboard_tiles__N_XeU\",\"row\":\"Dashboard_row__3-lCS\",\"task-tray\":\"Dashboard_task-tray__L-btV\",\"list-item\":\"Dashboard_list-item__2Z2uy\",\"details\":\"Dashboard_details__-wyqw\",\"detail-item\":\"Dashboard_detail-item__jAHga\",\"label\":\"Dashboard_label__KNpiW\",\"content\":\"Dashboard_content__17Lfg\",\"action\":\"Dashboard_action__38kLX\",\"ticket-list\":\"Dashboard_ticket-list__3bes0\",\"wrapper\":\"Dashboard_wrapper__38JoV\",\"float\":\"Dashboard_float__1YyQM\",\"completed_task\":\"Dashboard_completed_task__1dK9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28tvA\",\"tiles\":\"Dashboard_tiles__1xRNf\",\"row\":\"Dashboard_row__1lZjx\",\"task-tray\":\"Dashboard_task-tray__m0Mne\",\"list-item\":\"Dashboard_list-item__1W9Rx\",\"details\":\"Dashboard_details__3v-9d\",\"detail-item\":\"Dashboard_detail-item__SBoHO\",\"label\":\"Dashboard_label__2lH5b\",\"content\":\"Dashboard_content__3NMtD\",\"action\":\"Dashboard_action__nDNUz\",\"ticket-list\":\"Dashboard_ticket-list__3Y9ji\",\"wrapper\":\"Dashboard_wrapper__3fNte\",\"float\":\"Dashboard_float__3aYNI\",\"completed_task\":\"Dashboard_completed_task__2-BCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__vQHL2\",\"header-container\":\"AssignDialog_header-container__1qQN2\",\"header\":\"AssignDialog_header__3PltF\",\"title\":\"AssignDialog_title__e_cZ1\",\"content\":\"AssignDialog_content__3wFoW\",\"input\":\"AssignDialog_input__AeSdQ\",\"footer\":\"AssignDialog_footer__3dKcT\",\"assign\":\"AssignDialog_assign__X3IaA\",\"to\":\"AssignDialog_to__2FSjd\",\"action\":\"AssignDialog_action__HdROx\",\"message-content\":\"AssignDialog_message-content__3s8j-\",\"message\":\"AssignDialog_message__1o7jm\",\"message-child\":\"AssignDialog_message-child__l94pI\",\"alert-title\":\"AssignDialog_alert-title__3GyBp\",\"footer-action\":\"AssignDialog_footer-action__2CQoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetailsPage_root__1WnVw\",\"footer\":\"BatchDetailsPage_footer__2mXHQ\",\"actions\":\"BatchDetailsPage_actions__qSR-l\",\"delete-button\":\"BatchDetailsPage_delete-button__17y_B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MaintenancePage_root__18jNl\",\"button-parent\":\"MaintenancePage_button-parent__1YFg4\",\"active\":\"MaintenancePage_active__3Ltsc\",\"header\":\"MaintenancePage_header__3ou_p\",\"header-wrapper\":\"MaintenancePage_header-wrapper__14ljZ\",\"header-text\":\"MaintenancePage_header-text__LYsHh\",\"table\":\"MaintenancePage_table__2RLkb\",\"add-item-root\":\"MaintenancePage_add-item-root__iVNF-\",\"wrapper\":\"MaintenancePage_wrapper__3LPhK\",\"text-wrapper\":\"MaintenancePage_text-wrapper__27CjW\",\"radio-buttons\":\"MaintenancePage_radio-buttons__1E3wP\",\"button-wrapper\":\"MaintenancePage_button-wrapper__DTWi8\",\"button-wrapper-kpi\":\"MaintenancePage_button-wrapper-kpi__1hwlU\"};","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Style\nimport classes from './LoadingIndicator.module.scss'\n\nexport default function LoadingIndicator (props) {\n  // Variables\n  const { loading = false, children } = props\n  // Services\n  // Events\n  // Callbacks\n  // Local Variables\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        <div className={classes.root}>\n          <div className={classes.loading} id='loading-overlay'>\n            <CircularProgress id='fetching-animation' className={classes.animation} size={50} />\n          </div>\n        </div>\n      ) : (\n        children\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n// import DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\nexport default function CustomizedDialogs ({\n  id,\n  columns,\n  searchTextPlaceHolder,\n  viewList,\n  setViewList,\n  onViewListChange,\n  body,\n  fetching = false\n}) {\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    // console.log(args)\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    onViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <Dialog\n      id={id}\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose} id='close'>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent id={`${id}-body`} dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent id='search' onChange={handleSearchChange} placeholder={searchTextPlaceHolder} />\n        </div>\n\n        <Table\n          id={`${id}-table`}\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow id={`${id}-header`}>\n              {columns.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  <TextField\n                    onChange={event => {\n                      const search = event.target.value\n                      clearTimeout(debounce)\n                      setDebounce(\n                        setTimeout(() => {\n                          handleColumnFiltering({\n                            field: headCell.sortField,\n                            value: search,\n                            match: headCell.match\n                          })\n                        }, 500)\n                      )\n                    }}\n                  />\n                  {/* {(headCell.type && headCell.type === 'date') || headCell.match === 'date' ? (\n                    <DatePicker\n                      noMargin\n                      id={`${headCell.field}`}\n                      onChange={date => {\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: date.toISOString(),\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                      value={null}\n                    />\n                  ) : (\n                    <TextField\n                      noMargin\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: search,\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  )} */}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={\n            fetching ? (\n              <TableRow>\n                <TableCell colSpan={columns.length}>\n                  <LoadingIndicator loading={fetching} />\n                </TableCell>\n              </TableRow>\n            ) : (\n              body(viewList.data)\n            )\n          }\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CreatedBundlesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const generateBundleNumber = () => {\n    LoadingService.loading(true)\n    services.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBundles({\n        category: 'created',\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'created' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    setFetching(true)\n    services\n      .getBundles({\n        category: 'created',\n        range: value,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Created Bundles' })\n    setFetchingViewList(true)\n    services\n      .getBundles({ category: 'created', limit: 10, sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'created',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBundles(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'created-count' }}\n        sizes={sizes}\n        title='Created Bundles'\n        id='created-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='created-view-list'\n          >\n            View List\n          </Typography>\n        }\n        actionHeader={\n          <Button\n            variant='contained'\n            color='primary'\n            className='button-neutral'\n            onClick={generateBundleNumber}\n            id='create-new-bundle'\n          >\n            Create New Bundle\n          </Button>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.data.map((item, index) => (\n                <TableRow key={item.bundle_number}>\n                  <TableCell id={`created-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                  <TableCell id={`created-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`created-facility-name-${index}`}>{item.facility_name}</TableCell>\n                  <TableCell>\n                    <Link to={`/bundles/${item.bundle_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                        Update\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n      <ViewList\n        id='created-bundles'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCreatedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default CreatedBundlesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst SubmittedBundlesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBundles({\n        category: 'submitted',\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'submitted' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    setFetching(true)\n    services\n      .getBundles({\n        category: 'submitted',\n        range: value,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Submitted Bundles' })\n    setFetchingViewList(true)\n    services\n      .getBundles({ category: 'submitted', limit: 10, sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBundles(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'submitted-count' }}\n        sizes={sizes}\n        title='Submitted Bundles'\n        id='submitted-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-view-list'\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.data.map((item, index) => (\n                <TableRow key={item.bundle_number}>\n                  <TableCell id={`submitted-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                  <TableCell id={`submitted-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`submitted-facility-name-${index}`}>{item.facility_name}</TableCell>\n                  <TableCell>\n                    <Link to={`/bundles/${item.bundle_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-bundles'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedBundlesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n// CSS Classes\nimport classes from './TaskTrayComponent.module.scss'\n\nexport default function TaskTrayComponent ({ children, sizes, title = 'TASK TRAY', showTitle = true }) {\n  let items = React.Children.toArray(children)\n\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'DashboardTileComponent') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n\n  const _sizes = sizes || {\n    xs: 12,\n    sm: 6,\n    lg: 4\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root}>\n        {showTitle && (\n          <Typography variant='subtitle1' className={classes.title}>\n            {title}\n          </Typography>\n        )}\n        <Grid container className={classes.wrapper} spacing={3}>\n          {items.map((item, index) => {\n            let itemSize = item.props.sizes || {}\n            let s = { ..._sizes, ...itemSize }\n            return (\n              <Grid item {...s} key={index}>\n                {item}\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { Link } from 'react-router-dom'\n\n// CSS Classes\nimport classes from './TicketListComponent.module.scss'\n\n/**\n * Create ticket list component\n *\n * @param children child components \n * @param count count value to be displayed; keys: color, value\n * @param title title string\n * @param viewAllLink view all link\n * @param isFilterShown flag for showing filter\n */\nexport default function TicketListComponent ({ children, count, title, viewAllLink, isFilterShown = true }) {\n  const [filter, setFilter] = React.useState('all')\n  const handleChange = event => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <Grid container className={classes.root}>\n      <Typography variant='subtitle1' className={classes.title}>\n        TICKET LIST\n      </Typography>\n      <Grid container className={classes.wrapper} spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.content}>\n            <div className={classes.wrapper}>\n              <div className={classes.header}>\n                <div className={classes.count}>\n                  <Typography variant='h5' className='color-7'>\n                    {count}\n                  </Typography>\n                </div>\n                { isFilterShown ? (\n                  <div className={classes.filter}>\n                    <span>\n                      <FormControl>\n                        <Select className={classes['select']} value={filter} onChange={handleChange}>\n                          <MenuItem value={'all'}>\n                            <Typography className={classes.input}>Assigned to All</Typography>\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                    </span>\n                  </div>\n                ) : '' }\n              </div>\n              <Typography variant='subtitle2' className={classes.title}>\n                {title}\n              </Typography>\n              <div className={classes.list}>{children}</div>\n              <div className={classes.action}>\n                <Link to={viewAllLink.to} className='text-link'>\n                  <Typography variant='caption' className='bold'>\n                    {viewAllLink.caption}\n                  </Typography>\n                </Link>\n              </div>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/be')\n\nexport default class BatchEncodingServices {\n  static getBundles (params) {\n    return axios({\n      url: '/bundles',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundleCount (params) {\n    return axios({\n      url: `/bundles/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static createBundle () {\n    return axios({\n      url: `/bundles`,\n      method: 'POST'\n    })\n  }\n\n  static updateBundle ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static submitBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getBatches ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'GET'\n    })\n  }\n\n  static updateBatch ({ bundle_number, batch_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static createBatch ({ data, bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static deleteBatch ({ bundle_number, batch_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleBatch ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <CreatedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport classes from './AutoComplete2.module.scss'\n\nexport default function AutoComplete2 (props) {\n  const { label = '', required, readOnly, ...other } = props\n  const { value = '', field = 'id', loading, error, suggestions = [] } = props\n  const { onChange } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = (value, search) => {\n    setError()\n    if (typeof onChange === 'function') onChange(value, search)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <Autocomplete\n                className={classes.input}\n                options={suggestions}\n                noOptionsText={'Enter atleast 3 characters to search.'}\n                loading={loading || false}\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    className={classes.input}\n                    ref={params.InputProps.ref}\n                    InputProps={{\n                      ...params.InputProps,\n                      disableUnderline: true,\n                      endAdornment: (\n                        <React.Fragment>\n                          {loading ? <CircularProgress color='inherit' size={20} /> : null}\n                        </React.Fragment>\n                      )\n                    }}\n                  />\n                )}\n                getOptionLabel={option => (typeof option === 'string' ? option : `${option[field]}`)}\n                // renderOption={option => <React.Fragment>{option[field]}</React.Fragment>}\n                {...other}\n                onChange={(event, value) => {\n                  handleOnChange(value, false)\n                }}\n                onInputChange={(event, value) => {\n                  handleOnChange(value, true)\n                }}\n                onFocus={() => setFocus(true)}\n                inputValue={value}\n                value={typeof value === 'object' ? value[field] : value}\n                freeSolo\n                autoSelect\n                openOnFocus\n                autoHighlight\n              />\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\n\nimport classes from './TextFieldNumber.module.scss'\nexport default function TextFieldNumber (props) {\n  const { label = '', required, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {other.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={() => setFocus(false)}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { formattedValue, floatValue } = values\n                  return formattedValue === '' || floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport moment from 'moment'\n\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n\n// Services\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\nimport classes from './BundleDetails.module.scss'\n\nexport default function BundleDetails ({ details, errors, isReadOnly, onChange, disableControls }) {\n  // const [newBundle, setNewBundle] = React.useState({\n  //   bundle_number: '',\n  //   total_rcs: '',\n  //   soa_number: '',\n  //   facility_id: '',\n  //   facility_name: '',\n  //   doctor_id: '',\n  //   doctor_name: '',\n  //   date_received: moment(),\n  //   due_date: moment()\n  // })\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: [],\n    doctorPartner: []\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: []\n    }))\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              setSuggestions(state => ({ ...state, medicalPartner: data }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({\n      ...state,\n      doctorPartner: []\n    }))\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              setSuggestions(state => ({\n                ...state,\n                doctorPartner: data.map(i => ({ ...i, name: i.full_name }))\n              }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = ({ value, field, search }) => {\n    if (search) {\n      onChange({ field, value })\n      switch (field) {\n        case 'facility_id':\n          getMedicalPartnerSuggestions({ value, by: 'id', field })\n          break\n        case 'facility_name':\n          getMedicalPartnerSuggestions({ value, by: 'name', field })\n          break\n        case 'doctor_id':\n          getDoctorPartnerSuggestions({ value, by: 'id', field })\n          break\n        case 'doctor_name':\n          getDoctorPartnerSuggestions({ value, by: 'full_name', field })\n          break\n        default:\n          break\n      }\n    } else {\n      if (field === 'facility_id' || field === 'facility_name') {\n        handleOnChangeMedicalPartner({ value, field })\n      } else if (field === 'doctor_id' || field === 'doctor_name') {\n        handleOnChangeDoctorPartner({ value, field })\n      }\n    }\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field }) => {\n    // Compute due date based on date received and earliest term found\n    // Fallback term is 30 days\n    let term = 30\n    if (value.earliest_term) {\n      term = parseInt(value.earliest_term)\n      if (isNaN(term) || term < 0) {\n        term = 30\n      }\n    }\n    let newDate = moment(details.date_received)\n      .add(term, 'days')\n      .format('MM/DD/YYYY')\n    onChange({ field: 'facility_id', value: value.id })\n    onChange({ field: 'facility_name', value: value.name })\n    onChange({ field: 'due_date', value: newDate })\n  }\n\n  const handleOnChangeDoctorPartner = ({ value, field }) => {\n    onChange({ field: 'doctor_name', value: value.full_name })\n    onChange({ field: 'doctor_id', value: value.id })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField required readOnly='true' label='Bundle No.' id='bundle-no' value={details.bundle_number} />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldNumber\n            required\n            readOnly={isReadOnly}\n            id='total-rcs'\n            label='Total No. of RCS'\n            value={details.total_rcs}\n            onChange={e => onChange({ field: 'total_rcs', value: e.target.value })}\n            error={errors.total_rcs}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            id='date-received'\n            label='Date Received'\n            readOnly={isReadOnly}\n            value={details.date_received}\n            onChange={date => onChange({ field: 'date_received', value: date.toISOString() })}\n            error={errors.date_received}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            readOnly={isReadOnly}\n            id='due-date'\n            label='Due Date'\n            value={details.due_date}\n            onChange={date => onChange({ field: 'due_date', value: date.toISOString() })}\n            error={errors.due_date}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField\n            readOnly={isReadOnly}\n            id='soa-no'\n            label='SOA No.'\n            value={details.soa_number}\n            onChange={e => onChange({ field: 'soa_number', value: e.target.value })}\n            error={errors.soa_number}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldCurrency\n            required\n            readOnly={isReadOnly}\n            id='total-soa-amt'\n            label='Total SOA Amount'\n            value={details.total_soa_amt}\n            onChange={e => onChange({ field: 'total_soa_amt', value: e.target.value })}\n            error={errors.total_soa_amt}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-id'\n            label='Medical Partner ID'\n            value={details.facility_id}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner}\n            field={'id'}\n            loading={fetching['facility_id']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_id', value, search })}\n            error={errors.facility_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-name'\n            label='Medical Partner Name (Facility)'\n            value={details.facility_name}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner}\n            field={'name'}\n            loading={fetching['facility_name']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_name', value, search })}\n            error={errors.facility_name}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-partner-id'\n            label='Medical Partner ID'\n            value={details.doctor_id}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner}\n            field={'id'}\n            loading={fetching['doctor_id']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_id', value, search })}\n            error={errors.doctor_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-name'\n            label='Medical Partner Name (Doctor)'\n            value={details.doctor_name}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner}\n            field={'name'}\n            loading={fetching['doctor_name']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_name', value, search })}\n            error={errors.doctor_name}\n          />\n        </Grid>\n      </Grid>\n\n      {details.reassign_notes && (\n        <Grid container spacing={3}>\n          <Grid item sm={6} xs={12}>\n            <TextField\n              multiline\n              rows={3}\n              id='reassign-notes'\n              label='Reassign Notes'\n              value={details.reassign_notes}\n              readOnly\n            />\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Components\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Style\nimport classes from './BatchList.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, disablePadding: false, label: 'Batch No' },\n  { id: 'batch-claim-type', numeric: false, disablePadding: false, label: 'Claim Type' },\n  { id: 'batch-total-rcs', numeric: false, disablePadding: false, label: 'Total No. of RCS' },\n  {}\n]\n\nexport default function BatchList (props) {\n  const {\n    batches,\n    onDelete,\n    openDialog,\n    onCancel,\n    canEdit,\n    openError,\n    onEdit,\n    setForDeletion,\n    forDeletion,\n    isBundleCompleted = false,\n    searchFilter = '',\n    selectStatus = true\n  } = props\n  const [batch, setBatch] = React.useState([])\n\n  const getMessage = batches => {\n    let deleteMessage = 'Are you sure you want to delete this batch?'\n    if (batches.batch_numbers.length > 1) {\n      deleteMessage = 'Are you sure you want to delete these batches?'\n    }\n    return deleteMessage\n  }\n\n  React.useEffect(() => {\n    const data = batches\n      .filter(i => {\n        if (i.batch_number.includes(searchFilter)) return true\n        if (i.claim.type.toLowerCase().includes(searchFilter.toLowerCase())) return true\n        if (i.total_rcs === parseFloat(searchFilter)) return true\n      })\n      .map(i => ({\n        ...i,\n        selected: false\n      }))\n    setBatch({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setForDeletion({ batch_numbers: [] }) // Resets the batch list.\n  }, [batches, searchFilter])\n\n  const handleClick = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleSelectAllClick = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.selected = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.selected) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n    setForDeletion({ batch_numbers: batchNumbers })\n  }\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        // handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        checkAll={canEdit}\n        indeterminate={!!batch.indeterminate}\n        checked={!!batch.checked}\n        selectStatus={selectStatus}\n        // allowCheck\n        // allowCheckDisabled={Boolean(isBundleCompleted)}\n      >\n        <TableBody>\n          {batch.data &&\n            batch.data.map((i, index) => (\n              <TableRow key={i.batch_number}>\n                {canEdit && (\n                  <TableCell id={`checkbox-${i}`} padding='checkbox'>\n                    <Checkbox\n                      color='default'\n                      disabled={Boolean(isBundleCompleted)}\n                      checked={i.selected}\n                      onClick={event => handleClick({ index, batch })}\n                    />\n                  </TableCell>\n                )}\n                <TableCell id={`batch-no-${index}`}>{i.batch_number}</TableCell>\n                <TableCell id={`batch-claim-type-${i.claim.type}`}>{i.claim.type}</TableCell>\n                <TableCell id={`batch-total-rcs-${i.total_rcs}`}>{i.total_rcs}</TableCell>\n                {canEdit && (\n                  <TableCell className={classes.buttonWrapper} align='right'>\n                    <Button variant='contained' color='primary' className='button-neutral' onClick={() => onEdit(i)}>\n                      Edit\n                    </Button>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      <Alert\n        open={openDialog}\n        message={getMessage(forDeletion)}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={onCancel}\n        onOk={onDelete}\n      />\n      <Alert\n        open={openError}\n        message='Delete Error: This batch has existing claim records'\n        cancelLabel='Ok'\n        onCancel={onCancel}\n      />\n    </React.Fragment>\n  )\n}\n","import Select from '@material-ui/core/Select'\n\nimport React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Link } from 'react-router-dom'\n\nimport classes from './DropDown.module.scss'\n\n/**\n * Props\n * id required\n * label\n * required\n * value\n * items array {value, text}\n * onChange\n *\n */\nexport default function DropDown (props) {\n  const {\n    id,\n    label = '',\n    required,\n    items = [],\n    readOnly,\n    onChange,\n    disableComponents = false,\n    addNew = { show: false, value: 'add-new', text: 'Add New' },\n    error,\n    ...other\n  } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['select-container']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field ${disableComponents && classes.disabled} box-shadow-field`}\n            >\n              {items && (\n                <Select\n                  id={id}\n                  onChange={handleChange}\n                  onFocus={() => setFocus(true)}\n                  onBlur={() => setFocus(false)}\n                  classes={{ root: classes.select }}\n                  input={<InputBase className={classes.input} />}\n                  {...other}\n                  disabled={disableComponents}\n                >\n                  {items.map((item, index) => (\n                    <MenuItem key={`${id}-items${index}`} id={`${id}-items${index}`} value={item.value}>\n                      {item.text}\n                    </MenuItem>\n                  ))}\n                  {addNew.show && (\n                    <MenuItem key={`${id}-items-add-new`} id={`${id}-items-add-new`} value={addNew.value}>\n                      {addNew.text}\n                    </MenuItem>\n                  )}\n                </Select>\n              )}\n            </Paper>\n\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","const types = {\n  'In Patient': { prefix: 'IP' },\n  'Out Patient Procedure': { prefix: 'OP' },\n  'Out Patient Consultation': { prefix: 'PF' },\n  Reimbursement: { prefix: 'RM' },\n  Emergency: { prefix: 'ER' },\n  Dental: { prefix: 'DN' },\n  'Medicine Allowance': { prefix: 'MA' },\n  APE: { prefix: 'AP' },\n  ECU: { prefix: 'EC' },\n  Pharmacy: { prefix: 'PH' },\n  PPE: { prefix: 'PE' },\n  'Medical Supplies': { prefix: 'MS' },\n  'Clinic Management': { prefix: 'CM' }\n}\n\nconst dropdown = (filter = '') => {\n  const list = []\n  for (const type in types) {\n    if (filter !== '') {\n      if (type.toLowerCase().startsWith(filter.toLowerCase())) {\n        list.push({ text: type, value: type })\n      }\n    } else {\n      list.push({ text: type, value: type })\n    }\n  }\n  return list\n}\n\nconst suggestion = (filter = '') => {\n  const list = []\n  for (const type in types) {\n    if (filter !== '') {\n      if (type.toLowerCase().startsWith(filter.toLowerCase())) {\n        list.push(type)\n      }\n    } else {\n      list.push(type)\n    }\n  }\n  return list\n}\nexport default { types, dropdown, suggestion }\n\n// 1. IP\n// 2. OP\n// 3. PF\n// 4. Reimbursement\n// 5. Emergency\n// 6. Dental\n// 7. Medicine Allowance\n// 8. APE\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  claim_type: Joi.string()\n    .trim()\n    .label('Claim Type')\n    .required(),\n  claim_source: Joi.string()\n    .trim()\n    .label('Claim Source')\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0)\n    .required(),\n  amount_billed: Joi.number()\n    .label('Billed Amount')\n    .less(100000000)\n    .greater(0)\n    .messages({\n      'number.less': `Billed Amount should be less than {#limit}`,\n      'number.greater': 'Billed Amount should be greater than 0'\n    }),\n  notes: Joi.string()\n    .trim()\n    .label('Notes/Comments')\n    .allow('', null),\n  doctor_id: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` }),\n  doctor_name: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner (Doctor) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","export default {\n  for: { BATCH_ENCODING: 'BATCH_ENCODING', CLAIMS_ENCODING: 'CLAIMS_ENCODING', CLAIMS_ANALYSIS: 'CLAIMS_ANALYSIS' }\n}\n","import { setBundleItems, addBundle, setSelectedBundle, setBundleBatches, addBatch } from './bundles'\nimport { setSelectedBatch, setShowBatchForm, setBatchAction, setSaveBatchControl } from './batch'\nimport { initSuggestions, setSuggestionObject, resetSuggestionObject } from './suggestion'\n\nexport default {\n  setBundleItems,\n  addBundle,\n  setSelectedBundle,\n  setBundleBatches,\n  addBatch,\n  //* Batch\n  setSelectedBatch,\n  setShowBatchForm,\n  setBatchAction,\n  // *Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setSaveBatchControl\n}\n","import constants from './../../contants'\n\nexport const setSelectedBatch = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SELECTED_BATCH',\n    payload\n  }\n}\n\nexport const setBatchAction = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_BATCH_ACTION',\n    payload\n  }\n}\n\nexport const setShowBatchForm = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SHOW_BATCH_FORM',\n    payload\n  }\n}\n\nexport const setSaveBatchControl = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SAVE_BATCH_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload,\n    dasdas: 'dasdasd'\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\nimport { resetError, setError } from './error'\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\nimport { setGrandTotal, resetGrandTotal } from './grandTotal'\nimport { setDentalProcedure } from './dentalProcedure'\nimport { resetReassign, setReassignNotes, setReassignAssignee } from './reassign'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // Grand Total\n  setGrandTotal,\n  resetGrandTotal,\n  // Dental Procedure\n  setDentalProcedure,\n  setClaimPro,\n  resetReassign,\n  setReassignNotes,\n  setReassignAssignee,\n  resetError,\n  setError\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION',\n    payload\n  }\n}\n\nexport const resetSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setGrandTotal = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_GRAND_TOTAL',\n    payload\n  }\n}\n\nexport const resetGrandTotal = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_GRAND_TOTAL'\n  }\n}\n","import constants from './../../contants'\n\nexport const setDentalProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DENTAL_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetError = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\n\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\n\nimport { initDiscrepancy, setDiscrepancy } from './discrepancy'\n\nimport { resetError, setError } from './error'\n\nimport {\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee\n} from './escalation'\n\nimport { resetInquiry, addInquiryMessages, setInquiryMessages, setInquiryMessage, setInquiryAssignee } from './inquiry'\n\nimport {\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee\n} from './reassign'\n\nimport { resetReturn, setReturnNote } from './return'\n\nimport { setRejectStatus } from './reject'\n\nimport { resetRecon, setReconNotes } from './recon'\n\nimport { setLimitType, resetLimitType } from './utilization'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // * Discrepancy\n  initDiscrepancy,\n  setDiscrepancy,\n  // * Errror\n  resetError,\n  setError,\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetInquiry,\n  addInquiryMessages,\n  setInquiryMessages,\n  setInquiryMessage,\n  setInquiryAssignee,\n  // * Reassign\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee,\n  setRejectStatus,\n  setClaimPro,\n  // Recon\n  resetRecon,\n  setReconNotes,\n  setLimitType,\n  resetLimitType,\n  // Return supervisor/manager\n  resetReturn,\n  setReturnNote\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION',\n    payload\n  }\n}\n\nexport const resetSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DISCREPANCY',\n    payload\n  }\n}\n\nexport const setDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DISCREPANCY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetEscalation = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_SHOW',\n    payload\n  }\n}\n\nexport const addEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGE',\n    payload\n  }\n}\n\nexport const setEscalationAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetInquiry = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const addInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGE',\n    payload\n  }\n}\n\nexport const setInquiryAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_SHOW',\n    payload\n  }\n}\n\nexport const addReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGE',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setRejectStatus = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REJECT_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetRecon = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_RECON_NOTES',\n    payload\n  }\n}\n\nexport const setReconNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_RECON_NOTES',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_LIMIT_TYPE',\n    payload\n  }\n}\n\nexport const resetLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_LIMIT_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReturn = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_RETURN_NOTES',\n    payload\n  }\n}\n\nexport const setReturnNote = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_RETURN_NOTES',\n    payload\n  }\n}\n","import React from 'react'\n// import Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport moment from 'moment'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Constant\nimport ClaimTypes from 'Constant/claimTypes'\n\n// Styles\nimport classes from './BatchForm.module.scss'\n\n// Validator\nimport BatchFormValidator from './BatchFormValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setShowBatchForm, setSelectedBatch } = actions\n\nconst claim_types = ClaimTypes.dropdown()\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nexport default function BatchForm ({\n  close,\n  open,\n  onSave,\n  bundle,\n  onChange,\n  disableControls,\n  onChangeDoctor,\n  disableComponents,\n  fetching\n}) {\n  const dispatch = useDispatch()\n  const batch = useSelector(({ BatchEncoding: state }) => state.batch.selected)\n  const show = useSelector(({ BatchEncoding: state }) => state.batch.show)\n  const action = useSelector(({ BatchEncoding: state }) => state.batch.action)\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n  const saveControl = useSelector(({ BatchEncoding: state }) => state.batch.saveControl)\n  const [showPrompt, setShowPrompt] = React.useState(false)\n  const [confirmAction, setConfirmAction] = React.useState({\n    show: false,\n    message: 'Are you sure you want to save this batch?'\n  })\n\n  const [errors, setErrors] = React.useState({})\n  React.useEffect(() => {\n    setErrors({})\n  }, [])\n\n  const validate = () => {\n    const { error } = BatchFormValidator({\n      claim_type: batch.claim_type,\n      claim_source: batch.claim_source,\n      total_rcs: batch.total_rcs,\n      amount_billed: batch.amount_billed,\n      notes: batch.notes,\n      doctor_id: batch.doctor_id,\n      doctor_name: batch.doctor_name\n    })\n    setErrors(error || {})\n    if (error) setShowPrompt(true)\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      <Dialog open={show}>\n        <DialogTitle>{action}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3} className={classes.root}>\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Bundle No.' value={bundle.bundle_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='SOA No.' value={bundle.soa_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField\n                readOnly='true'\n                label='Date Received'\n                value={moment(bundle.date_received).format('MM/DD/YYYY')}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Due Date' value={moment(bundle.due_date).format('MM/DD/YYYY')} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner ID' value={bundle.facility_id} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner Name (Facility)' value={bundle.facility_name} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-id'\n                label='Medical Partner ID'\n                value={batch.doctor_id}\n                disabled={disableControls}\n                suggestions={suggestions.doctor}\n                field={'id'}\n                loading={fetching['doctor_id']}\n                onChange={(value, search) =>\n                  onChangeDoctor({\n                    field: 'doctor_id',\n                    value,\n                    search\n                  })\n                }\n                error={errors.doctor_id}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-name'\n                label='Medical Partner Name (Doctor)'\n                value={batch.doctor_name}\n                disabled={disableControls}\n                suggestions={suggestions.doctor}\n                field={'full_name'}\n                loading={fetching['doctor_name']}\n                onChange={(value, search) =>\n                  onChangeDoctor({\n                    field: 'doctor_name',\n                    value,\n                    search\n                  })\n                }\n                error={errors.doctor_name}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-type'\n                label='Claim Type'\n                required\n                items={claim_types}\n                value={batch.claim_type || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_type: event.target.value }))}\n                error={errors.claim_type}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-source'\n                label='Claim Source'\n                required\n                items={claim_sources}\n                value={batch.claim_source || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_source: event.target.value }))}\n                error={errors.claim_source}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldNumber\n                id='total-rcs'\n                label={'Total No. of RCS'}\n                required\n                value={batch.total_rcs}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ total_rcs: event.target.value }))}\n                error={errors.total_rcs}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldCurrency\n                id='billed-amount'\n                label='Billed Amount'\n                value={batch.amount_billed || 0}\n                disabled={disableControls}\n                // currency={false}\n                required\n                onChange={event => dispatch(setSelectedBatch({ amount_billed: event.target.value }))}\n                error={errors.amount_billed}\n              />\n            </Grid>\n\n            <Grid item xs={12} className={classes.input}>\n              <CustomTextField\n                id='notes-comments'\n                multiline\n                rows={6}\n                label='Notes/Comments'\n                value={batch.notes || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ notes: event.target.value }))}\n                error={errors.notes}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            id='cancel'\n            variant='contained'\n            color='primary'\n            className='button-negative'\n            onClick={() => {\n              dispatch(setShowBatchForm(false))\n              setErrors({})\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            disabled={saveControl}\n            onClick={() => !validate() && setConfirmAction(state => ({ ...state, show: true }))}\n          >\n            Save\n          </Button>\n          <Alert\n            open={confirmAction.show}\n            message={confirmAction.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setConfirmAction(state => ({ ...state, show: false }))}\n            onOk={() => {\n              setConfirmAction(state => ({ ...state, show: false }))\n              onSave(batch)\n            }}\n          />\n          <Alert\n            open={showPrompt}\n            message={'Please ensure that all fields are filled-up except for Notes and Comments.'}\n            okLabel='Ok'\n            onOk={() => setShowPrompt(false)}\n          />\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_number: Joi.number()\n    .label('Bundle Number')\n    .integer()\n    .greater(0)\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .required()\n    .integer()\n    .min(0),\n  date_received: Joi.date()\n    .label('Date Received')\n    .required()\n    .max('now'),\n  due_date: Joi.date()\n    .label('Due Date')\n    .required()\n    .min(Joi.ref('date_received'))\n    .messages({\n      'date.min': `\"Due Date\" should have a maximum length of Date Received`\n    }),\n  soa_number: Joi.string()\n    .trim()\n    .label('SOA No')\n    .allow('')\n    .required(),\n  total_soa_amt: Joi.number()\n    .label('Total SOA Amount')\n    .greater(0)\n    .less(100000000)\n    .required(),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Facility)')\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow(''),\n  // .messages({ 'string.empty': `'Enter N/A if Not Applicable'` })\n  // .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Doctor)')\n    .allow('')\n    // .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_soa: Joi.number()\n    .label('Total Bundle Soa Amount')\n    .required(),\n  batches_soa: Joi.number()\n    .label('Total Batches Soa Amount')\n    .valid(Joi.ref('bundle_soa'))\n    .required(),\n  bundle_rcs: Joi.number()\n    .label('Total No. of Bundle RCS')\n    .required(),\n  batches_rcs: Joi.number()\n    .label('Total No. of Batches RCS')\n    .valid(Joi.ref('bundle_rcs'))\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\n\n//  Components\nimport BundleDetails from './Components/BundleDetails/BundleDetails'\nimport BatchList from './Components/BatchList/BatchList'\nimport BatchForm from './Components/BatchForm/BatchForm'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Style\nimport classes from './BundlePage.module.scss'\nimport Typography from '@material-ui/core/Typography'\n\n// Validator\nimport BundleValidator from './BundleValidator'\nimport RcsSoaValidator from './RcsSoaValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setShowBatchForm,\n  setSelectedBatch,\n  setBatchAction,\n  initSuggestions,\n  resetSuggestionObject,\n  setSuggestionObject,\n  setSaveBatchControl\n} = actions\n\nexport default function BundlePage (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [originalState, setOriginalState] = React.useState({})\n  const [bundle, setBundle] = React.useState(null)\n  const [batches, setBatches] = React.useState([])\n  const [isReadOnly, setIsReadOnly] = React.useState(true)\n  const [searchFilter, setSearchFilter] = React.useState('')\n  const [openDialog, setOpenDialog] = React.useState(false)\n  const [openBundleDialog, setOpenBundleDialog] = React.useState({})\n  const [openRCSDialog, setOpenRCSDialog] = React.useState({})\n\n  const [openError, setOpenError] = React.useState(false)\n  const [submitStatus, setsubmitStatus] = React.useState(false)\n  const { bundle_number, user_id: isSupervisor } = props.match.params\n  const [disableComponents, setDisableComponents] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [disableControls] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ batch_numbers: [] })\n  const [disabledSubmit, setDisabledSubmit] = React.useState(true)\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false\n  })\n\n  const [debounce, setDebounce] = React.useState({ doctor: null })\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getBundleDetails(bundle_number)\n    dispatch(initSuggestions())\n  }, [props.match.params.bundle_number])\n\n  React.useEffect(() => {\n    setDisabledSubmit(batches.length <= 0)\n  }, [batches])\n\n  const getBundleDetails = bundle_number => {\n    BatchEncodingServices.getBundle({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Submitted',\n          color: 'green'\n        }\n        setsubmitStatus(true)\n      }\n\n      PageTitleService(`Bundle No. ${bundle_number}`, {\n        text: _status.text,\n        color: _status.color\n      })\n\n      const { user_id } = props.match.params\n      if (user_id) {\n        BreadcrumbsService.setSelectedItems([\n          'dashboard',\n          `createdBundles:${user_id}`,\n          `specificBundle:${bundle_number}`\n        ])\n      } else {\n        BreadcrumbsService.setSelectedItems(['dashboard', `specificBundle:${bundle_number}`])\n      }\n\n      setBundle({\n        bundle_number,\n        total_rcs: data.total_rcs,\n        date_received: data.date.received,\n        due_date: data.date.due,\n        soa_number: data.soa.number,\n        total_soa_amt: data.soa.amount,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        doctor_id: data.doctor.id,\n        doctor_name: data.doctor.name,\n        status: data.status,\n        reassign_notes: data.reassign_notes\n      })\n\n      getBatches(bundle_number)\n    })\n  }\n\n  const getBatches = bundle_number => {\n    BatchEncodingServices.getBatches({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(data)\n      LoadingService.loading(false)\n    })\n  }\n\n  const createBundle = () => {\n    LoadingService.loading(true)\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      LoadingService.loading(false)\n    })\n  }\n\n  const cancelBundle = () => {\n    const { user_id } = props.match.params\n    const path = user_id ? `/batch-encoder-work/${user_id}` : '/'\n    props.history.push(path)\n  }\n\n  const handleOnSubmit = () => {\n    LoadingService.loading(true)\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: false\n    }))\n\n    BatchEncodingServices.submitBundle({\n      bundle_number: bundle.bundle_number\n    }).then(({ data: res }) => {\n      LoadingService.loading(false)\n      // getBundleDetails(bundle.bundle_number)\n      cancelBundle()\n    })\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setSelectedBatch({ [field]: value }))\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    } else {\n      const _value = value || {}\n      dispatch(setSelectedBatch({ doctor_id: _value.id, doctor_name: _value.full_name }))\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n    dispatch(resetSuggestionObject({ field: 'doctor' }))\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          setFetching(state => ({ ...state, [by]: true }))\n          BatchEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestionObject({\n                  field: 'doctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnSaveBatch = newBatch => {\n    const { batch_number, ...data } = newBatch\n    dispatch(setSaveBatchControl(true))\n    if (batch_number) {\n      BatchEncodingServices.updateBatch({\n        bundle_number: bundle.bundle_number,\n        batch_number,\n        data\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state =>\n            state.map(i => {\n              if (i.batch_number === batch_number) {\n                for (let f in data) i[f] = data[f]\n                i.batch_number = data.batch_number\n              }\n              return i\n            })\n          )\n          dispatch(setSelectedBatch({}))\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    } else {\n      BatchEncodingServices.createBatch({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state => [...state, data])\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    }\n  }\n\n  const handleOnConfirmDeleteBatch = () => {\n    BatchEncodingServices.deleteMultipleBatch({\n      bundle_number: bundle_number,\n      data: forDeletion\n    })\n      .then(({ data: res }) => {\n        getBatches(bundle_number)\n        setOpenDialog(false)\n        setForDeletion({ batch_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDialog(false)\n        setOpenError(true)\n      })\n  }\n\n  const handleOnCancelDeleteBatch = () => {\n    setOpenDialog(false)\n    setOpenError(false)\n  }\n\n  const handleOnDeleteBatch = batch => {\n    setOpenDialog(true)\n  }\n\n  const handleOnEditBatch = batch => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(true)\n    dispatch(setBatchAction('Update Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: batch.batch_number,\n        doctor_id: batch.doctor.id,\n        doctor_name: batch.doctor.name,\n        claim_type: batch.claim.type,\n        claim_source: batch.claim.source,\n        total_rcs: batch.total_rcs,\n        amount_billed: batch.amount_billed,\n        notes: batch.notes\n      })\n    )\n  }\n\n  const handleOnchangeBundleDetails = ({ field, value }) => {\n    setBundle(state => ({ ...state, [field]: value }))\n  }\n\n  const handleOnSaveBundleDetails = () => {\n    let data = { ...bundle }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) return\n\n    const onOk = () => {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: false\n      }))\n\n      LoadingService.loading(true)\n\n      delete data.status\n      BatchEncodingServices.updateBundle({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(() => {\n        LoadingService.loading(false)\n        setIsReadOnly(true)\n      })\n    }\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: true,\n      message: 'Are you sure you want to update?',\n      handleOnOk: onOk\n    }))\n  }\n\n  const handleOnCancelBundleDetails = () => {\n    setErrors({})\n    setBundle(originalState)\n    setIsReadOnly(true)\n  }\n\n  const handleOnNewBatch = () => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(false)\n    dispatch(setBatchAction('New Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: null,\n        doctor_id: bundle.doctor_id,\n        doctor_name: bundle.doctor_name,\n        claim_type: '',\n        claim_source: '',\n        total_rcs: 0,\n        amount_billed: 0,\n        notes: ''\n      })\n    )\n  }\n\n  const ValidateBundle = () => {\n    if (validateSoaRcs()) {\n      setOpenRCSDialog(state => ({\n        ...state,\n        show: true\n        // message:\n        //   'The Total No. of RCS and Total SOA Amount of the Bundle details and the Total No. of RCS and Total Billed Amount of the Batch details do not match.'\n      }))\n    } else {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: true,\n        message: 'Are you sure you want to Submit this?',\n        handleOnOk: handleOnSubmit\n      }))\n    }\n  }\n\n  const validate = value => {\n    const { error } = BundleValidator(value)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const validateSoaRcs = () => {\n    const batches_rcs = batches.reduce((accu, curr) => accu + curr.total_rcs, 0)\n    const batches_soa = batches.reduce((accu, curr) => accu + curr.amount_billed, 0)\n    const { error } = RcsSoaValidator({\n      bundle_rcs: bundle.total_rcs,\n      batches_rcs,\n      bundle_soa: bundle.total_soa_amt,\n      batches_soa\n    })\n    let messages = []\n    if (error) {\n      if (error.batches_rcs) messages.push('The Total No. of RCS')\n      if (error.batches_soa) messages.push('The Total SOA Amount')\n      setOpenRCSDialog(state => ({\n        ...state,\n        message: messages.length > 0 ? messages.join(' and ') + ' of Bundle Details and Batch details do not match' : ''\n      }))\n    }\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      {bundle && (\n        <div className={classes.root}>\n          <BatchForm\n            bundle={bundle}\n            disableControls={disableControls}\n            onSave={handleOnSaveBatch}\n            onChangeDoctor={handleOnChangeDoctor}\n            disableComponents={disableComponents}\n            fetching={fetching}\n          />\n\n          <Paper className={classes['bundle-details']}>\n            <BundleDetails\n              details={bundle}\n              errors={errors}\n              isReadOnly={isReadOnly}\n              onChange={handleOnchangeBundleDetails}\n            />\n            {!submitStatus && !isSupervisor && (\n              <Grid item className={classes['actions']}>\n                {isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='add-new-bundle'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={createBundle}\n                    >\n                      Add New Bundle\n                    </Button>\n                    <Button\n                      id='update-details'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={() => {\n                        setOriginalState(bundle)\n                        setIsReadOnly(false)\n                      }}\n                    >\n                      Update Details\n                    </Button>\n                  </React.Fragment>\n                )}\n\n                {!isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='cancel-update'\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                      onClick={handleOnCancelBundleDetails}\n                    >\n                      Cancel\n                    </Button>\n\n                    <Button\n                      id='save'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={handleOnSaveBundleDetails}\n                    >\n                      Save\n                    </Button>\n                  </React.Fragment>\n                )}\n              </Grid>\n            )}\n          </Paper>\n          <Typography className={classes['list-header']} variant='h6'>\n            Batches\n          </Typography>\n          <Paper className={classes['table-container']}>\n            <Grid item className={classes['actions']}>\n              <SearchTextComponent onChange={event => setSearchFilter(event.target.value)} />\n              {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-neutral'\n                  id='add-new-batch'\n                  onClick={handleOnNewBatch}\n                >\n                  Add New Batch\n                </Button>\n              )}\n            </Grid>\n            <BatchList\n              batches={batches}\n              bundle_number={bundle_number}\n              onDelete={handleOnConfirmDeleteBatch}\n              openDialog={openDialog}\n              onCancel={handleOnCancelDeleteBatch}\n              onOpen={handleOnDeleteBatch}\n              openError={openError}\n              canEdit={!submitStatus && !isSupervisor}\n              onEdit={handleOnEditBatch}\n              forDeletion={forDeletion}\n              setForDeletion={setForDeletion}\n              isBundleCompleted={bundle && bundle.status && bundle.status === 'SUBMITTED' ? 1 : false}\n              searchFilter={searchFilter}\n            />\n          </Paper>\n          <div align='right' className={classes.buttonWrapper}>\n            {bundle && bundle.status && bundle.status !== 'SUBMITTED' && forDeletion.batch_numbers.length > 0 ? (\n              <Button\n                variant='contained'\n                color='primary'\n                className={`${'button-negative'} ${classes['delete-button']}`}\n                onClick={() => {\n                  handleOnDeleteBatch(true)\n                }}\n                id='cancel'\n              >\n                Delete\n              </Button>\n            ) : (\n              ''\n            )}\n            <Button variant='contained' color='primary' className='button-negative' id='cancel' onClick={cancelBundle}>\n              Cancel\n            </Button>\n\n            {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n              <Button\n                id='submit'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                disabled={disabledSubmit}\n                onClick={ValidateBundle}\n              >\n                Submit\n              </Button>\n            )}\n          </div>\n        </div>\n      )}\n\n      <Alert\n        open={openBundleDialog.show}\n        message={openBundleDialog.message}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenBundleDialog(state => ({ ...state, show: false }))}\n        onOk={openBundleDialog.handleOnOk}\n      />\n\n      <Alert\n        open={openRCSDialog.show}\n        message={openRCSDialog.message}\n        cancelLabel='Close'\n        onCancel={() => setOpenRCSDialog(state => ({ ...state, show: false }))}\n      />\n    </React.Fragment>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ce')\n\nexport default class ClaimsEncodingServices {\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getLetterNotice ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // static getDropdown (params) {\n  //   return axios({\n  //     url: '/lookups/dropdown',\n  //     method: 'GET',\n  //     params,\n  //     headers: { [ExcludeErrorConstants['all']]: 1 }\n  //   })\n  // }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getICDSynonyms (params) {\n    return axios({\n      url: `/lookups/icd-10-synonym`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","function PromiseUtil () { }\n\n/**\n * Execute in sequence the list of promises\n *\n * @param {array} tasks list of tasks or promises\n */\nPromiseUtil.executeInSequence = async function (promises, callback) {\n  // return promises.reduce((p, task) => p.then(task), Promise.resolve())\n  // for (const fn of promises) {\n  //     await fn()\n  // }\n  \n  var chain\n  for (let i in promises){\n      alert(i)\n    if (chain) chain = chain.then(promises[i]);\n    if (!chain) chain = promises[i]();\n\n    // TODO: remove\n    break\n  }\n\n  callback()\n}\n\nexport default PromiseUtil\n","import FileSaver from 'file-saver'\n\nexport default function Download ({ fileName = 'CSV', header = [], rows = [], extension = 'csv', statics = [], data = [], mimeType = 'data:text/csv;charset=utf-8'}) {\n  const valueSeperator = ','\n  const newLine = '\\r\\n'\n  const [c_header = [], c_footer = []] = statics\n\n  let _rows = [\n    ...c_header,\n    header.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n    newLine,\n    ...rows.map(row =>\n      [\n        row.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n        newLine\n      ].join('')\n    ),\n    ...c_footer\n  ]\n\n  if (data && data.length) _rows = data\n\n  const blob = new Blob(_rows, { type: mimeType })\n\n  // Trial\n  try {\n    const { ipcRenderer } = window.require('electron')\n\n    const reader = new FileReader()\n    reader.readAsDataURL(blob)\n    reader.onloadend = function () {\n      const data = reader.result\n      const base64data = data.split(';base64,').pop()\n      ipcRenderer.send('open-save-dialog', { data: base64data, fileName })\n    }\n  } catch (error) {\n    FileSaver.saveAs(blob, `${fileName}.${extension}`)\n  }\n}\n","// TODO: Uncomment\nimport moment from 'moment'\nimport { parseFullName } from 'parse-full-name'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport claimTypes from 'Constant/claimTypes'\nimport PromiseUtil from 'Utilities/PromiseUtil'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n/**\n * SOA ETL Controller.\n * An ETL (Extract Transform Load) controller \"prototype/function\" class intended to contain ETL\n * logic for extracting, transforming and loading SOA import data.\n *\n * As of the moment, extraction and loading is being done elsewhere outside this\n * utility. So this class is currently only performing the \"Transformation phase\"\n */\nfunction SoaEtlController () {}\n\nSoaEtlController.MINIMUM_KEYS = {\n  BUNDLE_SOA_NUM: 'BUNDLE_SOA_NUM',\n  // BUNDLE_RCS_NUM: 'BULDE_RCS_NUM',\n  BUNDLE_RCS_DATE: 'BUNDLE_RCS_DATE',\n\n  BUNDLE_FACILITY_NAME: 'BUNDLE_FACILITY_NAME',\n  BUNDLE_FACILITY_CODE: 'BUNDLE_FACILITY_CODE',\n\n  BATCH_CLAIMS_SOURCE: 'BATCH_CLAIMS_SOURCE',\n  BATCH_CLAIM_TYPE: 'BATCH_CLAIM_TYPE',\n\n  CLAIM_DATE_AVAILMENT: 'CLAIM_DATE_AVAILMENT',\n  CLAIM_DATE_ADMITTED: 'CLAIM_DATE_ADMITTED',\n  CLAIM_DATE_DISCHARGE: 'CLAIM_DATE_DISCHARGE',\n  CLAIM_LOA_NUM: 'CLAIM_LOA_NUM',\n  CLAIM_APPROVAL_CODE: 'CLAIM_APPROVAL_CODE',\n  CLAIM_MEMBER_NUM: 'CLAIM_MEMBER_NUM',\n  CLAIM_MEMBER_NAME: 'CLAIM_MEMBER_NAME',\n  CLAIM_DIAGNOSIS_NAME: 'CLAIM_DIAGNOSIS_NAME',\n  CLAIM_DIAGNOSIS_CODE: 'CLAIM_DIAGNOSIS_CODE',\n\n  CLAIM_DOCTOR_NAME: 'CLAIM_DOCTOR_NAME',\n  CLAIM_DOCTOR_AMOUNT: 'CLAIM_DOCTOR_AMOUNT',\n\n  CLAIM_PROCEDURE_NAME: 'CLAIM_PROCEDURE_NAME',\n  CLAIM_PROCEDURE_AMOUNT: 'CLAIM_PROCEDURE_AMOUNT',\n\n  CLAIM_HOSPITAL_ITEM_NAME: 'CLAIM_HOSPITAL_ITEM_NAME',\n  CLAIM_HOSPITAL_ITEM_AMOUNT: 'CLAIM_HOSPITAL_ITEM_AMOUNT'\n}\n\nSoaEtlController.COLUMN_TEMPLATES = {\n  DEFAULT: {\n    // Bundle fields\n    'SOA No.': SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM,\n    // 'RCSNum': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM,\n    RCSNum: SoaEtlController.MINIMUM_KEYS.CLAIM_LOA_NUM,\n    'RCS Date': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE,\n\n    // Batch fields\n    'Claim Type': SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE,\n\n    // Claim fields\n\n    // Claim fields - date\n    'Date of Availment': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_AVAILMENT,\n    'Date Admitted': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED,\n    'Date Discharge': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE,\n\n    'Approval Code / LOE No.': SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE,\n\n    'Member Number': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM,\n    'Patient Name': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME,\n\n    Diagnosis: SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME,\n    'ICD10 Code': SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE,\n\n    // Claim fields - line items\n    'Doctors Name': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME,\n    'PF Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT,\n\n    Procedure: SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME,\n    'Proc Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT,\n\n    'Hospital Item': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME,\n    'HospItem Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT\n  }\n}\n\n\n/**\n * Performs download of template for SOA File Import\n *\n * @param columnTemplates template mapping\n */\nSoaEtlController.downloadTemplate = function (columnTemplates = SoaEtlController.COLUMN_TEMPLATES.DEFAULT) {\n  console.log('soa_etl', 'downloadTemplate')\n\n  ArrayToCSV({ fileName: 'SOA_import', extension: 'xls', header: Object.keys(columnTemplates), rows: [], mimeType: 'application/vnd.ms-excel' })\n}\n\n/**\n * Performs transformation of specified data rows using the specified data mapping\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n */\nSoaEtlController.transform = function (dataRows, dataMapping, defaults = {}) {\n  console.log('soa_etl', 'transform')\n\n  // Initial check parameters\n  if (\n    !dataRows ||\n    !dataMapping ||\n    !dataMapping.columns ||\n    !dataMapping.fields[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]\n  )\n    throw { error: 'invalid parameters' }\n  const prepData = SoaEtlController._transformPreviewDataToPrepData(dataRows, dataMapping, defaults)\n  console.log(prepData)\n\n  const bundle = SoaEtlController._transformPrepDataToHierarchicalData(prepData)\n  console.log(JSON.stringify(bundle, null, 2))\n\n  return bundle\n}\n\n/**\n * Loads the specified bundle data unto the Claims server by invoking the appropriate API calls\n * for the bundle, batch and claims information found in the bundle data.\n *\n * @param bundle bundle data from transform()\n */\nSoaEtlController.loadToApi = function (bundle, successCallback) {\n  let promise = new Promise(function (resolve, reject) {\n    // TODO: refactor; callback hell\n\n    // Invoke Create Bundle\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      const bundleNumber = data\n      console.log(bundleNumber)\n\n      bundle.bundle_number = bundleNumber\n\n      const bundleParam = { ...bundle }\n      delete bundleParam.batches\n\n      // Invoke Update Bundle\n      BatchEncodingServices.updateBundle({ bundle_number: bundleNumber, data: bundleParam })\n        .then(res => {\n          // Create promise for each add batch operation (which contains add-claims operation)\n          const addBatchPromises = []\n\n          async function addBatches () {\n            for (let batchIndex in bundle.batches) {\n              const batch = bundle.batches[batchIndex]\n              const batchParam = { ...batch }\n              delete batchParam.claims\n\n              let batchPromise = new Promise(function (resolveBatch, rejectBatch) {\n                // Call create batch API\n                BatchEncodingServices.createBatch({ data: batchParam, bundle_number: bundleNumber })\n                  .then(res => {\n                    const { data } = res.data\n                    batch.batch_number = data.batch_number\n\n                    async function addClaims () {\n                      for (let i = 0; i < batch.claims.length; i++) {\n                        const claim = batch.claims[i]\n                        // Invoke create claim\n                        await ClaimsEncodingServices.addClaim({ batch_number: batch.batch_number, data: claim })\n                      }\n                      resolveBatch()\n                    }\n\n                    // Create claims for batch\n                    addClaims()\n                  })\n                  .catch(() => {\n                    rejectBatch('Batch creation failed')\n                  })\n              })\n\n              await batchPromise\n            }\n            resolve(bundle.bundle_number)\n          }\n\n          addBatches()\n\n          // Note: VNI requirement, is to not perform automatic bundle submission\n          //       and consequentially, no automatic claims creation for claims under the\n          //       automatically created batches. That is the function requirement.\n          //       The technical operation however, needs claims to be created but just\n          //       NOT visible as of yet to claims encoders (and up).\n          // // Todo: refactor to wait for all batches to be created before submitting bundle\n          // BatchEncodingServices.submitBundle({ bundle_number: bundleNumber }).then(res => {\n          //   if (successCallback) { successCallback();}\n          //   resolve()\n          //   // batch.claims.forEach(element => {\n          //   //   let claim = element\n          //   // })\n          // }).catch(() => {\n          //   reject('Bundle submission failed')\n          // })\n\n          // console.log(addBatchPromises)\n          // resolve(bundle.bundle_number)\n          //PromiseUtil.executeInSequence(addBatchPromises, () => { resolve(bundle.bundle_number) })\n          // Promise.all(addBatchPromises)\n          //   .then(() => {\n          //     console.log('success SOA loading unto API')\n          //     //alert('success SOA loading unto API')\n          //     resolve(bundle.bundle_number)\n          //   })\n        })\n        .catch(() => {\n          console.log('failed SOA loading unto API')\n          //alert('failed SOA loading unto API')\n          reject('Bundle creation failed')\n        })\n    })\n  })\n\n  return promise\n}\n\n/**\n * Performs transformation of \"preview data rows\" to \"preparation data rows\"\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n *\n * @return mapped-out data rows\n */\nSoaEtlController._transformPreviewDataToPrepData = function (dataRows, dataMapping, defaults = {}) {\n  const outputEntries = []\n  let prevEntry = {}\n  dataRows.forEach(dataEntry => {\n    const outputEntry = {}\n    let hasSingleValue = false\n    Object.keys(dataMapping.columns).forEach(columnKey => {\n      let dataValue = dataEntry[columnKey]\n      let outputKey = dataMapping.columns[columnKey]\n\n      // If no value for the key\n      if (!dataValue || dataValue.trim().length === 0) {\n        dataValue = ''\n        // Attempt to use previous row's value\n        // dataValue = prevEntry[outputKey]\n        // if (!dataValue) dataValue = ''\n      } else {\n        hasSingleValue = true\n      }\n\n      // Store upon output entry\n      outputEntry[outputKey] = dataValue.trim()\n    })\n\n    if (hasSingleValue) {\n      if (defaults) {\n        Object.keys(defaults).forEach(key => {\n          outputEntry[key] = defaults[key]\n        })\n      }\n\n      Object.keys(dataMapping.fields).forEach(fieldKey => {\n        let value = outputEntry[fieldKey]\n        if (value && value.length > 0) {\n          outputEntry[fieldKey] = dataMapping.fields[fieldKey][value]\n          if (!outputEntry[fieldKey]) throw 'Missing claim type or wrong data format in the uploaded SOA file.'\n        }\n      })\n\n      outputEntries.push(outputEntry)\n    }\n    // Keep track of previews row\n    prevEntry = outputEntry\n  })\n  return outputEntries\n}\n\n/**\n * Transforms Preparation Data into Hierarchical Data (bundle, batches and claims).\n *\n * @param prepDataRows output from _transformPreviewDataToPrepData()\n *\n * @return bundle object which includes underneath batches and claims objects\n */\nSoaEtlController._transformPrepDataToHierarchicalData = function (prepDataRows) {\n  let prevPrepEntry = {}\n\n  let bundle = null\n  let currentBatch = null\n  let currentClaim = null\n  let totalGrossAmount = 0\n\n  prepDataRows.forEach(dataEntry => {\n    const soaNumber = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM]\n    if (!bundle) {\n      // let rcsTotal = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM]\n      // try {\n      //   rcsTotal = parseInt(rcsTotal)\n      // } catch {\n      //   throw 'Error: Invalid Total RCS (' + rcsTotal + ')'\n      // }\n\n      // bundle = {\n      //   soa: { number: soaNumber, amount: 0.0 },\n      //   date: { received: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE] },\n      //   facility: {\n      //     id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n      //     name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]\n      //   },\n      //   total_rcs: rcsTotal,\n      //   batches: []\n      // }\n      const dateReceived = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]\n      bundle = {\n        soa_number: soaNumber,\n        total_soa_amt: 0.0,\n\n        // TODO: uncomment\n        date_received: moment(dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]).format('MM/DD/YYYY'),\n        due_date: moment(dateReceived)\n          .add(30, 'days')\n          .format('MM/DD/YYYY'),\n\n        facility_id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n        facility_name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME],\n        // total_rcs: rcsTotal,\n        total_rcs: 0,\n        doctor_id: '',\n        doctor_name: '',\n        batches: []\n      }\n    }\n\n    // Enforce there is only SOA number\n    if (soaNumber !== '' && soaNumber !== bundle.soa_number) {\n      //throw 'Error: Another SOA Number found (' + soaNumber + ')'\n      throw 'Unable to upload SOA file. Please ensure there is one SOA no. only.'\n    }\n\n    // Fetch claim type and check if there is a change\n    const claimType = dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]\n    if (!currentBatch || (claimType != '' && claimType != currentBatch.claim_type)) {\n      // currentBatch = {\n      //   claim: {\n      //     type: claimType,\n      //     source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n      //   },\n      //   claims: []\n      // }\n\n      currentBatch = {\n        claim_type: claimType,\n        claim_source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n        doctor_id: '',\n        doctor_name: '',\n        total_rcs: 0,\n        amount_billed: 0.0,\n        notes: 'SYSTEM GENERATED BATCH VIA SOA UPLOAD\\n',\n        claims: []\n      }\n\n      bundle.batches.push(currentBatch)\n    }\n\n    // Fetch approval code and check if there is a change\n    const approvalCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE]\n    if (\n      !currentClaim ||\n      (approvalCode != '' && approvalCode != currentClaim[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE])\n    ) {\n      // Increment total RCS for the parent batch\n      currentBatch.total_rcs += 1\n      bundle.total_rcs += 1\n\n      const memberName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME]\n      const nameParts = parseFullName(memberName)\n\n      // currentClaim = {\n      //   member: {\n      //     account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n      //     last_name: nameParts[0].trim(),\n      //     first_name: nameParts[1].trim(),\n      //     middle_name: '',\n      //   },\n      //   approval_code: approvalCode,\n      //   professional_fees: [],\n      //   hospital_items: [],\n      //   procedures: []\n      // }\n\n      currentClaim = {\n        member_account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n        member_first_name: nameParts.first,\n        member_middle_name: nameParts.middle,\n        member_last_name: nameParts.last,\n\n        facility_id: bundle.facility_id,\n        facility_name: bundle.facility_name,\n\n        approval_code: approvalCode,\n        loa_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_LOA_NUM],\n\n        diagnosis: [],\n        professional_fees: [],\n        hospital_items: [],\n        procedures: [],\n\n        date_from: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED],\n        date_to: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE],\n\n        claim_sub_type: 'Surgical',\n        claim_sub_sub_type: 'Physical',\n\n        with_corporate_guarantee: '',\n        loa_notes: ''\n      }\n\n      if (currentBatch.claim_type === 'In Patient') {\n        currentClaim.room_type = 'WARD'\n        currentClaim.room_rate = 0.0\n        currentClaim.pro_id = 'N/A'\n        currentClaim.pro_name = 'N/A'\n      }\n\n      currentBatch.claims.push(currentClaim)\n    }\n\n    // Check for diagnosis entries\n    const diagnosisName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME]\n    const diagnosisCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE]\n    if (diagnosisName && diagnosisCode) {\n      const flag = currentClaim.diagnosis.length == 0\n      currentClaim.diagnosis.push({ code: diagnosisCode, description: diagnosisName, primary: flag })\n    }\n\n    let lineItem = null\n    let lineAmount = null\n\n    // Check for line item - professional fee\n    lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME]\n    lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT]\n    if (lineItem && lineAmount) {\n      try {\n        lineAmount = parseFloat(lineAmount)\n      } catch {\n        lineAmount = 0.0\n      }\n\n      bundle.total_soa_amt += lineAmount\n      currentBatch.amount_billed += lineAmount\n\n      currentClaim.professional_fees.push({\n        doctor_name: lineItem,\n        doctor_id: 'unknown',\n        gross_amount: lineAmount,\n        specialization: 'unknown',\n        vat_amount: 0,\n        amount_paid_by_member: 0,\n        philhealth_amount_paid: 0,\n        philhealth_remarks: '',\n        amount_not_covered: 0,\n        reason: '',\n        amount_due_from_member: 0,\n        reason_for_charging_member: ''\n      })\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Procedure') {\n      // Check for line item - hospital item\n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.hospital_items.push({\n          name: lineItem,\n          item_code: 'unknown',\n          gross_amount: lineAmount,\n          vat_amount: 0,\n          amount_paid_by_member: 0,\n          philhealth_amount_paid: 0,\n          philhealth_remarks: '',\n          amount_not_covered: 0,\n          reason: '',\n          amount_due_from_member: 0,\n          reason_for_charging_member: ''\n        })\n      }\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Consultation') {\n      // Check for line item - procedure\n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.procedures.push({\n          description: lineItem,\n          gross_amount: lineAmount,\n          code: 'unknown',\n          vat_amount: 0,\n          amount_paid_by_member: 0,\n          philhealth_amount_paid: 0,\n          philhealth_remarks: ''\n        })\n      }\n    }\n  })\n\n  return bundle\n}\n\n// TODO: set to false on normal operation; set to true only for debugging purposes\nSoaEtlController.DEBUG = false\n\nif (SoaEtlController.DEBUG) {\n  SoaEtlController.test = function () {\n    const dataRows = [\n      {\n        'SOA No.': 'SOA0001',\n        RCSNum: '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '5556',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Yu, Eusebio',\n        Diagnosis: 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 0\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: 'Cardiac Arrest',\n        'ICD10 Code': 'C0055',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 1\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': 'Dr. ABC',\n        'PF Amt': '500',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 2\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: 'X-Ray',\n        'Proc Amt': '1000',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 3\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': 'Dextrose',\n        'HospItem Amt': ' 850.00 ',\n        __index__: 4\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 5\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 6\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 7\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 8\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 9\n      },\n      {\n        'SOA No.': 'SOA0001',\n        RCSNum: '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '6667',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Conan, Detective',\n        Diagnosis: 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': 'Dr. Evil',\n        'PF Amt': '100000.00',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 10\n      }\n    ]\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {\n          IP: 'In Patient',\n          OPP: 'Out Patient Procedure',\n          OPC: 'Out Patient Consultation'\n        }\n      }\n    }\n    console.log(dataMapping)\n\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: 'Hospital',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: 'HOS000012',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: 'Davao Doctors Hospital'\n    }\n\n    const bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n    SoaEtlController.loadToApi(bundle)\n  }\n\n  // TODO: comment out\n  // SoaEtlController.test()\n}\n\n// TODO: Uncomment\nexport default SoaEtlController\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_number: Joi.number()\n    .label('Bundle Number')\n    .integer()\n    .greater(0)\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0)\n    .required(),\n  date_received: Joi.date()\n    .label('Date Received')\n    .required()\n    .max('now'),\n  due_date: Joi.date()\n    .label('Due Date')\n    .required()\n    .min(Joi.ref('date_received'))\n    .messages({\n      'date.min': `The \"Due Date\" should be later than the Date Received`\n    }),\n  soa_number: Joi.string()\n    .trim()\n    .label('SOA No')\n    .allow('')\n    .required(),\n  total_soa_amt: Joi.number()\n    .label('Total SOA Amount')\n    .greater(0)\n    .required(),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Facility)')\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow(''),\n  // .messages({ 'string.empty': `'Enter N/A if Not Applicable'` }),\n  // .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Doctor)')\n    .allow('')\n    // .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport moment from 'moment'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Controller\nimport SoaEtlController from 'Controllers/SoaEtlController'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Style\nimport classes from './NewBundlePage.module.scss'\n\n// Validator\nimport NewBundleValidator from './NewBundleValidator'\nexport default function NewBundlePage (props) {\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [newBundle, setNewBundle] = React.useState({\n    bundle_number: '',\n    total_rcs: 0,\n    soa_number: '',\n    facility_id: '',\n    facility_name: '',\n    total_soa_amt: 0,\n    doctor_id: '',\n    doctor_name: '',\n    date_received: moment(),\n    due_date_adjustment: 0,\n    due_date: moment().add(30, 'days')\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: [],\n    doctorPartner: []\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_full_name: false\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: []\n    }))\n\n    setFetching(state => ({ ...state, [`facility_${by}`]: true }))\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              // let _items = []\n              // for (let d of data) {\n              //   _items.push(d[by])\n              // }\n              setSuggestions(state => ({ ...state, medicalPartner: data }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [`facility_${by}`]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n    setSuggestions(state => ({\n      ...state,\n      doctorPartner: []\n    }))\n\n    setFetching(state => ({ ...state, [`doctor_${by}`]: true }))\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              // let _items = []\n              // for (let d of data) {\n              //   _items.push(d[by])\n              // }\n              setSuggestions(state => ({ ...state, doctorPartner: data }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [`doctor_${by}`]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = ({ value, field, search }) => {\n    if (search) {\n      setNewBundle(state => ({ ...state, [field]: value }))\n      switch (field) {\n        case 'facility_id':\n          getMedicalPartnerSuggestions({ value, by: 'id' })\n          break\n        case 'facility_name':\n          getMedicalPartnerSuggestions({ value, by: 'name' })\n          break\n        case 'doctor_id':\n          getDoctorPartnerSuggestions({ value, by: 'id' })\n          break\n        case 'doctor_name':\n          getDoctorPartnerSuggestions({ value, by: 'full_name' })\n          break\n        default:\n          break\n      }\n    } else {\n      const _value = value || {}\n      if (field === 'facility_id' || field === 'facility_name') {\n        handleOnChangeMedicalPartner({ value: _value, field })\n      } else if (field === 'doctor_id' || field === 'doctor_name') {\n        handleOnChangeDoctorPartner({ value: _value, field })\n      }\n    }\n  }\n\n  const handleOnChangeMedicalPartner = ({ value = {}, field }) => {\n    // Compute due date based on date received and earliest term found\n    // Fallback term is 30 days\n    let term = 30\n    if (value.earliest_term) {\n      term = parseInt(value.earliest_term)\n      if (isNaN(term) || term < 0) {\n        term = 30\n      }\n    }\n    let newDate = moment(newBundle.date_received).add(term, 'days')\n\n    setNewBundle(state => ({\n      ...state,\n      facility_id: value.id,\n      facility_name: value.name,\n      due_date: newDate,\n      due_date_adjustment: term\n    }))\n    // }\n  }\n\n  const handleOnChangeDoctorPartner = ({ value = {}, field }) => {\n    setNewBundle(state => ({ ...state, doctor_id: value.id, doctor_name: value.full_name }))\n  }\n\n  React.useEffect(() => {\n    PageTitleService(`Create New Bundle`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'newBundle'])\n    setNewBundle(state => ({ ...state, bundle_number: props.match.params.bundle_number }))\n  }, [props.match.params.bundle_number])\n\n  const validate = () => {\n    const data = {\n      ...newBundle,\n      date_received: moment(newBundle.date_received).toISOString(),\n      due_date: moment(newBundle.due_date).toISOString()\n    }\n\n    const { error } = NewBundleValidator({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSave = () => {\n    setDisableControls(true)\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n\n    const data = {\n      ...newBundle,\n      date_received: moment(newBundle.date_received).toISOString(),\n      due_date: moment(newBundle.due_date).toISOString()\n    }\n\n    if (validate()) {\n      setDisableControls(false)\n      return\n    }\n\n    LoadingService.loading(true)\n\n    // Remove date due adjustment; it will cause an error on server\n    delete data.due_date_adjustment\n\n    BatchEncodingServices.updateBundle({\n      data,\n      bundle_number: newBundle.bundle_number\n    }).then(res => {\n      props.history.push(`/bundles/${newBundle.bundle_number}`)\n    })\n  }\n\n  const handleOnDownloadTemplate = () => {\n    LoadingService.loading(true)\n    SoaEtlController.downloadTemplate()\n    LoadingService.loading(false)\n  }\n\n  const cancel = () => props.history.push(`/`)\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['upload-container']}>\n        <Link to={`/bundles/upload-soa`}>\n          <Typography\n            id='upload-soa-button'\n            variant='subtitle2'\n            className={`bold text-link ${classes.label}`}\n            display='inline'\n          >\n            + Upload SOA\n          </Typography>\n        </Link>\n        <Typography\n          onClick={handleOnDownloadTemplate}\n          id='download-soa-template-button'\n          variant='subtitle2'\n          className={`bold text-link ${classes.label}`}\n          display='inline'\n          style={{ marginLeft: 10 }}\n        >\n          + Download SOA Template\n        </Typography>\n      </div>\n\n      <Paper className={classes.form}>\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-bundle-number'\n              label='Bundle No.'\n              value={newBundle.bundle_number}\n              fullWidth\n              disabled\n              error={errors.bundle_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldNumber\n              id='create-new-bundle-total-rcs'\n              required\n              label='Total No. of RCS'\n              value={newBundle.total_rcs}\n              fullWidth\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_rcs: e.target.value }))}\n              error={errors.total_rcs}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-date-received'\n              label='Date Received'\n              value={newBundle.date_received}\n              disabled={disableControls}\n              onChange={date => {\n                // Adjust due date accordingly to date received and term adjustment\n                const due_date = date.add(newBundle.due_date_adjustment, 'days').toISOString()\n\n                setNewBundle(state => ({ ...state, date_received: date.toISOString(), due_date: due_date }))\n              }}\n              error={errors.date_received}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-due-date'\n              label='Due Date'\n              disabled={disableControls}\n              value={newBundle.due_date}\n              onChange={date => setNewBundle(state => ({ ...state, due_date: date.toISOString() }))}\n              error={errors.due_date}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-soa-number'\n              label='SOA No.'\n              fullWidth\n              disabled={disableControls}\n              //* e.target is in an asynchronous context (setNewBundle)\n              //* moved e.target.value outside asynchronous context\n              onChange={e => {\n                const { value } = e.target\n                // setNewBundle(state => ({ ...state, soa_number: e.target.value }))\n                setNewBundle(state => ({ ...state, soa_number: value }))\n              }}\n              error={errors.soa_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldCurrency\n              id='create-new-bundle-total-soa'\n              required\n              label='Total SOA Amount'\n              fullWidth\n              value={newBundle.total_soa_amt}\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_soa_amt: e.target.value }))}\n              error={errors.total_soa_amt}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-id'\n              required\n              label='Medical Partner ID'\n              value={newBundle.facility_id}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner}\n              field={'id'}\n              loading={fetching['facility_id']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_id', value, search })}\n              error={errors.facility_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-name'\n              required\n              label='Medical Partner Name (Facility)'\n              value={newBundle.facility_name}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner}\n              field={'name'}\n              loading={fetching['facility_name']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_name', value, search })}\n              error={errors.facility_name}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-docotr-partner-id'\n              label='Medical Partner ID'\n              value={newBundle.doctor_id}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner}\n              field={'id'}\n              loading={fetching['doctor_id']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_id', value, search })}\n              error={errors.doctor_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-doctor-name'\n              label='Medical Partner Name (Doctor)'\n              value={newBundle.doctor_name}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner}\n              field={'full_name'}\n              loading={fetching['doctor_full_name']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_name', value, search })}\n              error={errors.doctor_name}\n            />\n          </Grid>\n        </Grid>\n\n        <div className={classes.actions}>\n          <Button variant='contained' color='primary' className='button-negative' onClick={cancel} id='cancel'>\n            Cancel\n          </Button>\n\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={() =>\n              !validate() &&\n              setOpenAlert(state => ({\n                ...state,\n                show: true,\n                message: 'Are you sure you want to save this?'\n              }))\n            }\n            disabled={disableControls}\n            id='save'\n          >\n            Save\n          </Button>\n\n          <Alert\n            open={openAlert.show}\n            message={openAlert.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenAlert(state => ({ ...state, show: false }))}\n            onOk={handleOnSave}\n          />\n        </div>\n      </Paper>\n    </div>\n  )\n}\n","import XLSX from 'xlsx'\n\nexport default async function XLSXParser ({ file, onComplete, onError }) {\n  let headers = null\n  const results = []\n\n  var reader = new FileReader()\n  reader.onload = function (e) {\n    const workbook = XLSX.read(e.target.result, { type: 'binary' })\n\n    const sheet = workbook.Sheets[workbook.SheetNames[0]]\n    const data = XLSX.utils.sheet_to_json(sheet, { raw: false, header: 1 })\n    headers = data.shift()\n\n    for (let index = 0; index < data.length; index++) {\n      const _item = {}\n      headers.map(i => (_item[i] = ''))\n\n      data[index].map((value, index) => (_item[headers[index]] = value))\n\n      if (index === data.length - 1 && !data[index].length) continue\n\n      results.push(_item)\n    }\n    onComplete({ headers, results })\n  }\n\n  reader.onerror = ex => onError(ex)\n\n  reader.readAsBinaryString(file)\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport Parser from './../../Parser'\n\n// Style\nimport classes from './UploadSpace.module.scss'\n\nconst Progress = withStyles({\n  root: {\n    height: 15,\n    borderRadius: 20,\n    backgroundColor: '#c7c7c7'\n  },\n  bar: {\n    borderRadius: 20,\n    backgroundColor: '#00ab00'\n  }\n})(LinearProgress)\n\nexport default function UploadSpace (props) {\n  const { onSelectFile } = props\n  const dialogRef = React.useRef()\n\n  const [dragged, setDragged] = React.useState(false)\n  const [fileLoaded, setFileLoaded] = React.useState()\n  const [progress, setProgress] = React.useState(0)\n\n  const handleOnClick = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    dialogRef.current.click()\n  }\n\n  const handleOnChangeFile = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    const file = event.target.files[0]\n\n    if (!file) return\n\n    handleParse(file)\n  }\n\n  const handleOnDrag = state => e => {\n    e.preventDefault()\n    e.stopPropagation()\n    setDragged(state)\n  }\n\n  const handleDrop = e => {\n    setDragged(false)\n    e.preventDefault()\n    e.stopPropagation()\n\n    // TODO if multiple file and invalid file type\n    const [file] = e.dataTransfer.files\n\n    handleParse(file)\n  }\n\n  const handleParse = file => {\n    console.log(file)\n    const validTypes = ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet']\n    if (!validTypes.includes(file.type)) return\n\n    setFileLoaded(true)\n\n    Parser({\n      file,\n      onComplete: ({ results, headers }) => {\n        setProgress(100)\n        setTimeout(() => onSelectFile({ items: results, headers, fileName: file.name }), 1000)\n      },\n      onError: ex => {\n        console.log(ex)\n      }\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {!fileLoaded && (\n        <div\n          className={`${classes.root} ${dragged && classes.dragged}`}\n          onDrop={handleDrop}\n          onDragOver={handleOnDrag(true)}\n          onDragLeave={handleOnDrag(false)}\n        >\n          <div className={`${classes.container} ${classes.clickable}`} onClick={handleOnClick}>\n            <FontAwesomeIcon icon='file-upload' className={classes.icon} />\n            <Typography variant='subtitle2' className={classes.label}>\n              Click or drag/drop file to preview\n            </Typography>\n\n            <div className={classes.warning}>\n              <Typography variant='subtitle2' className={classes.label}>\n                Make sure the dates are in the format where the\n              </Typography>\n              <Typography variant='subtitle2' className={classes.label}>\n                <span>month is written first</span> (ex. MM/DD/YYYY or YYYY/MM/DD)\n              </Typography>\n            </div>\n          </div>\n\n          <input\n            id='file-dialog'\n            type='file'\n            ref={dialogRef}\n            style={{ display: 'none' }}\n            accept='.xlsx, .xls, .csv'\n            onChange={handleOnChangeFile}\n          />\n        </div>\n      )}\n\n      {fileLoaded && (\n        <div className={classes.root}>\n          <div className={classes.container}>\n            <div className={classes['progress-container']}>\n              <Progress variant='determinate' value={progress} />\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\n\n// Styles\nimport classes from './DynamicTable.module.scss'\n\nexport default function DynamicTable (props) {\n  const { headers, items, fileName } = props.data\n  const { onRemoveFile } = props\n  const { onDetectDataRows } = props\n\n  const [tableState, setTableState] = React.useState({\n    limit: 10,\n    page: 1\n  })\n\n  const [selectedItems, setSelectedItems] = React.useState([])\n\n  React.useEffect(() => {\n    handleOnChangeItems({})\n  }, [])\n\n  React.useEffect(() => {\n    onDetectDataRows(selectedItems)\n  }, [selectedItems])\n\n  const handleOnTableChange = params => {\n    setTableState(state => ({ ...state, ...params }))\n    handleOnChangeItems(params)\n  }\n\n  const handleOnChangeItems = ({ page = 1, limit = 10 }) => {\n    const _items = []\n\n    const startAt = (page - 1) * limit\n    const endAt = page * limit\n\n    for (let index = startAt; index < endAt; index++) {\n      const item = items[index]\n      if (!item) break\n\n      const hasValue = Object.keys(item).find(key => { return item[key] && item[key].trim().length > 0 })\n      if (hasValue) _items.push({ ...item, __index__: index })\n    }\n\n    setSelectedItems(_items)\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['file-name-container']}>\n        <Typography id='file-name' variant='subtitle2' className={classes['file-name']}>\n          {fileName}\n        </Typography>\n\n        <IconButton size='small'>\n          <FontAwesomeIcon icon='minus-circle' className={classes.icon} onClick={onRemoveFile} />\n        </IconButton>\n      </div>\n\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              <TableCell id={`column-row-number`}>#</TableCell>\n\n              {headers.map(item => (\n                <TableCell key={item} id={`column-${item}`}>\n                  {item}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          body={selectedItems.map(item => (\n            <TableRow key={`${JSON.stringify(item)}-${item.__index__}`}>\n              <TableCell id={`row-${item.__index__}`}>{item.__index__ + 1}</TableCell>\n\n              {headers.map(header => (\n                <TableCell key={`item-${header}-${item.__index__}`}>{item[header]}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n          count={setSelectedItems.length}\n          page={tableState.page}\n          limit={tableState.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={handleOnTableChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\n// Shared Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './DataPairs.module.scss'\nimport { Typography } from '@material-ui/core'\n\nconst DataPair = props => {\n  const { index, sources, targets, source, target } = props\n  const { onClickRemove, onChangeSource, onChangeTarget } = props\n\n  return (\n    <div className={classes.pair}>\n      <div className={classes.source}>\n        {/* <DropDown items={sources} value={source} onChange={onChangeSource} /> */}\n        <TextField\n          className={classes.name}\n          id={`input-source-${index}`}\n          value={source}\n          onChange={onChangeSource}\n          autoFocus\n          fullWidth\n        />\n      </div>\n      <div className={classes.target}>\n        <DropDown items={targets} value={target} onChange={onChangeTarget} />\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickRemove}>Remove</Button>\n      </div>\n    </div>\n  )\n}\nexport default function DataPairContainer (props) {\n  const { headers = ['Source', 'Target'], fields = [], sources, targets } = props\n  const { onClickAddNew, onClickRemove, onChangeSource, onChangeTarget } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes.header}>\n          {headers.map((head, index) => (\n            <Typography key={`heade-${index}`} variant='h6'>\n              {head}\n            </Typography>\n          ))}\n        </div>\n        {fields.map((field, index) => (\n          <DataPair\n            key={`field-${index}`}\n            index={index}\n            sources={sources}\n            targets={targets}\n            source={field.source || ''}\n            target={field.target || ''}\n            onChangeSource={event => onChangeSource({ index, value: event.target.value })}\n            onChangeTarget={event => onChangeTarget({ index, value: event.target.value })}\n            onClickRemove={event => onClickRemove({ index })}\n          />\n        ))}\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickAddNew}>Add New</Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n// Shared Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport DataPairContainer from './DataPairs/DataPairs'\n\n// Styles\nimport classes from './FieldMapper.module.scss'\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nconst dropdown_source = [\n  { value: 'OP', text: 'OP' },\n  { value: 'PF', text: 'PF' },\n  { value: 'IP', text: 'IP' }\n]\n\nconst dropdown_target = [\n  { value: 'In Patient', text: 'In Patient' },\n  { value: 'Out Patient Procedure', text: 'Out Patient Procedure' },\n  { value: 'Out Patient Consultation', text: 'Out Patient Consultation' },\n  { value: 'Reimbursement', text: 'Reimbursement' },\n  { value: 'Emergency', text: 'Emergency' },\n  { value: 'Dental', text: 'Dental' },\n  { value: 'Medicine Allowance', text: 'Medicine Allowance' },\n  { value: 'APE', text: 'APE' },\n  { value: 'ECU', text: 'ECU' },\n  { value: 'Pharmacy', text: 'Pharmacy' },\n  { value: 'PPE', text: 'PPE' },\n  { value: 'Medical Supplies', text: 'Medical Supplies' },\n  { value: 'Clinic Management', text: 'Clinic Management' }\n]\n\nexport default function FieldMapper (props) {\n  // Variables\n  const { sources = dropdown_source, targets = dropdown_target, claimSources = claim_sources } = props\n\n  // Services\n  const { ApiService } = props\n\n  // Callbacks\n  const { onSaveSuccess } = props\n  const { onChangeHeaderInputs } = props\n  const { onChangeClaimTypeDataMapping } = props\n\n  // Local Variables\n  const [facilityTemplate, setFacilityTemplate] = React.useState({\n    facility_id: '',\n    facility_name: '',\n    claim_source: ''\n  })\n\n  const [template, setTemplate] = React.useState({\n    id: '',\n    name: '',\n    isDefault: false,\n    fields: []\n  })\n\n  const [templates, setTemplates] = React.useState([])\n\n  const [suggestions, setSuggestions] = React.useState({\n    facility: []\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null\n  })\n\n  const [dialog, setDialog] = React.useState({\n    show: false,\n    name: '',\n    isDefault: false,\n    error: {}\n  })\n\n  const [alertDialog, setAlertDialog] = React.useState({\n    show: false,\n    mesage: '',\n    okLabel: 'Okay'\n  })\n\n  // Listeners\n  React.useEffect(() => {\n    getTemplates()\n  }, [])\n\n  React.useEffect(() => {\n    onChangeHeaderInputs(facilityTemplate)\n  }, [facilityTemplate])\n\n  React.useEffect(() => {\n    onChangeClaimTypeDataMapping(template.fields)\n  }, [template])\n\n  // Fetchers\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({ ...state, facility: [] }))\n    setFetching(state => ({ ...state, [`facility_${by}`]: true }))\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              setSuggestions(state => ({ ...state, facility: data }))\n            })\n            .finally(() => {\n              setFetching((state = { ...state, [`facility_${by}`]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const getTemplates = () => {\n    ApiService.getTemplates().then(res => {\n      const { data } = res.data\n      setTemplates(data.map(data => ({ ...data, value: data.name, text: data.name })))\n      const _default = data.find(d => d.is_default === true)\n      if (_default) {\n        setTemplate({ id: _default._id, name: _default.name, fields: _default.fields, isDefault: _default.is_default })\n      }\n    })\n  }\n\n  // Events\n  const handleOnChangeFacility = ({ value, field, search }) => {\n    if (search) {\n      setFacilityTemplate(state => ({ ...state, [field]: value }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    } else {\n      const _value = value || {}\n      setFacilityTemplate(state => ({ ...state, facility_id: _value.id, facility_name: _value.name }))\n    }\n  }\n\n  const handleOnClickAddNewTemplate = () => {\n    setDialog({ show: true, name: '', isDefault: false, error: {} })\n  }\n\n  const handleOnChangeTemplate = ({ value, text }) => {\n    const _template = templates.find(t => t.value === value)\n    setTemplate({ id: _template._id, name: _template.name, fields: _template.fields, isDefault: _template.is_default })\n  }\n\n  const handleOnChangeDialog = ({ field, value }) => {\n    setDialog(state => ({ ...state, [field]: value }))\n  }\n\n  const onClickAddField = () => {\n    const _fields = template.fields\n    const last = _fields[_fields.length - 1]\n    if (last && (last.source === '' || last.target === '')) return\n    _fields.push({ source: '', target: '' })\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onRemoveField = ({ index }) => {\n    const _fields = template.fields\n    _fields.splice(index, 1)\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeSource = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], source: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeTarget = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], target: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const doValidateTemplate = () => {\n    if (dialog.name === '') return false\n\n    return true\n  }\n\n  const doValidateFacilityTemplate = () => {\n    if (template.fields.length < 1) return false\n    template.fields.forEach(field => {\n      if (field.source === '' || field.target === '') {\n        return false\n      }\n    })\n\n    return true\n  }\n\n  const handleOnSaveTemplateDialog = () => {\n    if (!doValidateTemplate()) {\n      setAlertDialog({\n        show: true,\n        message: 'Enter Template Name',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: dialog.isDefault, fields: [] },\n      template_name: dialog.name\n    }).then(res => {\n      const { data } = res.data\n      setDialog({\n        show: false,\n        name: '',\n        isDefault: false,\n        error: {}\n      })\n      getTemplates()\n      setTemplate({ id: data._id, name: data.name, isDefault: data.is_default, fields: data.fields })\n    })\n  }\n\n  const handleOnSaveFacilityTemplate = () => {\n    if (!doValidateFacilityTemplate()) {\n      setAlertDialog({\n        show: true,\n        message:\n          'SOA details and mapping of data is required. Please complete first the SOA details and mapping of data to continue.',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: template.isDefault, fields: template.fields },\n      template_name: template.name\n    }).then(res => {\n      const { data } = res.data\n      ApiService.storeFacilityTemplate({\n        data: {\n          facility_name: facilityTemplate.facility_name,\n          claim_source: facilityTemplate.claim_source,\n          template_id: data._id\n        },\n        facility_id: facilityTemplate.facility_id\n      }).then(res => {\n        setAlertDialog({\n          show: true,\n          message: 'SOA details mapping of data successfully saved.',\n          okLabel: 'Okay'\n        })\n        onSaveSuccess({ template, facility: facilityTemplate })\n      })\n    })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-id'\n              required\n              label='Medical Partner ID'\n              value={facilityTemplate.facility_id}\n              suggestions={suggestions.facility}\n              onChange={(value, search) =>\n                handleOnChangeFacility({\n                  field: 'facility_id',\n                  value,\n                  search\n                })\n              }\n              field={'id'}\n              loading={fetching['facility_id']}\n            />\n          </div>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-facility-name'\n              required\n              label='Medical Partner (Facility) Name'\n              value={facilityTemplate.facility_name}\n              suggestions={suggestions.facility}\n              onChange={(value, search) =>\n                handleOnChangeFacility({\n                  field: 'facility_name',\n                  value,\n                  search\n                })\n              }\n              field={'name'}\n              loading={fetching['facility_name']}\n            />\n          </div>\n          <div className={classes['input']}>\n            <DropDown\n              id='claim-source'\n              label='Claim Source'\n              required\n              items={claimSources}\n              value={facilityTemplate.claim_source}\n              onChange={event => setFacilityTemplate(state => ({ ...state, claim_source: event.target.value }))}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <Typography variant='h6' className={classes.title}>\n            Data Values\n          </Typography>\n        </div>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <DropDown\n              id='data-templates'\n              label='Data Mapping Template'\n              required\n              items={templates}\n              value={template.name}\n              onChange={event =>\n                event.target.value !== 'add-new'\n                  ? handleOnChangeTemplate({ value: event.target.value, text: event.target.text })\n                  : handleOnClickAddNewTemplate()\n              }\n              addNew={{\n                show: true,\n                text: '+ Add New Data Map',\n                value: 'add-new'\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes.field}>\n            <div className={classes.label}>\n              <Typography>Claim Type</Typography>\n            </div>\n            <div className={classes.table}>\n              <DataPairContainer\n                headers={['Values', 'Data Column']}\n                sources={sources}\n                targets={targets}\n                fields={template.fields}\n                onClickAddNew={() => onClickAddField()}\n                onClickRemove={({ index }) => onRemoveField({ index })}\n                onChangeSource={({ index, value }) => onChangeSource({ index, value })}\n                onChangeTarget={({ index, value }) => onChangeTarget({ index, value })}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.groups}>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            onClick={handleOnSaveFacilityTemplate}\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n      <Dialog\n        fullWidth\n        maxWidth='sm'\n        onClose={() => setDialog(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={dialog.show}\n        className={classes.dialog}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Define Data Map\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDialog(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.input}>\n            <TextField\n              className={classes.name}\n              id='data-map-name'\n              value={dialog.name}\n              autoFocus\n              fullWidth\n              placeholder='Template Name'\n              onChange={event => handleOnChangeDialog({ field: 'name', value: event.target.value })}\n              error={dialog.error.name}\n            />\n          </div>\n          <div className={classes.input}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  className={classes.default}\n                  id='data-map-default'\n                  checked={dialog.isDefault}\n                  value={dialog.isDefault}\n                  onChange={event => handleOnChangeDialog({ field: 'isDefault', value: event.target.checked })}\n                />\n              }\n              label={'Set as default template'}\n            />\n          </div>\n          <div className={classes.footer}>\n            <div className={classes.action}>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, show: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={handleOnSaveTemplateDialog}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Save\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      <Alert\n        open={alertDialog.show}\n        message={alertDialog.message}\n        okLabel={alertDialog.okLabel}\n        onOk={() => {\n          setAlertDialog(state => ({ ...state, show: false }))\n        }}\n      />\n    </Paper>\n  )\n}\n","import React, { Fragment } from 'react'\n// import Grid from '@material-ui/core/Grid'\n// import Paper from '@material-ui/core/Paper'\n// import moment from 'moment'\nimport Button from '@material-ui/core/Button'\n// import Typography from '@material-ui/core/Typography'\n\n// Controller\nimport SoaEtlController from 'Controllers/SoaEtlController'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport UploadSpace from './Components/UploadSpace/UploadSpace'\nimport DynamicTable from './Components/DynamicTable/DynamicTable'\nimport FieldMapper from '../../FieldMapper/FieldMapper'\n// import CustomTextField from 'SharedComponents/TextField/CustomTextField'\n// import DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n// import Alert from 'SharedComponents/Alert/Alert'\n\n// // Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// Style\nimport classes from './UploadSoaPage.module.scss'\nimport claimTypes from 'Constant/claimTypes'\n\nexport default function UploadSoaPage (props) {\n  const { ApiService } = props\n  const [data, setData] = React.useState()\n  const [headerInputs, setHeaderInputs] = React.useState({})\n  const [claimTypeValues, setClaimTypeValues] = React.useState([])\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [dataRows, setDataRows] = React.useState([])\n\n  React.useEffect(() => {\n    PageTitleService(`Upload SOA File`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'uploadSoa'])\n  }, [])\n\n  const handleOnSelectFile = data => setData(data)\n\n  const handleOnRemoveFile = () => setData()\n\n  const handleOnCancelUpload = () => setData()\n\n  const handleProceedUpload = () => {\n    if (!claimTypeValues || claimTypeValues.length === 0) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message:\n          'SOA details and mapping of data is required. Please complete first the SOA details and mapping of data to continue.'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_id) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner ID'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_name) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner Name'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.claim_source) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Claim Source'\n      }))\n      return\n    }\n\n    // Construct data mapping for Transformation\n    const claimTypeMap = {}\n    claimTypeValues.forEach(element => {\n      claimTypeMap[element.source] = element.target\n    })\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: claimTypeMap\n      }\n    }\n\n    // Construct defaults for Transformation\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: headerInputs.claim_source,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: headerInputs.facility_id,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: headerInputs.facility_name\n    }\n\n    const fileHeaders = Object.keys(dataRows[0])\n    const fileMapping = Object.keys(dataMapping.columns)\n    const err = fileMapping.filter(head => !fileHeaders.includes(head))\n\n    if (err.length > 0) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please make sure that the uploaded SOA file has the correct column headers.'\n      }))\n      return\n    }\n\n    LoadingService.loading(true)\n\n    let bundle = null\n    // Invoke transformation\n    try {\n      bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n    } catch (ex) {\n      LoadingService.loading(false)\n      // Unable to upload SOA file. Please ensure there is one SOA no. only.\"\n      console.log('Transform Error', ex)\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: ex.message || ex\n      }))\n      return\n    }\n\n    const onSuccess = function (bundle_number) {\n      // alert('SOA Upload successful')\n      // setAlertCloseHandlerAlert(handleOnCancel)\n\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'SOA Uploaded Successfully: Bundle No. ' + bundle_number,\n        onOk: () => {\n          handleOnCancel()\n          setOpenAlert(state => ({\n            ...state,\n            show: false\n          }))\n        }\n      }))\n    }\n\n    // Invoke loading unto Claims API\n    SoaEtlController.loadToApi(bundle, onSuccess)\n      .then(bundle_number => {\n        onSuccess(bundle_number)\n        LoadingService.loading(false)\n      })\n      .catch(() => {\n        LoadingService.loading(false)\n        setOpenAlert(state => ({\n          ...state,\n          show: true,\n          message: 'SOA Upload failed'\n        }))\n      })\n  }\n\n  // close for validation\n  const handleOnClose = () => {\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n  }\n\n  const handleOnCancel = () => {\n    LoadingService.loading(true)\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      handleOnCancelUpload()\n      LoadingService.loading(false)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {SoaEtlController.DEBUG && (\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-negative'\n          id='test-etl'\n          onClick={SoaEtlController.test}\n        >\n          Test ETL\n        </Button>\n      )}\n\n      {!data && <UploadSpace onSelectFile={handleOnSelectFile} />}\n\n      {data && (\n        <div className={classes.table}>\n          <DynamicTable\n            data={data}\n            onRemoveFile={handleOnRemoveFile}\n            onDetectDataRows={dataRows => {\n              setDataRows(dataRows)\n            }}\n          />\n        </div>\n      )}\n\n      {data && (\n        <Fragment>\n          <FieldMapper\n            ApiService={ApiService}\n            onSaveSuccess={({ template, facility }) => {\n              console.log('Field Mapper Saved!', { template, facility })\n            }}\n            onChangeHeaderInputs={headerInputs => {\n              setHeaderInputs(headerInputs)\n            }}\n            onChangeClaimTypeDataMapping={fields => {\n              setClaimTypeValues(fields)\n            }}\n          />\n\n          {/* TODO: replace evil quick-fix */}\n          <br />\n\n          <div align='right'>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel-upload'\n              onClick={handleOnCancel}\n            >\n              Cancel\n            </Button>\n            {/* TODO: replace evil quick-fix */}\n            &nbsp; &nbsp;\n            <Button\n              id='proceed-upload'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={handleProceedUpload}\n            >\n              Upload\n            </Button>\n          </div>\n        </Fragment>\n      )}\n\n      <Alert open={openAlert.show} message={openAlert.message} okLabel='Close' onOk={openAlert.onOk || handleOnClose} />\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/c')\n\nexport default class ClaimsAdjudicationServices {\n  static utilizationLegder (params) {\n    return axios({\n      url: `/utilization-ledger`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static transmittalReport (params, client) {\n    return axios({\n      url: '/transmittal-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getTransmittalReportPdf (params) {\n    return axios({\n      url: '/transmittal-report/reports',\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' },\n      params\n    })\n  }\n\n  static utilizationClient (params) {\n    return axios({\n      url: '/utilization-ledger/client',\n      method: 'GET',\n      params\n    })\n  }\n\n  static utilizationClientTable (params) {\n    return axios({\n      url: '/utilization-ledger/client/table',\n      method: 'GET',\n      params\n    })\n  }\n\n  static loadingHIMSData (params) {\n    return axios({\n      url: `/loading-hims-data`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static confinementReport (params) {\n    return axios({\n      url: `/confinement-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static paymentRequestReport (params) {\n    return axios({\n      url: '/payment-request-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static paymentRequestClaims (params, bundle_number) {\n    return axios({\n      url: `/payment-request-report/${bundle_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reimbursementClaimReport (params) {\n    return axios({\n      url: '/reimbursement-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static productivityReport (params) {\n    return axios({\n      url: '/productivity-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static claimsSummaryReport (params) {\n    return axios({\n      url: '/claims-summary-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static lookupsQuery ({ category, field, value }) {\n    return axios({\n      url: `/lookups/auto-suggest`,\n      method: 'GET',\n      params: { category, field, value },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static lookupsAll ({ category }) {\n    return axios({\n      url: `/lookups/auto-suggest/${category}`,\n      method: 'GET',\n      params: { category },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static returnedClaimsReport (params) {\n    return axios({\n      url: `/returned-claims-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static agingPartialApprovedClaimsReport (params) {\n    return axios({\n      url: `/aging-partial-approved-claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static agingReturnClaimsReport (params) {\n    return axios({\n      url: `/aging-return-claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static claimsBeyond3Months (params) {\n    return axios({\n      url: `/claims-beyond-3-months`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reimbursmentAgingReport (params) {\n    return axios({\n      url: `/reimbursement-aging`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static performanceReport (params) {\n    return axios({\n      url: `/performance-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedPerformanceReport (params) {\n    return axios({\n      url: `/detailed-performance-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedMonitoringReport (params) {\n    return axios({\n      url: `/detailed-monitoring-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedClaimsReport (params) {\n    return axios({\n      url: `/detailed-claims-report`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","// Received Path as Array\n// Received Path as String\n\nconst SafeAccess = (value, path, def = undefined, delimeter = '.') => {\n  if (typeof path === 'object') {\n    return path.reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n  } else if (typeof path === 'string') {\n    return (\n      path.split(delimeter).reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n    )\n  }\n} // pass in your object structure as array elements\n\nexport { SafeAccess }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date Range From')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Date Range From\" should be on or before \"Date Range To\"`\n    }),\n  date_to: Joi.date()\n    .label('Date Range To')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Date Range To\" should be on or after \"Date Range From\"`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimsUtilLedgerReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Batch No.', data: 'batch_number', search: true, match: 'any' },\n  { label: 'Claim No.', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, match: 'any' },\n  { label: 'Approval Code', data: 'approval_code', search: true, match: 'start' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, match: 'any' },\n  { label: 'Loa No.', data: 'loa_number', search: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, match: 'any' },\n  { label: 'Member Account No.', data: 'member_account_number', search: true, match: 'any' },\n  { label: 'Member Last Name', data: 'member_last_name', search: true, match: 'any' },\n  { label: 'Member First Name', data: 'member_first_name', search: true, match: 'any' },\n  { label: 'Member Middle Name', data: 'member_middle_name', search: true, match: 'any' },\n  { label: 'Client Account Number', data: 'client_account_number', search: true, match: 'any' },\n  { label: 'Client Account Name', data: 'client_name', search: true, match: 'any' },\n  { label: 'Customer Account Number', data: 'customer_company_account_number', search: true, match: 'any' },\n  { label: 'Company Name', data: 'company_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Facility) Name', data: 'facility_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'doctor_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Doctor) Name', data: 'doctor_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID (Anesthesiologist)', data: 'anesthesiologist_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Anesthesiologist) Name', data: 'anesthesiologist_name', search: true, match: 'any' },\n  { label: 'Date Admitted', type: 'date', data: 'date_admission_from', search: true, match: 'date' },\n  { label: 'Date Discharged', type: 'date', data: 'date_admission_to', search: true, match: 'date' },\n  { label: 'Date of Service', type: 'date', data: 'date_service', search: true, match: 'date' },\n  { label: 'Date of Service (From)', type: 'date', data: 'date_service_from', search: true, match: 'date' },\n  { label: 'Date of Service (To)', type: 'date', data: 'date_service_to', search: true, match: 'date' },\n  { label: 'Contract Year (From)', type: 'date', data: 'contract_from', search: true, match: 'date' },\n  { label: 'Contract Year (To)', type: 'date', data: 'contract_to', search: true, match: 'date' },\n  { label: 'Department', data: 'department', search: true, match: 'any' },\n  { label: 'Recommendation', data: 'recommendation', search: true, match: 'any' },\n  { label: 'Room Type', data: 'room_type', search: true, match: 'any' },\n  { label: 'Room Rate', data: 'room_rate', search: true, match: 'exact' },\n  { label: 'PRO ID', data: 'pro_id', search: true, match: 'any' },\n  { label: 'PRO Name', data: 'pro_name', search: true, match: 'any' },\n  { label: 'Claim Sub Type', data: 'claim_sub_type', search: true, match: 'any' },\n  { label: 'Claim Sub-sub Type', data: 'claim_sub_sub_type', search: true, match: 'any' },\n  { label: 'With Corporate Guaranty', data: 'with_corporate_guaranty', search: true, match: 'any' },\n  { label: 'Medicine Category', data: 'medicine_category', search: true, match: 'any' },\n  { label: 'Reimbursement Type', data: 'reimbursement_type', search: true, match: 'any' },\n  { label: 'Reimbursement Category', data: 'reimbursement_category', search: true, match: 'any' },\n  { label: 'Official Receipt Number', data: 'receipt_number', search: true, match: 'any' },\n  { label: 'APE/PPE Package/s', data: 'ape_ppe_packages', search: true, match: 'any' },\n  { label: 'Given Diagnosis', type: 'array', data: 'diagnosis.given_diagnosis', search: true, match: 'any' },\n  { label: 'ICD10 Description', type: 'array', data: 'diagnosis.description', search: true, match: 'any' },\n  { label: 'ICD10 Code', type: 'array', data: 'diagnosis.code', search: true, match: 'any' },\n  { label: 'ICD10 Primary', type: 'array', data: 'diagnosis.primary', search: true, match: 'any' },\n  { label: 'LOA Notes', data: 'loa_notes', search: true, match: 'any' },\n  { label: 'Tooth Number', type: 'array', data: 'dental_procedures.tooth_number', search: true, match: 'exact' },\n  { label: 'Procedure Name', type: 'array', data: 'procedures.description', search: true, match: 'any' },\n  { label: 'CPT Code', type: 'array', data: 'procedures.code', search: true, match: 'any' },\n  { label: '(Procedures) Gross Amount', type: 'array', data: 'procedures.gross_amount', search: true, match: 'exact' },\n  { label: '(Procedures) Vat Amount', type: 'array', data: 'procedures.vat_amount', search: true, match: 'exact' },\n  {\n    label: '(Procedures) Amount Paid by Member',\n    type: 'array',\n    data: 'procedures.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'procedures.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Remarks',\n    type: 'array',\n    data: 'procedures.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Procedures) Amount not Covered',\n    type: 'array',\n    data: 'procedures.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Procedures) Reason', type: 'array', data: 'procedures.reason', search: true, match: 'any' },\n  {\n    label: '(Procedures) Amount due From Member',\n    type: 'array',\n    data: 'procedures.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) Reason for Charging Member',\n    type: 'array',\n    data: 'procedures.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Procedures) Amount due From Client',\n    type: 'array',\n    data: 'procedures.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) Reason for Charging Client',\n    type: 'array',\n    data: 'procedures.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Hospital Item Name', type: 'array', data: 'hospital_items.name', search: true, match: 'any' },\n  { label: 'Item Code', type: 'array', data: 'hospital_items.item_code', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Gross Amount',\n    type: 'array',\n    data: 'hospital_items.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Vat Amount',\n    type: 'array',\n    data: 'hospital_items.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Amount Paid by Member',\n    type: 'array',\n    data: 'hospital_items.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'hospital_items.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Remarks',\n    type: 'array',\n    data: 'hospital_items.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Hospital Items) Amount not Covered',\n    type: 'array',\n    data: 'hospital_items.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Hospital Items) Reason', type: 'array', data: 'hospital_items.reason', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Amount due From Member',\n    type: 'array',\n    data: 'hospital_items.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Reason for Charging Member',\n    type: 'array',\n    data: 'hospital_items.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Hospital Items) Amount due From Client',\n    type: 'array',\n    data: 'hospital_items.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Reason for Charging Client',\n    type: 'array',\n    data: 'hospital_items.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Medical Partner ID', type: 'array', data: 'professional_fees.doctor_id', search: true, match: 'any' },\n  { label: 'Doctor Name', type: 'array', data: 'professional_fees.doctor_name', search: true, match: 'any' },\n  { label: 'Specialization', type: 'array', data: 'professional_fees.specialization', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Gross Amount',\n    type: 'array',\n    data: 'professional_fees.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Vat Amount',\n    type: 'array',\n    data: 'professional_fees.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Amount Paid by Member',\n    type: 'array',\n    data: 'professional_fees.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'professional_fees.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Remarks',\n    type: 'array',\n    data: 'professional_fees.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Professional Fee) Amount not Covered',\n    type: 'array',\n    data: 'professional_fees.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Professional Fee) Reason', type: 'array', data: 'professional_fees.reason', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Amount due From Member',\n    type: 'array',\n    data: 'professional_fees.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Reason for Charging Member',\n    type: 'array',\n    data: 'professional_fees.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Professional Fee) Amount due From Client',\n    type: 'array',\n    data: 'professional_fees.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Reason for Charging Client',\n    type: 'array',\n    data: 'professional_fees.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Claim Remarks', data: 'claim_remarks', search: true, match: 'any', remarks: true }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ClaimsUtilLedgerReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange, refresh } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Ledger Report')\n    BreadcrumbsService.setSelectedItems(['utilizationLedger'])\n  }, [])\n\n  const [btnDisabled, setBtnDisabled] = React.useState(true)\n\n  // const [allClaims, setAllClaims] = React.useState({\n  //   data: [],\n  //   columns: columns.map(value => ({\n  //     name: value.name,\n  //     type: value.type\n  //   }))\n  // })\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchLedger = () => {\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to)\n        // date_admission_from: DateFormatter(claim.date_admitted),\n        // date_discharged: DateFormatter(claim.date_discharged),\n        // date_issued: DateFormatter(claim.date_issued),\n        // diagnosis: claim.diagnosis && claim.diagnosis.length > 0 ? claim.diagnosis.shift().description : null\n      }))\n      setBtnDisabled(!_claims.length)\n      setClaims(state => ({ ...state, data: _claims, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    setBtnDisabled(true)\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to)\n      }))\n\n      const rows = _claims.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n      // console.log(rows)\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Utilization Ledger Report', header, rows })\n      LoadingService.loading(false)\n      setBtnDisabled(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchLedger()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                fetchLedger()\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={btnDisabled}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${btnDisabled ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './AutoComplete.module.scss'\nexport default function AutoComplete (props) {\n  const { label = '', required, readOnly, suggestions = [], onChange, error, ...other } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event.target.value)\n  }\n\n  const handleItemClick = index => {\n    setFocus(false)\n    setError()\n    if (typeof onChange === 'function') onChange(suggestions[index], true, index)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <InputBase\n                className={classes.input}\n                onChange={handleOnChange}\n                {...other}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n              {focus && (\n                <Paper id={`${props.id}-suggestion`} className={classes.suggestions} square>\n                  {suggestions.length < 1 ? (\n                    <MenuItem className={classes.hint} disabled>\n                      Enter atleast 3 characters to search.\n                    </MenuItem>\n                  ) : (\n                    suggestions.map((suggestion, index) => (\n                      <MenuItem\n                        id={`${props.id}-suggestion-${index}`}\n                        key={`${props.id}-suggestion-${index}`}\n                        onClick={() => {\n                          setFocus(true)\n                          handleItemClick(index)\n                        }}\n                      >\n                        {suggestion}\n                      </MenuItem>\n                    ))\n                  )}\n                </Paper>\n              )}\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Component\nimport { Typography } from '@material-ui/core'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Footer.module.scss'\n\nexport default function ClaimsUtilLedgerReport (props) {\n  const { username, total = {} } = props\n\n  // TODO For refactoring :(( )\n  return (\n    <div className={classes.footer}>\n      <hr />\n      <div className={classes.total}>\n        <div className={classes['total-row']}>\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AMOUNT: ${CurrencyFormatter(total.amount)}`}</p>\n          </div>\n\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AR: ${CurrencyFormatter(total.ar_amount)}`}</p>\n          </div>\n        </div>\n      </div>\n      <div className={classes['all-signatories']}>\n        <div className={classes.signatories}>\n          <Typography>Transmitted by: </Typography>\n          <Typography className={classes.username}>{username}</Typography>\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Noted by: </Typography>\n          <div className={classes['line-note']} />\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Received by: </Typography>\n          <div className={classes['line-received']} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/x/cc')\n\nexport default class CustomerCareServices {\n  static getMember ({ account_number }) {\n    return axios({\n      url: `/member`,\n      method: 'GET',\n      params: { account_number }\n    })\n  }\n\n  static getClient ({ account_number }) {\n    return axios({\n      url: `/client`,\n      method: 'GET',\n      params: { account_number }\n    })\n  }\n\n  static getMemberUtilizationLoa ({ account_number }) {\n    return axios({\n      url: `/members/${account_number}/utilization-loa`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // PRO User lookup\n  static proUsersLookup ({ value, field }) {\n    return axios({\n      url: '/users/pro',\n      method: 'GET',\n      params: { [field]: value }\n    })\n  }\n\n  static getMemberContract ({ mct_id }) {\n    return axios({\n      url: `/member/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getClientContract ({ mct_id }) {\n    return axios({\n      url: `/client/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getMemberContractUrl ({ mct_id }) {\n    return new Promise((resolve, reject) => {\n      const token = window.localStorage.getItem('token') || window.localStorage.getItem('access_token')\n      const url = `/x/cc/member/contract?mct_id=${mct_id}&token=${token}`\n      const baseURL = window.localStorage.CLAIMS_URL\n        ? window.localStorage.CLAIMS_URL\n        : `${process.env.REACT_APP_SERVER_API}`\n      resolve(`${baseURL}${url}`)\n    })\n  }\n\n  static getClientContractUrl ({ mct_id }) {\n    return new Promise((resolve, reject) => {\n      const token = window.localStorage.getItem('token') || window.localStorage.getItem('access_token')\n      const url = `/x/cc/client/contract?mct_id=${mct_id}&token=${token}`\n      const baseURL = window.localStorage.CLAIMS_URL\n        ? window.localStorage.CLAIMS_URL.replace(/\\/$/, '')\n        : `${process.env.REACT_APP_SERVER_API}`\n      resolve(`${baseURL}${url}`)\n    })\n  }\n\n  static getClientInfo ({ value, field }) {\n    return axios({\n      url: `/client-info`,\n      method: 'GET',\n      params: { [field]: value }\n    })\n  }\n\n  static getClients ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/clients`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getMembers ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/members`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getClientUtilizationLoa ({ client_account_no }) {\n    return axios({\n      url: `/client/${client_account_no}/utilization-loa`,\n      method: 'GET'\n    })\n  }\n  static getMemberContractPlanType ({ account_number }) {\n    return axios({\n      url: `/member/contract-plan-type`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getClientrContractPlanType ({ account_number }) {\n    return axios({\n      url: `/client/contract-plan-type`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getDoctorSpecilizations ({ data }) {\n    return axios({\n      url: '/doctor-specializations',\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { data }\n    })\n  }\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/md')\n\nexport default class MedicalConsultantServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import MedicalConsultantServices from './MedicalConsultantServices'\nimport instance from './instance'\nconst axios = instance('/client')\n\nexport default class UserManagementServices {\n  static getUsers (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getUsersByRole (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getClaimsVerifierSupervisors () {\n    return this.getUsers('CLAIMS_VERIFIER_SUPERVISOR')\n  }\n\n  static getClaimsAnalyst () {\n    return this.getUsers('CLAIMS_ANALYST')\n  }\n\n  static getUserById (id) {\n    return axios({\n      url: `http://18.138.94.224:4101/api/users/${id}`,\n      method: 'GET'\n    })\n  }\n}\n","export default {\n  header: ['Company:', 'Account No.:', 'Contract:', 'Date:'],\n  footer: ['Total', 'Transmitted by:', 'Noted by:', 'Received by:']\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport PrintIcon from '@material-ui/icons/Print'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Footer from './Footer/Footer'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { staticHeaderFooter } from './helper/staticHeaderFooter'\n\n// Validator\nimport DateRangeValidator from './validator/DateRangeValidator'\n\n// Styles\nimport classes from './TransmittalReport.module.scss'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { initSuggestions, resetSuggestionObject, setSuggestionObject } = actions\n\nconst columns = [\n  { label: 'NO.', sortField: 'number', data: 'no', sort: false, align: 'left', class: 'h_no', type: 'number' },\n  { label: 'LOA NO.', sortField: 'latest.loa_number', data: 'loa_number', sort: true, align: 'left', class: 'h_loa' },\n  { label: 'DATE', sortField: 'status_date', data: 'date', sort: true, align: 'left', class: 'h_date', type: 'date' },\n  { label: 'MEMBER', sortField: 'member_name', data: 'member_name', sort: true, align: 'left', class: 'h_member' },\n  {\n    label: 'AMOUNT',\n    sortField: 'total_amount',\n    data: 'total_amount',\n    sort: false,\n    align: 'right',\n    class: 'h_amount',\n    type: 'currency'\n  },\n  {\n    label: 'AR',\n    sortField: 'total_due_from_member',\n    data: 'total_due_from_member',\n    sort: false,\n    align: 'right',\n    class: 'h_ar',\n    type: 'currency'\n  }\n]\n\nexport default function TransmittalReport (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [claims, setClaims] = React.useState({\n    raw: [],\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'loa_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [client, setClient] = React.useState({\n    registered_name: '',\n    corporate_account_no: ''\n  })\n\n  const [returnClient, setReturnClient] = React.useState({})\n\n  const [total, setTotal] = React.useState({\n    amount: 0,\n    ar_amount: 0\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [username, setUsername] = React.useState('')\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    PageTitleService('Transmittal Report')\n    BreadcrumbsService.setSelectedItems(['transmittal'])\n\n    // TODO is this right?\n    const _id = localStorage.getItem('user_id')\n    UserManagementServices.getUserById(_id).then(res => {\n      const { username = '' } = res.data\n      setUsername(username)\n    })\n  }, [])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleClientOnChange = ({ value, field, isSuggestionClick }) => {\n    setClient(state => ({ ...state, [field]: value }))\n    if (isSuggestionClick) {\n      for (const i of suggestions.client.data) {\n        if (value === i.registered_name || value === i.corporate_account_no) {\n          dispatch(resetSuggestionObject({ field: 'client' }))\n          setClient(state => ({\n            ...state,\n            registered_name: i.registered_name,\n            corporate_account_no: i.corporate_account_no\n          }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'client' }))\n      getClientSuggestions({ value, field })\n    }\n  }\n\n  const getClientSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getClientInfo({ value, field }).then(res => {\n            const { data = [] } = res.data\n\n            const item = []\n            for (const d of data) {\n              item.push(d[field])\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'client',\n                suggestion: { [field]: item, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchTransmittalItems = params => {\n    if (client.registered_name === '' || client.corporate_account_no === '') {\n      LoadingService.loading(false)\n      return setClaims(state => ({ ...state, data: [] }))\n    }\n\n    LoadingService.loading(true)\n    ClaimsServices.transmittalReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      client\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page, client = {} } = res.data.data\n      const _totam_amout = raw.reduce((a, c) => a + c.total_amount, 0)\n      const _ar_amount = raw.reduce((a, c) => a + c.total_due_from_member, 0)\n\n      setReturnClient(client)\n      setClaims(state => ({ ...state, data: results, raw, count, page, limit }))\n      setTotal(state => ({\n        ...state,\n        amount: !_totam_amout <= 0 ? _totam_amout : 0,\n        ar_amount: !_ar_amount <= 0 ? _ar_amount : 0\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...claims,\n      ...args\n    }\n\n    setClaims(state => ({ ...state, ...args }))\n    fetchTransmittalItems(params)\n  }\n\n  const handlePrintReport = params => {\n    if (!claims.data.length) return\n\n    PdfViewer2Service({\n      name: 'Transmittal Report',\n      fileName: 'transmittal_report',\n      service: ClaimsServices.getTransmittalReportPdf({\n        range: params.range,\n        sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n        client\n      }),\n      open: true\n    })\n  }\n\n  const handleGenerateReport = () => {\n    if (!claims.raw.length) return\n\n    const header = columns.map(i => i.label)\n    // const rows = []\n\n    // claims.raw.forEach(item => {\n    //   item.date = DateFormatter(item.date)\n    //   rows.push(Object.values(item))\n    // })\n\n    const rows = claims.raw.map(claim => {\n      return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n    })\n\n    const statics = staticHeaderFooter({ ...returnClient, ...total, username })\n    LoadingService.loading(true)\n    ArrayToCSV({ fileName: `${client.registered_name} Transmittal Report`, header, rows, statics })\n    LoadingService.loading(false)\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes['search-header']}>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Company:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by company name'\n                  id='company-name'\n                  value={client.registered_name}\n                  suggestions={suggestions.client.registered_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'registered_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Account No.:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by account number'\n                  id='account-number'\n                  value={client.corporate_account_no}\n                  suggestions={suggestions.client.corporate_account_no}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'corporate_account_no',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                fetchTransmittalItems(claims)\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='print-report' onClick={() => handlePrintReport(claims)} disabled={!claims.data.length}>\n              <PrintIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Print Report\n              </Typography>\n            </Button>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <TableSortLabel\n                        active={claims.orderBy === headCell.sortField}\n                        direction={claims.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${index}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${index}-${colIndex}`}\n                        align={col.align}\n                      >\n                        {formatData({ type: col.type, source: item, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n          <Footer username={username} total={total} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport ArrayToCSV from 'Services/ArrayToCSV'\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './TreasuryTransmittalReport.module.scss'\n\nconst columns = [\n  { label: 'Date Requested', data: 'date_requested', search: true, match: 'date' },\n  { label: 'Transmittal No.', data: 'transimittal_no', search: true, match: 'any' },\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Delivery Status', data: 'delivery_status', search: true, match: 'any' },\n  { label: 'Received By', data: 'received_by', search: true, match: 'any' },\n  { label: 'Date Received', data: 'date_received', search: true, match: 'date' }\n]\n\nexport default function TreasuryTransmittalReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Treasury Transmittal Reports')\n    BreadcrumbsService.setSelectedItems(['treasuryTransmittalReport'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  const fetchReport = () => {\n    LoadingService.loading(true)\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './PRCheckReport.module.scss'\n\nconst columns = [\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check Voucher No.', data: 'check_voucher_no', search: true, match: 'any' },\n  { label: 'Check Voucher Date.', data: 'check_voucher_date', search: true, match: 'date' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Check Release Date', data: 'check_release_date', search: true, match: 'date' },\n  { label: 'FPAD Transmittal Date', data: 'fpad_transmittal_date', search: true, match: 'date' },\n  { label: 'Date Received (FPAD Delivery)', data: 'date_received_fpad_delivery', search: true, match: 'date' }\n]\n\nexport default function PRCheckReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('PR and Check Report')\n    BreadcrumbsService.setSelectedItems(['prReports'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    // TODO:\n    // Change service if api becomes available\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  const fetchReport = () => {\n    // TODO:\n    // Change service if api becomes available\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import { DateFormatter } from 'Utilities/TextFormatter'\n\nexport const mapData = ({ data }) => {\n  return data.map(i => {\n    return {\n      claim_no: i.claim_no || '',\n      diagnosis: i.diagnosis || i.diagnoses || [{ diagnosis: i.primary_diagnosis || '', icd10_code: i.primary_icd10_code || '' }],\n      procedures: i.procedures || [], // partner_doctor_name\n      provider: { facility: [i.partner_name] || '', doctor: i.doctors ? setDoctors(i.doctors, i.partner_doctor_name) : i.partner_doctor_name ? [i.partner_doctor_name] : [] },\n      amount: i.total_amount || i.grand_total || 0,\n      session: i.session || 1,\n      date: DateFormatter(i.date_issued),\n      type: i.type,\n      status: i.status\n    }\n  })\n}\n\nconst setDoctors = (doctors = [], partner_name) => {\n  if (partner_name == undefined) return doctors.map(i => (i.name))\n  return doctors.map(i => (i.name)).concat([partner_name])\n}\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n// import TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport { setPaginate } from './Utils/pagination'\nimport { mapData } from './Utils/mapData'\nimport { itemFilter } from './Utils/query'\n\n// Styles\nimport classes from './Utilization.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setLimitType, resetLimitType } = actions\n\nconst headCellsComplete = [\n  { name: 'Claim ID', sortField: 'claim_no', search: true },\n  { name: 'Diagnosis', sortField: 'diagnosis', search: true },\n  { name: 'Procedure', sortField: 'procedures', search: true },\n  { name: 'Provider', sortField: 'provider', search: true },\n  { name: 'Amount', sortField: 'amount', search: true },\n  { name: 'Session', sortField: 'session', search: true },\n  { name: 'Date', sortField: 'date', search: true },\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Status', sortField: 'status', search: true }\n]\n\nconst randomRange = (min, max) => {\n  return Math.random() * (max - min) + min\n}\n\nexport default function Utilization (props) {\n  const dispatch = useDispatch()\n  const title = useSelector(({ ClaimsAnalysis: state }) => state.title)\n\n  const {\n    fetchService,\n    diagnosis,\n    isMember = true,\n    member = {},\n    utilizationLoa = [],\n    hideSearchBar = false,\n    hideActionColumn = false,\n    dataColumns\n  } = props\n\n  const [headCells, setHeadCells] = React.useState(headCellsComplete)\n  const [rows, setRows] = React.useState([])\n  const [allList, setAllList] = React.useState([])\n  const [filteredRows, setFilteredRows] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    category: 'all',\n    search: '',\n    filter: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = headCellsComplete\n    } else {\n      filtered = headCellsComplete.filter(entry => dataColumns.indexOf(entry.sortField) > -1)\n    }\n    setHeadCells(filtered)\n  }, [dataColumns])\n\n  React.useEffect(() => {\n    if (member) {\n      let type\n      let limit\n\n      if (member.benefit_limits) {\n        if (member.benefit_limits.length > 0) {\n          const types = ['ABL', 'MBL']\n          for (let i = 0; i < member.benefit_limits.length; i++) {\n            if (types.includes(member.benefit_limits[i].type)) {\n              type = member.benefit_limits[i].type\n              limit = member.benefit_limits[i].limit\n              break\n            }\n          }\n        }\n      }\n\n      if (type === 'ABL') {\n        dispatch(setLimitType('Annual Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        fetchService({\n          member_account_no: member.info.member_id,\n          type: '',\n          icd_code: ''\n        }).then(res => {\n          const { data } = res.data\n\n          const list = mapData({\n            data: [\n              ...utilizationLoa.map(i => ({ ...i, type: 'IBNR' })),\n              ...data.map(i => ({ ...i, status: 'Approved' }))\n            ]\n          })\n\n          setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n          setRows(list.slice(0, filteredRows.limit))\n          setAllList(list)\n\n          let ibnr = 0\n          let utilized = 0\n\n          utilizationLoa.map(item => (ibnr += item.total_amount))\n          data.map(item => (utilized += item.grand_total))\n\n          setGraph(state => ({\n            ...state,\n            ibnr,\n            utilized\n          }))\n        })\n      } else if (type === 'MBL') {\n        dispatch(setLimitType('Maximum Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        let primary = (diagnosis && diagnosis.filter(icd => icd.primary === true)[0]) || {\n          code: '',\n          description: '',\n          category_code: ''\n        }\n\n        IcdCptStorageServices.lookups({\n          on: 'icd-10',\n          params: { query: primary.code, by: 'code' }\n        }).then(res => {\n          const { data } = res.data\n          const { diagnosis_code } = data[0] || []\n\n          // If claim have no diagnosis field then return all\n          primary.code ? (primary.category_code = diagnosis_code) : (primary.category_code = '')\n\n          fetchService({\n            member_account_no: member.info.member_id,\n            type: 'mbl',\n            icd_code: primary.category_code\n          }).then(res => {\n            const { data } = res.data\n\n            // ICD Screening\n            let _utilizationLoa = utilizationLoa.filter(item => {\n              if (item.primary_icd10_code) {\n                return item.primary_icd10_code.startsWith(primary.category_code)\n              }\n            })\n\n            const list = mapData({\n              data: [\n                ..._utilizationLoa.map(i => ({ ...i, type: 'IBNR' })),\n                ...data.map(i => ({ ...i, status: 'Approved' }))\n              ]\n            })\n\n            setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n            setRows(list.slice(0, filteredRows.limit))\n            setAllList(list)\n\n            let ibnr = 0\n            let utilized = 0\n\n            _utilizationLoa.map(item => (ibnr += item.total_amount))\n            data.map(item => (utilized += item.grand_total))\n\n            setGraph(state => ({\n              ...state,\n              ibnr,\n              utilized\n            }))\n          })\n        })\n      }\n    } else {\n      dispatch(setLimitType('Member Not Found'))\n    }\n  }, [member, diagnosis])\n\n  React.useEffect(() => {\n    dispatch(resetLimitType())\n  }, [])\n\n  React.useEffect(() => {\n    // console.log(list)\n    const _data = itemFilter({ search: filteredRows.search, filter: filteredRows.filter, data: allList })\n\n    setFilteredRows(state => ({ ...state, count: _data.length, data: _data, page: 1 }))\n    setRows(_data.slice(0, filteredRows.limit))\n  }, [filteredRows.search, filteredRows.filter])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = args => {\n    const { event, field, type } = args\n    const search = event.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (type === 'all') setFilteredRows(state => ({ ...state, search }))\n        else setFilteredRows(state => ({ ...state, filter: { ...state.filter, [field]: search } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: filteredRows })\n    setFilteredRows(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const renderRows = ({ rows = [] }) => {\n    return rows.map((row, index) => (\n      <TableRow id={`utilization-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n        {headCells.map(headCell => {\n          switch (headCell.sortField) {\n            case 'claim_no':\n              return (\n                <TableCell key={`${index}-claim-no`} id={`utilization-claim_no-${index}`}>\n                  <div className={classes.cell}>\n                    <span>{row.claim_no}</span>\n                    <span className={classes.label}>SWIPE</span>\n                    <span>YES</span>\n                  </div>\n                </TableCell>\n              )\n\n            case 'diagnosis':\n              return (\n                <TableCell key={`${index}-diagnosis`} id={`utilization-diagnosis-${index}`}>\n                  {row.diagnosis.map((row, index) => (\n                    <div key={`icd-${index}`} className={classes.cell}>\n                      <span>{row.diagnosis}</span>\n                      <span className={classes.label}>ICD 10 CODE</span>\n                      <span>{row.icd10_code}</span>\n                    </div>\n                  ))}\n                </TableCell>\n              )\n\n            case 'procedures':\n              return (\n                <TableCell key={`${index}-procedures`} id={`utilization-procedures-${index}`}>\n                  <div className={classes.cell}>\n                    {row.procedures.map((row, index) => (\n                      <div key={`procedure-${index}`} className={classes.cell}>\n                        <span>{row.procedure_name}</span>\n                        <span className={classes.label}>CPT CODE</span>\n                        <span>{row.cpt_code}</span>\n                      </div>\n                    ))}\n                  </div>\n                </TableCell>\n              )\n\n            case 'provider':\n              return (\n                <TableCell key={`${index}-provider`} id={`utilization-partner_name-${index}`}>\n                  <div className={classes.cell}>\n                    <div className={classes.cell}>\n                      {row.provider.facility.map((row, index) => (\n                        <span key={`facility-${index}`}>{row}</span>\n                      ))}\n                      {row.provider.doctor.length !== 0 && <span className={classes.label}>MEDICAL DOCTOR</span>}\n                      {row.provider.doctor.map((row, index) => (\n                        <span key={`doctor-${index}`}>{`${row},`}</span>\n                      ))}\n                    </div>\n                  </div>\n                </TableCell>\n              )\n\n            case 'amount':\n              return (\n                <TableCell key={`${index}-amount`} align='right' id={`utilization-grand_total-${index}`}>\n                  <span>{CurrencyFormatter(row.amount)}</span>\n                </TableCell>\n              )\n\n            case 'session':\n              return (\n                <TableCell key={`${index}-session`} align='right' id={`utilization-session-${index}`}>\n                  <span>{row.session}</span>\n                </TableCell>\n              )\n\n            case 'date':\n              return (\n                <TableCell key={`${index}-date_admitted`} id={`utilization-date_admitted-${index}`}>\n                  <span>{row.date}</span>\n                </TableCell>\n              )\n\n            case 'type':\n              return (\n                <TableCell key={`${index}-type`} id={`utilization-type-${index}`}>\n                  <span>{row.type}</span>\n                </TableCell>\n              )\n\n            case 'status':\n              return (\n                <TableCell key={`${index}-status`} align='center' id={`utilization-status-${index}`}>\n                  <span>{row.status}</span>\n                </TableCell>\n              )\n          }\n        })}\n\n        {hideActionColumn === false && (\n          <TableCell key={`${index}-icon`} align='center' id={`utilization-action-${index}`}>\n            <FontAwesomeIcon icon='file-alt' size='lg' className={classes.icon} />\n          </TableCell>\n        )}\n      </TableRow>\n    ))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.graph}>\n          <div className={classes['anual-benefit']}>\n            <Typography variant='button'>{title}</Typography>\n            <Typography id='utilization-graph-total' variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n          </div>\n\n          <div className={classes['line-graph']}>\n            <div className={classes.container}>\n              <div className={classes['line-container']}>\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.utilized / graph.total) * 100}%`, background: '#4fb083' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.ibnr / graph.total) * 100}%`, background: '#2a2b6e' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{\n                    width: `${\n                      ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                        ? 0\n                        : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                    }%`,\n                    background: '#f8b439'\n                  }}\n                />\n              </div>\n              <div className={classes['line-details']}>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#4fb083' }} />\n                    <Typography variant='button'>UTILIZED</Typography>\n                  </div>\n                  <Typography id='utilization-graph-utilized' variant='button' style={{ color: '#4fb083' }}>\n                    {`PHP ${CurrencyFormatter(graph.utilized)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#2a2b6e' }} />\n                    <Typography variant='button'>IBNR</Typography>\n                  </div>\n                  <Typography id='utilization-graph-ibnr' variant='button' style={{ color: '#2a2b6e' }}>\n                    {`PHP ${CurrencyFormatter(graph.ibnr)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#f8b439' }} />\n                    <Typography variant='button'>AVAILABLE</Typography>\n                  </div>\n                  <Typography id='utilization-graph-available' variant='button' style={{ color: '#f8b439' }}>\n                    {`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.search} style={{ display: hideSearchBar === true ? 'none' : 'block' }}>\n          <SearchTextComponent\n            id='search-utilization'\n            onChange={event => handleSearchChange({ event, field: 'all', type: 'all' })}\n            placeholder='Search'\n          />\n        </div>\n        <div style={{ display: hideSearchBar === false ? 'none' : 'block' }}>\n          {/* TODO: replace with filler */}\n          <br />\n          <br />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  {headCell.name}\n                  {headCell.search && (\n                    <TextField\n                      id={`utilization-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event => handleSearchChange({ event, field: headCell.sortField, type: 'column' })}\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              {hideActionColumn === false && <TableCell align='center' />}\n            </TableRow>\n          }\n          body={renderRows({ rows: rows })}\n          pagination\n          count={filteredRows.count}\n          page={filteredRows.page}\n          limit={filteredRows.limit}\n          rowsPerPageOptions={filteredRows.rowsPerPageOptions}\n          onChange={args => handleOnPaginate(args)}\n        />\n      </div>\n    </div>\n  )\n}\n","export const itemFilter = args => {\n  const { search, filter, data = [] } = args\n  let _data = data\n\n  if (search) {\n    const _search = search.toLowerCase()\n    _data = _data.filter(i => {\n      return i.claim_no.toLowerCase().includes(_search) ||\n        i.diagnosis.some(i => i.diagnosis.toLowerCase().includes(_search) || i.icd10_code.toLowerCase().includes(_search)) ||\n        i.procedures.some(i => i.procedure_name.toLowerCase().includes(_search) || i.cpt_code.toLowerCase().includes(_search)) ||\n        i.provider.doctor.some(i => i.toLowerCase().includes(_search)) ||\n        i.provider.facility.some(i => i.toLowerCase().includes(_search)) ||\n        i.amount.toString().toLowerCase().includes(_search) ||\n        i.session.toString().toLowerCase().includes(_search) ||\n        i.date.toLowerCase().includes(_search) ||\n        i.type.toLowerCase().includes(_search) ||\n        i.status.toLowerCase().includes(_search)\n    })\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const _fields = Object.keys(filter)\n\n    for (const f of _fields) {\n      let value = filter[f].toLowerCase()\n      if (value && f === 'diagnosis') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.diagnosis.toLowerCase().includes(value) || i.icd10_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'procedures') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.procedure_name.toLowerCase().includes(value) || i.cpt_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'provider') {\n        _data = _data.filter(i => {\n          return i[f].doctor.some(i => i.toLowerCase().includes(value)) || i[f].facility.some(i => i.toLowerCase().includes(value))\n        })\n      } else if (value) {\n        _data = _data.filter(i => {\n          return i[f].toString().toLowerCase().includes(value)\n        })\n      }\n    }\n  }\n  return _data\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ca')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // static getDropdown (params) {\n  //   return axios({\n  //     url: '/lookups/dropdown',\n  //     method: 'GET',\n  //     params,\n  //     headers: { [ExcludeErrorConstants['all']]: 1 }\n  //   })\n  // }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getICDSynonyms (params) {\n    return axios({\n      url: `/lookups/icd-10-synonym`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/c/cr')\n\nexport default class ClaimsReconServices extends ClaimsAdjudicationServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getClientUtilization ({ client_account_no }) {\n    return axios({\n      url: `/claims/client/${client_account_no}/utilizations`,\n      method: 'GET'\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static removeClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/destroy`,\n      method: 'DELETE',\n      data: { claim_number }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getTemplates () {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'GET'\n    })\n  }\n\n  static getTemplate ({ template_name }) {\n    return axios({\n      url: `/data-map/templates/${template_name}`,\n      method: 'GET'\n    })\n  }\n\n  static storeTemplate ({ template_name, data }) {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'POST',\n      params: { template_name },\n      data\n    })\n  }\n\n  static getFacilityTemplate ({ facility_id }) {\n    return axios({\n      url: `/data-map/templates/${facility_id}`,\n      method: 'GET'\n    })\n  }\n\n  static storeFacilityTemplate ({ facility_id, data }) {\n    return axios({\n      url: `/data-map/facilities`,\n      method: 'POST',\n      params: { facility_id },\n      data\n    })\n  }\n}\n","/**\n * Graph Color Theme\n */\nconst theme = {\n  InPatient: '#EDEDED',\n  OutPatientProcedure: '#DEDEDE',\n  OutPatientConsultation: '#9EA3AC',\n  Reimbursement: '#0D5E40',\n  Emergency: '#FAB435',\n  Dental: '#8034AD',\n  MedicineAllowance: '#1AB1C4',\n  APE: '#3AB77D',\n  ECU: '#FD5451',\n  Pharmacy: '#62FFB7',\n  PPE: '#1E2071',\n  MedicalSupplies: '#E6A8E4',\n  ClinicManagement: '#66AFBE'\n}\nexport default theme\n","const mockData = [\n  { description: 'In Patient', type: 'InPatient' },\n  { description: 'Out Patient Procedure', type: 'OutPatientProcedure' },\n  { description: 'Out Patient Consultation', type: 'OutPatientConsultation' },\n  { description: 'Reimbursement', type: 'Reimbursement' },\n  { description: 'Emergency', type: 'Emergency' },\n  { description: 'Dental', type: 'Dental' },\n  { description: 'Medicine Allowance', type: 'MedicineAllowance' },\n  { description: 'APE', type: 'APE' },\n  { description: 'ECU', type: 'ECU' },\n  { description: 'Pharmacy', type: 'Pharmacy' },\n  { description: 'PPE', type: 'PPE' },\n  { description: 'Medical Supplies', type: 'MedicalSupplies' },\n  { description: 'Clinic Management', type: 'ClinicManagement' }\n]\n\nexport default mockData\n","const months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n\nexport default months\n","import React from 'react'\n\nimport moment from 'moment'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Select from '@material-ui/core/Select'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// import ClaimsUtilLedgerReport from '../ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\nimport Utilization from './../../ClaimsViewer/Components/Utilization/Utilization'\n\n// Services\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, LargeNumberFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './style/UtilizationReport.module.scss'\nimport theme from './style/theme'\n\n// Data\nimport legend from './data/legend'\n\n// Config\nimport months from './config/months'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst clientColumns = [\n  { label: 'Type', field: 'type', search: true, match: 'any' },\n  { label: 'Total Amount', field: 'total_amount', search: true, match: 'number' },\n  { label: 'Number of Cases', field: 'cases', search: true, match: 'number' },\n  { label: 'Availed By Principals', field: 'availed_by_principals', search: true, match: 'number' },\n  { label: 'Availed By Dependents', field: 'availed_by_dependents', search: true, match: 'number' }\n]\n\n// const memberDataColumns = [\n//   'loa_number',\n//   'approval_code',\n//   'claim_number',\n//   'diagnosis',\n//   'procedures.description',\n//   'facility_id'\n// ]\n\nconst memberDataColumns = ['claim_no', 'diagnosis', 'procedures', 'provider']\n\nexport default function UtilizationReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'type',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n  const [reportType, setReportType] = React.useState('client')\n\n  /**\n   * initial -> initialized on generate report\n   * actual -> data displayed on the graph\n   * initial is retained as reference for filtering\n   *  graph data to refrain from making api calls\n   */\n  const [graphData, setGraphData] = React.useState({\n    initial: [],\n    actual: []\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  const [limitType, setLimitType] = React.useState({ ABL: 'Annual Benefit Limit', MBL: 'Maximum Benefit Limit' })\n\n  const [graphFilter, setGraphFilter] = React.useState('all')\n  // const [refreshMemberReport, doRefreshMemberReport] = React.useState(0)\n  const [client, setClient] = React.useState({ name: '--', account_no: '', limit: { type: '', limit: 0 } })\n  const [member, setMember] = React.useState({})\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Report')\n    BreadcrumbsService.setSelectedItems(['utilizationReport'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchTable()\n    // Watch filter items\n\n    // [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page]\n  }, [reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  React.useEffect(() => {\n    /**\n     * Handle Graph Filtering\n     * Also Handles Initial Data\n     */\n    let newData\n    if (graphFilter === 'all') {\n      // Returns all data after being processed for percentage count\n      newData = graphData.initial.map(data => {\n        const newChild = data.claims.map(child => ({ ...child, percentage: getPercentage(child.total_amount) }))\n        return { ...data, claims: newChild }\n      })\n    } else {\n      // Returns selected data after being processed for percentage count\n      newData = graphData.initial.map(data => {\n        let childContainer = []\n        data.claims.map(child => {\n          if (child.claim_type === graphFilter) {\n            childContainer.push({ ...child, percentage: getPercentage(child.total_amount) })\n          }\n        })\n        return { ...data, claims: childContainer }\n      })\n    }\n\n    setGraphData(p => ({ ...p, actual: newData }))\n  }, [graphFilter, graphData.initial])\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        /**\n         * Disabled: Change to dynamic mapping\n         *  if ever needed to print cvs\n         */\n        // return columns.map(col => {\n        //   if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n        //   return formatData({ type: col.type, source: report, field: col.data })\n        // })\n      })\n\n      // const header = columns.map(c => c.label)\n      // LoadingService.loading(true)\n      // ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n      // LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: reports.range.from,\n      date_to: reports.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchReport = () => {\n    if (reportType === 'member') {\n      getMember(reports.search)\n      // doRefreshMemberReport(refreshMemberReport + 1)\n      return\n    }\n\n    if (reports.search === '') return\n    LoadingService.loading(true)\n    Promise.all([\n      ClaimsServices.utilizationClient({\n        search: reports.search,\n        range: reports.range,\n        filter: reports.filter,\n        sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n        page: reports.page,\n        limit: reports.limit,\n        type: graphFilter\n      }),\n      ClaimsReconServices.getClientUtilization({ client_account_no: reports.search }),\n      CustomerCareServices.getClientUtilizationLoa({ client_account_no: reports.search })\n    ])\n      .then(res => {\n        const [graphClientRes, clientUtilRes, clientUtilLoaRes] = res\n        const { data: graph } = graphClientRes.data\n        const { data: utilAmount } = clientUtilRes.data\n        const { data: loaAmount } = clientUtilLoaRes.data\n\n        // Total limit is just a placeholder, waiting for the endpoint // dirty fix\n        setGraph(state => ({\n          ...state,\n          total: graph.client.limit.limit,\n          utilized: utilAmount.total_utilization_amount || 0,\n          ibnr: loaAmount.total_ibnr_amount || 0\n        }))\n        setGraphData(p => ({ ...p, initial: graph.results }))\n        setClient(state => ({\n          ...state,\n          name: graph.client.name,\n          account_no: graph.client.account_number,\n          limit: graph.client.limit\n        }))\n        fetchTable()\n      })\n      .catch(err => console.error(`Error Fetching Data: ${err}`))\n  }\n\n  // Fetching table\n  const fetchTable = () => {\n    ClaimsServices.utilizationClientTable({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { results = [], page, count, limit } = res.data.data\n\n      setReports(state => ({ ...state, data: results, count, page, limit }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = event => {\n    // /*\n    //  * Debounce for searching through\n    //  * SearchTextComponent\n    //  */\n    const search = event.target.value\n    setReports(state => ({ ...state, search }))\n    // clearTimeout(debounce)\n    // setDebounce(\n    // setTimeout(() => {\n    //   }, 500)\n    // )\n  }\n\n  const handleReportType = args => {\n    setReportType(args.target.value)\n  }\n\n  const generateGraph = args => {\n    /**\n     * style={{ bottom: `${data.percentage === '100%' ? '80%' : data.percentage}` }}\n     * -Prevents tooltip/popover description to display above the chart\n     */\n    return (\n      <div className={classes['graph-container']}>\n        <div className={classes['bar-chart-wrapper']}>\n          {args.map((data, index) => (\n            <div className={classes['bar-chart']}>\n              <div\n                className={classes.graph}\n                style={{ height: `${data.percentage}`, background: theme[data.claim_type] }}\n              >\n                {''}\n              </div>\n              <div\n                className={classes.tooltip}\n                style={{ bottom: `${data.percentage === '100%' ? '80%' : data.percentage}` }}\n              >\n                {`${LargeNumberFormatter(data.total_amount / 1000).toString()}K`}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n  const getPercentage = (args = 0) => {\n    // Returns argument on percentage scale\n    const result = (args / 250000) * 100\n    // Set maximum percentage to 100%\n    return `${result > 100 ? 100 : result}%`\n  }\n\n  const handleGraphFilter = args => {\n    // Triggers the filter watch function\n    setGraphFilter(args)\n  }\n\n  const getMember = account_number => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: account_number }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: account_number })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setMemberFetchStatus(`${data.status}`)\n      })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Report Type:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <RadioGroup className={classes['radio-group']} value={reportType} onChange={handleReportType}>\n                <div className={classes['radio-container']}>\n                  <p>Corporate Client</p> <Radio color='primary' value='client' />\n                </div>\n                <div className={classes['radio-container']}>\n                  <p> Member </p> <Radio color='primary' value='member' />\n                </div>\n              </RadioGroup>\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              value={reports.search}\n              onChange={handleSearchChange}\n              placeholder={reportType == 'client' ? `Search for Client ID or Client Name` : `Search for Member ID`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.header}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='ledger-filter-date-from'\n                value={reports.range.from}\n                onChange={date => {\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }}\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='ledger-filter-date-to'\n                value={reports.range.to}\n                onChange={date => {\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }}\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                fetchReport()\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Generate\n            </Button>\n          </div>\n        </div>\n      </div>\n      <hr />\n      {reportType && reportType === 'client' && (\n        // TODO\n        /**\n         * Header-report:\n         * -Waiting for data\n         */\n        <div className={classes.body}>\n          <Typography variant='h6'>{client.name}</Typography>\n          <div className={classes['header-report']}>\n            <div className={classes['report-primary']}>\n              <div className={classes.title}>{client.limit.type ? limitType[client.limit.type] : ''}</div>\n              <Typography variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n            </div>\n            <div className={classes['report-details']}>\n              {graph.total ? (\n                <div className={classes.graph}>\n                  <div\n                    className={classes.item}\n                    style={{ background: '#00a896', width: `${(graph.utilized / graph.total) * 100}%` }}\n                  >\n                    {''}\n                  </div>\n                  <div\n                    className={classes.item}\n                    style={{ background: '#606c38', width: `${(graph.ibnr / graph.total) * 100}%` }}\n                  >\n                    {''}\n                  </div>\n                  <div\n                    className={classes.item}\n                    style={{\n                      background: '#e63946',\n                      width: `${\n                        ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                          ? 0\n                          : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                      }%`\n                    }}\n                  >\n                    {''}\n                  </div>\n                </div>\n              ) : null}\n              <div className={classes.legend}>\n                <div className={classes.item}>\n                  <div className={classes['header-data']}>\n                    <div className={classes.mark} style={{ background: '#00a896' }}>\n                      {''}\n                    </div>\n                    <div className={classes.text} style={{ color: '#00a896' }}>\n                      utilized\n                    </div>\n                  </div>\n                  <div className={classes.details}>{`PHP ${CurrencyFormatter(graph.utilized)}`}</div>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes['header-data']}>\n                    <div className={classes.mark} style={{ background: '#606c38' }}>\n                      {''}\n                    </div>\n                    <div className={classes.text} style={{ color: '#606c38' }}>\n                      ibnr\n                    </div>\n                  </div>\n                  <div className={classes.details}>{`PHP ${CurrencyFormatter(graph.ibnr)}`}</div>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes['header-data']}>\n                    <div className={classes.mark} style={{ background: '#e63946' }}>\n                      {''}\n                    </div>\n                    <div className={classes.text} style={{ color: 'e63946' }}>\n                      available\n                    </div>\n                  </div>\n                  <div className={classes.details}>{`PHP ${CurrencyFormatter(\n                    graph.total - graph.ibnr - graph.utilized\n                  )}`}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <Typography variant='h6'>Utilization Summary</Typography>\n          <div className={classes.filter} style={{ textAlign: 'right' }}>\n            <span>\n              <FormControl>\n                <Select\n                  className={classes['select']}\n                  value={graphFilter}\n                  onChange={e => handleGraphFilter(e.target.value)}\n                >\n                  <MenuItem value={'all'}>\n                    <Typography className={classes.input}>All Types</Typography>\n                  </MenuItem>\n                  {legend.map(data => (\n                    <MenuItem value={data.type}>\n                      <Typography className={classes.input}>{data.description}</Typography>\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </span>\n          </div>\n          <div className={classes['graph-legend']}>\n            <div className={classes['legend-wrapper']}>\n              {legend.map(data => (\n                <div className={classes['legend-group']}>\n                  <div className={classes['legend']} style={{ background: theme[data.type] }}>\n                    {''}\n                  </div>\n                  <div className={classes['description']}>{data.description}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className={classes['graph-reports']}>\n            <div className={classes['graph-plot']}>\n              <div className={classes['plot-items']}>250k</div>\n              <div className={classes['plot-items']}>150k</div>\n              <div className={classes['plot-items']}>100k</div>\n              <div className={classes['plot-items']}>50k</div>\n              <div className={classes['plot-items']}>0</div>\n            </div>\n            {graphData.actual.map(data => (\n              <div className={classes['graph-group']}>\n                {generateGraph(data.claims)}\n                <div className={classes['graph-category']}>\n                  {months[data.month]} {graphData.actual && graphData.actual.length >= 12 ? data.year : ''}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{\n                style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n              }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {clientColumns.map((headCell, index) => (\n                    <TableCell key={`table-header-${index}`}>\n                      <TableSortLabel\n                        active={reports.orderBy === headCell.field}\n                        direction={reports.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.field, order: !reports.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                      {headCell.search && (\n                        <div className={classes.input}>\n                          {headCell.type && headCell.type === 'date' ? (\n                            <DatePicker\n                              noMargin\n                              id={`${headCell.field}`}\n                              onChange={date =>\n                                handleOnFilter({\n                                  field: headCell.field,\n                                  value: date.toISOString(),\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          ) : (\n                            <TextField\n                              noMargin\n                              onChange={event =>\n                                handleOnFilter({\n                                  field: headCell.field,\n                                  value: event.target.value,\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          )}\n                        </div>\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              }\n              body={\n                reports.data &&\n                reports.data.map((claim, index) => (\n                  <TableRow key={index}>\n                    <TableCell>{claim.type}</TableCell>\n                    <TableCell>{claim.total_amount.toFixed(2)}</TableCell>\n                    <TableCell>{claim.cases}</TableCell>\n                    <TableCell>{claim.availed_by_principals}</TableCell>\n                    <TableCell>{claim.availed_by_dependents}</TableCell>\n                  </TableRow>\n                ))\n              }\n              pagination\n              count={reports.count}\n              page={reports.page}\n              limit={reports.limit}\n              rowsPerPageOptions={reports.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* <ClaimsUtilLedgerReport\n        refresh={refreshMemberReport}\n        dateRange={{ from: reports.range.from, to: reports.range.to }}\n        dataColumns={memberDataColumns}\n        hideReport={reportType === 'client' ? 'true' : ''}\n        hideHeader='true'\n      /> */}\n\n      {reportType && reportType === 'member' && (\n        <div>\n          <div className={classes.header}>\n            <Typography variant='h6'>\n              {SafeAccess(member, ['info', 'first_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'middle_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'last_name'], '')}\n            </Typography>\n            <Typography variant='h6'>{SafeAccess(member, ['info', 'brand_name'], '')}</Typography>\n          </div>\n\n          <div className={classes.content}>\n            <table className={classes.memberinfo}>\n              <tbody>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'member_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>Birthdate (Age)</td>\n                  <td className={classes.memberInfoValue}>\n                    {member &&\n                      member.info &&\n                      moment(SafeAccess(member, ['info', 'date_of_birth'], '')).format('MMMM DD, YYYY') +\n                        ' (' +\n                        moment().diff(SafeAccess(member, ['info', 'date_of_birth'], ''), 'years', false) +\n                        ')'}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Gender</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'gender'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Plant Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'limit_unit'], '') +\n                      ' ' +\n                      SafeAccess(member, ['benefit_limits', 1, 'limit'], '')}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Civil Status</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'civil_status'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>R&amp;B</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'limit_unit'], '') +\n                      ' ' +\n                      SafeAccess(member, ['benefit_limits', 0, 'limit'], '')}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Effectivity Date</td>\n                  <td className={classes.memberInfoValue}>\n                    {moment(SafeAccess(member, ['info', 'effectivity_date'], '')).format('MMMM DD, YYYY')}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          {/* TODO: replace with filler */}\n          <br />\n\n          <Utilization\n            fetchService={ClaimsAdjudicationServices.getUtilizations}\n            utilizationLoa={utilizationLoa}\n            // isMember={isMember}\n            member={member}\n            // client={client}\n            diagnosis={[]}\n            dataColumns={memberDataColumns}\n            hideSearchBar\n            hideActionColumn\n          />\n        </div>\n      )}\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\n// Styles\nimport classes from './LoadingHimsData.module.scss'\n\nconst columns = [\n  { label: `Member's Account No.`, field: 'member_account_number', match: 'start' },\n  { label: `Member's Plan Contract`, field: 'contract', match: 'exact' },\n  { label: 'Claim No.', field: 'claim_number', search: true, match: 'start' },\n  { label: 'Date of Availment', type: 'date', field: 'availment_date', match: 'date' },\n  { label: 'Approved Date', type: 'date', field: 'approved_date', match: 'date' },\n  { label: 'Approved by', field: 'approved_by', match: 'any' },\n  { label: 'Posted Date', type: 'date', field: 'posted_date', match: 'date' },\n  { label: 'Posted by', field: 'posted_by', match: 'any' },\n  { label: 'TPA', field: 'TPA', match: 'any' },\n  { label: 'SOA Number', field: 'soa_number', match: 'start' },\n  { label: 'Office Branch', field: 'office_branch', match: 'any' },\n  { label: 'Reimbursement', field: 'reimbursement', match: 'exact' },\n  { label: 'Type of Availment', field: 'availment_type', match: 'any' },\n  { label: 'Amount of Availment', type: 'currency', field: 'availment_amount', match: 'number' },\n  { label: 'Date Admitted', type: 'date', field: 'date_admitted', match: 'date' },\n  { label: 'Date Discharge', type: 'date', field: 'date_discharged', match: 'date' },\n  { label: 'Hospital/Clinic Code', field: 'facility_code', match: 'any' },\n  { label: 'Procedure/s', field: 'procedures', match: 'any' },\n  { label: 'Diagnosis', field: 'diagnosis', match: 'any' },\n  { label: 'In House', field: 'in_house', match: 'any' },\n  { label: 'Payment Due Date', type: 'date', field: 'payment_due_date', match: 'date' },\n  { label: 'Breakdown Amount', type: 'currency', field: 'breakdown_amount', match: 'number' },\n  { label: 'Breakdown AR Amount', type: 'currency', field: 'breakdown_ar_amount', match: 'number' },\n  { label: 'AR Addresee', field: 'ar_addresee', match: 'any' },\n  { label: `Member's Name`, field: 'member_name', match: 'any' },\n  { label: 'Payee Code', field: 'payee_code', match: 'any' },\n  { label: 'Payee Name', field: 'payee_name', match: 'any' },\n  { label: 'Disease Code', field: 'disease_code', match: 'any' },\n  { label: 'Disease Name', field: 'disease_name', match: 'any' },\n  { label: 'Layer', field: 'layer', match: 'any' },\n  { label: 'Remarks', field: 'remarks', match: 'any' },\n  { label: 'AR Reason', field: 'ar_reason', match: 'any' },\n  { label: 'Code of AR Reason', field: 'ar_reason_code', match: 'any' },\n  { label: 'Type of Service', field: 'type_of_service', match: 'any' },\n  { label: 'Hospital Services Details', field: 'hospital_service_details', match: 'any' },\n  { label: 'Hospital Services Amount', type: 'currency', field: 'hospital_service_amount', match: 'number' },\n  { label: 'Hospital Services AR Amount', type: 'currency', field: 'hospital_service_ar_amount', match: 'number' }\n]\n\nexport default function LoadingHimsData (props) {\n  const [claims, setClaims] = React.useState({\n    raw: [],\n    data: [],\n    filter: {},\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'member_account_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Template for Loading HIMS Data')\n    BreadcrumbsService.setSelectedItems(['loadingHimsData'])\n  }, [])\n\n  const fetchHIMSData = params => {\n    LoadingService.loading(true)\n    ClaimsServices.loadingHIMSData({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page } = res.data.data\n      console.log(res)\n      setClaims(state => ({ ...state, data: results, raw, count, page, limit }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchHIMSData(_params)\n  }\n\n  const handleOnColumnFilter = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    fetchHIMSData(_params)\n  }\n\n  const handleGenerateReport = () => {\n    LoadingService.loading(true)\n    ClaimsServices.loadingHIMSData({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { results } = res.data.data\n\n      const claims = results.map(i => ({\n        ...i,\n        availment_date: DateFormatter(i.availment_date),\n        approved_date: DateFormatter(i.approved_date),\n        posted_date: DateFormatter(i.posted_date),\n        date_admitted: DateFormatter(i.date_admitted),\n        date_discharged: DateFormatter(i.date_discharged),\n        payment_due_date: DateFormatter(i.payment_due_date)\n      }))\n\n      const header = columns.map(c => c.label)\n      const rows = claims.map(claim =>\n        columns.map(col => formatData({ type: col.type, source: claim, field: col.field }))\n      )\n\n      ArrayToCSV({ fileName: 'Loading HIMS Data Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                fetchHIMSData(claims)\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    <TableSortLabel\n                      active={claims.orderBy === headCell.field}\n                      direction={claims.order ? 'asc' : 'desc'}\n                      onClick={event => handleOnPaginate({ orderBy: headCell.field, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    <div className={classes.input}>\n                      <TextField\n                        noMargin\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnColumnFilter({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.field]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                              setClaims(state => ({\n                                ...state,\n                                filter: { ...state.filter, [headCell.field]: { value: search, match: headCell.match } }\n                              }))\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.field })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ConfinementReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No.', data: 'no', search: false },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, match: 'any' },\n  { label: 'Medical Partner Name', data: 'facility_name', search: true, match: 'any' },\n  { label: 'ICD10 Diagnosis', type: 'array', data: 'diagnosis.diagnosis_description', search: true, match: 'any' },\n  { label: 'Date of Service', type: 'date', data: 'date_from', search: true, match: 'date' },\n  { label: 'Member Account No.', data: 'member_account_number', search: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ConfinementReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('List of Emergencies Leading to Confinement')\n    BreadcrumbsService.setSelectedItems(['confinementReport'])\n  }, [])\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.confinementReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _claims = results.map(claim => ({\n        ...claim\n      }))\n      setClaims(state => ({ ...state, data: _claims, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.confinementReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _claims = results.map(claim => ({\n        ...claim\n      }))\n\n      const rows = _claims.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n      // console.log(rows)\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'List of Emergencies Leading to Confinement',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          []\n        ],\n        fileName: 'List of Emergencies Leading to Confinement Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchRecords()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","export default {\n  // rows\n  header: [\n    { id_row: { label_left: 'Medical Partner ID:', label_right: 'Total PR Amount:' } },\n    { name_row: { label_left: 'Medical Partner Name:', label_right: 'Discount Amount:' } },\n    { bundle_row: { label_left: 'Bundle/SOA Number:', label_right: 'Due Date:' } },\n    { date_row: {label_left: 'Bundle/SOA Date:'} }\n  ],\n  footer: ['Total']\n}\n","import React from 'react'\n\n// Material Component\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Footer.module.scss'\n\nexport default function ClaimsUtilLedgerReport (props) {\n  const { total = {}, bundles = [], page } = props\n\n  // TODO For refactoring :(( )\n  return (\n    <div className={classes.footer}>\n      <hr />\n      {bundles.length > 0 && (\n        <div className={classes.bundle}>\n          <p><span><b>Bundle Number: </b></span>{`${bundles[page - 1]}`}</p>\n        </div>\n      ) }\n\n      <div className={classes.total}>\n        <div className={classes['total-row']}>\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL APPROVED: ${CurrencyFormatter(total.total_approved_amount)}`}</p>\n          </div>\n\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL TAX: ${CurrencyFormatter(total.total_tax_amount)}`}</p>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { staticHeaderFooter } from './helper/staticHeaderFooter'\n\n// Components\nimport Footer from './Footer/Footer'\n\n// Validator\nimport DateRangeValidator from './../TransmittalReport/validator/DateRangeValidator'\n\n// Styles\nimport classes from './PaymentRequestReport.module.scss'\n\nconst columns = [\n  { label: 'No.', sortField: 'number', sort: false, search: false, align: 'left' },\n  { label: 'RCS/LOA No.', sortField: 'loa_number', sort: true, search: true, align: 'left', match: 'start' },\n  {\n    label: 'Member Account No.',\n    sortField: 'member_account_number',\n    sort: true,\n    search: true,\n    align: 'left',\n    match: 'any'\n  },\n  { label: 'Member Name', sortField: 'member_name', sort: true, search: true, align: 'left', match: 'any' },\n  { label: 'Approved Amount', sortField: 'approved_amount', sort: false, search: false, align: 'right' },\n  { label: 'Tax Amount', sortField: 'tax_amount', sort: false, search: false, align: 'right' }\n]\n\nconst initialDetails = {\n  total_pr_amount: 0,\n  discount_amount: 0,\n  due_date: '',\n  total_approved_amount: 0,\n  total_tax_amount: 0\n}\n\nexport default function PaymentRequestReport (props) {\n  // added\n  const [searchValue, setSearchValue] = React.useState({\n    medical_partner_id: '',\n    medical_partner_name: '',\n    bundle: ''\n  })\n\n  const [claims, setClaims] = React.useState({\n    bundles: [],\n    raw: [],\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'loa_number',\n    order: true,\n    page: 1,\n    limit: 1,\n    count: 0,\n    filter: {},\n    rowsPerPageOptions: [0],\n    // on filter_value\n    search: {\n      medical_partner_id: '',\n      medical_partner_name: '',\n      bundle: ''\n    }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n\n  const [details, setDetails] = React.useState(initialDetails)\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    bundle: {\n      id: [],\n      data: []\n    }\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Payment Request Report')\n    BreadcrumbsService.setSelectedItems(['paymentRequestReport'])\n  }, [])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    bundle: null,\n    column: null\n  })\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, search: { ...state.search, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.medicalPartner.data) {\n        if (value === i.id || value === i.name) {\n          setClaims(state => ({\n            ...state,\n            search: { ...state.search, medical_partner_id: i.id, medical_partner_name: i.name }\n          }))\n\n          setSuggestions(state => ({\n            ...state,\n            medicalPartner: {\n              id: [],\n              name: [],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestions(state => ({\n        ...state,\n        medicalPartner: {\n          id: [],\n          name: [],\n          data: []\n        }\n      }))\n      const { 2: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Bundle/SOA*\n  const handleOnChangeBundleSoa = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, search: { ...state.search, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.bundle.data) {\n        if (value === i.bundle_number || value === i.soa) {\n          setClaims(state => ({\n            ...state,\n            search: {\n              ...state.search,\n              bundle: value\n            }\n          }))\n          setSuggestions(state => ({\n            ...state,\n            bundle: {\n              id: [],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestions(state => ({\n        ...state,\n        bundle: {\n          id: [],\n          data: []\n        }\n      }))\n      getBundleSoaSuggestions({ value })\n    }\n  }\n\n  const getBundleSoaSuggestions = ({ value = '' }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.bundle)\n    setDebounce(state => ({\n      ...state,\n      bundle: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'bundle-soa',\n            params: { query: value }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n\n            // TODO Clarify if its OR (Bundle/SOA)\n            // store soa_number first\n            data.forEach(d => {\n              if (d.soa) _items.push(d.soa)\n              _items.push(d.bundle_number)\n            })\n\n            setSuggestions(state => ({\n              ...state,\n              bundle: { ...state.bundle, id: _items.filter(i => i.startsWith(value)), data }\n            }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnFilter = params => {\n    // added\n    setSearchValue(state => ({ ...state, ...params.search }))\n    const _claims = { ...claims, ...params.search }\n\n    if (claims.search.medical_partner_id.trim().length < 3 || claims.search.medical_partner_name.trim().length < 3) {\n      LoadingService.loading(false)\n      setFetching(false)\n      return setClaims(state => ({ ...state, data: [] }))\n    }\n    LoadingService.loading(true)\n\n    // prev 'claims'\n    ClaimsServices.paymentRequestReport({\n      range: _claims.range,\n      sort: `${_claims.orderBy}|${_claims.order ? 'asc' : 'desc'}`,\n      page: _claims.page,\n      limit: _claims.limit,\n      filter: _claims.filter,\n      searchValue: _claims.search\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page } = res.data.data\n      setClaims(state => ({ ...state, bundles: results, raw, count, page, limit }))\n\n      setFetching(true)\n\n      const bundle_number = results[_claims.page - 1]\n      if (bundle_number) {\n        ClaimsServices.paymentRequestClaims(\n          { sort: `${_claims.orderBy}|${_claims.order ? 'asc' : 'desc'}`, searchValue: _claims.search },\n          bundle_number\n        ).then(res => {\n          const { results = [], details = {} } = res.data.data\n\n          // details.due_date = DateFormatter(details.due_date)\n\n          setClaims(state => ({ ...state, data: results }))\n          setDetails(state => ({ ...state, ...details }))\n          setFetching(false)\n          LoadingService.loading(false)\n        })\n      } else {\n        setClaims(state => ({ ...state, data: [] }))\n        setDetails(state => ({ ...state, ...initialDetails }))\n        setFetching(false)\n        LoadingService.loading(false)\n      }\n    })\n  }\n\n  const handlePagination = params => {\n    const bundle_number = params.bundles[params.page - 1]\n\n    ClaimsServices.paymentRequestClaims(\n      {\n        sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n        filter: params.filter,\n        // added\n        searchValue: searchValue\n      },\n      bundle_number\n    ).then(res => {\n      const { results = [], details = {} } = res.data.data\n\n      // details.due_date = DateFormatter(details.due_date)\n\n      setClaims(state => ({ ...state, data: results }))\n      setDetails(state => ({ ...state, ...details }))\n      setFetching(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const handleColumnFiltering = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n    // setFetching(true)\n    setClaims(state => ({ ...state, ...params }))\n    handlePagination(_params)\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n    setFetching(true)\n    setClaims(state => ({ ...state, ...params }))\n    handlePagination(_params)\n  }\n\n  const handleGenerateReport = () => {\n    if (!claims.raw.length) return\n\n    const header = columns.map(i => i.label)\n\n    const data = staticHeaderFooter({ ...claims.range, raw: claims.raw, ...claims.search, columns: header })\n\n    ArrayToCSV({ fileName: `${claims.search.medical_partner_name} Payment Request Report`, data })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes['search-header']}>\n          {/* row-1 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Medical Partner ID:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by medical partner id'\n                  id='medical-partner-id'\n                  value={claims.search.medical_partner_id}\n                  suggestions={suggestions.medicalPartner.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'medical_partner_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Total PR Amount: ${CurrencyFormatter(details.total_pr_amount)}`}</Typography>\n            </div>\n          </div>\n          {/* row-2 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Medical Partner Name:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by medical partner name'\n                  id='medical-partner-name'\n                  value={claims.search.medical_partner_name}\n                  suggestions={suggestions.medicalPartner.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'medical_partner_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Discount Amount: ${CurrencyFormatter(details.discount_amount)}`}</Typography>\n            </div>\n          </div>\n          {/* row-3 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Bundle/SOA Number:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by bundle/soa number'\n                  id='account-number'\n                  value={claims.search.bundle}\n                  suggestions={suggestions.bundle.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeBundleSoa({\n                      field: 'bundle',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Due Date: ${\n                details.due_date ? DateFormatter(details.due_date) : ''\n              }`}</Typography>\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                // handleOnFilter({ ...claims, page: 1 })\n                handleOnFilter({ range: claims.range, search: claims.search })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          // onClick={event => {}}\n                          onClick={event =>\n                            handleColumnFiltering({ orderBy: headCell.sortField, order: !claims.order })\n                          }\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <TextField\n                      id={`text-field-${headCell.sortField}`}\n                      readOnly={!headCell.search}\n                      TextFieldStyle={{ margin: 0 }}\n                      fullWidth\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce.column)\n                        setDebounce(state => ({\n                          ...state,\n                          column: setTimeout(() => {\n                            handleColumnFiltering({\n                              filter: {\n                                ...claims.filter,\n                                [headCell.sortField]: { value: search, match: headCell.match }\n                              }\n                            })\n                            // setClaims(state => ({\n                            //   ...state,\n                            //   filter: { ...state.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                          }, 500)\n                        }))\n                      }}\n                    />\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              fetching ? (\n                <TableRow className={classes['table-row']}>\n                  <TableCell align='center' colSpan={6}>\n                    <CircularProgress size={30} />\n                  </TableCell>\n                </TableRow>\n              ) : claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell align='left'>{item.loa_number || 'N/A'}</TableCell>\n                    <TableCell align='left'>{item.member_account_number || 'N/A'}</TableCell>\n                    <TableCell align='left'>{`${item.member_name || 'N/A'}`}</TableCell>\n                    <TableCell align='right'>\n                      {CurrencyFormatter(!item.approved_amount <= 0 ? item.approved_amount : 0)}\n                    </TableCell>\n                    <TableCell align='right'>\n                      {CurrencyFormatter(!item.tax_amount <= 0 ? item.tax_amount : 0)}\n                    </TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n          <Footer\n            total={{ total_approved_amount: details.total_approved_amount, total_tax_amount: details.total_tax_amount }}\n            bundles={claims.bundles}\n            page={claims.page}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import constants from './constants'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// TODO Need refactor\n// UGLY CSV Generation\nexport const staticHeaderFooter = args => {\n  const { columns = [], to, from, raw = [], medical_partner_id, medical_partner_name } = args\n  columns.push('\\r\\n')\n  const data = []\n\n  for (const item of raw) {\n    const total_approved_amount = item.details.reduce((a, c) => a + c.approved_amount, 0)\n    const total_tax_amount = item.details.reduce((a, c) => a + c.tax_amount, 0)\n\n    // HEADER\n    const static_header = constants.header.map(i => {\n      switch (true) {\n        case i.hasOwnProperty('id_row'):\n\n          return [i.id_row.label_left, medical_partner_id, '', '', i.id_row.label_right, total_approved_amount, '\\r\\n']\n        case i.hasOwnProperty('name_row'):\n          // hardcoded discount value\n          return [i.name_row.label_left, medical_partner_name, '', '', i.name_row.label_right, 0, '\\r\\n']\n        case i.hasOwnProperty('bundle_row'):\n          return [i.bundle_row.label_left, item._id, '', '', i.bundle_row.label_right, DateFormatter(item.due_date), '\\r\\n']\n        case i.hasOwnProperty('date_row'):\n          return [i.date_row.label_left, `${DateFormatter(from)} - ${DateFormatter(to)}`, '\\r\\n']\n      }\n    })\n\n    // COLUMN HEADER\n    const _columns = columns.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(','), '').slice(1)\n\n    // BODY\n    const claims = item.details.map((i, index) => ({ no: index + 1, ...i }))\n    const rows = []\n    claims.forEach(item => {\n      delete item.bundle_number\n      rows.push(Object.values(item))\n    })\n    const body = rows.map(row =>\n      [\n        row.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(','), '').slice(1),\n        '\\r\\n'\n      ].join('')\n    )\n\n    // FOOTER\n    const static_footer = constants.footer.map(i => {\n      switch (i) {\n        case 'Total':\n          return ['', '', '', i, total_approved_amount, total_tax_amount, '\\r\\n']\n      }\n    })\n    const _data = [].concat(static_header, '\\r\\n', _columns, '\\r\\n', body, '\\r\\n', static_footer, '\\r\\n', '\\r\\n', '\\r\\n')\n\n    data.push(..._data)\n  }\n\n  return data\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\n// import moment from 'moment'\n\n// Styles\nimport classes from './ReimbursementReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No.', data: 'no', search: false },\n  { label: 'Claim Number', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Reimbursement Claim Amount', type: 'number', data: 'grand_total', search: false },\n  { label: 'Reimbursement Category', data: 'reimbursement_category', search: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', type: 'sentence', search: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ReimbursementReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'latest.date.from'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20],\n    grandTotal: 0\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Reimbursement Claims Report')\n    BreadcrumbsService.setSelectedItems(['reimbursementReport'])\n  }, [])\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursementClaimReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0, grand_total = 0 } = data\n      setClaims(state => ({ ...state, data: results, count, grandTotal: grand_total }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursementClaimReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Reimbursement Claims Report',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Total Amount: ${grand_total}`]\n        ],\n        fileName: 'Reimbursement Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchRecords()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'sentence') {\n      output = source[field]\n        .toLowerCase()\n        .split('_')\n        .map(word => word.charAt(0).toUpperCase() + word.substring(1))\n        .join(' ')\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' disabled={claims.data.length <= 0} onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    <div className={`${classes.input} ${!headCell.search ? classes.hidden : ''}`}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date =>\n                            handleOnFilter({\n                              field: headCell.data,\n                              value: date.toISOString(),\n                              match: headCell.match\n                            })\n                          }\n                        />\n                      ) : (\n                        <TextField\n                          noMargin\n                          onChange={event =>\n                            handleOnFilter({\n                              field: headCell.data,\n                              value: event.target.value,\n                              match: headCell.match\n                            })\n                          }\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <Typography variant='caption' className='bold'>\n                <span>Total Amount: </span>\n                <span>{CurrencyFormatter(claims.grandTotal)}</span>\n              </Typography>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date Range From')\n    .required(),\n  date_to: Joi.date()\n    .label('Date Range To')\n    .required()\n    .min(Joi.ref('date_from'))\n    .max(Joi.ref('date_max'))\n    .messages({\n      'date.min': `\"Date Range To\" should be on or after \"Date Range From\"`,\n      'date.max': `\"Date Range To\" should be on the same year....s\"`\n    }),\n  date_max: Joi.date()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// MUI Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport PrintIcon from '@material-ui/icons/Print'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n// Custom Components\nimport Table from 'SharedComponents/Table/Table'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport classes from './ClaimsSummaryReport.module.scss'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\n\n// Validator\nimport DateRangeValidator from './validator/DateRangeValidator'\n\n// Utilities\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport moment from 'moment'\n\nconst columns = [\n  { label: 'Month', align: 'center', type: 'string', data: 'month' },\n  { label: 'Number of Claims Received', align: 'center', type: 'number', data: 'received' },\n  { label: 'Number of Claims Processed', align: 'center', type: 'number', data: 'processed' },\n  { label: 'Amount of Claims Processed', align: 'center', type: 'currency', data: 'total_amount' }\n]\nconst initialClaims = {\n  data: {\n    claims: [\n      { month: 'January', received: 0, processed: 0, total_amount: 0 },\n      { month: 'Febuary', received: 0, processed: 0, total_amount: 0 },\n      { month: 'March', received: 0, processed: 0, total_amount: 0 },\n      { month: 'April', received: 0, processed: 0, total_amount: 0 },\n      { month: 'May', received: 0, processed: 0, total_amount: 0 },\n      { month: 'June', received: 0, processed: 0, total_amount: 0 },\n      { month: 'July', received: 0, processed: 0, total_amount: 0 },\n      { month: 'August', received: 0, processed: 0, total_amount: 0 },\n      { month: 'September', received: 0, processed: 0, total_amount: 0 },\n      { month: 'October', received: 0, processed: 0, total_amount: 0 },\n      { month: 'November', received: 0, processed: 0, total_amount: 0 },\n      { month: 'December', received: 0, processed: 0, total_amount: 0 }\n    ],\n    total_received: 0,\n    total_processed: 0,\n    total_amount: 0\n  },\n  range: {\n    from: moment().format(),\n    to: moment().format()\n  },\n  filter: {\n    claim_type: 'ALL',\n    claim_source: 'ALL',\n    claim_sub_type: 'ALL',\n    contract_plan: 'ALL',\n    section: 'ALL',\n    claim_status: 'ALL',\n    user: 'ALL',\n    geography: 'ALL'\n  }\n}\nconst initialValue = {\n  claim_type: [],\n  claim_source: [],\n  claim_sub_type: [],\n  contract_plan: [],\n  section: [],\n  claim_status: [],\n  user: [],\n  geography: []\n}\n\n/**\n * Claims Summary Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ClaimsSummaryReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [suggestion, setSuggestion] = React.useState(initialValue)\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    claim_sub_type: null,\n    section: null,\n    user: null,\n    geopgraphy: null\n  })\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [claims, setClaims] = React.useState(initialClaims)\n\n  React.useEffect(() => {\n    PageTitleService('Claims Summary Report')\n    BreadcrumbsService.setSelectedItems(['claimsSummaryReport'])\n  }, [])\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsSummaryReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(({ data: res }) => {\n      const { data } = res\n      const { total_received = 0, total_processed = 0, total_amount } = data\n      const results = data.claims\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Claims Summary Report',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Contract Plan Type: ${claims.filter.contract_plan}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n'\n          ],\n          [`Grand Total: `, `${total_received}`, `${total_processed}`, `${total_amount}`].join(',')\n        ],\n        fileName: 'Claims Summary Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.map(d => d[field])] }))\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  const handleOnFilter = () => {\n    LoadingService.loading(true)\n    const params = {\n      filter: claims.filter,\n      range: claims.range\n    }\n    ClaimsServices.claimsSummaryReport(params).then(({ data: res }) => {\n      const { data } = res\n      setClaims({ ...claims, data: data })\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to,\n      date_max: `12-31-${moment(claims.range.from).year()}`\n    })\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Sub-Type/Category</Typography>\n              <AutoComplete\n                placeholder='Search by claim sub-type/category'\n                id='claim-sub-type'\n                value={claims.filter.claim_sub_type}\n                suggestions={suggestion.claim_sub_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-sub-type',\n                    field: 'sub_type'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, section: event }\n                  }))\n                }}\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, user: event }\n                  }))\n                }}\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.geography}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, geography: event }\n                  }))\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && handleOnFilter()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.claims.length ? (\n                claims.data.claims.map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell align='center'>{item.month}</TableCell>\n                    <TableCell align='center'>{item.received}</TableCell>\n                    <TableCell align='center'>{item.processed}</TableCell>\n                    <TableCell align='center'>{item.total_amount}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination={false}\n          />\n        </div>\n        <div className={classes.footer}>\n          <div className={classes.label}>\n            <Typography className='bold'>Grand Total:</Typography>\n          </div>\n          <div className={classes.received}>\n            <Typography className='bold'>{claims.data.total_received}</Typography>\n          </div>\n          <div className={classes.processed}>\n            <Typography className='bold'>{claims.data.total_processed}</Typography>\n          </div>\n          <div className={classes.total}>\n            <Typography className='bold'>{claims.data.total_amount}</Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ProductivityPerformaceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Time', data: 'time' },\n  { label: 'Number of Claims Received', type: 'number', data: 'received' },\n  { label: 'Number of Claims Processed', type: 'number', data: 'processed' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { claim_type: '', claim_source: '', claim_sub_type: '', section: '', user: '', region: '' },\n    receivedTotal: 0,\n    processedTotal: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    claim_type: [],\n    claim_source: [],\n    claim_sub_type: [],\n    section: [],\n    user: [],\n    region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    claim_sub_type: null,\n    section: null,\n    user: null,\n    region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Productivity and Performance Report')\n    BreadcrumbsService.setSelectedItems(['productivityPerformaceReport'])\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.productivityReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], received_total = 0, processed_total = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        receivedTotal: received_total,\n        processedTotal: processed_total\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.productivityReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], received_total = 0, processed_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Productivity and Performance Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Claim Sub-Type/Category: ${claims.filter.claim_sub_type}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n',\n            `Geogpraphy: ${claims.filter.region}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Grand Total`, `${received_total}`, `${processed_total}`].join(',')\n        ],\n        fileName: 'Productivity and Performance Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Sub-Type/Category</Typography>\n              <AutoComplete\n                placeholder='Search by claim sub-type/category'\n                id='claim-sub-type'\n                value={claims.filter.claim_sub_type}\n                suggestions={suggestion.claim_sub_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-sub-type',\n                    field: 'sub_type'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={suggestion.section}\n                onChange={\n                  (value, isSuggestionClick) => {}\n                  // handleOnChange({\n                  //   value,\n                  //   isSuggestionClick,\n                  //   category: 'claim-sub-type',\n                  //   field: 'sub_type'\n                  // })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={suggestion.user}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'user',\n                    field: 'first_name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.region}\n                suggestions={suggestion.region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'region',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n          />\n        </div>\n        <div className={classes.footer}>\n          <div className={classes.grand}>\n            <Typography variant='caption' className='bold'>\n              <span>Grand Total: </span>\n            </Typography>\n          </div>\n          <div className={classes.received}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.receivedTotal}</span>\n            </Typography>\n          </div>\n          <div className={classes.processed}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.processedTotal}</span>\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ReturnedClaimsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No.', sortField: 'no', search: false, sort: false, type: 'number' },\n  { label: 'Claim Number', sortField: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Claim Amount', sortField: 'claim_amount', search: false, sort: false, type: 'number' },\n  { label: 'Reason for Return', sortField: 'return_reason', search: true, sort: true, match: 'any' },\n  { label: 'Medical Partner ID', sortField: 'facility_id', search: true, sort: true, match: 'start' },\n  { label: 'Medical Partner Name', sortField: 'facility_name', search: true, sort: true, match: 'start' },\n  { label: 'Claim Type', sortField: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', sortField: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Geography', sortField: 'geography', search: true, sort: true, match: 'any' }\n]\n\nexport default function ReturnedClaimsReport (props) {\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'status_date'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    total_amount: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Returned Claims Report')\n    BreadcrumbsService.setSelectedItems(['returnedClaimsReport'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const fetchReport = params => {\n    LoadingService.loading(true)\n    ClaimsServices.returnedClaimsReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], total = [], count, limit, page } = res.data.data\n      const [_total] = total\n\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count,\n        page,\n        limit,\n        total_amount: total.length ? _total.total_amount : 0\n      }))\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchReport({ ...claims, ...range })\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchReport({ ..._params, range: dateRange })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = params => {\n    LoadingService.loading(true)\n    ClaimsServices.returnedClaimsReport({\n      range: dateRange,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { results } = res.data.data\n      const header = columns.map(i => i.label)\n\n      const rows = results.map(i => {\n        return columns.map(col => formatData({ type: col.type, source: i, field: col.sortField }))\n      })\n\n      // array.from or of\n      ArrayToCSV({\n        statics: [\n          [\n            'Returned Claims Report',\n            '\\r\\n',\n            '\\r\\n',\n            ['Date Range:', `${DateFormatter(dateRange.from)} - ${DateFormatter(dateRange.to)}`],\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', 'Total Amount:', `${claims.total_amount}`].join(',')\n        ],\n        fileName: 'Returned Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                handleOnClickFilter({ range: claims.range })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV(claims)} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <div className={classes.input}>\n                      <TextField\n                        noMargin\n                        id={`text-field-${headCell.sortField}`}\n                        readOnly={!headCell.search}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnPaginate({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.sortField]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell align='left'> {item.claim_number}</TableCell>\n                    <TableCell align='right'>{CurrencyFormatter(item.claim_amount)}</TableCell>\n                    <TableCell align='left'>{item.return_reason}</TableCell>\n                    <TableCell align='left'> {item.facility_id}</TableCell>\n                    <TableCell align='left'>{item.facility_name}</TableCell>\n                    <TableCell align='left'>{item.claim_type}</TableCell>\n                    <TableCell align='left'>{item.claim_source}</TableCell>\n                    <TableCell align='left'>{item.geography}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <Typography variant='caption' className='bold'>\n                <span>Total Amount: </span>\n                <span>{CurrencyFormatter(claims.total_amount)}</span>\n              </Typography>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './PerformanceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: '', data: 'type' },\n  { label: 'Total Number of Handled Claims', type: 'number', data: 'count' },\n  { label: 'Average Handling Time', type: 'number', data: 'average' },\n  { label: 'Number of Hours Worked', type: 'number', data: 'work' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { claim_type: '', claim_source: '', contract_plan_type: '', section: '', user: '' },\n    total: {}\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    claim_type: ['ALL'],\n    claim_source: ['ALL'],\n    contract_plan_type: ['ALL'],\n    section: ['ALL'],\n    user: ['ALL']\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    contract_plan_type: null,\n    section: null,\n    user: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.performanceReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total = {} } = data\n      setClaims(state => ({ ...state, data: results, total }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.performanceReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total = {} } = data\n\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Performance Summary Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Contract Plan Type: ${claims.filter.contract_plan_type}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n'\n          ],\n          [`Grand Amount: `, `${total.count}`, `${total.average}`, `${total.work}`].join(',')\n        ],\n        fileName: 'Performance Summary Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    PageTitleService('Performance Summary Report')\n    BreadcrumbsService.setSelectedItems(['performanceReport'])\n  }, [])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Contract Plan Type</Typography>\n              <AutoComplete\n                placeholder='Search by contract plan type'\n                id='contract-plan-type'\n                value={claims.filter.contract_plan_type}\n                suggestions={suggestion.contract_plan_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'contract-plan-type',\n                    field: 'code'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={suggestion.section}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'section',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={suggestion.user}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'user',\n                    field: 'first_name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n          />\n        </div>\n        <div className={classes.footer}>\n          <div className={classes.grand}>\n            <Typography variant='caption' className='bold'>\n              <span>Grand Total: </span>\n            </Typography>\n          </div>\n          <div className={classes.count}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.total.count}</span>\n            </Typography>\n          </div>\n          <div className={classes.average}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.total.average}</span>\n            </Typography>\n          </div>\n          <div className={classes.work}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.total.work}</span>\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './AgingPartialApprovedReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Month', data: 'month', align: 'left' },\n  {\n    label: 'Number of partially approved',\n    label2: 'claims within grace period',\n    type: 'number',\n    data: 'total15Days',\n    align: 'center'\n  },\n  {\n    label: 'Number of partially approved',\n    label2: 'claims beyond grace period',\n    type: 'number',\n    data: 'total1Week',\n    align: 'center'\n  },\n  {\n    label: 'Number of partially approved claims',\n    label2: '1 month (30 Days) beyond grace period',\n    type: 'number',\n    data: 'total1Month',\n    align: 'center'\n  },\n  {\n    label: 'Percentage of partially approved',\n    label2: 'claims beyond grace period (total)',\n    type: 'number',\n    data: 'totalAll',\n    suffix: '%',\n    align: 'center'\n  }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [\n      { month: 'January', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'February', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'March', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'April', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'May', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'June', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'July', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'August', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'September', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'October', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'November', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'December', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 }\n    ],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {\n      medical_partner_id: 'ALL',\n      medical_partner_name: 'ALL',\n      claim_type: 'ALL',\n      claim_source: 'ALL',\n      facility_region: 'ALL'\n    },\n    total15Days: 0,\n    total1Week: 0,\n    total1Month: 0,\n    totalAll: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n    claim_type: [],\n    claim_source: [],\n    facility_region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    claim_type: null,\n    claim_source: null,\n    facility_region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Aging of Partially Approved Claim Report')\n    BreadcrumbsService.setSelectedItems(['agingPartialApprovedReport'])\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingPartialApprovedClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingPartialApprovedClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Aging of Partially Approved Claim Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Medical Partner ID: ${claims.filter.facility_id}`,\n            '\\r\\n',\n            `Medical Partner Name: ${claims.filter.facility_name}`,\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Geogpraphy: ${claims.filter.facility_region}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Grand Total`, `${total15Days}`, `${total1Week}`, `${total1Month}`, `${totalAll}`].join(',')\n        ],\n        fileName: 'Aging of Partially Approved Claim Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  //* Generic\n  const handleOnChange = ({ value, category, index = '', field, isSuggestionClick }) => {\n    let _category = ''\n\n    if (index) _category = `${category}_${index}`\n    else _category = category.split('-').join('_')\n\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[_category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestion.medicalPartner.data) {\n        if (value === i.id || value === i.name) {\n          setClaims(state => ({\n            ...state,\n            filter: {\n              ...state.filter,\n              medical_partner_id: i.id,\n              medical_partner_name: i.name,\n              facility_region: i.geography\n            }\n          }))\n\n          setSuggestion(state => ({\n            ...state,\n            medicalPartner: {\n              id: ['ALL'],\n              name: ['ALL'],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestion(state => ({\n        ...state,\n        medicalPartner: {\n          id: ['ALL'],\n          name: ['ALL'],\n          data: []\n        }\n      }))\n      const { 2: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestion(state => ({\n              ...state,\n              medicalPartner: { ...state.medicalPartner, [by]: ['ALL', ..._items], data }\n            }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner ID</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner id'\n                id='facility-id'\n                value={claims.filter.medical_partner_id}\n                suggestions={suggestion.medicalPartner.id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_id',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner Name</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner name'\n                id='facility-name'\n                value={claims.filter.medical_partner_name}\n                suggestions={suggestion.medicalPartner.name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_name',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.facility_region}\n                suggestions={suggestion.facility_region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'facility_region',\n                    field: 'region'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell align={headCell.align} key={`table-header-${index}`}>\n                    <div>{headCell.label}</div>\n                    <div>{headCell.label2}</div>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={claims.data.map((claim, claimIndex) => (\n              <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                {columns.map((col, colIndex) => (\n                  <TableCell\n                    className={col.remarks ? classes.remarks : classes['table-cell']}\n                    key={`table-cell-${claimIndex}-${colIndex}`}\n                    align={col.data === 'month' ? 'left' : 'center'}\n                  >\n                    {col.suffix\n                      ? `${formatData({ type: col.type, source: claim, field: col.data })}${col.suffix}`\n                      : formatData({ type: col.type, source: claim, field: col.data })}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n            pagination={false}\n          />\n        </div>\n        {/* aligned to claims summary */}\n        <div className={classes.footer}>\n          <div className={classes.label}>\n            <Typography className='bold'>Grand Total: </Typography>\n          </div>\n          <div className={classes.total15Days}>\n            <Typography className='bold'>{claims.total15Days}</Typography>\n          </div>\n          <div className={classes.total1Week}>\n            <Typography className='bold'>{claims.total1Week}</Typography>\n          </div>\n          <div className={classes.total1Month}>\n            <Typography className='bold'>{claims.total1Month}</Typography>\n          </div>\n          <div className={classes.totalAll}>\n            <Typography className='bold'>{`${CurrencyFormatter(claims.totalAll)}%`}</Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './AgingReturnClaimReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Month', data: 'month', align: 'left' },\n  {\n    label: 'Number of returned claims',\n    label2: 'claims within grace period',\n    type: 'number',\n    data: 'total15Days',\n    align: 'center'\n  },\n  {\n    label: 'Number of  returned claims',\n    label2: 'claims beyond grace period',\n    type: 'number',\n    data: 'total1Week',\n    align: 'center'\n  },\n  {\n    label: 'Number of  returned claims claims',\n    label2: '1 month (30 Days) beyond grace period',\n    type: 'number',\n    data: 'total1Month',\n    align: 'center'\n  },\n  {\n    label: 'Percentage of  returned claims',\n    label2: 'claims beyond grace period (total)',\n    type: 'number',\n    data: 'totalAll',\n    suffix: '%',\n    align: 'center'\n  }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [\n      { month: 'January', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'February', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'March', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'April', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'May', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'June', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'July', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'August', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'September', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'October', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'November', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 },\n      { month: 'December', total15Days: 0, total1Week: 0, total1Month: 0, totalAll: 0 }\n    ],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {\n      medical_partner_id: 'ALL',\n      medical_partner_name: 'ALL',\n      claim_type: 'ALL',\n      claim_source: 'ALL',\n      facility_region: 'ALL'\n    },\n    total15Days: 0,\n    total1Week: 0,\n    total1Month: 0,\n    totalAll: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n    claim_type: [],\n    claim_source: [],\n    facility_region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    claim_type: null,\n    claim_source: null,\n    facility_region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Aging of Returned Claims Report')\n    BreadcrumbsService.setSelectedItems(['agingReturnedClaims'])\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingReturnClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingReturnClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Aging of Returned Claims Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Medical Partner ID: ${claims.filter.facility_id}`,\n            '\\r\\n',\n            `Medical Partner Name: ${claims.filter.facility_name}`,\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Geogpraphy: ${claims.filter.region}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Grand Total`, `${total15Days}`, `${total1Week}`, `${total1Month}`, `${totalAll}`].join(',')\n        ],\n        fileName: 'Aging of Returned Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  //* Generic\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestion.medicalPartner.data) {\n        if (value === i.id || value === i.name) {\n          setClaims(state => ({\n            ...state,\n            filter: {\n              ...state.filter,\n              medical_partner_id: i.id,\n              medical_partner_name: i.name,\n              facility_region: i.geography\n            }\n          }))\n\n          setSuggestion(state => ({\n            ...state,\n            medicalPartner: {\n              id: ['ALL'],\n              name: ['ALL'],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestion(state => ({\n        ...state,\n        medicalPartner: {\n          id: ['ALL'],\n          name: ['ALL'],\n          data: []\n        }\n      }))\n      const { 2: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestion(state => ({\n              ...state,\n              medicalPartner: { ...state.medicalPartner, [by]: ['ALL', ..._items], data }\n            }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner ID</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner id'\n                id='facility-id'\n                value={claims.filter.medical_partner_id}\n                suggestions={suggestion.medicalPartner.id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_id',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Parttner Name</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner name'\n                id='facility-name'\n                value={claims.filter.medical_partner_name}\n                suggestions={suggestion.medicalPartner.name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_name',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.facility_region}\n                suggestions={suggestion.facility_region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'facility_region',\n                    field: 'region'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell align={headCell.align} key={`table-header-${index}`}>\n                    <div>{headCell.label}</div>\n                    <div>{headCell.label2}</div>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                      align={col.data === 'month' ? 'left' : 'center'}\n                    >\n                      {col.suffix\n                        ? `${formatData({ type: col.type, source: claim, field: col.data })}${col.suffix}`\n                        : formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n          />\n        </div>\n        <div className={classes.footer}>\n          <div className={classes.label}>\n            <Typography className='bold'>Grand Total: </Typography>\n          </div>\n          <div className={classes.total15Days}>\n            <Typography className='bold'>{claims.total15Days}</Typography>\n          </div>\n          <div className={classes.total1Week}>\n            <Typography className='bold'>{claims.total1Week}</Typography>\n          </div>\n          <div className={classes.total1Month}>\n            <Typography className='bold'>{claims.total1Month}</Typography>\n          </div>\n          <div className={classes.totalAll}>\n            <Typography className='bold'>{`${CurrencyFormatter(claims.totalAll)}%`}</Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ClaimsBeyond3MonthsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No', data: 'no' },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Date Received', data: 'received_date', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, sort: true, match: 'any' },\n  { label: 'Medical Partner Name', data: 'facility_name', search: true, sort: true, match: 'any' },\n  { label: 'Date of Service', data: 'date_of_service', type: 'date', search: true, sort: true, match: 'date' },\n  { label: 'Claim Amount', data: 'claim_amount', sort: false, type: 'currency' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  // const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'latest.date.received'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'latest.date.received' },\n    // range: {\n    //   from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n    //   to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n    //   field: 'status_date'\n    // },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Claims Beyond 3 Months Report')\n    BreadcrumbsService.setSelectedItems(['claimsBeyond3Months'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchRecords({ ...claims, ...range })\n  }\n\n  // const handleOnFilter = args => {\n  //   const { field, value, match } = args\n  //   setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  // }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ..._params, range: dateRange })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsBeyond3Months({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0, count, limit, page } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count,\n        limit,\n        page,\n        grandTotal: grand_total\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsBeyond3Months({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Claims Beyond 3 Months',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Claims Beyond 3 Months',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  // React.useEffect(() => {\n  //   // Goal: Adjust columns to show based on data columns passed as props\n\n  //   let filtered = null\n  //   if (!dataColumns || dataColumns.length === 0) {\n  //     filtered = completeColumns\n  //   } else {\n  //     filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n  //   }\n  //   setColumns(filtered)\n  // }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    // <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n    //   <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter({ range: claims.range })}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnPaginate({\n                                  filter: {\n                                    ...claims.filter,\n                                    [headCell.data]: { value: date.toISOString(), match: headCell.match }\n                                  },\n                                  page: 1\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnPaginate({\n                                  filter: {\n                                    ...claims.filter,\n                                    [headCell.data]: { value: search, match: headCell.match }\n                                  },\n                                  page: 1\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <div className={classes.footer}>\n                <Typography variant='caption' className='bold'>\n                  <span>Grand Total: </span>\n                  <span>{CurrencyFormatter(claims.grandTotal)}</span>\n                </Typography>\n              </div>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","export default {\n  'In Patient': { prefix: 'IP', other_name: 'InPatient' },\n  'Out Patient Procedure': { prefix: 'OP', other_name: 'OutPatientProcedure' },\n  'Out Patient Consultation': { prefix: 'PF', other_name: 'OutPatientConsultation' },\n  Emergency: { prefix: 'ER', other_name: 'Emergency' },\n  Dental: { prefix: 'DN', other_name: 'Dental' },\n  'Medicine Allowance': { prefix: 'MA', other_name: 'MedicineAllowance' },\n  APE: { prefix: 'AP', other_name: 'APE' },\n  ECU: { prefix: 'EC', other_name: 'ECU' },\n  Pharmacy: { prefix: 'PH', other_name: 'Pharmacy' },\n  PPE: { prefix: 'PE', other_name: 'PPE' },\n  'Medical Supplies': { prefix: 'MS', other_name: 'MedicalSupplies' },\n  'Clinic Management': { prefix: 'CM', other_name: 'ClinicManagement' },\n  Reimbursement: {\n    prefix: 'RM',\n    other_name: 'Reimbursement',\n    subType: [\n      { text: 'In Patient', value: 'InPatient' },\n      { text: 'Out Patient', value: 'OutPatient' },\n      { text: 'Professional Fee', value: 'ProfessionalFee' },\n      { text: 'Maternity Assistance', value: 'MaternityAssistance' },\n      { text: 'OPD Medicine', value: 'OPDMedicine' },\n      { text: 'Optical', value: 'Optical' },\n      { text: 'Dental', value: 'Dental' }\n    ]\n  }\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Constants\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\n// Styles\nimport classes from './ReimbursementAgingReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: '', data: 'item', align: 'left' },\n  { label: 'Number of Reimbursement Claims', type: 'number', data: 'reimbursement_count', align: 'center' },\n  {\n    label: 'Number of Percentage of Reimbursement Claims',\n    type: 'number',\n    data: 'reimbursement_percent',\n    align: 'center',\n    suffix: '%'\n  }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [\n      { item: 'Reimbursement within TAT', reimbursement_count: 0, reimbursement_percent: 0 },\n      { item: 'Reimbusement above TAT', reimbursement_count: 0, reimbursement_percent: 0 }\n    ],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { reimbursement_category: 'ALL' }\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    reimbursement_category: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    reimbursement_category: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Reimbursement Aging Report')\n    BreadcrumbsService.setSelectedItems(['agingReimbursement'])\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursmentAgingReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      setClaims(state => ({\n        ...state,\n        data: results\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursmentAgingReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Reimbursement Aging Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Reimbursement Category: ${claims.filter.reimbursement_category}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ]\n        ],\n        fileName: 'Reimbursement Aging Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, filter: { ...state.filter, [category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [category]: setTimeout(() => {\n          // use constant (this also used in Reimbursement Claim page)\n          const const_types = ClaimTypes.Reimbursement.subType\n\n          if (value) {\n            const _value = value.toLowerCase()\n            const filtered = const_types\n              .map(i => i.text)\n              .filter(j => {\n                const lower_case = j.toLowerCase()\n\n                return lower_case.includes(_value)\n              })\n\n            setSuggestion(state => ({ ...state, [category]: ['ALL', ...filtered] }))\n          } else {\n            setSuggestion(state => ({ ...state, [category]: ['ALL', ...const_types.map(i => i.text)] }))\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Reimbursment Category</Typography>\n              <AutoComplete\n                placeholder='Search by reimbursement Category'\n                id='reimbursment-category'\n                value={claims.filter.reimbursement_category}\n                suggestions={suggestion.reimbursement_category}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'reimbursement_category',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`} align={headCell.align}>\n                    {headCell.label}\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                      align={col.align}\n                    >\n                      {col.suffix\n                        ? `${formatData({ type: col.type, source: claim, field: col.data })}${col.suffix}`\n                        : formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './DetailedClaimsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No.', sortField: 'no', search: false, sort: false, type: 'number' },\n  { label: 'Process Date', sortField: 'process_date', search: true, sort: true, match: 'date', type: 'date' },\n  { label: 'Claim Number', sortField: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Claim Type', sortField: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Amount', sortField: 'claim_amount', search: false, sort: false, type: 'currency', align: 'right' },\n  { label: 'Claim Status', sortField: 'claim_status', search: true, sort: true, match: 'any' },\n  { label: 'Section', sortField: 'section', search: true, sort: true, match: 'any' },\n  { label: 'User', sortField: 'user', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', sortField: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Geography', sortField: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', sortField: 'contract_plan_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', sortField: 'claim_sub_type', search: true, sort: true, match: 'any' }\n]\n\nexport default function DetailedClaimsReport (props) {\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'status_date'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    total_amount: 0,\n    total_received: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Claims Report')\n    BreadcrumbsService.setSelectedItems(['detailedClaimsReport'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const fetchReport = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedClaimsReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], grand_total, count, limit, page, total_received } = res.data.data\n\n      setClaims(state => ({ ...state, data: results, count, page, limit, total_amount: grand_total, total_received }))\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchReport({ ...claims, ...range })\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchReport({ ..._params, range: dateRange })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedClaimsReport({\n      range: dateRange,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { results, grand_total, total_received, count } = res.data.data\n      const header = columns.map(i => i.label)\n\n      const rows = results.map(i => {\n        return columns.map(col => formatData({ type: col.type, source: i, field: col.sortField }))\n      })\n\n      // array.from or of\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Claims Report',\n            '\\r\\n',\n            '\\r\\n',\n            ['Date Range:', `${DateFormatter(dateRange.from)} - ${DateFormatter(dateRange.to)}`],\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [\n            '\\r\\n',\n            ['Number of Claims Received:', `${total_received}`],\n            '\\r\\n',\n            ['Number of Claims Processed:', `${count}`],\n            '\\r\\n',\n            ['Amount of Claims Processed:', `${grand_total}`]\n          ]\n        ],\n        fileName: 'Detailed Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                handleOnClickFilter({ range: claims.range })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV(claims)} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <div className={`${classes.input} ${!headCell.search ? classes.hidden : ''}`}>\n                      <TextField\n                        noMargin\n                        id={`text-field-${headCell.sortField}`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnPaginate({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.sortField]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={`${item.claim_number}-${index}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        align={col.align}\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${index}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: item, field: col.sortField })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            // footerComponent={\n            //   <Typography variant='caption' className='bold'>\n            //     <span>Total Amount: </span>\n            //     <span>{CurrencyFormatter(claims.total_amount)}</span>\n            //   </Typography>\n            // }\n          />\n        </div>\n        {/* trial ugly */}\n        <div className={classes.footer}>\n          <div className={classes.label}>\n            <Typography className='bold'>{`Number of Claims Received: ${claims.total_received}`}</Typography>\n          </div>\n          <div className={classes.label}>\n            <Typography className='bold'>{`Number of Claims Processed: ${claims.count}`}</Typography>\n          </div>\n          <div className={classes.label}>\n            <Typography className='bold'>\n              {`Amount of Claims Processed: ${CurrencyFormatter(claims.total_amount)}`}\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './DetailedPerformanceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No', data: 'no' },\n  { label: 'Date Received', data: 'date_received', type: 'date', search: true, sort: true, match: 'date' },\n  { label: 'Date Due', data: 'date_due', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Process Date', data: 'date_processed', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  // { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Section', data: 'claim_section', search: true, sort: true, match: 'any' },\n  { label: 'User', data: 'user', search: true, sort: true, match: 'any' },\n  { label: 'TAT per Claim', data: 'tat_claim', search: true, sort: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', data: 'claim_sub_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'date' },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'date_received',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Performance Report')\n    BreadcrumbsService.setSelectedItems(['detailedPerformanceReport'])\n\n    // autofilter today\n    handleOnClickFilter(claims)\n  }, [])\n\n  const handleOnClickFilter = args => {\n    if (validate()) return\n\n    fetchRecords({ ...claims, ...args })\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n    fetchRecords({ ...claims, filter: { ...claims.filter, [field]: { value, match } } })\n  }\n\n  const handleOnPaginate = params => {\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ...claims, ...params })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedPerformanceReport({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedPerformanceReport({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Performance Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Detailed Performance Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: date.toISOString(),\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: search,\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './DetailedMonitoringReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No', data: 'no' },\n  { label: 'Date Received', data: 'date_received', type: 'date', search: true, sort: true, match: 'start' },\n  { label: 'Date Due', data: 'date_due', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Process Date', data: 'date_processed', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', data: 'claim_sub_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Section', data: 'claim_section', search: true, sort: true, match: 'any' },\n  { label: 'Claim User', data: 'user', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' },\n  { label: 'Handling Time per Claim', data: 'handling_per_claim', search: true, sort: true, match: 'any' },\n  { label: 'Section Handling Time Beyond KPI', data: 'handling_beyond_kpi', search: true, sort: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'date' },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'date_received',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Monitoring Report')\n    BreadcrumbsService.setSelectedItems(['detailedMonitoringReport'])\n\n    // autofilter today\n    handleOnClickFilter(claims)\n  }, [])\n\n  const handleOnClickFilter = args => {\n    if (validate()) return\n\n    fetchRecords({ ...claims, ...args })\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n    fetchRecords({ ...claims, filter: { ...claims.filter, [field]: { value, match } } })\n  }\n\n  const handleOnPaginate = params => {\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ...claims, ...params })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedMonitoringReport({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedMonitoringReport({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Monitoring Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Detailed Monitoring Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: date.toISOString(),\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: search,\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\n// Pages\nimport ClaimsUtilLedgerReport from '../Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\nimport TransmittalReport from './../Components/Reports/TransmittalReport/TransmittalReport'\nimport TreasuryTransmittalReport from '../Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport'\nimport PRCheckReport from '../Components/Reports/PRCheckReport/PRCheckReport'\nimport UtilizationReport from '../Components/Reports/UtilizationReport/UtilizationReport'\nimport LoadingHimsData from '../Components/Reports/LoadingHimsData/LoadingHimsData'\nimport ConfinementReport from '../Components/Reports/ConfinementReport/ConfinementReport'\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\nimport ReimbursementReport from '../Components/Reports/ReimbursementReport/ReimbursementReport'\nimport ClaimsSummaryReport from '../Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport'\nimport ProductivityPerformaceReport from '../Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport'\nimport ReturnedClaimsReport from '../Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport'\nimport PerformanceReport from '../Components/Reports/PerformanceReport/PerformanceReport'\nimport AgingPartialApprovedReport from '../Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport'\nimport AgingReturnClaimReport from '../Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport'\nimport ClaimsBeyond3MonthsReport from '../Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport'\nimport ReimbursementAgingReport from '../Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport'\nimport DetailedClaimsReport from '../Components/Reports/DetailedClaimsReport/DetailedClaimsReport'\nimport DetailedPerformanceReport from '../Components/Reports/DetailedPerformanceReport/DetailedPerformanceReport'\nimport DetailedMonitoringReport from '../Components/Reports/DetailedMonitoringReport/DetailedMonitoringReport'\n\nconst reportPages = {\n  transmittal: {\n    name: 'transmittal',\n    label: 'Transmittal Report',\n    to: '/reports/transmittal-report',\n    component: TransmittalReport\n  },\n  utilizationLedger: {\n    name: 'utilizationLedger',\n    label: 'Generate Utilization Ledger',\n    to: '/reports/utilization-ledger',\n    component: ClaimsUtilLedgerReport\n  },\n  treasuryTransmittalReport: {\n    name: 'treasuryTransmittalReport',\n    label: 'View Treasury Transmittal',\n    to: '/reports/treasury-reports',\n    component: TreasuryTransmittalReport\n  },\n  utilizationReport: {\n    name: 'utilizationReport',\n    label: 'View Account & Member Utilization',\n    to: '/reports/utilization',\n    component: UtilizationReport\n  },\n  prReports: {\n    name: 'prReports',\n    label: 'View PR and Check Details',\n    to: '/reports/pr-reports',\n    component: PRCheckReport\n  },\n  loadingHimsData: {\n    name: 'loadingHimsData',\n    label: 'Template for Loading HIMS Data',\n    to: '/reports/loading-hims-data',\n    component: LoadingHimsData\n  },\n  confinementReport: {\n    name: 'confinementReport',\n    label: 'List of Emergencies Leading to Confinement Report',\n    to: '/reports/confinement-report',\n    component: ConfinementReport\n  },\n  paymentRequestReport: {\n    name: 'paymentRequestReport',\n    label: 'Payment Request Report',\n    to: '/reports/payment-request-report',\n    component: PaymentRequestReport\n  },\n  reimbursementReport: {\n    name: 'reimbursementReport',\n    label: 'Reimbursement Claims Report',\n    to: '/reports/reimburesment-report',\n    component: ReimbursementReport\n  },\n  claimsSummaryReport: {\n    name: 'claimsSummaryReport',\n    label: 'Claims Summary Report',\n    to: '/reports/claims-summary-report',\n    component: ClaimsSummaryReport\n  },\n  productivityPerformaceReport: {\n    name: 'productivityPerformaceReport',\n    label: 'Productivity and Performance Report',\n    to: '/reports/productivity-performance',\n    component: ProductivityPerformaceReport\n  },\n  returnedClaimsReport: {\n    name: 'returnedClaimsReport',\n    label: 'Returned Claims Report',\n    to: '/reports/returned-claims',\n    component: ReturnedClaimsReport\n  },\n  performanceReport: {\n    name: 'performanceReport',\n    label: 'Performance Summary Report',\n    to: '/reports/performance',\n    component: PerformanceReport\n  },\n  agingPartialApprovedReport: {\n    name: 'agingPartialApprovedReport',\n    label: 'Aging of Partially Approved Claims Report',\n    to: '/reports/aging-partial-approve-claims',\n    component: AgingPartialApprovedReport\n  },\n  agingReturnedClaims: {\n    name: 'agingReturnedClaims',\n    label: 'Aging of Returned Claims Report',\n    to: '/reports/aging-returned-claims',\n    component: AgingReturnClaimReport\n  },\n  claimsBeyond3Months: {\n    name: 'claimsBeyond3Months',\n    label: 'Claims Beyond 3 Months Report',\n    to: '/reports/claims-beyond-3-months',\n    component: ClaimsBeyond3MonthsReport\n  },\n  agingReimbursement: {\n    name: 'agingReimbursement',\n    label: 'Reimbursement Aging Report',\n    to: '/reports/aging-reimbursement',\n    component: ReimbursementAgingReport\n  },\n  detailedClaimsReport: {\n    name: 'detailedClaimsReport',\n    label: 'Detailed Claims Report',\n    to: '/reports/detailed-claims',\n    component: DetailedClaimsReport\n  },\n  detailedPerformanceReport: {\n    name: 'detailedPerformanceReport',\n    label: 'Detailed Performance Report',\n    to: '/reports/detailed-performance',\n    component: DetailedPerformanceReport\n  },\n  detailedMonitoringReport: {\n    name: 'detailedMonitoringReport',\n    label: 'Detailed Monitoring Report',\n    to: '/reports/detailed-monitoring',\n    component: DetailedMonitoringReport\n  }\n}\n\nconst reportsItems = {\n  BATCH_ENCODER: ['utilizationLedger', 'transmittal', 'confinementReport'],\n  BATCH_ENCODER_SUPERVISOR: [\n    'utilizationLedger',\n    'confinementReport',\n    'transmittal',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  CLAIMS_DETAILS_ENCODER: ['utilizationLedger', 'confinementReport'],\n  CLAIMS_DETAILS_ENCODER_SUPERVISOR: [\n    'utilizationLedger',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  CLAIMS_ANALYST: ['utilizationLedger', 'confinementReport'],\n  PR_OFFICER: ['utilizationLedger', 'confinementReport'],\n  PR_OFFICER_SUPERVISOR: [\n    'utilizationLedger',\n    'loadingHimsData',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  MEDICAL_CONSULTANT: ['utilizationLedger', 'confinementReport'],\n  CLAIMS_RECON: [\n    'utilizationLedger',\n    'transmittal',\n    'prReports',\n    'treasuryTransmittalReport',\n    'utilizationReport',\n    'reimbursementReport',\n    'confinementReport'\n  ],\n  CLAIMS_VERIFIER_SUPERVISOR: [\n    'utilizationLedger',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'productivityPerformaceReport',\n    'claimsSummaryReport',\n    'returnedClaimsReport',\n    'performanceReport',\n    'agingPartialApprovedReport',\n    'agingReturnedClaims',\n    'claimsBeyond3Months',\n    'agingReimbursement',\n    'detailedClaimsReport',\n    'detailedPerformanceReport',\n    'detailedMonitoringReport'\n  ],\n  CLAIMS_MANAGER: [\n    'utilizationLedger',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'productivityPerformaceReport',\n    'claimsSummaryReport',\n    'returnedClaimsReport',\n    'performanceReport',\n    'agingPartialApprovedReport',\n    'agingReturnedClaims',\n    'claimsBeyond3Months',\n    'agingReimbursement',\n    'detailedClaimsReport',\n    'detailedPerformanceReport',\n    'detailedMonitoringReport'\n  ]\n}\nconst generateBreadCrumbs = userRole => {\n  let breads = {}\n  for (const r of reportsItems[userRole]) {\n    breads[r] = { text: reportPages[r].label, to: reportPages[r].to }\n  }\n  return breads\n}\n\nconst generateSideBar = userRole => {\n  return {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: (reportsItems[userRole] && reportsItems[userRole].map(r => reportPages[r])) || []\n  }\n}\n\nconst generateRoutes = userRole => {\n  return reportsItems[userRole].map(r => (\n    <Route key={reportPages[r].name} exact path={reportPages[r].to} component={reportPages[r].component} />\n  ))\n}\n\nexport { generateSideBar, generateBreadCrumbs, generateRoutes }\n","import constants from './constants'\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport moment from 'moment'\n\nexport const staticHeaderFooter = args => {\n  const { registered_name, corporate_account_no, contracts = [], amount, ar_amount, username } = args\n\n  const static_header = constants.header.map(i => {\n    switch (i) {\n      case 'Company:':\n        return [i, registered_name, '\\r\\n']\n      case 'Account No.:':\n        return [i, corporate_account_no, '\\r\\n']\n      case 'Contract:':\n        return [i, contracts.length, '\\r\\n']\n      case 'Date:':\n        return [i, `${DateFormatter(new Date())} ${moment().format('LTS')}`, '\\r\\n']\n    }\n  })\n\n  const static_footer = constants.footer.map(i => {\n    switch (i) {\n      case 'Total':\n        return ['', '', '', i, amount, ar_amount, '\\r\\n']\n      case 'Transmitted by:':\n        return [i, username, '\\r\\n']\n      case 'Noted by:':\n        return [i, '--', '\\r\\n']\n      case 'Received by:':\n        return [i, '--', '\\r\\n']\n    }\n  })\n\n  return [\n    [...static_header, '\\r\\n'],\n    ['\\r\\n', ...static_footer]\n  ]\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport Dashboard from './../Components/BatchEncoder/Dashboard/Dashboard'\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n\n        {/* REPORTS */}\n        {generateRoutes(userRole)}\n      </Switch>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 'encoder-name', name: 'Encoder Name', sortField: 'name', match: 'any' },\n  { id: 'total-bundle', name: 'Total Bundles', sortField: 'total_bundle', match: 'any' },\n  { id: 'total-batch', name: 'Total Batches', sortField: 'total_batch', match: 'any' }\n]\n\nconst BatchAndEncoderTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBatchEncoderWork({ category: 'created', limit: 10, sort: 'name|asc' }),\n      services.getBatchEncoderWorkCount()\n    ])\n      .then(values => {\n        const [batchEncoders, count] = values\n        setItems({ data: batchEncoders.data.data.results, count: count.data.data })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Bundle and Batch Encoder' })\n    setFetching(true)\n    services\n      .getBatchEncoderWork({ limit: 10, sort: 'name|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatchEncoderWork(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'bundle-and-batch-encoder-count' }}\n        sizes={sizes}\n        title='Bundle and Batch Encoder'\n        id='bundle-and-batch-encoder'\n        isFilterShown={false}\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='bundle-and-batch-encoder-view-list'\n          >\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={item.id}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.data.map((item, index) => (\n                <TableRow key={item.user_id}>\n                  <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n                  <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n                  <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n                  <TableCell id={`view-work-${index}`}>\n                    <Link to={`/batch-encoder-work/${item.user_id}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n      <ViewList\n        id='bundle-and-batch-encoder'\n        columns={columns}\n        searchTextPlaceHolder='Search for Encoder Name, Total Bundles or Total Batches'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.user_id}>\n              <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n              <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n              <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n              <TableCell id={`view-work-${index}`}>\n                <Link to={`/batch-encoder-work/${item.user_id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nBatchAndEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default BatchAndEncoderTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { name: 'SOA No.', sortField: 'soa_number', match: 'any' },\n  { name: 'Bundle', sortField: 'bundle_number', match: 'any' },\n  { name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ForReconciliationClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    for_recon: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const [viewList, setViewList] = React.useState({\n    category: 'for-recon',\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'for-recon',\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getClaimCount({ category: 'for-recon' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, for_recon: { data: allClaims, count: allClaimsCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for_recon'\n\n    setFetching(true)\n    services\n      .getClaims({\n        category,\n        range: value,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = `Claims for Reconciliation`\n    const category = 'for_recon'\n\n    setViewList(p => ({ ...p, show: true, title, category }))\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: viewList.limit, sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claim-for-Reconciliation'\n        count={{ color: 3, value: claims.for_recon.count }}\n        sizes={sizes}\n        title='Claims for Reconciliation'\n        viewList={\n          <Typography id='fr-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map((item, index) => (\n                  <TableCell\n                    key={index}\n                    // id={item.id}\n                  >\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.for_recon.data.map((item, index) => (\n                <TableRow key={`${item.claim_number}-${index}`}>\n                  <TableCell>{item.claim_number}</TableCell>\n                  <TableCell>{item.soa.number}</TableCell>\n                  <TableCell>{item.bundle_number}</TableCell>\n                  <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell>{item.facility.name}</TableCell>\n                  <TableCell id={`view-review-${index}`}>\n                    <Link to={`/claims/recon/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View Claim\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claim-for-Reconciliation'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell>{item.claim_number}</TableCell>\n              <TableCell>{item.soa.number}</TableCell>\n              <TableCell>{item.bundle_number}</TableCell>\n              <TableCell>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell>{item.facility.name}</TableCell>\n              <TableCell id={`view-review-${index}`}>\n                <Link to={`/claims/recon/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View Claim\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForReconciliationClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default ForReconciliationClaimsTile\n","import instance from './instance'\n// import { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/bes')\n\nexport default class BatchEncodingSupervisoryServices {\n  static getBatchEncoderWork (params) {\n    return axios({\n      url: '/batch-encoder-work',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchEncoderWorkCount () {\n    return axios({\n      url: '/batch-encoder-work/count',\n      method: 'GET'\n    })\n  }\n\n  static getBundles ({ user_id, params }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassignBundles ({ user_id, data }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\nimport BatchEncodingSupervisoryServices from 'Services/Api/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Bundle And Batch Encoding'>\n            <CreatedBundlesTile services={BatchEncodingServices} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} {...props} />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { show, setShow, services, onSubmit } = props\n\n  const [reassign, setReassign] = React.useState({})\n  const [showAlert, setShowAlert] = React.useState()\n  const [users, setUsers] = React.useState([])\n\n  const [reassignErrors, setReassignErrors] = React.useState({})\n\n  React.useEffect(() => {\n    setReassign({})\n    setReassignErrors({})\n    setUsers([])\n    setShowAlert()\n\n    if (show) {\n      services.getUsers('BATCH_ENCODER').then(({ data: response }) => {\n        setUsers(\n          response.map(item => ({\n            value: item._id,\n            text: `${item.first_name} ${item.last_name}`\n          }))\n        )\n      })\n    }\n  }, [show])\n\n  const validate = () => {\n    const { error } = ReassignValidator(reassign)\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (!validate()) setShowAlert(true)\n  }\n\n  const handleOnClose = () => {\n    setShow()\n  }\n\n  const handleOnAlertConfirm = () => {\n    setShow()\n    onSubmit({ ...reassign })\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={show || false}\n          onClose={handleOnClose}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                onChange={event => {\n                  const note = event.target.value\n                  setReassign(state => ({\n                    ...state,\n                    note\n                  }))\n                }}\n                id='reassign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {users && users.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='dropdown-assign-to'\n                  items={users}\n                  value={reassign.assignee || ''}\n                  error={reassignErrors.assignee}\n                  onChange={event =>\n                    setReassign(state => ({\n                      ...state,\n                      assignee: event.target.value\n                    }))\n                  }\n                  disableComponents={!!(users && users.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button onClick={handleOnClose} variant='contained' color='primary' className='button-negative'>\n                  Cancel\n                </Button>\n                <Button onClick={handleOnSubmit} variant='contained' color='primary' className='button-positive'>\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={showAlert || false}\n          onClose={setShowAlert}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Bundle/SOA to Batch Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Bundle/SOA to the selected Batch Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This Bundle/SOA will be sent to the assigned Batch Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button onClick={() => setShowAlert()} variant='contained' color='primary' className='button-negative'>\n                Cancel\n              </Button>\n              <Button onClick={handleOnAlertConfirm} variant='contained' color='primary' className='button-positive'>\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/BatchEncodingSupervisoryServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Styles\nimport classes from './CreatedBundlesPage.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columnss = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Received', sortField: 'date_received', match: 'date' },\n  { id: 'date-due', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nexport default function CreatedBundlesPage (props) {\n  const [bundle, setBundle] = React.useState({\n    data: [],\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  const [batchEncoderId, setBatchEncoderId] = React.useState()\n  const [openModal, setOpenModal] = React.useState()\n  const [activeAssigning, setActiveAssigning] = React.useState()\n  const [headerCheckBox, setHeaderCheckBox] = React.useState({})\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    const _batchEncoderId = props.match.params.user_id\n    setBatchEncoderId(_batchEncoderId)\n\n    PageTitleService('Created Bundles')\n    // BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${_batchEncoderId}`])\n    BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${' '}`])\n\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: _batchEncoderId,\n      params: { limit: 10, sort: `${bundle.orderBy}|${bundle.order ? 'desc' : 'asc'}` }\n    }).then(({ data: response }) => {\n      const { results: data } = response.data\n      setBundle(state => ({ ...state, ...response.data, data }))\n    })\n  }, [])\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setBundle(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setBundle(p => ({ ...p, orderBy, order: !bundle.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${bundle.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: bundle.limit,\n      page: bundle.page,\n      search: bundle.search,\n      sort: `${bundle.orderBy}|${bundle.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: batchEncoderId,\n      params: _params\n    }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setBundle(state => ({ ...state, data: results, count, limit, page }))\n\n      setHeaderCheckBox({})\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnItemSelect = index => {\n    setBundle(state => {\n      const data = state.data\n      data[index].selected = !data[index].selected\n\n      const selectedCount = data.filter(i => i.selected).length\n      setHeaderCheckBox({ checked: !!selectedCount, indeterminate: selectedCount && selectedCount !== data.length })\n\n      return { ...state, data }\n    })\n  }\n\n  const handleOnSelectAllItem = () => {\n    const { checked, indeterminate } = headerCheckBox\n\n    setBundle(state => {\n      return {\n        ...state,\n        data: state.data.map(i => ({\n          ...i,\n          selected: checked && indeterminate ? true : !(checked && !indeterminate)\n        }))\n      }\n    })\n\n    setHeaderCheckBox({ checked: (checked && indeterminate) || !checked })\n  }\n\n  const handleOnSubmit = ({ note, assignee }) => {\n    LoadingService.loading(true)\n\n    const bundle_numbers = []\n    bundle.data.filter(i => i.selected && bundle_numbers.push(i.bundle_number))\n\n    BatchEncodingSupervisoryServices.reassignBundles({\n      user_id: batchEncoderId,\n      data: {\n        note,\n        assignee,\n        bundle_numbers\n      }\n    }).then(res => {\n      handleOnViewListChange({})\n    })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setBundle(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...bundle.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.content}>\n        <div className={classes['first-container']}>\n          <div className={classes.action}>\n            <Button\n              id='cancelreassign-btn'\n              variant='contained'\n              color='primary'\n              className='button-neutral'\n              onClick={() => setActiveAssigning(true)}\n              disabled={!!activeAssigning}\n            >\n              Re-Assign\n            </Button>\n          </div>\n\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for bundle number, date or facility name'\n            />\n          </div>\n        </div>\n\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      style={{ marginTop: '30px' }}\n                      disabled={!bundle.data.length}\n                      checked={headerCheckBox.checked || false}\n                      indeterminate={headerCheckBox.indeterminate || false}\n                      onChange={handleOnSelectAllItem}\n                    />\n                  </TableCell>\n                )}\n\n                {columnss.map(column => (\n                  <TableCell key={column.sortField} id={column.id}>\n                    <TableSortLabel\n                      active={bundle.orderBy === column.sortField}\n                      direction={bundle.order ? 'asc' : 'desc'}\n                      onClick={handleOnSort(column.sortField)}\n                    >\n                      {column.name}\n                    </TableSortLabel>\n\n                    <TextField\n                      id={`text-field-${column.id}`}\n                      // value={newBundle.bundle_number}\n                      TextFieldStyle={{ margin: 0 }}\n                      fullWidth\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: column.sortField,\n                              value: search,\n                              match: column.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={bundle.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      onChange={() => handleOnItemSelect(index)}\n                      checked={item.selected || false}\n                    />\n                  </TableCell>\n                )}\n\n                <TableCell id={`bundle-number-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`received-date-${index}`}>{DateFormatter(item.date.received)}</TableCell>\n                <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`view-work-${index}`}>\n                  <Link to={`/batch-encoder-work/${batchEncoderId}/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n            count={bundle.count}\n            page={bundle.page}\n            limit={bundle.limit}\n            rowsPerPageOptions={[10, 15, 20]}\n            onChange={handleOnViewListChange}\n          />\n        </div>\n\n        <div className={classes.footer}>\n          {activeAssigning && (\n            <Typography variant='subtitle2' className={classes.title}>\n              Total Bundle Selected: {bundle.data.filter(i => i.selected).length}\n            </Typography>\n          )}\n\n          <div className={classes.actions}>\n            {activeAssigning ? (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => {\n                    setActiveAssigning()\n                  }}\n                  id='cancel'\n                >\n                  Cancel\n                </Button>\n\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className={`${classes.save} button-positive`}\n                  onClick={() => setOpenModal(true)}\n                  disabled={!(headerCheckBox.checked || false)}\n                  id='save'\n                >\n                  Assign\n                </Button>\n              </React.Fragment>\n            ) : (\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push('/')}\n                id='cancel'\n              >\n                Close\n              </Button>\n            )}\n          </div>\n        </div>\n      </Paper>\n      <AssignDialog\n        show={openModal}\n        setShow={setOpenModal}\n        services={UserManagementServices}\n        onSubmit={handleOnSubmit}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DiscrepancyBase.module.scss'\n\nexport default function DiscrepancyBase (props) {\n  // INIT\n  const { discrepancy, id = '', children, iconStyle = {}, ...others } = props\n\n  // Breaking down props\n  const { result } = discrepancy\n  const { retainSpace = false, noMargin = false, autoWidth = false, showIcon = true } = others\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n          list = list.flat(Infinity)\n        }\n      }\n\n      // const uniqOnly = Array.from(new Set(list))\n      // uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n\n      list.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  React.useEffect(() => {\n    spreadResult(result)\n  }, [result])\n\n  const open = Boolean(anchorEl)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const icon = ({ iconStyle }) => {\n    return (\n      <div\n        className={`${classes['discrepancy-icon']} ${\n          message === '' ? (retainSpace ? classes['display-hidden'] : classes['display-none']) : ''\n        } ${noMargin ? classes['no-margin'] : classes['with-margin']}`}\n      >\n        <FontAwesomeIcon\n          id={`exc-circle-${id}`}\n          style={iconStyle}\n          icon='exclamation-circle'\n          className={`${classes['icon']}`}\n          onClick={handleClick}\n        />\n        <Popover\n          id={`simple-popover`}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'left'\n          }}\n        >\n          <Typography style={{ whiteSpace: 'pre-line' }} className={classes['message']}>\n            {message}\n          </Typography>\n        </Popover>\n      </div>\n    )\n  }\n\n  return (\n    <div id={id} className={`${classes[`root`]}`}>\n      <div\n        className={`${classes[`input-wrapper`]} ${autoWidth ? classes['auto-width'] : classes['max-width']} ${\n          message !== '' ? classes['discrepancy'] : ''\n        }`}\n      >\n        {children}\n      </div>\n      {showIcon ? icon({ iconStyle }) : ''}\n      {/* {message !== '' && icon({ iconStyle })} */}\n    </div>\n  )\n}\n","const includesAny = (s1 = '', s2 = '') => {\n  return s1.toLowerCase().includes(s2.toLowerCase())\n}\n\nconst compare = (list, find, comparer = includesAny, fields = []) => {\n  if (Array.isArray(list)) {\n    return list.some(item => {\n      for (const field of fields) {\n        if (comparer(item[field], find)) return true\n      }\n    })\n  } else {\n    if (comparer(list, find)) return true\n  }\n  return false\n}\n\nexport { compare, includesAny }\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\n// import CircularProgress from '@material-ui/core/CircularProgress'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n// Services\n// import { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport lodash from 'lodash'\n\n// Styles\nimport classes from './ClientMemberLookup.module.scss'\n\nexport default function ClientMemberLookup (props) {\n  // Variables\n  const { columns = [], allSearch = '', allSearchText = '', allSearchFields, mode = '' } = props\n  // Services\n  const { service } = props\n  // Events\n  // Callbacks\n  const { onRecordSet } = props\n\n  // Local Variables\n  const [apiData, setApiData] = React.useState({\n    rows: [],\n    search: '',\n    order: '',\n    limit: 10\n    // count: 0,\n    // page: 1,\n    // rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [finalRows, setFinalRows] = React.useState([])\n  const [selected, setSelected] = React.useState()\n  const [debounce, setDebounce] = React.useState(null)\n  const [colFilters, setColFilters] = React.useState({})\n  const [loading, setLoading] = React.useState(false)\n\n  React.useEffect(() => {\n    setApiData(state => ({ ...state, search: allSearch }), fetchData(allSearch))\n  }, [])\n\n  React.useEffect(() => {\n    const order = apiData.order.split(' ')\n    let _rows = lodash.orderBy(apiData.rows, [order[0]], [order[1]])\n    _rows = translateRows(_rows)\n    _rows = filterData(_rows)\n    setFinalRows(_rows)\n  }, [apiData.rows, apiData.order, colFilters])\n\n  const fetchData = search => {\n    if (search === '') return\n    setLoading(true)\n    let fields = {}\n    for (const col of columns) {\n      fields[col.id] = true\n    }\n    const order = apiData.order === '' ? `${columns[0].id} asc` : apiData.order\n    setApiData(state => ({ ...state, rows: [], order }))\n    let fetches = []\n    for (const field of allSearchFields) {\n      fetches.push(\n        new Promise((resolve, reject) => {\n          service({\n            where: { [field.id]: { value: search, match: field.match } },\n            order,\n            fields,\n            limit: apiData.limit\n          }).then(res => resolve(res))\n        })\n      )\n    }\n    Promise.all(fetches).then(responses => {\n      for (const res of responses) {\n        if (!res) return\n        const { data } = res.data\n        setApiData(state => ({ ...state, rows: [...state.rows, ...data[mode]] }))\n      }\n      setLoading(false)\n    })\n  }\n\n  const translateRows = rows => {\n    return rows.map(row => columns.map((col, colIdx) => col.value(row)))\n  }\n\n  const revertRow = row => {\n    if (!row) return\n    const _row = {}\n    for (const [index, cell] of Object.entries(row)) {\n      _row[columns[index].id] = cell\n    }\n    return _row\n  }\n\n  const filterData = rows => {\n    let _rows = rows\n    // _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, filters.all)).some(val => val))\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!colFilters[index]) return true\n            return includesAny(`${col}`, colFilters[index])\n          })\n          .some(val => val === false)\n    )\n    return _rows\n  }\n\n  const renderRows = rows => {\n    if (!rows) return\n    return rows.map((row, index) => (\n      <TableRow\n        id={`member-row-${index}`}\n        key={`member-${index}`}\n        hover\n        role='checkbox'\n        tabIndex={-1}\n        className={selected && selected[0] === row[0] ? classes.selected : classes['default-override']}\n      >\n        {columns.map((col, colIdx) => (\n          <TableCell key={`${col.id}-${colIdx}`} id={`${col.id}-${colIdx}`} onClick={() => handleItemClick(row)}>\n            {row[colIdx]}\n          </TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const handleOnSort = id => {\n    const [, direction] = apiData.order.split(' ')\n    setApiData(state => ({ ...state, order: `${id} ${direction !== 'asc' ? 'asc' : 'desc'}` }))\n  }\n\n  const handleColumnFilter = ({ id, index, value }) => {\n    setColFilters(state => ({ ...state, [index]: value }))\n  }\n\n  const handleItemClick = row => {\n    if (!selected) setSelected(row)\n    else if (row[0] === selected[0]) setSelected()\n    else setSelected(row)\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.search}>\n        <SearchTextComponent\n          id='search'\n          value={apiData.search}\n          onChange={event => {\n            const search = event.target.value\n            setApiData(state => ({ ...state, search }))\n            clearTimeout(debounce)\n            setDebounce(\n              setTimeout(() => {\n                fetchData(search)\n              }, 500)\n            )\n          }}\n          placeholder={allSearchText}\n        />\n      </div>\n      <div className={classes.table}>\n        <LoadingIndicator loading={loading}>\n          <Table\n            TableContainerProps={{ style: { height: '300px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((cell, colIdx) => (\n                  <TableCell key={cell.id} id={cell.id}>\n                    <TableSortLabel\n                      active={apiData.order.split(' ')[0] === cell.id}\n                      direction={apiData.order.split(' ')[1] === 'asc' ? 'asc' : 'desc'}\n                      onClick={() => handleOnSort(cell.id)}\n                    >\n                      {cell.label}\n                    </TableSortLabel>\n                    <TextField\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFilter({\n                              id: cell.id,\n                              index: colIdx,\n                              value: search\n                            })\n                          }, 250)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={renderRows(finalRows)}\n            pagination={false}\n            // count={count}\n            // page={page}\n            // limit={limit}\n            // rowsPerPageOptions={rowsPerPageOptions}\n            // onChange={onPaginate}\n          />\n        </LoadingIndicator>\n      </div>\n      <div className={classes.footer}>\n        <Button\n          variant='contained'\n          color='primary'\n          id='select'\n          className='button-positive'\n          onClick={() => selected && onRecordSet(revertRow(selected))}\n        >\n          Select\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport MemberLookup from './ClientMemberLookup'\n\n// Styles\nimport classes from './ClientMemberModal.module.scss'\n\nexport default function ClientMemberModal (props) {\n  // Variables\n  const { show, title = '' } = props\n  // Services\n  // Events\n  // Callbacks\n  const { onClose } = props\n  // Local Variables\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={onClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { minHeight: '65vh' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <MemberLookup {...props} />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/client')\nexport default class CustomerCareService {\n  static getLoaDetails ({ approval_code }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa/approval/${approval_code}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n\n  static getUtilizationLoa ({ params }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa`,\n      method: 'GET',\n      params: {\n        filter: params\n      }\n    })\n  }\n\n  static getContractList ({ member_account_number }) {\n    return axios({\n      url: `api/customer-care/members/${member_account_number}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n}\n","const renameProp = (\n  oldProp,\n  newProp,\n  { [oldProp]: old, ...others }\n) => ({\n  [newProp]: old,\n  ...others\n})\n\nexport { renameProp }\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  const room_type = loa.room ? loa.room.length ? loa.room[0].room_type : '' : ''\n  const room_rate = loa.room ? loa.room.length ? loa.room[0].total_amount : '' : ''\n\n  // const room_type = loa.room ? loa.room[0].room_type : ''\n  // const room_rate = loa.room ? loa.room[0].total_amount : ''\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0] ? ((data[0].rooms || []).map(item => {\n        if (item.type.localeCompare(room_type, 'en', { sensitivity: 'base' }) === 0) {\n          dispatch(setClaimBaseDetails({ field: 'room_type', value: room_type.toUpperCase() }))\n          dispatch(setClaimBaseDetails({ field: 'room_rate', value: room_rate }))\n        }\n        return {\n          text: item.type,\n          value: item.type.toUpperCase(),\n          rate: item.rate\n        }\n      })) : []\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  console.log(common, loa)\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  if (diagnosis.length === 0) {\n    diagnosis.push({\n      description: primary_diagnosis,\n      code: primary_icd10_code,\n      primary: true\n    })\n  } else {\n    diagnosis.map((diag, i) => {\n      let primary = false\n      if (diag.icd10_code === primary_icd10_code) primary = true\n      diagnosis[i].primary = primary\n      diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n      diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n    })\n  }\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function Reimbursment ({ common, loa, dispatch, claim }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n  if (claim.reimbursement_type === 'InPatient') {\n    details = {\n      ...details,\n      room_type: loa.room ? loa.room[0].room_type : '',\n      room_rate: loa.room ? loa.room[0].total_amount : 0,\n      pro_id: '',\n      pro_name: ''\n    }\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    claim_source: '',\n    medicine_category: '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].tooth_number = procedures[i].tooth_numbers[0] || '' // Check if this should be an array :/\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_issued_date ? loa.date_issued_date : Date.now(),\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || [],\n    claim_remarks: loa.remarks || ''\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\nimport MedicalSupplies from './MedicalSupplies'\nimport Pharmacy from './Pharmacy'\nimport Dental from './Dental'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\n// import ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\n\nconst AutoFill = ({ loa, claim_type, claim }) => {\n  // const type = ClaimTypes[claim_type].other_name\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n\n  //* check if array\n  loa.procedures = loa.procedures ? Array.isArray(loa.procedures) ? loa.procedures : [] : []\n  loa.professional_fees = loa.professional_fees ? Array.isArray(loa.professional_fees) ? loa.professional_fees : [] : []\n  loa.hospital_items = loa.hospital_items ? Array.isArray(loa.hospital_items) ? loa.hospital_items : [] : []\n\n  switch (claim_type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch, claim })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n    case 'MedicalSupplies':\n      MedicalSupplies({ common, loa, dispatch })\n      break\n    case 'Pharmacy':\n      Pharmacy({ common, loa, dispatch })\n      break\n    case 'Dental':\n      Dental({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport DiscrepancyBase from './..//DiscrepancyBase/DiscrepancyBase'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport CustomerCareService from 'Services/Api/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../../AutoFill'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\n// import ReimbursementTypes from 'Constant/reimbursementTypes'\n// Constants\nimport ClaimTypes from '../../../../Constant/ClaimTypes'\n\n// On Init\n// const reimbursementTypes = ReimbursementTypes.dropdown()\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } = actions\n\nexport default function BaseDetails (props) {\n  const {\n    onChange,\n    claim,\n    disableControls,\n    onChangeReimbursementType = () => {},\n    handleMemberAccountNumber,\n    permissions,\n    requiredFields = {\n      approval_code: true,\n      loa_number: true,\n      reimbursement_type: true\n    },\n    showReimbursement = false,\n    showApprovalCode = true,\n    showClaimSource = false,\n    showLoaNumber = true,\n    showCompany = false,\n    isDental = false,\n    showMemberAccountNumber = true,\n    isCM = false\n  } = props\n\n  const dispatch = useDispatch()\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const errors = useSelector(({ ClaimsAnalysis: state }) => state.error)\n\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [contractPlanTypeLoading, setContractPlanTypeLoading] = React.useState(false)\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getMemberContractPlanType({ account_number: member_id })\n      .then(res => {\n        const { data } = res.data\n        onChange({ field: 'contract_plan_type', value: data.contract_plan_type })\n      })\n      .catch(err => {\n        console.log(err.response)\n        onChange({ field: 'contract_plan_type', value: '' })\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getClientrContractPlanType({ account_number: corporate_account_no })\n      .then(res => {\n        const { data } = res.data\n        onChange({ field: 'contract_plan_type', value: data.contract_plan_type })\n      })\n      .catch(err => {\n        console.log(err.response)\n        onChange({ field: 'contract_plan_type', value: '' })\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  const handleLoaDetails = event => {\n    const { value } = event.target\n    if (value) {\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value }).then(res => {\n        const loa = res.data\n        if (loa) {\n          try {\n            AutoFill({\n              loa,\n              claim_type,\n              claim\n            })\n          } catch (error) {\n            LoadingService.loading(false)\n          }\n        }\n        LoadingService.loading(false)\n      }).finally(() => {\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {permissions.read && !isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-approval-code'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.approval_code\n                  }}\n                >\n                  <TextField\n                    id='approval-code'\n                    required={!!requiredFields.approval_code}\n                    label='Approval Code'\n                    placeholder={claim.approval_code || 'Pending'}\n                    value={claim.approval_code}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                    onBlur={handleLoaDetails}\n                    error={errors.approval_code}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-loa-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.loa_number\n                  }}\n                >\n                  <TextField\n                    id='loa-number'\n                    required={!!requiredFields.loa_number}\n                    label='LOA No.'\n                    placeholder={claim.loa_number || 'Pending'}\n                    value={claim.loa_number}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                    error={errors.loa_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  readOnly\n                />\n              </LoadingIndicator>\n            </div>\n\n            {showReimbursement && (\n              <div className={classes.input}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  required={!!requiredFields.reimbursement_type}\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n\n            {showClaimSource && (\n              <div className={classes.input}>\n                <TextField\n                  id='claim-source'\n                  label='Claim Source'\n                  required\n                  value={claim.claim_source}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n                  error={errors.claim_source}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n          </div>\n          {showCompany && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-customer-account-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.client_account_number\n                  }}\n                >\n                  <TextField\n                    id='company-account-number'\n                    label='Customer Account Number'\n                    value={claim.client_account_number}\n                    disabled={disableControls}\n                    required\n                    onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                    error={errors.client_account_number}\n                    readOnly={!permissions.update}\n                  />\n                  {permissions.update && (\n                    <div className={classes.search}>\n                      <Button\n                        id='client-account-number-search'\n                        variant='outlined'\n                        className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                        onClick={handleOnClickClientLookup}\n                      >\n                        <SearchIcon />\n                      </Button>\n                    </div>\n                  )}\n                </DiscrepancyBase>\n              </div>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-company-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.client_account_name\n                  }}\n                >\n                  <TextField\n                    id='company-name'\n                    label='Company Name'\n                    value={claim.client_account_name}\n                    disabled={disableControls}\n                    required\n                    onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                    error={errors.client_account_name}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            {showMemberAccountNumber && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-member-account-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.member_account_number\n                  }}\n                >\n                  <TextField\n                    id='member-account-number'\n                    required\n                    label='Member Account No.'\n                    value={claim.member_account_number}\n                    disabled={disableControls}\n                    onChange={event =>\n                      onChange({\n                        field: 'member_account_number',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.member_account_number}\n                    readOnly={!permissions.update}\n                  />\n                  {permissions.update && (\n                    <div className={classes.search}>\n                      <Button\n                        id='member-account-number-search'\n                        variant='outlined'\n                        className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                        onClick={handleOnClickMemberLookup}\n                      >\n                        <SearchIcon />\n                      </Button>\n                    </div>\n                  )}\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-last-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_last_name\n                }}\n              >\n                <TextField\n                  id='member-last-name'\n                  required\n                  label='Member Last Name'\n                  value={claim.member_last_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                  error={errors.member_last_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-first-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_first_name\n                }}\n              >\n                <TextField\n                  id='member-first-name'\n                  required\n                  label='Member First Name'\n                  value={claim.member_first_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_first_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_first_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-middle-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_middle_name\n                }}\n              >\n                <TextField\n                  id='member-middle-name'\n                  required={!!isDental}\n                  label='Member Middle Name'\n                  value={claim.member_middle_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_middle_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_middle_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {permissions.read && isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-client-account-number'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.client_account_number\n                }}\n              >\n                <TextField\n                  id='client-account-number'\n                  label='Client Account Number'\n                  value={claim.client_account_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                  error={errors.client_account_number}\n                  readOnly={!permissions.update}\n                />\n                {permissions.update && (\n                  <div className={classes.search}>\n                    <Button\n                      id='client-account-number-search'\n                      variant='outlined'\n                      className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                      onClick={handleOnClickClientLookup}\n                    >\n                      <SearchIcon />\n                    </Button>\n                  </div>\n                )}\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-client-account-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.client_account_number\n                }}\n              >\n                <TextField\n                  id='client-account-name'\n                  label='Client Account Name'\n                  value={claim.client_account_name}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'client_account_name'\n                      })\n                    )\n                  }\n                  error={errors.client_account_number}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  disabled\n                />\n              </LoadingIndicator>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <AutoFillInitializer />\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n// Compoments\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = props => {\n  const { children } = props\n  return <div className={classes.root}>{children}</div>\n}\n\nconst ICDTextField = props => {\n  const {\n    required,\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    onDeleteDiagnosis,\n    error = { description: '', code: '' },\n    permissions,\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.delete}>\n          {''}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary {required && ' *'}\n        </Typography>\n      </div>\n      <div className={classes['sub-wrapper']}>\n        <div className={classes.delete}>\n          {permissions.delete && (\n            <IconButton id='delete-icd' onClick={index => onDeleteDiagnosis({ index })}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          )}\n        </div>\n\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions.description}\n              field={'description'}\n              loading={fetching['description']}\n              onChange={onChangeDescription}\n              error={error.description}\n              readOnly={!permissions.update}\n            />\n          </div>\n        </Tooltip>\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions.code}\n            field={'code'}\n            loading={fetching['code']}\n            onChange={onChangeCode}\n            error={error.code}\n            readOnly={!permissions.update}\n          />\n        </div>\n        <div className={classes.primary}>\n          <Radio color='primary' checked={primary} onClick={onChangePrimary} disabled={!permissions.update} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst GivenDiagnosisField = props => {\n  const {\n    required,\n    id = '',\n    givenDiag = '',\n    suggestions = { description: [], code: [] },\n    onChangeGivenDiag,\n    error = { description: '', code: '' },\n    permissions,\n    fetching = {}\n  } = props\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          <Typography variant='subtitle2' className={classes.delete}>\n            {''}\n          </Typography>\n          <Typography variant='subtitle2' className={classes.description}>\n            Given Diagnosis {required && ' *'}\n          </Typography>\n        </div>\n        <div className={classes['given-diagnosis']}>\n          <AutoComplete\n            id={`given-${id}`}\n            value={givenDiag}\n            suggestions={suggestions.given_diagnosis}\n            field={'given_diagnosis'}\n            loading={fetching['given_diagnosis']}\n            onChange={onChangeGivenDiag}\n            error={error.given_diagnosis}\n            readOnly={!permissions.update}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField, GivenDiagnosisField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Components\n\nimport { ICDTextFields, ICDTextField, GivenDiagnosisField } from '../ICDTextField/ICDTextField'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  resetSuggestion,\n  setSuggestion,\n  setError\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, error, permissions, id } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n\n  const [debounce, setDebounce] = React.useState(null)\n  const [fetching, setFetching] = React.useState([\n    {\n      given_diagnosis: false,\n      description: false,\n      code: false\n    }\n  ])\n\n  const handleOnClickAddDiagnosis = (defaultBehaviour = true) => {\n    const lastEntry = items.length !== 0 ? items[items.length - 1] : null\n    if (defaultBehaviour && lastEntry && (!lastEntry.code.length || !lastEntry.description.length)) {\n      return false\n    }\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnConfirmDelete = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    setOpenDeleteDialog({ show: false, index: null })\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(setError({ diagnosis: {} }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n    if (items.length === 1 && index !== null) {\n      handleOnClickAddDiagnosis(false)\n    }\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, search, index } = args\n    if (search) {\n      dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'icd10', index }))\n      getIcd10Suggestions({ value, by: field, index, synonym: field === 'given_diagnosis' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setClaimDiagnosis({\n          index,\n          data: { description: _value.description, code: _value.code }\n        })\n      )\n      // if (field === 'given_diagnosis') {\n      //   getIcd10Suggestions({ value, by: field, index, synonym: true })\n      // }\n    }\n  }\n\n  const getIcd10Suggestions = ({ value = '', by, index, synonym = false }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setFetching(state => ({ ...state, [index]: { ...state[index], [by]: true } }))\n        if (value) {\n          if (by === 'given_diagnosis') {\n            ClaimsAdjudicationServices.getICDSynonyms({ query: value })\n              .then(res => {\n                const { data } = res.data\n                console.log('fetched', data)\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          } else {\n            IcdCptStorageServices.lookups({\n              on: 'icd-10',\n              params: { query: value, by }\n            })\n              .then(res => {\n                const { data } = res.data\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          }\n        }\n      }, 500)\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.groups} id={id}>\n          <div className={`${classes['diagnosis-list']} ${error['list'] && classes['has-error']}`}>\n            <Typography variant='h6' className={classes.title}>\n              Diagnosis List\n            </Typography>\n            <ICDTextFields>\n              {items.map((item, index) => (\n                <React.Fragment key={`diagnosis-${index}`}>\n                  {/* // Given Diagnosis */}\n                  <DiscrepancyBase\n                    id={`dp-icd-description-${index}`}\n                    key={`icd-given-${index}`}\n                    discrepancy={{\n                      result: discrepancy.diagnosis[index]\n                    }}\n                    showIcon={false}\n                    retainSpace\n                    noMargin\n                    className={classes.discrepancy}\n                  >\n                    <GivenDiagnosisField\n                      required\n                      id={`given-diagnosis-${index}`}\n                      givenDiag={item.given_diagnosis}\n                      onChangeGivenDiag={(value, search) =>\n                        handleOnChangeIcd10({ field: 'given_diagnosis', index, value, search })\n                      }\n                      fetching={fetching[index]}\n                      permissions={permissions}\n                      suggestions={suggestions}\n                      error={error && error.items && error.items[index]}\n                    />\n                  </DiscrepancyBase>\n                  <DiscrepancyBase\n                    id={`dp-icd-description-${index}`}\n                    key={`icd-${index}`}\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.diagnosis[index]\n                    }}\n                    retainSpace\n                    noMargin\n                    className={classes.discrepancy}\n                  >\n                    <ICDTextField\n                      required\n                      key={`icd-${index} ${error[index]}`}\n                      id={`icd-description-${index}`}\n                      codeId={`icd-code-${index}`}\n                      error={error && error.items && error.items[index]}\n                      description={item.description}\n                      suggestions={suggestions}\n                      code={item.code}\n                      primary={item.primary}\n                      onChangeDescription={(value, search) =>\n                        handleOnChangeIcd10({ field: 'description', index, value, search })\n                      }\n                      onChangeCode={(value, search) => handleOnChangeIcd10({ field: 'code', index, value, search })}\n                      onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                      onDeleteDiagnosis={() => handleOnConfirmDelete(index)}\n                      fetching={fetching[index]}\n                      permissions={permissions}\n                    />\n                  </DiscrepancyBase>\n                </React.Fragment>\n              ))}\n            </ICDTextFields>\n            {permissions.create && (\n              <Button\n                id='add-diagnosis-button'\n                className={classes['add-diagnosis-button']}\n                onClick={handleOnClickAddDiagnosis}\n              >\n                + Add a diagnosis\n              </Button>\n            )}\n          </div>\n          {error.error && <span className={classes.error}>{error.list}</span>}\n          <Alert\n            open={openDeleteDialog.show}\n            message='Are you sure you want to delete this diagnosis?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n            onOk={() => handleOnRemoveDiagnosis(openDeleteDialog.index)}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './CustomTable.module.scss'\n\nconst Table = ({ children }) => {\n  const _children = React.Children.toArray(children)\n\n  const headers = []\n  const body = []\n  _children.filter((item, index) => {\n    if (item.type.displayName === 'TableHeader') {\n      headers.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n\n    if (item.type.displayName === 'TableBody') {\n      body.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n  })\n\n  return (\n    <table className={classes.table}>\n      {headers}\n      {body}\n    </table>\n  )\n}\n\nconst TableHeader = ({ items = [] }) => {\n  return (\n    <thead>\n      <tr>\n        {items.map((i, index) => (\n          <th key={i.name} style={{ width: `${i.width}px`, textAlign: i.align }}>\n            {i.name}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\nTableHeader.displayName = 'TableHeader'\n\nconst TableBody = ({ children }) => {\n  return <tbody>{children}</tbody>\n}\nTableBody.displayName = 'TableBody'\n\nconst TableRow = ({ children, className, onClick, expanded, id }) => {\n  const _children = React.Children.toArray(children)\n  // const [open, setOpen] = React.useState(expanded)\n  const [expandable, setExpandable] = React.useState([])\n  const [cells, setCells] = React.useState([])\n\n  React.useEffect(() => {\n    _children.filter((item, index) => {\n      if (item.type === 'td') {\n        setCells(state => [\n          ...state,\n          React.cloneElement(item, {\n            key: index\n          })\n        ])\n      }\n\n      if (item.type) {\n        if (item.type.displayName === 'TableRowExpandable') {\n          setExpandable(state => [\n            ...state,\n            React.cloneElement(item, {\n              key: index\n            })\n          ])\n        }\n      }\n    })\n  }, [])\n\n  const handleOnClick = () => {\n    // setOpen(!open)\n    if (typeof onClick === 'function') onClick()\n  }\n\n  return (\n    <React.Fragment>\n      <tr id={id} onClick={handleOnClick} className={className}>\n        {cells}\n      </tr>\n      <tr id={id} className={classes.expandable}>\n        <td colSpan={cells.length}>\n          <div className={`${classes.container} ${expanded ? classes.open : ''}`}>\n            <div className={classes.content}>{expandable}</div>\n          </div>\n        </td>\n      </tr>\n    </React.Fragment>\n  )\n}\nTableRow.displayName = 'TableRow'\n\nconst TableRowExpandable = ({ children }) => {\n  return children\n}\nTableRowExpandable.displayName = 'TableRowExpandable'\n\nexport { Table, TableHeader, TableBody, TableRow, TableRowExpandable }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProcedure,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function ProcedureForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    isDental,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = procedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeCpt = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProcedure({ details: { [field]: value } }))\n      // const { 1: by } = field.split('_')\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      getCptSuggestions({ value, by: field })\n    } else {\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      const _value = value || {}\n      return dispatch(\n        setProcedure({\n          details: { description: _value.description, code: _value.code }\n        })\n      )\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProcedure({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n\n  // ***** FETCHING\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'cpt',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    )\n  }\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ data: procedure.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProcedure(procedure.details))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ data: procedure.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProcedure({ index, details: procedure.details }))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProcedure({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Procedure Form')} */}\n      {/* {console.log('Data', procedure)} */}\n      {/* {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', procedure.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {procedure.show && procedure.index === index && (\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={procedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_given_diagnosis}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={procedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={procedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-description'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { code: discrepancy.code, description: discrepancy.description }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    id={`procedure-description-autocomplete`}\n                    required\n                    label={'Procedure Details'}\n                    value={procedure.details.description}\n                    suggestions={suggestions.cpt}\n                    field={'description'}\n                    onChange={(value, search) =>\n                      handleOnChangeCpt({\n                        field: 'description',\n                        value,\n                        search\n                      })\n                    }\n                    error={_errors.description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n\n                <div className={classes.code}>\n                  <AutoComplete\n                    id={`procedure-code-autocomplete`}\n                    required\n                    label={'CPT Code'}\n                    value={procedure.details.code}\n                    suggestions={suggestions.cpt}\n                    field={'code'}\n                    onChange={(value, search) => handleOnChangeCpt({ field: 'code', value, search })}\n                    error={_errors.code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {isDental && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-tooth-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.tooth_number\n                  }}\n                  autoWidth\n                >\n                  <Typography variant='subtitle2' className={classes['label']}>\n                    {`Tooth Number *`}\n                  </Typography>\n                  <TextField\n                    id='tooth-number'\n                    value={procedure.details.tooth_number}\n                    onChange={event => {\n                      handleOnChange({\n                        field: 'tooth_number',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.tooth_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={procedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={procedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='procedure-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={procedure.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={procedure.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={procedure.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={procedure.details.amount_not_covered > 0}\n                      disableComponents={procedure.details.amount_not_covered === 0}\n                      value={procedure.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={procedure.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={procedure.details.amount_due_from_member > 0}\n                      disableComponents={procedure.details.amount_due_from_member === 0}\n                      value={procedure.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={procedure.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={procedure.details.amount_due_from_client > 0}\n                      disableComponents={procedure.details.amount_due_from_client === 0}\n                      value={procedure.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(procedure.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='procedure-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(procedure.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`procedure-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(procedure.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this procedure?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(procedure.index)}\n      />\n    </React.Fragment>\n  )\n}\n","const Item = item => {\n  // fields from Encoder\n  const { gross_amount = 0, vat_amount = 0, amount_paid_by_member = 0, philhealth_amount_paid = 0 } = item\n  // fields from Analyst\n  const { amount_not_covered = 0 } = item\n  // , amount_due_from_member = 0, amount_due_from_client = 0\n\n  return (\n    parseFloat(gross_amount) +\n    parseFloat(vat_amount) -\n    (parseFloat(amount_not_covered) + parseFloat(philhealth_amount_paid) + parseFloat(amount_paid_by_member))\n  )\n}\n\nconst List = items => {\n  return items.reduce((current, item) => current + Item(item), 0)\n}\n\nconst Grand = lineItems => {\n  const { procedures, dental_procedures, hospital_items, professional_fees } = lineItems || {}\n  let grand = 0\n  if (procedures) grand += List(procedures)\n  if (dental_procedures) grand += List(dental_procedures)\n  if (hospital_items) grand += List(hospital_items)\n  if (professional_fees) grand += List(professional_fees)\n  return grand\n}\n\nexport default { Item, List, Grand }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.procedure)\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.procedure)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProcedure({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-procedure'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProcedure({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Procedure\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Procedure List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${procedure ? procedure.show : ''}`}\n                id={`procedure-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={procedure.index === index ? procedure.show : false}\n              >\n                <td\n                  id={`procedure-row-description-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.description}\n                </td>\n                <td\n                  id={`procedure-row-code-${index}`}\n                  className={`${classes.align} ${classes.center}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.code}\n                </td>\n                <td\n                  id={`procedure-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {procedure.mode === 'add' && (\n              <TableRow\n                key={`add ${procedure ? procedure.show : ''} `}\n                id={`procedure-add`}\n                className={`${classes['row']}`}\n                expanded={procedure.mode === 'add' ? procedure.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'procedure-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setHospitalItem,\n  resetSuggestion,\n  setSuggestion,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetError\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthRemarks = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false,\n    name: false,\n    item_code: false\n  })\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = hospitalItem.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeHospitalItem = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setHospitalItem({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setHospitalItem({\n          details: {\n            id: _value.id,\n            name: _value.name,\n            item_code: _value.item_code\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n  // ***** FETCHING\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'hospitalItem',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ data: hospitalItem.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimHospitalItem(hospitalItem.details))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ data: hospitalItem.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimHospitalItem({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOCancel = index => {\n    dispatch(resetError({ index }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Hospital Item Form')} */}\n      {/* {console.log('Data', hospitalItem)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', hospitalItem.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {hospitalItem.show && hospitalItem.index === index && (\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={hospitalItem.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_given_diagnosis}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={hospitalItem.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    readOnly={!permissions.update}\n                    error={_errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={hospitalItem.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    readOnly={!permissions.update}\n                    error={_errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospital-item'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { item_code: discrepancy.item_code, name: discrepancy.name }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    label={'Item Name'}\n                    required\n                    id={`hospital-item-name`}\n                    value={hospitalItem.details.name}\n                    suggestions={suggestions.hospitalItem}\n                    field={'name'}\n                    onChange={(value, search) => handleOnChangeHospitalItem({ field: 'name', value, search })}\n                    error={_errors.name}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.code}>\n                  <AutoComplete\n                    label={'Item Code'}\n                    required\n                    id={`hospital-item-code`}\n                    value={hospitalItem.details.item_code}\n                    suggestions={suggestions.hospitalItem}\n                    field={'item_code'}\n                    onChange={(value, search) => handleOnChangeHospitalItem({ field: 'item_code', value, search })}\n                    error={_errors.item_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={hospitalItem.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-vat-amount'\n                  label='VAT Amount'\n                  value={hospitalItem.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospitalItem-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='hospital-item-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={hospitalItem.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-philhealth-amount-paid'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_amount_paid\n                }}\n              >\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={hospitalItem.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_amount_paid}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={hospitalItem.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n          </div>\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={hospitalItem.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={hospitalItem.details.amount_not_covered > 0}\n                      disableComponents={hospitalItem.details.amount_not_covered === 0}\n                      value={hospitalItem.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={hospitalItem.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={hospitalItem.details.amount_due_from_member > 0}\n                      disableComponents={hospitalItem.details.amount_due_from_member === 0}\n                      value={hospitalItem.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={hospitalItem.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={hospitalItem.details.amount_due_from_client > 0}\n                      disableComponents={hospitalItem.details.amount_due_from_client === 0}\n                      value={hospitalItem.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnSave(hospitalItem.index)}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {hospitalItem.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='hospital-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(hospitalItem.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`hospital-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOCancel(hospitalItem.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this hospital item?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(hospitalItem.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setHospitalItem } = actions\n\nexport default function HospitalItemList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.hospital_item)\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.hospital_item)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setHospitalItem({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-hospital-item'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setHospitalItem({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Items\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Hospital List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', hospitalItem)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospital-item-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={hospitalItem.index === index ? hospitalItem.show : false}\n              >\n                <td id={`hospital-item-row-name-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>\n                  {i.name}\n                </td>\n                <td\n                  id={`hospital-item-row-code${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                  className={`${classes.align} ${classes.center}`}\n                >\n                  {i.item_code}\n                </td>\n                <td\n                  id={`hospital-item-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {hospitalItem.mode === 'add' && (\n              <TableRow\n                key={`add ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospitalItem-add`}\n                className={`${classes['row']}`}\n                expanded={hospitalItem.mode === 'add' ? hospitalItem.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'hospital-item-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProfessionalFee,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setError\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = professionalFee.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            doctor_id: _value.id,\n            doctor_name: _value.full_name,\n            specialization: _value.specialization.main + ', ' + _value.specialization.major\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeSpecialization = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'specialization' }))\n      getSpecializationSuggestions({ value, by: 'description' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            specialization: _value.description\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'specialization' }))\n    }\n  }\n\n  // ***** FETCHING\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'pfDoctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const getSpecializationSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getDoctorSpecilizations({ data: value })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'specialization',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ data: professionalFee.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProfessionalFee(professionalFee.details))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ data: professionalFee.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('ProfessionalFee Form')} */}\n      {/* {console.log('Data', professionalFee)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', professionalFee.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {professionalFee.show && professionalFee.index === index && (\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={professionalFee.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_given_diagnosis}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={professionalFee.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={professionalFee.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-medical-partner-id'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_id\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={professionalFee.details.doctor_id}\n                  suggestions={pfSuggestions.pfDoctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_id', value, search })}\n                  error={_errors.doctor_id}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-doctor-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_name\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-doctor-name'\n                  required\n                  label='Doctor Name'\n                  value={professionalFee.details.doctor_name}\n                  suggestions={pfSuggestions.pfDoctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_name', value, search })}\n                  error={_errors.doctor_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-specialization'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.specialization\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-specialization'\n                  required\n                  label='Specialization'\n                  value={professionalFee.details.specialization}\n                  suggestions={pfSuggestions.specialization}\n                  field={'description'}\n                  loading={fetching['description']}\n                  onChange={(value, search) => handleOnChangeSpecialization({ field: 'specialization', value, search })}\n                  error={_errors.specialization}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={professionalFee.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-vat-amount'\n                  label='VAT Amount'\n                  value={professionalFee.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-professional-fee-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='professional-fee-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={professionalFee.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={professionalFee.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={professionalFee.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={professionalFee.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={professionalFee.details.amount_not_covered > 0}\n                      disableComponents={professionalFee.details.amount_not_covered === 0}\n                      value={professionalFee.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={professionalFee.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={professionalFee.details.amount_due_from_member > 0}\n                      disableComponents={professionalFee.details.amount_due_from_member === 0}\n                      value={professionalFee.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={professionalFee.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={professionalFee.details.amount_due_from_client > 0}\n                      disableComponents={professionalFee.details.amount_due_from_client === 0}\n                      value={professionalFee.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {professionalFee.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='professional-fee-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(professionalFee.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`professional-fee-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(professionalFee.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this professional fee?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(professionalFee.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProfessionalFee } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.professional_fee)\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.professional_fee)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProfessionalFee({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-professional-fee'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProfessionalFee({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Professional Fee\n            </Typography>\n          )}\n        </div>\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Professional Fee List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${professionalFee ? professionalFee.show : ''}`}\n                id={`professional-fee-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={professionalFee.index === index ? professionalFee.show : false}\n              >\n                <td\n                  id={`professional-fee-row-doctor-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.doctor_name}\n                </td>\n                <td\n                  id={`professional-fee-row-specialization-${index}`}\n                  className={classes.specialization}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.specialization}\n                </td>\n                <td\n                  id={`professional-fee-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {professionalFee.mode === 'add' && (\n              <TableRow\n                key={`add ${professionalFee ? professionalFee.show : ''}`}\n                id={`professionalFee-add`}\n                className={`${classes['row']}`}\n                expanded={professionalFee.mode === 'add' ? professionalFee.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'professional-fee-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string().trim()\n    .label('Escalation Message')\n    .messages({ 'string.empty': `Please enter reason of escalation.` })\n    .required(),\n  assignee: Joi.string().trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' }),\n  assignee: Joi.string()\n    .trim()\n    .label('Assignee')\n    .required()\n    .messages({ 'string.empty': 'Please select a name from the Assigned To field.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport Button from '@material-ui/core/Button'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\n// Validations\nimport EscalateValidator from './EscalateValidator'\nimport ReconValidator from './ReconValidator'\nimport ReturnValidator from './ReturnValidator'\n\n// lodash\nimport { sortBy } from 'lodash'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  resetEscalation,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetReassign,\n  setReassignMessage,\n  setReassignAssignee,\n  resetReturn,\n  setReturnNote\n} = actions\n\nexport default function ClaimFooter (props) {\n  // Events\n  const {\n    doValidate,\n    onReject,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReassign,\n    onSave,\n    onEscalate,\n    onApprove,\n    onCancel,\n    isReimbursement,\n    onRemove,\n    onViewClaimNotice,\n    onReturn\n  } = props\n  // Variables\n  const { disabled, permissions, reimbursement_info = [] } = props\n  // Services\n  const { grandTotal, claimType, userManagementService = () => {} } = props\n\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n  const c_return = useSelector(({ ClaimsAnalysis: state }) => state.return)\n  const rejectStatus = useSelector(({ ClaimsAnalysis: state }) => state.rejectStatus)\n\n  const [escalateModal, setEscalateModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [reassignModal, setReassignModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [returnModal, setReturnModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [discrepancyModal, setDiscrepancyModal] = React.useState(false)\n  const [approveModal, setApproveModal] = React.useState({ message: '', show: false })\n  const [saveModal, setSaveModal] = React.useState(false)\n  const [cancelModal, setCancelModal] = React.useState(false)\n  const [removeModal, setRemoveModal] = React.useState(false)\n  const [validateModal, setValidateModal] = React.useState(false)\n\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  const [escalationErrors, setEscalationErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [returnError, setReturnErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n  // Init functions\n  const initDropdownUsers = async ({ roles }) => {\n    userManagementService.getUsersByRole(roles[0]).then(({ data }) => {\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  // Validators\n  const doValidateEscalation = () => {\n    const { error } = EscalateValidator({\n      message: escalations.message,\n      assignee: escalations.assignee.id\n    })\n\n    setEscalationErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReturn = () => {\n    const { error } = ReturnValidator({\n      message: c_return.note\n    })\n\n    setReturnErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReassign = () => {\n    const { error } = ReconValidator({\n      message: reassign.message,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  // UI Functions\n  const handleEscalateDialog = () => {\n    dispatch(resetEscalation())\n    initDropdownUsers({ roles: permissions.escalate.options.roles })\n    setEscalationErrors({ message: '', assignee: '' })\n    dispatch(setEscalationMessage(''))\n    setEscalateModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleReassignDialog = () => {\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: permissions.reassign.options.roles })\n    setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignMessage(''))\n    setReassignModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowReturnDialog = () => {\n    dispatch(resetReturn())\n    setReassignErrors({ message: '' })\n    dispatch(setReturnNote(''))\n    setReturnModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowApprovalMatrix = ({ skip = false }) => {\n    const { AuthorityMatrix } = permissions.approve.options\n\n    if (AuthorityMatrix) {\n      const { other_types } = AuthorityMatrix\n\n      const selected_amount = AuthorityMatrix[claimType] === undefined ? other_types : AuthorityMatrix[claimType]\n\n      if (grandTotal > selected_amount) {\n        setApproveModal({\n          show: true,\n          message:\n            'The billed amount to be approved is higher than the threshold. Are you sure you want to approve this claim?'\n        })\n      } else {\n        if (!skip) {\n          setApproveModal({ show: true, message: 'Are you sure you want to approve the claim?' })\n        } else {\n          onApprove({ goBack: false })\n        }\n      }\n    } else {\n      onApprove({ goBack: false })\n    }\n\n    return true\n  }\n\n  const handleOnApproval = () => {\n    const { diagnosis, procedure, hospital_item, professional_fee, ...others } = discrepancy\n\n    if (\n      Object.keys(diagnosis).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      Object.entries(others).find(([key, value]) => value.length > 0)\n    ) {\n      setDiscrepancyModal(true)\n      return false\n    }\n\n    handleOnShowApprovalMatrix({ skip: false })\n    return true\n  }\n\n  const doValidateMiddleware = () => {\n    if (doValidate()) {\n      setValidateModal(true)\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.left}>\n        {SafeAccess(permissions.return_advice, ['visible']) && reimbursement_info.length > 1 && (\n          <Button\n            id='btn-return-advice'\n            variant='contained'\n            color='secondary'\n            className='button-positive'\n            onClick={() => onViewClaimNotice({ goBack: false })}\n            disabled={disabled && permissions.analysis_sheet.enabled}\n          >\n            Return Advice\n          </Button>\n        )}\n      </div>\n      <div className={classes.center} />\n      <div className={classes.right}>\n        {permissions.visible && (\n          <React.Fragment>\n            {SafeAccess(permissions.analysis_sheet, ['visible']) && (\n              <Button\n                id='btn-view-analysis'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                // onClick={() => !doValidateMiddleware() && onViewAnalysisSheet({ goBack: false })}\n                onClick={() => onViewAnalysisSheet({ goBack: false })}\n                disabled={disabled && permissions.analysis_sheet.enabled}\n              >\n                View Analysis Sheet\n              </Button>\n            )}\n            {SafeAccess(permissions.letter_of_advice, ['visible']) && (\n              <Button\n                id='btn-view-loa'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                // onClick={() => !doValidateMiddleware() && onViewLetterOfAdvice({ goBack: false })}\n                onClick={() => onViewLetterOfAdvice({ goBack: false })}\n                disabled={disabled && permissions.letter_of_advice.enabled}\n              >\n                View Letter of Advice\n              </Button>\n            )}\n            {SafeAccess(permissions.escalate, ['visible']) && (\n              <Button\n                id='btn-escalate'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleEscalateDialog()}\n                disabled={disabled && permissions.escalate.enabled}\n              >\n                Escalate\n              </Button>\n            )}\n            {SafeAccess(permissions.reject, ['visible']) && (\n              <Button\n                id='btn-reject'\n                variant='contained'\n                color='secondary'\n                onClick={() =>\n                  !doValidateMiddleware() && (isReimbursement ? onReject({ goBack: false }) : setRejectModal(true))\n                }\n                disabled={rejectStatus && !isReimbursement}\n              >\n                Reject\n              </Button>\n            )}\n            {SafeAccess(permissions.return, ['visible']) && (\n              <Button\n                id='btn-return'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => handleOnShowReturnDialog()}\n                disabled={disabled && permissions.return.enabled}\n              >\n                Return\n              </Button>\n            )}\n            {SafeAccess(permissions.approve, ['visible']) && (\n              <Button\n                id='approve'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleOnApproval()}\n                disabled={disabled && permissions.approve.enabled}\n              >\n                Approve\n              </Button>\n            )}\n            {SafeAccess(permissions.save, ['visible']) && (\n              <Button\n                id='save-for-now'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && setSaveModal(true)}\n                disabled={disabled && permissions.save.enabled}\n              >\n                Save for now\n              </Button>\n            )}\n            {SafeAccess(permissions.remove, ['visible']) && (\n              <Button\n                id='remove'\n                variant='contained'\n                color='secondary'\n                onClick={() => setRemoveModal(true)}\n                disabled={disabled && permissions.remove.enabled}\n              >\n                Remove\n              </Button>\n            )}\n            {SafeAccess(permissions, ['close']) ? (\n              <Button id='cancel' variant='contained' color='secondary' onClick={() => onCancel({ goBack: true })}>\n                Close\n              </Button>\n            ) : (\n              <Button id='cancel' variant='contained' color='secondary' onClick={() => setCancelModal(true)}>\n                Cancel\n              </Button>\n            )}\n            {SafeAccess(permissions.reassign, ['visible']) && (\n              <Button\n                id='btn-reassign'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => handleReassignDialog()}\n                disabled={disabled && permissions.reassign.enabled}\n              >\n                Reassign\n              </Button>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n      <div className={classes.modals}>\n        {SafeAccess(permissions.escalate, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={escalateModal.dialog}\n              className={classes.escalate}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reason For Escalation\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id='escalation-text'\n                    value={escalations.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                    error={escalationErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                    </Typography>\n                    <DropDown\n                      id='escalate-to'\n                      items={dropDownUsers}\n                      value={escalations.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setEscalationAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={escalationErrors.assignee}\n                      disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      id='escalate-cancel'\n                      onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() =>\n                        !doValidateEscalation() && setEscalateModal(state => ({ ...state, confirm: true }))\n                      }\n                      id='escalate-submit'\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={escalateModal.confirm}\n              message='Are you sure you want to escalate claim?'\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setEscalateModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setEscalateModal(state => ({ ...state, dialog: false, confirm: false }))\n                onEscalate({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reassign, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setReassignModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={reassignModal.dialog}\n              className={classes.reassign}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reassign\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={reassign.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setReassignMessage(event.target.value))}\n                    error={reassignErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      Assign To:\n                    </Typography>\n                    <DropDown\n                      id='reassign-to'\n                      items={dropDownUsers}\n                      value={reassign.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setReassignAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={reassignErrors.assignee}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => !doValidateReassign() && setReassignModal(state => ({ ...state, confirm: true }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={reassignModal.confirm}\n              message={\n                permissions.reassign && permissions.reassign.message\n                  ? permissions.reassign.message\n                  : 'Are you sure you want to re-assign claim?'\n              }\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setReassignModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setReassignModal(state => ({ ...state, dialog: false, confirm: false }))\n                onReassign({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.return, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setReturnModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={returnModal.dialog}\n              className={classes.return}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Notes\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setReturnModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={c_return.note}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setReturnNote(event.target.value))}\n                    error={returnError.message}\n                  />\n                </div>\n                <div className={classes.return}>\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setReturnModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => !doValidateReturn() && onReturn({ goBack: true })}\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Ok\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reject, ['enabled']) && (\n          <Alert\n            open={rejectModal}\n            message='Are you sure you want to reject this claim?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setRejectModal(false)}\n            onOk={() => {\n              setRejectModal(false)\n              onReject({ goBack: false })\n            }}\n          />\n        )}\n\n        {SafeAccess(permissions.approve, ['enabled']) && (\n          <Alert\n            open={discrepancyModal}\n            message={'There is a highlighted claim item for checking. Are you sure you want to approve the claim?'}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setDiscrepancyModal(false)}\n            onOk={() => {\n              setDiscrepancyModal(false)\n              handleOnShowApprovalMatrix({ skip: true })\n            }}\n          />\n        )}\n\n        {SafeAccess(permissions.approve, ['enabled']) && (\n          <Alert\n            open={approveModal.show}\n            message={approveModal.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setApproveModal({ show: false })}\n            onOk={() => {\n              setApproveModal({ show: false })\n              onApprove({ goBack: false })\n            }}\n          />\n        )}\n\n        <Alert\n          open={validateModal}\n          message='Please input all mandatory fields'\n          okLabel='Ok'\n          onOk={() => {\n            setValidateModal(false)\n          }}\n        />\n\n        <Alert\n          open={saveModal}\n          message='Are you sure you want to save the changes?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setSaveModal(false)}\n          onOk={() => {\n            setSaveModal(false)\n            onSave(true)\n          }}\n        />\n\n        <Alert\n          open={cancelModal}\n          message='Are you sure you want to cancel?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setCancelModal(false)}\n          onOk={() => {\n            setCancelModal(false)\n            onCancel({ goBack: true })\n          }}\n        />\n\n        <Alert\n          open={removeModal}\n          message='Are you sure you want to remove this claim?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setRemoveModal(false)}\n          onOk={() => {\n            setRemoveModal(false)\n            onRemove({ goBack: true })\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DisapprovedLabel.module.scss'\n\nexport default function DisapprovedLabel(props) {\n  // INIT\n  const { reasons, ...other } = props\n\n  // Breaking down props\n  let { id } = props\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  // FUNCTIONS\n\n  function generateMessage(results) {\n    if (typeof results === 'string') {\n      return '\\u2022 ' + results\n    } else if (typeof results === 'object') {\n      let message = ''\n      results.map((value, index) => {\n        message += '\\u2022 ' + value + '\\n'\n      })\n      return message.substring(0, message.length - 1)\n    }\n  }\n\n  const open = Boolean(anchorEl)\n  id = open ? 'simple-popover' : id\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n  return (\n    <React.Fragment>\n      {reasons && reasons.length > 0 ? (\n        <div className={`${classes[`root`]} ${reasons.length > 0 ? classes.disapproved : ''}`}>\n          <div id={id} className={`${classes[`input-wrapper`]}`}>\n            <Typography\n              id={props.id}\n              variant='h6'\n              className={`${classes.label} ${classes['read-only-value']}`}\n              {...other}\n            >\n              {props.value}\n            </Typography>\n            {reasons.length > 0 ? (\n              <div id={`container-${id}`} className={classes['icon-container']}>\n                <FontAwesomeIcon\n                  id={`exc-circle-${id}`}\n                  icon='exclamation-circle'\n                  className={classes.icon}\n                  onClick={handleClick} />\n                <Popover\n                  id={id}\n                  open={open}\n                  anchorEl={anchorEl}\n                  onClose={handleClose}\n                  anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'center',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n                    {generateMessage(reasons)}\n                  </Typography>\n                </Popover>\n              </div>\n            ) : (\n                ''\n              )}\n          </div>\n        </div>\n      ) : (\n          ''\n        )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport classes from './TextFieldSubmit.module.scss'\nexport default function TextFieldSubmit (props) {\n  const { label = '', required, readOnly, error, onSubmit, ...other } = props\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {props.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${error && classes['has-error']}`}>\n              <InputBase className={classes.input} {...other} autoComplete='no' />\n              <Button\n                className={`button-positive ${classes.submit}`}\n                onClick={onSubmit}\n                variant='contained'\n                color='primary'\n                autoFocus\n              >\n                Send\n              </Button>\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  comment: Joi.string()\n    .trim()\n    .label('Comment')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextFieldSubmit from 'SharedComponents/TextFieldSubmit/TextFieldSubmit'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ChatBox.module.scss'\n\n// Validator\nimport ExcalateValidator from './EscalateValidator'\n\nexport default function ChatBox (props) {\n  let {\n    messages = [],\n    title,\n    permissions,\n    placeholder = 'Compose Message',\n    confirmMessage = 'Are you sure you want to reply to the escalated claim?',\n    okLabel = 'Send',\n    cancelLabel = 'Cancel',\n    onSubmitComment = () => {},\n    confirm = false\n  } = props\n\n  if (permissions.options) {\n    confirmMessage = permissions.options.confirmMessage\n    okLabel = permissions.options.okLabel\n    cancelLabel = permissions.options.cancelLabel\n    confirm = permissions.options.confirm\n  }\n\n  let lastDate = ''\n\n  const [confirmSubmitDialog, setConfirmSubmitDialog] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [comment, setComment] = React.useState('')\n\n  const isMe = args => {\n    const user_id = localStorage.getItem('user_id')\n    return args._id === user_id\n  }\n\n  const doDateSplit = date => {\n    const sdate = DateFormatter(date)\n\n    if (lastDate !== sdate) {\n      lastDate = sdate\n      return true\n    }\n    return false\n  }\n\n  const doValidate = () => {\n    const { error } = ExcalateValidator({ comment })\n    if (error) {\n      setErrors(error)\n      return !!error\n    }\n  }\n\n  const doSubmit = () => {\n    if (confirm) setConfirmSubmitDialog(true)\n    else onSubmitComment(comment)\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.root}>\n          <Paper className={classes.wrapper}>\n            {title && (\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  {title}\n                </Typography>\n              </div>\n            )}\n\n            <div className={classes.body}>\n              {messages.length <= 0 ? (\n                <div className={classes.placeholder}>\n                  <Typography variant='subtitle2'>No Message</Typography>\n                </div>\n              ) : (\n                <div className={classes.messages}>\n                  {messages.map((m, index) => (\n                    <React.Fragment key={`${m.timestamp.object}`}>\n                      {doDateSplit(m.timestamp.object) && (\n                        <Typography variant='subtitle2' className={classes.split}>\n                          {DateFormatter(m.timestamp.object)}\n                        </Typography>\n                      )}\n                      <div\n                        key={`${index}`}\n                        className={`${classes.balloon} ${isMe(m.sender) ? classes.me : classes.receive} `}\n                      >\n                        <div className={classes.mheader}>\n                          <Typography variant='subtitle2' className={classes.sender}>\n                            {m.sender.username}\n                          </Typography>\n                          <Typography variant='subtitle2' className={classes.time}>\n                            {DateFormatter(m.timestamp.object, 'hh:mm A')}\n                          </Typography>\n                        </div>\n                        <div className={classes.mbody}>\n                          <Typography\n                            variant='subtitle2'\n                            style={{ whiteSpace: 'pre-line' }}\n                            className={classes.content}\n                          >\n                            {m.message}\n                          </Typography>\n                        </div>\n                      </div>\n                    </React.Fragment>\n                  ))}\n                </div>\n              )}\n            </div>\n            <div className={classes.action}>\n              {permissions.create && (\n                <div className={classes['comment-box']}>\n                  <TextFieldSubmit\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={comment}\n                    autoFocus\n                    fullWidth\n                    placeholder={placeholder}\n                    onChange={event => setComment(event.target.value)}\n                    onSubmit={event => !doValidate() && doSubmit()}\n                    error={errors.comment}\n                  />\n                </div>\n              )}\n            </div>\n          </Paper>\n          <Alert\n            open={confirmSubmitDialog}\n            message={confirmMessage}\n            cancelLabel={cancelLabel}\n            okLabel={okLabel}\n            onCancel={() => setConfirmSubmitDialog(false)}\n            onOk={() => {\n              setConfirmSubmitDialog(false)\n              onSubmitComment(comment)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './CustomTabs.module.scss'\n\nfunction TabPanel (props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      key={`tab-${index}`}\n      {...other}\n    >\n      <div>{children}</div>\n    </Typography>\n  )\n}\n\nconst CustomTabs = props => {\n  const { children, defaultIndex = 0, containerSyles = {} } = props\n  const [value, setValue] = React.useState(defaultIndex)\n\n  let items = React.Children.toArray(children)\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'CustomTab') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n  function handleChange (event, newValue) {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root} style={containerSyles}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor='primary'\n        textColor='primary'\n        variant='scrollable'\n        scrollButtons='auto'\n        aria-label='scrollable auto tabs example'\n        className={classes['header']}\n      >\n        {items.map((item, index) => (\n          <Tab\n            id={`${item.props.id}-control`}\n            key={`${item.props.label}-tab-label`}\n            className={classes['item']}\n            label={item.props.label}\n          />\n        ))}\n      </Tabs>\n\n      {items.map((item, index) => (\n        <TabPanel\n          id={item.props.id}\n          key={`${item.props.label}-tab-content`}\n          className={classes['panels']}\n          value={value}\n          index={index}\n        >\n          {item}\n        </TabPanel>\n      ))}\n    </div>\n  )\n}\n\nconst CustomTab = ({ children }) => {\n  return children\n}\nCustomTab.displayName = 'CustomTab'\n\nexport { CustomTabs, CustomTab }\n","import React from 'react'\n\n// Components\nimport TreeView from '@material-ui/lab/TreeView'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport TreeItem from '@material-ui/lab/TreeItem'\n\n// Styles\nimport classes from './SideBar.module.scss'\n\nexport default function SideBar (props) {\n  const { contractId, nodes = [], onItemClick } = props\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['contract-id']}>\n        <span>CONTRACT ID</span>\n        <span className={classes.id}>{contractId}</span>\n      </div>\n      <div className={classes['plan-types']}>\n        <TreeView defaultCollapseIcon={<ExpandMoreIcon />} defaultExpandIcon={<ChevronRightIcon />}>\n          {nodes.map(node =>\n            node.type === 'item' ? (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes.node}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n                onClick={() => onItemClick({ planPackage: node.planPackage, benefitCategory: node.benefitCategory })}\n              />\n            ) : (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes['benefit-label']}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n              >\n                {node.benefits &&\n                  Object.keys(node.benefits).map(key => (\n                    <TreeItem\n                      id={`node-coverages-${node.benefits[key].details.tree_id}-control`}\n                      key={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      className={classes.node}\n                      nodeId={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      label={node.benefits[key].details.name}\n                      onClick={() =>\n                        onItemClick({\n                          planPackage: node.planPackage,\n                          benefitCategory: node.benefits[key].details.code\n                        })\n                      }\n                    />\n                  ))}\n              </TreeItem>\n            )\n          )}\n        </TreeView>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport classes from './ValueField.module.scss'\nimport { Typography } from '@material-ui/core'\n\nexport default function ValueField (props) {\n  const { title = '', label = '', value = '' } = props\n\n  return (\n    <div className={`${classes.root}`}>\n      {title !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {title}\n        </Typography>\n      )}\n      {label !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n        </Typography>\n      )}\n      <Typography variant='subtitle2' className={classes.value}>\n        {value}\n      </Typography>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport ValueField from '../ValueField/ValueField'\n\nimport classes from './FloatingFields.module.scss'\n\nexport default function FloatingFields (props) {\n  // Variables\n  const { elements, node } = props\n  // Events\n\n  const [fields, setFields] = React.useState([])\n\n  React.useEffect(() => {\n    if (!elements) return\n    const values = elements.map(elem => ({ ...elem, value: elem.data(node) }))\n    setFields(values)\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        {fields.map(\n          field =>\n            field.value && (\n              <div key={field.id} className={classes[field.layout ? `w-${field.layout}` : 'w-100']}>\n                <ValueField\n                  key={`${field.id}`}\n                  id={field.id}\n                  title={field.title}\n                  label={field.label}\n                  value={field.value}\n                />\n              </div>\n            )\n        )}\n      </div>\n    </div>\n  )\n}\n","export default function (unit) {\n  if (!unit) return ''\n\n  switch (unit.toLowerCase()) {\n    case 'percentage':\n    case 'percent':\n      return '%'\n    case 'amount_limit':\n      return 'Amount Limit'\n    case 'max_session':\n      return 'Max Session'\n    case 'max_amount':\n      return 'Max Amount'\n    case 'percent_mbl':\n      return 'Percent of MBL'\n    case 'percent_abl':\n      return 'Percent of ABL'\n    case 'no_visits':\n      return 'No. of Visits'\n    default:\n      return unit\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  name: ({ nodes, details }) => details.name,\n  parent_name: ({ nodes, details }) => details.parent_name,\n  title: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.title', '-'),\n  limit_type: ({ nodes, details }) => details.limits.map(limit => limit.type).join('\\r\\n'),\n  age_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.age_limit', 0),\n  max_availee: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.max_availee', 0),\n  number: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.number', 0),\n  required: ({ nodes, details }) => DefaultValue(SafeAccess(details, 'custom_metadata.required') || false),\n  no_of_days: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_days', ''),\n  time_from: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_from', ''),\n  time_to: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_to', ''),\n  member_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.member_type', ''),\n  plan_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.plan_type', ''),\n  peso_limit_amt: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit_amt', ''),\n  no_of_members: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_members', 0),\n  peso_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit', ''),\n\n  // Arrays\n  payment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.payment', ''),\n  availment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.availment', ''),\n  limit: ({ nodes, details }) =>\n    details.limits\n      .map(limit => limit.limit && limit.limit_unit && `${DigitFormatter(limit.limit)} ${Unit(limit.limit_unit)}`)\n      .join('\\r\\n'),\n  rollover: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.rollover', '')),\n  refresh: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.refresh', '')),\n  eligible_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligible_availees', ''),\n  days_deployed: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.days_deployed', ''),\n  eligibility: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligibility', ''),\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true },\n    { id: 'rollover', name: 'Rollover', data: Functions.rollover, search: true },\n    { id: 'refresh', name: 'Refresh', data: Functions.refresh, search: true }\n  ],\n  // COVERAGE\n  EM: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  IP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'inner-limit-type',\n      name: 'Inner Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'inner-limit',\n      name: 'Inner Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'daily-inner-limit', name: 'Daily Inner Limit', data: Functions.empty, search: true }\n  ],\n  OP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'benefit', name: 'Benefit', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  PV: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  APE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum-age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  PPE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum_age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  SD: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true }\n  ],\n\n  // RIDERS\n  MT: [\n    { id: 'provision', name: 'Provision', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'availment-type', name: 'Availment Type', data: Functions.availment, search: true }\n  ],\n  OM: [\n    {\n      id: 'excluded-medicine',\n      name: 'Excluded Medicine',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    {\n      id: 'availment-type',\n      name: 'Availment Type',\n      data: Functions.availment,\n      search: true\n    }\n  ],\n  CC: [\n    {\n      id: 'personnel',\n      name: 'Personnel',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'no-of-days',\n      name: 'No. of Days',\n      data: Functions.number_of_days,\n      search: true\n    },\n    {\n      id: 'days-deployed',\n      name: 'Days Deployed',\n      data: Functions.days_deployed,\n      search: true\n    },\n    {\n      id: 'time-from',\n      name: 'Time From',\n      data: Functions.time_from,\n      search: true\n    },\n    {\n      id: 'time-to',\n      name: 'Time To',\n      data: Functions.time_to,\n      search: true\n    }\n  ],\n  DNT: [\n    {\n      id: 'category',\n      name: 'Category',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  SH: [\n    {\n      id: 'plan',\n      name: 'Plan',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    }\n  ],\n  ADD: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    },\n    {\n      id: 'plan-type',\n      name: 'Plan Type',\n      data: Functions.plan_type,\n      search: true\n    },\n    {\n      id: 'peso-limit-amount',\n      name: 'Peso Limit Amount',\n      data: Functions.peso_limit_amt,\n      search: true\n    }\n  ],\n  ECU: [\n    {\n      id: 'benefit',\n      name: 'Benefit',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'eligibility',\n      name: 'Eligibility',\n      data: Functions.eligibility,\n      search: true\n    },\n    {\n      id: 'no-of-members',\n      name: 'No. of Members',\n      data: Functions.no_of_members,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'peso-limit',\n      name: 'Peso Limit',\n      data: Functions.peso_limit,\n      search: true\n    }\n  ]\n}\n","export default function (value) {\n  switch (typeof value) {\n    case 'boolean':\n      return value ? 'Yes' : 'Optional'\n    case 'number':\n      return value\n    default:\n      return '--'\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  partner: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.dental_form_partner', '-'),\n  rate: ({ nodes, details }) => `${DigitFormatter(SafeAccess(details, 'custom_metadata.dental_form_rate', 0))} PHP`,\n  rb_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.type ? abl_mbl.type : ''\n  },\n  rb_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.limit ? `${DigitFormatter(abl_mbl.limit)} ${Unit(abl_mbl.limit_unit)}` : ''\n  },\n  rb_mode_of_payment: ({ nodes, details }) => {\n    const modeOfPayment = {\n      annual: 'Annual',\n      semiannual: 'Semi-Annual',\n      quarterly: 'Quarterly',\n      monthly: 'Monthly'\n    }\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return modeOfPayment[data.mode_of_payment] || ''\n  },\n  rb_pec_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    const units = {\n      PHP: 'Peso',\n      Months: 'Time-based'\n    }\n    return units[pec.limit_unit] || ''\n  },\n  rb_pec_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (!['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    return `${DigitFormatter(pec.limit)} ${pec.limit_unit}`\n  },\n  rb_pec_limit_specify: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    if (!pec.time_based_limit) return ''\n    const lines = pec.time_based_limit.map(\n      item => `After ${item.number_mount} ${item.day_based}: ${item.limit} ${Unit(item.limit_type)}`\n    )\n    return lines.join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'limit-type',\n      title: 'Limit Type',\n      label: '',\n      data: Functions.rb_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: '',\n      data: Functions.rb_limit,\n      layout: '30'\n    },\n    {\n      id: 'mode-of-payment',\n      title: 'Mode of Payment',\n      label: '',\n      data: Functions.rb_mode_of_payment,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit-type',\n      title: 'PEC Limit Type',\n      label: '',\n      data: Functions.rb_pec_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit',\n      title: 'PEC  Limit',\n      label: '',\n      data: Functions.rb_pec_limit,\n      layout: '30'\n    },\n    {\n      id: 'specify-limit',\n      title: 'Specify  Limit*',\n      label: '',\n      data: Functions.rb_pec_limit_specify,\n      layout: '30'\n    }\n  ],\n  // COVERAGE\n  EM: [],\n  IP: [],\n  OP: [],\n  PV: [],\n  APE: [],\n  PPE: [],\n  SD: [],\n\n  // RIDERS\n  MT: [],\n  OM: [],\n  CC: [],\n  DNT: [\n    {\n      id: 'partner',\n      title: 'Partner',\n      label: '',\n      data: Functions.partner,\n      layout: '50'\n    },\n    {\n      id: 'rate-person',\n      title: 'Rate/Person',\n      label: '',\n      data: Functions.rate,\n      layout: '50'\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  billing_arangement: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    const billingArrangement = {\n      premium: 'Imputed in premiums',\n      billback: 'Bill back with admin fee',\n      rider_fee: '1-time rider fee to be upon enrollment',\n      imputed_in_premiums: 'Imputed in premiums',\n      billback_net: 'Bill back, net of APE cost with admin fee',\n      fixed_rate_rider: 'Scheduled fixed rate for the entire rider',\n      fixed_rate_personnel: 'Scheduled fixed rate per personnel deployed',\n      soa_rate: 'Scheduled SOA based on fixed rate/hour/personnel deployed',\n      soa_actual_cost: 'Scheduled SOA based on actual cost of personnel deployed'\n    }\n    // CC\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   fixed_rate_rider: \"Scheduled fixed rate for the entire rider\",\n    //   fixed_rate_personnel: \"Scheduled fixed rate per personnel deployed\",\n    //   soa_rate: \"Scheduled SOA based on fixed rate/hour/personnel deployed\",\n    //   soa_actual_cost: \"Scheduled SOA based on actual cost of personnel deployed\",\n    //   rider_fee: \"1-time rider fee to be upon start of contract\",\n    // }\n    // ECU\n    // const billingArrangement = {\n    //   imputed_in_premiums: 'Imputed in premiums',\n    //   billback: 'Bill back with admin fee',\n    //   billback_net: 'Bill back, net of APE cost with admin fee',\n    //   rider_fee: '1-time rider fee to be upon enrollment'\n    // }\n    // MT\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   billback: \"Bill back with admin fee\",\n    //   rider_fee: \"1-time rider fee to be upon enrollment\"\n    // }\n    if (!data) return ''\n    if (!billingArrangement[data.billing_arangement]) return ''\n    return [\n      billingArrangement[data.billing_arangement],\n      data.billback_fee ? `${data.billback_fee} ${Unit(data.billback_type)}` : '',\n      data.rider_fee ? `${data.rider_fee} ${Unit(data.rider_fee_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  waiting_period: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data || !data.waiting_period_type) return ''\n    return [\n      data.waiting_period_type === 'effectivity' ? 'Waiting period after effectivity of member' : '',\n      data.waiting_period_type === 'date_of_hire' ? 'Waiting period after date of hire' : '',\n      data.waiting_period ? `${data.waiting_period} ${Unit(data.waitin_period_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  limit: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit ? `${data.limit} ${Unit(data.limit_unit)}` : ''\n  },\n  limit_for_all: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit_for_all ? `${data.limit_for_all} ${Unit(data.limit_for_all_unit)}` : ''\n  },\n  availment_per_year: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.availment_per_year ? `${DigitFormatter(data.availment_per_year)}` : ''\n  },\n  voluntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.voluntary_upgrading_type) return ''\n    switch (data.voluntary_upgrading_type) {\n      case 'paid_by_member':\n        return 'Room and Board difference is paid by the Member'\n      case 'first_hours_free':\n        return data.voluntary_upgrading_amount\n          ? `First ${data.voluntary_upgrading_amount} hours free`\n          : 'First 0 hour free'\n      case 'rate':\n        return data.voluntary_upgrading_amount ? `Rate: ${data.voluntary_upgrading_amount} %` : 'Rate: 0%'\n    }\n  },\n  involuntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.involuntary_upgrading_type) return ''\n    return [\n      data.except_suite_room && data.except_suite_room === true ? 'Except Suite Room' : '',\n      data.involuntary_upgrading_type === 'paid_by_member' ? 'Room and Board difference is paid by the Member' : '',\n      data.involuntary_upgrading_type === 'first_hours_free'\n        ? `First ${data.involuntary_upgrading_amount ? `${data.involuntary_upgrading_amount} hours` : '0 hour'} free`\n        : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'involuntary-room-upgrading',\n      title: 'Involuntary Room Upgrading',\n      label: '',\n      data: Functions.involuntary_upgrading_type\n    },\n    {\n      id: 'voluntary-room-upgrading',\n      title: 'Voluntary Room Upgrading',\n      label: '',\n      data: Functions.voluntary_upgrading_type\n    }\n  ],\n  // COVERAGE\n  EM: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  IP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  OP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  PV: [],\n  APE: [\n    {\n      id: 'mobile-ape',\n      title: 'Mobile APE',\n      label: 'Min no. of availees in a shift (8 hrs)',\n      data: Functions.mobile_ape_availees\n    }\n  ],\n  PPE: [],\n  SD: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    }\n  ],\n\n  // RIDERS\n  MT: [\n    {\n      id: 'availment-per-year',\n      title: 'Availment Per Year',\n      label: '',\n      data: Functions.availment_per_year\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  OM: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  CC: [\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  DNT: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import React from 'react'\n\n// Components\n\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport SideBar from './Components/SideBar/SideBar'\nimport FloatingFields from './Components/FloatingFields/FloatingFields'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Mapper\nimport BenefitTable from './Mapper/BenefitTable'\nimport BenefitHeaders from './Mapper/BenefitHeaders'\nimport BenefitFooters from './Mapper/BenefitFooters'\n\n// Styles\nimport classes from './Benefits.module.scss'\n\nexport default function Benefits (props) {\n  // Events\n\n  // Variables\n  const { isMember, member, client } = props\n\n  // Collections\n  const [columns, setColumns] = React.useState([])\n  const [rows, setRows] = React.useState([])\n\n  // Table Variables\n  const [table, setTable] = React.useState({\n    count: 0,\n    orderBy: 0,\n    order: 'asc',\n    limit: 5,\n    filters: { all: '', fields: {} },\n    page: 1,\n    rowsPerPageOptions: [5, 10, 15, 20]\n  })\n\n  // Local Variables\n  const [contractId, setContractId] = React.useState('')\n  const [planType, setPlanType] = React.useState('')\n  const [planPackage, setPlanPackage] = React.useState('')\n  const [benefitCategory, setBenefitCategory] = React.useState('')\n  const [lastRoomAndBoard, setLastRoomAndBoard] = React.useState('')\n\n  // Nodes\n  const [roomAndBoard, setRoomAndBoard] = React.useState({})\n  const [coverages, setCoverages] = React.useState({})\n  const [riders, setRiders] = React.useState({})\n\n  const [rootNode, setRootNode] = React.useState({})\n  const [benefitNode, setBenefitNode] = React.useState({})\n\n  const [headers, setHeaders] = React.useState([])\n  const [footers, setFooters] = React.useState([])\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      if (!member.latest_contract) return\n      let { plan_type } = member.info\n      const { MCT } = member.benefit_tree\n      plan_type = plan_type\n        .toUpperCase()\n        .split(' ')\n        .join('')\n\n      setContractId(member.latest_contract._id)\n      setPlanType(plan_type)\n      setRootNode(MCT)\n\n      const rnb = SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RB`, {})\n      setRoomAndBoard(rnb)\n      setCoverages(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.CV.nodes`, {}))\n      setRiders(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RI.nodes`, {}))\n\n      if (rnb.nodes) {\n        const _keys = Object.keys(rnb.nodes).sort()\n        const _name = _keys[_keys.length - 1]\n        setLastRoomAndBoard(_name)\n        setBenefitCategory(_name)\n      }\n      setPlanPackage('RB')\n    } else {\n    }\n  }, [isMember, member, client])\n\n  React.useEffect(() => {\n    if (planType === '' || planPackage === '' || benefitCategory === '') return\n    setBenefitNode(SafeAccess(rootNode, `nodes.CT.nodes.${planType}.nodes.${planPackage}.nodes.${benefitCategory}`, {}))\n  }, [rootNode, planType, planPackage, benefitCategory])\n\n  React.useEffect(() => {\n    if (!benefitNode) return\n    const _rows = getRows()\n    setRows(_rows)\n    setColumns(BenefitTable[planPackage === 'RB' ? 'RB' : benefitCategory] || [])\n    setTable(state => ({ ...state, count: _rows.length }))\n\n    setHeaders(getHeaders())\n    setFooters(getFooters())\n  }, [benefitNode])\n\n  const getRows = () => {\n    let _columns = BenefitTable[benefitCategory]\n    const { nodes } = benefitNode\n\n    let parent_keys = []\n    if (benefitCategory === lastRoomAndBoard) {\n      if (!benefitNode) return []\n\n      if (Object.keys(benefitNode).length <= 0) {\n        return []\n      }\n    } else if (lastRoomAndBoard === '') {\n      return []\n    } else {\n      if (!nodes) return []\n\n      if (Object.keys(nodes).length <= 0) return []\n\n      parent_keys = Object.keys(nodes).sort()\n    }\n\n    let _rows = []\n    switch (benefitCategory) {\n      case lastRoomAndBoard:\n        _columns = BenefitTable['RB']\n        _rows = [_columns.map(col => col.data(benefitNode))]\n        break\n      case 'EM':\n      case 'PV':\n      case 'SD':\n      case 'ADD':\n        _rows = parent_keys.map((key, index) => _columns.map(col => col.data(nodes[key])))\n        break\n      default:\n        _rows = parent_keys\n          .map((pkey, index) =>\n            Object.keys(nodes[pkey].nodes)\n              .sort()\n              .map(key => {\n                const sub_node = nodes[pkey].nodes[key]\n                sub_node.details.parent_name = nodes[pkey].details.name\n                return _columns.map(col => col.data(sub_node))\n              })\n          )\n          .reduce((acc, curr) => [...acc, ...curr], [])\n\n        break\n    }\n\n    return _rows\n  }\n\n  const renderRows = () => {\n    if (!rows) return\n    const { all, fields } = table.filters\n\n    let _rows = rows\n\n    const ascending = (a, b) => a[table.orderBy].length - b[table.orderBy].length\n\n    const descending = (a, b) => b[table.orderBy].length - a[table.orderBy].length\n\n    _rows = table.order === 'asc' ? rows.sort(ascending) : rows.sort(descending)\n\n    _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, all)).some(val => val))\n\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!fields[index]) return true\n            return includesAny(`${col}`, fields[index])\n          })\n          .some(val => val === false)\n    )\n\n    return _rows.slice((table.page - 1) * table.limit, table.page * table.limit).map((row, index) => (\n      <TableRow key={`limits-row-${index}`}>\n        {columns.map((col, index) => (\n          <TableCell key={`limits-row-${index}-column-${col.id}`}>{row[index]}</TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const getHeaders = () => {\n    if (planPackage === 'RB') return BenefitHeaders['RB']\n    return BenefitHeaders[benefitCategory]\n  }\n\n  const getFooters = () => {\n    if (planPackage === 'RB') return BenefitFooters['RB']\n    return BenefitFooters[benefitCategory]\n  }\n\n  const handleSidebarItemClick = args => {\n    const { planPackage, benefitCategory } = args\n    setPlanPackage(planPackage)\n    setBenefitCategory(benefitCategory)\n  }\n\n  const handleTableSort = ({ id, index }) => {\n    const order = table.order === 'asc' ? 'desc' : 'asc'\n    setTable(state => ({ ...state, orderBy: index, order }))\n  }\n\n  const handleTableFilter = ({ id, value, index }) => {\n    setTable(state => ({\n      ...table,\n      filters: { ...state.filters, fields: { ...state.filters.fields, [index]: value } }\n    }))\n  }\n\n  const handleOnChangeSearchBox = value => {\n    setTable(state => ({ ...table, filters: { ...state.filters, all: value } }))\n  }\n\n  const handleOnPaginate = args => {\n    setTable(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes['left-side']}>\n          <Typography className={classes.title}>Member Benefits</Typography>\n          <SideBar\n            contractId={contractId}\n            nodes={[\n              {\n                id: 'room_and_board',\n                label: 'Room and Board',\n                type: 'item',\n                planPackage: 'RB',\n                benefitCategory: lastRoomAndBoard\n              },\n              {\n                id: 'coverage',\n                label: 'Coverage',\n                type: 'list',\n                planPackage: 'CV',\n                benefits: coverages\n              },\n              {\n                id: 'riders',\n                label: 'Riders',\n                type: 'list',\n                planPackage: 'RI',\n                benefits: riders\n              }\n            ]}\n            onItemClick={handleSidebarItemClick}\n          />\n        </div>\n        <div className={classes['right-side']}>\n          <div className={classes.header}>\n            <FloatingFields elements={headers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n          {planPackage !== 'RB' && (\n            <div className={classes['table-header']}>\n              <div className={classes.search}>\n                <SearchTextComponent onChange={event => handleOnChangeSearchBox(event.target.value)} />\n              </div>\n              <div className={classes.contract}>\n                <span>Contract Type</span>\n                <span>---</span>\n              </div>\n            </div>\n          )}\n\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {columns.map((cell, index) => (\n                    <TableCell key={cell.data}>\n                      <TableSortLabel\n                        active={table.orderBy === cell.id || table.orderBy === index}\n                        direction={table.order === 'asc' ? 'asc' : 'desc'}\n                        onClick={event => handleTableSort({ id: cell.id, index })}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          id={`${cell.id}-input`}\n                          className={`${classes.search}`}\n                          onChange={event => handleTableFilter({ value: event.target.value, id: cell.id, index })}\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={renderRows()}\n              pagination\n              count={table.count}\n              page={table.page}\n              limit={table.limit}\n              rowsPerPageOptions={table.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n          <div className={classes.footer}>\n            <FloatingFields elements={footers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { setPaginate } from './Utils/pagination'\nimport { sort } from './Utils/sortBy'\nimport { onQuery } from './Utils/query'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './Exclusions.module.scss'\n\nlet columns = [\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Item', sortField: 'item_name', search: true }\n]\n\nexport default function Benefits (props) {\n  const { isMember, member, client } = props\n\n  const [selectedPlan, setSelectedPlan] = React.useState('BASE')\n  const [planTypes, setPlanTypes] = React.useState([])\n  const [rows, setRows] = React.useState([])\n  const [allExclusions, setAllExclusions] = React.useState([])\n  const [exclusionList, setExclusionList] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    count: 0,\n    page: 1,\n    limit: 5,\n    filter: {},\n    search: {},\n    plan_type: '',\n    rowsPerPageOptions: [5, 10, 15]\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      // getExclusions(member.benefit_tree)\n      const _rows = getExclusions2(member.benefit_tree)\n\n      setAllExclusions(_rows)\n      setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n      setRows(_rows.slice(0, exclusionList.limit))\n      handleOnSetItem(selectedPlan)\n    }\n  }, [member, isMember, client])\n\n  const getExclusions = nodes => {\n    const { MCT } = nodes\n    let arr_list = []\n\n    if (Object.keys(nodes).length) {\n      let plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n      let plan_type_keys = Object.keys(plan_types)\n\n      setPlanTypes(plan_type_keys)\n\n      for (const type of plan_type_keys) {\n        Object.keys(plan_types[type].nodes).forEach(i => {\n          if (i === 'EX') {\n            let child_node = Object.keys(plan_types[type].nodes[i].nodes)\n              .map(c => plan_types[type].nodes[i].nodes[c])\n              .filter(i => Object.keys(i.nodes).length)\n              .map(outer_node => {\n                if (Object.keys(outer_node.nodes).length) {\n                  return Object.values(outer_node.nodes)\n                    .filter(i => i.details.custom_metadata.is_excluded)\n                    .map(inner_node => ({\n                      item_name: inner_node.details.name,\n                      plan_type: type,\n                      type: outer_node.details.name,\n                      code: inner_node.details.code,\n                      parent_code: outer_node.details.code\n                    }))\n                }\n              })\n            arr_list = [].concat.apply([], child_node)\n          }\n        })\n      }\n    }\n    let _rows = arr_list.filter(benefit => benefit.plan_type === selectedPlan)\n\n    setAllExclusions(arr_list)\n    setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n    setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const getExclusions2 = nodes => {\n    const { MCT } = nodes\n    const plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n\n    const plan_types_keys = Object.keys(plan_types)\n    setPlanTypes(plan_types_keys)\n\n    let rows = []\n    plan_types_keys.forEach(planTypeKey => {\n      const ex_nodes = SafeAccess(plan_types, `${planTypeKey}.nodes.EX.nodes`, null)\n      if (ex_nodes) {\n        Object.keys(ex_nodes).map(exclusionKey => {\n          const inner_node = ex_nodes[exclusionKey]\n          Object.keys(inner_node.nodes).map(innerKey => {\n            const { details } = inner_node.nodes[innerKey]\n            if (details.custom_metadata.is_excluded) {\n              rows.push({\n                item_name: details.name,\n                plan_type: planTypeKey,\n                type: inner_node.details.name,\n                code: details.code,\n                parent_code: inner_node.details.code\n              })\n            }\n          })\n        })\n      }\n    })\n    return rows\n  }\n  // TODO will park this for now\n  // const handleOnSearchAll = args => {\n  //   const { search, page } = args\n\n  //   const queriedData = onQueryAll({\n  //     search: search.toLowerCase(),\n  //     data: allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n  //   })\n\n  //   setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n  //   setRows(queriedData.slice(0, exclusionList.limit))\n  // }\n  const handleOnSearch = args => {\n    const { search, page, range } = args\n    const _data = allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n\n    if (range !== 'all') {\n      exclusionList.filter[range] = search\n    } else {\n      exclusionList.search[range] = search\n    }\n\n    const queriedData = onQuery({ filter: exclusionList.filter, search: exclusionList.search, data: _data })\n\n    setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n    setRows(queriedData.slice(0, exclusionList.limit))\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: exclusionList })\n    setExclusionList(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const handleOnSetItem = item => {\n    let _rows = allExclusions.filter(benefit => benefit.plan_type === item)\n\n    setSelectedPlan(item)\n    setExclusionList(state => ({\n      ...state,\n      data: _rows,\n      count: _rows.length,\n      page: 1,\n      limit: state.rowsPerPageOptions[0]\n    }))\n    setRows(_rows.slice(0, exclusionList.rowsPerPageOptions[0]))\n\n    // TODO\n    // setExclusionList(state => ({ ...state, data: _rows, count: _rows.length, page: 1 }))\n    // setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const handleOnSort = args => {\n    const { data: sortedData } = sort({ data: rows, field: args.orderBy, direction: args.order })\n\n    setRows(sortedData.slice(0, exclusionList.limit))\n    setExclusionList(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header} />\n      <div className={classes.body}>\n        <div className={classes[`plan-types`]}>\n          {planTypes.map((item, index) => (\n            <Typography key={`plan-${index}`} className={classes.type}>\n              <Link onClick={() => handleOnSetItem(item)}>\n                <span>{item}</span>\n              </Link>\n            </Typography>\n          ))}\n        </div>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-exclusion'\n            onChange={e => {\n              const search = e.target.value\n              clearTimeout(debounce)\n              setDebounce(\n                setTimeout(() => {\n                  handleOnSearch({ search, page: 1, range: 'all' })\n                }, 500)\n              )\n            }}\n            placeholder='Search'\n          />\n        </div>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map(headCell => (\n                  <TableCell key={headCell.sortField}>\n                    <TableSortLabel\n                      active={exclusionList.orderBy === headCell.sortField}\n                      direction={exclusionList.order ? 'asc' : 'desc'}\n                      onClick={event => handleOnSort({ orderBy: headCell.sortField, order: !exclusionList.order })}\n                    >\n                      {headCell.name}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <TextField\n                        id={`${headCell.sortField}-input`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={e => {\n                          const search = e.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearch({ search, page: 1, range: headCell.sortField })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              rows.length ? (\n                rows.map((row, index) => (\n                  <TableRow id={`exlusions-tab-row-${index}`} key={`ex-${index}`}>\n                    <TableCell id={`exlusions-tab-row-item-${index}-type`}>{row.type}</TableCell>\n                    <TableCell id={`exlusions-tab-row-item-${index}-name`}>{row.item_name}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={2}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={exclusionList.count}\n            page={exclusionList.page}\n            limit={exclusionList.limit}\n            rowsPerPageOptions={exclusionList.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const onQuery = args => {\n  const { filter, search, data } = args\n  let mutable_data = []\n\n  if (search.all) {\n    const _search = search.all.toLowerCase()\n    mutable_data = data.filter(\n      i => i.item_name.toLowerCase().includes(_search) || i.type.toLowerCase().includes(_search)\n    )\n  } else {\n    mutable_data = data\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const fields = Object.keys(filter)\n    fields.forEach((field, index) => {\n      const search = filter[field].toLowerCase()\n\n      if (index === 0) {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      } else {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      }\n    })\n  }\n\n  return mutable_data\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import lodash from 'lodash'\n\nexport const sort = args => {\n  return { data: lodash.orderBy(args.data, [args.field], [args.direction ? 'asc' : 'desc']) }\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Typography from '@material-ui/core/Typography'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n\n// Styles\nimport classes from './PartnerNetwork.module.scss'\n\nconst headCells = [\n  { name: 'Code', sortField: 'code', search: true, match: 'start' },\n  { name: 'Name', sortField: 'name', search: true, match: 'any' },\n  { name: 'Location', sortField: 'location', search: true, match: 'any' },\n  { name: '', sortField: 'affiliated_doctors', search: false }\n]\n\nconst headCellsDoctors = [\n  { name: 'Medical Partner ID', sortField: 'id', search: true, match: 'start' },\n  { name: 'Doctor Name', sortField: 'name', search: true, match: 'any' },\n  { name: 'Specialization', sortField: 'specialization', search: true, match: 'any' },\n  { name: 'Schedule', sortField: 'schedule', search: true, match: 'any' },\n  { name: 'Remarks', sortField: 'remarks', search: false, match: 'any' }\n]\n\nexport default function PartnerNetwork (props) {\n  const { partnerService, doctorService, memberAccountNumber } = props\n  // const [partnerId, setPartnerId] = React.useState('')\n  // const [partnerName, setPartnerName] = React.useState('')\n  // const [partnerLocation, setPartnerLocation] = React.useState('')\n\n  const [partners, setPartners] = React.useState({\n    data: [],\n    category: 'all',\n    search: '',\n    count: 0,\n    page: 1,\n    limit: 10,\n    filter: {},\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [doctors, setDoctors] = React.useState({\n    show: false,\n    facility_id: '',\n    search: '',\n    data: [],\n    filtered: [],\n    filter: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const fetchPartner = args => {\n    partnerService({\n      member_account_no: memberAccountNumber,\n      params: {\n        search: args.search,\n        sort: `${args.orderBy}|${args.order ? 'asc' : 'desc'}`,\n        page: args.page,\n        filter: args.filter,\n        limit: args.limit\n      }\n    }).then(res => {\n      const { results, count, limit, page } = res.data.data\n      setPartners(state => ({\n        ...state,\n        data: results,\n        count,\n        page,\n        limit\n      }))\n    })\n  }\n\n  const fetchDoctors = args => {\n    console.log(args)\n    doctorService({\n      member_account_no: memberAccountNumber,\n      params: {\n        limit: args.limit,\n        page: args.page,\n        filter: args.filter,\n        sort: `${args.orderBy}|${args.order ? 'asc' : 'desc'}`,\n        search: args.search\n      },\n      facility_id: args.facility_id\n    }).then(res => {\n      const { results, count, limit, page } = res.data.data\n      console.log(results)\n      setDoctors(state => ({\n        ...state,\n        show: true,\n        data: results,\n        count,\n        limit,\n        page\n        // filtered: data.results,\n        // filters\n      }))\n    })\n  }\n\n  const onQueryColumn = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        ...partners,\n        ...params\n      }\n\n      fetchPartner(_params)\n    } else {\n      const _params = {\n        ...doctors,\n        ...params\n      }\n\n      fetchDoctors(_params)\n    }\n  }\n\n  const onQueryAll = params => {\n    const _params = {\n      ...partners,\n      ...params\n    }\n\n    fetchPartner(_params)\n  }\n\n  const handleOnPaginate = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        ...partners,\n        ...params\n      }\n\n      setPartners(state => ({ ...state, ...params }))\n      fetchPartner(_params)\n    } else {\n      const _params = {\n        ...doctors,\n        ...params\n      }\n\n      setDoctors(state => ({ ...state, ...params }))\n      fetchDoctors(_params)\n    }\n  }\n\n  const handleOnClickAffiliated = params => {\n    const _params = {\n      ...doctors,\n      ...params\n    }\n\n    setDoctors(state => ({ ...state, facility_id: params.facility_id }))\n    fetchDoctors(_params)\n  }\n\n  React.useEffect(() => {\n    if (memberAccountNumber) fetchPartner(partners)\n  }, [memberAccountNumber])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-partner'\n            //  onChange={event => queryColumn('partners', { search: event.target.value, field: 'any' })}\n            onChange={event => {\n              const search = event.target.value\n              clearTimeout(debounce)\n              setDebounce(\n                setTimeout(() => {\n                  onQueryAll({ search, page: 1 })\n                  setPartners(state => ({ ...state, search }))\n                }, 500)\n              )\n            }}\n            placeholder='Search for Partner Network Code, Name, and Location'\n          />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={partners.orderBy === headCell.sortField}\n                    direction={partners.order ? 'asc' : 'desc'}\n                    // onClick={hanleOnPaginate('partners', headCell.sortField)}\n                    onClick={() => handleOnPaginate('partners', { orderBy: headCell.sortField, order: !partners.order })\n                    }\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  {headCell.search && (\n                    <TextField\n                      id={`pn-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            setPartners(p => ({ ...p, filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                            onQueryColumn('partners', { filter: { ...partners.filter, [headCell.sortField]: { value: search, match: headCell.match } }, page: 1 })\n                          }, 500)\n                        )\n                      }\n                      }\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={partners.data.map((row, index) => (\n            <TableRow id={`pn-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n              <TableCell id={`pn-code-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.code}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-name-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.name}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-location-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.location}</span>\n                </div>\n              </TableCell>\n\n              <TableCell id={`pn-view-link-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    <Typography\n                      id={`pn-view-link-${index}-control`}\n                      variant='caption'\n                      className={`text-link `}\n                      onClick={() => handleOnClickAffiliated({ facility_id: row.code })}\n                      // onChange={() => {}}\n                    >\n                      View Affiliated Doctors\n                    </Typography>\n                  </span>\n                </div>\n              </TableCell>\n            </TableRow>\n          ))}\n          pagination\n          count={partners.count}\n          page={partners.page}\n          limit={partners.limit}\n          rowsPerPageOptions={partners.rowsPerPageOptions}\n          onChange={args => handleOnPaginate('partners', args)}\n        />\n      </div>\n\n      <Dialog\n        fullWidth\n        maxWidth='md'\n        onClose={() => setDoctors(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={doctors.show}\n        className={classes.doctors}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Affiliated Doctors\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDoctors(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCellsDoctors.map(cell => (\n                    <TableCell key={cell.sortField}>\n                      <TableSortLabel\n                        active={doctors.orderBy === cell.sortField}\n                        direction={doctors.order ? 'asc' : 'desc'}\n                        // onClick={handleOnSort('doctors', cell.sortField)}\n                        onClick={() => handleOnPaginate('doctors', { orderBy: cell.sortField, order: !doctors.order })}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          className={`${classes.search}`}\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                setDoctors(p => ({ ...p, filter: { ...p.filter, [cell.sortField]: { value: search, match: cell.match } } }))\n                                onQueryColumn('doctors', { filter: { ...doctors.filter, [cell.sortField]: { value: search, match: cell.match } }, page: 1 })\n                              }, 500)\n                            )\n                          }\n                          }\n                          // onChange={event => {}}\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                doctors.data.length <= 0 ? (\n                  <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                    <TableCell id={`no-record`} colSpan={5}>\n                      <div className={`${classes.cell} ${classes.center}`}>\n                        <span>No Records</span>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  doctors.data.map((row, index) => (\n                    <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n                      <TableCell id={`doctor-id-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.id}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-name-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.name}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-specialization-${index}`}>\n                        <div className={classes.cell}>\n                          <span>\n                            {row.specialization}\n                          </span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-schedule-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.schedule}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-remarks-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.remarks}</span>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )\n              }\n              pagination\n              count={doctors.count}\n              page={doctors.page}\n              limit={doctors.limit}\n              rowsPerPageOptions={doctors.rowsPerPageOptions}\n              onChange={args => handleOnPaginate('doctors', args)}\n            />\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Component\nimport { PdfView2Component, MozillaPdf } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Utilities\nimport { NameFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Contract.module.scss'\n\nexport default function Contract (props) {\n  // Service\n  const { getMemberContract, getClientContract } = props\n  // const { getMemberContractUrl, getClientContractUrl } = props\n  // Variables\n  const { isMember, member, client } = props\n\n  // const [fileUrl, setFileUrl] = React.useState(null)\n  const [fileName, setFileName] = React.useState('')\n  const [title, setTitle] = React.useState('')\n  const [service, setService] = React.useState(null)\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      const mct_id = member.benefit_tree.MCT.details._id\n      setService(getMemberContract({ mct_id }))\n      setFileName(`${NameFormatter(member.info).format2} Contract`)\n      setTitle('Member Contract')\n    } else {\n      if (!client) return\n      const mct_id = client.benefit_tree.MCT.details._id\n      setService(getClientContract({ mct_id }))\n      setFileName(`${client.info.brand_name} Contract`)\n      setTitle('Client Contract')\n    }\n  }, [isMember, member, client])\n\n  // React.useEffect(() => {\n  //   let mct = ''\n\n  //   if (isMember) {\n  //     if (!member) return\n  //     mct = member.benefit_tree.MCT.details._id\n  //     setFileUrl(getMemberContractUrl({ mct }))\n  //   } else {\n  //     if (!client) return\n  //     mct = client.benefit_tree.MCT.details._id\n  //     setFileUrl(getClientContractUrl({ mct }))\n  //   }\n  // }, [isMember, member, client])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        {/* <div className={classes.pdf}>\n          <MozillaPdf fileUrl={fileUrl} />\n        </div> */}\n        <div className={classes.pdf}>\n          <PdfView2Component\n            name={title}\n            fileName={fileName}\n            initialPageNumber={1}\n            initialScale={1}\n            service={service}\n            enabled\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Button, Typography } from '@material-ui/core'\n\n// Components\nimport ChatBox from '../ChatBox/ChatBox'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { CustomTabs, CustomTab } from 'SharedComponents/CustomTabs/CustomTabs'\n\n// Compare Tabs\nimport Benefits from '../Benefits/Benefits'\nimport Exclusions from '../Exclusions/Exclusions'\nimport PartnerNetwork from '../PartnerNetwork/PartnerNetwork'\nimport Utilization from '../Utilization/Utilization'\nimport Contract from '../Contract/Contract'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Styles\nimport classes from './RightPanelTabs.module.scss'\n\nexport default function RightPanelTabs (props) {\n  // Events\n  const { onReturnEscalate, onReturnInquire = () => {} } = props\n  // Variables\n  const { claim, permissions, isMember, member, memberFetchStatus, client, clientFetchStatus, utilizationLoa, memberFetchMessage } = props\n  // Services\n  const {\n    getUtilizations,\n    getPartners,\n    getDoctors,\n    getMemberContract,\n    getClientContract,\n    getMemberContractUrl,\n    getClientContractUrl\n  } = props\n\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n  return (\n    <CustomTabs id='medical-partner-tabs' defaultIndex={0}>\n      {SafeAccess(permissions, ['tabs', 'benefits', 'read']) && (\n        <CustomTab id='benefits-tab' label='BENEFITS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '412' && (\n            <div className={classes.center}>\n              <Typography>{`${memberFetchMessage}`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Benefits isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'exclusions', 'read']) && (\n        <CustomTab id='exclusions-tab' label='EXCLUSIONS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '412' && (\n            <div className={classes.center}>\n              <Typography>{`${memberFetchMessage}`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Exclusions isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'partner', 'read']) && (\n        <CustomTab id='partner-network-tab' label='PARTNER NETWORK'>\n          <PartnerNetwork\n            partnerService={getPartners}\n            doctorService={getDoctors}\n            memberAccountNumber={claim.member_account_number || '-'}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'utilization', 'read']) && (\n        <CustomTab id='utilization-tab' label='UTILIZATION'>\n          <Utilization\n            fetchService={getUtilizations}\n            utilizationLoa={utilizationLoa}\n            isMember={isMember}\n            member={member}\n            client={client}\n            diagnosis={claim.diagnosis || []}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'communication', 'read']) && (\n        <CustomTab id='communication-tab' label='COMMUNICATION'>\n          <ChatBox\n            messages={inquiries.messages}\n            title='Communication Logs'\n            onSubmitComment={comment => onReturnInquire({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.communication}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'contact', 'read']) && (\n        <CustomTab id='contract-tab' label='CONTRACT'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '412' && (\n            <div className={classes.center}>\n              <Typography>{`${memberFetchMessage}`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Contract\n              isMember={isMember}\n              member={member}\n              client={client}\n              getMemberContract={getMemberContract}\n              getClientContract={getClientContract}\n              getMemberContractUrl={getMemberContractUrl}\n              getClientContractUrl={getClientContractUrl}\n            />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'comments', 'read']) && (\n        <CustomTab id='comment-tab' label='COMMENTS'>\n          <ChatBox\n            messages={escalations.messages}\n            title='Escalation Logs'\n            onSubmitComment={comment => onReturnEscalate({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.comments}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'notes', 'read']) && (\n        <CustomTab id='notes-tab' label='NOTES'>\n          <ChatBox messages={recon.messages} permissions={permissions.tabs.notes} />\n        </CustomTab>\n      )}\n    </CustomTabs>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data, permissions, onChange } = props\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data || ''}\n          readOnly={permissions}\n          onChange={onChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .required(),\n\n    // TODO Claim Source here\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Name')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n      .required(),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .required(),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .allow('', null),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .allow('', null),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      contract_plan_type: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      diagnosis: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n            text: item.desc,\n            value: item.value,\n            rate: item.rate\n          }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n  console.log('inpatient', error)\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Date Admitted'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Date Discharged'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_type\n                    }}\n                  >\n                    <DropDown\n                      id='room-type'\n                      required\n                      label='Room Type'\n                      items={dropDown.rooms}\n                      value={claim.room_type}\n                      onChange={handleOnChangeRoomType}\n                      error={error.room_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-rate'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_rate\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='room-rate'\n                      required\n                      label='Room Rate'\n                      value={claim.room_rate}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'room_rate'\n                          })\n                        )\n                      }}\n                      error={error.room_rate}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      required\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_name']}\n                      required\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          department: data.department,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-department'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.department\n                    }}\n                  >\n                    <TextField\n                      id='department'\n                      label='Department'\n                      value={claim.department}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'department'\n                          })\n                        )\n                      }\n                      error={error.department}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'id'}\n                      loading={fetching['anesthesiologist_id']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'full_name'}\n                      loading={fetching['anesthesiologist_name']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          recommendation: data.recommendation,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-facility-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-facility-id'\n                      required\n                      label='Medical Facility ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-recommendation'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.recommendation\n                    }}\n                  >\n                    <TextField\n                      id='recommendation'\n                      label='Recommendation'\n                      value={claim.recommendation}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'recommendation'\n                          })\n                        )\n                      }\n                      error={error.recommendation}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'id'}\n                      loading={fetching['anesthesiologist_id']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'full_name'}\n                      loading={fetching['anesthesiologist_name']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro, onChangeDoctor } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_name: data.doctor.name,\n          doctor_id: data.doctor.id,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_name']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          medicine_category: data.medicine_category,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                showCompany\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      required\n                      error={error.medicine_category}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doValidate={doValidateAll}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, type: true })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ContractRange.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nexport default function ContractRange (props) {\n  const {\n    contract_year_from,\n    contract_year_to,\n    suggestions,\n    error,\n    required,\n    // disableControls = false,\n    onChange = () => {},\n    readOnly = false,\n    hasDiscrepancy = false\n  } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (!(contract_year_from || contract_year_to)) {\n      setError(error)\n    }\n  }, [error, contract_year_from, contract_year_to])\n\n  const handleOnItemClick = ({ event, item }) => {\n    onChange(item)\n    setTimeout(() => setFocus(false), 10)\n  }\n  return (\n    <div className={classes['root']}>\n      <div\n        className={`${classes.container} ${_error ? classes['has-error'] : focus && classes.focus} box-shadow-field`}\n        tabIndex={0}\n        onFocus={() => setFocus(true)}\n        onClick={() => setFocus(true)}\n        onBlur={() => setFocus(false)}\n      >\n        <div className={classes.label}>\n          <Typography variant='subtitle2'>{`${!readOnly && required ? '* ' : ''}Contract Year:`}</Typography>\n        </div>\n\n        <div className={classes['values']}>\n          <Typography variant={hasDiscrepancy ? 'subtitle2' : 'subtitle1'}>\n            <span>From: </span>\n            {contract_year_from ? DateFormatter(contract_year_from) : '----------'} <span>To: </span>\n            {contract_year_to ? DateFormatter(contract_year_to) : '----------'}\n          </Typography>\n        </div>\n\n        {!readOnly && focus && (\n          <Paper className={`${classes.suggestions} ${error && classes['add-margin']}`} square>\n            <div className={classes.header}>\n              <Typography variant='subtitle2'>Member Contract Period</Typography>\n            </div>\n\n            <div className={classes['values-container']}>\n              <div className={classes.message}>\n                <Typography variant='body2'>Please select contract period for this claim</Typography>\n              </div>\n\n              <div className={classes.list}>\n                {suggestions.map((item, index) => (\n                  <div key={index} className={classes.item} onClick={event => handleOnItemClick({ event, item })}>\n                    {DateFormatter(item.from)} To {DateFormatter(item.to)}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </Paper>\n        )}\n\n        {_error && <span className={classes.error}>\"Contract Year\" is required.</span>}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <path\n          className={classes.crown}\n          d='M256.5,66.8c0,0,13.6,48.5,11.2,91.9c-2.5,43.4-8.7,93.1-11.2,103c-2.5,9.9-14.9,33.5-11.2,40.9s1.2,24.8,5,34.7c3.7,9.9,0,37.9,0,46.2s-6.2,24.5-12.4,24.5c-6.2,0-21.8-1.2-28.5,0c-6.7,1.2-29.8-2.5-39.7,0c-9.9,2.5-40.9,12.4-38.5-5s-6.2-22.3,5-47.2c11.2-24.8,26.1-54.6,29.8-59.6c3.7-5,12.4-2.5,17.4-19.9c5-17.4,12.6-67,19.3-80.7c6.7-13.6,21.6-62,24.1-72c2.5-9.9,11.2-42.2,14.9-47.2C245.3,71.9,254.9,60.9,256.5,66.8z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M245.3,302.7c-3.7-7.4,8.7-31,11.2-40.9c2.5-9.9,8.7-59.6,11.2-103c2.5-43.4-11.2-91.9-11.2-91.9c-1.5-5.9-11.2,5.1-14.9,10c-3.7,5-12.4,37.2-14.9,47.2c-2.5,9.9-17.4,58.3-24.1,72c-6.7,13.6-14.4,63.3-19.3,80.7c-5,17.4-13.6,14.9-17.4,19.9c-1.7,2.2-5.5,9.4-10.3,18.8c10.9,2.2,80.1,15.2,95.6,25.7c-0.2-1.3-0.5-2.5-0.9-3.5C246.5,327.5,249,310.1,245.3,302.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <path\n          className={classes.crown}\n          d='M297.4,405.6c0,0-19.9-6.2-7.4-31c12.4-24.8,21.1-40.9,27.3-57.1c6.2-16.1,3.7-37.2,12.4-50.9c8.7-13.6,27.3-65.8,29.8-85.6c2.5-19.9,14.9-91.8,22.3-96.8c7.4-5,16.1,9.9,17.4,17.4c1.2,7.4,1.2,69.5,0,75.7c-1.2,6.2-5,67-6.2,79.4c-1.2,12.4-9.9,39.7-9.9,49.6c0,9.9,1.2,33.5,1.2,45.9c0,12.4-1.2,39.7-8.7,45.9c-7.4,6.2-10.6,7.4-32.6,7.4C321,405.6,297.4,405.6,297.4,405.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M393,256.7c1.2-12.4,5-73.2,6.2-79.4c1.2-6.2,1.2-68.2,0-75.7c-1.2-7.4-9.9-22.3-17.4-17.4c-7.4,5-19.9,76.9-22.3,96.8c-2.5,19.9-21.1,72-29.8,85.6c-8.7,13.6-6.2,34.7-12.4,50.9c-3.4,8.9-7.6,17.9-12.8,28.3c7.1-6.1,14.5-11.8,22.8-16.1c15.5-7.8,36.3-9,48.5,3.3c3.1,3.1,5.7,7.1,8.3,10.9c-0.3-12.7-1.1-29.6-1.1-37.6C383,296.4,391.7,269.1,393,256.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor3 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.1712341308594)'>\n        <path\n          className={classes.crown}\n          d='M239.7,459c4.1,11.8,5.9,37.2,5.9,43.1c0,5.9,1.8,29,0,35.5c-1.8,6.5-8.3,15.4-7.1,21.3c1.2,5.9,3,30.9,2.4,32.6c-0.6,1.7,0,20.6,1.2,25.3c1.2,4.7,8.3,50.2,10,55.6c1.8,5.3,8.3,34.9,8.3,36.6c0,1.8-2.4,8.3-8.9,7.1c-6.5-1.2-17.7-11.8-18.6-16c-0.9-4.1-18-38.4-21-45.5c-3-7.1-8.3-24.2-12.4-40.2c-4.1-16-11.2-42-11.2-43.7c0-1.8,2.4-13.6-5.9-27.2c-8.3-13.6-16.5-37.2-17.1-39.6c-0.6-2.4-3.5-26-3.5-33.7c0-7.7-2.4-17,5.9-18C175.8,451.3,235.5,447.2,239.7,459z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.2712097167969)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M188.2,570.7c0,1.8,7.1,27.8,11.2,43.7c4.1,16,9.5,33.1,12.4,40.2c3,7.1,20.1,41.4,21,45.5c0.9,4.1,12.1,14.8,18.6,16c6.5,1.2,8.9-5.3,8.9-7.1s-6.5-31.3-8.3-36.6c-1.8-5.3-8.9-50.8-10-55.6c-1.2-4.7-1.8-23.6-1.2-25.3c0.6-1.7-1.2-26.7-2.4-32.6c-1.1-5.5,4.4-13.5,6.6-19.8c-16.2,9.5-37.6,9.9-54,0.6c-4.9-2.8-10-6.5-15.2-8.3c2,4.4,4.2,8.7,6.4,12.2C190.6,557.1,188.2,569,188.2,570.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor4 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.1224517822266)'>\n        <path\n          className={classes.crown}\n          d='M279.9,455.5c-0.6,5.3-4.7,6.5-3.5,16.5c1.2,10,3,33.1,6.5,38.4c3.5,5.3,8.8,23.6,13.6,40.2c4.7,16.5,13,41.4,15.4,56.2c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c3.5-2.4,7.1-19.5,7.1-29.6s-1.8-39.6-2.4-42c-0.6-2.4-1.2-18.3-7.7-18.3C343.7,454.9,280.5,450.2,279.9,455.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.2224884033203)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M311.8,606.8c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c1.9-1.3,3.8-6.7,5.1-12.9c-5.7,7.2-11.9,13.7-20.1,15.3c-20,3.8-33.6-23.8-51.9-29.2c3.1,8.2,6.8,21,10.2,32.8C301.1,567.2,309.4,592,311.8,606.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <path\n          className={classes.crown}\n          d='M455,426.7c-2.5-3.7-22.3-25-31-37.3s2.5-50.8,8.7-60.7c6.2-9.9,19.9-22.3,22.3-31c2.5-8.7,6.2-39.7,8.7-44.7c2.5-5,7.4-37,7.4-46.4c0-9.4,6.2-72.7,16.1-87.6c9.9-14.9,21.1-29.7,23.6-40.9c2.5-11.3,6.2-32.3,12.4-27.3c6.2,5,12.4,3.5,12.4,16s-1.2,33.6,0,49.7c1.2,16.1,0,67,0,73.2s2.3,35,0.6,54.7c-1.8,19.7-9.2,32.1-9.2,44.5s-6.2,27.3,0,39.7c6.2,12.4,9.9,39.7,9.9,50.9c0,11.2-3.7,14.9-11.2,19.9c-7.4,5-16.1,0-22.3,6.2c-6.2,6.2-27.3,17.4-29.8,21.1C471.1,430.5,455,426.7,455,426.7z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M527,289c0-12.4,7.4-24.8,9.2-44.5c1.8-19.7-0.6-48.5-0.6-54.7s1.2-57.1,0-73.2c-1.2-16.1,0-37.2,0-49.7c0-12.5-6.2-11.1-12.4-16c-6.2-5-9.9,16-12.4,27.3c-2.5,11.3-13.6,26.1-23.6,40.9c-9.9,14.9-16.1,78.2-16.1,87.6c0,9.4-5,41.4-7.4,46.4c-2.5,5-6.2,36-8.7,44.7c-2.4,8.3-14.9,19.9-21.4,29.6c11.8-15,29.5-25.3,48.5-28c9.2-1.3,19.2-0.7,26.6,4.9c12.2,9.3,13.2,28.8,23.3,39.4c-1.4-5.8-3.1-11-5-14.9C520.8,316.3,527,301.4,527,289z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.4396057128906)'>\n        <path\n          className={classes.crown}\n          d='M446,430.6c0,0,7.9,14.3,14.3,17.8c6.4,3.5,24.7,12.4,27.7,20.7c3,8.3,1.8,34.3,0,46.7c-1.8,12.4-11.2,31.3-12.4,39c-1.2,7.7-6.5,57.9,0,70.9c6.5,13,6.5,31.3,8.3,49.1c1.8,17.7,8.3,69.4,5.9,72.1c-2.4,2.7-14.8,14.3-21.6,2.7c-6.8-11.6-14.5-45.3-18-50.6c-3.5-5.3-24.8-46.1-26-53.2c-1.2-7.1-16.5-95.2-20.7-99.3c-4.1-4.1-11.8-33.7-13.6-52.6c-1.8-18.9-1.2-29.6,4.7-35.5c5.9-5.9,26-21.3,27.8-23.6c1.8-2.4,15.7-5.6,15.7-5.6S443.6,426.6,446,430.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.5395812988281)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M424.1,645.8c1.2,7.1,22.5,47.9,26,53.2c3.5,5.3,11.2,39,18,50.6c6.8,11.6,19.2,0,21.6-2.7c2.4-2.7-4.2-54.4-5.9-72.1c-1.8-17.7-1.8-36.1-8.3-49.1c-6.5-13-1.2-63.2,0-70.9c1-6.6,8.2-21.6,11.3-33.5c-3.8,3.2-7,7.3-10.9,10.6c-21,17.6-53.5,4.3-73.9-14c-3-2.7-6.1-5.6-9.7-7.3c3.1,16.2,8.1,32.9,11.1,36C407.5,550.6,422.9,638.7,424.1,645.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.0228881835938)'>\n        <path\n          className={classes.crown}\n          d='M700.7,708.5c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c5.6-2.4,14.5-16,14.5-29c0-13-5.9-41.4-13-46.1c-7.1-4.7-30.1-3.5-37.2,0c-7.1,3.5-11.2,8.9-19.5,4.1c-8.3-4.7-17.1-20.8-34.3-17.5c-17.1,3.3-17.1,5.1-23.1,9.8c-5.9,4.7-14.2,8.9-21.3,9.5c-7.1,0.6-26.6,0-27.2,4.1c-0.6,4.1-3,7.7-3,18.9c0,11.2-1.2,18.9,0,27.2c1.2,8.3,5.9,27.2,10,31.9c4.1,4.7,11.2,13,11.2,20.7c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7s13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7C685.9,710.8,698.9,714.5,700.7,708.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.1229248046875)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M559.4,561.3c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7c9.5,0,13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7c1.2,4.7,14.2,8.4,16,2.4c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c3.2-1.3,7.3-6.2,10.4-12.5c-17.3-1-31.9,11.9-46.7,21c-38.6,23.8-80.4,14.6-117.8-10.9c-2.1-1.4-4.6-2.8-7.2-4c2,7.9,4.8,16.4,7.4,19.3C552.3,545.3,559.4,553.6,559.4,561.3z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 814.9726867675781)'>\n        <path\n          className={classes.crown}\n          d='M832.9,453.6c0,0-7.1-13.6-17.7-9.5c-10.6,4.1-23.6,2.8-27.8,4.3c-4.1,1.6-14.8,4.5-14.2,12.2c0.6,7.7-4.2,23.6,0,35.5c4.2,11.8,11.3,34.9,18.3,40.8c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c7.1-5.3,21.4-24.2,19.9-46.7c-1.6-22.5-3.3-41.4-7.5-45.5c-4.1-4.1-17.1-3-20.1,0c-3,3-14.8,7.1-16,4.1c-1.2-3-20.1-18.3-25.4-15.4c-5.3,3-21.3,3.5-28.4,8.9C851.2,442.9,832.9,453.6,832.9,453.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 815.0726623535156)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M791.5,536.9c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c3.3-2.5,8.2-7.9,12.3-15.3c-7.5-0.5-15.3,0.3-22.8,1.1c-42.2,4.5-84.4,9.1-126.6,13.6c-6.7,0.7-9.8-0.1-12.2-1.7C788.1,533,789.8,535.5,791.5,536.9z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <path\n          className={classes.crown}\n          d='M667.2,244.5c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4s22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-6.2,6.2-16.1,27.3-17.4,34.7c-1.2,7.4-11.4,42.9-6.3,51.2c5.1,8.3,11.3,10.8,21.2,17c9.9,6.2,23.6,17.6,29.8,12.5c6.2-5.1,37.2-18.7,43.4-17.5c6.2,1.2,24.8,5,28.5,9.9c3.7,5,14.9,5,24.8,0c9.9-5,16.1-6.8,17.4-22c1.2-15.2,3.7-47.5,0-54.9c-3.7-7.4-18.6-22.3-14.9-31c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7c0-18.6-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64C678.3,210.8,671.1,249.8,667.2,244.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M742.9,297.7c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7s-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64c1,4.2-6.3,43.1-10.2,37.8c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4c6.3,11.1,22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-2.4,2.4-5.3,7-8.1,12.1c17.6-9.8,38.4-14,58.6-12.6c26.6,1.8,52.2,12.7,73.9,28.3c6,4.3,11.9,9,18.8,11.7c-0.3-3.8-0.8-6.8-1.7-8.5C754,321.3,739.1,306.4,742.9,297.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar2 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <path\n          className={classes.crown}\n          d='M863.6,231.4c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-6.6,8.3-21.5,33.6-21,43.6c0.6,9.9-6.1,35.3,0,39.7c6.1,4.4,12.7,4.4,17.7,5c5,0.6,8.3,5,11,5c2.8,0,43.6-22.6,48.5-22.1c5,0.6,18.2,10.5,25.4,12.1c7.2,1.7,27.6,5,37.5,0c9.9-5,14.9-11,16-33.1c1.1-22.1-4.4-48.5-8.3-51.8c-3.9-3.3-7.7-3.3-11-14.9c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2s-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5C869.1,223.2,865,236.5,863.6,231.4z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M946.3,292.1c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2c-4.4-3.9-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5c-1.7,5-5.7,18.4-7.2,13.2c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-1.9,2.3-4.4,6-7,10.3c5.1-2.9,10.2-5.7,15.3-8c20-9,42.5-10.4,64.3-11.6c19.1-1.1,40.2-1.5,55.5,9.4c-0.4-0.8-0.8-1.4-1.2-1.8C953.5,303.7,949.6,303.7,946.3,292.1z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\nimport Incisor1 from './Incisor/1'\nimport Incisor2 from './Incisor/2'\nimport Incisor3 from './Incisor/3'\nimport Incisor4 from './Incisor/4'\nimport Canine1 from './Canine/1'\nimport Canine2 from './Canine/2'\nimport Premolar1 from './Premolar/1'\nimport Premolar2 from './Premolar/2'\nimport Molar1 from './Molar/1'\nimport Molar2 from './Molar/2'\n\nimport classes from './style.module.scss'\n\nexport default function TeethFactory (props) {\n  const { type, index, transform = {}, state = [] } = props\n\n  return (\n    <div className={classes.root}>\n      {transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <div className={classes.circle} />\n            <span>{index + 1}</span>\n          </div>\n        </React.Fragment>\n      )}\n\n      <div\n        className={`${classes.teeth} ${classes[state]}  ${transform.flipX && classes['flip-x']} ${transform.flipY &&\n          classes['flip-y']}`}\n      >\n        <React.Fragment>\n          {type === 'Incisor1' && <Incisor1 state={state} />}\n          {type === 'Incisor2' && <Incisor2 state={state} />}\n          {type === 'Incisor3' && <Incisor3 state={state} />}\n          {type === 'Incisor4' && <Incisor4 state={state} />}\n\n          {type === 'Canine1' && <Canine1 state={state} />}\n          {type === 'Canine2' && <Canine2 state={state} />}\n\n          {type === 'Premolar1' && <Premolar1 state={state} />}\n          {type === 'Premolar2' && <Premolar2 state={state} />}\n\n          {type === 'Molar1' && <Molar1 state={state} />}\n          {type === 'Molar2' && <Molar2 state={state} />}\n        </React.Fragment>\n      </div>\n      {!transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <span>{index + 1}</span>\n            <div className={classes.circle} />\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport TeethFactory from './Teeth/TeethFactory'\n\nexport default function TeethGroup (props) {\n  const { number, teeth, states = {} } = props\n\n  const [details, setDetails] = React.useState()\n\n  React.useEffect(() => {\n    let _details = {}\n\n    switch (number) {\n      case 1:\n        _details = {\n          startAt: 0,\n          transform: {\n            flipX: 1\n          }\n        }\n        break\n\n      case 2:\n        _details = {\n          startAt: 8\n        }\n        break\n\n      case 3:\n        _details = {\n          startAt: 31,\n          reverse: true,\n          transform: {\n            flipX: 1,\n            flipY: 1\n          }\n        }\n        break\n\n      case 4:\n        _details = {\n          startAt: 23,\n          reverse: true,\n          transform: {\n            flipY: 1\n          }\n        }\n        break\n\n      default:\n        break\n    }\n\n    setDetails(_details)\n  }, [number])\n\n  return (\n    <React.Fragment>\n      {details && (\n        <React.Fragment>\n          {teeth.map((type, index) => {\n            const _index = !details.reverse ? details.startAt + index : details.startAt - index\n            return (\n              <TeethFactory\n                key={_index}\n                transform={details.transform}\n                type={type}\n                index={_index}\n                state={states[_index]}\n              />\n            )\n          })}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport TeethGroup from './TeethGroup'\n\n// Styles\nimport classes from './DentalChart.module.scss'\n\nconst teeth = {\n  uppper: {\n    left: ['Molar2', 'Molar1', 'Premolar1', 'Canine2', 'Canine1', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Canine1', 'Canine2', 'Premolar1', 'Molar1', 'Molar2']\n  },\n  lower: {\n    left: ['Molar2', 'Premolar2', 'Premolar1', 'Canine1', 'Incisor4', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Incisor4', 'Canine1', 'Premolar1', 'Premolar2', 'Molar2']\n  }\n}\n\n// props\n// states Object {\n//  enum: 'filled, extracted, default\n// }\n\nexport default function DentalChart (props) {\n  const { states } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='h6'>Dental Examination Chart</Typography>\n      </div>\n      <div className={classes.container}>\n        <div className={classes.chart}>\n          <div className={classes.upper}>\n            <TeethGroup number={1} teeth={teeth.uppper.left} states={states} />\n            <TeethGroup number={2} teeth={teeth.uppper.right} reverse states={states} />\n          </div>\n\n          <div className={classes.lower}>\n            <TeethGroup number={3} teeth={teeth.lower.left} states={states} />\n            <TeethGroup number={4} teeth={teeth.lower.right} states={states} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport DentalChart from '../../../DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.dental_procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                // isDental\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={`${classes.groups} ${classes.chart}`}>\n                <DentalChart states={constructDentalStates(claim.procedures)} />\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  isDental\n                  showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          value,\n                          field: 'facility_id',\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          value,\n                          field: 'facility_name',\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          claim_sub_type: data.claim_sub.type,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                // showContractRange\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO/ECU Specialist ID'\n                      value={claim.pro_id}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO/ECU Specialist Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_name']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          claim_source: data.claim_source,\n          medicine_category: data.medicine_category,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                showClaimSource\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      required\n                      error={error.medicine_category}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, type: true })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions, onReturn } = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packagers: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          ppe_packages: data.ppe_packages || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                showMemberAccountNumber={false}\n                showCompany\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-from'\n                      required\n                      label='Date of Service (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-to'\n                      required\n                      label='Date of Service (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['packages']}`}>\n                  <Typography>PPE Package/s:</Typography>\n                  <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                    <List>\n                      {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                        <ListItem key={index}>\n                          <ListItemText primary={`Package ${index + 1}`} />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Paper>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .messages({ 'string.empty': `\"Approval Code\" is required.` })\n    .required(),\n  contract_plan_type: Joi.string()\n    .trim()\n    .allow('', null),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .messages({ 'string.empty': `\"LOA No.\" is required.` })\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow('', null),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .allow('', null),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = fields => (data, type = false) => {\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport MainValidator from './ClaimMedicalSuppliesValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={({ value }) =>\n                        onChangeFacility({\n                          field: 'facility_id',\n                          value\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={({ value }) =>\n                        onChangeFacility({\n                          field: 'facility_name',\n                          value\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      contract_plan_type: '',\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          contract_plan_type: data.contract_plan_type,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.from).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                isCM\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  // showAmountPaidByMember={false}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  // showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  // showAmountPaidByMember={false}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfo.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfo (props) {\n  const {\n    show,\n    canPrintNotice = true,\n    setShowModal,\n    handleOnSave,\n    doReject,\n    doViewClaimNotice = () => {},\n    service,\n    lookup\n  } = props\n  const {\n    batch_number,\n    member_last_name,\n    member_first_name,\n    member_middle_name,\n    reimbursement_info_analysts: data = []\n  } = props.claim\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [items, setItems] = React.useState([])\n  const [reasonDropdown, setReasonDropdown] = React.useState([])\n\n  React.useEffect(() => {\n    setItems(data)\n  }, [data])\n\n  React.useEffect(() => {\n    if (showAdd) {\n      service\n        .lookups({\n          on: 'dropdown',\n          params: { field: lookup }\n        })\n        .then(res => {\n          const { data } = res.data\n          setReasonDropdown(\n            data.map(item => ({\n              value: item.reason,\n              text: item.reason\n            }))\n          )\n        })\n    }\n  }, [showAdd])\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnClickAdd = () => {\n    setShowAdd(true)\n\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  const handleOnClickSave = ({ item }) => {\n    setItems(items => {\n      const _items = [...items, item]\n      handleOnItemSave(_items)\n      return _items\n    })\n    setShowAdd()\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    items[index] = item\n    setItems(items => {\n      let _items = items.map((_item, _index) => {\n        if (_index === index) _item = { ...item, show: false, showCell: false }\n        return _item\n      })\n\n      handleOnItemSave(_items)\n      return _items\n    })\n  }\n\n  const handleOnClose = () => {\n    setShowModal(false)\n    setItems(items => {\n      return items.map((item, _index) => {\n        item.show = false\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          item.showCell = false\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n\n    handleOnSave(_items)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <ItemForm\n                      reasonDropdown={reasonDropdown}\n                      index={index}\n                      item={item}\n                      handleOnClickCancel={handleOnClickCancel}\n                      handleOnClickUpdate={handleOnClickUpdate}\n                      service={service}\n                      lookup={lookup}\n                      setReasonDropdown={setReasonDropdown}\n                    />\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <ItemForm\n                  index='add'\n                  reasonDropdown={reasonDropdown}\n                  item={{}}\n                  handleOnClickSave={handleOnClickSave}\n                  handleOnClickCancel={handleOnClickCancel}\n                  service={service}\n                  lookup={lookup}\n                  setReasonDropdown={setReasonDropdown}\n                />\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => setRejectModal(true)}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n          {canPrintNotice && (\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={() => doViewClaimNotice({ goBack: false })}\n            >\n              Print Notice\n            </Button>\n          )}\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n  const { index, item: _item, readOnly, reasonDropdown, service, lookup, setReasonDropdown } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction\n  } = props\n\n  const [item, setItem] = React.useState({})\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setItem({\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: today,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) item[field] = value\n        return item\n      })\n    }))\n  }\n\n  const handleOnLookup = args => {\n    const { save = false, update = false } = args\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n        if (save || update) {\n          let hasError = false\n          const reasons = item.reasons\n          const tempReasons = []\n          reasons.map(reason => {\n            const existing = data.filter(i => i.reason === reason.value)\n            if (existing.length === 0) {\n              tempReasons.push({ ...reason, value: '', error: 'Please Input a Valid Reason' })\n              hasError = true\n            } else tempReasons.push(reason)\n          })\n          setItem({ ...item, reasons: tempReasons })\n          if (hasError) {\n            return false\n          }\n          if (save) handleOnClickSave({ index, item })\n          if (update) handleOnClickUpdate({ index, item })\n        }\n      })\n  }\n\n  const _handleOnClickUpdate = () => {\n    handleOnLookup({ update: true })\n  }\n\n  const _handleOnClickSave = () => {\n    handleOnLookup({ save: true })\n  }\n\n  return (\n    <TableRow key={`collapsible-${index}`}>\n      <TableCell colSpan={headCells.length} id={`collabsible-cell-${index}`} className={classes['collapsible-cell']}>\n        <div className={`${classes.container} ${!item.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n          <div className={classes.cell}>\n            <Typography variant='h6' className={classes.label}>\n              {index === 'add' ? 'Add Item' : 'Update Item'}\n            </Typography>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-created-${index}`}\n                  label='Date Created'\n                  value={item.date_created}\n                  onChange={date => handleOnChange({ field: 'date_created', value: date.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`prepared-by-${index}`}\n                  label='Prepared By'\n                  value={item.prepared_by || ''}\n                  onChange={date => handleOnChange({ field: 'prepared_by', value: date.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-encoded-${index}`}\n                  label='Date Encoded'\n                  value={item.date_encoded}\n                  onChange={date => handleOnChange({ field: 'date_encoded', value: date.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`released-to-${index}`}\n                  label='Released To'\n                  value={item.released_to || ''}\n                  onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-released-${index}`}\n                  label='Date Released'\n                  value={item.date_released}\n                  onChange={date => handleOnChange({ field: 'date_released', value: date.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`return-date-${index}`}\n                  label='Return Date'\n                  value={item.date_return}\n                  disableComponents\n                  onChange={date => handleOnChange({ field: 'date_return', value: date.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']} style={{ width: '50%' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1 }}\n                  multiline\n                  rows={3}\n                  id='remarks'\n                  label='Remarks'\n                  value={item.remarks || ''}\n                  onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n                />\n              </div>\n            </div>\n\n            <div className={classes['reasons-container']}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Reasons\n                </Typography>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Other Details\n                </Typography>\n\n                <div className={classes.delete} />\n              </div>\n\n              {/* Reasons */}\n              {(item.reasons || []).map((item, _index) => (\n                <div className={classes.reasons} key={`reason-${_index}`}>\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <DropDown\n                      items={reasonDropdown}\n                      id={`reason-text-${_index}`}\n                      value={item.value || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })\n                      }\n                      error={item.error}\n                    />\n                  </div>\n\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <TextField\n                      id={`reason-other-details-${_index}`}\n                      value={item.other_details || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                      }\n                    />\n                  </div>\n\n                  <div className={classes.delete}>\n                    <IconButton id='delete-reason'>\n                      <DeleteIcon fontSize='small' onClick={() => handleOnClickRemoveReason(_index)} />\n                    </IconButton>\n                  </div>\n                </div>\n              ))}\n\n              <Typography\n                variant='body2'\n                className={`${classes['add-link']} ${(item.reasons || []).length ? '' : classes['empty-reasons']}`}\n                onClick={() => handleOnClickAddReason()}\n              >\n                + Add a reason\n              </Typography>\n              {/* Reasons */}\n            </div>\n\n            <div className={classes.footer}>\n              <React.Fragment>\n                {!readOnly && (\n                  <React.Fragment>\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      id='cancel'\n                      className='button-negative'\n                      onClick={() => handleOnClickCancel(index)}\n                    >\n                      Cancel\n                    </Button>\n                    {index === 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickSave}\n                        >\n                          Save\n                        </Button>\n                      </React.Fragment>\n                    )}\n                    {index !== 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickUpdate}\n                        >\n                          Update\n                        </Button>\n                      </React.Fragment>\n                    )}\n                  </React.Fragment>\n                )}\n              </React.Fragment>\n            </div>\n          </div>\n        </div>\n      </TableCell>\n    </TableRow>\n  )\n}\n","import React, { Suspense } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport DescriptionIcon from '@material-ui/icons/Description'\n\n// Styles\nimport classes from './UploadedList.module.scss'\n\n// Store\n// import { useDispatch } from 'react-redux'\n// import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n// https://i.picsum.photos/id/405/200/300.jpg?hmac=f-f0GKz4x3t4FLNM9cdniTfIv8KFbABBlSpzEkkoJ6g\n\n// const { setClaimBaseDetails } = actions\n\nconst mock_data = [{ fileName: 'Claims Receipt', fileType: 'PDF', base64: '' }, { fileName: 'Claims Image', fileType: 'IMG', base64: '' }]\n\nexport default function UploadedList (props) {\n  // const { data } = props\n  // const dispatch = useDispatch()\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Supporting Documents\n        </Typography>\n      </div>\n      <div className={classes['table']} >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='sc-claim-no'>File Name</TableCell>\n              <TableCell id='sc-due-date'>File Type</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {mock_data.map((item, index) => (\n              <TableRow key={item.user_id}>\n                <TableCell id={`batch-encoder-name-${index}`}>{item.fileName}</TableCell>\n                <TableCell id={`total-bundle-${index}`}>{item.fileType}</TableCell>\n                <TableCell align='center' id={`view-work-${index}`}>\n                  <IconButton\n                    id={`print${index}`}\n                    size='small'\n                    aria-label='more'\n                    aria-controls='long-menu'\n                    aria-haspopup='true'\n                    onClick={() => {}}\n                  >\n                    <DescriptionIcon />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    </Paper>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n\n  let additional_fields = []\n\n  switch (type) {\n    case 'InPatient':\n      additional_fields = InPatient\n      break\n    default:\n      additional_fields = other_fields\n      break\n  }\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ReimbursementInfo from '../ReimbursementInfo/ReimbursementInfo'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport UploadedList from './UploadedList/UploadedList'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Controller\nimport AdditionalFields from './AdditionalFields'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onViewClaimNotice, onChangeDoctor = () => {}, onReject, onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, onChangePro, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  // const [openDialog, setOpenDialog] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  //\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      reimbursement_type: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      diagnosis: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(undefined) })\n      setInitialAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n\n      let _claim = {\n        approval_code: data.approval_code,\n        contract_plan_type: data.contract_plan_type,\n        loa_number: data.loa_number,\n        reimbursement_type: data.reimbursement_details.type,\n        member_account_number: data.member.account_number,\n        member_last_name: data.member.last_name,\n        member_first_name: data.member.first_name,\n        member_middle_name: data.member.middle_name,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        date_from: data.date.from,\n        date_to: data.date.to,\n        medicine_category: data.medicine_category,\n        reimbursement_category: data.reimbursement_details.category,\n        official_receipt_number: data.reimbursement_details.official_receipt_number,\n        diagnosis: data.diagnosis || [],\n        procedures: data.procedures || [],\n        professional_fees: data.professional_fees || [],\n        hospital_items: data.hospital_items || [],\n        reimbursement_info: data.reimbursement_info || [],\n        reimbursement_info_analysts: data.reimbursement_info_analysts || [],\n        claim_remarks: data.claim_remarks\n      }\n\n      if (data.reimbursement_details.type === 'InPatient') {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate || 0,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name\n        }\n      } else {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          department: data.department\n        }\n      }\n      dispatch(setClaimFields(_claim))\n      setAllowedFields({\n        ..._allowedFields,\n        ...AdditionalFields(data.reimbursement_details.type)\n      })\n\n      setBatchNumber(data.batch_number)\n    })\n  }, [])\n\n  //* Room\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const [data] = res.data.data\n\n      let rooms = []\n      if (data) {\n        rooms = (data.rooms || []).map(item => ({\n          text: item.desc,\n          value: item.value,\n          rate: item.rate\n        }))\n      }\n\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n    const _claim = Object.assign({}, claim)\n    if (value !== 'InPatient') {\n      delete _claim.pro_id\n      delete _claim.pro_name\n      delete _claim.room_rate\n      delete _claim.room_type\n      delete _claim.loa_notes\n      dispatch(setClaimFields(_claim))\n    }\n    if (value === 'InPatient') {\n      const _claim = Object.assign({}, claim)\n      delete _claim.doctor_id\n      delete _claim.doctor_name\n      delete _claim.department\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          date_to: moment(claim.date_from)\n            .endOf('day')\n            .toISOString()\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              permissions={permissions.base}\n              showReimbursement\n              requiredFields={{ reimbursement_type: true }}\n            />\n            <div className={classes.wrap}>\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-id'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_id\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-id'\n                    required\n                    label='Medical Partner ID'\n                    value={claim.facility_id}\n                    suggestions={suggestions.facility}\n                    field={'id'}\n                    loading={fetching['facility_id']}\n                    onChange={(value, search) =>\n                      handleOnChangeFacility({\n                        field: 'facility_id',\n                        value,\n                        search\n                      })\n                    }\n                    error={error.facility_id}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-facility-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_name\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-facility-name'\n                    required\n                    label='Medical Partner (Facility) Name'\n                    value={claim.facility_name}\n                    suggestions={suggestions.facility}\n                    field={'id'}\n                    loading={fetching['facility_name']}\n                    onChange={(value, search) =>\n                      handleOnChangeFacility({\n                        field: 'facility_name',\n                        value,\n                        search\n                      })\n                    }\n                    error={error.facility_name}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='dp-medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-from'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_from\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-from'\n                        required\n                        label='Admission Date (From)'\n                        value={claim.date_from}\n                        onChange={date =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: date.startOf('day').toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }\n                        error={error.date_from}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-to'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-to'\n                        required\n                        label='Admission Date (To)'\n                        value={claim.date_to}\n                        onChange={date =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: date.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-type'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_type\n                      }}\n                    >\n                      <DropDown\n                        id='room-type'\n                        label='Room Type'\n                        items={dropDown.rooms}\n                        value={claim.room_type}\n                        onChange={handleOnChangeRoomType}\n                        error={error.room_type}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-rate'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_rate\n                      }}\n                    >\n                      <TextFieldCurrency\n                        id='room-rate'\n                        label='Room Rate'\n                        value={claim.room_rate}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'room_rate'\n                            })\n                          )\n                        }}\n                        error={error.room_rate}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_id']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-of-service'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='date-of-service'\n                        required\n                        label='Date of Service'\n                        value={claim.date_to}\n                        onChange={date =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: date.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-department'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.department\n                      }}\n                    >\n                      <TextField\n                        id='department'\n                        label='Department'\n                        value={claim.department}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'department'\n                            })\n                          )\n                        }\n                        error={error.pro_id}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      readOnly={!permissions.base.update}\n                      error={error.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-reimbursement-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.reimbursement_category\n                      }}\n                    >\n                      <TextField\n                        id='reimbursement-category'\n                        label='Reimbursement Category'\n                        value={claim.reimbursement_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'reimbursement_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.reimbursement_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-official-receipt-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.official_receipt_number\n                  }}\n                >\n                  <TextField\n                    id='official-receipt-number'\n                    label='Official Receipt Number'\n                    value={claim.official_receipt_number}\n                    required\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'official_receipt_number'\n                        })\n                      )\n                    }\n                    readOnly={!permissions.base.update}\n                    error={error.official_receipt_number}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <div className={classes['left-side']}>\n                {permissions.diagnosis.read && (\n                  <DiagnosisList\n                    id='diagnosis-list'\n                    permissions={permissions.diagnosis}\n                    items={claim.diagnosis}\n                    error={error.diagnosis}\n                  />\n                )}\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n              <UploadedList />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doValidate={doValidateAll}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doViewClaimNotice={onViewClaimNotice}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            onReject={({ goBack }) => setShowReimbursementModal(true)}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, field: allowedFields })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            isReimbursement\n            reimbursement_info={claim.reimbursement_info}\n          />\n          <ReimbursementInfo\n            claim={{\n              ...claim,\n              batch_number: batchNumber\n            }}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            service={ClaimsAdjudicationServices}\n            permission={permissions.reimbursement_info}\n            canPrintNotice={false}\n            doViewClaimNotice={onViewClaimNotice}\n            handleOnSave={data =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: data,\n                  field: 'reimbursement_info_analysts'\n                })\n              )\n            }\n            doReject={() => onReject({ goBack: true })}\n            lookup={'reject-reason'}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport { useHistory } from 'react-router-dom'\n\n// Styles\nimport classes from './Error.module.scss'\n\nlet history = null\n\nconst DashboardRedirect = props => {\n  const { title = `Page not found`, body = `We cant seem to find the page you're looking for.` } = props\n  const [counter, setCounter] = React.useState()\n\n  React.useEffect(() => {\n    let _counter = 10\n    setCounter(_counter)\n    let interval = setInterval(() => {\n      if (_counter) {\n        _counter--\n        setCounter(_counter)\n      } else {\n        clearInterval(interval)\n        history.push('/')\n      }\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='h4' className={classes.title}>\n        {title}\n      </Typography>\n      <Typography variant='body1' className={classes.message}>\n        {body}\n      </Typography>\n\n      <div className={classes['action-messages']}>\n        <Typography variant='body2' className={classes.message}>\n          You will be redirected to Dashboard in {counter}\n        </Typography>\n        <Typography variant='body2' className={classes.message}>\n          Click the button below to go to that page.\n        </Typography>\n      </div>\n\n      <Button variant='contained' color='primary' className='button-neutral' onClick={() => history.push('/')}>\n        Go to Dashboard\n      </Button>\n    </div>\n  )\n}\n\nconst DashboardRedirectInit = props => {\n  history = useHistory()\n  return ''\n}\n\nconst DashboardRedirectService = {\n  redirect: () => {\n    history.push('/404')\n  }\n}\n\nexport { DashboardRedirectInit, DashboardRedirect, DashboardRedirectService }\n","import React from 'react'\n\n// Services\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport { DashboardRedirect } from 'SharedComponents/DashboardRedirect/DashboardRedirect'\n\nexport default function GetClaimComponent (_props) {\n  const { _type } = _props\n  const props = _props\n\n  const SelectecClaimType = selected => {\n    // const type = ClaimTypes[selected].other_name\n    switch (selected) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        LoadingService.loading(false)\n        return <DashboardRedirect title='Claim Type Under Development' />\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  given_diagnosis: Joi.string().trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code || i.description) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport GetClaimComponent from './GetClaimComponent'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\nimport Total from 'Utilities/Total'\n\n// Validators\nimport DiagnosisListValidator from './Components/DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from './Components/HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from './Components/ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from './Components/ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from './Components/ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from './Components/HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from './Components/ProfessionalFeeForm/DiagnosisValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  resetClaim,\n  setClaimType,\n  setDropDown,\n  initDropDowns,\n  setSuggestion,\n  resetSuggestion,\n  setClaimFacility,\n  setClaimDoctor,\n  // addSuggestionToArray,\n  initDiscrepancy,\n  setDiscrepancy,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  setError,\n  resetError,\n  setEscalationMessages,\n  setInquiryMessages,\n  setClaimPro,\n  resetRecon,\n  setReconNotes,\n  setRejectStatus\n} = actions\n\nexport default function ClaimAnalysis (props) {\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsAnalysis: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  // const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n  const c_return = useSelector(({ ClaimsAnalysis: state }) => state.return)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n\n  const { ApiService, breadCrumbsList, isManager = false } = props\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false,\n    pro_id: false,\n    pro_name: false,\n    anesthesiologist_id: false,\n    anesthesiologist_name: false\n  })\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const [isMember, setIsMember] = React.useState(true)\n  const [member, setMember] = React.useState(null)\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n  const [memberFetchMessage, setMemberFetchMessage] = React.useState('')\n  const [client, setClient] = React.useState(null)\n  const [clientFetchStatus, setClientFetchStatus] = React.useState('')\n  const [grandTotal, setGrandTotal] = React.useState(0)\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n  const [claimNumber, setClaimNumber] = React.useState('')\n\n  const REPORT_LETTER_OF_ADVICE = 1\n  const REPORT_ANALYSIS_SHEET = 2\n  const REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE = 3\n  const NOTICE = 4\n\n  const getClaimType = ({ claim_number }) => {\n    setFetching(true)\n    BreadcrumbsService.setSelectedItems(breadCrumbsList)\n\n    ApiService.getClaim({ claim_number }).then(res => {\n      const { data } = res.data\n      const _claim_type = data.__type\n      dispatch(setClaimType(_claim_type))\n      dispatch(setDiscrepancy(getDiscrepancy(data.analysis_results.result)))\n      setFetching(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    dispatch(initDiscrepancy())\n    dispatch(resetError())\n    dispatch(resetRecon())\n    LoadingService.loading(true)\n    const { claim_number } = props.match.params\n\n    getClaimType({ claim_number })\n    getEscalationLogs({ claim_number })\n    getInquiryLogs({ claim_number })\n    getReconNotes({ claim_number })\n\n    return () => {\n      dispatch(setClaimType(''))\n    }\n  }, [props.match.params.claim_number])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    setGrandTotal(grand)\n    dispatch(setRejectStatus(!(grand === 0)))\n  }, [claim])\n\n  React.useEffect(() => {\n    if (error) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [error])\n\n  const getClaimDetails = callback => {\n    const { claim_number } = props.match.params\n    setClaimNumber(claim_number)\n    dispatch(\n      setProcedure({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setHospitalItem({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setProfessionalFee({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n\n    ApiService.getClaim({\n      claim_number\n    }).then(res => {\n      const { data } = res.data\n      // Set Diagnosis Suggestions\n      // const diagnosis = data.diagnosis || []\n      // diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n      callback(data)\n\n      // FETCH Member from Customer Care\n      if (data.member && data.member.account_number) {\n        const member_account_no = data.member.account_number\n        const client_account_number = data.member.customer_account_number\n        if (isMember) {\n          getMember({ member_account_no })\n        } else {\n          getClient({ client_account_number })\n        }\n      }\n\n      LoadingService.loading(false)\n    })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, search }) => {\n    console.log({ value, field, search })\n    if (search) {\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ [field]: value }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by, field })\n    } else {\n      const _value = value || {}\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ facility_id: _value.id, facility_name: _value.name }))\n      return _value.rooms\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'facility',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ doctor_id: _value.id, doctor_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'doctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n  // PRO\n  const handleOnChangePro = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimPro({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimPro({ pro_name: _value.name, pro_id: _value.employee_id }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // PRO User lookup\n          CustomerCareServices.proUsersLookup({ value, field })\n            .then(res => {\n              // limit temporary - no limit in api seer\n              const limit = []\n              for (let i = 0; i < 10; i++) {\n                if (!res.data.data[i]) break\n                limit.push(res.data.data[i])\n              }\n\n              const data = limit.map(elem => {\n                let full_name = `${elem.first_name} ${elem.last_name}`\n                delete elem.first_name\n                delete elem.last_name\n                return { ...elem, name: full_name }\n              })\n\n              dispatch(\n                setSuggestion({\n                  field: 'pro',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ anesthesiologist_id: _value.id, anesthesiologist_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n    }\n  }\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'anesthesiologist',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const getUtilizations = args => ApiService.getUtilizations(args)\n\n  const getPartners = args => ApiService.getPartners(args)\n\n  const getDoctors = args => ApiService.getDoctors(args)\n\n  const getUsers = args => ApiService.getUsers(args)\n\n  const getMember = ({ member_account_no }) => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: member_account_no }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: member_account_no })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setMemberFetchMessage(data.message.error.message || '')\n        setMemberFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getClient = ({ client_account_number }) => {\n    setClientFetchStatus('fetching')\n    CustomerCareServices.getClient({ account_number: client_account_number })\n      .then(res => {\n        const { data } = res.data\n        setClientFetchStatus('success')\n        setClient(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setClientFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getMemberContract = args => CustomerCareServices.getMemberContract(args)\n\n  const getClientContract = args => CustomerCareServices.getClientContract(args)\n\n  const getMemberContractUrl = args => CustomerCareServices.getMemberContractUrl(args)\n\n  const getClientContractUrl = args => CustomerCareServices.getClientContractUrl(args)\n\n  const getDiscrepancy = adjudicationResults => {\n    const debug = false\n    if (debug) console.group('Discrepancy Check')\n    let discrepancy = {}\n    let diagnosis = {}\n    let procedures = {}\n    let hospital_items = {}\n    let professional_fees = {}\n    if (debug) console.log(adjudicationResults)\n\n    if (adjudicationResults) {\n      adjudicationResults.map((result, index) => {\n        result.fields.map((field, fieldIndex) => {\n          if (field.item_type === 'procedures') {\n            if (!procedures[field.item_id]) procedures[field.item_id] = {}\n            if (!procedures[field.item_id][field.id]) procedures[field.item_id][field.id] = []\n            procedures = {\n              ...procedures,\n              [field.item_id]: {\n                ...procedures[field.item_id],\n                [field.id]: [...procedures[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'hospital_items') {\n            if (!hospital_items[field.item_id]) hospital_items[field.item_id] = {}\n            if (!hospital_items[field.item_id][field.id]) hospital_items[field.item_id][field.id] = []\n            hospital_items = {\n              ...hospital_items,\n              [field.item_id]: {\n                ...hospital_items[field.item_id],\n                [field.id]: [...hospital_items[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'professional_fees') {\n            if (!professional_fees[field.item_id]) professional_fees[field.item_id] = {}\n            if (!professional_fees[field.item_id][field.id]) professional_fees[field.item_id][field.id] = []\n            professional_fees = {\n              ...professional_fees,\n              [field.item_id]: {\n                ...professional_fees[field.item_id],\n                [field.id]: [...professional_fees[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else {\n            if (!discrepancy[field.id]) discrepancy[field.id] = []\n            discrepancy = { ...discrepancy, [field.id]: [...discrepancy[field.id], field.message] }\n          }\n        })\n      })\n    }\n    discrepancy = {\n      ...discrepancy,\n      diagnosis: diagnosis,\n      procedure: procedures,\n      hospital_item: hospital_items,\n      professional_fee: professional_fees\n    }\n    if (debug) console.log(discrepancy)\n    if (debug) console.groupEnd()\n    return discrepancy\n  }\n\n  const getEscalationLogs = ({ claim_number }) => {\n    ApiService.getComments({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setEscalationMessages({ messages: data }))\n    })\n  }\n\n  const getInquiryLogs = ({ claim_number }) => {\n    ApiService.getInquiries({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setInquiryMessages({ messages: data }))\n    })\n  }\n\n  const getReconNotes = ({ claim_number }) => {\n    const { permissions } = props\n    if (SafeAccess(permissions.tabs.notes, ['read'])) {\n      ApiService.getNotes({ claim_number }).then(res => {\n        const { data } = res.data\n        dispatch(setReconNotes({ messages: data }))\n      })\n    }\n  }\n\n  const getReport = mode => {\n    LoadingService.loading(true)\n    ApiService.getClaim({ claim_number: claimNumber }).then(value => {\n      LoadingService.loading(false)\n      // const hasAmount = value.data.data.has_amount_concerns\n\n      let pdf = {}\n\n      switch (mode) {\n        case REPORT_ANALYSIS_SHEET:\n          pdf = {\n            name: 'Analysis Sheet',\n            fileName: 'analysis_sheet',\n            service: ApiService.getAnalysisSheet({ claimNo: claimNumber })\n          }\n          break\n\n        case REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Reports',\n            fileName: 'reports',\n            service: ApiService.getReports({ claimNo: claimNumber }),\n            onClose: () => props.history.push('/')\n          }\n          break\n\n        case REPORT_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Letter of Advice',\n            fileName: 'letter_of_advice',\n            service: ApiService.getLetterOfAdvice({ claimNo: claimNumber })\n          }\n          break\n\n        case NOTICE:\n          pdf = {\n            name: 'Claims Notice',\n            fileName: 'claim_notice',\n            service: ApiService.getLetterNotice({ claimNo: claimNumber }),\n            onClose: () => props.history.push('/')\n          }\n          break\n      }\n\n      PdfViewer2Service({ ...pdf, open: true })\n    })\n  }\n\n  const getReason = () => {\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n    ApiService.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ApiService.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const getRooms = ({ value, by = 'id' }) => {\n    ApiService.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n          text: item.type,\n          value: item.type,\n          rate: item.rate\n        }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const handleOnEscalate = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = escalations.assignee\n      ApiService.escalate({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: escalations.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReturn = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.returnClaim({\n      claim_number: claimNumber,\n      data: { note: c_return.note }\n    }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnInquire = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = inquiries.assignee\n      ApiService.inquire({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: inquiries.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReject = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.reject({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnReassign = ({ goBack = true }) => {\n    LoadingService.loading(true)\n\n    const { id } = reassign.assignee\n\n    ApiService.reassign({\n      claim_number: claimNumber,\n      data: { receiver_id: id, message: reassign.message }\n    }).then(res => {\n      if (goBack) props.history.push('/')\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnApprove = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.approve({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnViewAnalysisSheet = () => {\n    getReport(REPORT_ANALYSIS_SHEET)\n  }\n\n  const handleOnViewLetterOfAdvice = () => {\n    getReport(REPORT_LETTER_OF_ADVICE)\n  }\n\n  const handleOnViewClaimNotice = ({ goBack = false }) => {\n    getReport(NOTICE)\n  }\n\n  const handleOnSave = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnCancel = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    if (goBack && !isManager) props.history.push('/')\n    else {\n      const { bundle_number, batch_number } = props.match.params\n      props.history.push(`/payment-request/${bundle_number}/submitted/${batch_number}`)\n    }\n    LoadingService.loading(false)\n  }\n\n  const handleOnReturnEscalate = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.comment({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnReturnInquire = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.inquire({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnRemove = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.removeClaim({ claim_number: claimNumber }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  // Validation\n  const doValidateAll = ({ validator, field = undefined, type = false }) => {\n    dispatch(resetError())\n    const base_errors = doValidateBase({ claim, validator: validator, field, type })\n    let diagnosis = {}\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    if (claim.diagnosis) {\n      diagnosis = doValidateDiagnosis({ diagnosis: claim.diagnosis })\n    }\n\n    if (claim.procedures) {\n      for (const [index, value] of claim.procedures.entries()) {\n        const error = doValidateProcedure({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          procedure = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProcedure({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n    if (claim.hospital_items) {\n      for (const [index, value] of claim.hospital_items.entries()) {\n        const error = doValidateHospitalItem({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          hospital_item = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setHospitalItem({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n    if (claim.professional_fees) {\n      for (const [index, value] of claim.professional_fees.entries()) {\n        const error = doValidateProfessionalFee({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          professional_fee = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProfessionalFee({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    return invalid\n  }\n\n  const doValidateBase = ({ claim, validator, field, type }) => {\n    const data = {}\n    const {\n      diagnosis,\n      procedures,\n      hospital_items,\n      professional_fees,\n      reimbursement_info,\n      reimbursement_info_analysts,\n      ppe_packages,\n      ...rest\n    } = claim\n    for (let f in rest) data[f] = claim[f]\n    let validate\n    if (type) validate = validator(Object.keys(field || claim))({ ...data }, true)\n    else validate = validator(Object.keys(field || claim))({ ...data })\n\n    const { error = {} } = validate\n\n    dispatch(\n      setError({\n        ...error\n      })\n    )\n    return error\n  }\n\n  const doValidateDiagnosis = ({ diagnosis }) => {\n    const error = DiagnosisListValidator(diagnosis)\n    dispatch(\n      setError({\n        diagnosis: error\n      })\n    )\n    return error\n  }\n\n  const doValidateProcedure = ({ data, index }) => {\n    const { error } = ProcedureValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ data, index }) => {\n    const { error } = HospitalItemValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        hospital_item: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ data, index }) => {\n    const { error } = ProfessionalFeeValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n    dispatch(\n      setError({\n        professional_fee: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type && (\n        <GetClaimComponent\n          // #region VARIABLES\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          fetching={fetching}\n          isMember={isMember}\n          member={member}\n          memberFetchStatus={memberFetchStatus}\n          memberFetchMessage={memberFetchMessage}\n          client={client}\n          clientFetchStatus={clientFetchStatus}\n          utilizationLoa={utilizationLoa}\n          grandTotal={grandTotal}\n          //  #endregion\n          // #region FETCHING\n          getClaimDetails={getClaimDetails}\n          getUtilizations={getUtilizations}\n          getUsers={getUsers}\n          getPartners={getPartners}\n          getDoctors={getDoctors}\n          getMember={getMember}\n          getClient={getClient}\n          getMemberContract={getMemberContract}\n          getClientContract={getClientContract}\n          getMemberContractUrl={getMemberContractUrl}\n          getClientContractUrl={getClientContractUrl}\n          getReason={getReason}\n          getRooms={getRooms}\n          //  #endregion\n          // #region EVENTS\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          onReturnEscalate={handleOnReturnEscalate}\n          onReturnInquire={handleOnReturnInquire}\n          onEscalate={handleOnEscalate}\n          onInquire={handleOnInquire}\n          onViewAnalysisSheet={handleOnViewAnalysisSheet}\n          onViewLetterOfAdvice={handleOnViewLetterOfAdvice}\n          onViewClaimNotice={handleOnViewClaimNotice}\n          onReject={handleOnReject}\n          onReassign={handleOnReassign}\n          onApprove={handleOnApprove}\n          onSave={handleOnSave}\n          onCancel={handleOnCancel}\n          onChangePro={handleOnChangePro}\n          onRemove={handleOnRemove}\n          onReturn={handleOnReturn}\n          //  #endregion\n          // #region SERVICES\n          userManagementService={UserManagementServices}\n          // #endregion\n          // #region VALIDATION\n          doValidateAll={doValidateAll}\n          doValidateDiagnosis={doValidateDiagnosis}\n          doValidateProcedure={doValidateProcedure}\n          doValidateHospitalItem={doValidateHospitalItem}\n          doValidateProfessionalFee={doValidateProfessionalFee}\n          // #endregion\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    description: Joi.string()\n      .trim()\n      .label('Description')\n      .required(),\n    code: Joi.string()\n      .trim()\n      .label('Code')\n      .required(),\n    tooth_number: Joi.string()\n      .label('Tooth Number')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    flag: Joi.boolean().default(false)\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    name: Joi.string()\n      .trim()\n      .label('Item Name')\n      .required(),\n    item_code: Joi.string()\n      .trim()\n      .label('Item Code')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      })\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Doctor Name')\n      .required(),\n    specialization: Joi.string()\n      .trim()\n      .label('Specialization')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      })\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\n\n// Pages of Batch Encoder Supervisor\nimport Dashboard from './../Components/BatchEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\n// Reports\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n        <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n        <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n        <Route\n          path='/claims/recon/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n              {...props}\n              permissions={permissions}\n              ApiService={ClaimsReconServices}\n            />\n          )}\n        />\n\n        {/* REPORTS */}\n        {generateRoutes(userRole)}\n      </Switch>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst OpenBatchesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBatches({\n        category: 'open',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'open' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setBatches({ data: openBatches, count: openBatchCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'open'\n    setFetching(true)\n    services\n      .getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setBatches(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnEncode = batch_number => {\n    services.assignBatch({ batch_number }).then(({ data: res }) => {\n      props.history.push(`/batches/${batch_number}`)\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'open'\n    setViewList({ ...initialValue, show: true, title: `Open Batches`, category })\n    setFetchingViewList(true)\n    services\n      .getBatches({ category, limit: 10, sort: 'date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'open',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='open-batches'\n        sizes={sizes}\n        count={{ color: 3, value: batches.count, id: 'open-batches-count' }}\n        title='Open Batches'\n        viewList={\n          <Typography id='ob-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`op-${item.id}`} id={`op-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={item.batch_number}>\n                  <TableCell id={`ob-batch-no-${index}`}>{item.batch_number}</TableCell>\n                  <TableCell id={`ob-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`ob-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Typography\n                      id={`encode-batch-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnEncode(item.batch_number)}\n                    >\n                      Encode\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='open-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  onClick={() => handleOnEncode(item.batch_number)}\n                >\n                  Encode\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOpenBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default OpenBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst MyBatchesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    //* My Batches\n    setFetching(true)\n    Promise.all([\n      services.getBatches({\n        category: 'my',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'my' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const myBatches = batchResponse.data.data.results\n        const myBatchCount = batchCountResponse.data.data\n        setBatches({ data: myBatches, count: myBatchCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'my'\n    setFetching(true)\n    services\n      .getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setBatches(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'my'\n    setViewList({ ...initialValue, show: true, title: `My Batches`, category })\n    setFetchingViewList(true)\n    services\n      .getBatches({ category, limit: 10, sort: 'date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'my',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-batches'\n        sizes={sizes}\n        count={{ color: 8, value: batches.count, id: 'my-batches-count' }}\n        title='My Batches'\n        viewList={\n          <Typography id='mb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`mb-${item.id}`} id={`mb-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={item.batch_number}>\n                  <TableCell id={`mb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                  <TableCell id={`mb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`mb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/batches/${item.batch_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                        Update\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='my-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default MyBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CompletedBatchesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBatches({\n        category: 'completed',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'completed' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const completedBatches = batchResponse.data.data.results\n        const completedBatchCount = batchCountResponse.data.data\n        setBatches({ data: completedBatches, count: completedBatchCount })\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'completed'\n    setFetching(true)\n    services\n      .getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setBatches(state => ({ ...state, data: data.results }))\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'completed'\n    setViewList({ ...initialValue, show: true, title: `Completed Batches`, category })\n    setFetchingViewList(true)\n    services\n      .getBatches({ category, limit: 10, sort: 'date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'completed',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='completed-batches'\n        sizes={sizes}\n        count={{ color: 5, value: batches.count, id: 'completed-batches-count' }}\n        title='Completed Batches'\n        viewList={\n          <Typography id='cb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`cb-${item.id}`} id={`cb-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={item.batch_number}>\n                  <TableCell id={`cb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                  <TableCell id={`cb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`cb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/batches/${item.batch_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n      <ViewList\n        id='completed-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCompletedBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default CompletedBatchesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [openTickets] = React.useState({ count: 0, data: [] })\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <OpenBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList\n                count={openTickets.count}\n                title='Open Tickets'\n                viewAllLink={{ to: '/batches', caption: 'View all' }}\n              >\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {openTickets.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchesPage.module.scss'\n\nexport default function BatchesPage () {\n  PageTitleService('Batches')\n  BreadcrumbsService.setSelectedItems(['dashboard', 'batches'])\n\n  return (\n    <div className={classes.root}>\n      <span>My batches</span>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails ({ details, reassign_notes = true }) {\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n        {reassign_notes && (\n          <div className={classes['input']}>\n            <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n          </div>\n        )}\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const {\n    onClickAdd,\n    onClickProviderSchedule,\n    count,\n    status,\n    type = '',\n    inputChange = null,\n    disabled = false,\n    isManager = false\n  } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims</Typography>\n        <Typography id={'claim-count'} variant='subtitle2'>{`(${count})`}</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n\n        {status !== 'Completed' && !isManager && (\n          <React.Fragment>\n            {(type === 'APE' || type === 'ECU' || type === 'PPE') && (\n              <Button\n                id={`${type.toLowerCase()}-schedule`}\n                variant='contained'\n                color='primary'\n                className={`${classes.button} button-positive`}\n                onClick={onClickProviderSchedule}\n              >\n                Provider's {type} Schedule\n              </Button>\n            )}\n\n            <Button\n              id='add-claim'\n              variant='contained'\n              color='primary'\n              className={`${classes.button} button-positive`}\n              onClick={onClickAdd}\n              disabled={disabled}\n            >\n              Add Claim\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n// import IconButton from '@material-ui/core/IconButton'\n// import DeleteIcon from '@material-ui/icons/Delete'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\nconst cmHeadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'client-account-number', numeric: false, disablePadding: false, label: 'Client Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst prManagerheadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({\n  items,\n  selectedClaimNumber,\n  onItemClick,\n  type,\n  onConfirm,\n  openDialog,\n  onCancel,\n  // forDeletion,\n  actionItems,\n  setActionItems,\n  // setForDeletion,\n  submittedBatch,\n  setSelected,\n  pagination,\n  setPagination,\n  isManager = false,\n  selectStatus = true\n}) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  const getMessage = claims => {\n    let message = 'Are you sure you want to delete this claim?'\n    if (claims.claim_numbers.length > 1) {\n      message = 'Are you sure you want to delete these claims?'\n    }\n    return message\n  }\n\n  React.useEffect(() => {\n    const data = items.map(i => ({\n      ...i,\n      selected: false\n    }))\n    setClaims({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setActionItems({ claim_numbers: [] })\n    setSelected([])\n  }, [items, selectStatus])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleClick = ({ claims, index }) => {\n    const _claims = {\n      ...claims,\n      data: claims.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n  const handleSelectAllClick = event => {\n    let _claims = claims\n\n    if (_claims.data) {\n      _claims.data.map(i => {\n        i.selected = _claims.indeterminate ? true : !_claims.checked\n        return i\n      })\n    }\n\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _claims = data || claims\n    let selected_count = 0\n    let claimNumbers = []\n    if (_claims.data) {\n      for (let c of _claims.data) {\n        if (c.selected) {\n          selected_count++\n          claimNumbers.push(c.claim_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _claims.data.length : false\n    let checked = selected_count ? selected_count === _claims.data.length : false\n    _claims = { ..._claims, indeterminate, checked }\n    setClaims(_claims)\n\n    setActionItems({ claim_numbers: claimNumbers })\n    setSelected(state => [...claimNumbers])\n  }\n  const handleItemClick = index => onItemClick(index)\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={type === 'Clinic Management' ? cmHeadCells : !isManager ? headCells : prManagerheadCells}\n        handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        pagination={pagination}\n        rowsLength={rows.length}\n        checkAll\n        indeterminate={!!claims.indeterminate}\n        checked={!!claims.checked}\n        allowCheck\n        allowCheckDisabled={submittedBatch}\n        selectStatus={selectStatus}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow\n                className={`${\n                  selectedClaimNumber === row.claim_number ? classes.selected : classes['default-override']\n                }`}\n                selected={selectedClaimNumber === row.claim_number}\n                role='checkbox'\n                tabIndex={-1}\n                key={row.claim_number}\n                id={`${row.claim_number}-${index}`}\n              >\n                {selectStatus ? (\n                  <TableCell padding='checkbox'>\n                    <Checkbox\n                      disabled={submittedBatch}\n                      checked={row.selected}\n                      color='default'\n                      onClick={event => handleClick({ index, claims })}\n                    />\n                  </TableCell>\n                ) : null}\n\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number || ''}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number || ''}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code || ''}\n                </TableCell>\n                <TableCell id={`member-name-${index}`} onClick={() => handleItemClick(index)}>{`${\n                  row.member ? row.member.first_name : ''\n                } ${row.member ? row.member.last_name : ''}`}</TableCell>\n                {type === 'Clinic Management' || type === 'PPE' ? (\n                  <React.Fragment>\n                    {type === 'Clinic Management' && (\n                      <TableCell id={`client-account-name-${index}`} onClick={() => handleItemClick(index)}>\n                        {row.client.account_name}\n                      </TableCell>\n                    )}\n                    <TableCell id={`client-account-number-${index}`} onClick={() => handleItemClick(index)}>\n                      {row.client.account_number}\n                    </TableCell>\n                  </React.Fragment>\n                ) : !isManager ? (\n                  <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.member.account_number}\n                  </TableCell>\n                ) : (\n                  <TableCell id={`account-name-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.client.account_name}\n                  </TableCell>\n                )}\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n                {isManager && (\n                  <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                    <Link\n                      to={`/payment-request/${row.bundle_number}/submitted/${row.batch_number}/claim/${row.claim_number}`}\n                    >\n                      <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                        View Claim\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      {!isManager ? (\n        <Alert\n          open={openDialog}\n          message={getMessage(actionItems)}\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={onCancel}\n          onOk={onConfirm}\n        />\n      ) : null}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ProviderSchedule.module.scss'\n\n// Validations\n\n// Store\n\nconst headCells = [\n  { id: '1', name: 'Reference No.', sortField: '' },\n  { id: '2', name: 'Inclusive Dates', sortField: '' },\n  { id: '3', name: 'Account Name', sortField: '' },\n  { id: '3', name: 'Prepared By', sortField: '' }\n]\n\nexport default function ProviderSchedule (props) {\n  // Events\n  const { type, facility, dialog, setDialog } = props\n  // Variables\n  // Services\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={() => setDialog(false)}\n      aria-labelledby='customized-dialog-title'\n      open={dialog}\n      className={classes.root}\n      PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header1}>\n          <Typography variant='h6' className={classes.title}>\n            {facility.name}\n          </Typography>\n          <div className={classes.search}>\n            <SearchTextComponent id='search' onChange={() => {}} placeholder='Search for ' />\n          </div>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.body}>\n        <div className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map((headCell, index) => (\n                    <TableCell key={`${headCell.sortField} ${index}`} id={headCell.id}>\n                      <TableSortLabel active={false} direction={'asc'} onClick={() => {}}>\n                        {type} {headCell.name}\n                      </TableSortLabel>\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                  <TableCell id={`no-record`} colSpan={5}>\n                    <div\n                      className={`${classes.cell} ${classes.center}`}\n                      style={{\n                        textAlign: 'center',\n                        fontStyle: 'italic'\n                      }}\n                    >\n                      <span>No Records</span>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              }\n              pagination={false}\n            />\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.partition}>\n              <Typography>{type} Package/s:</Typography>\n              <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                <List>\n                  {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                    <ListItem key={index}>\n                      <ListItemText primary={`Package ${index + 1}`} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </div>\n            <div className={classes.partition}>\n              <Typography>Notes:</Typography>\n              <Paper style={{ height: '200px', overflow: 'auto' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                  multiline\n                  rows={3}\n                  id='notes'\n                  value={''}\n                  disabled={false}\n                  readOnly\n                  onChange={event => {}}\n                />\n              </Paper>\n            </div>\n          </div>\n        </div>\n        <div className={classes.action}>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-negative'>\n            Close\n          </Button>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-positive'>\n            Add Claim\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\nimport ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\nimport Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const { apiService } = props\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [selectedClaimNumber, setSelectedClaimNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [submitStatus, setsubmitStatus] = React.useState('')\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [openDialog, setOpenDialog] = React.useState({})\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n  const [showProviderSchedule, setShowProviderSchedule] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [debounce, setDebounce] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n  const [cancelDialog, setCancelDialog] = React.useState({})\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        // getClaimsAndCount({ batch_number: batchNumber, search })\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  const getClaimsAndCount = ({ batch_number }) => {\n    apiService\n      .getClaims({\n        batch_number,\n        params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n      })\n      .then(res => {\n        const { results, count, page, limit } = res.data.data\n        setClaims(results)\n        setClaimCount(count)\n        setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n      })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const _batchNumber = props.match.params._batchNumber\n    setBatchNumber(_batchNumber)\n\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      setDetails(data)\n      LoadingService.loading(false)\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Completed',\n          color: 'green'\n        }\n      }\n\n      setsubmitStatus(_status.text)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', 'batches', `specificBatch:${_batchNumber}`])\n\n      PageTitleService(`Batch No. ${_batchNumber}`, {\n        text: _status.text,\n        color: _status.color\n      })\n    })\n    getClaimsAndCount({ batch_number: _batchNumber })\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const handleOnItemClick = index => {\n    const { claim_number } = claims[index]\n    setSelectedClaimNumber(claim_number)\n\n    // if (submitStatus === 'Completed') return\n\n    // props.history.push(`/batches/${batchNumber}/claims/${claim_number}`)\n  }\n\n  const handleOnUpdate = () => {\n    if (submitStatus === 'Completed') return\n\n    // if (selected.length > 1) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select ONLY one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // } else if (!selected.length) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // }\n    console.log(selectedClaimNumber)\n    if (!selectedClaimNumber || selectedClaimNumber === '') {\n      return setDialog({\n        open: true,\n        message: 'Please select one claim to update.',\n        okLabel: 'OK',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    props.history.push(`/batches/${batchNumber}/claims/${selectedClaimNumber}`)\n  }\n\n  const handleOnSubmit = index => {\n    LoadingService.loading(true)\n    setOpenDialog(state => ({ ...state, show: false }))\n\n    apiService.submitBatch({ batch_number: batchNumber }).then(res => {\n      LoadingService.loading(false)\n      props.history.push(`/`)\n    })\n  }\n\n  const onOpenDelete = claim => {\n    // setselectedClaim(claim)\n    setOpenDeleteDialog(true)\n  }\n\n  const onCancelDelete = () => {\n    setOpenDeleteDialog(false)\n  }\n\n  const onConfirmDelete = () => {\n    console.log(forDeletion)\n    apiService\n      .deleteMultipleClaim({\n        batch_number: batchNumber,\n        data: forDeletion\n      })\n      .then(() => {\n        getClaimsAndCount({ batch_number: batchNumber })\n        setOpenDeleteDialog(false)\n        setForDeletion({ claim_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDeleteDialog(false)\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader\n            batchNumber={batchNumber}\n            type={details.claim.type}\n            onClickProviderSchedule={() => setShowProviderSchedule(true)}\n            // onClickPPESchedule={() => setShowPPESchedule(true)}\n            onClickAdd={() => props.history.push(`/batches/${batchNumber}/claims/add`)}\n            count={claimCount}\n            status={submitStatus}\n            inputChange={handleSearchChange}\n            disabled={!!(details.claim.type === 'Reimbursement' && claims.length > 0)}\n          />\n          <ClaimList\n            pagination={pagination}\n            setPagination={setPagination}\n            items={claims}\n            selectedClaimNumber={selectedClaimNumber}\n            onItemClick={handleOnItemClick}\n            type={details.claim.type}\n            onConfirm={onConfirmDelete}\n            openDialog={openDeleteDialog}\n            onCancel={onCancelDelete}\n            actionItems={forDeletion}\n            setActionItems={setForDeletion}\n            setSelected={setSelected}\n            submittedBatch={submitStatus === 'Completed'}\n            selectStatus\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {submitStatus === 'In Progress' && (\n                <React.Fragment>\n                  {forDeletion.claim_numbers.length > 0 && (\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      className={`${'button-negative'} ${classes['delete-button']}`}\n                      onClick={() => {\n                        onOpenDelete(true)\n                      }}\n                      id='cancel'\n                    >\n                      Delete\n                    </Button>\n                  )}\n\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() =>\n                      setCancelDialog({\n                        open: true,\n                        message: 'Are you sure you want to cancel?',\n                        okLabel: 'Yes',\n                        cancelLabel: 'No',\n                        onCancel: () => setCancelDialog(state => ({ ...state, open: false })),\n                        onOk: () => props.history.push('/')\n                      })\n                    }\n                  >\n                    Cancel\n                  </Button>\n                  <Button variant='contained' color='primary' className='button-positive' onClick={handleOnUpdate}>\n                    Update Claim\n                  </Button>\n                  <Button\n                    id='submit-batch'\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() =>\n                      setOpenDialog(state => ({\n                        ...state,\n                        show: true,\n                        message: 'Are you sure you want to submit this batch?',\n                        handleOnOk: handleOnSubmit\n                      }))\n                    }\n                  >\n                    Submit\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {submitStatus === 'Completed' && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => props.history.push('/')}\n                >\n                  Close\n                </Button>\n              )}\n            </div>\n          </div>\n          <ProviderSchedule\n            type={details.claim.type}\n            facility={details.facility}\n            dialog={showProviderSchedule}\n            setDialog={setShowProviderSchedule}\n          />\n\n          <Alert\n            open={openDialog.show}\n            message={openDialog.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(state => ({ ...state, show: false }))}\n            onOk={openDialog.handleOnOk}\n          />\n        </React.Fragment>\n      )}\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n      <Alert\n        open={!!cancelDialog.open}\n        message={cancelDialog.message}\n        cancelLabel={cancelDialog.cancelLabel}\n        okLabel={cancelDialog.okLabel}\n        onOk={cancelDialog.onOk}\n        onCancel={cancelDialog.onCancel}\n      />\n    </div>\n  )\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  const room_type = loa.room ? loa.room.length ? loa.room[0].room_type : '' : ''\n  const room_rate = loa.room ? loa.room.length ? loa.room[0].total_amount : '' : ''\n\n  // const room_type = loa.room ? loa.room[0].room_type : ''\n  // const room_rate = loa.room ? loa.room[0].total_amount : ''\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n\n      const rooms = data[0] ? ((data[0].rooms || []).map(item => {\n        if (item.type.localeCompare(room_type, 'en', { sensitivity: 'base' }) === 0) {\n          dispatch(setClaimBaseDetails({ field: 'room_type', value: room_type.toUpperCase() }))\n          dispatch(setClaimBaseDetails({ field: 'room_rate', value: room_rate }))\n        }\n        return {\n          text: item.type,\n          value: item.type.toUpperCase(),\n          rate: item.rate\n        }\n      })) : []\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  if (diagnosis.length === 0) {\n    diagnosis.push({\n      description: primary_diagnosis,\n      code: primary_icd10_code,\n      primary: true\n    })\n  } else {\n    diagnosis.map((diag, i) => {\n      let primary = false\n      if (diag.icd10_code === primary_icd10_code) primary = true\n      diagnosis[i].primary = primary\n      diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n      diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n    })\n  }\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function Reimbursment ({ common, loa, dispatch, claim }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n  if (claim.reimbursement_type === 'InPatient') {\n    details = {\n      ...details,\n      room_type: loa.room ? loa.room[0].room_type : '',\n      room_rate: loa.room ? loa.room[0].total_amount : 0,\n      pro_id: '',\n      pro_name: ''\n    }\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0] ? ((data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))) : []\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    claim_source: '',\n    medicine_category: '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].tooth_number = procedures[i].tooth_numbers[0].toString() || '' // Check if this should be an array :/\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_issued_date ? loa.date_issued_date : Date.now(),\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || [],\n    claim_remarks: loa.remarks || ''\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\nimport MedicalSupplies from './MedicalSupplies'\nimport Pharmacy from './Pharmacy'\nimport Dental from './Dental'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\nconst AutoFill = ({ loa, claim_type, claim }) => {\n  const type = ClaimTypes[claim_type].other_name\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n\n  //* check if array\n  loa.procedures = loa.procedures ? Array.isArray(loa.procedures) ? loa.procedures : [] : []\n  loa.professional_fees = loa.professional_fees ? Array.isArray(loa.professional_fees) ? loa.professional_fees : [] : []\n  loa.hospital_items = loa.hospital_items ? Array.isArray(loa.hospital_items) ? loa.hospital_items : [] : []\n\n  switch (type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch, claim })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n    case 'MedicalSupplies':\n      MedicalSupplies({ common, loa, dispatch })\n      break\n    case 'Pharmacy':\n      Pharmacy({ common, loa, dispatch })\n      break\n    case 'Dental':\n      Dental({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport CustomerCareService from 'Services/Api/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../AutoFill'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\n// Libraries\n\nconst { setClaimBaseDetails, resetSuggestion, setSuggestion } = actions\n\nexport default function BaseDetails (props) {\n  const defaultFunction = () => {}\n\n  const {\n    onChange,\n    onChangeReimbursementType = defaultFunction,\n    handleMemberAccountNumber,\n    claim,\n    errors,\n    disableControls,\n    showReimbursement = false,\n    showCompany = false,\n    // showContractRange = false,\n    showClaimSource = false,\n    showApprovalCode = true,\n    reqApprovalCode = false,\n    showLoaNumber = true,\n    reqLoaNumber = false,\n    isDental = false,\n    showMemberAccountNumber = true,\n    isCM = false\n  } = props\n\n  const dispatch = useDispatch()\n\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [contractPlanTypeLoading, setContractPlanTypeLoading] = React.useState(false)\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleLoaDetails = event => {\n    const value = event.target.value.trim()\n\n    if (value) {\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value }).then(res => {\n        const loa = res.data\n\n        if (loa) {\n          try {\n            AutoFill({\n              loa,\n              claim_type,\n              claim\n            })\n          } catch (error) {\n            console.log(error)\n            LoadingService.loading(false)\n          }\n        }\n\n        LoadingService.loading(false)\n      }).finally(() => {\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getMemberContractPlanType({ account_number: member_id })\n      .then(res => {\n        const { data } = res.data\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: data.contract_plan_type }))\n      })\n      .catch(err => {\n        console.log(err.response)\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: '' }))\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getClientrContractPlanType({ account_number: corporate_account_no })\n      .then(res => {\n        const { data } = res.data\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: data.contract_plan_type }))\n      })\n      .catch(err => {\n        console.log(err.response)\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: '' }))\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestion({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestion({\n          field: 'contract',\n          suggestion: [{ from, to }]\n          // suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {!isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes.input}>\n                <TextField\n                  id='approval-code'\n                  label='Approval Code'\n                  required={reqApprovalCode}\n                  value={claim.approval_code}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                  onBlur={handleLoaDetails}\n                  error={errors.approval_code}\n                />\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes.input}>\n                <TextField\n                  id='loa-number'\n                  label='LOA No.'\n                  required={reqLoaNumber}\n                  value={claim.loa_number}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                  error={errors.loa_number}\n                />\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  readOnly\n                />\n              </LoadingIndicator>\n            </div>\n\n            {showClaimSource && (\n              <div className={classes.input}>\n                <TextField\n                  id='claim-source'\n                  label='Claim Source'\n                  required\n                  value={claim.claim_source}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n                  error={errors.claim_source}\n                />\n              </div>\n            )}\n\n            {showReimbursement && (\n              <div className={classes.input}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                />\n              </div>\n            )}\n          </div>\n\n          {showCompany && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextField\n                  id='company-account-number'\n                  label='Customer Account Number'\n                  value={claim.client_account_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                  error={errors.client_account_number}\n                />\n                <div className={classes.search}>\n                  <Button\n                    id='client-account-number-search'\n                    variant='outlined'\n                    className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                    onClick={handleOnClickClientLookup}\n                  >\n                    <SearchIcon />\n                  </Button>\n                </div>\n              </div>\n              <div className={classes.input}>\n                <TextField\n                  id='company-name'\n                  label='Company Name'\n                  required\n                  value={claim.client_account_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                  error={errors.client_account_name}\n                />\n              </div>\n            </div>\n          )}\n\n          <div className={classes.groups}>\n            {showMemberAccountNumber && (\n              <div className={classes.input}>\n                <TextField\n                  id='member-account-number'\n                  required\n                  label='Member Account No.'\n                  value={claim.member_account_number}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_account_number',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_account_number}\n                />\n                <div className={classes.search}>\n                  <Button\n                    id='member-account-number-search'\n                    variant='outlined'\n                    className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                    onClick={handleOnClickMemberLookup}\n                  >\n                    <SearchIcon />\n                  </Button>\n                </div>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <TextField\n                id='member-last-name'\n                required\n                label='Member Last Name'\n                value={claim.member_last_name}\n                disabled={disableControls}\n                onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                error={errors.member_last_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                id='member-first-name'\n                required\n                label='Member First Name'\n                value={claim.member_first_name}\n                disabled={disableControls}\n                onChange={event =>\n                  onChange({\n                    field: 'member_first_name',\n                    value: event.target.value\n                  })\n                }\n                error={errors.member_first_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                id='member-middle-name'\n                label='Member Middle Name'\n                required={!!isDental}\n                value={claim.member_middle_name}\n                disabled={disableControls}\n                onChange={event =>\n                  onChange({\n                    field: 'member_middle_name',\n                    value: event.target.value\n                  })\n                }\n                error={errors.member_middle_name}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextField\n                id='client-account-number'\n                label='Client Account Number'\n                value={claim.client_account_number}\n                disabled={disableControls}\n                required\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'client_account_number'\n                    })\n                  )\n                }\n                error={errors.client_account_number}\n              />\n              <div className={classes.search}>\n                <Button\n                  id='client-account-number-search'\n                  variant='outlined'\n                  className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                  onClick={handleOnClickClientLookup}\n                >\n                  <SearchIcon />\n                </Button>\n              </div>\n            </div>\n            <div className={classes.input}>\n              <TextField\n                id='client-account-name'\n                label='Client Account Name'\n                value={claim.client_account_name}\n                disabled={disableControls}\n                required\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'client_account_name'\n                    })\n                  )\n                }\n                error={errors.client_account_name}\n              />\n            </div>\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  disabled\n                />\n              </LoadingIndicator>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <AutoFillInitializer />\n\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <div className={classes.actions} />\n\n        {/* <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary\n        </Typography> */}\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    givenDiag = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeGivenDiag,\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    errors = { description: '', code: '' },\n    onDeleteDiagnosis,\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          <div className={classes.actions} />\n          <Typography variant='subtitle2' className={classes.description}>\n            Given Diagnosis *\n          </Typography>\n        </div>\n        <div className={classes['given-diagnosis']}>\n          <AutoComplete\n            id={`given-${id}`}\n            value={givenDiag}\n            suggestions={suggestions.given_diagnosis}\n            field={'given_diagnosis'}\n            loading={fetching['given_diagnosis']}\n            onChange={onChangeGivenDiag}\n            error={errors.given_diagnosis}\n          />\n        </div>\n        <div className={classes.header}>\n          <div className={classes.actions} />\n          <Typography variant='subtitle2' className={classes.description}>\n            ICD10 Description *\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.code}>\n            ICD10 Code *\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.primary}>\n            Primary\n          </Typography>\n        </div>\n        <div className={classes['sub-wrapper']}>\n          <div className={classes.actions}>\n            <IconButton id='delete-icd' onClick={() => setOpenDialog(true)}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          </div>\n\n          <Tooltip\n            onClose={() => setTooltipOpen(false)}\n            onOpen={handleTooltipOpen}\n            open={tooltipOpen}\n            title={description}\n          >\n            {/* {console.log('error ', errors)} */}\n            <div className={`${classes['description']}`}>\n              <AutoComplete\n                id={id}\n                value={description}\n                suggestions={suggestions.description}\n                field={'description'}\n                loading={fetching['description']}\n                onChange={onChangeDescription}\n                error={errors.description}\n              />\n            </div>\n          </Tooltip>\n\n          <div className={`${classes['code']}`}>\n            <AutoComplete\n              id={codeId}\n              value={code}\n              suggestions={suggestions.code}\n              field={'code'}\n              loading={fetching['code']}\n              onChange={onChangeCode}\n              error={errors.code}\n            />\n          </div>\n\n          <div className={classes.primary}>\n            <Radio color='primary' checked={primary} onClick={onChangePrimary} />\n          </div>\n        </div>\n      </div>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to delete this diagnosis?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={() => {\n          setOpenDialog(false)\n          onDeleteDiagnosis()\n        }}\n      />\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  addClaimDiagnosis,\n  addSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  removeSuggestionToArray,\n  resetSuggestion,\n  setSuggestion,\n  removeClaimDiagnosis\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, errors = [] } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState(null)\n  const [fetching, setFetching] = React.useState([\n    {\n      given_diagnosis: false,\n      description: false,\n      code: false\n    }\n  ])\n\n  React.useEffect(() => items && items.length === 0 && handleOnClickAddDiagnosis(), [])\n\n  const handleOnClickAddDiagnosis = () => {\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, search, index } = args\n    if (search) {\n      dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'icd10', index }))\n      getIcd10Suggestions({ value, by: field, index, synonym: field === 'given_diagnosis' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setClaimDiagnosis({\n          index,\n          data: { description: _value.description, code: _value.code }\n        })\n      )\n      // if (field === 'given_diagnosis') {\n      //   getIcd10Suggestions({ value, by: field, index, synonym: true })\n      // }\n    }\n  }\n\n  const getIcd10Suggestions = ({ value = '', by, index, synonym = false }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setFetching(state => ({ ...state, [index]: { ...state[index], [by]: true } }))\n        if (value) {\n          if (by === 'given_diagnosis') {\n            ClaimsEncodingServices.getICDSynonyms({ query: value })\n              .then(res => {\n                const { data } = res.data\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          } else {\n            IcdCptStorageServices.lookups({\n              on: 'icd-10',\n              params: { query: value, by }\n            })\n              .then(res => {\n                const { data } = res.data\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          }\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n  }\n\n  return (\n    <div className={classes.groups}>\n      <div className={`${classes['diagnosis-list']} ${errors.error && classes['has-error']}`}>\n        <Typography variant='h6' className={classes.title}>\n          Diagnosis List\n        </Typography>\n        <ICDTextFields>\n          {items.map((item, index) => {\n            let error = null\n\n            try {\n              error = errors.items[index]\n            } catch (_error) {}\n\n            return (\n              <ICDTextField\n                key={`icd-${index}`}\n                id={`icd-description-${index}`}\n                codeId={`icd-code-${index}`}\n                errors={error || {}}\n                givenDiag={item.given_diagnosis}\n                description={item.description}\n                suggestions={suggestions}\n                code={item.code}\n                primary={item.primary}\n                onChangeGivenDiag={(value, search) =>\n                  handleOnChangeIcd10({ field: 'given_diagnosis', index, value, search })\n                }\n                onChangeDescription={(value, search) =>\n                  handleOnChangeIcd10({ field: 'description', index, value, search })\n                }\n                onChangeCode={(value, search) => handleOnChangeIcd10({ field: 'code', index, value, search })}\n                onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                onDeleteDiagnosis={() => handleOnRemoveDiagnosis(index)}\n                fetching={fetching[index]}\n              />\n            )\n          })}\n        </ICDTextFields>\n\n        <Button\n          id='add-diagnosis-button'\n          className={classes['add-diagnosis-button']}\n          onClick={handleOnClickAddDiagnosis}\n        >\n          + Add a diagnosis\n        </Button>\n      </div>\n      {errors.error && <span className={classes.error}>{errors.list}</span>}\n    </div>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './CptTextField.module.scss'\n\nconst CptTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Procedure Details *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          CPT Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst CptTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    errors,\n    description = '',\n    code = '',\n    suggestions = [],\n    onChangeDescription,\n    onChangeCode = () => {},\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions}\n              field={'description'}\n              onChange={(value, search) => onChangeDescription(value, search)}\n              loading={fetching['description']}\n              error={errors.description}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions}\n            field={'code'}\n            onChange={(value, search) => onChangeCode(value, search)}\n            loading={fetching['code']}\n            error={errors.code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { CptTextFields, CptTextField }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProcedure,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function ProcedureForm (props) {\n  const {\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showPhilhealthRemarks = true,\n    diagnosis,\n    doValidate,\n    errors\n  } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const procedure = useSelector(({ ClaimsEncoding: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  // const [errorss, setErrors] = React.useState({})\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('procedure.show', state => {\n      // setErrors({})\n      dispatch(setError({ procedure: { index: null, details: {} } }))\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = procedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProcedure({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeCpt = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProcedure({ details: { [field]: value } }))\n      // const { 1: by } = field.split('_')\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      getCptSuggestions({ value, by: field })\n    } else {\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      const _value = value || {}\n      return dispatch(\n        setProcedure({\n          details: { description: _value.description, code: _value.code }\n        })\n      )\n    }\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'cpt',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnSaveProcedure = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: procedure.details })\n    dispatch(\n      setError({\n        procedure: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n    dispatch(addClaimProcedure(procedure.details))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: procedure.details })\n    dispatch(\n      setError({\n        procedure: { index, ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProcedure({ index, details: procedure.details }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setProcedure({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    procedure.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={procedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={procedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={procedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={procedure.details.description}\n                suggestions={suggestions.cpt}\n                code={procedure.details.code}\n                onChangeDescription={(value, search) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    search\n                  })\n                }\n                onChangeCode={(value, search) => handleOnChangeCpt({ field: 'code', value, search })}\n                fetching={fetching}\n                errors={errors}\n              />\n            </CptTextFields>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-gross-amount'\n                label='Gross Amount'\n                value={procedure.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-vat-amount'\n                label='VAT Amount'\n                value={procedure.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={procedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={procedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n              {showPhilhealthRemarks && (\n                <div className={classes.input}>\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProcedure}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='procedure-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProcedure({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProcedure(procedure.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='procedure-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this procedure?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProcedure(procedure.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './HospitalItemTextField.module.scss'\n\nconst HospitalItemTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Item Name *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          Item Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst HospitalItemTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    name = '',\n    item_code = '',\n    errors,\n    suggestions = [],\n    onChangeName,\n    onChangeCode = () => {},\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!name.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={name}>\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              required\n              value={name}\n              suggestions={suggestions}\n              field={'name'}\n              onChange={onChangeName}\n              loading={fetching.name}\n              error={errors.name}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            required\n            value={item_code}\n            suggestions={suggestions.item_code}\n            field={'item_code'}\n            onChange={onChangeCode}\n            loading={fetching.item_code}\n            error={errors.item_code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { HospitalItemTextFields, HospitalItemTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required()\n    .messages({\n      'string.empty': `\"Item Name\" is required.`\n    }),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required()\n    .messages({\n      'string.empty': `\"Item Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { HospitalItemTextFields, HospitalItemTextField } from '../HospitalItemTextField/HospitalItemTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport HospitalItemFormValidator from './HospitalItemFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n/// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setHospitalItem,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetSuggestion,\n  setSuggestion,\n  setError\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthRemarks = true, diagnosis, errors, doValidate } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const hospitalItem = useSelector(({ ClaimsEncoding: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false,\n    name: false,\n    item_code: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('hospitalItem.show', state => {\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = hospitalItem.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeHospitalItem = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setHospitalItem({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setHospitalItem({\n          details: {\n            id: _value.id,\n            name: _value.name,\n            item_code: _value.item_code\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'hospitalItem',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeHospitalForm = args => {\n    const { value, field } = args\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSaveHospitalItem = () => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    const _errors = doValidate({ data: hospitalItem.details })\n    dispatch(\n      setError({\n        hospital_item: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimHospitalItem(hospitalItem.details))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnUpdateHospitalItem = index => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    const _errors = doValidate({ data: hospitalItem.details })\n    dispatch(\n      setError({\n        hospital_item: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnRemoveHospitalItem = index => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    dispatch(removeClaimHospitalItem({ index }))\n    dispatch(setHospitalItem({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    hospitalItem.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={hospitalItem.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={hospitalItem.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={hospitalItem.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <HospitalItemTextFields>\n            <HospitalItemTextField\n              id='hospital-item-name'\n              codeId={`hospital-item-code`}\n              name={hospitalItem.details.name || ''}\n              item_code={hospitalItem.details.item_code || ''}\n              suggestions={suggestions.hospitalItem}\n              onChangeName={(value, search) => handleOnChangeHospitalItem({ field: 'name', value, search })}\n              onChangeCode={(value, search) => handleOnChangeHospitalItem({ field: 'item_code', value, search })}\n              fetching={fetching}\n              errors={errors}\n            />\n          </HospitalItemTextFields>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-gross-amount'\n                label='Gross Amount'\n                value={hospitalItem.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-vat-amount'\n                label='VAT Amount'\n                value={hospitalItem.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='hospital-item-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={hospitalItem.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={hospitalItem.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={hospitalItem.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveHospitalItem}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='hospital-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setHospitalItem({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {hospitalItem.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateHospitalItem(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='hospital-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this hospital item?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveHospitalItem(hospitalItem.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required()\n    .messages({\n      'string.empty': `\"Medical Partner ID\" is required.`\n    }),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Name\" is required.`\n    }),\n  specialization: Joi.string()\n    .trim()\n    .label('Doctor Specialization')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Specialization\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProfessionalFeeFormValidator from './ProfessionalFeeFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProfessionalFee,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  resetSuggestion,\n  setSuggestion,\n  setError\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const { diagnosis, doValidate, errors } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const professionalFee = useSelector(({ ClaimsEncoding: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    doctor_id: false,\n    doctor_name: false,\n    description: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('professionalFee.show', state => {\n      dispatch(setError({ procedure: { index: null, details: {} } }))\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = professionalFee.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            doctor_id: _value.id,\n            doctor_name: _value.full_name,\n            specialization: _value.specialization.main + ', ' + _value.specialization.major\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'pfDoctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Specialization\n  const handleOnChangeSpecialization = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'specialization' }))\n      getSpecializationSuggestions({ value, by: 'description' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            specialization: _value.description\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'specialization' }))\n    }\n  }\n\n  const getSpecializationSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getDoctorSpecilizations({ data: value })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'specialization',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeProfessionalFeeForm = args => {\n    const { value, field } = args\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnSaveProfessionalFee = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _errors = doValidate({ data: professionalFee.details })\n    dispatch(\n      setError({\n        professional_fee: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimProfessionalFee(professionalFee.details))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnUpdateProfessionalFee = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _errors = doValidate({ data: professionalFee.details })\n    dispatch(\n      setError({\n        professional_fee: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnRemoveProfessionalFee = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    dispatch(setProfessionalFee({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    professionalFee.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={professionalFee.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={professionalFee.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={professionalFee.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-medical-partner-id'\n                required\n                label='Medical Partner ID'\n                value={professionalFee.details.doctor_id || ''}\n                suggestions={pfSuggestions.pfDoctor}\n                field={'id'}\n                loading={fetching['doctor_id']}\n                onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_id', value, search })}\n                error={errors.doctor_id}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-doctor-name'\n                required\n                label='Doctor Name'\n                value={professionalFee.details.doctor_name || ''}\n                suggestions={pfSuggestions.pfDoctor}\n                field={'full_name'}\n                loading={fetching['doctor_name']}\n                onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_name', value, search })}\n                error={errors.doctor_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-specialization'\n                required\n                label='Specialization'\n                value={professionalFee.details.specialization || ''}\n                suggestions={pfSuggestions.specialization}\n                field={'description'}\n                loading={fetching['description']}\n                onChange={(value, search) => handleOnChangeSpecialization({ field: 'specialization', value, search })}\n                error={errors.specialization}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-gross-amount'\n                label='Gross Amount'\n                value={professionalFee.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-vat-amount'\n                label='VAT Amount'\n                value={professionalFee.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-amount-paid-by-member'\n                label='Amount Paid by Member'\n                value={professionalFee.details.amount_paid_by_member}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'amount_paid_by_member',\n                    value: event.target.value\n                  })\n                }\n                error={errors.amount_paid_by_member}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={professionalFee.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                multiline\n                rows={3}\n                id='philhealth-remarks'\n                label='PhilHealth Remarks'\n                value={professionalFee.details.philhealth_remarks}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_remarks',\n                    value: event.target.value\n                  })\n                }\n              />\n            </div>\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProfessionalFee}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='professional-fee-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProfessionalFee({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {professionalFee.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProfessionalFee(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='professional-fee-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this professional fee?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProfessionalFee(professionalFee.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProcedure, setProfessionalFee, setHospitalItem, resetSuggestion, setDentalProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, isDental = false } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    if (isDental) return dispatch(setDentalProcedure({ show: false }))\n\n    dispatch(setProcedure({ show: false }))\n  }, [])\n\n  const showProcedureForm = params => e => {\n    dispatch(resetSuggestion({ field: 'cpt' }))\n\n    if (isDental) {\n      dispatch(setDentalProcedure(params))\n    } else {\n      dispatch(setProcedure(params))\n    }\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.description} ${i.code} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProcedureForm({ show: true, mode: 'add' })}\n          >\n            + Add Procedure\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`procedure-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProcedureForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`procedure-row-description-${index}`}>{i.description}</td>\n                <td id={`procedure-row-code-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.code}\n                </td>\n                <td id={`procedure-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'procedure-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setHospitalItem, setProcedure, setDentalProcedure, setProfessionalFee, resetSuggestion } = actions\n\nexport default function HospitalItemList (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setHospitalItem({ show: false }))\n  }, [])\n\n  const showHospitalItemForm = params => e => {\n    dispatch(resetSuggestion({ field: 'hospitalItem' }))\n    dispatch(setHospitalItem(params))\n\n    // TODO currently creating baseform\n    dispatch(setProcedure({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.name} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showHospitalItemForm({ show: true, mode: 'add' })}\n          >\n            + Add Items\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`hospital-item-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']} `}\n                onClick={showHospitalItemForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`hospital-item-row-name-${index}`}>{i.name}</td>\n                <td id={`hospital-item-row-code${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.item_code}\n                </td>\n                <td id={`hospital-item-row-amount${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'hospital-item-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProfessionalFee, setHospitalItem, setProcedure, setDentalProcedure, resetSuggestion } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data } = props\n\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setProfessionalFee({ show: false }))\n  }, [])\n\n  const showProfessionalFeeForm = params => e => {\n    dispatch(resetSuggestion({ field: 'pfDoctor' }))\n    dispatch(setProfessionalFee(params))\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.doctor_name} ${i.specialization} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProfessionalFeeForm({ show: true, mode: 'add' })}\n          >\n            + Add Professional Fee\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`professional-fee-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProfessionalFeeForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`professional-fee-row-doctor-${index}`}>{i.doctor_name}</td>\n                <td id={`professional-fee-row-specialization-${index}`}>{i.specialization}</td>\n                <td id={`professional-fee-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'professional-fee-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data || ''}\n          onChange={event =>\n            dispatch(\n              setClaimBaseDetails({\n                value: event.target.value,\n                field: 'claim_remarks'\n              })\n            )\n          }\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\nexport default function ClaimFooter (props) {\n  const { handleOnSave, doValidate, setOpenDialog, openDialog, onOk, setShowReimbursementModal } = props\n\n  const doValidateMiddleware = () => {\n    if (doValidate()) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {setShowReimbursementModal && (\n        <Button\n          variant='contained'\n          color='primary'\n          id='return'\n          className='button-positive'\n          onClick={() => !doValidateMiddleware() && setShowReimbursementModal(true)}\n        >\n          Return\n        </Button>\n      )}\n\n      <Button\n        variant='contained'\n        color='primary'\n        id='save-for-now'\n        className='button-positive'\n        onClick={() => !doValidateMiddleware() && handleOnSave(true)}\n      >\n        Save for now\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        id='save-and-close'\n        className='button-positive'\n        onClick={() => !doValidateMiddleware() && handleOnSave(false)}>\n        Save and Close\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        id='cancel'\n        className='button-negative'\n        onClick={() => setOpenDialog(true)}\n      >\n        Cancel\n      </Button>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to cancel?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={onOk}\n      />\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .allow('', null),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .allow('', null),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .default('')\n      .allow('', null),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .default('')\n      .allow('', null),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .default('')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .allow('', null),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .messages({ 'string.empty': `\"Claim Sub Type\" is required.` })\n      .required(),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  const {\n    claim,\n    onChangeFacility,\n    getClaimDetails,\n    onChangePro,\n    apiService,\n    doValidateAll,\n    onSave,\n    doValidateProcedure,\n    doValidateHospitalItem,\n    doValidateProfessionalFee\n  } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0].rooms || []).map(room => ({\n              text: room.desc,\n              value: room.value,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Date Admitted'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Date Discharged'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='room-type'\n                  required\n                  label='Room Type'\n                  items={dropDown.rooms}\n                  value={claim.room_type}\n                  disabled={disableControls}\n                  onChange={handleOnChangeRoomType}\n                  error={errors.room_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='room-rate'\n                  required\n                  label='Room Rate'\n                  value={claim.room_rate}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'room_rate'\n                      })\n                    )\n                  }\n                  error={errors.room_rate}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'employee_id'}\n                  loading={fetching['pro_id']}\n                  required\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'name'}\n                  loading={fetching['pro_name']}\n                  required\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n\n  const { doValidateAll, onSave, doValidateProcedure, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            department: data.department,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='department'\n                  label='Department'\n                  value={claim.department}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'department'\n                      })\n                    )\n                  }\n                  error={errors.department}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist}\n                  field={'id'}\n                  loading={fetching['anesthesiologist_id']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  field={'full_name'}\n                  loading={fetching['anesthesiologist_name']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails, apiService } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            recommendation: data.recommendation,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='recommendation'\n                  label='Recommendation'\n                  value={claim.recommendation}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'recommendation'\n                      })\n                    )\n                  }\n                  error={errors.recommendation}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist}\n                  field={'id'}\n                  loading={fetching['anesthesiologist_id']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist}\n                  field={'full_name'}\n                  loading={fetching['anesthesiologist_name']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails, onChangePro, apiService } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  required\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  required\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'employee_id'}\n                  loading={fetching['pro_id']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  required\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'name'}\n                  loading={fetching['pro_name']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required(),\n  tooth_number: Joi.string()\n    .label('Tooth Number')\n    .required()\n    .messages({\n      'string.empty': `\"Tooth Number\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ToothNumber.module.scss'\n\nexport default function ToothNumber (props) {\n  const { label = '', readOnly, error, onChange, value = '', required = false } = props\n  return (\n    <div className={classes['root']}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {`${label} ${required ? '*' : ''}`}\n      </Typography>\n      <div>\n        <TextField value={value} id='tooth-number' onChange={onChange} readOnly={readOnly} error={error} />\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DentalProcedureFormValidator from './DentalProcedureFormValidator'\nimport ToothNumber from '../ToothNumber/ToothNumber'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './DentalProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setDentalProcedure,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function DentalProcedureForm (props) {\n  const {\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showPhilhealthRemarks = true,\n    diagnosis,\n    doValidate,\n    errors\n  } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const dentalProcedure = useSelector(({ ClaimsEncoding: state }) => state.dentalProcedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('dentalProcedure.show', state => {\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = dentalProcedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setDentalProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setDentalProcedure({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeCpt = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setDentalProcedure({ details: { [field]: value } }))\n      // const { 1: by } = field.split('_')\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      getCptSuggestions({ value, by: field })\n    } else {\n      const _value = value || {}\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      return dispatch(\n        setDentalProcedure({\n          details: { description: _value.description, code: _value.code }\n        })\n      )\n    }\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'cpt',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnSaveProcedure = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: dentalProcedure.details })\n    dispatch(\n      setError({\n        procedure: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimProcedure(dentalProcedure.details))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: dentalProcedure.details })\n    dispatch(\n      setError({\n        procedure: { index, ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProcedure({ index, details: dentalProcedure.details }))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setDentalProcedure({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    dentalProcedure.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={dentalProcedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={dentalProcedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={dentalProcedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={dentalProcedure.details.description}\n                suggestions={suggestions.cpt}\n                code={dentalProcedure.details.code}\n                onChangeDescription={(value, search) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    search\n                  })\n                }\n                onChangeCode={(value, search) => handleOnChangeCpt({ field: 'code', value, search })}\n                fetching={fetching}\n                errors={errors}\n              />\n            </CptTextFields>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <ToothNumber\n                id='tooth-number'\n                label='Tooth Number'\n                required\n                value={dentalProcedure.details.tooth_number}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'tooth_number',\n                    value: event.target.value\n                  })\n                }\n                error={errors.tooth_number}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-gross-amount'\n                label='Gross Amount'\n                value={dentalProcedure.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-vat-amount'\n                label='VAT Amount'\n                value={dentalProcedure.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={dentalProcedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={dentalProcedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n              {showPhilhealthRemarks && (\n                <div className={classes.input}>\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={dentalProcedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {dentalProcedure.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProcedure}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='procedure-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setDentalProcedure({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n            {dentalProcedure.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProcedure(dentalProcedure.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='procedure-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this procedure?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProcedure(dentalProcedure.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\n// import ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport DentalChart from 'Pages/Protected/Claims/Components/DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\n// Libraries\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails } = props\n  const { doValidateAll, onSave, doValidateDentalProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_last_name: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.dental_procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n              isDental\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.chart}`}>\n              <DentalChart states={constructDentalStates(claim.procedures)} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <DentalProcedureForm\n                    errors={errors.procedure}\n                    doValidate={doValidateDentalProcedure}\n                    showPhilhealthField={false}\n                  />\n                  <HospitalItemForm errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, flag: true })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: data.date.to,\n            date_to: data.date.to,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            hospital_items: data.hospital_items || [],\n            loa_number: data.loa_number,\n            medicine_category: data.medicine_category,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            procedures: data.procedures || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.desc,\n      rate: item.rate || 0\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              reqLoaNumber\n              reqApprovalCode\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category'\n                  value={claim.medicine_category}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, getClaimDetails, onChangePro, apiService } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            claim_sub_type: data.claim_sub.type,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-id'\n                  required\n                  label='PRO/ECU Specialist ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'employee_id'}\n                  loading={fetching['pro_id']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-name'\n                  required\n                  label='PRO/ECU Specialist Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'name'}\n                  loading={fetching['pro_name']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packages: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            ppe_packages: data.ppe_packages || [],\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              showMemberAccountNumber={false}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-from'\n                  required\n                  label='Date of Service (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(date)\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-to'\n                  required\n                  label='Date of Service (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>PPE Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initSuggestions } = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            claim_source: data.claim_source,\n            medicine_category: data.medicine_category,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.to,\n            date_to: data.date.to,\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.desc,\n      rate: item.rate || 0\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showClaimSource\n              reqApprovalCode\n              reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(date)\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category *'\n                  value={claim.medicine_category}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .allow('', null),\n  contract_plan_type: Joi.string()\n    .trim()\n    .allow('', null),\n  loa_number: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .allow('', null),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  // Used initial for Dental, added here to bypass validation\n  flag: Joi.boolean().default(false),\n\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = fields => (data, type = false) => {\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport MainValidator from './ClaimMedicalSuppliesValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: new Date(data.date.to).toISOString(),\n            date_to: new Date(data.date.to).toISOString(),\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              // reqApprovalCode\n              // reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={({ value }) =>\n                    onChangeFacility({\n                      field: 'facility_id',\n                      value\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={({ value }) =>\n                    onChangeFacility({\n                      field: 'facility_name',\n                      value\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const { claim, getClaimDetails } = props\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      contract_plan_type: '',\n      client_account_number: '',\n      client_account_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            contract_plan_type: data.contract_plan_type,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              isCM\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfo.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfo (props) {\n  const { show, setShowModal, handleOnSave, doReject, doViewClaimNotice = () => {}, service, lookup } = props\n  const {\n    batch_number,\n    member_last_name,\n    member_first_name,\n    member_middle_name,\n    reimbursement_info: data = []\n  } = props.claim\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [isModified, setIsModified] = React.useState(false)\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [showSaveAlert, setShowSaveAlert] = React.useState(false)\n  const [items, setItems] = React.useState([])\n  const [reasonDropdown, setReasonDropdown] = React.useState([])\n\n  React.useEffect(() => {\n    setItems(data)\n  }, [data])\n\n  React.useEffect(() => {\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n      })\n  }, [])\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnClickAdd = () => {\n    setShowAdd(true)\n\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  const handleOnClickSave = ({ item }) => {\n    setItems(items => {\n      const _items = [...items, item]\n      handleOnItemSave(_items)\n      return _items\n    })\n    setIsModified(true)\n    setShowAdd()\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    items[index] = item\n\n    setItems(items => {\n      let _items = items.map((_item, _index) => {\n        if (_index === index) _item = { ...item, show: false, showCell: false }\n        return _item\n      })\n      handleOnItemSave(_items)\n      return _items\n    })\n    setIsModified(true)\n  }\n\n  const handleOnClose = () => {\n    setShowModal(false)\n    setItems(items => {\n      return items.map((item, _index) => {\n        item.show = false\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          item.showCell = false\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n\n    handleOnSave(_items)\n  }\n\n  const handleOnClickPrintNotice = () => {\n    if (!isModified && items.length > 0) doViewClaimNotice({ goBack: false })\n    else setShowSaveAlert(true)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <ItemForm\n                      reasonDropdown={reasonDropdown}\n                      index={index}\n                      item={item}\n                      handleOnClickCancel={handleOnClickCancel}\n                      handleOnClickUpdate={handleOnClickUpdate}\n                      service={service}\n                      lookup={lookup}\n                      setReasonDropdown={setReasonDropdown}\n                    />\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <ItemForm\n                  index='add'\n                  reasonDropdown={reasonDropdown}\n                  item={{}}\n                  handleOnClickCancel={handleOnClickCancel}\n                  handleOnClickSave={handleOnClickSave}\n                  service={service}\n                  lookup={lookup}\n                  setReasonDropdown={setReasonDropdown}\n                />\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => setRejectModal(true)}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n          <Button variant='contained' color='primary' className='button-positive' onClick={handleOnClickPrintNotice}>\n            Print Notice\n          </Button>\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n\n      <Alert\n        open={showSaveAlert}\n        message='These records have been updated. Please save this Claim before proceeding with \"Print Notice\".'\n        okLabel='Yes'\n        onOk={() => {\n          setShowSaveAlert(false)\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n  const { index, item: _item, readOnly, reasonDropdown, service, lookup, setReasonDropdown } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction\n  } = props\n\n  const [item, setItem] = React.useState({})\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setItem({\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: today,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) {\n          item[field] = value\n          item.error = ''\n        }\n        return item\n      })\n    }))\n  }\n\n  const handleOnLookup = args => {\n    const { save = false, update = false } = args\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n        if (save || update) {\n          let hasError = false\n          const reasons = item.reasons\n          const tempReasons = []\n          reasons.map(reason => {\n            const existing = data.filter(i => i.reason === reason.value)\n            if (existing.length === 0) {\n              tempReasons.push({ ...reason, value: '', error: 'Please Input a Valid Reason' })\n              hasError = true\n            } else tempReasons.push(reason)\n          })\n          setItem({ ...item, reasons: tempReasons })\n          if (hasError) {\n            return false\n          }\n          if (save) handleOnClickSave({ index, item })\n          if (update) handleOnClickUpdate({ index, item })\n        }\n      })\n  }\n\n  const _handleOnClickUpdate = () => {\n    handleOnLookup({ update: true })\n  }\n\n  const _handleOnClickSave = () => {\n    handleOnLookup({ save: true })\n  }\n\n  return (\n    <TableRow key={`collapsible-${index}`}>\n      <TableCell colSpan={headCells.length} id={`collabsible-cell-${index}`} className={classes['collapsible-cell']}>\n        <div className={`${classes.container} ${!item.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n          <div className={classes.cell}>\n            <Typography variant='h6' className={classes.label}>\n              {index === 'add' ? 'Add Item' : 'Update Item'}\n            </Typography>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-created-${index}`}\n                  label='Date Created'\n                  value={item.date_created}\n                  onChange={date => handleOnChange({ field: 'date_created', value: date.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`prepared-by-${index}`}\n                  label='Prepared By'\n                  value={item.prepared_by || ''}\n                  onChange={event => handleOnChange({ field: 'prepared_by', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-encoded-${index}`}\n                  label='Date Encoded'\n                  value={item.date_encoded}\n                  onChange={date => handleOnChange({ field: 'date_encoded', value: date.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`released-to-${index}`}\n                  label='Released To'\n                  value={item.released_to || ''}\n                  onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-released-${index}`}\n                  label='Date Released'\n                  value={item.date_released}\n                  onChange={date => handleOnChange({ field: 'date_released', value: date.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`return-date-${index}`}\n                  label='Return Date'\n                  value={item.date_return}\n                  disableComponents\n                  onChange={date => handleOnChange({ field: 'date_return', value: date.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']} style={{ width: '50%' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1 }}\n                  multiline\n                  rows={3}\n                  id='remarks'\n                  label='Remarks'\n                  value={item.remarks || ''}\n                  onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n                />\n              </div>\n            </div>\n\n            <div className={classes['reasons-container']}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Reasons\n                </Typography>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Other Details\n                </Typography>\n\n                <div className={classes.delete} />\n              </div>\n\n              {/* Reasons */}\n              {(item.reasons || []).map((item, _index) => (\n                <div className={classes.reasons} key={`reason-${_index}`}>\n                  <div className={classes['input']} style={{ minWidth: '50%' }}>\n                    <DropDown\n                      items={reasonDropdown}\n                      id={`reason-text-${_index}`}\n                      value={item.value || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })\n                      }\n                      error={item.error}\n                    />\n                  </div>\n\n                  <div className={classes['input']} style={{ minWidth: '50%' }}>\n                    <TextField\n                      id={`reason-other-details-${_index}`}\n                      value={item.other_details || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                      }\n                    />\n                  </div>\n\n                  <div className={classes.delete}>\n                    <IconButton id='delete-reason'>\n                      <DeleteIcon fontSize='small' onClick={() => handleOnClickRemoveReason(_index)} />\n                    </IconButton>\n                  </div>\n                </div>\n              ))}\n\n              <Typography\n                variant='body2'\n                className={`${classes['add-link']} ${(item.reasons || []).length ? '' : classes['empty-reasons']}`}\n                onClick={() => handleOnClickAddReason()}\n              >\n                + Add a reason\n              </Typography>\n              {/* Reasons */}\n            </div>\n\n            <div className={classes.footer}>\n              {!readOnly && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    id='cancel'\n                    className='button-negative'\n                    onClick={() => handleOnClickCancel(index)}\n                  >\n                    Cancel\n                  </Button>\n                  {index === 'add' && (\n                    <React.Fragment>\n                      <Button\n                        variant='contained'\n                        color='primary'\n                        id='save-for-now'\n                        className='button-positive'\n                        onClick={_handleOnClickSave}\n                      >\n                        Save\n                      </Button>\n                    </React.Fragment>\n                  )}\n                  {index !== 'add' && (\n                    <React.Fragment>\n                      <Button\n                        variant='contained'\n                        color='primary'\n                        id='save-for-now'\n                        className='button-positive'\n                        onClick={_handleOnClickUpdate}\n                      >\n                        Update\n                      </Button>\n                    </React.Fragment>\n                  )}\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        </div>\n      </TableCell>\n    </TableRow>\n  )\n}\n","import React, { Suspense } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport DescriptionIcon from '@material-ui/icons/Description'\n\n// Styles\nimport classes from './UploadedList.module.scss'\n\n// Store\n// import { useDispatch } from 'react-redux'\n// import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n// https://i.picsum.photos/id/405/200/300.jpg?hmac=f-f0GKz4x3t4FLNM9cdniTfIv8KFbABBlSpzEkkoJ6g\n\n// const { setClaimBaseDetails } = actions\n\nconst mock_data = [{ fileName: 'Claims Receipt', fileType: 'PDF', base64: '' }, { fileName: 'Claims Image', fileType: 'IMG', base64: '' }]\n\nexport default function UploadedList (props) {\n  // const { data } = props\n  // const dispatch = useDispatch()\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Supporting Documents\n        </Typography>\n      </div>\n      <div className={classes['table']} >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='sc-claim-no'>File Name</TableCell>\n              <TableCell id='sc-due-date'>File Type</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {mock_data.map((item, index) => (\n              <TableRow key={item.user_id}>\n                <TableCell id={`batch-encoder-name-${index}`}>{item.fileName}</TableCell>\n                <TableCell id={`total-bundle-${index}`}>{item.fileType}</TableCell>\n                <TableCell align='center' id={`view-work-${index}`}>\n                  <IconButton\n                    id={`print${index}`}\n                    size='small'\n                    aria-label='more'\n                    aria-controls='long-menu'\n                    aria-haspopup='true'\n                    onClick={() => {}}\n                  >\n                    <DescriptionIcon />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    </Paper>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst Dental = ['doctor_id', 'doctor_name', 'date_from', 'department']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n  let additional_fields = []\n\n  switch (type) {\n    case 'InPatient':\n      additional_fields = InPatient\n      break\n    case 'Dental':\n      additional_fields = Dental\n      break\n    default:\n      additional_fields = other_fields\n      break\n  }\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ReimbursementInfo from './../../../../ReimbursementInfo/ReimbursementInfo'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport UploadedList from './UploadedList/UploadedList'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport AdditionalFields from './AdditionalFields'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setDentalProcedure,\n  setProfessionalFee,\n  setHospitalItem\n} = actions\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  const {\n    claim,\n    onChangeFacility,\n    getClaimDetails,\n    onChangeDoctor,\n    onChangePro,\n    apiService,\n    doViewClaimNotice = () => {}\n  } = props\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  const [type, setType] = React.useState('')\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      reimbursement_type: props.isAdd ? 'InPatient' : '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      diagnosis: [],\n      claim_remarks: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(props.isAdd ? 'InPatient' : undefined) })\n      setlineItemFields(_lineItemFields)\n      setInitialAllowedFields(_allowedFields)\n\n      const initial_values = {\n        ..._allowedFields,\n        ...AdditionalFields(props.isAdd ? 'InPatient' : undefined),\n        ..._lineItemFields\n      }\n\n      if (props.isAdd) initial_values['date_to'] = new Date().toISOString()\n\n      dispatch(setClaimFields({ ...initial_values }))\n\n      // if (result['date_to'] !== undefined)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        setType(data.reimbursement_details.type)\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0] ? data[0].rooms : []).map(room => ({\n              text: room.desc,\n              value: room.value,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        let _claim = {\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          reimbursement_type: data.reimbursement_details.type,\n          member_account_number: data.member.account_number,\n          member_last_name: data.member.last_name,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          medicine_category: data.medicine_category,\n          reimbursement_category: data.reimbursement_details.category,\n          official_receipt_number: data.reimbursement_details.official_receipt_number,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          hospital_items: data.hospital_items || [],\n          reimbursement_info: data.reimbursement_info || [],\n          claim_remarks: data.claim_remarks\n        }\n\n        if (data.reimbursement_details.type === 'InPatient') {\n          _claim = {\n            ..._claim,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate || 0,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name\n          }\n        } else {\n          _claim = {\n            ..._claim,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            department: data.department\n          }\n        }\n\n        dispatch(setClaimFields(_claim))\n        setAllowedFields({\n          ..._allowedFields,\n          ...AdditionalFields(data.reimbursement_details.type)\n        })\n      })\n    }\n    setType(_allowedFields.reimbursement_type)\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n    setType(value)\n    const _claim = Object.assign({}, claim)\n    if (value !== 'InPatient') {\n      delete _claim.pro_id\n      delete _claim.pro_name\n      delete _claim.room_rate\n      delete _claim.room_type\n      delete _claim.date_to\n      delete _claim.loa_notes\n      dispatch(setClaimFields(_claim))\n    }\n    if (value === 'InPatient') {\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          date_to: moment().toISOString()\n        })\n      )\n    } else if (value === 'Dental') {\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          reimbursement_type: 'Dental',\n          date_from: moment().toISOString(),\n          doctor_id: '',\n          doctor_name: ''\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  React.useEffect(() => {\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }, [type])\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showReimbursement\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              // handleMemberAccountNumber={type === 'Dental'}\n              // isDental={type === 'Dental'}\n            />\n\n            <div className={classes.wrap}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-id'\n                    label='Medical Partner ID'\n                    value={claim.doctor_id}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor}\n                    field={'id'}\n                    loading={fetching['doctor_id']}\n                    onChange={(value, search) =>\n                      onChangeDoctor({\n                        field: 'doctor_id',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.doctor_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-name'\n                    label='Medical Partner (Doctor) Name'\n                    value={claim.doctor_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor}\n                    field={'full_name'}\n                    loading={fetching['doctor_name']}\n                    onChange={(value, search) =>\n                      onChangeDoctor({\n                        field: 'doctor_name',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.doctor_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      disabled={disableControls}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(date)\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={errors.date_from}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      disabled={disableControls}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={errors.date_to}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && !(type === 'InPatient') && (\n                <div className={classes['input']}>\n                  <DatePicker\n                    id='date-of-service'\n                    required\n                    label='Date of Service'\n                    value={claim.date_from}\n                    disabled={disableControls}\n                    onChange={date => {\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: date.toISOString(),\n                          field: 'date_from'\n                        })\n                      )\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: date.toISOString(),\n                          field: 'date_to'\n                        })\n                      )\n                    }}\n                    error={errors.date_from}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'department') && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='department'\n                    label='Department'\n                    value={claim.department}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'department'\n                        })\n                      )\n                    }\n                    error={errors.department}\n                  />\n                </div>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <div className={classes['input']}>\n                  <DropDown\n                    id='room-type'\n                    required\n                    label='Room Type'\n                    items={dropDown.rooms}\n                    value={claim.room_type}\n                    disabled={disableControls}\n                    onChange={handleOnChangeRoomType}\n                    error={errors.room_type}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='room-rate'\n                    required\n                    label='Room Rate'\n                    value={claim.room_rate}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'room_rate'\n                        })\n                      )\n                    }\n                    error={errors.room_rate}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-id'\n                    required\n                    label='PRO ID'\n                    value={claim.pro_id}\n                    suggestions={suggestions.pro}\n                    field={'employee_id'}\n                    disabled={disableControls}\n                    loading={fetching['pro_id']}\n                    onChange={(value, search) =>\n                      onChangePro({\n                        field: 'pro_id',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-name'\n                    required\n                    label='PRO Name'\n                    value={claim.pro_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.pro}\n                    field={'name'}\n                    loading={fetching['pro_name']}\n                    onChange={(value, search) =>\n                      onChangePro({\n                        field: 'pro_name',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.pro_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              <div className={classes['input']}>\n                <TextField\n                  id='official-receipt-number'\n                  label='Official Receipt Number'\n                  value={claim.official_receipt_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'official_receipt_number'\n                      })\n                    )\n                  }\n                  error={errors.official_receipt_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental={type === 'Dental'} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n              <UploadedList data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  {/* temporary dental proc  dental_procedure */}\n                  <DentalProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, field: allowedFields })\n              return valid\n            }}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            setShowReimbursementModal={setShowReimbursementModal}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <ReimbursementInfo\n            claim={claim}\n            isAdd={props.isAdd}\n            doViewClaimNotice={doViewClaimNotice}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            service={apiService}\n            handleOnSave={reimbursement_info =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: reimbursement_info,\n                  field: 'reimbursement_info'\n                })\n              )\n            }\n            lookup={'return-reason'}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport ClaimTypes from '../../../Constant/ClaimTypes'\n\nexport default function GetClaimComponent (_props) {\n  const { _type, ...props } = _props\n\n  const SelectecClaimType = selected => {\n    const type = ClaimTypes[selected].other_name\n\n    switch (type) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        break\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string().trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string().trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  given_diagnosis: Joi.string().trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description, given_diagnosis: d.given_diagnosis }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code || i.description || i.given_diagnosis) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    // .less(Joi.ref('gross_amount'))\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Alert from 'SharedComponents/Alert/Alert'\n\nlet _setDialog = null\nlet _resolve = null\nconst SoftValidatorAlertComponent = () => {\n  const [dialog, setDialog] = React.useState({})\n\n  React.useState(() => {\n    setDialog(state => ({ ...state, show: false }))\n    _setDialog = setDialog\n  }, [])\n\n  const action = t => {\n    setDialog(state => ({ ...state, show: false }))\n    _resolve(t)\n  }\n\n  return (\n    <Alert\n      open={dialog.show}\n      message={dialog.message}\n      cancelLabel='No'\n      okLabel='Yes'\n      onCancel={() => action()}\n      onOk={() => action(true)}\n    />\n  )\n}\n\nconst SoftValidatorService = ({ fields = [] }) => {\n  const _fields = []\n\n  fields.map(i => {\n    const [key] = Object.keys(i)\n    if (!i[key].trim()) _fields.push(key)\n  })\n\n  if (!_fields.length) return true\n\n  let message = 'Missing'\n  const length = _fields.length\n\n  for (let i = 0; i < length; i++) {\n    if (i && i === length - 1) message = `${message} and`\n    else if (i && i < length - 1) message = `${message},`\n\n    message = `${message} ${_fields[i]}`\n  }\n\n  message = `${message}. Are you sure you want to proceed?`\n\n  return new Promise(resolve => {\n    _resolve = resolve\n    _setDialog({ show: true, message })\n  })\n}\n\nexport { SoftValidatorAlertComponent, SoftValidatorService }\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport GetClaimComponent from './GetClaimComponent'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Libraries\nimport moment from 'moment'\n// Validators\nimport DiagnosisListValidator from './Components/DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from './Components/HospitalItemForm/HospitalItemFormValidator'\nimport ProfessionalFeeValidator from './Components/ProfessionalFeeForm/ProfessionalFeeFormValidator'\nimport ProcedureValidator from './Components/ProcedureForm/ProcedureFormValidator'\nimport DentalProcedureValidator from './Components/DentalProcedureForm/DentalProcedureFormValidator'\nimport DentalProcedureDiagnosisValidator from './Components/DentalProcedureForm/DiagnosisValidator'\nimport ProcedureDiagnosisValidator from './Components/ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from './Components/HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from './Components/ProfessionalFeeForm/DiagnosisValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from './Components/BaseDetails/SoftValidator'\n\nconst {\n  resetClaim,\n  setGrandTotal,\n  setClaimType,\n  setSuggestion,\n  resetSuggestion,\n  setClaimFacility,\n  setClaimDoctor,\n  setProcedure,\n  setDentalProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  setError,\n  resetError,\n  // addSuggestionToArray,\n  resetGrandTotal,\n  setClaimPro\n} = actions\n\nexport default function ClaimPage (props) {\n  const { apiService } = props\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsEncoding: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  // const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const error = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  // Line Item Form Store\n  const _dentalProcedure = useSelector(({ ClaimsEncoding: state }) => state.dentalProcedure)\n  const _procedure = useSelector(({ ClaimsEncoding: state }) => state.procedure)\n  const _hospitalItem = useSelector(({ ClaimsEncoding: state }) => state.hospitalItem)\n  const _professionalFee = useSelector(({ ClaimsEncoding: state }) => state.professionalFee)\n\n  const getBatchDetails = ({ _batchNumber }) => {\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      dispatch(setClaimType(data.claim.type))\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    dispatch(resetError())\n    LoadingService.loading(true)\n    const { _batchNumber, _claimNumber } = props.match.params\n\n    let pageTitle = ''\n    let breadCrumbs = ['dashboard', 'batches', `specificBatch:${_batchNumber}`]\n    if (props.isAdd) {\n      pageTitle = 'Add new claim'\n      breadCrumbs = [...breadCrumbs, 'addClaim']\n    } else {\n      pageTitle = `Update Claim No. ${_claimNumber}`\n      breadCrumbs = [...breadCrumbs, 'updateClaim']\n    }\n\n    PageTitleService(pageTitle)\n    BreadcrumbsService.setSelectedItems(breadCrumbs)\n    getBatchDetails({ _batchNumber })\n\n    return () => {\n      dispatch(setClaimType(''))\n      dispatch(resetClaim())\n      dispatch(resetGrandTotal())\n    }\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    dispatch(setGrandTotal(grand))\n  }, [claim])\n\n  React.useEffect(() => {\n    if (error) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [error])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false,\n    pro_id: false,\n    pro_name: false,\n    anesthesiologist_id: false,\n    anesthesiologist_name: false\n  })\n\n  const getClaimDetails = callback => {\n    const { _batchNumber, _claimNumber } = props.match.params\n    apiService\n      .getClaim({\n        batch_number: _batchNumber,\n        claim_number: _claimNumber\n      })\n      .then(res => {\n        const { data } = res.data\n        // Set Diagnosis Suggestions\n        // const { diagnosis = [] } = data\n        // diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n\n        callback(data)\n      })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, search }) => {\n    if (search) {\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ [field]: value }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by, field })\n    } else {\n      const _value = value || {}\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ facility_id: _value.id, facility_name: _value.name }))\n      return _value.rooms\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'medical-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'facility',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ doctor_id: _value.id, doctor_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'doctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimPro({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimPro({ pro_name: _value.name, pro_id: _value.employee_id }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // PRO User lookup\n          CustomerCareServices.proUsersLookup({ value, field })\n            .then(res => {\n              // limit temporary - no limit in api seer\n              const limit = []\n              for (let i = 0; i < 10; i++) {\n                if (!res.data.data[i]) break\n                limit.push(res.data.data[i])\n              }\n\n              const data = limit.map(elem => {\n                let full_name = `${elem.first_name} ${elem.last_name}`\n                delete elem.first_name\n                delete elem.last_name\n                return { ...elem, name: full_name }\n              })\n\n              dispatch(\n                setSuggestion({\n                  field: 'pro',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ anesthesiologist_id: _value.id, anesthesiologist_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n    }\n  }\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'anesthesiologist',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Report: Claim Notice\n  const handleOnViewClaimNotice = mode => {\n    LoadingService.loading(true)\n    const { _claimNumber } = props.match.params\n    const pdf = {\n      name: 'Claims Notice',\n      fileName: 'claim_notice',\n      service: apiService.getLetterNotice({ claim_number: _claimNumber })\n    }\n    PdfViewer2Service({ ...pdf, open: true })\n    LoadingService.loading(false)\n  }\n\n  // Validation\n  const doValidateAll = ({ validator, field = undefined, flag = false }) => {\n    dispatch(resetError())\n    const base_errors = doValidateBase({ claim, validator: validator, field, flag })\n    let diagnosis = {}\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n    if (claim.diagnosis) {\n      diagnosis = doValidateDiagnosis({ diagnosis: claim.diagnosis })\n    }\n\n    if (_procedure.show || _dentalProcedure.show) {\n      const error = flag\n        ? doValidateDentalProcedure({ data: _dentalProcedure.details, index: _dentalProcedure.index, flag })\n        : doValidateProcedure({ data: _procedure.details, index: _procedure.index })\n      if (Object.keys(error).length > 0) {\n        procedure = { ...error }\n        if (flag) {\n          dispatch(\n            setDentalProcedure({\n              show: true,\n              mode: 'add',\n              index: _dentalProcedure.index,\n              details: _dentalProcedure.details\n            })\n          )\n        } else {\n          dispatch(\n            setProcedure({\n              show: true,\n              mode: 'add',\n              index: _procedure.index,\n              details: _procedure.details\n            })\n          )\n        }\n      }\n    } else if (claim.procedures) {\n      for (const [index, value] of claim.procedures.entries()) {\n        const error = flag\n          ? doValidateDentalProcedure({ data: value, index, flag })\n          : doValidateProcedure({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          procedure = { index, ...error }\n          // AUTO OPEN CLAIM\n          const params = { show: true, mode: 'edit', index, details: value }\n          flag ? dispatch(setDentalProcedure(params)) : dispatch(setProcedure(params))\n          break\n        }\n      }\n    }\n\n    if (_hospitalItem.show) {\n      const error = doValidateHospitalItem({ data: _hospitalItem.details, index: _hospitalItem.index, flag })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { ...error }\n        const params = { show: true, mode: 'add', index: _hospitalItem.index, details: _hospitalItem.details }\n        dispatch(setHospitalItem(params))\n      }\n    } else if (claim.hospital_items) {\n      for (const [index, value] of claim.hospital_items.entries()) {\n        const error = doValidateHospitalItem({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          hospital_item = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setHospitalItem({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    if (_professionalFee.show) {\n      const error = doValidateProfessionalFee({ data: _professionalFee.details, index: _professionalFee.index, flag })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { ...error }\n        const params = { show: true, mode: 'add', index: _professionalFee.index, details: _professionalFee.details }\n        dispatch(setProfessionalFee(params))\n      }\n    } else if (claim.professional_fees) {\n      for (const [index, value] of claim.professional_fees.entries()) {\n        const error = doValidateProfessionalFee({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          professional_fee = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProfessionalFee({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    return invalid\n  }\n\n  const doValidateBase = ({ claim, validator, field, flag }) => {\n    const data = {}\n    const {\n      diagnosis,\n      procedures,\n      hospital_items,\n      professional_fees,\n      reimbursement_info,\n      reimbursement_info_analysts,\n      ppe_packages,\n      ...rest\n    } = claim\n    for (let f in rest) data[f] = claim[f]\n    let _fields = {}\n    if (field) _fields = { ...field, flag }\n    else _fields = { ...claim, flag }\n    const { error = {} } = validator(Object.keys(_fields))({ ...data, flag })\n    dispatch(\n      setError({\n        ...error\n      })\n    )\n    return error\n  }\n\n  const doValidateDiagnosis = ({ diagnosis }) => {\n    const error = DiagnosisListValidator(diagnosis)\n    dispatch(\n      setError({\n        diagnosis: error\n      })\n    )\n    return error\n  }\n\n  const doValidateDentalProcedure = ({ data, index }) => {\n    const { error } = DentalProcedureValidator({\n      description: data.description,\n      code: data.code.toString(),\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid,\n      tooth_number: data.tooth_number\n    })\n\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setDentalProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = DentalProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, ...error, ...diagnosisError.error }\n      })\n    )\n\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProcedure = ({ data, index }) => {\n    const { error } = ProcedureValidator({\n      description: data.description,\n      code: data.code ? `${data.code}` : '',\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, show: true, ...error, ...diagnosisError.error }\n      })\n    )\n\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ data, index }) => {\n    const { error } = HospitalItemValidator({\n      name: data.name,\n      item_code: data.item_code,\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        hospital_item: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ data, index }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name,\n      specialization: data.specialization,\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n    dispatch(\n      setError({\n        professional_fee: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const handleOnSave = async ({ lineItemFields, allowedFields, goBack = true }) => {\n    const { _batchNumber, _claimNumber } = props.match.params\n    const claimFields = Object.keys(allowedFields)\n\n    if (claimFields.includes('approval_code') && claimFields.includes('loa_number')) {\n      const proceed = await SoftValidatorService({\n        fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n      })\n      if (!proceed) return\n    }\n\n    LoadingService.loading(true)\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (!data.date_to) data.date_to = moment().toISOString()\n\n    if (props.isAdd) {\n      apiService.addClaim({ batch_number: _batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${_batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      apiService.updateClaim({ batch_number: _batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${_batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type && (\n        <GetClaimComponent\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          fetching={fetching}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n          onSave={handleOnSave}\n          onChangePro={handleOnChangePro}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          doViewClaimNotice={handleOnViewClaimNotice}\n          doValidateAll={doValidateAll}\n          doValidateDiagnosis={doValidateDiagnosis}\n          doValidateProcedure={doValidateProcedure}\n          doValidateDentalProcedure={doValidateDentalProcedure}\n          doValidateHospitalItem={doValidateHospitalItem}\n          doValidateProfessionalFee={doValidateProfessionalFee}\n        />\n      )}\n      <SoftValidatorAlertComponent />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder\nimport Dashboard from './../Components/ClaimsDetailsEncoder/Dashboard/Dashboard'\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 's-encoder-name', name: ' Encoder Name', sortField: 'username', match: 'any' },\n  { id: 's-total-batches', name: ' Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'any' }\n]\nconst ClaimsEncoderTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    getEncoders()\n  }, [])\n\n  const getEncoders = () => {\n    setFetching(true)\n    services\n      .getEncodersBatches({ limit: 10, sort: 'name|asc' })\n      .then(res => {\n        const { results, total_count } = res.data.data\n        setBatches(state => ({ ...state, count: total_count, data: results }))\n      })\n      .catch(err => {\n        console.error(err)\n        setBatches(state => ({ ...state, count: 0, data: [] }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    setViewList({ ...initialValue, show: true, title: startCase(`${category} Batches`), category })\n    setFetchingViewList(true)\n    services\n      .getEncodersBatches({ page: 1, limit: 10, sort: 'name|asc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getEncodersBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-encoder'\n        count={{ color: 3, value: batches.count, id: 'claims-encoder-count' }}\n        isFilterShown={false}\n        title='Claims Encoder'\n        sizes={sizes}\n        viewList={\n          <Typography\n            id='ob-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('claim-encoder')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={() => {}}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`ces-${item.id}`} id={`ces-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`ces-encoder-name-${index}`}>{item.username}</TableCell>\n                  <TableCell id={`ces-total-batches-${index}`}>{item.total_batches}</TableCell>\n                  <TableCell id={`ces-total-rcs-${index}`}>{item.total_rcs}</TableCell>\n                  <TableCell>\n                    <Link to={`/batches/assigned/${item.id}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-encoder'\n        columns={columns}\n        searchTextPlaceHolder='Search for Encoder Name, Total Bundles or Total Batches'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.id}>\n              <TableCell id={`batch-number-${index}`}>{item.username}</TableCell>\n              <TableCell id={`date-received-${index}`}>{item.total_batches}</TableCell>\n              <TableCell id={`due-date-${index}`}>{item.total_rcs}</TableCell>\n              <TableCell id={`view-encoder-${index}`}>\n                <Link to={`/batches/assigned/${item.id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsEncoderTile\n","import instance from '../instance'\n// import ClaimsEncodingServices from '../ClaimsEncodingServices'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ces')\n\nexport default class ClaimsEncoderSupervisorServices {\n  static getEncodersBatches (params) {\n    return axios({\n      url: `/batches/encoders`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatches (params) {\n    return axios({\n      url: `/batches/encoders/assigned`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatch (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderClaims (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign (params) {\n    return axios({\n      url: `/batches/encoders/reassign`,\n      method: 'POST',\n      params\n    })\n  }\n\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={`${classes.tiles} ${classes.row}`} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 8 }} title='Claims Encoding'>\n            <OpenBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n\n          <Grid item className={classes['task-tray-monitor']}>\n            <TaskTray sizes={{ xs: 8 }} title='Items to Monitor'>\n              <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            </TaskTray>\n          </Grid>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell id='cvs-ticket-no'>Ticket #</TableCell>\n                      <TableCell id='cvs-date'>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell id={`cvs-ticket-no-${index}`}>2334324343</TableCell>\n                        <TableCell id={`cvs-date-${index}`}>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nconst { setReassignAssignee, setReassignNotes } = actions\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n  const dispatch = useDispatch()\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => dispatch(setReassignNotes(event.target.value))}\n                // onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.assignee.id}\n                  // onChange={event =>\n                  //   dispatch(\n                  //     setEscalationAssignee({\n                  //       id: event.target.value,\n                  //       name: event.target.value\n                  //     })\n                  //   )\n                  // }\n                  onChange={event => {\n                    dispatch(\n                      setReassignAssignee({\n                        id: event.target.value,\n                        name: event.target.value\n                      })\n                    )\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n          {/*\n          <DialogActions>\n            <Button\n              onClick={() => setDialog(false)}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-negative'\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {}}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-positive'\n            >\n              Submit\n            </Button>\n          </DialogActions> */}\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign SOA to Claim Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the SOA to the selected Claim Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This SOA will be sent to the assigned Claim Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign()\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// lodash\nimport { sortBy } from 'lodash'\n\n// Component\nimport AssignDialog from '../AssignDialog/AssignDialog'\n\nconst { resetReassign, setReassignNotes } = actions\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmitReassign = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    UserManagementServices = () => {},\n    count,\n    _id = ''\n  } = props\n\n  const dispatch = useDispatch()\n  // const [count, setCount] = React.useState(0)\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  // const reassign = useSelector(({ClaimsEncoding: state}) =>  state.reassign)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  const initDropdownUsers = async ({ roles }) => {\n    UserManagementServices.getUsersByRole(roles).then(({ data = [] }) => {\n      let users = data\n        .map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n        .filter(i => i.value !== _id)\n\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  // const handleOnsubmitReassign = (batches, user_id) => {\n  //   console.log(batches)\n  //   console.log(user_id)\n  // }\n\n  const handleOnOpenDialog = () => {\n    if (count === 0) return\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: 'CLAIMS_DETAILS_ENCODER' })\n    // setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignNotes(''))\n    // setReassignModal(state => ({ ...state, dialog: true }))\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography variant='subtitle2'>Total Batches Selected: {count} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                disabled={count < 1}\n                color='primary'\n                id='btn-assign'\n                className='button-positive'\n                onClick={() => handleOnOpenDialog()}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='btn-cancel'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitReassign}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Paper from '@material-ui/core/Paper'\n\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\n\n// Styles\nimport classes from './CreatedBatchesPage.module.scss'\n\nexport default function CreatedBatchesPage (props) {\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const [headcell, setHeadCell] = React.useState([\n    { id: 's-batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'date.received', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'date.due', match: 'date' },\n    { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'number' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n  ])\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    // data: [],\n    filter: {},\n    orderBy: 'batch_number',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  }\n\n  // const [viewList, setViewList] = React.useState(initialValue)\n\n  const [batch, setBatch] = React.useState({})\n  const [batches, setBatches] = React.useState(initialValue)\n  const [id, setId] = React.useState(null)\n  const [selected, setSelected] = React.useState({ batch_numbers: [] })\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Created Batches')\n    BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${props.match.params._id}`])\n    LoadingService.loading(true)\n\n    const _id = props.match.params._id\n    getBatches(batches)\n    setId(_id)\n  }, [props.match.params.id])\n\n  const getBatches = params => {\n    ClaimsEncoderSupervisorServices.getEncoderBatches({\n      id: props.match.params._id,\n      search: params.search,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      filter: params.filter,\n      limit: params.limit\n    })\n      .then(res => {\n        const { results = [], count, limit, page } = res.data.data\n        setBatches(state => ({ ...state, count, limit, page }))\n\n        const data = results.map(batch => ({ ...batch, checked: false }))\n\n        // if (data) setSelectStatus(false)\n        setSelected({ batch_numbers: [] })\n        setBatch({\n          data: data,\n          loading: false,\n          indeterminate: undefined,\n          checked: undefined\n        })\n        LoadingService.loading(false)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }\n\n  const handleSelectAll = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.checked = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleItemSelect = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.checked = !i.checked\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.checked) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n\n    setSelected({ batch_numbers: batchNumbers })\n  }\n\n  const handleOnCancel = () => {\n    let _data = batch.data.map(i => ({ ...i, checked: false }))\n\n    setBatch(state => ({ ...state, data: _data, checked: false, indeterminate: undefined }))\n    setSelectStatus(false)\n    setSelected({ batch_numbers: [] })\n  }\n\n  const handleOnSubmitReassign = () => {\n    LoadingService.loading(true)\n    ClaimsEncoderSupervisorServices.reassign({\n      selected: selected.batch_numbers,\n      id: reassign.assignee.id,\n      notes: reassign.note,\n      prev_user: id\n    }).then(() => {\n      setSelected({ batch_numbers: [] })\n      getBatches(batches)\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnSearchAllChange = args => {\n    getBatches({ ...batches, ...args })\n  }\n\n  const handleOnSearch = args => {\n    const _params = {\n      limit: batches.limit,\n      page: batches.page,\n      search: batches.search,\n      sort: `${batches.orderBy}|${batches.order ? 'desc' : 'asc'}`,\n      filter: batches.filter,\n      ...args\n    }\n    getBatches(_params)\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...batches,\n      ...args\n    }\n    setBatches(state => ({ ...state, ...args }))\n    getBatches(params)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox\n                color='default'\n                indeterminate={!!batch.indeterminate}\n                checked={!!batch.checked}\n                onClick={event => handleSelectAll()}\n              />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={batches.orderBy === headCell.sortField}\n                direction={batches.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !batches.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              <TextField\n                id={`column-filter-${headCell.id}`}\n                // className={`${classes.search}`}\n                TextFieldStyle={{ margin: 0 }}\n                fullWidth\n                onChange={event => {\n                  const search = event.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      setBatches(p => ({ ...p, filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                      handleOnSearch({ filter: { ...batches.filter, [headCell.sortField]: { value: search, match: headCell.match } }, page: 1 })\n                    }, 500)\n                  )\n                }}\n              />\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return batch.data\n        ? batch.data.map((row, index) => (\n          <TableRow key={index}>\n            {selectStatus ? (\n              <TableCell padding='checkbox'>\n                <Checkbox\n                  checked={row.checked}\n                  color='default'\n                  onClick={event => handleItemSelect({ index, batch })}\n                />\n              </TableCell>\n            ) : null}\n            <TableCell id={`batch-number-${index}`}>{row.batch_number}</TableCell>\n            <TableCell id={`date-received-${index}`}>{DateFormatter(row.date_received)}</TableCell>\n            <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n            <TableCell align='center' id={`total-rcs-${index}`}>\n              {row.total_rcs}\n            </TableCell>\n            <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n            <TableCell id={`view-encoder-${index}`}>\n              <Typography\n                variant='caption'\n                className='text-link underline'\n                onClick={() => props.history.push(`/batches/assigned/${id}/${row.batch_number}`)}\n              >\n                  View\n              </Typography>\n            </TableCell>\n          </TableRow>\n        ))\n        : null\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                id='reassign-btn'\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => {\n                  const search = e.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      handleOnSearchAllChange({ search, page: 1 })\n                      setBatches(state => ({ ...state, search }))\n                    }, 500)\n                  )\n                }}\n                placeholder='Search for batch number, date or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={batches.count}\n              page={batches.page}\n              limit={batches.limit}\n              pagination\n              rowsPerPageOptions={batches.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            count={selected.batch_numbers.length ? selected.batch_numbers.length : 0}\n            handleOnSubmitReassign={handleOnSubmitReassign}\n            UserManagementServices={UserManagementServices}\n            handleOnCancel={() => handleOnCancel()}\n            handleOnClose={() => props.history.push(`/`)}\n            _id={id}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails (props) {\n  const { details = {} } = props\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const { count, inputChange = null } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims ({count})</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({ items, type, pagination, setPagination }) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  React.useEffect(() => {\n    setClaims({\n      data: items\n    })\n  }, [items])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleItemClick = index => {}\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        handleRequestSort={handleRequestSort}\n        pagination={pagination}\n        rowsLength={rows.length}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow tabIndex={-1} key={row.claim_number}>\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code}\n                </TableCell>\n                <TableCell\n                  id={`member-name-${index}`}\n                  onClick={() => handleItemClick(index)}\n                >{`${row.member.first_name} ${row.member.last_name}`}</TableCell>\n                <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.member.account_number}\n                </TableCell>\n\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ProviderSchedule from '../../../ClaimsDetailsEncoder/Components/ProviderSchedule/ProviderSchedule'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [debounce, setDebounce] = React.useState(null)\n  const [id, setId] = React.useState()\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const getClaimsAndCount = ({ batch_number }) => {\n    ClaimsEncoderSupervisorServices.getClaims({\n      batch_number,\n      params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n    }).then(res => {\n      const { results, count, page, limit } = res.data.data\n      setClaims(results)\n      setClaimCount(count)\n      setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n    })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const batch_number = props.match.params._batchNumber\n    const _id = props.match.params._id\n    setId(_id)\n    setBatchNumber(batch_number)\n\n    ClaimsEncoderSupervisorServices.getEncoderBatch({ id: _id }, batch_number).then(res => {\n      const { data } = res.data\n\n      setDetails(data)\n      LoadingService.loading(false)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${_id}`, `specificBatch:${batch_number}`])\n\n      PageTitleService(`Batch No. ${batch_number}`, {\n        text: 'In Progress',\n        color: 'blue'\n      })\n\n      getClaimsAndCount({ batch_number: batch_number })\n    })\n  }, [props.match.params._batchNumber, props.match.params._id])\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader inputChange={handleSearchChange} count={claimCount} />\n          <ClaimList pagination={pagination} setPagination={setPagination} items={claims} type={details.claim.type} />\n\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push(`/batches/assigned/${id}`)}\n              >\n                Close\n              </Button>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder Supervisor\nimport Dashboard from './../Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Details Encoder\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date.due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst ForAdjudicationTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({\n    open: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'open',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'open' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, open: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnAnalyze = claim_number => {\n    services.assignClaim({ claim_number }).then(({ data: res }) => {\n      props.history.push(`/claims/${claim_number}/analyze`)\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'latest.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-adjudication'\n        count={{ color: 3, value: claims.open.count, id: 'for-adjudication-count' }}\n        sizes={sizes}\n        title='For Adjudication'\n        viewList={\n          <Typography\n            id='fa-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('open')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('open')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='fa-claim-no'>Claim No.</TableCell>\n                <TableCell id='fa-due-date'>Due Date</TableCell>\n                <TableCell id='fa-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.open.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    {/* { item.claim_number.startsWith('IP') && */}\n                    <Typography\n                      id={`analyze-claim-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnAnalyze(item.claim_number)}\n                    >\n                      Analyze\n                    </Typography>\n                    {/* } */}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList2\n        id='for-adjudication'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`analyze-cell-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  id={`analyze-claim-${index}`}\n                  onClick={() => {\n                    handleOnAnalyze(item.claim_number)\n                  }}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForAdjudicationTile.displayName = 'DashboardTileComponent'\n\nexport default ForAdjudicationTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date.due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst MyClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    my: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'my',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'my' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, my: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'latest.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-claims'\n        count={{ color: 3, value: claims.my.count, id: 'my-claims-count' }}\n        sizes={sizes}\n        title='My Claims'\n        viewList={\n          <Typography\n            id='mc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('my')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('my')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='mc-claim-no'>Claim No.</TableCell>\n                <TableCell id='mc-due-date'>Due Date</TableCell>\n                <TableCell id='mc-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.my.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`mc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`mc-facility-name${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    {/* { item.claim_number.startsWith('IP') && */}\n                    <Link to={`/claims/${item.claim_number}/analyze`}>\n                      <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                        Update\n                      </Typography>\n                    </Link>\n                    {/* } */}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList2\n        id='my-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`update-cell-${index}`}>\n                <Link to={`/claims/${item.claim_number}/analyze`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-claim-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default MyClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Print from '@material-ui/icons/Print'\nimport startCase from 'lodash/startCase'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date.due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst SubmittedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claimNumber, setClaimNumber] = React.useState(false)\n  const [claimType, setClaimType] = React.useState(null)\n  const [disableLoaButton, setDisableLoaButton] = React.useState(false)\n  const ITEM_HEIGHT = 48\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const open = Boolean(anchorEl)\n\n  function handleClickSubmitted (event, claim) {\n    setAnchorEl(event.currentTarget)\n    setClaimNumber(claim.claim_number)\n    setClaimType(claim._type)\n    setDisableLoaButton(!claim.has_amount_concerns)\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const [claims, setClaims] = React.useState({\n    submitted: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'submitted' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, submitted: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'latest.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  // const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n  //   handleClickSubmitted(event, claim)\n  // }\n\n  const handleOnShowPdf = ({ claim_number, type }) => {\n    setAnchorEl()\n\n    let pdf = {}\n\n    switch (type) {\n      case 'letter_of_advice':\n        pdf = {\n          name: 'Letter of Advice',\n          service: services.getLetterOfAdvice({ claimNo: claim_number })\n        }\n        break\n\n      case 'analysis_sheet':\n        pdf = {\n          name: 'Analysis Sheet',\n          service: services.getAnalysisSheet({ claimNo: claim_number })\n        }\n\n        break\n\n      case 'notice':\n        pdf = {\n          name: 'Claim Notice',\n          service: services.getLetterNotice({ claimNo: claim_number })\n        }\n        break\n    }\n\n    PdfViewer2Service({ ...pdf, open: true, fileName: type })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-claims'\n        count={{ color: 5, value: claims.submitted.count, id: 'submitted-claims-count' }}\n        sizes={sizes}\n        title='Submitted Claims'\n        viewList={\n          <Typography\n            id='sc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('submitted')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('submitted')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='sc-claim-no'>Claim No.</TableCell>\n                <TableCell id='sc-due-date'>Due Date</TableCell>\n                <TableCell id='sc-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.submitted.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`sc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`sc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`sc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <IconButton\n                      id={`print${index}`}\n                      aria-label='more'\n                      aria-controls='long-menu'\n                      aria-haspopup='true'\n                      onClick={e => handleClickSubmitted(e, item)}\n                    >\n                      <Print />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n              <Menu\n                id='long-menu'\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                style={{\n                  zIndex: 1310\n                }}\n                PaperProps={{\n                  style: {\n                    maxHeight: ITEM_HEIGHT * 4.5,\n                    width: claimType === 'Reimbursement' ? 280 : 200\n                  }\n                }}\n              >\n                <MenuItem onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'analysis_sheet' })}>\n                  {claimType === 'Reimbursement' ? 'Approved Reimbursement Letter' : 'Analysis Sheet'}\n                </MenuItem>\n                {/* {disableLoaButton ? ( */}\n                <MenuItem\n                  disabled={disableLoaButton}\n                  onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'letter_of_advice' })}\n                >\n                  {claimType === 'Reimbursement' ? 'Rejected Reimbursement Letter' : 'Letter Of Advice'}\n                </MenuItem>\n              </Menu>\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`print-cell-${index}`}>\n                <IconButton\n                  id={`print${index}`}\n                  aria-label='more'\n                  aria-controls='long-menu'\n                  aria-haspopup='true'\n                  onClick={e => handleClickSubmitted(e, item)}\n                >\n                  <Print />\n                </IconButton>\n              </TableCell>\n              <Menu\n                id='long-menu'\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                style={{\n                  zIndex: 1310\n                }}\n                PaperProps={{\n                  style: {\n                    maxHeight: ITEM_HEIGHT * 4.5,\n                    width: claimType === 'Reimbursement' ? 280 : 200\n                  }\n                }}\n              >\n                <MenuItem onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'analysis_sheet' })}>\n                  {claimType === 'Reimbursement' ? 'Approved Reimbursement Letter' : 'Analysis Sheet'}\n                </MenuItem>\n                {/* {disableLoaButton ? ( */}\n                <MenuItem\n                  disabled={disableLoaButton}\n                  onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'letter_of_advice' })}\n                >\n                  {claimType === 'Reimbursement' ? 'Rejected Reimbursement Letter' : 'Letter Of Advice'}\n                </MenuItem>\n              </Menu>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedClaimsTile.displayName = 'DashboardTileComponent'\nexport default SubmittedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date.due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst ReturnedEscalatedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    escalated: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'escalated',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'escalated' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, escalated: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Returned Escalated Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'latest.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  // const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n  //   props.history.push(`/claims/${claim_number}/analyze`)\n  // }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='returned-escalated'\n        count={{ color: 3, value: claims.escalated.count, id: 'returned-escalated-count' }}\n        sizes={sizes}\n        title='Returned Escalated Claims'\n        viewList={\n          <Typography\n            id='re-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('escalated')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('escalated')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='re-claim-no'>Claim No.</TableCell>\n                <TableCell id='re-due-date'>Due Date</TableCell>\n                <TableCell id='re-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.escalated.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`re-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`re-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`re-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`re-update-claim-${index}`}>\n                    <Link to={`/claims/${item.claim_number}/analyze`}>\n                      <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                        Update\n                      </Typography>\n                    </Link>\n                    {/* } */}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`print-cell-${index}`}>\n                <Link to={`/claims/${item.claim_number}/analyze`}>\n                  <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                        Update\n                  </Typography>\n                </Link>\n                {/* } */}\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReturnedEscalatedClaimsTile.displayName = 'DashboardTileComponent'\nexport default ReturnedEscalatedClaimsTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from '../../Tiles/ForAdjudicationTile'\nimport MyClaimsTile from '../../Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from '../../Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from '../../Tiles/ReturnedEscalatedClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForAdjudicationTile services={ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <ReturnedEscalatedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport classes from './AutoComplete2.module.scss'\n\nexport default function AutoComplete2 (props) {\n  const { label = '', required, readOnly, ...other } = props\n  const { value = '', field = 'id', loading, error, suggestions = [] } = props\n  const { onChange } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = (value, search) => {\n    setError()\n    if (typeof onChange === 'function') onChange(value, search)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <Autocomplete\n                className={classes.input}\n                options={suggestions}\n                noOptionsText={'Enter atleast 3 characters to search.'}\n                loading={loading || false}\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    className={classes.input}\n                    ref={params.InputProps.ref}\n                    InputProps={{\n                      ...params.InputProps,\n                      disableUnderline: true,\n                      endAdornment: (\n                        <React.Fragment>\n                          {loading ? <CircularProgress color='inherit' size={20} /> : null}\n                        </React.Fragment>\n                      )\n                    }}\n                  />\n                )}\n                getOptionLabel={option => (typeof option === 'string' ? option : `${option[field]}`)}\n                // renderOption={option => <React.Fragment>{option[field]}</React.Fragment>}\n                {...other}\n                onChange={(event, value) => {\n                  handleOnChange(value, false)\n                }}\n                onInputChange={(event, value) => {\n                  handleOnChange(value, true)\n                }}\n                onFocus={() => setFocus(true)}\n                inputValue={value}\n                value={typeof value === 'object' ? value[field] : value}\n                freeSolo\n                autoSelect\n                openOnFocus\n                autoHighlight\n              />\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import Autocomplete from '@material-ui/lab/Autocomplete'\n\nimport classes from './AutoCompletes.module.scss'\n\nimport AutoCompleteCurrent from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete2 from '../../Components/AutoComplete2/AutoComplete2'\n\nexport default function AutoCompletes (props) {\n  const { storage, errors, debounce, suggestion } = props\n  const { setErrors, onChange, setDebounce, setSuggestion } = props\n  const { service } = props\n\n  const [fetching, setFetching] = React.useState(false)\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    // if (value.trim().length < 3) return\n\n    setSuggestion(state => ({ ...state, facilities: [] }))\n    clearTimeout(debounce.facility)\n    setFetching(true)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          service\n            .lookups({\n              on: 'medical-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              setSuggestion(state => ({ ...state, facilities: data }))\n            })\n            .finally(() => {\n              setFetching(false)\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // const handleOnChangeAutosuggest = ({ value, field, search }) => {\n  //   setSuggestion(state => ({ ...state, facilities: [] }))\n  //   onChange({ value: value, field })\n\n  //   if (isSuggestionClick) {\n  //     for (let i of suggestion.facilities) {\n  //       if (value === i.id || value === i.name) {\n  //         onChange({ value: i.id, field: 'facility_id' })\n  //         onChange({ value: i.name, field: 'facility_name' })\n  //         return i.rooms\n  //       }\n  //     }\n  //   } else {\n  //     const { 1: by } = field.split('_')\n  //     getFacilitySuggestions({ value, by })\n  //   }\n  // }\n\n  const handleOnChangeAutosuggest2 = ({ value, field, search }) => {\n    if (search) {\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n      onChange({ value, field })\n    } else {\n      const _value = value || {}\n      console.log('AutoSuggest selected value', _value)\n      onChange({ value: _value.id, field: 'facility_id' })\n      onChange({ value: _value.name, field: 'facility_name' })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.row}>\n        {/* <div className={classes.input}>\n          <AutoCompleteCurrent\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n            }\n            label={'Medical Partner ID using Current'}\n            suggestions={suggestion.facilities}\n            value={storage.facility_id}\n          />\n        </div> */}\n        <div className={classes.input}>\n          <AutoComplete2\n            onChange={(value, search) => handleOnChangeAutosuggest2({ field: 'facility_id', value, search })}\n            label={'Medical Partner ID using AutoComplete2'}\n            suggestions={suggestion.facilities}\n            field={'id'}\n            loading={fetching}\n            value={storage.facility_id}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport TextField from '@material-ui/core/TextField'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\nimport classes from './DatePicker2.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\n\nexport default function DatePicker (props) {\n  const {\n    id,\n    label,\n    required,\n    value,\n    format,\n    readOnly,\n    onChange,\n    error,\n    tabindex,\n    noMargin,\n    disableComponents,\n    ...other\n  } = props\n\n  const InputRef = React.useRef()\n  const [focus, setFocus] = React.useState()\n\n  const handleOnClose = () => {\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n    setFocus(false)\n  }\n\n  const handleDateChange = date => {\n    if (typeof onChange === 'function') {\n      onChange(date)\n    }\n    handleOnFocus()\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n              <Paper\n                className={`${classes['text-field']} ${noMargin ? classes['no-margin'] : ''}  ${\n                  error ? classes['has-error'] : focus && classes.focus\n                } box-shadow-field ${disableComponents && classes.disabled}`}\n                onBlur={handleOnBlur}\n                onFocus={handleOnFocus}\n              >\n                <KeyboardDatePicker\n                  InputProps={{\n                    ref: InputRef,\n                    disableUnderline: true\n                  }}\n                  className={classes.input}\n                  value={value}\n                  onClose={handleOnClose}\n                  onChange={date => handleDateChange(moment(date))}\n                  allowKeyboardControl\n                  format='MM/DD/YYYY'\n                  placeholder='MM/DD/YYYY'\n                  clearable\n                  {...other}\n                />\n              </Paper>\n            </MuiPickersUtilsProvider>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date From')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport DatePicker from '../../Components/DatePicker2/DatePicker2'\nimport DatePickerCurrent from 'SharedComponents/DatePicker2/DatePicker2'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Validators\nimport DateValidator from '../../Validations/DateValidator'\n\nimport classes from './DatePickers.module.scss'\n\nexport default function DatePickers (props) {\n  const { storage, errors } = props\n  const { setErrors, onChange } = props\n\n  const dateValidate = () => {\n    const { error } = DateValidator({ date_from: storage.date_from })\n    setErrors(error || {})\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.row}>\n        <div className={classes.input}>\n          <DatePickerCurrent\n            label='Current'\n            value={storage.date_from}\n            onChange={date => {\n              onChange({ value: date, field: 'date_from' })\n            }}\n            error={errors.date_from}\n          />\n        </div>\n        <div className={classes.input}>\n          <DatePicker\n            label='Beta'\n            value={storage.date_from}\n            onChange={date => {\n              onChange({ value: date, field: 'date_from' })\n            }}\n            error={errors.date_from}\n          />\n        </div>\n        <div className={classes.input}>\n          <Typography>{DateFormatter(storage.date_from)}</Typography>\n        </div>\n        <div className={classes.input}>\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={dateValidate}\n            id='save'\n          >\n            Validate\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Slide from '@material-ui/core/Slide'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\n\nimport { Document, Page, pdfjs } from 'react-pdf'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport printJS from 'print-js'\n\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPdf } from 'Pages/Protected/Store/actions'\n\n// Styles\nimport classes from './PdfViewer2.module.scss'\n\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\n\nconst mozillaPdfViewer = 'https://mozilla.github.io/pdf.js/web/viewer.html'\n// const mozillaPdfViewer = 'pdfs'\n\nconst Transition = React.forwardRef(function Transition (props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />\n})\n\nlet dispatch = null\n\nconst PdfView2Component = props => {\n  // Variables\n  const { name, fileName, initialPageNumber = 1, initialScale, enabled } = props\n  // Service\n  const { service } = props\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [file, setFile] = React.useState()\n  const [numPages, setNumPages] = React.useState(0)\n  const [scale, setScale] = React.useState(initialScale)\n  const [pageNumber, setPageNumber] = React.useState(initialPageNumber)\n  const [searchText, setSearchText] = React.useState('')\n\n  React.useEffect(() => {\n    setFile()\n    setPageNumber(initialPageNumber)\n    dispatch(setPdf({ enabled: true }))\n\n    if (service) {\n      service.then(response => {\n        const _blob = new Blob([response.data])\n        setFile(_blob)\n      })\n    }\n  }, [service])\n\n  const download = () => {\n    const url = URL.createObjectURL(new Blob([file]))\n    const link = document.createElement('a')\n    link.href = url\n    link.setAttribute('download', `${fileName}.pdf`)\n    document.body.appendChild(link)\n    link.click()\n  }\n\n  const print = async () => {\n    try {\n      const { ipcRenderer } = window.require('electron')\n      const data = await blobToBase64(file)\n      ipcRenderer.send('print-to-pdf', { data, fileName })\n\n      dispatch(setPdf({ enabled: false }))\n      ipcRenderer.on('print-to-pdf-close', event => {\n        dispatch(setPdf({ enabled: true }))\n      })\n    } catch (error) {\n      const reader = new FileReader()\n      reader.readAsDataURL(file)\n      reader.onloadend = function () {\n        const dataUrl = reader.result\n        const printable = dataUrl.split(',')[1]\n        printJS({ printable, type: 'pdf', base64: true })\n      }\n    }\n  }\n\n  const blobToBase64 = blob => {\n    return new Promise(resolve => {\n      const reader = new FileReader()\n      reader.onload = function () {\n        const dataUrl = reader.result\n        const base64 = dataUrl.split(',')[1]\n        resolve(base64)\n      }\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  const handleOnSearch = event => {\n    const search = event.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        console.log('heelo')\n        setSearchText(search)\n      }, 500)\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.controls}>\n        <Typography id={'pdf-preview-title'} className={classes['file-name']} align='left'>\n          {name}\n        </Typography>\n        <Tooltip title='Search text'>\n          <span>\n            <div className={classes.search}>\n              <SearchTextComponent onChange={handleOnSearch} />\n            </div>\n          </span>\n        </Tooltip>\n\n        <Typography className={classes['page-number']}>Page: {pageNumber}</Typography>\n        <Tooltip title='Previous Page' className={`${classes.control} ${numPages <= 1 ? classes.disabled : ''}`}>\n          <span>\n            <IconButton\n              id={'pdf-preview-page-previous'}\n              disabled={numPages <= 1}\n              onClick={() => {\n                const page = pageNumber > 1 ? pageNumber - 1 : pageNumber\n                setPageNumber(page)\n                const elem = document.getElementById(`pdf-page-${page}`)\n                console.log(elem)\n                elem.scrollIntoView()\n              }}\n            >\n              <FontAwesomeIcon icon='arrow-alt-circle-left' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Next Page' className={`${classes.control} ${numPages <= 1 ? classes.disabled : ''}`}>\n          <span>\n            <IconButton\n              id={'pdf-preview-page-next'}\n              disabled={numPages <= 1}\n              onClick={() => {\n                const page = pageNumber < numPages ? pageNumber + 1 : pageNumber\n                setPageNumber(page)\n                const elem = document.getElementById(`pdf-page-${page}`)\n                elem.scrollIntoView()\n              }}\n            >\n              <FontAwesomeIcon icon='arrow-alt-circle-right' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Zoom in' className={classes.control}>\n          <span>\n            <IconButton id={'pdf-preview-zoom-in'} onClick={() => setScale(scale + 0.2)}>\n              <FontAwesomeIcon icon='search-plus' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Zoom out' className={classes.control}>\n          <span>\n            <IconButton onClick={() => (scale === 0.6 ? '' : setScale(scale - 0.2))}>\n              <FontAwesomeIcon icon='search-minus' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Print' className={`${classes.control} ${!enabled ? classes.disabled : ''}`}>\n          <span>\n            <IconButton disabled={!enabled} onClick={print}>\n              <FontAwesomeIcon icon='print' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Download' className={`${classes.control} ${!enabled ? classes.disabled : ''}`}>\n          <span>\n            <IconButton disabled={!enabled} onClick={download}>\n              <FontAwesomeIcon icon='save' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </div>\n\n      <div className={classes.viewport}>\n        <div className={classes.pdf}>\n          <Document\n            file={file}\n            onLoadSuccess={({ numPages }) => {\n              setNumPages(numPages)\n            }}\n          >\n            {[...Array(numPages)]\n              .map((value, index) => index + 1)\n              .map((value, index) => (\n                <div className={classes.page} id={`pdf-page-${value}`} key={`pdf-page-${value}`}>\n                  <Page\n                    pageNumber={value}\n                    scale={scale}\n                    renderMode={'canvas'}\n                    customTextRenderer={textItem =>\n                      textItem.str\n                        .split(searchText)\n                        .reduce(\n                          (strArray, currentValue, currentIndex) =>\n                            currentIndex === 0\n                              ? [...strArray, currentValue]\n                              : [...strArray, <mark key={currentIndex}>{searchText}</mark>, currentValue],\n                          []\n                        )\n                    }\n                  />\n                </div>\n              ))}\n          </Document>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst MozillaPdf = props => {\n  // Variables\n  const { name } = props\n  // Service\n  const { service } = props\n\n  const [url, setUrl] = React.useState('')\n\n  React.useEffect(() => {\n    setUrl()\n    if (service) {\n      service.then(response => {\n        const _blob = new Blob([response.data], { type: 'application/pdf' })\n        const blobUrl = URL.createObjectURL(_blob)\n        const _url = encodeURIComponent(blobUrl)\n\n        // const pdfArray = convertDataURIToBinary('data:application/pdf;base64, ' + _blob)\n\n        // const PdfViewer = document.getElementById('pdfViewer')\n        // if (PdfViewer) {\n        //   PdfViewer.contentWindow.PDFViewerApplication.open(pdfArray, 1.5)\n        //   setUrl(_url)\n        // }\n\n        blobToBase64(_blob).then(data => {\n          const pdfAsDataUri = 'data:application/pdf;base64,' + data\n          const pdfArray = convertDataURIToBinary(pdfAsDataUri)\n          setUrl(pdfAsDataUri)\n          console.log(pdfAsDataUri)\n          const PdfViewer = document.getElementById('pdfViewer')\n          if (PdfViewer) {\n            PdfViewer.contentWindow.PDFViewerApplication.open(pdfArray, 1.5)\n            setUrl(_url)\n          }\n        })\n      })\n    }\n  }, [service])\n\n  const convertDataURIToBinary = blob => {\n    const BASE64_MARKER = ';base64,'\n    var base64Index = blob.indexOf(BASE64_MARKER) + BASE64_MARKER.length\n    var base64 = blob.substring(base64Index)\n    var raw = window.atob(base64)\n    var rawLength = raw.length\n    var array = new Uint8Array(new ArrayBuffer(rawLength))\n\n    for (var i = 0; i < rawLength; i++) {\n      array[i] = raw.charCodeAt(i)\n    }\n    return array\n  }\n\n  const blobToBase64 = blob => {\n    return new Promise(resolve => {\n      const reader = new FileReader()\n      reader.onload = function () {\n        const dataUrl = reader.result\n        const base64 = dataUrl.split(',')[1]\n        resolve(base64)\n      }\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {url && (\n        <iframe\n          // id={'pdf-viewer'}\n          className={classes.iframe}\n          src={`${mozillaPdfViewer}`}\n          width='100%'\n          height='100%'\n        />\n      )}\n    </div>\n  )\n}\n\nconst MozillaPdfURL = props => {\n  // Variables\n  const { name } = props\n  // Service\n  const { service } = props\n\n  const [url, setUrl] = React.useState('')\n\n  React.useEffect(() => {\n    setUrl()\n    if (service) {\n      service.then(response => {\n        const _url = encodeURIComponent(response)\n        setUrl(_url)\n        // }\n      })\n    }\n  }, [service])\n\n  return (\n    <div className={classes.root}>\n      <iframe\n        // id={'pdf-viewer'}\n        className={classes.iframe}\n        src={`${mozillaPdfViewer}?file=${url}`}\n        width='100%'\n        height='100%'\n      />\n    </div>\n  )\n}\n\nconst PdfViewer2Modal = () => {\n  dispatch = useDispatch()\n  const {\n    open = false,\n    name = '',\n    fileName = '',\n    initialPageNumber = 1,\n    initialScale = 1,\n    service,\n    onClose,\n    enabled\n  } = useSelector(state => state.pdf)\n\n  const handleOnClose = () => {\n    if (!enabled) return\n\n    if (onClose) onClose()\n    dispatch(setPdf({ open: false, service: null, onClose: null }))\n  }\n\n  return (\n    <Dialog id={'pdf-preview'} fullScreen open={open} onClose={handleOnClose} TransitionComponent={Transition}>\n      <AppBar style={{ position: 'relative' }}>\n        <Toolbar>\n          <IconButton id={'pdf-preview-close'} edge='start' color='inherit' onClick={handleOnClose} aria-label='close'>\n            <CloseIcon />\n          </IconButton>\n          <Typography variant='h6' className={classes.title}>\n            Preview Sheet\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <DialogContent style={{ padding: '0px' }}>\n        {PdfView2Component({\n          name,\n          fileName,\n          initialPageNumber,\n          initialScale,\n          service,\n          enabled\n        })}\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst PdfViewer2Service = options => dispatch(setPdf(options))\n\nexport { PdfViewer2Service, PdfViewer2Modal, PdfView2Component, MozillaPdf, MozillaPdfURL }\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\nimport Service from 'Services/Api/CustomerCareServices'\nimport { MozillaPdf, MozillaPdfURL } from '../../Components/PdfViewer2/PdfViewer2'\n\nimport classes from './PdfViewers.module.scss'\n\nexport default function PdfViewer (props) {\n  const { storage, errors } = props\n  const { setErrors, onChange } = props\n\n  const [mct, setMct] = React.useState('5e494813213ab37f5f550b44')\n\n  return (\n    <div className={classes.root}>\n      BASE64 * File limited\n      <MozillaPdf name={'test'} service={Service.getMemberContract({ mct_id: mct })} enabled />\n      URL\n      <MozillaPdfURL name={'test'} service={Service.getMemberContractUrl({ mct_id: mct })} enabled />\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n\nimport AutoCompletes from './Sections/AutoCompletes/AutoCompletes'\nimport DatePickers from './Sections/DatePickers/DatePickers'\nimport PdfViewers from './Sections/PdfViewers/PdfViewers'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nimport classes from './Test.module.scss'\n\n// https://github.com/mui-org/material-ui-pickers/issues/1388\n// const WrappedTextField = props => <ClaimsInputBase {...props} />\n\nexport default function Test (props) {\n  const [storage, setStorage] = React.useState({\n    facility_id: '',\n    facility_name: '',\n    date_from: new Date()\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    facilities: []\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const [errors, setErrors] = React.useState({ date_from: '' })\n\n  const [toggle, setToggle] = React.useState('')\n\n  React.useEffect(() => {\n    PageTitleService('Test')\n    BreadcrumbsService.setSelectedItems(['test'])\n  }, [])\n\n  const onChange = ({ value, field }) => {\n    setStorage(state => ({ ...state, [field]: value }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.sidebar}>\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-positive'\n          onClick={() => setToggle('auto-complete')}\n        >\n          AutoComplete\n        </Button>\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-positive'\n          onClick={() => setToggle('date-picker')}\n        >\n          DatePickers\n        </Button>\n        <Button variant='contained' color='primary' className='button-positive' onClick={() => setToggle('pdf-viewer')}>\n          PdfViewer\n        </Button>\n      </div>\n      <div className={classes.content}>\n        <div className={classes.title}>\n          <Typography variant='h4'>{toggle.toUpperCase()}</Typography>\n        </div>\n        <div className={classes.wrapper}>\n          {toggle === 'auto-complete' && (\n            <AutoCompletes\n              service={ClaimsAdjudicationServices}\n              errors={errors}\n              storage={storage}\n              debounce={debounce}\n              suggestion={suggestion}\n              setErrors={setErrors}\n              onChange={onChange}\n              setStorage={setStorage}\n              setDebounce={setDebounce}\n              setSuggestion={setSuggestion}\n            />\n          )}\n\n          {toggle === 'date-picker' && (\n            <DatePickers errors={errors} storage={storage} setErrors={setErrors} onChange={onChange} />\n          )}\n\n          {toggle === 'pdf-viewer' && (\n            <PdfViewers errors={errors} storage={storage} setErrors={setErrors} onChange={onChange} />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Analyst\nimport Dashboard from './../Components/ClaimsAnalyst/Dashboard/Dashboard'\nimport Test from './../Components/ClaimsAnalyst/Test/Test'\n\n// Components\nimport ClaimsViewer from './../Components/ClaimsViewer'\nimport ClaimsUtilLedgerReport from '../Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  test: {\n    text: 'Test',\n    to: data => `/test`\n  }\n}\n\nconst permissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  reimbursement_info: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    return_advice: { visible: true, enabled: true, options: {} },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/utilization-ledger' exact render={() => <ClaimsUtilLedgerReport />} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsAdjudicationServices}\n          />\n        )}\n      />\n      <Route path='/test' exact component={Test} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number', match: 'start' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa.number', match: 'or' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name', match: 'any' }\n]\n\nconst ForPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'payment-request',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'payment-request' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const paymentRequestClaims = batchResponse.data.data.results\n        const paymentRequestClaimCount = batchCountResponse.data.data\n        setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'For Payment Request'\n    const category = 'payment-request'\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'payment-request'\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'payment-request',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      filter: viewList.filter,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-payment-request'\n        count={{ color: 3, value: claims.count, id: 'for-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'For Payment Request' : mTitle}\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`for-pr-${item.id}`} id={`for-pr-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                  <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-request/${item.bundle_number}`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                        Request Payment\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='for-payment-request'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetching}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default ForPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nconst SubmittedPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'submitted' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const paymentRequestClaims = batchResponse.data.data.results\n        const paymentRequestClaimCount = batchCountResponse.data.data\n        setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Submitted PR'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'submitted'\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-pr'\n        count={{ color: 3, value: claims.count, id: 'submitted-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'Submitted PR' : mTitle}\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-pr-view-list'\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`submitted-pr-${item.id}`} id={`submitted-pr-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                  <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-pr'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number', match: 'start' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa.number', match: 'or' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name', match: 'any' }\n]\n\nconst OverrideClaimTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'override',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'override' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const paymentRequestClaims = batchResponse.data.data.results\n        const paymentRequestClaimCount = batchCountResponse.data.data\n        setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Override Claim'\n    const category = 'override'\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'override'\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'override',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='override-claim'\n        count={{ color: 5, value: claims.count, id: 'override-claim-count' }}\n        sizes={sizes}\n        title='Override Claim'\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`oc-${item.id}`} id={`oc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell>{item.claim_number}</TableCell>\n                  <TableCell>{item.soa.number || item.bundle_number}</TableCell>\n                  <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-request/${item.bundle_number}`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                        Request Payment\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='override-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`oc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`oc-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`oc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`oc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOverrideClaimTile.displayName = 'DashboardTileComponent'\n\nexport default OverrideClaimTile\n","import instance from './instance'\nconst axios = instance('/c/pr')\n\nexport default class PaymentRequestServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequest ({ bundle_number }) {\n    return axios({\n      url: `/payment-request/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getPaymentRequestBatches ({ bundle_number, params }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static submit ({ bundle_number, data }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/submit`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPaymentRequestTile from './../../../Components/Tiles/SubmittedPaymentRequestTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// CSS\nimport classes from './PaymentRequestPage.module.scss'\n\nconst pendingHeadCells = [\n  { id: 'pending-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n  { id: 'pending-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'pending-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'pending-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  {\n    id: 'pending-discount-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Hospital Discount Amount'\n  }\n]\nconst submittedHeadCells = [\n  { id: 'submitted-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n  { id: 'submitted-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'submitted-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'submitted-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  {\n    id: 'submitted-discount-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Hospital Discount Amount'\n  }\n]\nexport default function PaymentRequestPage (props) {\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [prRemarks, setPrRemarks] = React.useState('')\n  const [dialog, setDialog] = React.useState({})\n\n  const [batches, setBatches] = React.useState({\n    pending: { data: [], header: {}, loading: true },\n    submitted: { data: [], header: {}, loading: true }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n\n    PageTitleService(`Request for Payment: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Pending Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'pending' } }).then(\n      ({ data: res }) => resetBatches({ type: 'pending', data: res.data, bundle })\n    )\n\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = `${data.length} / ${bundle.total_batch}`\n    const total_rcs = `${data.reduce((acc, batch) => acc + batch.claims.length, 0)} / ${bundle.total_rcs}`\n\n    data = data.map(i => ({\n      ...i,\n      selected: false,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0),\n      discount_amount: i.claims.reduce((acc, claim) => acc + claim.discount_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          approved_amount,\n          pr_amount: 0\n        },\n        loading: false,\n        indeterminate: undefined,\n        checked: undefined\n      }\n    }))\n  }\n\n  const handleClick = ({ index, batches: selectedBatches }) => {\n    const _batch = {\n      ...batches[selectedBatches],\n      data: batches[selectedBatches].data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    console.log(_batch)\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const handleSelectAllClick = ({ batches: selectedBatches }) => {\n    let _batch = batches[selectedBatches]\n\n    _batch.data.map(i => {\n      i.selected = _batch.indeterminate ? true : !_batch.checked\n      return i\n    })\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const changeSelectAllState = ({ batches: selectedBatches, data }) => {\n    let _batch = data || batches[selectedBatches]\n\n    let selected_count = 0\n    let pr_amount = 0\n    let discount_amount = 0\n    for (let b of _batch.data) {\n      if (b.selected) {\n        pr_amount += b.total_amount\n        discount_amount += b.discount_amount\n        selected_count++\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batch.data.length : false\n    let checked = selected_count ? selected_count === _batch.data.length : false\n\n    _batch = { ..._batch, indeterminate, checked, header: { ..._batch.header, pr_amount, discount_amount } }\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n  }\n\n  const handleOnSubmit = () => {\n    let selected = getSelectedPending(batches.pending.data)\n\n    if (!selected.length) {\n      return setDialog({\n        open: true,\n        // message: 'Please select a batch for submission to Treasury Department.',\n        message: 'User must select first a batch for submission.',\n        okLabel: 'Close',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    const onOk = () => {\n      LoadingService.loading(true)\n      setDialog(state => ({ ...state, open: false }))\n      const requestBatch = []\n\n      for (let select of selected) {\n        const claims = select.claims.map(claim => {\n          return claim.claim_number\n        })\n        requestBatch.push(PaymentRequestServices.submit({ bundle_number, data: { claims, remarks: prRemarks } }))\n      }\n\n      Promise.all(requestBatch).then(\n        ({ data: res }) => {\n          const data = batches.pending.data.filter((i, index) => {\n            let should_include = true\n            for (let s of selected) {\n              if (s.index === index) {\n                should_include = false\n                break\n              }\n            }\n            if (should_include) return i\n          })\n          resetBatches({ type: 'pending', data, bundle })\n          resetBatches({ type: 'submitted', data: [...selected, ...batches.submitted.data], bundle })\n          setPrRemarks('')\n          PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n            const { data } = res\n            setBundle(data)\n            getBatches({ bundle_number, bundle: data })\n          })\n          LoadingService.loading(false)\n        },\n        err => {\n          console.log(err)\n        }\n      )\n    }\n\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to submit?',\n      okLabel: 'Yes',\n      cancelLabel: 'No',\n      onCancel: () => setDialog(state => ({ ...state, open: false })),\n      onOk\n    })\n  }\n\n  const handleOnCancel = () => {\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to cancel?',\n      okLabel: 'Yes',\n      onOk: () => props.history.push(`/`),\n      cancelLabel: 'Close',\n      onCancel: () => setDialog(state => ({ ...state, open: false }))\n    })\n  }\n\n  const getSelectedPending = data => {\n    return data.filter((i, index) => {\n      if (i.selected) {\n        i.index = index\n        return i\n      }\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {bundle ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header}>Total Batches: {batches.pending.header.total_batches}</Typography>\n              <Typography className={classes.header}>Total RCS: {batches.pending.header.total_rcs}</Typography>\n              <Typography className={classes.header}>\n                Total Approved Amount:\n                <span id='total-approved-amount'>{`PHP ${CurrencyFormatter(\n                  batches.pending.header.approved_amount\n                )}`}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total PR Amount: PHP\n                <span id='total-pr-amount'>{`PHP ${CurrencyFormatter(batches.pending.header.pr_amount)}`}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total Discount Amount:\n                <span id='total-discount-amount'>{`PHP ${CurrencyFormatter(\n                  batches.pending.header.discount_amount\n                )}`}</span>\n              </Typography>\n            </div>\n\n            <EnhancedTable\n              className={classes.table}\n              headCells={pendingHeadCells}\n              handleSelectAllClick={() => handleSelectAllClick({ batches: 'pending' })}\n              indeterminate={!!batches.pending.indeterminate}\n              checked={!!batches.pending.checked}\n              checkAll\n              checkboxColor='default'\n              selectStatus\n            >\n              <TableBody>\n                {batches.pending.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      onClick={event => handleClick({ index, batches: 'pending' })}\n                      role='checkbox'\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell padding='checkbox'>\n                        <Checkbox checked={batch.selected} color='default' />\n                      </TableCell>\n                      <TableCell align='left' id={`pending-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`pending-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`pending-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`pending-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`pending-discount-amount-${index}`}>\n                        {CurrencyFormatter(batch.discount_amount)}\n                        {/* 0.00 */}\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n                {!batches.pending.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n\n          <div className={classes.group}>\n            <div className={classes.remarks}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes['header-text']}>\n                  Payment Request Remarks\n                </Typography>\n              </div>\n              <div className={classes['input']}>\n                <CustomTextField\n                  multiline\n                  rows={8}\n                  id='pr-remarks'\n                  value={prRemarks}\n                  readOnly={false}\n                  onChange={event => setPrRemarks(event.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className={classes.buttonWrapper}>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={handleOnCancel}\n                id='cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={handleOnSubmit}\n                id='submit'\n              >\n                Submit\n              </Button>\n            </div>\n          </div>\n\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes['submit-header']}>Submitted Batches</Typography>\n            </div>\n            <EnhancedTable className={classes.table} headCells={submittedHeadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      // hover\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell align='left' id={`submitted-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`submitted-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`submitted-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`submitted-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`submitted-discount-amount-${index}`}>\n                        {CurrencyFormatter(batch.discount_amount)}\n                        {/* 0.00 */}\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.group}>\n            <div className={classes.remarks}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes['header-text']}>\n                  Payment Request Remarks\n                </Typography>\n              </div>\n              <div className={classes['input']}>\n                <CustomTextField multiline rows={8} id='saved-pr-remarks' value={bundle.remarks} disabled />\n              </div>\n            </div>\n            <div />\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\n\n// CSS\nimport classes from './SubmittedPaymentRequestPage.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: true, center: false, disablePadding: false, label: 'Hospital Discount Amount' }\n]\n\nconst prManagerheadCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: true, center: false, disablePadding: false, label: 'Hospital Discount Amount' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const { supervisor, isManager } = props\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n\n  const [batches, setBatches] = React.useState({\n    submitted: { data: [], header: {} }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n    PageTitleService(`Submitted PR: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = data.length\n    const total_rcs = data.reduce((acc, batch) => acc + batch.claims.length, 0)\n\n    data = data.map(i => ({\n      ...i,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          pr_amount: approved_amount\n        }\n      }\n    }))\n  }\n  const approved_by_uid = bundle ? bundle.approved_by_uid : ''\n\n  return (\n    <div className={classes.root}>\n      {bundle && approved_by_uid ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header} align='center'>\n                Total Batches: {batches.submitted.header.total_batches}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total RCS: {batches.submitted.header.total_rcs}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total PR Amount:\n                <span id='total-pr-amount'>{`PHP ${CurrencyFormatter(batches.submitted.header.pr_amount)}`}</span>\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total Discount Amount:\n                <span id='total-discount-amount'>{`PHP ${CurrencyFormatter(0)}`}</span>\n              </Typography>\n            </div>\n\n            <EnhancedTable className={classes.table} headCells={!isManager ? headCells : prManagerheadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow>\n                      <TableCell align='center' id={`batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell align='center' id={`total-rcs-${index}`}>\n                        {batch.claims.length}\n                      </TableCell>\n                      <TableCell align='right' id={`billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`discount-amount-${index}`}>\n                        {/* {CurrencyFormatter(batch.discount_amount)} */}\n                        0.00\n                      </TableCell>\n                      {isManager && (\n                        <TableCell align='right' id={`discount-amount-${index}`}>\n                          <Link\n                            // to={`/payment-requests/${item.id}/list`}\n                            to={`/payment-request/${bundle_number}/submitted/${batch.batch_number}`}\n                          >\n                            <Typography\n                              variant='caption'\n                              className={`text-link underline`}\n                              id={`submmited-pr-${index}`}\n                            >\n                              View\n                            </Typography>\n                          </Link>\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              onClick={() =>\n                supervisor || isManager\n                  ? props.history.push(`/payment-requests/${approved_by_uid}/list`)\n                  : props.history.push('/')\n              }\n              id='cancel'\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport Dashboard from './../Components/PaymentRequest/Dashboard/Dashboard'\nimport PaymentRequestPage from './../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route path='/payment-request/:bundle_number/submitted' exact component={SubmittedPaymentRequestPage} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 'approved-by', name: 'PR Processor', sortField: 'approved_by', match: 'any' },\n  { id: 'total-bundles', name: 'Total Bundle/SOA', sortField: 'total_bundles', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' }\n]\n\nconst SubmittedPrSupervisorTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([services.getSubmittedPaymentRequest({ limit: 10, sort: '' }), services.getBundleCount()])\n      .then(values => {\n        const bundleResponse = values\n        const submittedRequestClaims = bundleResponse[0].data.data.results\n        const submittedRequestClaimCount = bundleResponse[1].data.data\n        setClaims({ data: submittedRequestClaims, count: submittedRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Submitted PR'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getSubmittedPaymentRequest({ limit: 10, sort: '' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page, category }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getSubmittedPaymentRequest(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page, category: 'submitted' }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-pr'\n        count={{ color: 3, value: claims.count, id: 'submitted-claim-count' }}\n        sizes={sizes}\n        title='Submitted PR'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-pr-view-list'\n          >\n            View List\n          </Typography>\n        }\n        isFilterShown={false}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell>PR Processor</TableCell>\n                <TableCell>Total Bundle/SOA</TableCell>\n                <TableCell>Total Batches</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n                  <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n                  <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-requests/${item.id}/list`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-pr'\n        columns={columns}\n        searchTextPlaceHolder='Search for PR Processor'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n              <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n              <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n              <TableCell>\n                <Link to={`/payment-requests/${item.id}/list`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPrSupervisorTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPrSupervisorTile\n","import instance from './instance'\nconst axios = instance('/c/prs')\n\nexport default class PaymentRequestServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequestBundles ({ processor_id }, params) {\n    return axios({\n      url: `/payment-requests/${processor_id}/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport PaymentRequestSupervisorServices from 'Services/Api/PaymentRequestSupervisorServices'\n\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ sm: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPrSupervisorTile services={PaymentRequestSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={8} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestSupervisorServices from 'Services/Api/PaymentRequestSupervisorServices'\n\n// CSS\nimport classes from './SubmittedPaymentRequestList.module.scss'\n\n// UTIL\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Received', sortField: 'date.received', match: 'date' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const processor_id = props.match.params.pr_officer\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'date.due',\n    order: true,\n    sort: 'date.due|desc'\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Submitted PR')\n    BreadcrumbsService.setSelectedItems(['dashboard', 'submittedPaymentRequest'])\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, initialValue).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }, [])\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, _params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSearchColumn = args => {\n    const { field, value, match } = args\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      {viewList.data ? (\n        <React.Fragment>\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for Bundle Number, Date or Facility Name'\n            />\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map(headCell => (\n                    <TableCell key={headCell.sortField} id={headCell.id}>\n                      <TableSortLabel\n                        active={viewList.orderBy === headCell.sortField}\n                        direction={viewList.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort(headCell.sortField)}\n                      >\n                        {headCell.name}\n                      </TableSortLabel>\n                      <TextField\n                        id={`column-filter-${headCell.id}`}\n                        // className={`${classes.search}`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearchColumn({\n                                field: headCell.sortField,\n                                value: search,\n                                match: headCell.match\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </TableCell>\n                  ))}\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <React.Fragment>\n                  {viewList.data.map((row, index) => (\n                    <TableRow key={`${row.claim_number}-${index}`}>\n                      <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n                      <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n                      <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n                      <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/payment-request/${row.bundle_number}/submitted`}>\n                          <Typography variant='caption' className={`text-link underline`}>\n                            View\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </React.Fragment>\n              }\n              count={viewList.count}\n              page={viewList.page}\n              limit={viewList.limit}\n              rowsPerPageOptions={[10, 15, 20]}\n              onChange={handleOnViewListChange}\n            />\n          </div>\n          <div align='right' className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel'\n              onClick={() => props.history.push(`/`)}\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// Pages of Payment Request Officer Supervisor\nimport Dashboard from './../Components/PaymentRequestSupervisor/Dashboard/Dashboard'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route\n        path='/payment-request/:bundle_number/submitted'\n        exact\n        render={props => <SubmittedPaymentRequestPage supervisor {...props} />}\n      />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { name: 'Claim Number', sortField: 'latest.claim_number' },\n  { name: 'Due Date', sortField: 'latest.date.due' },\n  { name: 'Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ id, viewList, setViewList, onViewListChange }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      id={id}\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent id={`${id}-body`} dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          id={`${id}-table`}\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow id={`${id}-header`}>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow id={`for-review-claim-${index}`} key={row.claim_number}>\n              <TableCell>{row.claim_number}</TableCell>\n              <TableCell>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/claims/review/${row.claim_number}`}>\n                  <Typography id={`review-claim-${index}`} variant='caption' className={`text-link underline`}>\n                    Review\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/MedicalConsultantServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [claims, setClaims] = React.useState({\n    for_review: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Claims\n    Promise.all([\n      MedicalConsultantServices.getClaims({\n        category: 'for-review',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      MedicalConsultantServices.getClaimCount({ category: 'for-review' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_review: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    MedicalConsultantServices.getClaims({\n      category,\n      range: value,\n      limit: 10,\n      sort: 'latest.due.date|desc'\n    }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/review/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'for_review') title = 'For Review'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    MedicalConsultantServices.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    MedicalConsultantServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'for_review') handleOnReview(claim_number)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.for_review.count }}\n              sizes={{ sm: 12 }}\n              title='Escalated Claims'\n              viewList={\n                <Typography\n                  id='mc-view-list'\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('for-review')}\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('for_review')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.for_review.data.map((item, index) => (\n                    <TableRow key={item.claim_number}>\n                      <TableCell>{item.claim_number}</TableCell>\n                      <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          id={`review-claim-${index}`}\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnReview(item.claim_number)}\n                        >\n                          Review\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {claims.ticket.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n\n      <ViewList\n        id='for-review'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/MedicalConsultant/Dashboard/Dashboard'\n\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport MedicalConsultantServices from 'Services/Api/MedicalConsultantServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  review: {\n    text: 'Review',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    communication: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'review']}\n            {...props}\n            permissions={permissions}\n            ApiService={MedicalConsultantServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForReconciliationClaimsTile services={ClaimsReconServices} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/ClaimsReconciliation/Dashboard/Dashboard'\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    remove: { visible: true }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import Button from '@material-ui/core/Button'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Services\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nexport default function AssignDialog (props) {\n  const { dialog, handleOnSubmit = () => {}, setDialog } = props\n\n  const [reassignData, setReassignData] = React.useState({\n    user_id: '',\n    message: ''\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  React.useEffect(() => {\n    UserManagementServices.getClaimsAnalyst()\n      .then(res => {\n        const _data = res.data\n        const data = _data.map(user => {\n          return { value: user._id, text: `${user.first_name} ${user.last_name}` }\n        })\n        setDropDownUsers(prevState => [...prevState, ...data])\n      })\n      .catch(err => console.error('Failed fetching Claims Verifiers: ', err))\n  }, [])\n\n  const onDropDownChanged = params => {\n    setReassignData(prevState => ({ ...prevState, user_id: params }))\n  }\n\n  const onTextFieldChanged = params => {\n    setReassignData(prevState => ({ ...prevState, message: params }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='reassign-notes'\n                value={reassignData.message}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Message'\n                onChange={e => onTextFieldChanged(e.target.value)}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassignData.user_id}\n                  onChange={e => onDropDownChanged(e.target.value)}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  id='reassign-cancel'\n                  onClick={() => setDialog(state => ({ ...state, assign: false }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  id='reassign-submit'\n                  onClick={() => setDialog(state => ({ ...state, alert: true }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claim Verifier</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claim Analyst?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claim Analyst for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmit(reassignData)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Component\nimport AssignDialog from './../AssignDialog/AssignDialog'\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmit = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    claimsCount = 0\n  } = props\n\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography>Total Claims Selected: {claimsCount} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-positive'\n                onClick={() => setDialog(state => ({ ...state, assign: true }))}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog dialog={dialog} setDialog={setDialog} handleOnSubmit={handleOnSubmit} />\n    </div>\n  )\n}\n","import instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims/adjudication',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/adjudication/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/adjudication/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/adjudication/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getDropdown (params) {\n    return axios({\n      url: '/lookups/dropdown',\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n}\n","import ClaimsAdjudicationServices from '../ClaimsAdjudicationServices'\nimport instance from '../instance'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsReimbursementServices extends ClaimsAdjudicationServices {\n  static getItems (params) {\n    return axios({\n      url: `/claims/medical-collectibles/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/medical-collectibles/count`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nimport ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport MedicalCollectiblesServices from './MedicalCollectiblesServices'\nconst axios = instance('/c/cvs')\n\nclass index extends ClaimsAdjudicationServices {\n  // MOCK ENDPOINT\n  static getClaims (params) {\n    return axios({\n      url: '/claims/all',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/all/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItems (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getClaimsBySubbordinateCount (params) {\n    console.log(params)\n    return axios({\n      url: '/subordinate/claims/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static totalSubordinatesClaims (params) {\n    return axios({\n      url: '/claims/subordinates/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getSubordinates (params) {\n    return axios({\n      url: '/claims/subordinates',\n      method: 'GET',\n      params\n    })\n  }\n\n  static returnClaim ({claim_number, data}) {\n    console.log(data)\n    return axios({\n      url: `/claims/${claim_number}/return`,\n      method: 'POST',\n      params: data\n    })\n  }\n}\n\nindex.ClaimsAdjudicationServices = ClaimsAdjudicationServices\nindex.MedicalCollectiblesServices = MedicalCollectiblesServices\nexport default index\n","import Button from '@material-ui/core/Button'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsList.module.scss'\n\nexport default function ClaimsPage (props) {\n  const userId = props.match.params.user_id\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const headcell = [\n    { id: 's-claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'any' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'date.received', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'date.due', match: 'date' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n  ]\n  const [claims, setClaims] = React.useState({\n    category: 'my',\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    filter: {},\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [claimsCount, setClaimsCount] = React.useState(0)\n\n  React.useEffect(() => {\n    PageTitleService('For Adjudication')\n    BreadcrumbsService.setSelectedItems(['assigned'])\n    LoadingService.loading(true)\n    getClaims()\n    LoadingService.loading(false)\n  }, [])\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getClaims()\n    LoadingService.loading(false)\n  }, [claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  const getClaims = () => {\n    ClaimsVerifierSupervisorServices.getItems({\n      category: claims.category,\n      search: claims.search,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit,\n      user_id: userId,\n      filter: claims.filter\n    })\n      .then(res => {\n        const { results, count, limit, page } = res.data.data\n        results.map(claim => (claim.checked = false))\n        setClaims(prevState => ({ ...prevState, data: results, count, limit, page }))\n      })\n      .catch(err => console.error('Error fetching records: ', err))\n  }\n\n  const handleItemSelect = (event, index) => {\n    let data = [...claims.data]\n    const count = event.target.checked ? 1 : -1\n    data[index] = { ...data[index], checked: event.target.checked }\n    setClaims(prevState => ({ ...prevState, data }))\n    setClaimsCount(prevState => prevState + count)\n  }\n\n  const handleOnSearch = args => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        const { field, value, match } = args\n        setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n      }, 500)\n    )\n  }\n\n  const handleOnSearchAll = (args = '') => {\n    setClaims(prevState => ({ ...prevState, search: args }))\n  }\n\n  const handleOnSubmit = params => {\n    LoadingService.loading(true)\n    const { user_id, message } = params\n    const reassign = async () => {\n      return Promise.all(\n        claims.data.map(async claim => {\n          if (claim.checked === true) {\n            await ClaimsVerifierSupervisorServices.reassign({\n              claim_number: claim.claim_number,\n              data: { receiver_id: user_id, message: message }\n            }).catch(err => console.error(err))\n          }\n        })\n      )\n    }\n    reassign()\n      .then(() => {\n        handleUnselectAll()\n        LoadingService.loading(false)\n        getClaims()\n      })\n      .catch(err => console.error(('Error Assigning Claims: ', err)))\n  }\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleSelectAll = event => {\n    let data = [...claims.data]\n    const count = event.target.checked ? 1 : 0\n    data.map(claim => {\n      claim.checked = event.target.checked\n    })\n    setClaims(prevState => ({ ...prevState, data }))\n    setClaimsCount(count > 0 ? data.length : 0)\n  }\n\n  const handleUnselectAll = () => {\n    let data = [...claims.data]\n    data.map(claim => {\n      claim.checked = false\n    })\n    setClaims(prevState => ({ ...prevState, data }))\n    setSelectStatus(false)\n    setClaimsCount(0)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox color='default' onClick={event => handleSelectAll(event)} />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={claims.orderBy === headCell.sortField}\n                direction={claims.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              {headCell.match === 'date' ? (\n                <DatePicker\n                  noMargin\n                  id={`column-filter-${headCell.id}`}\n                  onChange={date =>\n                    handleOnSearch({\n                      field: headCell.sortField,\n                      value: date.toISOString(),\n                      match: headCell.match\n                    })\n                  }\n                  value={null}\n                />\n              ) : (\n                <TextField\n                  // className={`${classes.search}`}\n                  id={`column-filter-${headCell.id}`}\n                  TextFieldStyle={{ margin: 0 }}\n                  fullWidth\n                  onChange={event =>\n                    handleOnSearch({\n                      field: headCell.sortField,\n                      value: event.target.value,\n                      match: headCell.match\n                    })\n                  }\n                />\n              )}\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return claims.data.map((row, index) => (\n        <TableRow key={index}>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox checked={row.checked} color='default' onClick={event => handleItemSelect(event, index)} />\n            </TableCell>\n          ) : null}\n          <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n          <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n          <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n          <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n          <TableCell id={`view-claim-${index}`}>\n            <Link to={`/claims/view/${row.claim_number}`}>\n              <Typography id={`analyze-claim-${index}`} variant='caption' className='text-link underline'>\n                View\n              </Typography>\n            </Link>\n          </TableCell>\n        </TableRow>\n      ))\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => handleOnSearchAll(e.target.value)}\n                placeholder='Search for claim number or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={claims.count}\n              page={claims.page}\n              limit={claims.limit}\n              rowsPerPageOptions={claims.rowsPerPageOptions}\n              pagination\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            handleOnCancel={() => handleUnselectAll()}\n            handleOnClose={() => props.history.push(`/`)}\n            handleOnSubmit={handleOnSubmit}\n            claimsCount={claimsCount}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst RejectedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'rejected',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'REJECTED' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'rejected'\n\n    setFetching(true)\n    services\n      .getItems({\n        category,\n        filter: viewList.filter,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/rejected/${claim_number}`)\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'rejected'\n    let title = `Rejected Claims`\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getItems({ category, limit: 10, sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    // TO BE EDITED, WAITING FOR CLAIMS SUPERVISOR API SERVICES TO BE UP\n    // mock datas from med consultant\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='rejected-claim'\n        count={{ color: 3, value: claims.recon['count'], id: 'rejected-claim-count' }}\n        sizes={sizes}\n        title='Rejected Claims'\n        viewList={\n          <Typography id='rc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.recon.data.map((item, index) => (\n                <TableRow key={`${item.claim_number}-${index}`}>\n                  <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`rc-view-claim-${index}`}>\n                    <Typography\n                      id={`view-claim-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnReview(item.claim_number)}\n                    >\n                      View\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='rejected-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nRejectedClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default RejectedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 'verifier-name', name: 'Verifier Name', sortField: 'username', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 'total-claims', name: 'Total Claims', sortField: 'total_claims', match: 'any' }\n]\n\nconst ClaimsVerifierTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [viewList, setViewList] = React.useState({\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'latest.date.due',\n    order: true\n  })\n  const [verifiers, setVerifiers] = React.useState({ data: [], count: 0 })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.totalSubordinatesClaims(),\n      // services.getClaimsBySubbordinateCount(),\n      services.getSubordinates({ page: 1, limit: 10, sort: 'name|asc' })\n    ])\n      .then(res => {\n        const [usersCount, verifiers] = res\n        const { results, count } = verifiers.data.data.data\n\n        setViewList(prev => ({ ...prev, count: count }))\n        setVerifiers(p => ({ ...p, data: results, count: usersCount.data.data }))\n      })\n      .catch(err => console.error(err.message))\n      .finally(value => {\n        setFetching(false)\n      })\n  }, [])\n\n  const getSubordinates = params => {\n    setFetching(true)\n    setFetchingViewList(true)\n    services\n      .getSubordinates(params)\n      .then(res => {\n        const { results, count } = res.data.data.data\n        const { limit, page } = res.data.data\n\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .catch(err => console.error('Error fetching subordinates: ', err))\n      .finally(value => {\n        setFetching(false)\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnReviewUser = (params = null) => () => {\n    if (!params) return false\n    props.history.push(`/list/${params}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Claims Verifier List'\n\n    setViewList(prev => ({ ...prev, show: true, title, data: [] }))\n    getSubordinates({ page: 1, limit: 10, sort: 'name|asc' })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n    // console.log(_params)\n    getSubordinates({ ..._params })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-verifier'\n        count={{ color: 3, value: verifiers.count, id: 'claims-verifier-count' }}\n        sizes={sizes}\n        title='Claims Verifier'\n        isFilterShown={false}\n        viewList={\n          <Typography id='cv-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList()}>\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`cv-${item.id}`} id={`cv-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {verifiers.data &&\n                verifiers.data.map((item, index) => (\n                  <TableRow key={`verifier-list-item-${index}`}>\n                    <TableCell id={`cv-verifier-name-${index}`}>{item.username}</TableCell>\n                    <TableCell id={`cv-total-batches-${index}`}>{item.total_batches}</TableCell>\n                    <TableCell id={`cv-total-claims-${index}`}>{item.total_claims}</TableCell>\n                    <TableCell id={`cv-view-user-${index}`}>\n                      <Typography\n                        id={`view-user-${index}`}\n                        variant='caption'\n                        className={`text-link underline`}\n                        onClick={handleOnReviewUser(item.id)}\n                      >\n                        View\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-verifier'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claims Analyst'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`verifier-list-item-${index}`}>\n              <TableCell id={`cv-verifier-name-${index}`}>{item.username}</TableCell>\n              <TableCell id={`cv-total-batches-${index}`}>{item.total_batches}</TableCell>\n              <TableCell id={`cv-total-claims-${index}`}>{item.total_claims}</TableCell>\n              <TableCell id={`cv-view-user-${index}`}>\n                <Typography\n                  id={`view-user-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={handleOnReviewUser(item.id)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsVerifierTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsVerifierTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ReconTIle = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'recon',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'RECONCILED' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    setFetching(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'recon') title = 'Reconciled Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reconciled-claim'\n        count={{ color: 3, value: claims.recon['count'], id: 'reconciled-claim-count' }}\n        sizes={sizes}\n        title='Reconciled Claims'\n        viewList={\n          <Typography\n            id='rc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('recon')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('recon')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.recon.data.map((item, index) => (\n                <TableRow key={`${item.claim_number}-${index}`}>\n                  <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`rc-view-claim-${index}`}>\n                    <Typography\n                      id={`view-claim-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnReview(item.claim_number)}\n                    >\n                      Analyze\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='reconciled-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReconTIle.displayName = 'DashboardTileComponent'\n\nexport default ReconTIle\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ClaimsForApprovalTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'for-approval',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'FOR APPROVAL' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const claims = claimResponse.data.data.results\n        const claimsCount = claimCountResponse.data.data\n        setClaims({ data: claims, count: claimsCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for-approval'\n\n    setFetchingViewList(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'for-approval'\n    let title = 'Claims For Approval'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'for-approval',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetching(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-for-approval'\n        count={{ color: 3, value: claims['count'], id: 'claims-for-approval-count' }}\n        sizes={sizes}\n        title='Claims For Approval'\n        isFilterShown={false}\n        viewList={\n          <Typography id='fa-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={`fa-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`fa-view-claim-${index}`}>\n                    <Link to={`/claims/for-approval/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-for-approval'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`view-claim-${index}`}>\n                <Link to={`/claims/for-approval/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsForApprovalTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsForApprovalTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter, NameFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'account-number', name: 'Account No.', sortField: 'latest.client.account_number', match: 'any' },\n  { id: 'account-name', name: 'Account Name', sortField: 'latest.client.account_name', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member_name', match: 'any' }\n]\n\nconst MedicalCollectiblesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    filter: {},\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      }),\n      services.getItemCount()\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, data: allClaims, count: allClaimsCount }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    let title = 'Medical Collectibles'\n\n    setViewList({ ...initialValue, show: true, title })\n    setFetchingViewList(true)\n    services\n      .getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='medical-collectibles'\n        count={{ color: 3, value: claims.count, id: 'medical-collectibles-count' }}\n        sizes={sizes}\n        title='Medical Collectibles'\n        isFilterShown={false}\n        viewList={\n          <Typography id='mc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={`mc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  {/* added cond on client to support old data */}\n                  <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n                  <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n                  <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n                  <TableCell id={`mc-view-claim-${index}`}>\n                    <Link to={`/claims/review/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='medical-collectibles'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              {/* added cond on client to support old data */}\n              <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n              <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n              <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n              <TableCell id={`mc-view-claim-${index}`}>\n                <Link to={`/claims/review/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMedicalCollectiblesTile.displayName = 'DashboardTileComponent'\n\nexport default MedicalCollectiblesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date ', sortField: 'date.due', match: 'date' },\n  { id: 'account-name', name: 'Account No.', sortField: 'member.account_number', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member.name', match: 'any' }\n]\n\nconst ReimbursementClaimTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'reimbursement',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ claim_type: 'Reimbursement' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const { results } = claimResponse.data.data\n        setClaims(prevState => ({\n          ...prevState,\n          data: results,\n          count: claimCountResponse.data.data\n        }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = 'Reimbursement Claim'\n    // const _params = {\n    //   category: viewList.category,\n    //   limit: viewList.limit,\n    //   page: viewList.page,\n    //   search: viewList.search,\n    //   sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n    // }\n    setViewList({ ...initialValue, show: true, title })\n    setFetchingViewList(true)\n    services\n      .getItems({ category: viewList.category, limit: 10, sort: 'date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n\n    setViewList({ ...initialValue, show: true, title })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reimbursement-claims'\n        count={{ color: 3, value: claims.count, id: 'reimbursement-claims-count' }}\n        sizes={sizes}\n        title='Reimbursement Claim'\n        isFilterShown={false}\n        viewList={\n          <Typography id='rmc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={`rmc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={`rmc-claim-list-${index}`}>\n                  <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n                  <TableCell id={`rmc-member-name-${index}`}>{`${item.member.first_name} ${item.member.middle_name || ''} ${item.member.last_name}`}</TableCell>\n                  <TableCell id={`rmc-view-claim-${index}`}>\n                    <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='reimbursement-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`rmc-claim-list-${index}`}>\n              <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n              <TableCell id={`rmc-member-name-${index}`}>{`${item.member.first_name} ${item.member.middle_name || ''} ${\n                item.member.last_name\n              }`}</TableCell>\n              <TableCell id={`rmc-view-claim-${index}`}>\n                <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReimbursementClaimTile.displayName = 'DashboardTileComponent'\n\nexport default ReimbursementClaimTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from './../../../Components/Tiles/ForAdjudicationTile'\nimport MyClaimsTile from './../../../Components/Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from './../../../Components/Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from './../../../Components/Tiles/ReturnedEscalatedClaimsTile'\nimport RejectedClaimsTile from './../../../Components/Tiles/RejectedClaimsTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ReconciledClaimsTile from './../../../Components/Tiles/ReconciledClaimsTile'\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport MedicalCollectiblesTile from './../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from './../../../Components/Tiles/ReimbursementClaimTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Claims Adjudication'>\n            <ForAdjudicationTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <ReturnedEscalatedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <RejectedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ReconciledClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              {...props}\n            />\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n        </Grid>\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from './../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\nimport Dashboard from './../Components/ClaimsVerifierSupervisor/Dashboard/Dashboard'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\n\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Reports\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  reconciled: {\n    text: 'Reconciled',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  assigned: {\n    text: 'For Adjudication'\n  },\n  view: {\n    text: 'View'\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  }\n}\n\nconst forAdjudicationPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    communication: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 100000000,\n          other_types: 100000000\n        }\n      }\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forReconciledPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {}\n    },\n    save: { visible: true, enabled: true, options: {} },\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_ANALYST'], validate: false },\n      message:\n        'Are you sure you want to submit the Claim to the selected Claim Analyst? This Claim will be sent to the assigned Claim Analyst for processing.'\n    }\n  }\n}\n\nconst viewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nconst reviewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: {\n      visible: true,\n      enabled: true\n    },\n    letter_of_advice: {\n      visible: true,\n      enabled: true\n    }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={forAdjudicationPermissions}\n            ApiService={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n          />\n        )}\n      />\n\n      <Route path='/payment-request-report' exact render={() => <PaymentRequestReport />} />\n\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n\n      <Route\n        path='/claims/reconciled/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reconciled']}\n            {...props}\n            permissions={forReconciledPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/view/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={viewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={reviewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/rejected/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import instance from './../instance'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsManagerServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch (params) {\n    const { bundle_number, batch_number } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getApprovedClaims (args) {\n    const { bundle_number, batch_number, params } = args\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static overrideClaims (params) {\n    const { bundle_number, batch_number, ...others } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims/override`,\n      method: 'POST',\n      params: { others }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport MedicalCollectiblesTile from '../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from '../../../Components/Tiles/ReimbursementClaimTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport ClaimsManagerServices from 'Services/Api/ClaimsManagerServices/ClaimsManagerServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ForPaymentRequestTile services={PaymentRequestServices} mTitle='Payment Request for Approval' {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              {...props}\n            />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <SubmittedPrSupervisorTile services={ClaimsManagerServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Claims Processor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} {...props} />\n            <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} {...props} />\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n        </Grid>\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n\n  const [reassign, setReassign] = React.useState({\n    user_id: '',\n    note: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.user_id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n\n    setReassign({\n      note: '',\n      user_id: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  const handleOnChange = event => {\n    const value = event.target.value\n    setReassign(state => ({ ...state, note: value }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => handleOnChange(event)}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.user_id}\n                  onChange={event => {\n                    setReassign(state => ({ ...state, user_id: event.target.value }))\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claims Analyst/Verifier Supervisor:</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claims Analyst/Verifier Supervisor?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claims Analyst/Verifier Supervisor for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign(reassign)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                  setReassign({\n                    note: '',\n                    user_id: ''\n                  })\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from '../../ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList'\n// import AssignDialiog from './../'\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// import ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchDetailsPage.module.scss'\n\nexport default function BatchDetailsPage (props) {\n  const { ApiService, UserManagementApi } = props\n  const [details, setDetails] = React.useState()\n  const [batch_number, setBatchNumber] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [claims, setClaim] = React.useState([])\n  const [forOverride, setForOverride] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [selectStatus, setSelectStatus] = React.useState(false)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n  const [debounce, setDebounce] = React.useState(null)\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const { batch_number, bundle_number } = props.match.params\n    setBatchNumber(batch_number)\n    setBundleNumber(bundle_number)\n\n    PageTitleService(`Batch No. ${batch_number}`)\n    BreadcrumbsService.setSelectedItems([\n      'dashboard',\n      'submittedPaymentRequest',\n      `submittedSpecificPaymentRequest:${bundle_number}`,\n      `specificBatch:${batch_number}`\n    ])\n\n    ApiService.getBatch({ bundle_number, batch_number }).then(res => {\n      const { data } = res.data\n      setDetails(data)\n    })\n    console.log('without')\n    getClaimsAndCount({ batch_number, bundle_number })\n  }, [props.match.params.batch_number, props.match.params.bundle_number])\n\n  const handleClickOverride = () => {\n    initDropdownUsers()\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  const initDropdownUsers = () => {\n    Promise.all([UserManagementApi.getClaimsAnalyst(), UserManagementApi.getClaimsVerifierSupervisors()]).then(res => {\n      const [analystRes, supervisorRes] = res\n      const data = [...analystRes.data, ...supervisorRes.data]\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n\n      setDropDownUsers(users)\n    })\n  }\n\n  const handleOnSubmitOverride = args => {\n    LoadingService.loading(true)\n    const { user_id, note } = args\n    ApiService.overrideClaims({\n      bundle_number,\n      batch_number,\n      claims: forOverride.claim_numbers,\n      _id: user_id,\n      note\n    }).then(res => {\n      getClaimsAndCount({ batch_number, bundle_number })\n    })\n  }\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  const getClaimsAndCount = ({ batch_number, bundle_number }) => {\n    ApiService.getApprovedClaims({\n      bundle_number,\n      batch_number,\n      params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n    })\n      .then(res => {\n        const { results, count, page, limit } = res.data.data\n        setClaim(results)\n        setClaimCount(count)\n        setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n        LoadingService.loading(false)\n      })\n  }\n\n  React.useEffect(() => {\n    const { batch_number, bundle_number } = props.match.params\n    getClaimsAndCount({ batch_number, bundle_number })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} reassign_notes={false} />\n          <ClaimListHeader isManager count={claimCount} inputChange={handleSearchChange} />\n          <ClaimList\n            pagination={pagination}\n            setPagination={setPagination}\n            isManager\n            items={claims}\n            onItemClick={args => {}}\n            actionItems={forOverride}\n            setActionItems={setForOverride}\n            setSelected={setSelected}\n            selectStatus={selectStatus}\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {!selectStatus ? (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => setSelectStatus(true)}\n                  >\n                    Override Claim\n                  </Button>\n                  <Button\n                    id='close'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => props.history.push(`/payment-request/${bundle_number}/submitted`)}\n                  >\n                    Close\n                  </Button>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => handleClickOverride()}\n                    disabled={forOverride.claim_numbers.length < 1}\n                  >\n                    Override\n                  </Button>\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => {\n                      setSelectStatus(false)\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitOverride}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsEncodingServices {\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static storeLookups ({ on, data, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'post',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static updateLookups ({ on, data, code, params }) {\n    return axios({\n      url: `/lookups/${code}/${on}`,\n      method: 'put',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Radio from '@material-ui/core/Radio'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// timefield lib\nimport TimeField from 'react-advanced-timefield'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Services\nimport ClaimsMaintainerServices from 'Services/Api/ClaimsMaintainerServices'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\n\n// Constants\nimport ClaimTypes from 'Constant/claimTypes'\n\n// Styles\nimport classes from './MaintenancePage.module.scss'\n\n// Constants\nconst lookups = {\n  hospital_items: { on: 'hospital-item-list', field: 'hospital-item-list' },\n  reason_covered: { on: 'maintenance', field: 'covered-reason' },\n  reason_charging: { on: 'maintenance', field: 'charging-reason' },\n  reason_return: { on: 'maintenance', field: 'return-reason' },\n  reason_reject: { on: 'maintenance', field: 'reject-reason' },\n  claims_source: { on: 'maintenance', field: 'claims-source' },\n  claim_sub_type: { on: 'maintenance', field: 'claims-sub-type' },\n  claim_sub_sub_type: { on: 'maintenance', field: 'claims-sub-sub-type' },\n  handling_timi_kpi: { on: 'handling-time-kpi', field: 'handling-time-kpi' }\n}\n\nconst claim_types = ClaimTypes.dropdown()\n\nconst initialValue = {\n  show: false,\n  title: '',\n  count: 0,\n  search: '',\n  limit: 10,\n  page: 1,\n  data: [],\n  orderBy: '',\n  order: true,\n  header: 'Hospital Item List',\n  filter: {description: {value: ''}, status: {value: ''}, section: { value: '' }, claim_type: { value: '' }, handling_time_formatted: { value: '' }}\n\n}\nconst initialItem = {\n  description: '',\n  status: 'Active',\n  code: '',\n  active: true,\n  deactivate: false,\n  claim_type: '',\n  section: '',\n  handling_time: ''\n}\n\nlet columns = [\n  { name: 'Description', sortField: 'description', id: 'description', match: 'any' },\n  { name: 'Status', sortField: 'status', id: 'status', match: 'start' }\n]\n\nlet kpi_columns = [\n  { name: 'Section', sortField: 'section', id: 'section', match: 'any' },\n  { name: 'Claim Type', sortField: 'claim_type', id: 'description', match: 'any' },\n  { name: 'Handling Time', sortField: 'handling_time_formatted', id: 'description', match: 'any' },\n  { name: 'Status', sortField: 'status', id: 'status', match: 'start' }\n]\n\nexport default function MaintenancePage (props) {\n  const [data, setData] = React.useState(initialValue)\n  const [lookup, setLookup] = React.useState(lookups.hospital_items)\n  const [debounce, setDebounce] = React.useState(null)\n  const [item, setItem] = React.useState(initialItem)\n  const [showAddItem, setShowAddItem] = React.useState({\n    show: false,\n    mode: 'add'\n  })\n  const [section, setSection] = React.useState([])\n\n  const [index, setindex] = React.useState()\n\n  const [showAlert, setShowAlert] = React.useState({\n    open: false,\n    message: '',\n    onOk: '',\n    okLabel: 'Okay',\n    cancelLabel: ''\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n\n  React.useEffect(() => {\n    PageTitleService('Claims Maintenance')\n    BreadcrumbsService.setSelectedItems(['maintenance'])\n    ClaimsServices.lookupsAll({ category: 'section' }).then(res => {\n      const { data = [] } = res.data\n      const _data = data.map(c => ({ text: c.name, value: c.name }))\n      setSection(_data)\n    })\n  }, [])\n\n  React.useEffect(() => {\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: {...data, field: lookup.field} }).then(({ data: res }) => {\n      const { results, count } = res.data\n      setData(state => ({...state, data: results, count}))\n      setFetching(false)\n    })\n  }, [lookup])\n\n  const handleOnChange = params => {\n    const _params = {\n      limit: data.limit,\n      page: data.page,\n      search: data.search,\n      sort: `${data.orderBy}|${data.order ? 'desc' : 'asc'}`,\n      filter: data.filter,\n      field: lookup.field,\n      ...params\n    }\n\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setData(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const isActive = args => {\n    return (lookup && lookup.field && args === lookup.field ? 'active' : '')\n  }\n\n  const onClickHospitalItem = () => {\n    setFetching(true)\n    setLookup(lookups.hospital_items)\n    setData({...data, header: 'Hospital Item List', filter: {...data.filter, description: {value: ''}, status: {value: ''}}})\n  }\n  const onClickNotCoveredReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_covered)\n    setData({...data, header: 'Not Covered Reasons', filter: {...data.filter, description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickChargingReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_charging)\n    setData({...data, header: 'Reasons For Charging Member', filter: {...data.filter, description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickClaimSource = () => {\n    setFetching(true)\n    setLookup(lookups.claims_source)\n    setData({...data, header: 'Claim Source', filter: {...data.filter, description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickReturnReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_return)\n    setData({...data, header: 'Reimbursement Return Reasons', filter: {...data.filter, description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickRejectReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_reject)\n    setData({...data, header: 'Reimbursement Reject Reasons', filter: {...data.filter, description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickClaimSubType = () => {\n    setFetching(true)\n    setLookup(lookups.claim_sub_type)\n    setData({...data, header: 'Claim Sub-Type', filter: {...data.filter, description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickClaimSubSubType = () => {\n    setFetching(true)\n    setLookup(lookups.claim_sub_sub_type)\n    setData({...data, header: 'Claim Sub Sub-Type', filter: {...data.filter, description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickHandlingTimeKpi = () => {\n    setFetching(true)\n    setLookup(lookups.handling_timi_kpi)\n    setData({ ...data, count: 0, header: 'Handling Time KPI', filter: { ...data.filter, section: { value: '' }, claim_type: { value: '' }, handling_time: { value: '' }, status: { value: '' } } })\n  }\n\n  const handleOnSort = orderBy => e => {\n    setData(p => ({ ...p, orderBy, order: !data.order }))\n    handleOnChange({ sort: `${orderBy}|${data.order ? 'asc' : 'desc'}` })\n  }\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setData(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnChange({ filter: { ...data.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  const validate = () => {\n    if (lookup.field !== 'handling-time-kpi') return !item.description.trim()\n    else return !item.handling_time || item.handling_time === '00:00:00' || !item.section || !item.claim_type\n  }\n\n  const handleOnSaveItem = () => {\n    LoadingService.loading(true)\n    const initialLookup = lookup\n    let _search = {}\n\n    if (!(lookup.field === 'handling-time-kpi')) {\n      _search = {\n        description: item.description,\n        code: item.code\n      }\n    } else {\n      if (showAddItem.mode === 'add') {\n        _search = {\n          section: item.section,\n          claim_type: item.claim_type\n        }\n      } else {\n        const { section, claim_type, status, handling_time } = data.data[index]\n\n        switch (true) {\n          case section === item.section && claim_type === item.claim_type && status !== item.status:\n            _search = {\n              section: item.section,\n              claim_type: item.claim_type,\n              status: item.status\n            }\n            break\n          case section === item.section && claim_type === item.claim_type && handling_time !== item.handling_time:\n            _search = {\n              section: item.section,\n              claim_type: item.claim_type,\n              status: item.handling_time\n            }\n            break\n          default:\n            _search = {\n              section: item.section,\n              claim_type: item.claim_type\n            }\n        }\n      }\n    }\n\n    const _params = {\n      limit: 1,\n      page: 1,\n      search: _search,\n      field: lookup.field\n    }\n    const handleOnOk = () => {\n      setShowAlert(state => ({ ...state, open: false }))\n    }\n\n    if (validate()) {\n      setShowAlert(state =>\n        ({\n          ...state,\n          open: true,\n          message: 'Description details is empty. Please input the description details.',\n          onOk: handleOnOk,\n          okLabel: 'Okay',\n          cancelLabel: ''\n        }))\n      LoadingService.loading(false)\n    } else {\n      ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n        const { results } = res.data\n        if (results.length > 0) {\n          setShowAlert(state =>\n            ({\n              ...state,\n              open: true,\n              message: 'Description details already exists. Please change the description details encoded.',\n              onOk: handleOnOk,\n              okLabel: 'Okay',\n              cancelLabel: ''\n            }))\n        } else {\n          if (showAddItem.mode === 'add') {\n            ClaimsMaintainerServices.storeLookups({ on: lookup.on, data: item, params: { field: lookup.field } }).then(res => {\n              setItem(initialItem)\n              setLookup(false)\n              setLookup(initialLookup)\n              setShowAddItem({...showAddItem, show: false})\n              LoadingService.loading(false)\n            })\n          } else if (showAddItem.mode === 'edit') {\n            ClaimsMaintainerServices.updateLookups({ on: lookup.on, data: item, code: item.code, params: { field: lookup.field } }).then(res => {\n              setItem(initialItem)\n              setLookup(false)\n              setLookup(initialLookup)\n              setShowAddItem({...showAddItem, show: false})\n              LoadingService.loading(false)\n            })\n          }\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  const handleOnEditItem = (field = '', item) => {\n    if (field === 'kpi') {\n      setShowAddItem({...showAddItem, show: true, mode: 'edit'})\n      setItem({\n        section: item.section,\n        claim_type: item.claim_type,\n        handling_time: item.handling_time,\n        code: item._id,\n        status: item.status,\n        active: item.status === 'Active',\n        deactivate: item.status === 'Inactive'\n      })\n    } else {\n      setShowAddItem({...showAddItem, show: true, mode: 'edit'})\n      setItem({\n        description: item.description,\n        code: item.code,\n        status: item.status,\n        active: item.status === 'Active',\n        deactivate: item.status === 'Inactive'\n      })\n    }\n  }\n\n  const handleOnCancelItem = () => {\n    if (item.description || item.section || item.claim_type || item.handling_time) {\n      setShowAlert(state =>\n        ({\n          ...state,\n          open: true,\n          message: 'Are you sure you want to discard your changes?',\n          onOk: () => {\n            setShowAlert(alert => ({...alert, open: false}))\n            setShowAddItem(show => ({...show, show: false}))\n            setItem(item => ({...item, description: '', section: '', claim_type: '', handling_time: ''}))\n          },\n          okLabel: 'Yes',\n          cancelLabel: 'No'\n        }))\n    } else {\n      setShowAddItem({...showAddItem, show: false})\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['button-parent']}>\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='hospital-item-list' className={`button-positive ${classes[isActive('hospital-item-list')]}`} onClick={onClickHospitalItem} >\n          Hospital Item List\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='not-covered-reason' className={`button-positive ${classes[isActive('covered-reason')]}`} onClick={onClickNotCoveredReason} >\n          Not Covered Reason\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='reason-for-charging' className={`button-positive ${classes[isActive('charging-reason')]}`} onClick={onClickChargingReason} >\n          Reason for Charging Member\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-source' className={`button-positive ${classes[isActive('claims-source')]}`} onClick={onClickClaimSource} >\n          Claim Source\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-source' className={`button-positive ${classes[isActive('handling-time-kpi')]}`} onClick={onClickHandlingTimeKpi} >\n          Handling Time KPI\n        </Button>\n      </div>\n\n      <div className={classes['button-parent']}>\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='reimbursement-return-reason' className={`button-positive ${classes[isActive('return-reason')]}`} onClick={onClickReturnReason} >\n          Reimbursement Return Reason\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='reimbursement-reject-reason' className={`button-positive ${classes[isActive('reject-reason')]}`} onClick={onClickRejectReason} >\n          Reimbursement Reject Reason\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-sub-type' className={`button-positive ${classes[isActive('claims-sub-type')]}`} onClick={onClickClaimSubType} >\n          Claim Sub-Type\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-sub-sub-type' className={`button-positive ${classes[isActive('claims-sub-sub-type')]}`} onClick={onClickClaimSubSubType} >\n          Claim Sub Sub-Type\n        </Button>\n      </div>\n\n      <div className={classes.header}>\n        <div className={classes['header-wrapper']}>\n          <span className={classes['header-text']}> {data.header} </span>\n          <Button disabled={showAddItem.show} variant='contained' color='primary' id='add-item' className='button-positive' onClick={() => setShowAddItem({...showAddItem, show: true, mode: 'add'})} >\n           + Add\n          </Button>\n        </div>\n      </div>\n\n      {showAddItem.show && <div className={classes['add-item-root']}>\n        {!(lookup.field === 'handling-time-kpi') ? (\n          <div className={classes.wrapper}>\n            <span className={classes['header-text']}>\n            Description:\n            </span>\n            <div className={classes['text-wrapper']}>\n              <TextField\n                id={'description-field'}\n                value={item.description}\n                onChange={event => { setItem({...item, description: event.target.value}) }}\n              />\n            </div>\n            <div className={classes['radio-buttons']}>\n              <div className={classes.activate}>\n                Active:\n                <Radio\n                  color='primary'\n                  id={'activate'}\n                  checked={item.active}\n                  onClick={() =>\n                    setItem(\n                      {...item,\n                        status: 'Active',\n                        active: true,\n                        deactivate: false})} />\n              </div>\n              <div className={classes.deactivate}>\n                Deactivate:\n                <Radio\n                  color='primary'\n                  id={'deactivate'}\n                  checked={item.deactivate}\n                  onClick={() =>\n                    setItem(\n                      {...item,\n                        status: 'Inactive',\n                        active: false,\n                        deactivate: true})} />\n              </div>\n            </div>\n            <div className={classes['button-wrapper']}>\n              <Button variant='contained' color='primary' id='add-item' className='button-positive' onClick={handleOnSaveItem} >\n              Save\n              </Button>\n              <Button variant='contained' color='primary' id='add-item' className='button-negative' onClick={handleOnCancelItem} >\n              Cancel\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div className={classes.wrapper}>\n              <span className={classes['header-text']}>\n                Section:\n              </span>\n              <div className={classes['text-wrapper']}>\n                <DropDown\n                  id='section'\n                  items={section}\n                  value={item.section || ''}\n                  onChange={event => setItem(state => ({ ...state, section: event.target.value }))}\n                />\n              </div>\n              <span className={classes['header-text']}>\n                Claim Type:\n              </span>\n              <div className={classes['text-wrapper']}>\n                <DropDown\n                  id='claim-type'\n                  items={claim_types}\n                  value={item.claim_type || ''}\n                  onChange={event => setItem(state => ({ ...state, claim_type: event.target.value }))}\n                />\n              </div>\n              <span className={classes['header-text']}>\n                Handling Time:\n              </span>\n              {/* Trial - feel free to change this time input */}\n              <div className={classes['text-wrapper']}>\n                <TimeField\n                  id={'description-field'}\n                  value={item.handling_time}\n                  input={<TextField TextFieldStyle={{padding: '3.5px'}} />}\n                  showSeconds\n                  onChange={(event, time) => setItem(state => ({ ...state, handling_time: time }))}\n                />\n              </div>\n              <div className={classes['radio-buttons']}>\n                <div className={classes.activate}>\n                  Active:\n                  <Radio\n                    color='primary'\n                    id={'activate'}\n                    checked={item.active}\n                    onClick={() =>\n                      setItem(\n                        {...item,\n                          status: 'Active',\n                          active: true,\n                          deactivate: false})} />\n                </div>\n                <div className={classes.deactivate}>\n                  Deactivate:\n                  <Radio\n                    color='primary'\n                    id={'deactivate'}\n                    checked={item.deactivate}\n                    onClick={() =>\n                      setItem(\n                        {...item,\n                          status: 'Inactive',\n                          active: false,\n                          deactivate: true})} />\n                </div>\n              </div>\n            </div>\n            <div className={classes['button-wrapper-kpi']}>\n              <Button variant='contained' color='primary' id='add-item' className='button-positive' onClick={handleOnSaveItem} >\n                  Save\n              </Button>\n              <Button variant='contained' color='primary' id='add-item' className='button-negative' onClick={handleOnCancelItem} >\n                  Cancel\n              </Button>\n            </div>\n          </div>\n        )\n        }\n      </div>}\n\n      {!showAddItem.show && <div className={classes.table}>\n        <LoadingIndicator loading={fetching}>\n          <Table\n            TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <React.Fragment>\n                <TableRow>\n                  {!(lookup.field === 'handling-time-kpi') ? columns.map(headCell => (\n                    <TableCell key={headCell.sortField} id={`sort-${headCell.id}`}>\n                      <TableSortLabel\n                        active={data.orderBy === headCell.sortField}\n                        direction={data.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort(headCell.sortField)}\n                      >\n                        {headCell.name}\n                      </TableSortLabel>\n                      <TextField\n                        value={data.filter[headCell.sortField].value || ''}\n                        onChange={event => {\n                          const search = event.target.value\n                          setData(p => ({ ...p, filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleColumnFiltering({\n                                field: headCell.sortField,\n                                value: search,\n                                match: headCell.match\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </TableCell>\n                  )) : kpi_columns.map(headCell => (\n                    <TableCell key={headCell.sortField} id={`sort-${headCell.id}`}>\n                      <TableSortLabel\n                        active={data.orderBy === headCell.sortField}\n                        direction={data.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort(headCell.sortField)}\n                      >\n                        {headCell.name}\n                      </TableSortLabel>\n                      <TextField\n                        value={data.filter[headCell.sortField].value || ''}\n                        onChange={event => {\n                          const search = event.target.value\n                          setData(p => ({ ...p, filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleColumnFiltering({\n                                field: headCell.sortField,\n                                value: search,\n                                match: headCell.match\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </TableCell>\n                  )) }\n\n                  <TableCell key={'action'} id={`sort-action`} />\n                </TableRow>\n              </React.Fragment>\n            }\n            body={data && data.data.map((item, index) => (\n              !(lookup.field === 'handling-time-kpi') ? (\n                <TableRow key={index}>\n                  <TableCell id={`item-description-${index}`}>{item.description}</TableCell>\n                  <TableCell id={`item-status-${index}`}>{item.status}</TableCell>\n                  <TableCell align={'center'}>\n                    <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`} onClick={() => handleOnEditItem('desc', item)} >\n                  Edit\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ) : (\n                <TableRow key={index}>\n                  <TableCell id={`item-section-${index}`}>{item.section}</TableCell>\n                  <TableCell id={`item-claim_type-${index}`}>{item.claim_type}</TableCell>\n                  <TableCell id={`item-handling_time-${index}`}>{item.handling_time_formatted}</TableCell>\n                  <TableCell id={`item-status-${index}`}>{item.status}</TableCell>\n                  <TableCell align={'center'}>\n                    <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`} onClick={() => {\n                      handleOnEditItem('kpi', item)\n                      setindex(index)\n                    }} >\n                  Edit\n                    </Typography>\n                  </TableCell>\n                </TableRow>)\n\n            ))}\n            count={data && data.count}\n            page={data && data.page}\n            limit={data && data.limit}\n            rowsPerPageOptions={[10, 15, 20]}\n            onChange={handleOnChange}\n          />\n        </LoadingIndicator>\n      </div>}\n      <Alert\n        open={showAlert.open}\n        message={showAlert.message}\n        okLabel={showAlert.okLabel}\n        cancelLabel={showAlert.cancelLabel}\n        onCancel={() => setShowAlert(alert => ({...alert, open: false}))}\n        onOk={showAlert.onOk}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\n\n// Pages of Batch Encoder Supervisor\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Pages of Claims Details Encoder Supervisor\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from '../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\n\n// Pages of PR Supervisor\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Pages of Claim Manager\nimport Dashboard from '../Components/ClaimsManager/Dashboard/Dashboard'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// ClaimsManager\nimport BatchDetailsPage from '../Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage'\n\n// Maintenance Page\nimport MaintenancePage from '../Components/ClaimsManager/MaintenancePage/MaintenancePage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport ClaimsManagerServices from 'Services/Api/ClaimsManagerServices/ClaimsManagerServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Maintenance',\n    icon: 'tools',\n    to: '/claims/maintenance'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  },\n  maintenance: {\n    text: 'Claims Maintenance',\n    to: '/claims/maintenance'\n  },\n  submittedSpecificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}/submitted`\n  },\n  view: {\n    text: 'View'\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst prManagerPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    close: true\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } }\n  }\n}\n\nconst reviewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: {\n      visible: true,\n      enabled: true\n    },\n    letter_of_advice: {\n      visible: true,\n      enabled: true\n    }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nconst viewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n      <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n\n      {/* PR Supervisor Pages */}\n      <Route\n        path='/payment-request/:bundle_number/submitted'\n        exact\n        render={props => <SubmittedPaymentRequestPage isManager {...props} />}\n      />\n      <Route\n        path='/payment-request/:bundle_number/submitted/:batch_number'\n        exact\n        render={props => (\n          <BatchDetailsPage ApiService={ClaimsManagerServices} UserManagementApi={UserManagementServices} {...props} />\n        )}\n      />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n\n      {/* Routes for Claim Viewer */}\n      <Route\n        path='/payment-request/:bundle_number/submitted/:batch_number/claim/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={[\n              'dashboard',\n              'submittedPaymentRequest',\n              `submittedSpecificPaymentRequest:${props.match.params.bundle_number}`,\n              `specificBatch:${props.match.params.batch_number}`,\n              'claims',\n              `specificClaim:${props.match.params.claim_number}`\n            ]}\n            {...props}\n            isManager\n            permissions={prManagerPermissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={reviewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/view/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={viewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n      {/* End of Routes for Claim Viewer  */}\n\n      <Route path='/claims/maintenance' exact component={MaintenancePage} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","const roles = {\n  BATCH_ENCODER: ['BATCH_ENCODER'],\n  BATCH_ENCODER_SUPERVISOR: ['BATCH_ENCODER_SUPERVISOR'],\n  CLAIMS_DETAILS_ENCODER: ['CLAIMS_ENCODER', 'CLAIMS_DETAILS_ENCODER'],\n  CLAIMS_DETAILS_ENCODER_SUPERVISOR: ['CLAIMS_DETAILS_ENCODER_SUPERVISOR'],\n  CLAIMS_ANALYST: ['CLAIMS_ANALYST', 'CLAIMS_VERIFIER'],\n  PR_OFFICER: ['PR_OFFICER'],\n  PR_OFFICER_SUPERVISOR: ['PR_OFFICER_SUPERVISOR'],\n  MEDICAL_CONSULTANT: ['MEDICAL_CONSULTANT'],\n  CLAIMS_RECON: ['CLAIMS_RECON'],\n  CLAIMS_VERIFIER_SUPERVISOR: ['CLAIMS_VERIFIER_SUPERVISOR', 'CLAIMS_SUPERVISOR'],\n  CLAIMS_MANAGER: ['CLAIMS_MANAGER']\n}\n\nconst mapRoles = role => {\n  for (const r in roles) {\n    if (roles[r].includes(role)) return r\n  }\n}\n\nexport { mapRoles, roles }\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: null\n}\nconst bundlesReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BUNDLE_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'ADD_BUNDLE':\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      }\n\n    case 'SET_SELECTED_BUNDLE':\n      return {\n        ...state,\n        selected: action.payload\n      }\n\n    case 'SET_BUNDLE_BATCHES':\n      return {\n        ...state,\n        selected: { ...state.selected, batches: action.payload }\n      }\n\n    case 'ADD_BATCH':\n      const { batches } = state.selected\n      const { items } = batches\n\n      return {\n        ...state,\n        selected: { ...state.selected, batches: { ...batches, items: [action.payload, ...items] } }\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default bundlesReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: {},\n  batchNumber: '',\n  show: false,\n  action: '',\n  saveControl: false\n}\nconst batchReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BATCH_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'SET_BATCH_ACTION':\n      return {\n        ...state,\n        action: action.payload\n      }\n\n    case 'SET_SELECTED_BATCH':\n      return {\n        ...state,\n        selected: { ...state.selected, ...action.payload }\n      }\n\n    case 'SET_SHOW_BATCH_FORM':\n      return {\n        ...state,\n        show: action.payload\n      }\n\n    case 'SET_SAVE_BATCH_CONTROL':\n      return {\n        ...state,\n        saveControl: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default batchReducer\n","import constants from './../../contants'\nimport { dataValue } from 'Pages/Protected/Partner/AffiliationFormEncoder/Pages/HospitalAffiliation/components/Utilities/dataHeader'\n\nconst initialState = {\n  doctor: [],\n  client: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  // value of suggestion first render without calling action (temp) reason: action.for is undefined on first render if there's a selector on component\n  // tried to solved by useEffect but failed since useEffect will render after component's rendered\n  if (!action.for) return initialState\n  // value of suggestion calling action (temp) if not equal to BATCH_ENCODING (when calling an action)\n  else if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: suggestion\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import { combineReducers } from 'redux'\n\nimport bundlesReducer from './bundlesReducer'\nimport batchReducer from './batchReducer'\nimport suggestionsReducer from './suggestionsReducer'\n\nexport default combineReducers({\n  bundles: bundlesReducer,\n  batch: batchReducer,\n  suggestions: suggestionsReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_ClAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_ClAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'SET_ClAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'ADD_ClAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  pro: [],\n  facility: [],\n  doctor: [],\n  anesthesiologist: [],\n  pfDoctor: [],\n  specialization: [],\n  hospitalItem: [],\n  icd10: [],\n  cpt: [],\n  contract: [],\n  given_diagnosis: [],\n  description: [],\n  code: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: suggestion\n        }\n      })()\n\n    case 'RESET_SUGGESTION':\n      return (() => {\n        let { field } = action.payload\n        return {\n          ...state,\n          [field]: [...initialState[field]]\n        }\n      })()\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    // case 'ADD_SUGGESTION_TO_ARRAY':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: [...state[field], { ...icd10 }]\n    //     }\n    //   })()\n\n    // case 'REMOVE_SUGGESTION_TO_ARRAY':\n    //   return (() => {\n    //     const { index, field } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: state[field].filter((i, _index) => index !== _index)\n    //     }\n    //   })()\n\n    // case 'RESET_SUGGESTION_OBJECT':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return { ...state, [field]: initialState[field] }\n    //   })()\n\n    // case 'RESET_SUGGESTION_ARRAY':\n    //   return (() => {\n    //     const { field, index } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: state[field].map((i, _index) => {\n    //         if (index === _index) {\n    //           for (let f in icd10) i[f] = icd10[f]\n    //         }\n    //         return i\n    //       })\n    //     }\n    //   })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst grandTotalReducer = (state = 0, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_GRAND_TOTAL':\n      return 0\n\n    case 'SET_GRAND_TOTAL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default grandTotalReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    tooth_number: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst dentalProcedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_DENTAL_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default dentalProcedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  notes: [],\n  assignee: { id: '', name: '' },\n  note: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_NOTES':\n      return initialValue\n\n    case 'SET_REASSIGN_NOTES':\n      return (() => {\n        return {\n          ...state,\n          note: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport grandTotalReducer from './grandTotalReducer'\nimport dentalProcedureReducer from './dentalProcedureReducer'\nimport reassignReducer from './reassignReducer'\nimport errorReducer from './errorReducer'\n\nexport default combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  grandTotal: grandTotalReducer,\n  error: errorReducer,\n  dentalProcedure: dentalProcedureReducer,\n  reassign: reassignReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_CLAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_CLAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\n// const initialState = {\n//   pro: {\n//     id: [],\n//     name: [],\n//     data: []\n//   },\n//   facility: {\n//     id: [],\n//     name: [],\n//     data: []\n//   },\n//   doctor: {\n//     id: [],\n//     full_name: [],\n//     data: []\n//   },\n//   anesthesiologist: {\n//     id: [],\n//     full_name: [],\n//     data: []\n//   },\n//   pfDoctor: {\n//     id: [],\n//     full_name: [],\n//     data: []\n//   },\n//   specialization: {\n//     description: [],\n//     data: []\n//   },\n//   hospitalItem: {\n//     id: [],\n//     name: [],\n//     data: []\n//   },\n//   icd10: [],\n//   cpt: {\n//     description: [],\n//     code: [],\n//     data: []\n//   },\n//   contract: {\n//     years: []\n//   }\n// }\n\n// const icd10 = {\n//   given_diagnosis: [],\n//   description: [],\n//   code: [],\n//   data: []\n// }\n\nconst initialState = {\n  pro: [],\n  facility: [],\n  doctor: [],\n  anesthesiologist: [],\n  pfDoctor: [],\n  specialization: [],\n  hospitalItem: [],\n  icd10: [],\n  cpt: [],\n  contract: [],\n  given_diagnosis: [],\n  description: [],\n  code: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: suggestion\n        }\n      })()\n\n    case 'RESET_SUGGESTION':\n      return (() => {\n        let { field } = action.payload\n        return {\n          ...state,\n          [field]: [...initialState[field]]\n        }\n      })()\n\n    // case 'SET_SUGGESTION_OBJECT':\n    //   return (() => {\n    //     let { field, suggestion } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: { ...initialState[field], ...suggestion }\n    //     }\n    //   })()\n\n    // case 'SET_SUGGESTION_ON_ARRAY':\n    //   return (() => {\n    //     let { field, index, by, suggestion, data } = action.payload\n\n    //     return {\n    //       ...state,\n    //       [field]: state[field].map((i, _index) => {\n    //         if (index === _index) {\n    //           i = { ...i, [by]: suggestion, data }\n    //         }\n    //         return i\n    //       })\n    //     }\n    //   })()\n\n    // case 'ADD_SUGGESTION_TO_ARRAY':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: [...state[field], { ...icd10 }]\n    //     }\n    //   })()\n\n    // case 'RESET_SUGGESTION_OBJECT':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return { ...state, [field]: initialState[field] }\n    //   })()\n\n    // case 'RESET_SUGGESTION_ARRAY':\n    //   return (() => {\n    //     const { field, index } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: state[field].map((i, _index) => {\n    //         if (index === _index) {\n    //           for (let f in icd10) i[f] = icd10[f]\n    //         }\n    //         return i\n    //       })\n    //     }\n    //   })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst discrepancyReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DISCREPANCY':\n      return initialValue\n\n    case 'SET_DISCREPANCY':\n      return { ...initialValue, ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default discrepancyReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst escalationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ESCALATION_MESSAGES':\n      return initialValue\n\n    case 'ADD_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_ESCALATION_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default escalationReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst inquiryReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_INQUIRY_MESSAGES':\n      return initialValue\n\n    case 'ADD_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_INQUIRY_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default inquiryReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_MESSAGES':\n      return initialValue\n\n    case 'ADD_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import constants from './../../contants'\n\nconst initialValue = true\n\nconst rejectReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_REJECT_CONTROL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default rejectReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: []\n}\n\nconst reconReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_RECON_NOTES':\n      return initialValue\n\n    case 'SET_RECON_NOTES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reconReducer\n","import constants from './../../contants'\n\nconst initialValue = '--'\n\nconst utilizationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_LIMIT_TYPE':\n      return (state = action.payload)\n\n    case 'RESET_LIMIT_TYPE':\n      return initialValue\n\n    default:\n      return state\n  }\n}\n\nexport default utilizationReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  note: ''\n}\n\nconst returnReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_RETURN_NOTES':\n      return initialValue\n\n    case 'SET_RETURN_NOTES':\n      return (() => {\n        return {\n          ...state,\n          note: action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default returnReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport discrepancyReducer from './discrepancyReducer'\nimport errorReducer from './errorReducer'\nimport escalationReducer from './escalationReducer'\nimport inquiryReducer from './inquiryReducer'\nimport reassignReducer from './reassignReducer'\nimport rejectReducer from './rejectReducer'\nimport reconReducer from './reconReducer'\nimport utilizationReducer from './utilizationReducer'\nimport returnReducer from './returnReducer'\n\nconst reducers = combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  discrepancy: discrepancyReducer,\n  error: errorReducer,\n  inquiries: inquiryReducer,\n  escalations: escalationReducer,\n  reassign: reassignReducer,\n  rejectStatus: rejectReducer,\n  recon: reconReducer,\n  title: utilizationReducer,\n  return: returnReducer\n})\n\nexport default reducers\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'CLAIMS') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport BatchEncoding from './BatchEncoding'\nimport ClaimsEncoding from './ClaimsEncoding'\nimport ClaimsAnalysis from './ClaimsAnalysis'\n\nconst reducers = combineReducers({\n  BatchEncoding,\n  ClaimsEncoding,\n  ClaimsAnalysis\n})\n\nexport default reducers\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Routes by role\nimport BatchEncoderRoutes from './Routes/BatchEncoder'\nimport BatchEncoderSupervisorRoutes from './Routes/BatchEncoderSupervisor'\nimport ClaimsDetailsEncoderRoutes from './Routes/ClaimsDetailsEncoder'\nimport ClaimsDetailsEncoderSupervisorRoutes from './Routes/ClaimsDetailsEncoderSupervisor'\nimport ClaimsAnalystRoutes from './Routes/ClaimsAnalyst'\nimport PaymentRequestRoutes from './Routes/PaymentRequest'\nimport PaymentRequestSupervisorRoutes from './Routes/PaymentRequestSupervisor'\nimport MedicalConsultantRoutes from './Routes/MedicalConsultant'\nimport ClaimsReconRoutes from './Routes/ClaimsRecon'\nimport ClaimsVerifierSupervisorRoutes from './Routes/ClaimsVerifierSupervisor'\nimport ClaimsManagerRoutes from './Routes/ClaimsManager'\n\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Constants\nimport { mapRoles } from './Constant/ClaimUsers'\n\n// Store\nimport { Provider } from 'react-redux'\nimport Store from './Store'\n\nexport default function ClaimsModule ({ history }) {\n  const [userRole, setUserRole] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(true)\n\n  React.useEffect(() => {\n    document.title = 'HIMS - Claims'\n    const role = localStorage.getItem('role')\n    setUserRole(mapRoles(role))\n    setIsLoading(false)\n  }, [])\n\n  const batchEncoderLogic = props => {\n    if (localStorage.getItem('from_login')) {\n      BatchEncodingServices.createBundle().then(res => {\n        const { data } = res.data\n        localStorage.removeItem('from_login')\n        history.push(`/bundles/${data}/create`)\n      })\n    } else return <Route path='/' render={() => BatchEncoderRoutes(props)} />\n  }\n\n  return (\n    <Provider store={Store}>\n      {!isLoading && (\n        <Switch>\n          {userRole === 'BATCH_ENCODER' && batchEncoderLogic({ userRole })}\n          {userRole === 'BATCH_ENCODER_SUPERVISOR' && (\n            <Route path='/' render={() => BatchEncoderSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_DETAILS_ENCODER' && (\n            <Route path='/' render={() => ClaimsDetailsEncoderRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_DETAILS_ENCODER_SUPERVISOR' && (\n            <Route path='/' render={() => ClaimsDetailsEncoderSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_ANALYST' && <Route path='/' render={() => ClaimsAnalystRoutes({ userRole })} />}\n\n          {userRole === 'PR_OFFICER' && <Route path='/' render={() => PaymentRequestRoutes({ userRole })} />}\n\n          {userRole === 'PR_OFFICER_SUPERVISOR' && (\n            <Route path='/' render={() => PaymentRequestSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'MEDICAL_CONSULTANT' && <Route path='/' render={() => MedicalConsultantRoutes({ userRole })} />}\n\n          {userRole === 'CLAIMS_RECON' && <Route path='/' render={() => ClaimsReconRoutes({ userRole })} />}\n\n          {userRole === 'CLAIMS_VERIFIER_SUPERVISOR' && (\n            <Route path='/' render={() => ClaimsVerifierSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_MANAGER' && <Route path='/' render={() => ClaimsManagerRoutes({ userRole })} />}\n        </Switch>\n      )}\n    </Provider>\n  )\n}\n","import numeral from 'numeral'\nimport moment from 'moment'\n\nconst CurrencyFormatter = value => {\n  return numeral(value).format('0,0.00')\n}\n\nconst UpperWord = sentence => {\n  return sentence.charAt(0).toUpperCase() + sentence.slice(1)\n}\n\nconst DigitFormatter = value => {\n  return numeral(value).format('0,0')\n}\n\nconst DateFormatter = (value, format = 'MM/DD/YYYY') => {\n  const _value = moment(value)\n  return _value.isValid() ? moment(value).format(format) : ''\n}\n\nconst DateFormatterByAbbreviation = (value, format = 'MMM DD, YYYY') => {\n  return moment(value).format(format)\n}\n\nconst DateFormatterFromNow = value => {\n  return moment(value).fromNow()\n}\n\nconst LargeNumberFormatter = value => {\n  return parseFloat(numeral(value).format('0,0.00'))\n}\n\nconst NameFormatter = args => {\n  const { initial, abr } = args\n  const { lastName, firstName, middleName } = args\n  const { last_name, first_name, middle_name } = args\n\n  return {\n    format1: [lastName || last_name, ',', firstName || first_name, middleName || middle_name, initial, abr]\n      .filter(Boolean)\n      .join(' '),\n    format2: [abr, firstName || first_name, middleName || middle_name, lastName || last_name, initial]\n      .filter(Boolean)\n      .join(' ')\n  }\n}\n\nexport {\n  CurrencyFormatter,\n  DigitFormatter,\n  UpperWord,\n  DateFormatter,\n  DateFormatterByAbbreviation,\n  DateFormatterFromNow,\n  LargeNumberFormatter,\n  NameFormatter\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport TextField from '@material-ui/core/TextField'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\nimport classes from './DatePicker2.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\n\nexport default function DatePicker (props) {\n  const {\n    id,\n    label,\n    required,\n    value,\n    format,\n    readOnly,\n    onChange,\n    error,\n    tabindex,\n    noMargin,\n    disableComponents,\n    ...other\n  } = props\n\n  const InputRef = React.useRef()\n  const [focus, setFocus] = React.useState()\n\n  const handleOnClose = () => {\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n    setFocus(false)\n  }\n\n  const handleDateChange = date => {\n    if (typeof onChange === 'function') {\n      onChange(date)\n    }\n    handleOnFocus()\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n              <Paper\n                className={`${classes['text-field']} ${noMargin ? classes['no-margin'] : ''}  ${\n                  error ? classes['has-error'] : focus && classes.focus\n                } box-shadow-field ${disableComponents && classes.disabled}`}\n                onBlur={handleOnBlur}\n                onFocus={handleOnFocus}\n              >\n                <KeyboardDatePicker\n                  InputProps={{\n                    ref: InputRef,\n                    disableUnderline: true\n                  }}\n                  className={classes.input}\n                  value={value}\n                  onClose={handleOnClose}\n                  onPaste={e => console.log(e.target)}\n                  onChange={date => handleDateChange(moment(date))}\n                  allowKeyboardControl\n                  format='MM/DD/YYYY'\n                  placeholder='MM/DD/YYYY'\n                  clearable\n                  {...other}\n                />\n              </Paper>\n            </MuiPickersUtilsProvider>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\n// import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\n\n// Styles\nimport classes from './Table.module.scss'\nimport { TableCell } from '@material-ui/core'\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}))\n\nfunction TablePaginationActions (props) {\n  const classes = useStyles1()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label='first page'>\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label='previous page'>\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}\n\nexport default function CustomTable ({\n  id = '',\n  TableContainerProps,\n  TableProps,\n  head,\n  body,\n  footer,\n  pagination = true,\n  count = 0,\n  page = 1,\n  limit = 10,\n  rowsPerPageOptions = [5, 10, 25],\n  onChange,\n  footerComponent\n}) {\n  // const emptyRows = limit - Math.min(limit, count - (page - 1) * limit)\n\n  const handleChangePage = (event, newPage) => {\n    onChange({ page: newPage + 1 })\n  }\n\n  const handleChangeRowsPerPage = event => {\n    const value = parseInt(event.target.value)\n    onChange({ limit: value, page: 1 })\n  }\n\n  return (\n    <React.Fragment>\n      <TableContainer component={Paper} className={classes.root} {...TableContainerProps}>\n        <Table id={id} className={classes.table} aria-label='custom pagination table' {...TableProps}>\n          <TableHead>{head}</TableHead>\n          <TableBody>\n            {body}\n\n            {/* {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows, backgroundColor: 'white' }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )} */}\n          </TableBody>\n          <TableFooter>{footer}</TableFooter>\n        </Table>\n      </TableContainer>\n\n      <Table className={classes.footer}>\n        <TableBody>\n          <TableRow>\n            <TableCell className={classes.float}>{footerComponent}</TableCell>\n            {pagination && (\n              <React.Fragment>\n                <TablePagination\n                  rowsPerPageOptions={rowsPerPageOptions}\n                  count={count}\n                  rowsPerPage={limit}\n                  page={page - 1}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </React.Fragment>\n            )}\n          </TableRow>\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function Alert (props) {\n  const defaultFunction = () => {}\n  const {\n    message,\n    open = false,\n    cancelLabel,\n    okLabel,\n    onOk = defaultFunction,\n    onCancel = defaultFunction,\n    onClose = defaultFunction\n  } = props\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>{message}</DialogTitle>\n        <DialogActions>\n          {cancelLabel && (\n            <Button\n              id='alert-dialog-cancel'\n              onClick={onCancel}\n              variant='contained'\n              color='primary'\n              className='button-negative'\n            >\n              {cancelLabel}\n            </Button>\n          )}\n\n          {okLabel && (\n            <Button\n              id='alert-dialog-ok'\n              onClick={onOk}\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              autoFocus\n            >\n              {okLabel}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\n// CSS Classes\nimport classes from './DashboardTileComponent.module.scss'\n\n/**\n * Create dashboard tile component\n *\n * @param children child components\n * @param count count value to be displayed; keys: color, value\n * @param header tile header label; keys: color, value\n * @param title title string\n * @param viewList view list\n * @param onFilterChange change filter handler\n * @param isFilterShown flag for showing filter\n */\nconst DashboardTileComponent = ({\n  children,\n  count,\n  header,\n  title,\n  viewList,\n  actionHeader = null,\n  onFilterChange,\n  isFilterShown = true,\n  id\n}) => {\n  const [filter, setFilter] = React.useState('this-week')\n  const handleFilterChange = event => {\n    setFilter(event.target.value)\n    if (typeof onFilterChange === 'function') onFilterChange(event.target.value)\n  }\n\n  return (\n    <Paper className={classes.root} id={id}>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          {header && (\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${header.color}`}>\n                {header.value}\n              </Typography>\n            </div>\n          )}\n\n          <div className={classes['first-row']}>\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${count.color}`} id={count.id}>\n                {count.value || 0}\n              </Typography>\n            </div>\n            {isFilterShown && (\n              <div className={classes.filter}>\n                <span>\n                  <FormControl>\n                    <Select\n                      className={classes['select']}\n                      value={filter}\n                      onChange={handleFilterChange}\n                      id={`${id}-filter`}\n                    >\n                      <MenuItem value='today' id={`${id}-today`}>\n                        <Typography className={classes.input}>Today</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-week' id={`${id}-this-week`} selected>\n                        <Typography className={classes.input}>This Week</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-month' id={`${id}-this-month`}>\n                        <Typography className={classes.input}>This Month</Typography>\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className={classes['second-row']}>\n            <div className={classes.title}>\n              <Typography variant='subtitle2'>{title}</Typography>\n            </div>\n            <div className={classes.action}>{actionHeader || ''}</div>\n          </div>\n        </div>\n\n        <div className={classes.list}>\n          {React.Children.map(children, child => {\n            return child\n          })}\n        </div>\n\n        <div className={classes.action}>{viewList || ''}</div>\n      </div>\n    </Paper>\n  )\n}\n\nDashboardTileComponent.displayName = 'DashboardTileComponent'\n\nexport default DashboardTileComponent\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './TextFieldCurrency.module.scss'\nexport default function TextFieldCurrency (props) {\n  const { label = '', required, currency = true, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {CurrencyFormatter(other.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                thousandSeparator\n                decimalScale={2}\n                allowEmptyFormatting\n                fixedDecimalScale\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { floatValue } = values\n                  return floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n                onBlur={() => setFocus(false)}\n                // {...other}\n              />\n              {currency && (\n                <div className={classes.currency}>\n                  <Typography variant='subtitle2' className={classes.label}>\n                    PHP\n                  </Typography>\n                </div>\n              )}\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__2LrBe\",\"teeth\":\"style_teeth__2oVTW\",\"flip-x\":\"style_flip-x__1PGnc\",\"flip-y\":\"style_flip-y__33IP9\",\"crown\":\"style_crown__1599k\",\"gums\":\"style_gums__11FhV\",\"extracted\":\"style_extracted__3PnGn\",\"filled\":\"style_filled__1lsjD\",\"other-details\":\"style_other-details__NUZKH\",\"circle\":\"style_circle__15989\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark\n      },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}))\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color='inherit' variant='subtitle1'>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant='h6' id='tableTitle'>\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title='Delete'>\n            <IconButton aria-label='delete'>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title='Filter list'>\n            <IconButton aria-label='filter list'>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  analystTable: {\n    minWidth: 650\n  },\n  tableWrapper: {\n    overflowX: 'hidden'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}))\n\nexport default function EnhancedTable (props) {\n  const {\n    headCells,\n    children,\n    handleRequestSort,\n    handleSelectAllClick,\n    order,\n    orderBy,\n    pagination,\n    checkAll,\n    sorter,\n    size,\n    indeterminate,\n    checked,\n    checkboxColor,\n    analyst,\n    allowCheck = true,\n    allowCheckDisabled = false,\n    selectStatus = false\n  } = props\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={`${analyst ? classes.analystTable : classes.table}`}\n            aria-labelledby='tableTitle'\n            size={size}\n          >\n            <TableHead>\n              <TableRow>\n                {selectStatus\n                  ? checkAll && (\n                    <TableCell padding='checkbox'>\n                      {allowCheck ? (\n                        <Checkbox\n                          disabled={allowCheckDisabled}\n                          indeterminate={indeterminate}\n                          checked={checked}\n                          onChange={handleSelectAllClick}\n                          color={checkboxColor}\n                        />\n                      ) : null}\n                    </TableCell>\n                  )\n                  : null}\n\n                {headCells.map(headCell => (\n                  <TableCell\n                    key={headCell.id}\n                    align={headCell.center ? 'center' : headCell.numeric ? 'right' : 'left'}\n                    padding={headCell.disablePadding ? 'none' : 'default'}\n                    sortDirection={orderBy === headCell.id ? order : false}\n                    width={headCell.width}\n                    id={headCell.id}\n                  >\n                    {sorter ? (\n                      <TableSortLabel\n                        active={orderBy === headCell.id}\n                        direction={order}\n                        onClick={event => handleRequestSort(event, headCell.id)}\n                      >\n                        {headCell.label}\n                        {orderBy === headCell.id ? (\n                          <span className={classes.visuallyHidden}>\n                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                          </span>\n                        ) : null}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            {children}\n          </Table>\n        </div>\n        {pagination && <TablePagination component='div' {...pagination} />}\n      </Paper>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DashboardTileComponent_root__3ZFup\",\"wrapper\":\"DashboardTileComponent_wrapper__1hVRB\",\"header\":\"DashboardTileComponent_header__2_IQZ\",\"input\":\"DashboardTileComponent_input__sFY_A\",\"first-row\":\"DashboardTileComponent_first-row__KbzvW\",\"count\":\"DashboardTileComponent_count__NJO1q\",\"filter\":\"DashboardTileComponent_filter__3FsXI\",\"second-row\":\"DashboardTileComponent_second-row__1xXpk\",\"title\":\"DashboardTileComponent_title__1vnM-\",\"list\":\"DashboardTileComponent_list__38Z1j\",\"action\":\"DashboardTileComponent_action__2L_x5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Table_root__1yDG4\",\"loader\":\"Table_loader__jTLoL\",\"footer\":\"Table_footer__3Si1n\",\"float\":\"Table_float__3dNhj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker2_root__1xO2P\",\"label\":\"DatePicker2_label__2TSn5\",\"wrapper\":\"DatePicker2_wrapper__1Zm8_\",\"read-only-value\":\"DatePicker2_read-only-value__2H1Jw\",\"text-field\":\"DatePicker2_text-field__a4Jqy\",\"no-margin\":\"DatePicker2_no-margin__2hfWg\",\"input\":\"DatePicker2_input__1BmqV\",\"date-button\":\"DatePicker2_date-button__3AEOq\",\"focus\":\"DatePicker2_focus__3d53X\",\"has-error\":\"DatePicker2_has-error__2wab-\",\"disabled\":\"DatePicker2_disabled__hHKql\",\"error\":\"DatePicker2_error__3f2g3\",\"date\":\"DatePicker2_date__3D12q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldCurrency_root__fkWBS\",\"label\":\"TextFieldCurrency_label__3VB-Y\",\"wrapper\":\"TextFieldCurrency_wrapper__2DwLz\",\"read-only-value\":\"TextFieldCurrency_read-only-value__3klW0\",\"text-field\":\"TextFieldCurrency_text-field__2ZFkS\",\"input\":\"TextFieldCurrency_input__3v0Q_\",\"currency\":\"TextFieldCurrency_currency__20Xbk\",\"focus\":\"TextFieldCurrency_focus__3OqZJ\",\"has-error\":\"TextFieldCurrency_has-error__fUhVi\",\"error\":\"TextFieldCurrency_error__3bHzZ\"};","export const dataheader = [\n  { name: 'Full Name', prop: 'cName', newType: true },\n  { name: 'Designation', prop: 'cDesignation' },\n  { name: 'Department', prop: 'cDepartment' },\n  { name: 'Email Address', prop: 'cEmail' },\n  { name: 'Contact Number', prop: 'cNumber' }\n]\n\nexport const dataValue = [\n  {\n    affiliateGroup: 'Tann'\n  },\n  {\n    affiliateGroup: 'Tann'\n  },\n  {\n    affiliateGroup: 'Tann'\n  },\n  {\n    affiliateGroup: 'Tann'\n  },\n  {\n    affiliateGroup: 'Tann'\n  },\n  {\n    affiliateGroup: 'Tann'\n  }\n]\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoadingIndicator_root__1QWbJ\",\"loading\":\"LoadingIndicator_loading__3Nv8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__8Tg0R\",\"header-container\":\"ViewList_header-container__2ebNU\",\"header\":\"ViewList_header__1yXdi\",\"title\":\"ViewList_title__2CYeW\",\"content\":\"ViewList_content__boknL\",\"search\":\"ViewList_search__2dgTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TaskTrayComponent_root__31ufL\",\"title\":\"TaskTrayComponent_title__2hrpU\",\"wrapper\":\"TaskTrayComponent_wrapper__1iTYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TicketListComponent_root__aFbrR\",\"title\":\"TicketListComponent_title__1ySxt\",\"wrapper\":\"TicketListComponent_wrapper__19DvO\",\"content\":\"TicketListComponent_content__2qWWX\",\"header\":\"TicketListComponent_header__1OiZt\",\"input\":\"TicketListComponent_input__1VLul\",\"count\":\"TicketListComponent_count__3DIoE\",\"filter\":\"TicketListComponent_filter__1CeKK\",\"list\":\"TicketListComponent_list__314I6\",\"action\":\"TicketListComponent_action__Ufizk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__oAI_u\",\"tiles\":\"Dashboard_tiles__2syUb\",\"task-tray\":\"Dashboard_task-tray__XT4CQ\",\"list-item\":\"Dashboard_list-item__12cH_\",\"details\":\"Dashboard_details__KoE3I\",\"detail-item\":\"Dashboard_detail-item__1IcO1\",\"label\":\"Dashboard_label__27GN_\",\"content\":\"Dashboard_content__1bf_x\",\"action\":\"Dashboard_action__3rzPy\",\"ticket-list\":\"Dashboard_ticket-list__2n3Wk\",\"completed_task\":\"Dashboard_completed_task__1hbob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete2_root__11iKj\",\"label\":\"AutoComplete2_label__3pWjU\",\"wrapper\":\"AutoComplete2_wrapper__126-b\",\"read-only-value\":\"AutoComplete2_read-only-value__CcS5n\",\"autocomplete-field\":\"AutoComplete2_autocomplete-field__3jz9Q\",\"form-control\":\"AutoComplete2_form-control__1SPaQ\",\"input\":\"AutoComplete2_input__1qyu3\",\"suggestions\":\"AutoComplete2_suggestions__33g20\",\"hint\":\"AutoComplete2_hint__1Dtzi\",\"focus\":\"AutoComplete2_focus__2pS9H\",\"has-error\":\"AutoComplete2_has-error__lIYZv\",\"error\":\"AutoComplete2_error__xx6tZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldNumber_root__ZJK7b\",\"label\":\"TextFieldNumber_label__3x30X\",\"wrapper\":\"TextFieldNumber_wrapper__26xqZ\",\"read-only-value\":\"TextFieldNumber_read-only-value__37dIc\",\"text-field\":\"TextFieldNumber_text-field__2-te1\",\"input\":\"TextFieldNumber_input__2aj-i\",\"focus\":\"TextFieldNumber_focus__1VUVD\",\"has-error\":\"TextFieldNumber_has-error__2Z7EW\",\"error\":\"TextFieldNumber_error__1YPiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BundleDetails_root__1kDZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchList_root__1b5fa\",\"buttonWrapper\":\"BatchList_buttonWrapper__NCrl5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DropDown_root__1k5bx\",\"label\":\"DropDown_label__nY7ih\",\"wrapper\":\"DropDown_wrapper__3QKA8\",\"read-only-value\":\"DropDown_read-only-value__kiJtQ\",\"select-container\":\"DropDown_select-container__cdS_q\",\"select\":\"DropDown_select__3X8Jg\",\"input\":\"DropDown_input__2BzGr\",\"focus\":\"DropDown_focus__9njFf\",\"has-error\":\"DropDown_has-error__1knu_\",\"disabled\":\"DropDown_disabled__NMExl\",\"error\":\"DropDown_error__21XnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchForm_root__1Rotq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"BundlePage_header__14ooW\",\"title\":\"BundlePage_title__1Lc1W\",\"root\":\"BundlePage_root__a3kNL\",\"list-header\":\"BundlePage_list-header__1bSSF\",\"actions\":\"BundlePage_actions__3D_Z5\",\"bundle-details\":\"BundlePage_bundle-details__2awUE\",\"batch-list\":\"BundlePage_batch-list__3fbdk\",\"table-container\":\"BundlePage_table-container__4YbDV\",\"buttonWrapper\":\"BundlePage_buttonWrapper__y7DXv\",\"delete-button\":\"BundlePage_delete-button__2Bc0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NewBundlePage_root__30-wL\",\"upload-container\":\"NewBundlePage_upload-container__1tAyb\",\"label\":\"NewBundlePage_label__tShUk\",\"form\":\"NewBundlePage_form__2WWBk\",\"inputs\":\"NewBundlePage_inputs__1PsuR\",\"input\":\"NewBundlePage_input__l22M7\",\"actions\":\"NewBundlePage_actions__1XH58\",\"save\":\"NewBundlePage_save__I7VG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadSpace_root__3I1-s\",\"dragged\":\"UploadSpace_dragged__1DiLS\",\"container\":\"UploadSpace_container__38f8b\",\"clickable\":\"UploadSpace_clickable__20X37\",\"icon\":\"UploadSpace_icon__13iY0\",\"label\":\"UploadSpace_label__bx5xk\",\"warning\":\"UploadSpace_warning__2UISF\",\"progress-container\":\"UploadSpace_progress-container__2XgEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DynamicTable_root__3YBZd\",\"file-name-container\":\"DynamicTable_file-name-container__l4skU\",\"file-name\":\"DynamicTable_file-name__I3JZH\",\"icon\":\"DynamicTable_icon__384D9\",\"table\":\"DynamicTable_table__IETmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DataPairs_root__3KG2O\",\"table\":\"DataPairs_table__1nH2P\",\"header\":\"DataPairs_header__Bkti-\",\"pair\":\"DataPairs_pair__2QYar\",\"source\":\"DataPairs_source__HI-Vj\",\"target\":\"DataPairs_target__Eu-V-\",\"action\":\"DataPairs_action__2HV-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FieldMapper_root__3_tUQ\",\"section\":\"FieldMapper_section__3oEw5\",\"groups\":\"FieldMapper_groups__2HNYq\",\"input\":\"FieldMapper_input__2Mszl\",\"field\":\"FieldMapper_field__2nwpO\",\"label\":\"FieldMapper_label__1skyK\",\"table\":\"FieldMapper_table__2XzRc\",\"dialog\":\"FieldMapper_dialog__3aDtJ\",\"header-container\":\"FieldMapper_header-container__2JtIE\",\"header\":\"FieldMapper_header__QCFUW\",\"title\":\"FieldMapper_title__3E3Bf\",\"content\":\"FieldMapper_content__b3Uqj\",\"footer\":\"FieldMapper_footer__3NYKX\",\"action\":\"FieldMapper_action__2Ci4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadSoaPage_root__1JzXF\",\"table\":\"UploadSoaPage_table__3q8r-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsUtilLedgerReport_root__2f7j7\",\"header\":\"ClaimsUtilLedgerReport_header__3SkBF\",\"typo\":\"ClaimsUtilLedgerReport_typo__2Javr\",\"disabled\":\"ClaimsUtilLedgerReport_disabled__z8zbA\",\"content\":\"ClaimsUtilLedgerReport_content__1W3eV\",\"filter\":\"ClaimsUtilLedgerReport_filter__3QHK8\",\"input\":\"ClaimsUtilLedgerReport_input__W6YU-\",\"submit\":\"ClaimsUtilLedgerReport_submit__f-hsB\",\"body\":\"ClaimsUtilLedgerReport_body__3G83I\",\"table\":\"ClaimsUtilLedgerReport_table__3TNU0\",\"remarks\":\"ClaimsUtilLedgerReport_remarks__3Z9th\",\"table-cell\":\"ClaimsUtilLedgerReport_table-cell__1plst\",\"table-row\":\"ClaimsUtilLedgerReport_table-row__3Y-tQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete_root__2814h\",\"label\":\"AutoComplete_label__3-iRy\",\"wrapper\":\"AutoComplete_wrapper__2kjw3\",\"read-only-value\":\"AutoComplete_read-only-value__6V5Rg\",\"autocomplete-field\":\"AutoComplete_autocomplete-field__DKxfc\",\"form-control\":\"AutoComplete_form-control__izw0T\",\"input\":\"AutoComplete_input__1okbY\",\"suggestions\":\"AutoComplete_suggestions__3l5Zj\",\"hint\":\"AutoComplete_hint__1J8Zj\",\"focus\":\"AutoComplete_focus__2WKYu\",\"has-error\":\"AutoComplete_has-error__1GzeK\",\"error\":\"AutoComplete_error__QM8Cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3oHfX\",\"total\":\"Footer_total__3_8Xj\",\"total-row\":\"Footer_total-row__1NiIX\",\"total-cell\":\"Footer_total-cell__2ExBc\",\"all-signatories\":\"Footer_all-signatories__AM-GJ\",\"signatories\":\"Footer_signatories__2V122\",\"username\":\"Footer_username__1whot\",\"line-note\":\"Footer_line-note__1BI5X\",\"line-received\":\"Footer_line-received__KlyKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TransmittalReport_root__13RYz\",\"header\":\"TransmittalReport_header__1LohO\",\"typo\":\"TransmittalReport_typo__2QKnI\",\"disabled\":\"TransmittalReport_disabled__3_q8n\",\"content\":\"TransmittalReport_content__3_9vc\",\"filter\":\"TransmittalReport_filter__27k1z\",\"input\":\"TransmittalReport_input__OnyIq\",\"submit\":\"TransmittalReport_submit__VuyPg\",\"search-header\":\"TransmittalReport_search-header__xdK5O\",\"search-header-child\":\"TransmittalReport_search-header-child__10jDH\",\"column\":\"TransmittalReport_column__1dPqY\",\"body\":\"TransmittalReport_body__26j71\",\"table\":\"TransmittalReport_table__1u_Pl\",\"right\":\"TransmittalReport_right__3OOJU\",\"h_amount\":\"TransmittalReport_h_amount__1-OuF\",\"h_ar\":\"TransmittalReport_h_ar__M03I0\",\"h_member\":\"TransmittalReport_h_member__2fOhO\",\"h_date\":\"TransmittalReport_h_date__14PcF\",\"handling\":\"TransmittalReport_handling__1t_0M\",\"table-row\":\"TransmittalReport_table-row__1nh4N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TreasuryTransmittalReport_root__RmXBp\",\"header\":\"TreasuryTransmittalReport_header__3p3Rf\",\"content\":\"TreasuryTransmittalReport_content__1wzny\",\"filter\":\"TreasuryTransmittalReport_filter__2GQoK\",\"input\":\"TreasuryTransmittalReport_input__3hS-d\",\"submit\":\"TreasuryTransmittalReport_submit__FP1Mo\",\"body\":\"TreasuryTransmittalReport_body__HvS7_\",\"table\":\"TreasuryTransmittalReport_table__WES8q\",\"table-row\":\"TreasuryTransmittalReport_table-row__2lid3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PRCheckReport_root__2WSai\",\"header\":\"PRCheckReport_header__3S6zh\",\"content\":\"PRCheckReport_content__3989Q\",\"filter\":\"PRCheckReport_filter__1-XzS\",\"input\":\"PRCheckReport_input__29L_D\",\"submit\":\"PRCheckReport_submit__3VE-t\",\"body\":\"PRCheckReport_body__1ZDmc\",\"table\":\"PRCheckReport_table__2MkNN\",\"table-row\":\"PRCheckReport_table-row__e88aD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Utilization_root__h-zoM\",\"header\":\"Utilization_header__1ivJ-\",\"graph\":\"Utilization_graph__3ZLe9\",\"anual-benefit\":\"Utilization_anual-benefit__1VWqy\",\"line-graph\":\"Utilization_line-graph__1p8lX\",\"container\":\"Utilization_container__4lgbS\",\"line-container\":\"Utilization_line-container__2OYMe\",\"item\":\"Utilization_item__2yhM3\",\"line-details\":\"Utilization_line-details__10WCH\",\"label\":\"Utilization_label__3Mdsb\",\"color\":\"Utilization_color__1LPa-\",\"search\":\"Utilization_search__3pjGe\",\"table\":\"Utilization_table__1yiXM\",\"cell\":\"Utilization_cell__18zs3\",\"icon\":\"Utilization_icon__3oS4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UtilizationReport_root__29RLR\",\"header\":\"UtilizationReport_header__F8Q9y\",\"content\":\"UtilizationReport_content__KyGyi\",\"filter\":\"UtilizationReport_filter__3HaBQ\",\"input\":\"UtilizationReport_input__1NNnv\",\"submit\":\"UtilizationReport_submit__gyDiv\",\"radio-group\":\"UtilizationReport_radio-group__2NtcH\",\"radio-container\":\"UtilizationReport_radio-container___KTHn\",\"body\":\"UtilizationReport_body__pKJ3l\",\"table\":\"UtilizationReport_table__3QcuP\",\"graph-reports\":\"UtilizationReport_graph-reports__35PtI\",\"graph-legend\":\"UtilizationReport_graph-legend__1VYWe\",\"legend-wrapper\":\"UtilizationReport_legend-wrapper__OXtbJ\",\"legend-group\":\"UtilizationReport_legend-group__3M_DG\",\"legend\":\"UtilizationReport_legend__2OmGP\",\"header-report\":\"UtilizationReport_header-report__39ovc\",\"report-primary\":\"UtilizationReport_report-primary__2Vx_L\",\"title\":\"UtilizationReport_title__1jyQx\",\"report-details\":\"UtilizationReport_report-details__1bGh-\",\"graph\":\"UtilizationReport_graph__3KuFD\",\"item\":\"UtilizationReport_item__MLRbC\",\"header-data\":\"UtilizationReport_header-data__o2M-w\",\"mark\":\"UtilizationReport_mark__1xh3X\",\"text\":\"UtilizationReport_text__2mdEi\",\"graph-plot\":\"UtilizationReport_graph-plot__2918H\",\"plot-items\":\"UtilizationReport_plot-items__21fJr\",\"graph-group\":\"UtilizationReport_graph-group__TSW3K\",\"graph-container\":\"UtilizationReport_graph-container__2GdhR\",\"bar-chart-wrapper\":\"UtilizationReport_bar-chart-wrapper__3nonl\",\"bar-chart\":\"UtilizationReport_bar-chart__2qoxe\",\"tooltip\":\"UtilizationReport_tooltip__17mGM\",\"graph-category\":\"UtilizationReport_graph-category__3HxMk\",\"table-row\":\"UtilizationReport_table-row__1LDFs\",\"memberinfo\":\"UtilizationReport_memberinfo__2VG76\",\"memberInfoLabel\":\"UtilizationReport_memberInfoLabel__UAA-3\",\"memberInfoValue\":\"UtilizationReport_memberInfoValue__3qy2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoadingHimsData_root__3WU8t\",\"header\":\"LoadingHimsData_header__3AgKz\",\"typo\":\"LoadingHimsData_typo__2IkSb\",\"disabled\":\"LoadingHimsData_disabled__31oIJ\",\"content\":\"LoadingHimsData_content__ck1LN\",\"filter\":\"LoadingHimsData_filter__1TZ1x\",\"input\":\"LoadingHimsData_input__YHPrG\",\"submit\":\"LoadingHimsData_submit__qqksA\",\"body\":\"LoadingHimsData_body__3yN6l\",\"table\":\"LoadingHimsData_table__11EHs\",\"table-row\":\"LoadingHimsData_table-row__1ltt_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ConfinementReport_root__1uSjB\",\"header\":\"ConfinementReport_header__16HCk\",\"content\":\"ConfinementReport_content__HdGg-\",\"filter\":\"ConfinementReport_filter__24wrc\",\"input\":\"ConfinementReport_input__auX4A\",\"submit\":\"ConfinementReport_submit__1ztRA\",\"body\":\"ConfinementReport_body__16cNS\",\"table\":\"ConfinementReport_table__3HeUY\",\"remarks\":\"ConfinementReport_remarks__15eon\",\"table-cell\":\"ConfinementReport_table-cell__3g-6U\",\"table-row\":\"ConfinementReport_table-row__1Ag6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2NykO\",\"total\":\"Footer_total__106js\",\"total-row\":\"Footer_total-row__2oNxf\",\"total-cell\":\"Footer_total-cell__2mlRs\",\"bundle\":\"Footer_bundle__cygl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestReport_root__1yyHg\",\"header\":\"PaymentRequestReport_header__1hEoh\",\"typo\":\"PaymentRequestReport_typo__lzZPi\",\"disabled\":\"PaymentRequestReport_disabled__7bH-b\",\"content\":\"PaymentRequestReport_content__3Xk-l\",\"filter\":\"PaymentRequestReport_filter__2HiUS\",\"input\":\"PaymentRequestReport_input__1BVX2\",\"submit\":\"PaymentRequestReport_submit__nlqNw\",\"search-header\":\"PaymentRequestReport_search-header__13iAT\",\"search-header-child\":\"PaymentRequestReport_search-header-child__3hgZo\",\"column-label\":\"PaymentRequestReport_column-label__28Gps\",\"column-input\":\"PaymentRequestReport_column-input__zavve\",\"column-label2\":\"PaymentRequestReport_column-label2__38wK2\",\"body\":\"PaymentRequestReport_body__Qp11G\",\"table\":\"PaymentRequestReport_table__25wJP\",\"right\":\"PaymentRequestReport_right__ZClv0\",\"handling\":\"PaymentRequestReport_handling__cz42W\",\"table-row\":\"PaymentRequestReport_table-row__3HEQg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementReport_root__32Om0\",\"header\":\"ReimbursementReport_header__12zwF\",\"typo\":\"ReimbursementReport_typo__36kbp\",\"disabled\":\"ReimbursementReport_disabled__1QoJ6\",\"content\":\"ReimbursementReport_content__mbnn4\",\"filter\":\"ReimbursementReport_filter__1WwW5\",\"input\":\"ReimbursementReport_input__kohO7\",\"submit\":\"ReimbursementReport_submit__1MEua\",\"body\":\"ReimbursementReport_body__2-ZBv\",\"table\":\"ReimbursementReport_table__3HtyM\",\"hidden\":\"ReimbursementReport_hidden__kOzBm\",\"remarks\":\"ReimbursementReport_remarks__3VTZf\",\"table-cell\":\"ReimbursementReport_table-cell__1DP3G\",\"table-row\":\"ReimbursementReport_table-row__3QOOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsSummaryReport_root__1ka3i\",\"header\":\"ClaimsSummaryReport_header__39eJB\",\"field-filter\":\"ClaimsSummaryReport_field-filter__2SIg-\",\"input\":\"ClaimsSummaryReport_input__2fYOe\",\"content\":\"ClaimsSummaryReport_content__2_BF2\",\"filter\":\"ClaimsSummaryReport_filter__id9k7\",\"submit\":\"ClaimsSummaryReport_submit__FEVvZ\",\"body\":\"ClaimsSummaryReport_body__13Jph\",\"table\":\"ClaimsSummaryReport_table__7Ph-I\",\"remarks\":\"ClaimsSummaryReport_remarks__2FkBN\",\"table-cell\":\"ClaimsSummaryReport_table-cell__2Ld-d\",\"footer\":\"ClaimsSummaryReport_footer__1028J\",\"label\":\"ClaimsSummaryReport_label__4CdeZ\",\"received\":\"ClaimsSummaryReport_received__2ZOV5\",\"processed\":\"ClaimsSummaryReport_processed__KMDYx\",\"total\":\"ClaimsSummaryReport_total__Adq-O\",\"table-row\":\"ClaimsSummaryReport_table-row__4aT6I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProductivityPerformaceReport_root__2dUB0\",\"header\":\"ProductivityPerformaceReport_header__2jbkM\",\"field-filter\":\"ProductivityPerformaceReport_field-filter__35OXP\",\"input\":\"ProductivityPerformaceReport_input__2o3yw\",\"content\":\"ProductivityPerformaceReport_content__1p5h0\",\"filter\":\"ProductivityPerformaceReport_filter__3M0No\",\"submit\":\"ProductivityPerformaceReport_submit__2SI5D\",\"body\":\"ProductivityPerformaceReport_body__3eVBy\",\"table\":\"ProductivityPerformaceReport_table__J_Mgn\",\"remarks\":\"ProductivityPerformaceReport_remarks__1pXa6\",\"table-cell\":\"ProductivityPerformaceReport_table-cell__1Q-O3\",\"footer\":\"ProductivityPerformaceReport_footer__2ioMa\",\"received\":\"ProductivityPerformaceReport_received__3SdAJ\",\"processed\":\"ProductivityPerformaceReport_processed__2ECP_\",\"table-row\":\"ProductivityPerformaceReport_table-row__2Wduf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReturnedClaimsReport_root__3miJ9\",\"header\":\"ReturnedClaimsReport_header__2QSE3\",\"typo\":\"ReturnedClaimsReport_typo__3UFCW\",\"disabled\":\"ReturnedClaimsReport_disabled__182Sx\",\"content\":\"ReturnedClaimsReport_content__14MOK\",\"filter\":\"ReturnedClaimsReport_filter__2meIS\",\"input\":\"ReturnedClaimsReport_input__19ygB\",\"submit\":\"ReturnedClaimsReport_submit__1Mgt8\",\"body\":\"ReturnedClaimsReport_body__220AW\",\"table\":\"ReturnedClaimsReport_table__1WY5j\",\"remarks\":\"ReturnedClaimsReport_remarks__10htg\",\"table-cell\":\"ReturnedClaimsReport_table-cell__aqjTo\",\"handling\":\"ReturnedClaimsReport_handling__10Zah\",\"table-row\":\"ReturnedClaimsReport_table-row__3MQ-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PerformanceReport_root__3v0l5\",\"header\":\"PerformanceReport_header__2cAig\",\"field-filter\":\"PerformanceReport_field-filter__1J_xd\",\"input\":\"PerformanceReport_input__qTNUq\",\"content\":\"PerformanceReport_content__1RJ-f\",\"filter\":\"PerformanceReport_filter__3HVDH\",\"submit\":\"PerformanceReport_submit__1sQmg\",\"body\":\"PerformanceReport_body__3mx5Y\",\"table\":\"PerformanceReport_table__1eG1Z\",\"remarks\":\"PerformanceReport_remarks__3BqBk\",\"table-cell\":\"PerformanceReport_table-cell__XM63r\",\"footer\":\"PerformanceReport_footer__1gA8-\",\"count\":\"PerformanceReport_count__2u4Ue\",\"average\":\"PerformanceReport_average__sBrEV\",\"work\":\"PerformanceReport_work__1YnhR\",\"table-row\":\"PerformanceReport_table-row__2u1xW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AgingPartialApprovedReport_root__njXRF\",\"header\":\"AgingPartialApprovedReport_header__33b_k\",\"field-filter\":\"AgingPartialApprovedReport_field-filter__3Z1mh\",\"input\":\"AgingPartialApprovedReport_input__3a_o0\",\"content\":\"AgingPartialApprovedReport_content__1pWFX\",\"filter\":\"AgingPartialApprovedReport_filter__3sVP8\",\"submit\":\"AgingPartialApprovedReport_submit__3D5zL\",\"body\":\"AgingPartialApprovedReport_body__39FC8\",\"table\":\"AgingPartialApprovedReport_table__2EheT\",\"remarks\":\"AgingPartialApprovedReport_remarks__2lfE6\",\"table-cell\":\"AgingPartialApprovedReport_table-cell__dRnX7\",\"footer\":\"AgingPartialApprovedReport_footer__33O-v\",\"label\":\"AgingPartialApprovedReport_label__20iKa\",\"total15Days\":\"AgingPartialApprovedReport_total15Days__8bxW0\",\"total1Week\":\"AgingPartialApprovedReport_total1Week__SaR2_\",\"total1Month\":\"AgingPartialApprovedReport_total1Month__2zxDm\",\"totalAll\":\"AgingPartialApprovedReport_totalAll__1KEoW\",\"table-row\":\"AgingPartialApprovedReport_table-row__TdYPu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AgingReturnClaimReport_root__2ZjYN\",\"header\":\"AgingReturnClaimReport_header__2pYrS\",\"field-filter\":\"AgingReturnClaimReport_field-filter__3bBD5\",\"input\":\"AgingReturnClaimReport_input__yJYHL\",\"content\":\"AgingReturnClaimReport_content__2dDb7\",\"filter\":\"AgingReturnClaimReport_filter__J2zBy\",\"submit\":\"AgingReturnClaimReport_submit__2ONSY\",\"body\":\"AgingReturnClaimReport_body__2v_Du\",\"table\":\"AgingReturnClaimReport_table__3OBJ-\",\"remarks\":\"AgingReturnClaimReport_remarks__1NXHH\",\"table-cell\":\"AgingReturnClaimReport_table-cell__gHjGb\",\"footer\":\"AgingReturnClaimReport_footer__3M3iw\",\"label\":\"AgingReturnClaimReport_label__1bL4K\",\"total15Days\":\"AgingReturnClaimReport_total15Days__3Dg8C\",\"total1Week\":\"AgingReturnClaimReport_total1Week__WroA2\",\"total1Month\":\"AgingReturnClaimReport_total1Month__2Z9vs\",\"totalAll\":\"AgingReturnClaimReport_totalAll__2LXXw\",\"table-row\":\"AgingReturnClaimReport_table-row__2LK4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsBeyond3MonthsReport_root__3VXaM\",\"header\":\"ClaimsBeyond3MonthsReport_header__3lsVk\",\"typo\":\"ClaimsBeyond3MonthsReport_typo__264r4\",\"field-filter\":\"ClaimsBeyond3MonthsReport_field-filter__3_-_O\",\"input\":\"ClaimsBeyond3MonthsReport_input__3rZEj\",\"content\":\"ClaimsBeyond3MonthsReport_content__2QCP_\",\"filter\":\"ClaimsBeyond3MonthsReport_filter__1_UPE\",\"submit\":\"ClaimsBeyond3MonthsReport_submit__3Ixe3\",\"body\":\"ClaimsBeyond3MonthsReport_body__1a198\",\"table\":\"ClaimsBeyond3MonthsReport_table__3XK2P\",\"remarks\":\"ClaimsBeyond3MonthsReport_remarks__2x-XG\",\"table-cell\":\"ClaimsBeyond3MonthsReport_table-cell__2Bcc3\",\"handling\":\"ClaimsBeyond3MonthsReport_handling__1s9wT\",\"table-row\":\"ClaimsBeyond3MonthsReport_table-row__1FRZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementAgingReport_root__3Qevg\",\"header\":\"ReimbursementAgingReport_header__2fR1j\",\"field-filter\":\"ReimbursementAgingReport_field-filter__3omDl\",\"input\":\"ReimbursementAgingReport_input__uImhm\",\"content\":\"ReimbursementAgingReport_content__kcYV4\",\"filter\":\"ReimbursementAgingReport_filter__2vQYS\",\"submit\":\"ReimbursementAgingReport_submit__34jwM\",\"body\":\"ReimbursementAgingReport_body__1Aq7Z\",\"table\":\"ReimbursementAgingReport_table__2m2l3\",\"remarks\":\"ReimbursementAgingReport_remarks__3qa3B\",\"table-cell\":\"ReimbursementAgingReport_table-cell__3QyBG\",\"footer\":\"ReimbursementAgingReport_footer__3RAWu\",\"table-row\":\"ReimbursementAgingReport_table-row__3R0lS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedClaimsReport_root__pZDjc\",\"header\":\"DetailedClaimsReport_header__b7pO0\",\"typo\":\"DetailedClaimsReport_typo__-qeZp\",\"disabled\":\"DetailedClaimsReport_disabled__32hnn\",\"content\":\"DetailedClaimsReport_content__30k_Y\",\"filter\":\"DetailedClaimsReport_filter__3uIPD\",\"input\":\"DetailedClaimsReport_input__3mk2W\",\"submit\":\"DetailedClaimsReport_submit__28yJR\",\"body\":\"DetailedClaimsReport_body__2wNh-\",\"table\":\"DetailedClaimsReport_table__1QGoK\",\"label\":\"DetailedClaimsReport_label__y28Kk\",\"hidden\":\"DetailedClaimsReport_hidden__1H_Ss\",\"remarks\":\"DetailedClaimsReport_remarks__E0xIw\",\"table-cell\":\"DetailedClaimsReport_table-cell__3rPot\",\"handling\":\"DetailedClaimsReport_handling__WipVd\",\"footer\":\"DetailedClaimsReport_footer__10ig-\",\"table-row\":\"DetailedClaimsReport_table-row__TiSmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedPerformanceReport_root__3lPH7\",\"header\":\"DetailedPerformanceReport_header__1FlLI\",\"typo\":\"DetailedPerformanceReport_typo__1SeuS\",\"field-filter\":\"DetailedPerformanceReport_field-filter__3G5pv\",\"input\":\"DetailedPerformanceReport_input__1uLNQ\",\"content\":\"DetailedPerformanceReport_content__2MZx8\",\"filter\":\"DetailedPerformanceReport_filter__2HFAt\",\"submit\":\"DetailedPerformanceReport_submit___T5Hi\",\"body\":\"DetailedPerformanceReport_body__37Z1n\",\"table\":\"DetailedPerformanceReport_table__1DoqJ\",\"remarks\":\"DetailedPerformanceReport_remarks__3bm40\",\"table-cell\":\"DetailedPerformanceReport_table-cell__1X1h4\",\"handling\":\"DetailedPerformanceReport_handling__2bFLc\",\"table-row\":\"DetailedPerformanceReport_table-row__XZFGn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedMonitoringReport_root__LgC3Q\",\"header\":\"DetailedMonitoringReport_header__3LHkv\",\"typo\":\"DetailedMonitoringReport_typo__3spA7\",\"field-filter\":\"DetailedMonitoringReport_field-filter__2ZzJm\",\"input\":\"DetailedMonitoringReport_input__1_QJS\",\"content\":\"DetailedMonitoringReport_content__3_FYj\",\"filter\":\"DetailedMonitoringReport_filter__3eYWk\",\"submit\":\"DetailedMonitoringReport_submit__o8fc7\",\"body\":\"DetailedMonitoringReport_body__2Dq-U\",\"table\":\"DetailedMonitoringReport_table__13f4R\",\"remarks\":\"DetailedMonitoringReport_remarks__3vGUl\",\"table-cell\":\"DetailedMonitoringReport_table-cell__1xIUc\",\"handling\":\"DetailedMonitoringReport_handling__FZhM-\",\"table-row\":\"DetailedMonitoringReport_table-row__1dc8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1q5aB\",\"tiles\":\"Dashboard_tiles__2EVcx\",\"row\":\"Dashboard_row__1-jaR\",\"task-tray\":\"Dashboard_task-tray__1GVCA\",\"list-item\":\"Dashboard_list-item__3bt0O\",\"details\":\"Dashboard_details__vEx2z\",\"detail-item\":\"Dashboard_detail-item__2vLSc\",\"label\":\"Dashboard_label__1wDfJ\",\"content\":\"Dashboard_content__3ngEB\",\"action\":\"Dashboard_action__1YK0T\",\"ticket-list\":\"Dashboard_ticket-list__2qkpP\",\"wrapper\":\"Dashboard_wrapper__30OUo\",\"float\":\"Dashboard_float__vdcOu\",\"completed_task\":\"Dashboard_completed_task__2zPQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__23Ujl\",\"header-container\":\"AssignDialog_header-container__yl2nA\",\"header\":\"AssignDialog_header__3VGqX\",\"title\":\"AssignDialog_title__3z9IT\",\"content\":\"AssignDialog_content__ibboc\",\"input\":\"AssignDialog_input__2xDp_\",\"footer\":\"AssignDialog_footer__26ROV\",\"assign\":\"AssignDialog_assign__b5j_4\",\"to\":\"AssignDialog_to__4uznN\",\"action\":\"AssignDialog_action__3Hmu9\",\"message-content\":\"AssignDialog_message-content__3scNs\",\"message\":\"AssignDialog_message__WFHxL\",\"message-child\":\"AssignDialog_message-child__1-8nz\",\"alert-title\":\"AssignDialog_alert-title__2Werr\",\"footer-action\":\"AssignDialog_footer-action__1CV67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBundlesPage_root__3yhzm\",\"content\":\"CreatedBundlesPage_content__38yCp\",\"first-container\":\"CreatedBundlesPage_first-container__22tad\",\"action\":\"CreatedBundlesPage_action__16R81\",\"search\":\"CreatedBundlesPage_search__1ZBFS\",\"table\":\"CreatedBundlesPage_table__295G-\",\"footer\":\"CreatedBundlesPage_footer__2xe-r\",\"actions\":\"CreatedBundlesPage_actions__3feoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DiscrepancyBase_root__3KSsR\",\"input-wrapper\":\"DiscrepancyBase_input-wrapper__1DMc_\",\"max-width\":\"DiscrepancyBase_max-width__AgMfs\",\"auto-width\":\"DiscrepancyBase_auto-width__3hZoL\",\"discrepancy\":\"DiscrepancyBase_discrepancy__EFJsJ\",\"discrepancy-icon\":\"DiscrepancyBase_discrepancy-icon__278mF\",\"with-margin\":\"DiscrepancyBase_with-margin__3UThX\",\"icon\":\"DiscrepancyBase_icon__3BUJ7\",\"display-hidden\":\"DiscrepancyBase_display-hidden__2uBK6\",\"display-none\":\"DiscrepancyBase_display-none__3au4S\",\"message\":\"DiscrepancyBase_message__10P-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberLookup_root__3O8kK\",\"search\":\"ClientMemberLookup_search__2Crg2\",\"table\":\"ClientMemberLookup_table__vUzoY\",\"input\":\"ClientMemberLookup_input__1zsR_\",\"selected\":\"ClientMemberLookup_selected__25J7P\",\"default-override\":\"ClientMemberLookup_default-override__2M4nX\",\"footer\":\"ClientMemberLookup_footer__1TxMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberModal_root__nf2t4\",\"header-container\":\"ClientMemberModal_header-container__2TpBd\",\"header\":\"ClientMemberModal_header__3jFfv\",\"title\":\"ClientMemberModal_title__aQLcu\",\"content\":\"ClientMemberModal_content__1ZzDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BaseDetails_root__1sXMB\",\"wrapper\":\"BaseDetails_wrapper__36CBG\",\"groups\":\"BaseDetails_groups__3iH6M\",\"input\":\"BaseDetails_input__33wlu\",\"search\":\"BaseDetails_search__3HeKm\",\"box-search-button\":\"BaseDetails_box-search-button__31qFK\",\"no-pad\":\"BaseDetails_no-pad__hmdGm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__2UDqG\",\"given-diagnosis\":\"ICDTextField_given-diagnosis__tUggz\",\"header\":\"ICDTextField_header___QvWL\",\"delete\":\"ICDTextField_delete__1QGhl\",\"description\":\"ICDTextField_description__3nYcX\",\"code\":\"ICDTextField_code__3U5AV\",\"primary\":\"ICDTextField_primary__1iHwC\",\"discrepancy\":\"ICDTextField_discrepancy__S1yCX\",\"wrapper\":\"ICDTextField_wrapper__2CKYW\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__NjIhZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1e8te\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__PsY8D\",\"has-error\":\"DiagnosisList_has-error__2xPng\",\"title\":\"DiagnosisList_title__1qdNr\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__2ON5n\",\"error\":\"DiagnosisList_error__1Vbz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expandable\":\"CustomTable_expandable__1imJS\",\"container\":\"CustomTable_container__3quUk\",\"content\":\"CustomTable_content__258N4\",\"open\":\"CustomTable_open__2q7AF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__32M3A\",\"groups\":\"ProcedureForm_groups__dcIQZ\",\"input\":\"ProcedureForm_input__38bS_\",\"description\":\"ProcedureForm_description__2Hdy7\",\"code\":\"ProcedureForm_code__i2i2k\",\"buttons\":\"ProcedureForm_buttons__2CdpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3AdZk\",\"table\":\"ProcedureList_table__10YsE\",\"table-header\":\"ProcedureList_table-header__17a3B\",\"table-description\":\"ProcedureList_table-description__22Tav\",\"add-link\":\"ProcedureList_add-link__Jk8bg\",\"row\":\"ProcedureList_row__1SUZy\",\"align\":\"ProcedureList_align__3E32S\",\"center\":\"ProcedureList_center__3umXK\",\"right\":\"ProcedureList_right__yYRNE\",\"discrepancy\":\"ProcedureList_discrepancy__3nlct\",\"icon-container\":\"ProcedureList_icon-container__-1hA_\",\"table-total\":\"ProcedureList_table-total__a6mY3\",\"caption\":\"ProcedureList_caption__aqG17\",\"amount\":\"ProcedureList_amount__3Wz7S\",\"groups\":\"ProcedureList_groups__3j6lu\",\"input\":\"ProcedureList_input__nZI-i\",\"buttons\":\"ProcedureList_buttons__1cLC0\",\"table-grid\":\"ProcedureList_table-grid__20Uo9\",\"message\":\"ProcedureList_message__2P1i6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__1FWwW\",\"groups\":\"HospitalItemForm_groups__2XyW6\",\"input\":\"HospitalItemForm_input__1y2VP\",\"description\":\"HospitalItemForm_description__1tsvR\",\"code\":\"HospitalItemForm_code__3bAga\",\"buttons\":\"HospitalItemForm_buttons__3Rewh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3P8XU\",\"table\":\"HospitalItemList_table__1_Iw2\",\"table-header\":\"HospitalItemList_table-header__1nWDu\",\"table-description\":\"HospitalItemList_table-description__2RsHb\",\"add-link\":\"HospitalItemList_add-link__Ap2Fd\",\"row\":\"HospitalItemList_row__3Y9w1\",\"align\":\"HospitalItemList_align__3Cquk\",\"center\":\"HospitalItemList_center__2uJ8Q\",\"right\":\"HospitalItemList_right__1YzKx\",\"discrepancy\":\"HospitalItemList_discrepancy__2rt0u\",\"icon-container\":\"HospitalItemList_icon-container__37b7k\",\"table-total\":\"HospitalItemList_table-total__35dxK\",\"caption\":\"HospitalItemList_caption__-jFT8\",\"amount\":\"HospitalItemList_amount__jgs1I\",\"groups\":\"HospitalItemList_groups__1Jxjv\",\"input\":\"HospitalItemList_input__3ysJe\",\"buttons\":\"HospitalItemList_buttons__3zaDd\",\"table-grid\":\"HospitalItemList_table-grid__wBYBH\",\"message\":\"HospitalItemList_message__3E-4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__3B4jc\",\"groups\":\"ProfessionalFeeForm_groups__dlWbX\",\"input\":\"ProfessionalFeeForm_input__333On\",\"buttons\":\"ProfessionalFeeForm_buttons__2lZlR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2Og-R\",\"table\":\"ProfessionalFeeList_table__2NcVa\",\"specialization\":\"ProfessionalFeeList_specialization__11Av7\",\"table-header\":\"ProfessionalFeeList_table-header__2PK3t\",\"table-description\":\"ProfessionalFeeList_table-description__30ZVR\",\"add-link\":\"ProfessionalFeeList_add-link__2AlqJ\",\"row\":\"ProfessionalFeeList_row__1uiD-\",\"align\":\"ProfessionalFeeList_align__3XDND\",\"center\":\"ProfessionalFeeList_center__3xzMO\",\"right\":\"ProfessionalFeeList_right__1_oyw\",\"discrepancy\":\"ProfessionalFeeList_discrepancy__1DP02\",\"icon-container\":\"ProfessionalFeeList_icon-container__1sopO\",\"table-total\":\"ProfessionalFeeList_table-total__bFKvI\",\"caption\":\"ProfessionalFeeList_caption__2uJsv\",\"amount\":\"ProfessionalFeeList_amount__Bwl5O\",\"groups\":\"ProfessionalFeeList_groups__3OH3g\",\"input\":\"ProfessionalFeeList_input__LBwVv\",\"buttons\":\"ProfessionalFeeList_buttons__V3_MP\",\"table-grid\":\"ProfessionalFeeList_table-grid__148wo\",\"message\":\"ProfessionalFeeList_message__2GTKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__3TUHv\",\"left\":\"ClaimFooter_left__2BPxB\",\"center\":\"ClaimFooter_center__2tYE7\",\"right\":\"ClaimFooter_right__31DOI\",\"escalate\":\"ClaimFooter_escalate__2Wg_9\",\"header-container\":\"ClaimFooter_header-container__3MyMe\",\"header\":\"ClaimFooter_header__2h2N5\",\"title\":\"ClaimFooter_title__2HClu\",\"content\":\"ClaimFooter_content__2ZAYv\",\"input\":\"ClaimFooter_input__1T6qD\",\"footer\":\"ClaimFooter_footer__aACcA\",\"assign\":\"ClaimFooter_assign__2fguI\",\"to\":\"ClaimFooter_to__iojTq\",\"action\":\"ClaimFooter_action__3rpDz\",\"reassign\":\"ClaimFooter_reassign__32y-a\",\"return\":\"ClaimFooter_return__1aB5w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DisapprovedLabel_root__2fuHC\",\"input-wrapper\":\"DisapprovedLabel_input-wrapper__3Mg-w\",\"disapproved\":\"DisapprovedLabel_disapproved__2jHnW\",\"icon-container\":\"DisapprovedLabel_icon-container__2AwzY\",\"message\":\"DisapprovedLabel_message__mRFZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldSubmit_root__31Odd\",\"label\":\"TextFieldSubmit_label__1hK2p\",\"wrapper\":\"TextFieldSubmit_wrapper__1VXm5\",\"read-only-value\":\"TextFieldSubmit_read-only-value__3vlhq\",\"text-field\":\"TextFieldSubmit_text-field__M9IqT\",\"submit\":\"TextFieldSubmit_submit__3gRq6\",\"has-error\":\"TextFieldSubmit_has-error__2RVyG\",\"error\":\"TextFieldSubmit_error__1IF87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChatBox_root__CJdTJ\",\"wrapper\":\"ChatBox_wrapper__Udbg_\",\"header\":\"ChatBox_header__1cGwF\",\"title\":\"ChatBox_title__2zeRL\",\"body\":\"ChatBox_body__3cDDA\",\"messages\":\"ChatBox_messages__1p2Ci\",\"split\":\"ChatBox_split__3YuFW\",\"balloon\":\"ChatBox_balloon__2wMJO\",\"mheader\":\"ChatBox_mheader___jqXV\",\"sender\":\"ChatBox_sender__1OlBm\",\"time\":\"ChatBox_time__20VAg\",\"mbody\":\"ChatBox_mbody__34g_9\",\"content\":\"ChatBox_content__2ekaM\",\"receive\":\"ChatBox_receive__1SB9q\",\"me\":\"ChatBox_me__3g5h1\",\"placeholder\":\"ChatBox_placeholder__2r0o4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTabs_root__2VH--\",\"header\":\"CustomTabs_header__3jmhR\",\"item\":\"CustomTabs_item__rKqcK\",\"active\":\"CustomTabs_active__3MzuP\",\"panels\":\"CustomTabs_panels__MhL8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SideBar_root__BfHb8\",\"contract-id\":\"SideBar_contract-id__1i7cP\",\"id\":\"SideBar_id__hD-Fx\",\"plan-types\":\"SideBar_plan-types__22aGd\",\"node\":\"SideBar_node__12eOL\",\"benefit-label\":\"SideBar_benefit-label__355P0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ValueField_root__3IGn7\",\"value\":\"ValueField_value__2tKyn\",\"center\":\"ValueField_center__3Ytb8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FloatingFields_root__24bnx\",\"wrapper\":\"FloatingFields_wrapper__2Pcva\",\"w-30\":\"FloatingFields_w-30__3n_pJ\",\"w-50\":\"FloatingFields_w-50__1n6EK\",\"w-100\":\"FloatingFields_w-100__3NIZO\",\"center\":\"FloatingFields_center__123ob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Benefits_root__bhUTi\",\"wrapper\":\"Benefits_wrapper__3FSOt\",\"left-side\":\"Benefits_left-side__1RHLZ\",\"title\":\"Benefits_title__2Y66j\",\"right-side\":\"Benefits_right-side__2K0vf\",\"header\":\"Benefits_header__3Cy59\",\"table-header\":\"Benefits_table-header__1UT8m\",\"search\":\"Benefits_search__OOfZa\",\"contract\":\"Benefits_contract__3j7Fa\",\"table\":\"Benefits_table__38mZl\",\"hidden\":\"Benefits_hidden__2oBEr\",\"cell\":\"Benefits_cell__12KcA\",\"footer\":\"Benefits_footer__2PXlW\",\"center\":\"Benefits_center__1s61P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Exclusions_root__aIVf_\",\"header\":\"Exclusions_header__2PP5C\",\"body\":\"Exclusions_body__10OEr\",\"search\":\"Exclusions_search__2ex94\",\"plan-types\":\"Exclusions_plan-types__rtSrd\",\"type\":\"Exclusions_type__AJdcD\",\"table\":\"Exclusions_table__3GuIp\",\"hidden\":\"Exclusions_hidden__1fYuW\",\"cell\":\"Exclusions_cell__3huMq\",\"handling\":\"Exclusions_handling__3_HIN\",\"center\":\"Exclusions_center__36WKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PartnerNetwork_root__3pngF\",\"header\":\"PartnerNetwork_header__2joMW\",\"search\":\"PartnerNetwork_search__QRWSW\",\"table\":\"PartnerNetwork_table__id1kf\",\"hidden\":\"PartnerNetwork_hidden__1Wg_f\",\"cell\":\"PartnerNetwork_cell__24Zde\",\"doctors\":\"PartnerNetwork_doctors__3qxwm\",\"header-container\":\"PartnerNetwork_header-container__uNSDQ\",\"title\":\"PartnerNetwork_title__2pC_E\",\"content\":\"PartnerNetwork_content__OC-z4\",\"center\":\"PartnerNetwork_center__VSY8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Contract_root__2TV5c\",\"wrapper\":\"Contract_wrapper__7hk_4\",\"pdf\":\"Contract_pdf__14ff5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"RightPanelTabs_center__2F79-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__1AD2B\",\"header\":\"ClaimsRemarks_header__2JuzE\",\"header-text\":\"ClaimsRemarks_header-text__2hE-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__1S7ZM\",\"first-container\":\"ClaimInPatient_first-container__1hi-9\",\"groups\":\"ClaimInPatient_groups__3GlMb\",\"input\":\"ClaimInPatient_input__D_kUM\",\"child-container\":\"ClaimInPatient_child-container__LtiUL\",\"left-side\":\"ClaimInPatient_left-side__3BSE_\",\"right-side\":\"ClaimInPatient_right-side__7yeR8\",\"tables-container\":\"ClaimInPatient_tables-container__1FSgK\",\"wrapper\":\"ClaimInPatient_wrapper__2Ll5k\",\"table\":\"ClaimInPatient_table__33jlK\",\"table-header\":\"ClaimInPatient_table-header__32cAA\",\"table-description\":\"ClaimInPatient_table-description__LHg-Q\",\"add-link\":\"ClaimInPatient_add-link__2HgjW\",\"row\":\"ClaimInPatient_row__19SQp\",\"align\":\"ClaimInPatient_align__3EmF1\",\"center\":\"ClaimInPatient_center__mwmUx\",\"right\":\"ClaimInPatient_right__2NOPD\",\"table-total\":\"ClaimInPatient_table-total__ADdpw\",\"caption\":\"ClaimInPatient_caption__3GWNc\",\"amount\":\"ClaimInPatient_amount__14BmU\",\"sticky\":\"ClaimInPatient_sticky__1p4_i\",\"grand-total\":\"ClaimInPatient_grand-total__5xeWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__32DbM\",\"first-container\":\"ClaimOutPatientProcedure_first-container__7XqrM\",\"groups\":\"ClaimOutPatientProcedure_groups__2khSB\",\"input\":\"ClaimOutPatientProcedure_input__2wGBp\",\"child-container\":\"ClaimOutPatientProcedure_child-container__3Qm-6\",\"left-side\":\"ClaimOutPatientProcedure_left-side__aiMMr\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2qNzx\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__24TXm\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__1oOih\",\"table\":\"ClaimOutPatientProcedure_table__3gy4g\",\"table-header\":\"ClaimOutPatientProcedure_table-header__1vFDA\",\"table-description\":\"ClaimOutPatientProcedure_table-description__2sVgC\",\"add-link\":\"ClaimOutPatientProcedure_add-link__20WGP\",\"row\":\"ClaimOutPatientProcedure_row__1154i\",\"align\":\"ClaimOutPatientProcedure_align__1-JcK\",\"center\":\"ClaimOutPatientProcedure_center__2LEg6\",\"right\":\"ClaimOutPatientProcedure_right__1b2OO\",\"table-total\":\"ClaimOutPatientProcedure_table-total__25Yuw\",\"caption\":\"ClaimOutPatientProcedure_caption__1-1aH\",\"amount\":\"ClaimOutPatientProcedure_amount__1pVET\",\"sticky\":\"ClaimOutPatientProcedure_sticky__2J6YA\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__2-FT5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1OYw5\",\"first-container\":\"ClaimOutPatientConsultation_first-container__36dTh\",\"groups\":\"ClaimOutPatientConsultation_groups__2FduB\",\"input\":\"ClaimOutPatientConsultation_input__qhYZ3\",\"child-container\":\"ClaimOutPatientConsultation_child-container__1yLGC\",\"left-side\":\"ClaimOutPatientConsultation_left-side__1Q-9R\",\"right-side\":\"ClaimOutPatientConsultation_right-side__ZE8bC\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__1BJ87\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1zN1p\",\"table\":\"ClaimOutPatientConsultation_table__11vlA\",\"table-header\":\"ClaimOutPatientConsultation_table-header__2v7ad\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1oqaA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__3akmi\",\"row\":\"ClaimOutPatientConsultation_row__28nQM\",\"align\":\"ClaimOutPatientConsultation_align__1dHEU\",\"center\":\"ClaimOutPatientConsultation_center__1_QYZ\",\"right\":\"ClaimOutPatientConsultation_right__ZGur7\",\"table-total\":\"ClaimOutPatientConsultation_table-total__po07J\",\"caption\":\"ClaimOutPatientConsultation_caption__3vMTQ\",\"amount\":\"ClaimOutPatientConsultation_amount__1Ev9r\",\"sticky\":\"ClaimOutPatientConsultation_sticky__JCmg6\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__9crdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__3Dhsx\",\"first-container\":\"ClaimEmergency_first-container__o2WbL\",\"groups\":\"ClaimEmergency_groups__1udG1\",\"input\":\"ClaimEmergency_input__2anfv\",\"child-container\":\"ClaimEmergency_child-container__1p4eO\",\"left-side\":\"ClaimEmergency_left-side__36vix\",\"right-side\":\"ClaimEmergency_right-side__3uIlK\",\"tables-container\":\"ClaimEmergency_tables-container__1qiki\",\"wrapper\":\"ClaimEmergency_wrapper__3WqYc\",\"table\":\"ClaimEmergency_table__Jj0aB\",\"table-header\":\"ClaimEmergency_table-header__1i-JE\",\"table-description\":\"ClaimEmergency_table-description__Xz_Ya\",\"add-link\":\"ClaimEmergency_add-link__3k7IP\",\"row\":\"ClaimEmergency_row__1Esd0\",\"align\":\"ClaimEmergency_align__1S8uR\",\"center\":\"ClaimEmergency_center__2CsIC\",\"right\":\"ClaimEmergency_right__2vx76\",\"table-total\":\"ClaimEmergency_table-total__2oM7S\",\"caption\":\"ClaimEmergency_caption__25QSW\",\"amount\":\"ClaimEmergency_amount__tTDY5\",\"sticky\":\"ClaimEmergency_sticky__3o2tq\",\"grand-total\":\"ClaimEmergency_grand-total__2QhZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__1epVL\",\"first-container\":\"ClaimMedicineAllowance_first-container__2ZF-j\",\"groups\":\"ClaimMedicineAllowance_groups__2H4ww\",\"input\":\"ClaimMedicineAllowance_input__8xyct\",\"child-container\":\"ClaimMedicineAllowance_child-container__28G1C\",\"left-side\":\"ClaimMedicineAllowance_left-side__1WUXX\",\"right-side\":\"ClaimMedicineAllowance_right-side__1igyg\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__3dELc\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__9Um0n\",\"table\":\"ClaimMedicineAllowance_table__3EybV\",\"table-header\":\"ClaimMedicineAllowance_table-header__2pBup\",\"table-description\":\"ClaimMedicineAllowance_table-description__1PmDt\",\"add-link\":\"ClaimMedicineAllowance_add-link__1AbYf\",\"row\":\"ClaimMedicineAllowance_row__2WWWY\",\"align\":\"ClaimMedicineAllowance_align__39ocu\",\"center\":\"ClaimMedicineAllowance_center__3EtXe\",\"right\":\"ClaimMedicineAllowance_right__27Jp2\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IsI8\",\"caption\":\"ClaimMedicineAllowance_caption__DMDzf\",\"amount\":\"ClaimMedicineAllowance_amount__1LRtQ\",\"sticky\":\"ClaimMedicineAllowance_sticky__EUuY7\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1JKZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContractRange_root__3nD_-\",\"container\":\"ContractRange_container__1yYoI\",\"focus\":\"ContractRange_focus__209RV\",\"has-error\":\"ContractRange_has-error__26k8I\",\"label\":\"ContractRange_label__16qj0\",\"values\":\"ContractRange_values__1s186\",\"suggestions\":\"ContractRange_suggestions__3mNVu\",\"add-margin\":\"ContractRange_add-margin__36OMI\",\"header\":\"ContractRange_header__2vYoG\",\"values-container\":\"ContractRange_values-container__2mlE7\",\"message\":\"ContractRange_message__1DGJU\",\"list\":\"ContractRange_list__12tdX\",\"item\":\"ContractRange_item__WiBsw\",\"error\":\"ContractRange_error__19pL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalChart_root__2NsEP\",\"title\":\"DentalChart_title__2XddS\",\"container\":\"DentalChart_container__iRz9F\",\"chart\":\"DentalChart_chart__3tLNQ\",\"upper\":\"DentalChart_upper__3L8HX\",\"lower\":\"DentalChart_lower__2M2mJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__256b4\",\"first-container\":\"ClaimDental_first-container__38T7E\",\"groups\":\"ClaimDental_groups__3jvsJ\",\"input\":\"ClaimDental_input__haCWE\",\"contract-range\":\"ClaimDental_contract-range__37ykS\",\"chart\":\"ClaimDental_chart__3-xWm\",\"child-container\":\"ClaimDental_child-container__3mow6\",\"left-side\":\"ClaimDental_left-side__3jave\",\"right-side\":\"ClaimDental_right-side__1FQqB\",\"tables-container\":\"ClaimDental_tables-container__1C3Pu\",\"wrapper\":\"ClaimDental_wrapper__1RMw-\",\"table\":\"ClaimDental_table__1LS70\",\"table-header\":\"ClaimDental_table-header__1b5ix\",\"table-description\":\"ClaimDental_table-description__3_nXw\",\"add-link\":\"ClaimDental_add-link__2HTRl\",\"row\":\"ClaimDental_row__1X_Fq\",\"align\":\"ClaimDental_align__1TfeR\",\"center\":\"ClaimDental_center__2wbY9\",\"right\":\"ClaimDental_right__3UJIj\",\"table-total\":\"ClaimDental_table-total__209ol\",\"caption\":\"ClaimDental_caption__TjFQ_\",\"amount\":\"ClaimDental_amount__2qE7s\",\"sticky\":\"ClaimDental_sticky__1m1JQ\",\"grand-total\":\"ClaimDental_grand-total__3-zy6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__3iC6V\",\"first-container\":\"ClaimAPE_first-container__rfLOL\",\"groups\":\"ClaimAPE_groups___LUKZ\",\"input\":\"ClaimAPE_input__3KeOV\",\"contract-range\":\"ClaimAPE_contract-range__3lIhD\",\"child-container\":\"ClaimAPE_child-container__1cNVx\",\"left-side\":\"ClaimAPE_left-side__3k7Fu\",\"right-side\":\"ClaimAPE_right-side__2yzN-\",\"tables-container\":\"ClaimAPE_tables-container__Q8Qw-\",\"wrapper\":\"ClaimAPE_wrapper__2G6uN\",\"table\":\"ClaimAPE_table__3HkNw\",\"table-header\":\"ClaimAPE_table-header__15MOT\",\"table-description\":\"ClaimAPE_table-description__1mF2U\",\"add-link\":\"ClaimAPE_add-link__1xoUx\",\"row\":\"ClaimAPE_row__3kl-i\",\"align\":\"ClaimAPE_align__3dAFu\",\"center\":\"ClaimAPE_center__3dtFL\",\"right\":\"ClaimAPE_right__15WMJ\",\"table-total\":\"ClaimAPE_table-total__30NF6\",\"caption\":\"ClaimAPE_caption__-xHuO\",\"amount\":\"ClaimAPE_amount__2j9QR\",\"sticky\":\"ClaimAPE_sticky__1awLT\",\"grand-total\":\"ClaimAPE_grand-total__3M-am\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__rZ8IS\",\"first-container\":\"ClaimECU_first-container__2FNj4\",\"groups\":\"ClaimECU_groups__2RmkW\",\"input\":\"ClaimECU_input__1Tnla\",\"contract-range\":\"ClaimECU_contract-range__21rJC\",\"child-container\":\"ClaimECU_child-container__26HT3\",\"left-side\":\"ClaimECU_left-side__3-TzS\",\"right-side\":\"ClaimECU_right-side__11s0l\",\"tables-container\":\"ClaimECU_tables-container__3eYaA\",\"wrapper\":\"ClaimECU_wrapper__h-NDN\",\"table\":\"ClaimECU_table__UgdcY\",\"table-header\":\"ClaimECU_table-header__2u8yv\",\"table-description\":\"ClaimECU_table-description__B5h1x\",\"add-link\":\"ClaimECU_add-link__xzFPx\",\"row\":\"ClaimECU_row__2xFZY\",\"align\":\"ClaimECU_align__3ToIF\",\"center\":\"ClaimECU_center__3XEtE\",\"right\":\"ClaimECU_right__1u8Su\",\"table-total\":\"ClaimECU_table-total__1N-8u\",\"caption\":\"ClaimECU_caption__3WoBZ\",\"amount\":\"ClaimECU_amount__UXVTQ\",\"sticky\":\"ClaimECU_sticky__HXgU3\",\"grand-total\":\"ClaimECU_grand-total__x5-d8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__3o6nU\",\"first-container\":\"ClaimPharmacy_first-container__24DOY\",\"groups\":\"ClaimPharmacy_groups__gN0O5\",\"input\":\"ClaimPharmacy_input__2zV0D\",\"child-container\":\"ClaimPharmacy_child-container__3bxBF\",\"left-side\":\"ClaimPharmacy_left-side__36Ydb\",\"right-side\":\"ClaimPharmacy_right-side__3b9ZU\",\"tables-container\":\"ClaimPharmacy_tables-container__29er7\",\"wrapper\":\"ClaimPharmacy_wrapper__1tYX9\",\"table\":\"ClaimPharmacy_table__sOxO5\",\"table-header\":\"ClaimPharmacy_table-header__vbfpz\",\"table-description\":\"ClaimPharmacy_table-description__1rTw7\",\"add-link\":\"ClaimPharmacy_add-link__1oaJN\",\"row\":\"ClaimPharmacy_row__3U2ex\",\"align\":\"ClaimPharmacy_align__1qqZT\",\"center\":\"ClaimPharmacy_center__KJIk6\",\"right\":\"ClaimPharmacy_right__K6eAn\",\"table-total\":\"ClaimPharmacy_table-total__3IDSI\",\"caption\":\"ClaimPharmacy_caption__2JNG1\",\"amount\":\"ClaimPharmacy_amount__1wFSr\",\"sticky\":\"ClaimPharmacy_sticky__2QcKU\",\"grand-total\":\"ClaimPharmacy_grand-total__28Qkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__It_Uf\",\"first-container\":\"ClaimPPE_first-container__2PDwy\",\"groups\":\"ClaimPPE_groups__3F8T-\",\"input\":\"ClaimPPE_input__3KbyV\",\"contract-range\":\"ClaimPPE_contract-range__21-LF\",\"child-container\":\"ClaimPPE_child-container__19svW\",\"left-side\":\"ClaimPPE_left-side__3EWSi\",\"right-side\":\"ClaimPPE_right-side__Mcre2\",\"tables-container\":\"ClaimPPE_tables-container__3vLX8\",\"wrapper\":\"ClaimPPE_wrapper__2lDkk\",\"table\":\"ClaimPPE_table__1d9ZQ\",\"table-header\":\"ClaimPPE_table-header__2jfWY\",\"table-description\":\"ClaimPPE_table-description__B0pV4\",\"add-link\":\"ClaimPPE_add-link__2TK1j\",\"row\":\"ClaimPPE_row__hPaGI\",\"align\":\"ClaimPPE_align__EakZn\",\"center\":\"ClaimPPE_center__2DSBO\",\"right\":\"ClaimPPE_right__1jInO\",\"table-total\":\"ClaimPPE_table-total__1-SlE\",\"caption\":\"ClaimPPE_caption__RtH_1\",\"amount\":\"ClaimPPE_amount__3GEJt\",\"sticky\":\"ClaimPPE_sticky__3IMMC\",\"grand-total\":\"ClaimPPE_grand-total__2O3kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3aZUF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3n5WF\",\"groups\":\"ClaimMedicalSupplies_groups__1kAYn\",\"input\":\"ClaimMedicalSupplies_input__3w3Na\",\"child-container\":\"ClaimMedicalSupplies_child-container__1qpYg\",\"left-side\":\"ClaimMedicalSupplies_left-side__3fj2z\",\"right-side\":\"ClaimMedicalSupplies_right-side__3Jxo1\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2g1bZ\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__1YB7S\",\"table\":\"ClaimMedicalSupplies_table__39sXK\",\"table-header\":\"ClaimMedicalSupplies_table-header__3dEXc\",\"table-description\":\"ClaimMedicalSupplies_table-description__TGhRl\",\"add-link\":\"ClaimMedicalSupplies_add-link__17TK6\",\"row\":\"ClaimMedicalSupplies_row__2vdFX\",\"align\":\"ClaimMedicalSupplies_align__yK5co\",\"center\":\"ClaimMedicalSupplies_center__12JQw\",\"right\":\"ClaimMedicalSupplies_right__XJJUu\",\"table-total\":\"ClaimMedicalSupplies_table-total__3NnUJ\",\"caption\":\"ClaimMedicalSupplies_caption__2811S\",\"amount\":\"ClaimMedicalSupplies_amount__puMje\",\"sticky\":\"ClaimMedicalSupplies_sticky__2SQjJ\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__Dtrsg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__cFi4C\",\"first-container\":\"ClaimClinicManagement_first-container__z1jWC\",\"groups\":\"ClaimClinicManagement_groups__1Y38E\",\"input\":\"ClaimClinicManagement_input__1xBc_\",\"search\":\"ClaimClinicManagement_search__9MCKU\",\"box-search-button\":\"ClaimClinicManagement_box-search-button__2mHNL\",\"no-pad\":\"ClaimClinicManagement_no-pad__1Uccu\",\"child-container\":\"ClaimClinicManagement_child-container__kVMQD\",\"left-side\":\"ClaimClinicManagement_left-side__2dy65\",\"right-side\":\"ClaimClinicManagement_right-side__FXm_-\",\"tables-container\":\"ClaimClinicManagement_tables-container__2fZlC\",\"wrapper\":\"ClaimClinicManagement_wrapper__CK0dL\",\"table\":\"ClaimClinicManagement_table__9y78F\",\"table-header\":\"ClaimClinicManagement_table-header__CvQ9s\",\"table-description\":\"ClaimClinicManagement_table-description__1K-ma\",\"add-link\":\"ClaimClinicManagement_add-link__E0inx\",\"row\":\"ClaimClinicManagement_row__1ZByz\",\"align\":\"ClaimClinicManagement_align__3Bsjj\",\"center\":\"ClaimClinicManagement_center__1agdC\",\"right\":\"ClaimClinicManagement_right__1n2Y8\",\"table-total\":\"ClaimClinicManagement_table-total__1ka1r\",\"caption\":\"ClaimClinicManagement_caption__1rGus\",\"amount\":\"ClaimClinicManagement_amount__3GbWj\",\"sticky\":\"ClaimClinicManagement_sticky__VwhGL\",\"grand-total\":\"ClaimClinicManagement_grand-total__223ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfo_root__2ZhBR\",\"header-container\":\"ReimbursementInfo_header-container__2Be7O\",\"header\":\"ReimbursementInfo_header__3zAnI\",\"title\":\"ReimbursementInfo_title__1ZCQA\",\"content\":\"ReimbursementInfo_content__1LKaM\",\"basic-info\":\"ReimbursementInfo_basic-info__1pQO5\",\"label\":\"ReimbursementInfo_label__1eWwR\",\"collapsible-cell\":\"ReimbursementInfo_collapsible-cell__2LS9L\",\"container\":\"ReimbursementInfo_container__3j2Tx\",\"show-cell\":\"ReimbursementInfo_show-cell__V330m\",\"cell\":\"ReimbursementInfo_cell__3e4E4\",\"groups\":\"ReimbursementInfo_groups__2b0kL\",\"input\":\"ReimbursementInfo_input__1-9pI\",\"reasons-container\":\"ReimbursementInfo_reasons-container__O8h98\",\"delete\":\"ReimbursementInfo_delete__2NG1u\",\"reasons\":\"ReimbursementInfo_reasons__1Bpgw\",\"add-link\":\"ReimbursementInfo_add-link__3IClX\",\"empty-reasons\":\"ReimbursementInfo_empty-reasons__265UY\",\"footer\":\"ReimbursementInfo_footer__2HTae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadedList_root__1LMgs\",\"header\":\"UploadedList_header__2KeVk\",\"header-text\":\"UploadedList_header-text__2VqnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__3hhrG\",\"first-container\":\"ClaimReimbursement_first-container__38NDs\",\"wrap\":\"ClaimReimbursement_wrap__1ey6r\",\"input\":\"ClaimReimbursement_input__36yRs\",\"child-container\":\"ClaimReimbursement_child-container__1VY-Q\",\"left-side\":\"ClaimReimbursement_left-side__343Le\",\"right-side\":\"ClaimReimbursement_right-side__2CbJR\",\"tables-container\":\"ClaimReimbursement_tables-container__2WwnX\",\"wrapper\":\"ClaimReimbursement_wrapper__1Jn5F\",\"table\":\"ClaimReimbursement_table__ksGL1\",\"table-header\":\"ClaimReimbursement_table-header__1BJ7k\",\"table-description\":\"ClaimReimbursement_table-description__30ZTt\",\"add-link\":\"ClaimReimbursement_add-link__iKc2O\",\"row\":\"ClaimReimbursement_row__1vEel\",\"align\":\"ClaimReimbursement_align__27QCo\",\"center\":\"ClaimReimbursement_center__28QGF\",\"right\":\"ClaimReimbursement_right__RESK7\",\"table-total\":\"ClaimReimbursement_table-total__3V1AF\",\"caption\":\"ClaimReimbursement_caption__38fKN\",\"amount\":\"ClaimReimbursement_amount__1w8eC\",\"sticky\":\"ClaimReimbursement_sticky__2pMEc\",\"grand-total\":\"ClaimReimbursement_grand-total__26LC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Error_root__3MOwq\",\"title\":\"Error_title__2zyaE\",\"message\":\"Error_message__3Qoxb\",\"action-messages\":\"Error_action-messages__1Y6y3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2CKVA\",\"tiles\":\"Dashboard_tiles__1zqWv\",\"task-tray\":\"Dashboard_task-tray__1JXKE\",\"list-item\":\"Dashboard_list-item__330ar\",\"details\":\"Dashboard_details__2yOoR\",\"detail-item\":\"Dashboard_detail-item__222xC\",\"label\":\"Dashboard_label__1pqEl\",\"content\":\"Dashboard_content__2u9m1\",\"action\":\"Dashboard_action__Epa7q\",\"ticket-list\":\"Dashboard_ticket-list__2hY-r\",\"wrapper\":\"Dashboard_wrapper__2R19Z\",\"float\":\"Dashboard_float__1wkpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__QvxEj\",\"groups\":\"BatchDetails_groups__287zx\",\"input\":\"BatchDetails_input__tzzPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__1wK71\",\"title\":\"ClaimListHeader_title__3VPI4\",\"wrapper\":\"ClaimListHeader_wrapper__2or4f\",\"button\":\"ClaimListHeader_button__3Hs-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__dqWZg\",\"default-override\":\"ClaimList_default-override__1mOrj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProviderSchedule_root__3Hb8e\",\"header-container\":\"ProviderSchedule_header-container__1JwiJ\",\"header1\":\"ProviderSchedule_header1__3gDQw\",\"title\":\"ProviderSchedule_title__3sbdz\",\"body\":\"ProviderSchedule_body__1mUiH\",\"content\":\"ProviderSchedule_content__2z-Wg\",\"table\":\"ProviderSchedule_table__1IJDe\",\"groups\":\"ProviderSchedule_groups__2QLV6\",\"partition\":\"ProviderSchedule_partition__1QDjs\",\"action\":\"ProviderSchedule_action__3vB_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__26Wrc\",\"claims-container\":\"BatchPage_claims-container__2G2QW\",\"footer\":\"BatchPage_footer__3Fysl\",\"actions\":\"BatchPage_actions___M6eN\",\"delete-button\":\"BatchPage_delete-button__1fPqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"BaseDetails_groups__sN0KI\",\"input\":\"BaseDetails_input__3fzd_\",\"search\":\"BaseDetails_search__1xIEN\",\"box-search-button\":\"BaseDetails_box-search-button__1prH9\",\"no-pad\":\"BaseDetails_no-pad__2S67i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__hOE-z\",\"header\":\"ICDTextField_header__3AzkP\",\"description\":\"ICDTextField_description__fLJtE\",\"code\":\"ICDTextField_code__snQp0\",\"primary\":\"ICDTextField_primary__1rF7r\",\"actions\":\"ICDTextField_actions__ROI6c\",\"wrapper\":\"ICDTextField_wrapper__2Tl6S\",\"given-diagnosis\":\"ICDTextField_given-diagnosis__1PFMi\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__3GWEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1dpY2\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__1iY52\",\"has-error\":\"DiagnosisList_has-error__3hfPU\",\"title\":\"DiagnosisList_title__qjkfp\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__3tk0Y\",\"error\":\"DiagnosisList_error__2Q9Ah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CptTextField_root__16Cl9\",\"header\":\"CptTextField_header__18VEF\",\"description\":\"CptTextField_description__38J8w\",\"code\":\"CptTextField_code__3zwiV\",\"wrapper\":\"CptTextField_wrapper__14kEU\",\"sub-wrapper\":\"CptTextField_sub-wrapper__3kUzW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__3MFfj\",\"groups\":\"ProcedureForm_groups__33Ssh\",\"input\":\"ProcedureForm_input__1I42d\",\"buttons\":\"ProcedureForm_buttons__3gBiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemTextField_root__3kCkJ\",\"header\":\"HospitalItemTextField_header__1p8vm\",\"description\":\"HospitalItemTextField_description__3dt50\",\"code\":\"HospitalItemTextField_code__37pF3\",\"wrapper\":\"HospitalItemTextField_wrapper__2ejzj\",\"sub-wrapper\":\"HospitalItemTextField_sub-wrapper__1TcFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__2OG0L\",\"groups\":\"HospitalItemForm_groups__3_yeP\",\"input\":\"HospitalItemForm_input__1ZqXE\",\"buttons\":\"HospitalItemForm_buttons__1C7f4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__2ptS9\",\"groups\":\"ProfessionalFeeForm_groups__K8Zz9\",\"input\":\"ProfessionalFeeForm_input__20gH-\",\"buttons\":\"ProfessionalFeeForm_buttons__2JE2y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3v4P_\",\"table\":\"ProcedureList_table__1lDzW\",\"table-header\":\"ProcedureList_table-header__OUZ2f\",\"table-description\":\"ProcedureList_table-description__1woO4\",\"add-link\":\"ProcedureList_add-link__3Y3oZ\",\"row\":\"ProcedureList_row__2-dja\",\"align\":\"ProcedureList_align__qvO_Y\",\"center\":\"ProcedureList_center__3o-L0\",\"right\":\"ProcedureList_right__3krqZ\",\"table-total\":\"ProcedureList_table-total__1VNZY\",\"caption\":\"ProcedureList_caption__164Op\",\"amount\":\"ProcedureList_amount__E-XjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3MjT2\",\"table\":\"HospitalItemList_table__dG_Tf\",\"table-header\":\"HospitalItemList_table-header__2MLsx\",\"table-description\":\"HospitalItemList_table-description__B2u7N\",\"add-link\":\"HospitalItemList_add-link__3rajh\",\"row\":\"HospitalItemList_row__2dICf\",\"align\":\"HospitalItemList_align__1olVn\",\"center\":\"HospitalItemList_center__aS130\",\"right\":\"HospitalItemList_right__2ZVKU\",\"table-total\":\"HospitalItemList_table-total__2NfAE\",\"caption\":\"HospitalItemList_caption__2asKo\",\"amount\":\"HospitalItemList_amount__t79nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2w3dt\",\"table\":\"ProfessionalFeeList_table__10Ygk\",\"table-header\":\"ProfessionalFeeList_table-header__14PMs\",\"table-description\":\"ProfessionalFeeList_table-description__1zGjK\",\"add-link\":\"ProfessionalFeeList_add-link__3_ArR\",\"row\":\"ProfessionalFeeList_row__99ivp\",\"align\":\"ProfessionalFeeList_align__10CgV\",\"center\":\"ProfessionalFeeList_center__5efkN\",\"right\":\"ProfessionalFeeList_right__2qbRI\",\"table-total\":\"ProfessionalFeeList_table-total__3stF4\",\"caption\":\"ProfessionalFeeList_caption__119dY\",\"amount\":\"ProfessionalFeeList_amount__2aSsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__2Ee-X\",\"header\":\"ClaimsRemarks_header__3yH1H\",\"header-text\":\"ClaimsRemarks_header-text__3BhQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__9kPKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__3osD9\",\"first-container\":\"ClaimInPatient_first-container__3t49M\",\"groups\":\"ClaimInPatient_groups__3oIox\",\"input\":\"ClaimInPatient_input__hVAF4\",\"child-container\":\"ClaimInPatient_child-container__2Cq2R\",\"tables-container\":\"ClaimInPatient_tables-container__2oIYc\",\"left-side\":\"ClaimInPatient_left-side__3DTmU\",\"wrapper\":\"ClaimInPatient_wrapper__35AeS\",\"table\":\"ClaimInPatient_table__18wS_\",\"table-header\":\"ClaimInPatient_table-header__EDm4F\",\"table-description\":\"ClaimInPatient_table-description__2dbX9\",\"add-link\":\"ClaimInPatient_add-link__2PqWJ\",\"row\":\"ClaimInPatient_row__2S-um\",\"align\":\"ClaimInPatient_align__-0kRI\",\"center\":\"ClaimInPatient_center__SCdjg\",\"right\":\"ClaimInPatient_right__SWljZ\",\"table-total\":\"ClaimInPatient_table-total__1FFT6\",\"caption\":\"ClaimInPatient_caption__12ndJ\",\"amount\":\"ClaimInPatient_amount__1BJYs\",\"right-side\":\"ClaimInPatient_right-side__16K8Y\",\"sticky\":\"ClaimInPatient_sticky__3RBSE\",\"grand-total\":\"ClaimInPatient_grand-total__27yFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__3Ga7K\",\"first-container\":\"ClaimOutPatientProcedure_first-container__3Bo1i\",\"groups\":\"ClaimOutPatientProcedure_groups__1_PgN\",\"input\":\"ClaimOutPatientProcedure_input__2yb91\",\"child-container\":\"ClaimOutPatientProcedure_child-container__2IJug\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__koGml\",\"left-side\":\"ClaimOutPatientProcedure_left-side__2oLag\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__3yj4V\",\"table\":\"ClaimOutPatientProcedure_table__39AFH\",\"table-header\":\"ClaimOutPatientProcedure_table-header__2_DFL\",\"table-description\":\"ClaimOutPatientProcedure_table-description__22jzE\",\"add-link\":\"ClaimOutPatientProcedure_add-link__2zVd0\",\"row\":\"ClaimOutPatientProcedure_row__3tr7i\",\"align\":\"ClaimOutPatientProcedure_align__3aSS8\",\"center\":\"ClaimOutPatientProcedure_center__26F-I\",\"right\":\"ClaimOutPatientProcedure_right__2TzV6\",\"table-total\":\"ClaimOutPatientProcedure_table-total__2SbHo\",\"caption\":\"ClaimOutPatientProcedure_caption__37F57\",\"amount\":\"ClaimOutPatientProcedure_amount__1nHfc\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2kHXN\",\"sticky\":\"ClaimOutPatientProcedure_sticky__YQpzp\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__3r0fZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1iLTK\",\"first-container\":\"ClaimOutPatientConsultation_first-container__1-5nU\",\"groups\":\"ClaimOutPatientConsultation_groups__2oMDd\",\"input\":\"ClaimOutPatientConsultation_input__19UZR\",\"child-container\":\"ClaimOutPatientConsultation_child-container__aUMUP\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__2mF2h\",\"left-side\":\"ClaimOutPatientConsultation_left-side__19GSs\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1t8lb\",\"table\":\"ClaimOutPatientConsultation_table__37ymv\",\"table-header\":\"ClaimOutPatientConsultation_table-header__1mDNN\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1K6LA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__1kLWg\",\"row\":\"ClaimOutPatientConsultation_row__1QVq1\",\"align\":\"ClaimOutPatientConsultation_align__JzFHT\",\"center\":\"ClaimOutPatientConsultation_center__Kj125\",\"right\":\"ClaimOutPatientConsultation_right__2UzFx\",\"table-total\":\"ClaimOutPatientConsultation_table-total__3Y5uM\",\"caption\":\"ClaimOutPatientConsultation_caption__1fpt6\",\"amount\":\"ClaimOutPatientConsultation_amount__2NcEC\",\"right-side\":\"ClaimOutPatientConsultation_right-side__2G55v\",\"sticky\":\"ClaimOutPatientConsultation_sticky__1p7r8\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__3hH8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__oSnYx\",\"first-container\":\"ClaimEmergency_first-container__3b0DZ\",\"groups\":\"ClaimEmergency_groups__fVn6k\",\"input\":\"ClaimEmergency_input__20Z4V\",\"child-container\":\"ClaimEmergency_child-container__2B7dx\",\"tables-container\":\"ClaimEmergency_tables-container__1SqZm\",\"left-side\":\"ClaimEmergency_left-side__2XQXV\",\"wrapper\":\"ClaimEmergency_wrapper__2dRHq\",\"table\":\"ClaimEmergency_table__2Ye6U\",\"table-header\":\"ClaimEmergency_table-header__XQM6o\",\"table-description\":\"ClaimEmergency_table-description__eEvjz\",\"add-link\":\"ClaimEmergency_add-link__3f1pP\",\"row\":\"ClaimEmergency_row__9kBGW\",\"align\":\"ClaimEmergency_align__2pcQ2\",\"center\":\"ClaimEmergency_center__2EBE3\",\"right\":\"ClaimEmergency_right__3yT5b\",\"table-total\":\"ClaimEmergency_table-total__1Sfid\",\"caption\":\"ClaimEmergency_caption__3PPFO\",\"amount\":\"ClaimEmergency_amount__22h7o\",\"right-side\":\"ClaimEmergency_right-side__1VzuD\",\"sticky\":\"ClaimEmergency_sticky__2nEt5\",\"grand-total\":\"ClaimEmergency_grand-total__1rCNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ToothNumber_root__2xwxL\",\"label\":\"ToothNumber_label__3a7e8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalProcedureForm_root__2Acnv\",\"groups\":\"DentalProcedureForm_groups__2VwcV\",\"input\":\"DentalProcedureForm_input__3fOJ9\",\"buttons\":\"DentalProcedureForm_buttons__1zf4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__2JDL2\",\"first-container\":\"ClaimDental_first-container__1bgJH\",\"groups\":\"ClaimDental_groups__1-ERD\",\"chart\":\"ClaimDental_chart__3Dc9C\",\"input\":\"ClaimDental_input__25h7r\",\"contract-range\":\"ClaimDental_contract-range__3m5nq\",\"child-container\":\"ClaimDental_child-container__3e0an\",\"tables-container\":\"ClaimDental_tables-container__cMXte\",\"left-side\":\"ClaimDental_left-side__1TcV5\",\"wrapper\":\"ClaimDental_wrapper__3ThOl\",\"table\":\"ClaimDental_table__2F5f1\",\"table-header\":\"ClaimDental_table-header__2akCh\",\"table-description\":\"ClaimDental_table-description__216ml\",\"add-link\":\"ClaimDental_add-link__lzfHs\",\"row\":\"ClaimDental_row__3LXFH\",\"align\":\"ClaimDental_align__mJMlm\",\"center\":\"ClaimDental_center__3s7zR\",\"right\":\"ClaimDental_right__1k-F1\",\"table-total\":\"ClaimDental_table-total__3QDdT\",\"caption\":\"ClaimDental_caption__3mlFq\",\"amount\":\"ClaimDental_amount__2ltb-\",\"right-side\":\"ClaimDental_right-side__1TuoJ\",\"sticky\":\"ClaimDental_sticky__2jLb5\",\"grand-total\":\"ClaimDental_grand-total__gc69p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__3tnOB\",\"first-container\":\"ClaimMedicineAllowance_first-container__AHNJn\",\"groups\":\"ClaimMedicineAllowance_groups__2iRok\",\"input\":\"ClaimMedicineAllowance_input__1XM4n\",\"child-container\":\"ClaimMedicineAllowance_child-container__eGvyY\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__9NdEv\",\"left-side\":\"ClaimMedicineAllowance_left-side__3ULwO\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__2a9dZ\",\"table\":\"ClaimMedicineAllowance_table__tRJMn\",\"table-header\":\"ClaimMedicineAllowance_table-header__1Ynyj\",\"table-description\":\"ClaimMedicineAllowance_table-description__3P7Fc\",\"add-link\":\"ClaimMedicineAllowance_add-link__bcTPs\",\"row\":\"ClaimMedicineAllowance_row__X0O5w\",\"align\":\"ClaimMedicineAllowance_align__BxZLW\",\"center\":\"ClaimMedicineAllowance_center__bUmmq\",\"right\":\"ClaimMedicineAllowance_right__1oGzD\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IQEl\",\"caption\":\"ClaimMedicineAllowance_caption__15HJx\",\"amount\":\"ClaimMedicineAllowance_amount__1OeW6\",\"right-side\":\"ClaimMedicineAllowance_right-side__2LJsC\",\"sticky\":\"ClaimMedicineAllowance_sticky__1tKev\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1HUo0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__10qUm\",\"first-container\":\"ClaimAPE_first-container__3VIQz\",\"groups\":\"ClaimAPE_groups__1H7zB\",\"input\":\"ClaimAPE_input__2Wllf\",\"contract-range\":\"ClaimAPE_contract-range__1xKUx\",\"child-container\":\"ClaimAPE_child-container__2-Cqb\",\"tables-container\":\"ClaimAPE_tables-container__2c44w\",\"left-side\":\"ClaimAPE_left-side__3Grb8\",\"wrapper\":\"ClaimAPE_wrapper__3kVSF\",\"table\":\"ClaimAPE_table__omI3l\",\"table-header\":\"ClaimAPE_table-header__2bLUm\",\"table-description\":\"ClaimAPE_table-description__1imB1\",\"add-link\":\"ClaimAPE_add-link__2hydA\",\"row\":\"ClaimAPE_row__2LLeH\",\"align\":\"ClaimAPE_align__2aoEU\",\"center\":\"ClaimAPE_center__DIEY_\",\"right\":\"ClaimAPE_right__3JBKi\",\"table-total\":\"ClaimAPE_table-total__1hqGE\",\"caption\":\"ClaimAPE_caption__2uqYE\",\"amount\":\"ClaimAPE_amount__1I4D8\",\"right-side\":\"ClaimAPE_right-side__3R0S8\",\"sticky\":\"ClaimAPE_sticky__3qv6w\",\"grand-total\":\"ClaimAPE_grand-total__1i42h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__Y8G80\",\"first-container\":\"ClaimECU_first-container__1rhnH\",\"groups\":\"ClaimECU_groups__3Ibk_\",\"input\":\"ClaimECU_input__26EJ2\",\"child-container\":\"ClaimECU_child-container__1MXFG\",\"tables-container\":\"ClaimECU_tables-container__1eXUa\",\"left-side\":\"ClaimECU_left-side__2cvFC\",\"wrapper\":\"ClaimECU_wrapper__gZOgU\",\"table\":\"ClaimECU_table__1Bicl\",\"table-header\":\"ClaimECU_table-header__1vKl3\",\"table-description\":\"ClaimECU_table-description__qUDPT\",\"add-link\":\"ClaimECU_add-link__wl7KO\",\"row\":\"ClaimECU_row__20V6A\",\"align\":\"ClaimECU_align__4hqDF\",\"center\":\"ClaimECU_center__1bRln\",\"right\":\"ClaimECU_right__3VP8v\",\"table-total\":\"ClaimECU_table-total__GSoyb\",\"caption\":\"ClaimECU_caption__156Qz\",\"amount\":\"ClaimECU_amount__3anBs\",\"right-side\":\"ClaimECU_right-side__3rxLw\",\"sticky\":\"ClaimECU_sticky__1sJqT\",\"grand-total\":\"ClaimECU_grand-total__3ggCY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__3RVRM\",\"first-container\":\"ClaimPPE_first-container__21sPt\",\"groups\":\"ClaimPPE_groups__u8awx\",\"input\":\"ClaimPPE_input__2H_V4\",\"packages\":\"ClaimPPE_packages__3-Fqt\",\"child-container\":\"ClaimPPE_child-container__4CbFv\",\"tables-container\":\"ClaimPPE_tables-container__1P7tK\",\"left-side\":\"ClaimPPE_left-side__1Wl6h\",\"wrapper\":\"ClaimPPE_wrapper__EWklO\",\"table\":\"ClaimPPE_table__ECnsY\",\"table-header\":\"ClaimPPE_table-header__1MiEt\",\"table-description\":\"ClaimPPE_table-description__23Chj\",\"add-link\":\"ClaimPPE_add-link__2jmjj\",\"row\":\"ClaimPPE_row__3D1tu\",\"align\":\"ClaimPPE_align__12mQb\",\"center\":\"ClaimPPE_center__3ZjbJ\",\"right\":\"ClaimPPE_right__3uBxk\",\"table-total\":\"ClaimPPE_table-total__vFP-x\",\"caption\":\"ClaimPPE_caption__3SGWC\",\"amount\":\"ClaimPPE_amount__3eFhL\",\"right-side\":\"ClaimPPE_right-side__MiTxO\",\"sticky\":\"ClaimPPE_sticky__1TIh3\",\"grand-total\":\"ClaimPPE_grand-total__IdBsM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__2OUHv\",\"first-container\":\"ClaimPharmacy_first-container__3CTh5\",\"groups\":\"ClaimPharmacy_groups__1dXFx\",\"input\":\"ClaimPharmacy_input__1fnDP\",\"child-container\":\"ClaimPharmacy_child-container__2DXAY\",\"tables-container\":\"ClaimPharmacy_tables-container__OVhpf\",\"left-side\":\"ClaimPharmacy_left-side__2knv5\",\"wrapper\":\"ClaimPharmacy_wrapper__uDOW8\",\"table\":\"ClaimPharmacy_table__2ttlx\",\"table-header\":\"ClaimPharmacy_table-header__2DPRY\",\"table-description\":\"ClaimPharmacy_table-description__anC6p\",\"add-link\":\"ClaimPharmacy_add-link__3-l-Y\",\"row\":\"ClaimPharmacy_row__1EBvJ\",\"align\":\"ClaimPharmacy_align__3dWWS\",\"center\":\"ClaimPharmacy_center__2Lg3i\",\"right\":\"ClaimPharmacy_right__3Irs7\",\"table-total\":\"ClaimPharmacy_table-total__sPYMH\",\"caption\":\"ClaimPharmacy_caption__2a4nY\",\"amount\":\"ClaimPharmacy_amount__AYkmn\",\"right-side\":\"ClaimPharmacy_right-side__1ss74\",\"sticky\":\"ClaimPharmacy_sticky__RRGLs\",\"grand-total\":\"ClaimPharmacy_grand-total__3QkK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3NBGF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3-YoF\",\"groups\":\"ClaimMedicalSupplies_groups__3hkzB\",\"input\":\"ClaimMedicalSupplies_input__22TfW\",\"child-container\":\"ClaimMedicalSupplies_child-container__eULTM\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2zfdH\",\"left-side\":\"ClaimMedicalSupplies_left-side__2MoH7\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__2hL_L\",\"table\":\"ClaimMedicalSupplies_table__2JI1-\",\"table-header\":\"ClaimMedicalSupplies_table-header__CX7uX\",\"table-description\":\"ClaimMedicalSupplies_table-description__14O2d\",\"add-link\":\"ClaimMedicalSupplies_add-link__1nCh7\",\"row\":\"ClaimMedicalSupplies_row__g6Y-_\",\"align\":\"ClaimMedicalSupplies_align__1_hYI\",\"center\":\"ClaimMedicalSupplies_center__eJ3xR\",\"right\":\"ClaimMedicalSupplies_right__1Rf4R\",\"table-total\":\"ClaimMedicalSupplies_table-total__XHhz_\",\"caption\":\"ClaimMedicalSupplies_caption__1slE2\",\"amount\":\"ClaimMedicalSupplies_amount__3oFZd\",\"right-side\":\"ClaimMedicalSupplies_right-side__gNovx\",\"sticky\":\"ClaimMedicalSupplies_sticky__3bxBP\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__1G-Tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__1r___\",\"first-container\":\"ClaimClinicManagement_first-container__2skqe\",\"groups\":\"ClaimClinicManagement_groups__3FbWr\",\"input\":\"ClaimClinicManagement_input__2Keb1\",\"search\":\"ClaimClinicManagement_search__2LTYC\",\"box-search-button\":\"ClaimClinicManagement_box-search-button__3GicP\",\"no-pad\":\"ClaimClinicManagement_no-pad__2SIL6\",\"child-container\":\"ClaimClinicManagement_child-container__n7uq4\",\"tables-container\":\"ClaimClinicManagement_tables-container__3NmAQ\",\"left-side\":\"ClaimClinicManagement_left-side__D4Ima\",\"wrapper\":\"ClaimClinicManagement_wrapper__3yNmB\",\"table\":\"ClaimClinicManagement_table__1OvWr\",\"table-header\":\"ClaimClinicManagement_table-header__2avVb\",\"table-description\":\"ClaimClinicManagement_table-description__2hA0s\",\"add-link\":\"ClaimClinicManagement_add-link__2GJYD\",\"row\":\"ClaimClinicManagement_row__1YHad\",\"align\":\"ClaimClinicManagement_align__3VKHt\",\"center\":\"ClaimClinicManagement_center__2ugQN\",\"right\":\"ClaimClinicManagement_right__2YJdE\",\"table-total\":\"ClaimClinicManagement_table-total__12gwG\",\"caption\":\"ClaimClinicManagement_caption__1ufF7\",\"amount\":\"ClaimClinicManagement_amount__38Qbv\",\"right-side\":\"ClaimClinicManagement_right-side__33DHV\",\"sticky\":\"ClaimClinicManagement_sticky__jEfao\",\"grand-total\":\"ClaimClinicManagement_grand-total__1xe5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfo_root__A48Ge\",\"header-container\":\"ReimbursementInfo_header-container__7Rc0y\",\"header\":\"ReimbursementInfo_header__2Fspq\",\"title\":\"ReimbursementInfo_title__1JbPt\",\"content\":\"ReimbursementInfo_content__1O8ol\",\"basic-info\":\"ReimbursementInfo_basic-info__1oPax\",\"label\":\"ReimbursementInfo_label__LDCyS\",\"collapsible-cell\":\"ReimbursementInfo_collapsible-cell__1PlUR\",\"container\":\"ReimbursementInfo_container__M1ZXd\",\"show-cell\":\"ReimbursementInfo_show-cell__1q80V\",\"cell\":\"ReimbursementInfo_cell__2ZIqz\",\"groups\":\"ReimbursementInfo_groups__na5mh\",\"input\":\"ReimbursementInfo_input__2qSpD\",\"reasons-container\":\"ReimbursementInfo_reasons-container__3vqkq\",\"delete\":\"ReimbursementInfo_delete__2aKoN\",\"reasons\":\"ReimbursementInfo_reasons__1twVx\",\"add-link\":\"ReimbursementInfo_add-link__3leZg\",\"empty-reasons\":\"ReimbursementInfo_empty-reasons__2hpfm\",\"footer\":\"ReimbursementInfo_footer__3FzeE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadedList_root__1kTdz\",\"header\":\"UploadedList_header__-de1J\",\"header-text\":\"UploadedList_header-text__39rqd\"};"],"sourceRoot":""}