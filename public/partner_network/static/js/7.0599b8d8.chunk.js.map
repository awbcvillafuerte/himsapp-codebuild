{"version":3,"sources":["Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Components/DatePicker/DatePicker.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Test.module.scss","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.module.scss","Pages/Protected/Claims/Components/MedicalConsultant/ViewList/ViewList.module.scss","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.module.scss","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.module.scss","Pages/Protected/Claims/Components/ViewList2/ViewList.js","Pages/Protected/Claims/Components/Tiles/CreatedBundlesTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedBundlesTile.js","SharedComponents/TaskTrayComponent/TaskTrayComponent.js","SharedComponents/TicketListComponent/TicketListComponent.js","Services/Api/BatchEncodingServices.js","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.js","SharedComponents/AutoComplete/AutoComplete.js","SharedComponents/TextFieldNumber/TextFieldNumber.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.js","SharedComponents/DropDown/DropDown.js","Constant/claimTypes.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchFormValidator.js","Pages/Protected/Claims/Store/contants.js","Pages/Protected/Claims/Store/actions/BatchEncoding/index.js","Pages/Protected/Claims/Store/actions/BatchEncoding/batch.js","Pages/Protected/Claims/Store/actions/BatchEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claim.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/grandTotal.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dentalProcedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/error.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claim.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/discrepancy.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/error.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/escalation.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/inquiry.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reject.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/recon.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/utilization.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/return.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/RcsSoaValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.js","Services/Api/ClaimsEncodingServices.js","Controllers/SoaEtlController.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Parser/index.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.js","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.js","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/UploadSoaPage.js","Services/Api/ClaimsServices.js","Services/ArrayToCSV.js","Utilities/SafeAccess.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/validator/DateRangeValidator.js","Pages/Protected/Claims/Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/Footer/Footer.js","Services/Api/CustomerCareServices.js","Services/Api/MedicalConsultantServices.js","Services/Api/UserManagementServices.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/helper/constants.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/TransmittalReport.js","Pages/Protected/Claims/Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport.js","Pages/Protected/Claims/Components/Reports/PRCheckReport/PRCheckReport.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/mapData.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/pagination.js","Services/Api/ClaimsAdjudicationServices.js","Services/Api/ClaimsReconServices.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/style/theme.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/data/legend.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/config/months.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/UtilizationReport.js","Pages/Protected/Claims/Components/Reports/LoadingHimsData/LoadingHimsData.js","Pages/Protected/Claims/Components/Reports/ConfinementReport/ConfinementReport.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/helper/constants.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/Footer/Footer.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/PaymentRequestReport.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/helper/staticHeaderFooter.js","Pages/Protected/Claims/Components/Reports/ReimbursementReport/ReimbursementReport.js","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/validator/DateRangeValidator.js","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport.js","Pages/Protected/Claims/Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport.js","Pages/Protected/Claims/Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport.js","Pages/Protected/Claims/Components/Reports/PerformanceReport/PerformanceReport.js","Pages/Protected/Claims/Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport.js","Pages/Protected/Claims/Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport.js","Pages/Protected/Claims/Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport.js","Pages/Protected/Claims/Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport.js","Pages/Protected/Claims/Components/Reports/DetailedClaimsReport/DetailedClaimsReport.js","Pages/Protected/Claims/Components/Reports/DetailedPerformanceReport/DetailedPerformanceReport.js","Pages/Protected/Claims/Components/Reports/DetailedMonitoringReport/DetailedMonitoringReport.js","Pages/Protected/Claims/Routes/Reports.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/helper/staticHeaderFooter.js","Pages/Protected/Claims/Routes/BatchEncoder.js","Pages/Protected/Claims/Components/Tiles/BatchAndEncoderTile.js","Pages/Protected/Claims/Components/Tiles/ForReconciliationClaimsTile.js","Services/Api/BatchEncodingSupervisoryServices.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.js","SharedComponents/LoadingIndicator/LoadingIndicator.js","Utilities/ArrayCompare.js","SharedComponents/ClientMemberLookup/ClientMemberLookup.js","SharedComponents/ClientMemberLookup/ClientMemberModal.js","Services/Api/CustomerCareService.js","Utilities/RenameProperty.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/InPatient.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Emergency.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Reimbursement.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/MedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Pharmacy.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Dental.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/index.js","Pages/Protected/Claims/Constant/ClaimTypes.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.js","SharedComponents/CustomTable/CustomTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.js","Utilities/Total.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ReconValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ReturnValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.js","SharedComponents/TextFieldSubmit/TextFieldSubmit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.js","SharedComponents/CustomTabs/CustomTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/Unit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/DefaultValue.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitHeaders.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitFooters.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/pagination.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/sortBy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators2.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","SharedComponents/ContractRange/ContractRange.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/3.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/4.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/TeethFactory.js","Pages/Protected/Claims/Components/DentalChart/TeethGroup.js","Pages/Protected/Claims/Components/DentalChart/DentalChart.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ReimbursementInfo/ReimbursementInfo.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.js","SharedComponents/DashboardRedirect/DashboardRedirect.js","Pages/Protected/Claims/Components/ClaimsViewer/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeValidator.js","Pages/Protected/Claims/Routes/BatchEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/OpenBatchesTile.js","Pages/Protected/Claims/Components/Tiles/MyBatchesTile.js","Pages/Protected/Claims/Components/Tiles/CompletedBatchesTile.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/InPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Emergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Reimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Pharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Dental.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators2.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/SoftValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoder.js","Pages/Protected/Claims/Components/Tiles/ClaimsEncoderTile.js","Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/ForAdjudicationTile.js","Pages/Protected/Claims/Components/Tiles/MyClaimsTile.js","Pages/Protected/Claims/Components/ViewList/ViewList.js","Pages/Protected/Claims/Components/Tiles/SubmittedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ReturnedEscalatedClaimsTile.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Components/DatePicker/DatePicker.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Validations/DateValidator.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Test.js","Pages/Protected/Claims/Routes/ClaimsAnalyst.js","Pages/Protected/Claims/Components/Tiles/ForPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/OverrideClaimTile.js","Services/Api/PaymentRequestServices.js","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.js","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.js","Pages/Protected/Claims/Routes/PaymentRequest.js","Pages/Protected/Claims/Components/Tiles/SubmittedPrSupervisorTile.js","Services/Api/PaymentRequestSupervisorServices.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.js","Pages/Protected/Claims/Routes/PaymentRequestSupervisor.js","Pages/Protected/Claims/Components/MedicalConsultant/ViewList/ViewList.js","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/MedicalConsultant.js","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsRecon.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.js","Services/Api/ClaimsVerifierSupervisorServices/ClaimsAdjudicationServices.js","Services/Api/ClaimsVerifierSupervisorServices/MedicalCollectiblesServices.js","Services/Api/ClaimsVerifierSupervisorServices/index.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.js","Pages/Protected/Claims/Components/Tiles/RejectedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsVerifierTile.js","Pages/Protected/Claims/Components/Tiles/ReconciledClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsForApprovalTile.js","Pages/Protected/Claims/Components/Tiles/MedicalCollectiblesTile.js","Pages/Protected/Claims/Components/Tiles/ReimbursementClaimTile.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsVerifierSupervisor.js","Services/Api/ClaimsManagerServices/ClaimsManagerServices.js","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.js","Services/Api/ClaimsMaintainerServices.js","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.js","Pages/Protected/Claims/Routes/ClaimsManager.js","Pages/Protected/Claims/Constant/ClaimUsers.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/bundlesReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/batchReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/grandTotalReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dentalProcedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/errorReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/discrepancyReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/errorReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/escalationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/inquiryReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/rejectReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reconReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/utilizationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/returnReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/index.js","Pages/Protected/Claims/Store/reducers/index.js","Pages/Protected/Claims/index.js","Utilities/TextFormatter.js","SharedComponents/DatePicker/DatePicker.js","SharedComponents/Table/Table.js","SharedComponents/Alert/Alert.js","SharedComponents/DashboardTileComponent/DashboardTileComponent.js","SharedComponents/SearchTextComponent/SearchTextComponent.js","SharedComponents/TextFieldCurrency/TextFieldCurrency.js","Pages/Protected/Claims/Components/DentalChart/Teeth/style.module.scss","SharedComponents/EnhancedTable/EnhancedTable.js","SharedComponents/DashboardTileComponent/DashboardTileComponent.module.scss","SharedComponents/Table/Table.module.scss","SharedComponents/DatePicker/DatePicker.module.scss","SharedComponents/TextFieldCurrency/TextFieldCurrency.module.scss","Pages/Protected/Claims/Components/ViewList2/ViewList.module.scss","SharedComponents/TaskTrayComponent/TaskTrayComponent.module.scss","SharedComponents/TicketListComponent/TicketListComponent.module.scss","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.module.scss","SharedComponents/AutoComplete/AutoComplete.module.scss","SharedComponents/TextFieldNumber/TextFieldNumber.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.module.scss","SharedComponents/DropDown/DropDown.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.module.scss","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.module.scss","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/UploadSoaPage.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.module.scss","Pages/Protected/Claims/Components/Reports/TransmittalReport/Footer/Footer.module.scss","Pages/Protected/Claims/Components/Reports/TransmittalReport/TransmittalReport.module.scss","Pages/Protected/Claims/Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport.module.scss","Pages/Protected/Claims/Components/Reports/PRCheckReport/PRCheckReport.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.module.scss","Pages/Protected/Claims/Components/Reports/UtilizationReport/style/UtilizationReport.module.scss","Pages/Protected/Claims/Components/Reports/LoadingHimsData/LoadingHimsData.module.scss","Pages/Protected/Claims/Components/Reports/ConfinementReport/ConfinementReport.module.scss","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/Footer/Footer.module.scss","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/PaymentRequestReport.module.scss","Pages/Protected/Claims/Components/Reports/ReimbursementReport/ReimbursementReport.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport.module.scss","Pages/Protected/Claims/Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport.module.scss","Pages/Protected/Claims/Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport.module.scss","Pages/Protected/Claims/Components/Reports/PerformanceReport/PerformanceReport.module.scss","Pages/Protected/Claims/Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport.module.scss","Pages/Protected/Claims/Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport.module.scss","Pages/Protected/Claims/Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedClaimsReport/DetailedClaimsReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedPerformanceReport/DetailedPerformanceReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedMonitoringReport/DetailedMonitoringReport.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.module.scss","SharedComponents/LoadingIndicator/LoadingIndicator.module.scss","SharedComponents/ClientMemberLookup/ClientMemberLookup.module.scss","SharedComponents/ClientMemberLookup/ClientMemberModal.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.module.scss","SharedComponents/CustomTable/CustomTable.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.module.scss","SharedComponents/TextFieldSubmit/TextFieldSubmit.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.module.scss","SharedComponents/CustomTabs/CustomTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","SharedComponents/ContractRange/ContractRange.module.scss","Pages/Protected/Claims/Components/DentalChart/DentalChart.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ReimbursementInfo/ReimbursementInfo.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.module.scss","SharedComponents/DashboardRedirect/Error.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.module.scss"],"names":["module","exports","CustomizedDialogs","id","columns","searchTextPlaceHolder","viewList","setViewList","onViewListChange","body","handleOnClose","p","show","React","useState","debounce","setDebounce","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","open","className","classes","root","PaperProps","style","height","display","DialogTitle","disableTypography","header","Typography","variant","title","IconButton","aria-label","button","onClick","DialogContent","dividers","content","search","SearchTextComponent","onChange","e","target","value","clearTimeout","setTimeout","page","placeholder","TableContainerProps","overflow","position","TableProps","stickyHeader","head","map","headCell","TableCell","key","sortField","TableSortLabel","active","orderBy","direction","order","sort","name","event","args","field","match","filter","handleColumnFiltering","align","data","count","limit","rowsPerPageOptions","CreatedBundlesTile","props","services","sizes","items","setItems","initialValue","useEffect","Promise","all","getBundles","category","range","getBundleCount","then","values","batchResponse","batchCountResponse","results","Fragment","color","state","actionHeader","Button","LoadingService","loading","createBundle","res","history","push","onFilterChange","prevState","size","TableHead","item","index","bundle_number","DateFormatter","date","due","facility","to","params","_params","_data","row","displayName","SubmittedBundlesTile","TaskTrayComponent","children","showTitle","Children","toArray","type","cloneElement","_sizes","xs","sm","lg","Grid","container","wrapper","spacing","itemSize","s","TicketListComponent","viewAllLink","isFilterShown","setFilter","Paper","FormControl","Select","MenuItem","input","list","action","caption","axios","instance","BatchEncodingServices","url","method","batch_number","on","headers","ExcludeErrorConstants","Dashboard","PageTitleService","BreadcrumbsService","setSelectedItems","tiles","float","AutoComplete","label","required","readOnly","suggestions","error","other","focus","setFocus","_error","setError","trim","onBlur","currentTarget","contains","relatedTarget","InputBase","autoComplete","onFocus","square","suggestion","handleItemClick","TextFieldNumber","customInput","isNumericString","displayType","allowLeadingZeros","onValueChange","floatValue","isAllowed","formattedValue","BundleDetails","details","errors","isReadOnly","disableControls","medicalPartner","doctorPartner","setSuggestions","getMedicalPartnerSuggestions","by","length","lookups","query","_items","d","getDoctorPartnerSuggestions","handleOnChangeAutosuggest","fieldName","fieldValue","handleOnChangeMedicalPartner","isSuggestionClick","selectedIndex","i","term","earliest_term","parseInt","isNaN","newDate","moment","date_received","add","format","full_name","ex","md","total_rcs","DatePicker","toISOString","due_date","soa_number","TextFieldCurrency","total_soa_amt","facility_id","disabled","facility_name","doctor_id","doctor_name","reassign_notes","multiline","rows","headCells","numeric","disablePadding","BatchList","batches","onDelete","openDialog","onCancel","canEdit","openError","onEdit","setForDeletion","forDeletion","isBundleCompleted","searchFilter","selectStatus","batch","setBatch","includes","claim","toLowerCase","parseFloat","selected","indeterminate","undefined","checked","batch_numbers","changeSelectAllState","_batches","selected_count","batchNumbers","b","EnhancedTable","handleSelectAllClick","checkAll","padding","Checkbox","Boolean","_index","handleClick","buttonWrapper","Alert","message","deleteMessage","getMessage","cancelLabel","okLabel","onOk","DropDown","disableComponents","addNew","text","select","types","prefix","Reimbursement","Emergency","Dental","APE","ECU","Pharmacy","PPE","startsWith","schema","Joi","object","claim_type","string","claim_source","number","integer","min","amount_billed","less","greater","messages","notes","allow","when","is","otherwise","options","abortEarly","validate","ExtractValidationResult","BATCH_ENCODING","CLAIMS_ENCODING","CLAIMS_ANALYSIS","payload","for","constants","dasdas","resetClaim","setClaimFields","setClaimBaseDetails","setClaimFacility","setClaimDoctor","setClaimRoom","addClaimDiagnosis","setClaimDiagnosis","setClaimPrimaryDiagnosis","removeClaimDiagnosis","addClaimProcedure","updateClaimProcedure","removeClaimProcedure","addClaimHospitalItem","updateClaimHospitalItem","removeClaimHospitalItem","addClaimProfessionalFee","updateClaimProfessionalFee","removeClaimProfessionalFee","setClaimType","setDropDown","initDropDowns","initSuggestions","setSuggestionObject","setSuggestionOnArray","addSuggestionToArray","removeSuggestionToArray","resetSuggestionObject","resetSuggestionArray","setProcedure","setHospitalItem","setProfessionalFee","initDiscrepancy","setDiscrepancy","resetError","resetEscalation","addEscalationMessages","setEscalationMessages","setEscalationMessage","setEscalationAssignee","resetInquiry","addInquiryMessages","setInquiryMessages","setInquiryMessage","setInquiryAssignee","resetReassign","addReassignMessages","setReassignMessages","setReassignMessage","setReassignAssignee","setRejectStatus","setClaimPro","resetRecon","setReconNotes","setLimitType","resetLimitType","resetReturn","setReturnNote","setShowBatchForm","actions","setSelectedBatch","claim_types","ClaimTypes","claim_sources","BatchForm","close","onSave","bundle","onChangeDoctor","dispatch","useDispatch","useSelector","BatchEncoding","saveControl","showPrompt","setShowPrompt","confirmAction","setConfirmAction","setErrors","CustomTextField","doctor","DialogActions","BatchFormValidator","max","ref","bundle_soa","batches_soa","valid","bundle_rcs","batches_rcs","setBatchAction","setSaveBatchControl","BundlePage","originalState","setOriginalState","setBundle","setBatches","setIsReadOnly","setSearchFilter","setOpenDialog","openBundleDialog","setOpenBundleDialog","openRCSDialog","setOpenRCSDialog","setOpenError","submitStatus","setsubmitStatus","isSupervisor","user_id","setDisableComponents","disabledSubmit","setDisabledSubmit","getBundleDetails","getBundle","_status","status","received","soa","amount","getBatches","cancelBundle","path","handleOnSubmit","submitBundle","getDoctorSuggestions","handleOnDeleteBatch","BundleValidator","validateSoaRcs","reduce","accu","curr","RcsSoaValidator","join","newBatch","updateBatch","f","createBatch","split","updateBundle","handleOnOk","deleteMultipleBatch","catch","onOpen","source","NewBundlePage","setDisableControls","openAlert","setOpenAlert","due_date_adjustment","newBundle","setNewBundle","NewBundleValidator","form","inputs","save","ClaimsEncodingServices","claim_number","responseType","Accept","SoaEtlController","MINIMUM_KEYS","BUNDLE_SOA_NUM","BUNDLE_RCS_DATE","BUNDLE_FACILITY_NAME","BUNDLE_FACILITY_CODE","BATCH_CLAIMS_SOURCE","BATCH_CLAIM_TYPE","CLAIM_DATE_AVAILMENT","CLAIM_DATE_ADMITTED","CLAIM_DATE_DISCHARGE","CLAIM_LOA_NUM","CLAIM_APPROVAL_CODE","CLAIM_MEMBER_NUM","CLAIM_MEMBER_NAME","CLAIM_DIAGNOSIS_NAME","CLAIM_DIAGNOSIS_CODE","CLAIM_DOCTOR_NAME","CLAIM_DOCTOR_AMOUNT","CLAIM_PROCEDURE_NAME","CLAIM_PROCEDURE_AMOUNT","CLAIM_HOSPITAL_ITEM_NAME","CLAIM_HOSPITAL_ITEM_AMOUNT","COLUMN_TEMPLATES","DEFAULT","transform","dataRows","dataMapping","defaults","console","log","fields","prepData","_transformPreviewDataToPrepData","_transformPrepDataToHierarchicalData","JSON","stringify","loadToApi","successCallback","resolve","reject","bundleNumber","bundleParam","addBatchPromises","batchParam","claims","resolveBatchPromise","rejectBatchPromise","a","addClaim","addClaims","outputEntries","forEach","dataEntry","outputEntry","hasSingleValue","Object","keys","columnKey","dataValue","outputKey","fieldKey","prepDataRows","currentBatch","currentClaim","soaNumber","dateReceived","claimType","approvalCode","nameParts","member_account_number","member_first_name","member_middle_name","member_last_name","approval_code","loa_number","diagnosis","professional_fees","hospital_items","procedures","date_from","date_to","claim_sub_type","claim_sub_sub_type","with_corporate_guarantee","loa_notes","room_type","room_rate","pro_id","pro_name","diagnosisName","diagnosisCode","flag","code","description","primary","lineItem","lineAmount","gross_amount","specialization","vat_amount","amount_paid_by_member","philhealth_amount_paid","philhealth_remarks","amount_not_covered","reason","amount_due_from_member","reason_for_charging_member","item_code","DEBUG","test","file","onComplete","reader","FileReader","onload","workbook","XLSX","read","result","sheet","Sheets","SheetNames","utils","sheet_to_json","raw","shift","_item","readAsBinaryString","Progress","withStyles","borderRadius","backgroundColor","bar","LinearProgress","UploadSpace","onSelectFile","dialogRef","useRef","dragged","setDragged","fileLoaded","setFileLoaded","progress","setProgress","handleOnDrag","preventDefault","stopPropagation","handleParse","Parser","fileName","onDrop","dataTransfer","files","onDragOver","onDragLeave","clickable","current","click","icon","warning","accept","DynamicTable","onRemoveFile","onDetectDataRows","tableState","setTableState","selectedItems","handleOnChangeItems","endAt","find","__index__","table","flex","DataPair","targets","sources","onClickRemove","onChangeSource","onChangeTarget","child","autoFocus","DataPairContainer","onClickAddNew","dropdown_source","dropdown_target","FieldMapper","claimSources","ApiService","onSaveSuccess","onChangeHeaderInputs","onChangeClaimTypeDataMapping","facilityTemplate","setFacilityTemplate","isDefault","template","setTemplate","templates","setTemplates","dialog","setDialog","mesage","alertDialog","setAlertDialog","getTemplates","_default","is_default","_id","handleOnChangeFacility","getFacilitySuggestions","handleOnChangeDialog","section","groups","_template","t","handleOnChangeTemplate","_fields","last","onClickAddField","splice","onRemoveField","storeTemplate","template_name","storeFacilityTemplate","template_id","FormControlLabel","control","default","footer","UploadSoaPage","setData","headerInputs","setHeaderInputs","claimTypeValues","setClaimTypeValues","setDataRows","handleOnCancel","claimTypeMap","element","fileHeaders","onSuccess","ClaimsAdjudicationServices","client","Download","extension","statics","newLine","c_header","c_footer","_rows","joined","currentValue","slice","blob","Blob","ipcRenderer","window","require","readAsDataURL","onloadend","base64data","pop","send","FileSaver","saveAs","SafeAccess","def","delimeter","obj","completeColumns","remarks","ClaimsUtilLedgerReport","dataColumns","hideReport","hideHeader","dateRange","refresh","from","Date","setClaims","dateRangeError","setDateRangeError","setColumns","handleOnPaginate","handleOnFilter","fetchLedger","ClaimsServices","utilizationLegder","_claims","date_admission_from","date_admission_to","date_service","date_service_from","date_service_to","contract_from","contract_to","filtered","entry","indexOf","formatData","output","property","disableFuture","submit","DateRangeValidator","col","ArrayToCSV","c","fontSize","maxHeight","noMargin","claimIndex","colIndex","pagination","username","total","CurrencyFormatter","ar_amount","signatories","CustomerCareServices","account_number","mct_id","where","skip","offset","client_account_no","MedicalConsultantServices","member_account_no","icd_code","filters","UserManagementServices","role_name","this","getUsers","class","mapData","claim_no","diagnoses","primary_diagnosis","icd10_code","primary_icd10_code","provider","partner_name","doctors","setDoctors","partner_doctor_name","total_amount","grand_total","session","date_issued","concat","headCellsComplete","randomRange","Math","random","Utilization","ClaimsAnalysis","fetchService","isMember","member","utilizationLoa","hideSearchBar","hideActionColumn","setHeadCells","setRows","allList","setAllList","filteredRows","setFilteredRows","utilized","ibnr","graph","setGraph","benefit_limits","info","member_id","icd","category_code","IcdCptStorageServices","diagnosis_code","_utilizationLoa","_search","some","procedure_name","cpt_code","toString","itemFilter","handleSearchChange","exc","lodash","take","chunk","setPaginate","width","background","hover","role","tabIndex","cell","renderRows","claimNo","getClaimResponse","analyzeRespone","analysis_results","ClaimsReconServices","theme","InPatient","OutPatientProcedure","OutPatientConsultation","MedicineAllowance","MedicalSupplies","ClinicManagement","mockData","months","clientColumns","memberDataColumns","id_row","label_left","label_right","name_row","bundle_row","date_row","bundles","total_approved_amount","total_tax_amount","initialDetails","total_pr_amount","discount_amount","PaymentRequestReport","medical_partner_id","medical_partner_name","searchValue","setSearchValue","fetching","setFetching","setDetails","column","getBundleSoaSuggestions","handlePagination","paymentRequestClaims","handleGenerateReport","approved_amount","tax_amount","static_header","hasOwnProperty","_columns","no","static_footer","staticHeaderFooter","handleOnChangeBundleSoa","paymentRequestReport","typo","TextFieldStyle","margin","colSpan","CircularProgress","member_name","handling","date_max","initialClaims","month","number_of_claims","claims_processed","amount_processed","total_received","total_processed","contract_plan","claim_status","user","geography","reportPages","transmittal","component","registered_name","corporate_account_no","setClient","returnClient","setReturnClient","setTotal","setUsername","localStorage","getItem","getUserById","handleClientOnChange","getClientSuggestions","getClientInfo","fetchTransmittalItems","transmittalReport","_totam_amout","_ar_amount","total_due_from_member","contracts","PdfViewer2Service","service","getTransmittalReportPdf","left","right","utilizationLedger","treasuryTransmittalReport","reports","setReports","fetchReport","_reports","report","date_requested","check_date","minHeight","utilizationReport","reportType","setReportType","initial","actual","graphData","setGraphData","ABL","MBL","limitType","graphFilter","setGraphFilter","account_no","setMember","setUtilizationLoa","setMemberFetchStatus","fetchTable","newData","newChild","percentage","getPercentage","childContainer","utilizationClientTable","getMember","getMemberUtilizationLoa","err","response","RadioGroup","Radio","utilizationClient","getClientUtilization","getClientUtilizationLoa","graphClientRes","clientUtilRes","clientUtilLoaRes","utilAmount","loaAmount","total_utilization_amount","total_ibnr_amount","legend","mark","textAlign","tooltip","bottom","LargeNumberFormatter","year","toFixed","cases","availed_by_principals","availed_by_dependents","memberinfo","memberinfoRow","memberInfoLabel","memberInfoValue","diff","getUtilizations","prReports","loadingHimsData","fetchHIMSData","loadingHIMSData","availment_date","approved_date","posted_date","date_admitted","date_discharged","payment_due_date","handleOnColumnFilter","confinementReport","fetchRecords","reimbursementReport","grandTotal","reimbursementClaimReport","word","charAt","toUpperCase","substring","hidden","footerComponent","claimsSummaryReport","setSuggestion","geopgraphy","handleOnChange","_category","lookupsQuery","processed","productivityPerformaceReport","region","receivedTotal","processedTotal","productivityReport","received_total","processed_total","returnedClaimsReport","setDateRange","handleOnClickFilter","_total","claim_amount","return_reason","performanceReport","contract_plan_type","average","work","agingPartialApprovedReport","total15Days","total1Week","total1Month","totalAll","agingPartialApprovedClaimsReport","agingReturnedClaims","agingReturnClaimsReport","claimsBeyond3Months","date_of_service","agingReimbursement","reimbursement_category","reimbursmentAgingReport","detailedClaimsReport","detailedPerformanceReport","detailedMonitoringReport","reportsItems","BATCH_ENCODER","BATCH_ENCODER_SUPERVISOR","CLAIMS_DETAILS_ENCODER","CLAIMS_DETAILS_ENCODER_SUPERVISOR","CLAIMS_ANALYST","PR_OFFICER","PR_OFFICER_SUPERVISOR","MEDICAL_CONSULTANT","CLAIMS_RECON","CLAIMS_VERIFIER_SUPERVISOR","CLAIMS_MANAGER","generateBreadCrumbs","userRole","breads","r","generateSideBar","generateRoutes","exact","sideBarItems","breadcrumbs","dashboard","specificBundle","uploadSoa","BatchAndEncoderTile","getBatchEncoderWork","getBatchEncoderWorkCount","batchEncoders","total_bundle","total_batch","ForReconciliationClaimsTile","for_recon","ticket","getClaims","getClaimCount","claimResponse","claimCountResponse","allClaims","allClaimsCount","BatchEncodingSupervisoryServices","note","assignee","AssignDialog","setShow","onSubmit","reassign","setReassign","showAlert","setShowAlert","users","setUsers","reassignErrors","setReassignErrors","first_name","last_name","comment","assign","ReassignValidator","aria-describedby","columnss","CreatedBundlesPage","batchEncoderId","setBatchEncoderId","openModal","setOpenModal","activeAssigning","setActiveAssigning","headerCheckBox","setHeaderCheckBox","_batchEncoderId","handleOnViewListChange","marginTop","selectedCount","handleOnItemSelect","bundle_numbers","reassignBundles","DiscrepancyBase","discrepancy","iconStyle","others","retainSpace","autoWidth","showIcon","anchorEl","setAnchorEl","setMessage","Array","isArray","flat","Infinity","m","spreadResult","handleClose","Popover","anchorOrigin","vertical","horizontal","transformOrigin","whiteSpace","LoadingIndicator","animation","includesAny","s1","s2","ClientMemberLookup","allSearch","allSearchText","allSearchFields","mode","onRecordSet","apiData","setApiData","finalRows","setFinalRows","setSelected","colFilters","setColFilters","setLoading","fetchData","translateRows","filterData","fetches","responses","colIdx","val","handleOnSort","handleColumnFilter","_row","entries","revertRow","ClientMemberModal","CustomerCareService","renameProp","oldProp","newProp","old","AutoFillInitializer","AutoFill","loa","member_info","first_middle","given_name","middle_name","common","loa_no","proc","diagnosis_given_diagnosis","diagnosis_description","prof","diag","room","date_admitted_date","now","date_discharged_date","partner_id","rooms","localeCompare","sensitivity","rate","department","anesthesiologist_id","anesthesiologist_name","partner_doctor_id","recommendation","reimbursement_type","customer_account_number","client_id","company_name","client_name","medicine_category","tooth_number","tooth_numbers","date_issued_date","claim_remarks","other_name","subType","BaseDetails","onChangeReimbursementType","handleMemberAccountNumber","permissions","requiredFields","showReimbursement","showApprovalCode","showClaimSource","showLoaNumber","showCompany","isDental","showMemberAccountNumber","isCM","memberAccountNumber","setMemberAccountNumber","contractPlanTypeLoading","setContractPlanTypeLoading","memberModal","setMemberModal","clientModal","setClientModal","handleOnClickClientLookup","handleFetchContracts","accountNumber","getContractList","latest_contract","custom_metadata","coverage_start_date","coverage_end_date","years","getLoaDetails","update","client_account_number","client_account_name","contract","getMembers","getMemberContractPlanType","finally","handleSetMember","getClients","getClientrContractPlanType","handleSetClient","ICDTextFields","ICDTextField","codeId","onChangeDescription","onChangeCode","onChangePrimary","onDeleteDiagnosis","tooltipOpen","setTooltipOpen","delete","Tooltip","GivenDiagnosisField","givenDiag","onChangeGivenDiag","given_diagnosis","DiagnosisList","openDeleteDialog","setOpenDeleteDialog","handleOnClickAddDiagnosis","defaultBehaviour","lastEntry","handleOnChangeIcd10","icd10","getIcd10Suggestions","synonym","getICDSynonyms","_by","handleOnConfirmDelete","create","Table","_children","TableHeader","TableBody","TableRow","expanded","expandable","setExpandable","cells","setCells","TableRowExpandable","ProcedureForm","doValidate","showAmountPaidByMember","showPhilhealthField","showAmountNotCovered","showAmountDueFromMember","procedure","dropDown","_errors","prop","handleOnChangeCpt","cpt","getCptSuggestions","handleOnChangeDiagnosis","fieldArr","_field","reason_charging","amount_due_from_client","reason_for_charging_client","buttons","handleOnUpdate","handleOnRemoveConfirm","handleOnRemove","Item","List","lineItems","dental_procedures","grand","ProcedureList","handleClickLineDiscrepancy","Set","expand","center","Total","HospitalItemForm","showPhilhealthRemarks","hospitalItem","handleOnChangeHospitalItem","getHospitalItemSuggestions","hospital_item","handleOnSave","handleOCancel","HospitalItemList","ProfessionalFeeForm","professionalFee","pfSuggestions","pfDoctor","handleOnChangeDoctor","main","major","getSpecializationSuggestions","getDoctorSpecilizations","handleOnChangeSpecialization","professional_fee","ProfessionalFeeList","ClaimFooter","onReject","onViewAnalysisSheet","onViewLetterOfAdvice","onReassign","onEscalate","onApprove","isReimbursement","onRemove","onViewClaimNotice","onReturn","reimbursement_info","userManagementService","escalations","c_return","return","rejectStatus","confirm","escalateModal","setEscalateModal","reassignModal","setReassignModal","returnModal","setReturnModal","rejectModal","setRejectModal","approveModal","setApproveModal","saveModal","setSaveModal","cancelModal","setCancelModal","removeModal","setRemoveModal","validateModal","setValidateModal","dropDownUsers","setDropDownUsers","escalationErrors","setEscalationErrors","returnError","setReturnErrors","initDropdownUsers","roles","getUsersByRole","sortBy","doValidateMiddleware","return_advice","goBack","analysis_sheet","enabled","visible","letter_of_advice","escalate","approve","AuthorityMatrix","modalProps","other_types","selected_amount","handleOnShowModal","remove","modals","EscalateValidator","doValidateEscalation","ReconValidator","doValidateReassign","ReturnValidator","doValidateReturn","DisapprovedLabel","reasons","disapproved","generateMessage","TextFieldSubmit","ChatBox","confirmMessage","onSubmitComment","lastDate","confirmSubmitDialog","setConfirmSubmitDialog","setComment","isMe","timestamp","sdate","doDateSplit","balloon","sender","me","receive","mheader","time","mbody","ExcalateValidator","TabPanel","CustomTabs","defaultIndex","containerSyles","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","CustomTab","SideBar","contractId","nodes","onItemClick","TreeView","defaultCollapseIcon","defaultExpandIcon","node","TreeItem","nodeId","planPackage","benefitCategory","benefits","tree_id","ValueField","FloatingFields","elements","setFields","elem","layout","unit","Functions","parent_name","limit_type","limits","age_limit","max_availee","DefaultValue","no_of_days","time_from","time_to","member_type","plan_type","peso_limit_amt","no_of_members","peso_limit","payment","availment","limit_unit","DigitFormatter","Unit","rollover","UpperWord","eligible_availees","days_deployed","eligibility","empty","RB","EM","IP","OP","PV","SD","MT","OM","CC","number_of_days","DNT","SH","ADD","mobile_ape_availees","partner","rb_limit_type","abl_mbl","rb_limit","rb_mode_of_payment","annual","semiannual","quarterly","monthly","mode_of_payment","rb_pec_limit_type","pec","PHP","Months","rb_pec_limit","rb_pec_limit_specify","time_based_limit","number_mount","day_based","billing_arangement","billingArrangement","premium","billback","rider_fee","imputed_in_premiums","billback_net","fixed_rate_rider","fixed_rate_personnel","soa_rate","soa_actual_cost","billback_fee","billback_type","rider_fee_unit","waiting_period","waiting_period_type","waitin_period_unit","limit_for_all","limit_for_all_unit","availment_per_year","voluntary_upgrading_type","voluntary_upgrading_amount","involuntary_upgrading_type","except_suite_room","involuntary_upgrading_amount","Benefits","setTable","setContractId","planType","setPlanType","setPlanPackage","setBenefitCategory","lastRoomAndBoard","setLastRoomAndBoard","roomAndBoard","setRoomAndBoard","coverages","setCoverages","riders","setRiders","rootNode","setRootNode","benefitNode","setBenefitNode","setHeaders","footers","setFooters","MCT","benefit_tree","rnb","_keys","_name","getRows","BenefitTable","getHeaders","getFooters","parent_keys","pkey","sub_node","acc","BenefitHeaders","BenefitFooters","handleTableSort","handleTableFilter","selectedPlan","setSelectedPlan","planTypes","setPlanTypes","allExclusions","setAllExclusions","exclusionList","setExclusionList","getExclusions2","handleOnSetItem","plan_types","plan_types_keys","planTypeKey","ex_nodes","exclusionKey","inner_node","innerKey","is_excluded","item_name","parent_code","handleOnSearch","benefit","queriedData","mutable_data","onQuery","sortedData","Link","headCellsDoctors","PartnerNetwork","partnerService","doctorService","partners","setPartners","fetchPartner","fetchDoctors","onQueryColumn","collection","onQueryAll","location","handleOnClickAffiliated","schedule","Contract","getMemberContract","getClientContract","setFileName","setTitle","setService","NameFormatter","format2","brand_name","pdf","initialPageNumber","initialScale","RightPanelTabs","onReturnEscalate","onReturnInquire","memberFetchStatus","clientFetchStatus","getPartners","getDoctors","inquiries","recon","tabs","communication","comments","ClaimsRemarks","selected_fields","available_fields","boolean","contract_year_from","contract_year_to","official_receipt_number","getValidators","getValidators2","ClaimInPatient","onChangeFacility","onChangePro","_type","getClaimDetails","getReason","doValidateAll","doValidateProcedure","doValidateHospitalItem","doValidateProfessionalFee","_allowedFields","_lineItemFields","getRooms","pro","claim_sub","sub_type","desc","base","startOf","constainerStyle","validator","MainValidator","ClaimOutPatientProcedure","onChangeAnaesthesiologist","anesthesiologist","ClaimOutPatientConsultation","ClaimEmergency","ClaimMedicineAllowance","account_name","ContractRange","hasDiscrepancy","handleOnItemClick","Incisor1","viewBox","crown","gums","fill","Incisor2","Incisor3","Incisor4","Canine1","Canine2","Premolar1","Molar1","Molar2","TeethFactory","flipY","circle","teeth","flipX","TeethGroup","states","_details","startAt","reverse","uppper","lower","DentalChart","chart","upper","ClaimDental","contract_year","constructDentalStates","ClaimAPE","ClaimECU","ClaimPharmacy","ClaimPPE","ppe_packagers","ppe_packages","ListItem","ListItemText","ClaimMedicalSupplies","ClaimClinicManagement","ReimbursementInfo","canPrintNotice","setShowModal","doReject","doViewClaimNotice","lookup","reimbursement_info_analysts","showAdd","setShowAdd","reasonDropdown","setReasonDropdown","showCell","handleOnClickCancel","handleOnClickUpdate","handleOnItemSave","date_created","prepared_by","date_encoded","released_to","date_released","date_return","handleOnClickSave","scrollTo","top","scrollHeight","behavior","ItemForm","defaultFunction","setItem","today","handleOnLookup","handleOnChangeReason","hasError","tempReasons","other_details","__index","other_fields","AdditionalFields","additional_fields","exist","ClaimReimbursement","batchNumber","setBatchNumber","allowedFields","setAllowedFields","initialAllowedFields","setInitialAllowedFields","showReimbursementModal","setShowReimbursementModal","_claim","reimbursement_details","endOf","wrap","permission","DashboardRedirect","counter","setCounter","_counter","interval","setInterval","clearInterval","GetClaimComponent","_props","SelectecClaimType","hasPrimary","itemError","ClaimAnalysis","setClientFetchStatus","setGrandTotal","breadCrumbsList","isManager","claimNumber","setClaimNumber","getClaim","_claim_type","__type","getDiscrepancy","getClaimType","getEscalationLogs","getInquiryLogs","getReconNotes","getClient","adjudicationResults","fieldIndex","item_type","item_id","getComments","getInquiries","getNotes","getReport","getAnalysisSheet","getReports","getLetterOfAdvice","getLetterNotice","doValidateBase","rest","doValidateDiagnosis","DiagnosisListValidator","not","ProcedureValidator","diagnosisError","exists","ProcedureDiagnosisValidator","HospitalItemValidator","HospitalItemDiagnosisValidator","ProfessionalFeeValidator","ProfessionalFeeDiagnosisValidator","group","groupEnd","callback","anaesthesiologist","getAnaesthesiologistSuggestions","inquire","receiver_id","onInquire","employee_id","proUsersLookup","getProSuggestions","removeClaim","returnClaim","base_errors","createdBundles","specificClaim","utilization","contact","OpenBatchesTile","getBatchCount","openBatches","openBatchCount","handleOnEncode","assignBatch","MyBatchesTile","myBatches","myBatchCount","CompletedBatchesTile","completedBatches","completedBatchCount","openTickets","BatchesPage","BatchDetails","ClaimListHeader","onClickAdd","onClickProviderSchedule","inputChange","cmHeadCells","prManagerheadCells","ClaimList","selectedClaimNumber","onConfirm","actionItems","setActionItems","submittedBatch","setPagination","setOrder","setOrderBy","claim_numbers","claimNumbers","handleRequestSort","rowsLength","allowCheck","allowCheckDisabled","ProviderSchedule","header1","fontStyle","partition","BatchPage","apiService","setSelectedClaimNumber","claimCount","setClaimCount","showProviderSchedule","setShowProviderSchedule","cancelDialog","setCancelDialog","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","getClaimsAndCount","_batchNumber","getBatch","submitBatch","deleteMultipleClaim","reqApprovalCode","reqLoaNumber","ClaimsEncoding","handleOnRemoveDiagnosis","CptTextFields","CptTextField","unsubscribe","subscribe","handleOnChangeProcedureForm","diagnosi","handleOnUpdateProcedure","HospitalItemTextFields","HospitalItemTextField","onChangeName","handleOnChangeHospitalForm","handleOnUpdateHospitalItem","handleOnChangeProfessionalFeeForm","handleOnUpdateProfessionalFee","setDentalProcedure","showProcedureForm","generateKey","showHospitalItemForm","showProfessionalFeeForm","lineItemFields","setlineItemFields","isAdd","ToothNumber","DentalProcedureForm","dentalProcedure","doValidateDentalProcedure","isModified","setIsModified","showSaveAlert","setShowSaveAlert","minWidth","setType","initial_values","_setDialog","_resolve","SoftValidatorAlertComponent","SoftValidatorService","resetGrandTotal","ClaimPage","_claimNumber","pageTitle","breadCrumbs","getBatchDetails","DentalProcedureValidator","DentalProcedureDiagnosisValidator","claimFields","updateClaim","specificBatch","ClaimsEncoderTile","getEncoders","getEncodersBatches","total_count","startCase","total_batches","ClaimsEncoderSupervisorServices","setReassignNotes","handleOnSubmitReassign","alert","CreatedBatchesPage","setSelectStatus","headcell","setId","getEncoderBatches","handleTableRenderer","handleSelectAll","handleItemSelect","date_due","cesFooter","prev_user","getEncoderBatch","assigned","ForAdjudicationTile","handleOnAnalyze","assignClaim","handleFilterChange","MyClaimsTile","my","aria-controls","aria-haspopup","SubmittedClaimsTile","disableLoaButton","setDisableLoaButton","handleClickSubmitted","has_amount_concerns","submitted","handleOnShowPdf","Menu","keepMounted","zIndex","ITEM_HEIGHT","ReturnedEscalatedClaimsTile","escalated","tabindex","setOpen","InputRef","handleDateChange","handleOnFocus","handleOnBlur","MomentUtils","TextFieldComponent","inputProps","ClaimsInputBase","allowKeyboardControl","clearable","showTodayButton","top100Films","Test","storage","setStorage","facilities","Autocomplete","getOptionLabel","option","renderInput","TextField","freeSolo","onInputChange","inputValue","InputProps","endAdornment","InputAdornmentProps","DateValidator","analyze","exclusions","ForPaymentRequestTile","mTitle","paymentRequestClaimCount","SubmittedPaymentRequestTile","OverrideClaimTile","PaymentRequestServices","pendingHeadCells","submittedHeadCells","PaymentRequestPage","setBundleNumber","pending","getPaymentRequest","getPaymentRequestBatches","resetBatches","utilization_amount","pr_amount","selectedBatches","_batch","getSelectedPending","checkboxColor","requestBatch","should_include","supervisor","approved_by_uid","paymentRequest","specificPaymentRequest","submittedPaymentRequest","SubmittedPrSupervisorTile","getSubmittedPaymentRequest","bundleResponse","submittedRequestClaims","submittedRequestClaimCount","verifierName","total_bundles","processor_id","PaymentRequestSupervisorServices","pr_officer","getPaymentRequestBundles","handleOnSearchColumn","for_review","handleOnReview","review","reassignData","setReassignData","getClaimsAnalyst","claimsCount","ClaimsReimbursementServices","MedicalCollectiblesServices","ClaimsPage","userId","setClaimsCount","ClaimsVerifierSupervisorServices","getItems","handleUnselectAll","handleOnSearchAll","RejectedClaimsTile","getItemCount","ClaimsVerifierTile","verifiers","setVerifiers","totalSubordinatesClaims","getSubordinates","usersCount","prev","handleOnReviewUser","total_claims","ReconTIle","ClaimsForApprovalTile","MedicalCollectiblesTile","ReimbursementClaimTile","ReconciledClaimsTile","reconciled","forApproval","view","reimbursement","forAdjudicationPermissions","forApprovalPermissions","checkThreshold","forReconciledPermissions","viewPermission","reviewPermission","rejectedPermissions","ClaimsManagerServices","BatchDetailsPage","UserManagementApi","setClaim","forOverride","setForOverride","getBatchAndClaims","getApprovedClaims","batchRes","claimsRes","getClaimsVerifierSupervisors","analystRes","supervisorRes","overrideClaims","initialItem","deactivate","MaintenancePage","setLookup","showAddItem","setShowAddItem","ClaimsMaintainerServices","isActive","activate","initialLookup","storeLookups","updateLookups","handleOnEditItem","maintenance","submittedSpecificPaymentRequest","prManagerPermissions","initialState","bundlesReducer","batchReducer","suggestionsReducer","combineReducers","claimReducer","claimTypeReducer","dropDownReducer","procedureReducer","hospitalItemReducer","professionalFeeReducer","grandTotalReducer","dentalProcedureReducer","reassignReducer","errorReducer","discrepancyReducer","escalationReducer","inquiryReducer","rejectReducer","reconReducer","utilizationReducer","returnReducer","reducers","createStore","ClaimsModule","setUserRole","isLoading","setIsLoading","document","mapRoles","store","Store","render","SideBarService","BatchEncoderRoutes","removeItem","batchEncoderLogic","BatchEncoderSupervisorRoutes","ClaimsDetailsEncoderRoutes","BatchePage","ClaimsDetailsEncoderSupervisorRoutes","ClaimsAnalystRoutes","SubmittedPaymentRequestPage","PaymentRequestRoutes","SubmittedPaymentRequestList","PaymentRequestSupervisorRoutes","MedicalConsultantRoutes","ClaimsReconRoutes","ClaimsList","ClaimsVerifierSupervisorRoutes","ClaimsManagerRoutes","numeral","sentence","_value","isValid","DateFormatterByAbbreviation","abr","lastName","firstName","middleName","format1","selectedDate","setSelectedDate","useStyles1","makeStyles","flexShrink","marginLeft","TablePaginationActions","useTheme","ceil","CustomTable","SelectProps","native","ActionsComponent","DashboardTileComponent","useStyles","alignItems","border","borderColor","iconButton","divider","currency","thousandSeparator","decimalScale","allowEmptyFormatting","fixedDecimalScale","paddingLeft","paddingRight","highlight","palette","secondary","lighten","light","dark","spacer","paper","marginBottom","analystTable","tableWrapper","overflowX","visuallyHidden","clip","sorter","analyst","sortDirection"],"mappings":"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","file":"static/js/7.0599b8d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker_root__2gr1_\",\"label\":\"DatePicker_label__2IDg0\",\"wrapper\":\"DatePicker_wrapper__1l4FZ\",\"read-only-value\":\"DatePicker_read-only-value__KJseI\",\"text-field\":\"DatePicker_text-field__3ms9r\",\"no-margin\":\"DatePicker_no-margin__367V6\",\"input\":\"DatePicker_input__1xj3x\",\"date-button\":\"DatePicker_date-button__2wW8j\",\"focus\":\"DatePicker_focus__MeKma\",\"has-error\":\"DatePicker_has-error__2F-Pz\",\"disabled\":\"DatePicker_disabled__6UGGx\",\"error\":\"DatePicker_error__3XqbD\",\"date\":\"DatePicker_date__2JSbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Test_root__LER1m\",\"row\":\"Test_row__2iY25\",\"input\":\"Test_input__3gEl6\",\"proto-auto-complete\":\"Test_proto-auto-complete__3-JWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1WSgv\",\"tiles\":\"Dashboard_tiles__URUGc\",\"task-tray\":\"Dashboard_task-tray__3PFmp\",\"list-item\":\"Dashboard_list-item__1dXth\",\"details\":\"Dashboard_details__1uD2x\",\"detail-item\":\"Dashboard_detail-item__2Xq4I\",\"label\":\"Dashboard_label__2Y7DU\",\"content\":\"Dashboard_content__12k-O\",\"action\":\"Dashboard_action__3-klY\",\"ticket-list\":\"Dashboard_ticket-list__3SSgK\",\"wrapper\":\"Dashboard_wrapper__3sukD\",\"float\":\"Dashboard_float__3_xKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestPage_root__2gGvt\",\"text-fields\":\"PaymentRequestPage_text-fields__3gFF0\",\"sub-container\":\"PaymentRequestPage_sub-container__a_dOn\",\"input-container\":\"PaymentRequestPage_input-container__2GjiG\",\"ellipsis-container\":\"PaymentRequestPage_ellipsis-container__1Efns\",\"table-container\":\"PaymentRequestPage_table-container__2yAdZ\",\"headers\":\"PaymentRequestPage_headers__1XNVW\",\"header\":\"PaymentRequestPage_header__3MXgw\",\"submit-header\":\"PaymentRequestPage_submit-header__19DA-\",\"dialog-container\":\"PaymentRequestPage_dialog-container__1a70q\",\"buttonWrapper\":\"PaymentRequestPage_buttonWrapper__1W80E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestPage_root__3CH1o\",\"text-fields\":\"SubmittedPaymentRequestPage_text-fields__1EAYV\",\"sub-container\":\"SubmittedPaymentRequestPage_sub-container__39S8A\",\"input-container\":\"SubmittedPaymentRequestPage_input-container__1e-Ty\",\"ellipsis-container\":\"SubmittedPaymentRequestPage_ellipsis-container__1UrAU\",\"table-container\":\"SubmittedPaymentRequestPage_table-container__3oIBa\",\"headers\":\"SubmittedPaymentRequestPage_headers__IUsth\",\"header\":\"SubmittedPaymentRequestPage_header__1W3nu\",\"dialog-container\":\"SubmittedPaymentRequestPage_dialog-container__2sZln\",\"buttonWrapper\":\"SubmittedPaymentRequestPage_buttonWrapper__3s1pG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__3PeJc\",\"tiles\":\"Dashboard_tiles__OVU2I\",\"task-tray\":\"Dashboard_task-tray__1krbX\",\"list-item\":\"Dashboard_list-item__3vY_C\",\"details\":\"Dashboard_details__3NoCG\",\"detail-item\":\"Dashboard_detail-item__JLMfd\",\"label\":\"Dashboard_label__3AA6w\",\"content\":\"Dashboard_content__16txH\",\"action\":\"Dashboard_action__Apy9_\",\"ticket-list\":\"Dashboard_ticket-list__2Kmdx\",\"wrapper\":\"Dashboard_wrapper__1-oZ4\",\"float\":\"Dashboard_float__3w1H_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestList_root__dXrnn\",\"header-container\":\"SubmittedPaymentRequestList_header-container__33jMu\",\"header\":\"SubmittedPaymentRequestList_header__1UkBI\",\"title\":\"SubmittedPaymentRequestList_title__31KGj\",\"search\":\"SubmittedPaymentRequestList_search__1SQIf\",\"table\":\"SubmittedPaymentRequestList_table__1sht8\",\"buttonWrapper\":\"SubmittedPaymentRequestList_buttonWrapper__2ZvKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__2ue5H\",\"header-container\":\"ViewList_header-container__q77ZU\",\"header\":\"ViewList_header__2lKSa\",\"title\":\"ViewList_title__AuuEZ\",\"content\":\"ViewList_content__3GRUr\",\"search\":\"ViewList_search__cofXm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28Vtl\",\"tiles\":\"Dashboard_tiles__1wpMD\",\"task-tray\":\"Dashboard_task-tray__1IvyN\",\"list-item\":\"Dashboard_list-item__12jAd\",\"details\":\"Dashboard_details__2H0bw\",\"detail-item\":\"Dashboard_detail-item__3Fwan\",\"label\":\"Dashboard_label__3wCdh\",\"content\":\"Dashboard_content__39XQQ\",\"action\":\"Dashboard_action__1O7UY\",\"ticket-list\":\"Dashboard_ticket-list__kcd4U\",\"wrapper\":\"Dashboard_wrapper__2FBsH\",\"float\":\"Dashboard_float__WBsaU\",\"completed_task\":\"Dashboard_completed_task__y2ijY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2pt7a\",\"tiles\":\"Dashboard_tiles__2zhqD\",\"row\":\"Dashboard_row__3jP5M\",\"task-tray\":\"Dashboard_task-tray__2N8YZ\",\"list-item\":\"Dashboard_list-item__JD2zf\",\"details\":\"Dashboard_details__1uEl7\",\"detail-item\":\"Dashboard_detail-item__2ijgN\",\"label\":\"Dashboard_label__34lgV\",\"content\":\"Dashboard_content__3COhO\",\"action\":\"Dashboard_action__36U9f\",\"ticket-list\":\"Dashboard_ticket-list__2OwTr\",\"wrapper\":\"Dashboard_wrapper__Q93wn\",\"float\":\"Dashboard_float__2hGqR\",\"completed_task\":\"Dashboard_completed_task__3VhqT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2X5k5\",\"buttons\":\"ButtonFooter_buttons__2aw08\",\"counter\":\"ButtonFooter_counter__20NW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__RJlxK\",\"header-container\":\"AssignDialog_header-container__1o5Gi\",\"header\":\"AssignDialog_header__3ISr0\",\"title\":\"AssignDialog_title__2y4cT\",\"content\":\"AssignDialog_content__24eRW\",\"input\":\"AssignDialog_input__NW5vD\",\"footer\":\"AssignDialog_footer__2rmZz\",\"assign\":\"AssignDialog_assign__2WmDm\",\"to\":\"AssignDialog_to__1Lcwa\",\"action\":\"AssignDialog_action__2z0LV\",\"message-content\":\"AssignDialog_message-content__WGOqe\",\"message\":\"AssignDialog_message__3BYCA\",\"message-child\":\"AssignDialog_message-child__2BQeL\",\"alert-title\":\"AssignDialog_alert-title__gx1Vh\",\"footer-action\":\"AssignDialog_footer-action__rMIKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsList_root__32NKA\",\"table-container\":\"ClaimsList_table-container__2xz0B\",\"search-container\":\"ClaimsList_search-container__1JKTH\",\"reassign\":\"ClaimsList_reassign__177eW\",\"search\":\"ClaimsList_search__2869S\",\"action-container\":\"ClaimsList_action-container__3VFV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1zt4e\",\"tiles\":\"Dashboard_tiles__N_XeU\",\"row\":\"Dashboard_row__3-lCS\",\"task-tray\":\"Dashboard_task-tray__L-btV\",\"list-item\":\"Dashboard_list-item__2Z2uy\",\"details\":\"Dashboard_details__-wyqw\",\"detail-item\":\"Dashboard_detail-item__jAHga\",\"label\":\"Dashboard_label__KNpiW\",\"content\":\"Dashboard_content__17Lfg\",\"action\":\"Dashboard_action__38kLX\",\"ticket-list\":\"Dashboard_ticket-list__3bes0\",\"wrapper\":\"Dashboard_wrapper__38JoV\",\"float\":\"Dashboard_float__1YyQM\",\"completed_task\":\"Dashboard_completed_task__1dK9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28tvA\",\"tiles\":\"Dashboard_tiles__1xRNf\",\"row\":\"Dashboard_row__1lZjx\",\"task-tray\":\"Dashboard_task-tray__m0Mne\",\"list-item\":\"Dashboard_list-item__1W9Rx\",\"details\":\"Dashboard_details__3v-9d\",\"detail-item\":\"Dashboard_detail-item__SBoHO\",\"label\":\"Dashboard_label__2lH5b\",\"content\":\"Dashboard_content__3NMtD\",\"action\":\"Dashboard_action__nDNUz\",\"ticket-list\":\"Dashboard_ticket-list__3Y9ji\",\"wrapper\":\"Dashboard_wrapper__3fNte\",\"float\":\"Dashboard_float__3aYNI\",\"completed_task\":\"Dashboard_completed_task__2-BCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__vQHL2\",\"header-container\":\"AssignDialog_header-container__1qQN2\",\"header\":\"AssignDialog_header__3PltF\",\"title\":\"AssignDialog_title__e_cZ1\",\"content\":\"AssignDialog_content__3wFoW\",\"input\":\"AssignDialog_input__AeSdQ\",\"footer\":\"AssignDialog_footer__3dKcT\",\"assign\":\"AssignDialog_assign__X3IaA\",\"to\":\"AssignDialog_to__2FSjd\",\"action\":\"AssignDialog_action__HdROx\",\"message-content\":\"AssignDialog_message-content__3s8j-\",\"message\":\"AssignDialog_message__1o7jm\",\"message-child\":\"AssignDialog_message-child__l94pI\",\"alert-title\":\"AssignDialog_alert-title__3GyBp\",\"footer-action\":\"AssignDialog_footer-action__2CQoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetailsPage_root__1WnVw\",\"footer\":\"BatchDetailsPage_footer__2mXHQ\",\"actions\":\"BatchDetailsPage_actions__qSR-l\",\"delete-button\":\"BatchDetailsPage_delete-button__17y_B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MaintenancePage_root__18jNl\",\"button-parent\":\"MaintenancePage_button-parent__1YFg4\",\"active\":\"MaintenancePage_active__3Ltsc\",\"header\":\"MaintenancePage_header__3ou_p\",\"header-wrapper\":\"MaintenancePage_header-wrapper__14ljZ\",\"header-text\":\"MaintenancePage_header-text__LYsHh\",\"table\":\"MaintenancePage_table__2RLkb\",\"add-item-root\":\"MaintenancePage_add-item-root__iVNF-\",\"wrapper\":\"MaintenancePage_wrapper__3LPhK\",\"text-wrapper\":\"MaintenancePage_text-wrapper__27CjW\",\"radio-buttons\":\"MaintenancePage_radio-buttons__1E3wP\",\"button-wrapper\":\"MaintenancePage_button-wrapper__DTWi8\"};","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import DatePicker from 'SharedComponents/DatePicker/DatePicker'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\nexport default function CustomizedDialogs ({\n  id,\n  columns,\n  searchTextPlaceHolder,\n  viewList,\n  setViewList,\n  onViewListChange,\n  body\n}) {\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    // console.log(args)\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    onViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <Dialog\n      id={id}\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose} id='close'>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent id={`${id}-body`} dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent id='search' onChange={handleSearchChange} placeholder={searchTextPlaceHolder} />\n        </div>\n        <Table\n          id={`${id}-table`}\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow id={`${id}-header`}>\n              {columns.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  <TextField\n                    onChange={event => {\n                      const search = event.target.value\n                      clearTimeout(debounce)\n                      setDebounce(\n                        setTimeout(() => {\n                          handleColumnFiltering({\n                            field: headCell.sortField,\n                            value: search,\n                            match: headCell.match\n                          })\n                        }, 500)\n                      )\n                    }}\n                  />\n                  {/* {(headCell.type && headCell.type === 'date') || headCell.match === 'date' ? (\n                    <DatePicker\n                      noMargin\n                      id={`${headCell.field}`}\n                      onChange={date => {\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: date.toISOString(),\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                      value={null}\n                    />\n                  ) : (\n                    <TextField\n                      noMargin\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: search,\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  )} */}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={body(viewList.data)}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CreatedBundlesTile = props => {\n  const { services, sizes } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  const generateBundleNumber = () => {\n    LoadingService.loading(true)\n    services.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBundles({\n        category: 'created',\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'created' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    services\n      .getBundles({\n        category: 'created',\n        range: value,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Created Bundles' })\n    services\n      .getBundles({ category: 'created', limit: 10, sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'created',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBundles(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'created-count' }}\n        sizes={sizes}\n        title='Created Bundles'\n        id='created-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='created-view-list'\n          >\n            View List\n          </Typography>\n        }\n        actionHeader={\n          <Button\n            variant='contained'\n            color='primary'\n            className='button-neutral'\n            onClick={generateBundleNumber}\n            id='create-new-bundle'\n          >\n            Create New Bundle\n          </Button>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                <TableCell id={`created-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`created-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`created-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                      Update\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        id='created-bundles'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCreatedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default CreatedBundlesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst SubmittedBundlesTile = props => {\n  const { services, sizes } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBundles({\n        category: 'submitted',\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    services\n      .getBundles({\n        category: 'submitted',\n        range: value,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Submitted Bundles' })\n    services\n      .getBundles({ category: 'submitted', limit: 10, sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBundles(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'submitted-count' }}\n        sizes={sizes}\n        title='Submitted Bundles'\n        id='submitted-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-view-list'\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                <TableCell id={`submitted-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`submitted-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`submitted-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        id='submitted-bundles'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedBundlesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n// CSS Classes\nimport classes from './TaskTrayComponent.module.scss'\n\nexport default function TaskTrayComponent ({ children, sizes, title = 'TASK TRAY', showTitle = true }) {\n  let items = React.Children.toArray(children)\n\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'DashboardTileComponent') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n\n  const _sizes = sizes || {\n    xs: 12,\n    sm: 6,\n    lg: 4\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root}>\n        {showTitle && (\n          <Typography variant='subtitle1' className={classes.title}>\n            {title}\n          </Typography>\n        )}\n        <Grid container className={classes.wrapper} spacing={3}>\n          {items.map((item, index) => {\n            let itemSize = item.props.sizes || {}\n            let s = { ..._sizes, ...itemSize }\n            return (\n              <Grid item {...s} key={index}>\n                {item}\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { Link } from 'react-router-dom'\n\n// CSS Classes\nimport classes from './TicketListComponent.module.scss'\n\n/**\n * Create ticket list component\n *\n * @param children child components \n * @param count count value to be displayed; keys: color, value\n * @param title title string\n * @param viewAllLink view all link\n * @param isFilterShown flag for showing filter\n */\nexport default function TicketListComponent ({ children, count, title, viewAllLink, isFilterShown = true }) {\n  const [filter, setFilter] = React.useState('all')\n  const handleChange = event => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <Grid container className={classes.root}>\n      <Typography variant='subtitle1' className={classes.title}>\n        TICKET LIST\n      </Typography>\n      <Grid container className={classes.wrapper} spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.content}>\n            <div className={classes.wrapper}>\n              <div className={classes.header}>\n                <div className={classes.count}>\n                  <Typography variant='h5' className='color-7'>\n                    {count}\n                  </Typography>\n                </div>\n                { isFilterShown ? (\n                  <div className={classes.filter}>\n                    <span>\n                      <FormControl>\n                        <Select className={classes['select']} value={filter} onChange={handleChange}>\n                          <MenuItem value={'all'}>\n                            <Typography className={classes.input}>Assigned to All</Typography>\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                    </span>\n                  </div>\n                ) : '' }\n              </div>\n              <Typography variant='subtitle2' className={classes.title}>\n                {title}\n              </Typography>\n              <div className={classes.list}>{children}</div>\n              <div className={classes.action}>\n                <Link to={viewAllLink.to} className='text-link'>\n                  <Typography variant='caption' className='bold'>\n                    {viewAllLink.caption}\n                  </Typography>\n                </Link>\n              </div>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/be')\n\nexport default class BatchEncodingServices {\n  static getBundles (params) {\n    return axios({\n      url: '/bundles',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundleCount (params) {\n    return axios({\n      url: `/bundles/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static createBundle () {\n    return axios({\n      url: `/bundles`,\n      method: 'POST'\n    })\n  }\n\n  static updateBundle ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static submitBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getBatches ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'GET'\n    })\n  }\n\n  static updateBatch ({ bundle_number, batch_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static createBatch ({ data, bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static deleteBatch ({ bundle_number, batch_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleBatch ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <CreatedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './AutoComplete.module.scss'\nexport default function AutoComplete (props) {\n  const { label = '', required, readOnly, suggestions = [], onChange, error, ...other } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event.target.value)\n  }\n\n  const handleItemClick = index => {\n    setFocus(false)\n    setError()\n    if (typeof onChange === 'function') onChange(suggestions[index], true, index)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <InputBase\n                className={classes.input}\n                onChange={handleOnChange}\n                {...other}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n              {focus && (\n                <Paper id={`${props.id}-suggestion`} className={classes.suggestions} square>\n                  {suggestions.map((suggestion, index) => (\n                    <MenuItem\n                      id={`${props.id}-suggestion-${index}`}\n                      key={`${props.id}-suggestion-${index}`}\n                      onClick={() => {\n                        setFocus(true)\n                        handleItemClick(index)\n                      }}\n                    >\n                      {suggestion}\n                    </MenuItem>\n                  ))}\n                </Paper>\n              )}\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\n\nimport classes from './TextFieldNumber.module.scss'\nexport default function TextFieldNumber (props) {\n  const { label = '', required, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {other.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={() => setFocus(false)}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { formattedValue, floatValue } = values\n                  return formattedValue === '' || floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport moment from 'moment'\n\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n\n// Services\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\nimport classes from './BundleDetails.module.scss'\n\nexport default function BundleDetails ({ details, errors, isReadOnly, onChange, disableControls }) {\n  // const [newBundle, setNewBundle] = React.useState({\n  //   bundle_number: '',\n  //   total_rcs: '',\n  //   soa_number: '',\n  //   facility_id: '',\n  //   facility_name: '',\n  //   doctor_id: '',\n  //   doctor_name: '',\n  //   date_received: moment(),\n  //   due_date: moment()\n  // })\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    doctorPartner: {\n      id: [],\n      name: [],\n      data: []\n    }\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, doctorPartner: { ...state.doctorPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = args => {\n    const { value, field } = args\n    // setNewBundle(state => ({ ...state, [field]: value }))\n\n    onChange({ fieldName: field, fieldValue: value })\n\n    handleOnChangeMedicalPartner(args)\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    // console.log(value, field)\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: {\n        id: [],\n        name: [],\n        data: []\n      },\n      doctorPartner: {\n        id: [],\n        name: [],\n        data: []\n      }\n    }))\n\n    if (field === 'facility_id' || field === 'facility_name') {\n      if (isSuggestionClick) {\n        for (let i of suggestions.medicalPartner.data) {\n          if (value === i.id || value === i.name) {\n            // setNewBundle(state => ({ ...state, facility_id: i.id, facility_name: i.name }))\n            // Compute due date based on date received and earliest term found\n            // Fallback term is 30 days\n            let term = 30\n            if (i.earliest_term) {\n              term = parseInt(i.earliest_term)\n              if (isNaN(term) || term < 0) {\n                term = 30\n              }\n            }\n            let newDate = moment(details.date_received)\n              .add(term, 'days')\n              .format('MM/DD/YYYY')\n            onChange({ fieldName: 'facility_id', fieldValue: i.id })\n            onChange({ fieldName: 'facility_name', fieldValue: i.name })\n            onChange({ fieldName: 'due_date', fieldValue: newDate })\n          }\n        }\n      } else {\n        switch (field) {\n          case 'facility_id':\n            getMedicalPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'facility_name':\n            getMedicalPartnerSuggestions({ value, by: 'name' })\n            break\n\n          default:\n            break\n        }\n      }\n    } else if (field === 'doctor_id' || field === 'doctor_name') {\n      if (isSuggestionClick) {\n        if (!isNaN(selectedIndex)) {\n          try {\n            const i = suggestions.doctorPartner.data[selectedIndex]\n            // setNewBundle(state => ({ ...state, doctor_id: i.id, doctor_name: i.full_name }))\n\n            // onChange({ fieldName: 'doctor_id', fieldValue: 'dasdsdasds' })\n            onChange({ fieldName: 'doctor_name', fieldValue: i.full_name })\n            onChange({ fieldName: 'doctor_id', fieldValue: i.id })\n          } catch (ex) {}\n        }\n      } else {\n        switch (field) {\n          case 'doctor_id':\n            getDoctorPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'doctor_name':\n            getDoctorPartnerSuggestions({ value, by: 'full_name' })\n            break\n\n          default:\n            break\n        }\n      }\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField required readOnly='true' label='Bundle No.' id='bundle-no' value={details.bundle_number} />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldNumber\n            required\n            readOnly={isReadOnly}\n            id='total-rcs'\n            label='Total No. of RCS'\n            value={details.total_rcs}\n            onChange={e => onChange({ fieldName: 'total_rcs', fieldValue: e.target.value })}\n            error={errors.total_rcs}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            id='date-received'\n            label='Date Received'\n            readOnly={isReadOnly}\n            value={details.date_received}\n            onChange={date => onChange({ fieldName: 'date_received', fieldValue: date.toISOString() })}\n            error={errors.date_received}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            readOnly={isReadOnly}\n            id='due-date'\n            label='Due Date'\n            value={details.due_date}\n            onChange={date => onChange({ fieldName: 'due_date', fieldValue: date.toISOString() })}\n            error={errors.due_date}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField\n            readOnly={isReadOnly}\n            id='soa-no'\n            label='SOA No.'\n            value={details.soa_number}\n            onChange={e => onChange({ fieldName: 'soa_number', fieldValue: e.target.value })}\n            error={errors.soa_number}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldCurrency\n            required\n            readOnly={isReadOnly}\n            id='total-soa-amt'\n            label='Total SOA Amount'\n            value={details.total_soa_amt}\n            onChange={e => onChange({ fieldName: 'total_soa_amt', fieldValue: e.target.value })}\n            error={errors.total_soa_amt}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-id'\n            label='Medical Partner ID'\n            value={details.facility_id}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.id}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n            }\n            error={errors.facility_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-name'\n            label='Medical Partner Name (Facility)'\n            value={details.facility_name}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.name}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_name', value, isSuggestionClick })\n            }\n            error={errors.facility_name}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-partner-id'\n            label='Medical Partner ID'\n            value={details.doctor_id}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.id}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_id', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-name'\n            label='Medical Partner Name (Doctor)'\n            value={details.doctor_name}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.full_name}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_name', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_name}\n          />\n        </Grid>\n      </Grid>\n\n      {details.reassign_notes && (\n        <Grid container spacing={3}>\n          <Grid item sm={6} xs={12}>\n            <TextField\n              multiline\n              rows={3}\n              id='reassign-notes'\n              label='Reassign Notes'\n              value={details.reassign_notes}\n              readOnly\n            />\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Components\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Style\nimport classes from './BatchList.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, disablePadding: false, label: 'Batch No' },\n  { id: 'batch-claim-type', numeric: false, disablePadding: false, label: 'Claim Type' },\n  { id: 'batch-total-rcs', numeric: false, disablePadding: false, label: 'Total No. of RCS' },\n  {}\n]\n\nexport default function BatchList (props) {\n  const {\n    batches,\n    onDelete,\n    openDialog,\n    onCancel,\n    canEdit,\n    openError,\n    onEdit,\n    setForDeletion,\n    forDeletion,\n    isBundleCompleted = false,\n    searchFilter = '',\n    selectStatus = true\n  } = props\n  const [batch, setBatch] = React.useState([])\n\n  const getMessage = batches => {\n    let deleteMessage = 'Are you sure you want to delete this batch?'\n    if (batches.batch_numbers.length > 1) {\n      deleteMessage = 'Are you sure you want to delete these batches?'\n    }\n    return deleteMessage\n  }\n\n  React.useEffect(() => {\n    const data = batches\n      .filter(i => {\n        if (i.batch_number.includes(searchFilter)) return true\n        if (i.claim.type.toLowerCase().includes(searchFilter.toLowerCase())) return true\n        if (i.total_rcs === parseFloat(searchFilter)) return true\n      })\n      .map(i => ({\n        ...i,\n        selected: false\n      }))\n    setBatch({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setForDeletion({ batch_numbers: [] }) // Resets the batch list.\n  }, [batches, searchFilter])\n\n  const handleClick = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleSelectAllClick = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.selected = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.selected) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n    setForDeletion({ batch_numbers: batchNumbers })\n  }\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        // handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        checkAll={canEdit}\n        indeterminate={!!batch.indeterminate}\n        checked={!!batch.checked}\n        selectStatus={selectStatus}\n        // allowCheck\n        // allowCheckDisabled={Boolean(isBundleCompleted)}\n      >\n        <TableBody>\n          {batch.data &&\n            batch.data.map((i, index) => (\n              <TableRow key={i.batch_number}>\n                {canEdit && (\n                  <TableCell id={`checkbox-${i}`} padding='checkbox'>\n                    <Checkbox\n                      color='default'\n                      disabled={Boolean(isBundleCompleted)}\n                      checked={i.selected}\n                      onClick={event => handleClick({ index, batch })}\n                    />\n                  </TableCell>\n                )}\n                <TableCell id={`batch-no-${index}`}>{i.batch_number}</TableCell>\n                <TableCell id={`batch-claim-type-${i.claim.type}`}>{i.claim.type}</TableCell>\n                <TableCell id={`batch-total-rcs-${i.total_rcs}`}>{i.total_rcs}</TableCell>\n                {canEdit && (\n                  <TableCell className={classes.buttonWrapper} align='right'>\n                    <Button variant='contained' color='primary' className='button-neutral' onClick={() => onEdit(i)}>\n                      Edit\n                    </Button>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      <Alert\n        open={openDialog}\n        message={getMessage(forDeletion)}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={onCancel}\n        onOk={onDelete}\n      />\n      <Alert\n        open={openError}\n        message='Delete Error: This batch has existing claim records'\n        cancelLabel='Ok'\n        onCancel={onCancel}\n      />\n    </React.Fragment>\n  )\n}\n","import Select from '@material-ui/core/Select'\n\nimport React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Link } from 'react-router-dom'\n\nimport classes from './DropDown.module.scss'\n\n/**\n * Props\n * id required\n * label\n * required\n * value\n * items array {value, text}\n * onChange\n *\n */\nexport default function DropDown (props) {\n  const {\n    id,\n    label = '',\n    required,\n    items = [],\n    readOnly,\n    onChange,\n    disableComponents = false,\n    addNew = { show: false, value: 'add-new', text: 'Add New' },\n    error,\n    ...other\n  } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['select-container']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field ${disableComponents && classes.disabled} box-shadow-field`}\n            >\n              {items && (\n                <Select\n                  id={id}\n                  onChange={handleChange}\n                  onFocus={() => setFocus(true)}\n                  onBlur={() => setFocus(false)}\n                  classes={{ root: classes.select }}\n                  input={<InputBase className={classes.input} />}\n                  {...other}\n                  disabled={disableComponents}\n                >\n                  {items.map((item, index) => (\n                    <MenuItem key={`${id}-items${index}`} id={`${id}-items${index}`} value={item.value}>\n                      {item.text}\n                    </MenuItem>\n                  ))}\n                  {addNew.show && (\n                    <MenuItem key={`${id}-items-add-new`} id={`${id}-items-add-new`} value={addNew.value}>\n                      {addNew.text}\n                    </MenuItem>\n                  )}\n                </Select>\n              )}\n            </Paper>\n\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","const types = {\n  'In Patient': { prefix: 'IP' },\n  'Out Patient Procedure': { prefix: 'OP' },\n  'Out Patient Consultation': { prefix: 'PF' },\n  Reimbursement: { prefix: 'RM' },\n  Emergency: { prefix: 'ER' },\n  Dental: { prefix: 'DN' },\n  'Medicine Allowance': { prefix: 'MA' },\n  APE: { prefix: 'AP' },\n  ECU: { prefix: 'EC' },\n  Pharmacy: { prefix: 'PH' },\n  PPE: { prefix: 'PE' },\n  'Medical Supplies': { prefix: 'MS' },\n  'Clinic Management': { prefix: 'CM' }\n}\n\nconst dropdown = (filter = '') => {\n  const list = []\n  for (const type in types) {\n    if (filter !== '') {\n      if (type.toLowerCase().startsWith(filter.toLowerCase())) {\n        list.push({ text: type, value: type })\n      }\n    } else {\n      list.push({ text: type, value: type })\n    }\n  }\n  return list\n}\n\nconst suggestion = (filter = '') => {\n  const list = []\n  for (const type in types) {\n    if (filter !== '') {\n      if (type.toLowerCase().startsWith(filter.toLowerCase())) {\n        list.push(type)\n      }\n    } else {\n      list.push(type)\n    }\n  }\n  return list\n}\nexport default { types, dropdown, suggestion }\n\n// 1. IP\n// 2. OP\n// 3. PF\n// 4. Reimbursement\n// 5. Emergency\n// 6. Dental\n// 7. Medicine Allowance\n// 8. APE\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  claim_type: Joi.string()\n    .trim()\n    .label('Claim Type')\n    .required(),\n  claim_source: Joi.string()\n    .trim()\n    .label('Claim Source')\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0)\n    .required(),\n  amount_billed: Joi.number()\n    .label('Billed Amount')\n    .less(100000000)\n    .greater(0)\n    .messages({\n      'number.less': `Billed Amount should be less than {#limit}`,\n      'number.greater': 'Billed Amount should be greater than 0'\n    }),\n  notes: Joi.string()\n    .trim()\n    .label('Notes/Comments')\n    .allow('', null),\n  doctor_id: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` }),\n  doctor_name: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner (Doctor) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","export default {\n  for: { BATCH_ENCODING: 'BATCH_ENCODING', CLAIMS_ENCODING: 'CLAIMS_ENCODING', CLAIMS_ANALYSIS: 'CLAIMS_ANALYSIS' }\n}\n","import { setBundleItems, addBundle, setSelectedBundle, setBundleBatches, addBatch } from './bundles'\nimport { setSelectedBatch, setShowBatchForm, setBatchAction, setSaveBatchControl } from './batch'\nimport { initSuggestions, setSuggestionObject, resetSuggestionObject } from './suggestion'\n\nexport default {\n  setBundleItems,\n  addBundle,\n  setSelectedBundle,\n  setBundleBatches,\n  addBatch,\n  //* Batch\n  setSelectedBatch,\n  setShowBatchForm,\n  setBatchAction,\n  // *Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setSaveBatchControl\n}\n","import constants from './../../contants'\n\nexport const setSelectedBatch = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SELECTED_BATCH',\n    payload\n  }\n}\n\nexport const setBatchAction = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_BATCH_ACTION',\n    payload\n  }\n}\n\nexport const setShowBatchForm = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SHOW_BATCH_FORM',\n    payload\n  }\n}\n\nexport const setSaveBatchControl = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SAVE_BATCH_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload,\n    dasdas: 'dasdasd'\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\nimport { resetError, setError } from './error'\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\nimport { setGrandTotal, resetGrandTotal } from './grandTotal'\nimport { setDentalProcedure } from './dentalProcedure'\nimport { resetReassign, setReassignNotes, setReassignAssignee } from './reassign'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // Grand Total\n  setGrandTotal,\n  resetGrandTotal,\n  // Dental Procedure\n  setDentalProcedure,\n  setClaimPro,\n  resetReassign,\n  setReassignNotes,\n  setReassignAssignee,\n  resetError,\n  setError,\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setGrandTotal = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_GRAND_TOTAL',\n    payload\n  }\n}\n\nexport const resetGrandTotal = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_GRAND_TOTAL'\n  }\n}\n","import constants from './../../contants'\n\nexport const setDentalProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DENTAL_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetError = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\n\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\n\nimport { initDiscrepancy, setDiscrepancy } from './discrepancy'\n\nimport { resetError, setError } from './error'\n\nimport {\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee\n} from './escalation'\n\nimport { resetInquiry, addInquiryMessages, setInquiryMessages, setInquiryMessage, setInquiryAssignee } from './inquiry'\n\nimport {\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee\n} from './reassign'\n\nimport {\n  resetReturn,\n  setReturnNote\n} from './return'\n\nimport { setRejectStatus } from './reject'\n\nimport { resetRecon, setReconNotes } from './recon'\n\nimport { setLimitType, resetLimitType } from './utilization'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // * Discrepancy\n  initDiscrepancy,\n  setDiscrepancy,\n  // * Errror\n  resetError,\n  setError,\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetInquiry,\n  addInquiryMessages,\n  setInquiryMessages,\n  setInquiryMessage,\n  setInquiryAssignee,\n  // * Reassign\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee,\n  setRejectStatus,\n  setClaimPro,\n  // Recon\n  resetRecon,\n  setReconNotes,\n  setLimitType,\n  resetLimitType,\n  // Return supervisor/manager\n  resetReturn,\n  setReturnNote\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DISCREPANCY',\n    payload\n  }\n}\n\nexport const setDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DISCREPANCY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetEscalation = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_SHOW',\n    payload\n  }\n}\n\nexport const addEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGE',\n    payload\n  }\n}\n\nexport const setEscalationAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetInquiry = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const addInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGE',\n    payload\n  }\n}\n\nexport const setInquiryAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_SHOW',\n    payload\n  }\n}\n\nexport const addReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGE',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setRejectStatus = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REJECT_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetRecon = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_RECON_NOTES',\n    payload\n  }\n}\n\nexport const setReconNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_RECON_NOTES',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_LIMIT_TYPE',\n    payload\n  }\n}\n\nexport const resetLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_LIMIT_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReturn = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_RETURN_NOTES',\n    payload\n  }\n}\n\nexport const setReturnNote = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_RETURN_NOTES',\n    payload\n  }\n}\n","import React from 'react'\n// import Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport moment from 'moment'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Constant\nimport ClaimTypes from 'Constant/claimTypes'\n\n// Styles\nimport classes from './BatchForm.module.scss'\n\n// Validator\nimport BatchFormValidator from './BatchFormValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setShowBatchForm, setSelectedBatch } = actions\n\nconst claim_types = ClaimTypes.dropdown()\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nexport default function BatchForm ({\n  close,\n  open,\n  onSave,\n  bundle,\n  onChange,\n  disableControls,\n  onChangeDoctor,\n  disableComponents\n}) {\n  const dispatch = useDispatch()\n  const batch = useSelector(({ BatchEncoding: state }) => state.batch.selected)\n  const show = useSelector(({ BatchEncoding: state }) => state.batch.show)\n  const action = useSelector(({ BatchEncoding: state }) => state.batch.action)\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n  const saveControl = useSelector(({ BatchEncoding: state }) => state.batch.saveControl)\n  const [showPrompt, setShowPrompt] = React.useState(false)\n  const [confirmAction, setConfirmAction] = React.useState({\n    show: false,\n    message: 'Are you sure you want to save this batch?'\n  })\n\n  const [errors, setErrors] = React.useState({})\n  React.useEffect(() => {\n    setErrors({})\n  }, [])\n\n  const validate = () => {\n    const { error } = BatchFormValidator({\n      claim_type: batch.claim_type,\n      claim_source: batch.claim_source,\n      total_rcs: batch.total_rcs,\n      amount_billed: batch.amount_billed,\n      notes: batch.notes,\n      doctor_id: batch.doctor_id,\n      doctor_name: batch.doctor_name\n    })\n    setErrors(error || {})\n    if (error) setShowPrompt(true)\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      <Dialog open={show}>\n        <DialogTitle>{action}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3} className={classes.root}>\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Bundle No.' value={bundle.bundle_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='SOA No.' value={bundle.soa_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField\n                readOnly='true'\n                label='Date Received'\n                value={moment(bundle.date_received).format('MM/DD/YYYY')}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Due Date' value={moment(bundle.due_date).format('MM/DD/YYYY')} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner ID' value={bundle.facility_id} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner Name (Facility)' value={bundle.facility_name} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-id'\n                label='Medical Partner ID'\n                value={batch.doctor_id}\n                disabled={disableControls}\n                suggestions={suggestions.doctor.id}\n                onChange={(value, isSuggestionClick) =>\n                  onChangeDoctor({\n                    field: 'doctor_id',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n                error={errors.doctor_id}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-name'\n                label='Medical Partner Name (Doctor)'\n                value={batch.doctor_name}\n                disabled={disableControls}\n                suggestions={suggestions.doctor.full_name}\n                onChange={(value, isSuggestionClick) =>\n                  onChangeDoctor({\n                    field: 'doctor_name',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n                error={errors.doctor_name}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-type'\n                label='Claim Type'\n                required\n                items={claim_types}\n                value={batch.claim_type || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_type: event.target.value }))}\n                error={errors.claim_type}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-source'\n                label='Claim Source'\n                required\n                items={claim_sources}\n                value={batch.claim_source || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_source: event.target.value }))}\n                error={errors.claim_source}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldNumber\n                id='total-rcs'\n                label={'Total No. of RCS'}\n                required\n                value={batch.total_rcs}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ total_rcs: event.target.value }))}\n                error={errors.total_rcs}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldCurrency\n                id='billed-amount'\n                label='Billed Amount'\n                value={batch.amount_billed || 0}\n                disabled={disableControls}\n                // currency={false}\n                required\n                onChange={event => dispatch(setSelectedBatch({ amount_billed: event.target.value }))}\n                error={errors.amount_billed}\n              />\n            </Grid>\n\n            <Grid item xs={12} className={classes.input}>\n              <CustomTextField\n                id='notes-comments'\n                multiline\n                rows={6}\n                label='Notes/Comments'\n                value={batch.notes || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ notes: event.target.value }))}\n                error={errors.notes}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            id='cancel'\n            variant='contained'\n            color='primary'\n            className='button-negative'\n            onClick={() => {\n              dispatch(setShowBatchForm(false))\n              setErrors({})\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            disabled={saveControl}\n            onClick={() => !validate() && setConfirmAction(state => ({ ...state, show: true }))}\n          >\n            Save\n          </Button>\n          <Alert\n            open={confirmAction.show}\n            message={confirmAction.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setConfirmAction(state => ({ ...state, show: false }))}\n            onOk={() => {\n              setConfirmAction(state => ({ ...state, show: false }))\n              onSave(batch)\n            }}\n          />\n          <Alert\n            open={showPrompt}\n            message={'Please ensure that all fields are filled-up except for Notes and Comments.'}\n            okLabel='Ok'\n            onOk={() => setShowPrompt(false)}\n          />\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_number: Joi.number()\n    .label('Bundle Number')\n    .integer()\n    .greater(0)\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .required()\n    .integer()\n    .min(0),\n  date_received: Joi.date()\n    .label('Date Received')\n    .required()\n    .max('now'),\n  due_date: Joi.date()\n    .label('Due Date')\n    .required()\n    .min(Joi.ref('date_received'))\n    .messages({\n      'date.min': `\"Due Date\" should have a maximum length of Date Received`\n    }),\n  soa_number: Joi.string()\n    .trim()\n    .label('SOA No')\n    .allow('')\n    .required(),\n  total_soa_amt: Joi.number()\n    .label('Total SOA Amount')\n    .greater(0)\n    .less(100000000)\n    .required(),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Facility)')\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow(''),\n  // .messages({ 'string.empty': `'Enter N/A if Not Applicable'` })\n  // .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Doctor)')\n    .allow('')\n    // .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_soa: Joi.number()\n    .label('Total Bundle Soa Amount')\n    .required(),\n  batches_soa: Joi.number()\n    .label('Total Batches Soa Amount')\n    .valid(Joi.ref('bundle_soa'))\n    .required(),\n  bundle_rcs: Joi.number()\n    .label('Total No. of Bundle RCS')\n    .required(),\n  batches_rcs: Joi.number()\n    .label('Total No. of Batches RCS')\n    .valid(Joi.ref('bundle_rcs'))\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\n\n//  Components\nimport BundleDetails from './Components/BundleDetails/BundleDetails'\nimport BatchList from './Components/BatchList/BatchList'\nimport BatchForm from './Components/BatchForm/BatchForm'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Style\nimport classes from './BundlePage.module.scss'\nimport Typography from '@material-ui/core/Typography'\n\n// Validator\nimport BundleValidator from './BundleValidator'\nimport RcsSoaValidator from './RcsSoaValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setShowBatchForm,\n  setSelectedBatch,\n  setBatchAction,\n  initSuggestions,\n  resetSuggestionObject,\n  setSuggestionObject,\n  setSaveBatchControl\n} = actions\n\nexport default function BundlePage (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [originalState, setOriginalState] = React.useState({})\n  const [bundle, setBundle] = React.useState(null)\n  const [batches, setBatches] = React.useState([])\n  const [isReadOnly, setIsReadOnly] = React.useState(true)\n  const [searchFilter, setSearchFilter] = React.useState('')\n  const [openDialog, setOpenDialog] = React.useState(false)\n  const [openBundleDialog, setOpenBundleDialog] = React.useState({})\n  const [openRCSDialog, setOpenRCSDialog] = React.useState({})\n\n  const [openError, setOpenError] = React.useState(false)\n  const [submitStatus, setsubmitStatus] = React.useState(false)\n  const { bundle_number, user_id: isSupervisor } = props.match.params\n  const [disableComponents, setDisableComponents] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [disableControls] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ batch_numbers: [] })\n  const [disabledSubmit, setDisabledSubmit] = React.useState(true)\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getBundleDetails(bundle_number)\n    dispatch(initSuggestions())\n  }, [props.match.params.bundle_number])\n\n  React.useEffect(() => {\n    setDisabledSubmit(batches.length <= 0)\n  }, [batches])\n\n  const getBundleDetails = bundle_number => {\n    BatchEncodingServices.getBundle({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Submitted',\n          color: 'green'\n        }\n        setsubmitStatus(true)\n      }\n\n      PageTitleService(`Bundle No. ${bundle_number}`, {\n        text: _status.text,\n        color: _status.color\n      })\n\n      const { user_id } = props.match.params\n      if (user_id) {\n        BreadcrumbsService.setSelectedItems([\n          'dashboard',\n          `createdBundles:${user_id}`,\n          `specificBundle:${bundle_number}`\n        ])\n      } else {\n        BreadcrumbsService.setSelectedItems(['dashboard', `specificBundle:${bundle_number}`])\n      }\n\n      setBundle({\n        bundle_number,\n        total_rcs: data.total_rcs,\n        date_received: data.date.received,\n        due_date: data.date.due,\n        soa_number: data.soa.number,\n        total_soa_amt: data.soa.amount,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        doctor_id: data.doctor.id,\n        doctor_name: data.doctor.name,\n        status: data.status,\n        reassign_notes: data.reassign_notes\n      })\n\n      getBatches(bundle_number)\n    })\n  }\n\n  const getBatches = bundle_number => {\n    BatchEncodingServices.getBatches({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(data)\n      LoadingService.loading(false)\n    })\n  }\n\n  const createBundle = () => {\n    LoadingService.loading(true)\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      LoadingService.loading(false)\n    })\n  }\n\n  const cancelBundle = () => {\n    const { user_id } = props.match.params\n    const path = user_id ? `/batch-encoder-work/${user_id}` : '/'\n    props.history.push(path)\n  }\n\n  const handleOnSubmit = () => {\n    LoadingService.loading(true)\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: false\n    }))\n\n    BatchEncodingServices.submitBundle({\n      bundle_number: bundle.bundle_number\n    }).then(({ data: res }) => {\n      LoadingService.loading(false)\n      // getBundleDetails(bundle.bundle_number)\n      cancelBundle()\n    })\n  }\n\n  const [debounce, setDebounce] = React.useState({ doctor: null })\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setSelectedBatch({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setSelectedBatch({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'doctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnSaveBatch = newBatch => {\n    const { batch_number, ...data } = newBatch\n    dispatch(setSaveBatchControl(true))\n    if (batch_number) {\n      BatchEncodingServices.updateBatch({\n        bundle_number: bundle.bundle_number,\n        batch_number,\n        data\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state =>\n            state.map(i => {\n              if (i.batch_number === batch_number) {\n                for (let f in data) i[f] = data[f]\n                i.batch_number = data.batch_number\n              }\n              return i\n            })\n          )\n          dispatch(setSelectedBatch({}))\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    } else {\n      BatchEncodingServices.createBatch({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state => [...state, data])\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    }\n  }\n\n  const handleOnConfirmDeleteBatch = () => {\n    BatchEncodingServices.deleteMultipleBatch({\n      bundle_number: bundle_number,\n      data: forDeletion\n    })\n      .then(({ data: res }) => {\n        getBatches(bundle_number)\n        setOpenDialog(false)\n        setForDeletion({ batch_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDialog(false)\n        setOpenError(true)\n      })\n  }\n\n  const handleOnCancelDeleteBatch = () => {\n    setOpenDialog(false)\n    setOpenError(false)\n  }\n\n  const handleOnDeleteBatch = batch => {\n    setOpenDialog(true)\n  }\n\n  const handleOnEditBatch = batch => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(true)\n    dispatch(setBatchAction('Update Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: batch.batch_number,\n        doctor_id: batch.doctor.id,\n        doctor_name: batch.doctor.name,\n        claim_type: batch.claim.type,\n        claim_source: batch.claim.source,\n        total_rcs: batch.total_rcs,\n        amount_billed: batch.amount_billed,\n        notes: batch.notes\n      })\n    )\n  }\n\n  const handleOnchangeBundleDetails = ({ fieldName, fieldValue }) => {\n    setBundle(state => ({ ...state, [fieldName]: fieldValue }))\n  }\n\n  const handleOnSaveBundleDetails = () => {\n    let data = { ...bundle }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) return\n\n    const onOk = () => {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: false\n      }))\n\n      LoadingService.loading(true)\n\n      delete data.status\n      BatchEncodingServices.updateBundle({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(() => {\n        LoadingService.loading(false)\n        setIsReadOnly(true)\n      })\n    }\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: true,\n      message: 'Are you sure you want to update?',\n      handleOnOk: onOk\n    }))\n  }\n\n  const handleOnCancelBundleDetails = () => {\n    setErrors({})\n    setBundle(originalState)\n    setIsReadOnly(true)\n  }\n\n  const handleOnNewBatch = () => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(false)\n    dispatch(setBatchAction('New Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: null,\n        doctor_id: bundle.doctor_id,\n        doctor_name: bundle.doctor_name,\n        claim_type: '',\n        claim_source: '',\n        total_rcs: 0,\n        amount_billed: 0,\n        notes: ''\n      })\n    )\n  }\n\n  const ValidateBundle = () => {\n    if (validateSoaRcs()) {\n      setOpenRCSDialog(state => ({\n        ...state,\n        show: true\n        // message:\n        //   'The Total No. of RCS and Total SOA Amount of the Bundle details and the Total No. of RCS and Total Billed Amount of the Batch details do not match.'\n      }))\n    } else {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: true,\n        message: 'Are you sure you want to Submit this?',\n        handleOnOk: handleOnSubmit\n      }))\n    }\n  }\n\n  const validate = value => {\n    const { error } = BundleValidator(value)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const validateSoaRcs = () => {\n    const batches_rcs = batches.reduce((accu, curr) => accu + curr.total_rcs, 0)\n    const batches_soa = batches.reduce((accu, curr) => accu + curr.amount_billed, 0)\n    const { error } = RcsSoaValidator({\n      bundle_rcs: bundle.total_rcs,\n      batches_rcs,\n      bundle_soa: bundle.total_soa_amt,\n      batches_soa\n    })\n    let messages = []\n    if (error) {\n      if (error.batches_rcs) messages.push('The Total No. of RCS')\n      if (error.batches_soa) messages.push('The Total SOA Amount')\n      setOpenRCSDialog(state => ({\n        ...state,\n        message: messages.length > 0 ? messages.join(' and ') + ' of Bundle Details and Batch details do not match' : ''\n      }))\n    }\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      {bundle && (\n        <div className={classes.root}>\n          <BatchForm\n            bundle={bundle}\n            disableControls={disableControls}\n            onSave={handleOnSaveBatch}\n            onChangeDoctor={handleOnChangeDoctor}\n            disableComponents={disableComponents}\n          />\n\n          <Paper className={classes['bundle-details']}>\n            <BundleDetails\n              details={bundle}\n              errors={errors}\n              isReadOnly={isReadOnly}\n              onChange={handleOnchangeBundleDetails}\n            />\n            {!submitStatus && !isSupervisor && (\n              <Grid item className={classes['actions']}>\n                {isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='add-new-bundle'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={createBundle}\n                    >\n                      Add New Bundle\n                    </Button>\n                    <Button\n                      id='update-details'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={() => {\n                        setOriginalState(bundle)\n                        setIsReadOnly(false)\n                      }}\n                    >\n                      Update Details\n                    </Button>\n                  </React.Fragment>\n                )}\n\n                {!isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='cancel-update'\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                      onClick={handleOnCancelBundleDetails}\n                    >\n                      Cancel\n                    </Button>\n\n                    <Button\n                      id='save'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={handleOnSaveBundleDetails}\n                    >\n                      Save\n                    </Button>\n                  </React.Fragment>\n                )}\n              </Grid>\n            )}\n          </Paper>\n          <Typography className={classes['list-header']} variant='h6'>\n            Batches\n          </Typography>\n          <Paper className={classes['table-container']}>\n            <Grid item className={classes['actions']}>\n              <SearchTextComponent onChange={event => setSearchFilter(event.target.value)} />\n              {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-neutral'\n                  id='add-new-batch'\n                  onClick={handleOnNewBatch}\n                >\n                  Add New Batch\n                </Button>\n              )}\n            </Grid>\n            <BatchList\n              batches={batches}\n              bundle_number={bundle_number}\n              onDelete={handleOnConfirmDeleteBatch}\n              openDialog={openDialog}\n              onCancel={handleOnCancelDeleteBatch}\n              onOpen={handleOnDeleteBatch}\n              openError={openError}\n              canEdit={!submitStatus && !isSupervisor}\n              onEdit={handleOnEditBatch}\n              forDeletion={forDeletion}\n              setForDeletion={setForDeletion}\n              isBundleCompleted={bundle && bundle.status && bundle.status === 'SUBMITTED' ? 1 : false}\n              searchFilter={searchFilter}\n            />\n          </Paper>\n          <div align='right' className={classes.buttonWrapper}>\n            {bundle && bundle.status && bundle.status !== 'SUBMITTED' && forDeletion.batch_numbers.length > 0 ? (\n              <Button\n                variant='contained'\n                color='primary'\n                className={`${'button-negative'} ${classes['delete-button']}`}\n                onClick={() => {\n                  handleOnDeleteBatch(true)\n                }}\n                id='cancel'\n              >\n                Delete\n              </Button>\n            ) : (\n              ''\n            )}\n            <Button variant='contained' color='primary' className='button-negative' id='cancel' onClick={cancelBundle}>\n              Cancel\n            </Button>\n\n            {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n              <Button\n                id='submit'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                disabled={disabledSubmit}\n                onClick={ValidateBundle}\n              >\n                Submit\n              </Button>\n            )}\n          </div>\n        </div>\n      )}\n\n      <Alert\n        open={openBundleDialog.show}\n        message={openBundleDialog.message}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenBundleDialog(state => ({ ...state, show: false }))}\n        onOk={openBundleDialog.handleOnOk}\n      />\n\n      <Alert\n        open={openRCSDialog.show}\n        message={openRCSDialog.message}\n        cancelLabel='Close'\n        onCancel={() => setOpenRCSDialog(state => ({ ...state, show: false }))}\n      />\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_number: Joi.number()\n    .label('Bundle Number')\n    .integer()\n    .greater(0)\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0)\n    .required(),\n  date_received: Joi.date()\n    .label('Date Received')\n    .required()\n    .max('now'),\n  due_date: Joi.date()\n    .label('Due Date')\n    .required()\n    .min(Joi.ref('date_received'))\n    .messages({\n      'date.min': `The \"Due Date\" should be later than the Date Received`\n    }),\n  soa_number: Joi.string()\n    .trim()\n    .label('SOA No')\n    .allow('')\n    .required(),\n  total_soa_amt: Joi.number()\n    .label('Total SOA Amount')\n    .greater(0)\n    .required(),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Facility)')\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow(''),\n  // .messages({ 'string.empty': `'Enter N/A if Not Applicable'` }),\n  // .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Doctor)')\n    .allow('')\n    // .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport moment from 'moment'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Style\nimport classes from './NewBundlePage.module.scss'\n\n// Validator\nimport NewBundleValidator from './NewBundleValidator'\nexport default function NewBundlePage (props) {\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [newBundle, setNewBundle] = React.useState({\n    bundle_number: '',\n    total_rcs: 0,\n    soa_number: '',\n    facility_id: '',\n    facility_name: '',\n    total_soa_amt: 0,\n    doctor_id: '',\n    doctor_name: '',\n    date_received: moment(),\n    due_date_adjustment: 0,\n    due_date: moment().add(30, 'days')\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    doctorPartner: {\n      id: [],\n      name: [],\n      data: []\n    }\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, doctorPartner: { ...state.doctorPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = args => {\n    const { value, field } = args\n    setNewBundle(state => ({ ...state, [field]: value }))\n    handleOnChangeMedicalPartner(args)\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: {\n        id: [],\n        name: [],\n        data: []\n      },\n      doctorPartner: {\n        id: [],\n        name: [],\n        data: []\n      }\n    }))\n\n    if (field === 'facility_id' || field === 'facility_name') {\n      if (isSuggestionClick) {\n        for (let i of suggestions.medicalPartner.data) {\n          if (value === i.id || value === i.name) {\n            // Compute due date based on date received and earliest term found\n            // Fallback term is 30 days\n            let term = 30\n            if (i.earliest_term) {\n              term = parseInt(i.earliest_term)\n              if (isNaN(term) || term < 0) {\n                term = 30\n              }\n            }\n            let newDate = moment(newBundle.date_received).add(term, 'days')\n\n            setNewBundle(state => ({\n              ...state,\n              facility_id: i.id,\n              facility_name: i.name,\n              due_date: newDate,\n              due_date_adjustment: term\n            }))\n          }\n        }\n      } else {\n        switch (field) {\n          case 'facility_id':\n            getMedicalPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'facility_name':\n            getMedicalPartnerSuggestions({ value, by: 'name' })\n            break\n\n          default:\n            break\n        }\n      }\n    } else if (field === 'doctor_id' || field === 'doctor_name') {\n      if (isSuggestionClick) {\n        if (!isNaN(selectedIndex)) {\n          try {\n            const i = suggestions.doctorPartner.data[selectedIndex]\n            setNewBundle(state => ({ ...state, doctor_id: i.id, doctor_name: i.full_name }))\n          } catch (ex) {}\n        }\n      } else {\n        switch (field) {\n          case 'doctor_id':\n            getDoctorPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'doctor_name':\n            getDoctorPartnerSuggestions({ value, by: 'full_name' })\n            break\n\n          default:\n            break\n        }\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    PageTitleService(`Create New Bundle`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'newBundle'])\n    setNewBundle(state => ({ ...state, bundle_number: props.match.params.bundle_number }))\n  }, [props.match.params.bundle_number])\n\n  const validate = () => {\n    const data = {\n      ...newBundle,\n      date_received: moment(newBundle.date_received).toISOString(),\n      due_date: moment(newBundle.due_date).toISOString()\n    }\n\n    const { error } = NewBundleValidator({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSave = () => {\n    setDisableControls(true)\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n\n    const data = {\n      ...newBundle,\n      date_received: moment(newBundle.date_received).toISOString(),\n      due_date: moment(newBundle.due_date).toISOString()\n    }\n\n    if (validate()) {\n      setDisableControls(false)\n      return\n    }\n\n    LoadingService.loading(true)\n\n    // Remove date due adjustment; it will cause an error on server\n    delete data.due_date_adjustment\n\n    BatchEncodingServices.updateBundle({\n      data,\n      bundle_number: newBundle.bundle_number\n    }).then(res => {\n      props.history.push(`/bundles/${newBundle.bundle_number}`)\n    })\n  }\n\n  const cancel = () => props.history.push(`/`)\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['upload-container']}>\n        <Link to={`/bundles/upload-soa`}>\n          <Typography id='upload-soa-button' variant='subtitle2' className={`bold text-link ${classes.label}`}>\n            + Upload SOA\n          </Typography>\n        </Link>\n      </div>\n\n      <Paper className={classes.form}>\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-bundle-number'\n              label='Bundle No.'\n              value={newBundle.bundle_number}\n              fullWidth\n              disabled\n              error={errors.bundle_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldNumber\n              id='create-new-bundle-total-rcs'\n              required\n              label='Total No. of RCS'\n              value={newBundle.total_rcs}\n              fullWidth\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_rcs: e.target.value }))}\n              error={errors.total_rcs}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-date-received'\n              label='Date Received'\n              value={newBundle.date_received}\n              disabled={disableControls}\n              onChange={date => {\n                // Adjust due date accordingly to date received and term adjustment\n                const due_date = date.add(newBundle.due_date_adjustment, 'days').toISOString()\n\n                setNewBundle(state => ({ ...state, date_received: date.toISOString(), due_date: due_date }))\n              }}\n              error={errors.date_received}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-due-date'\n              label='Due Date'\n              disabled={disableControls}\n              value={newBundle.due_date}\n              onChange={date => setNewBundle(state => ({ ...state, due_date: date.toISOString() }))}\n              error={errors.due_date}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-soa-number'\n              label='SOA No.'\n              fullWidth\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, soa_number: e.target.value }))}\n              error={errors.soa_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldCurrency\n              id='create-new-bundle-total-soa'\n              required\n              label='Total SOA Amount'\n              fullWidth\n              value={newBundle.total_soa_amt}\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_soa_amt: e.target.value }))}\n              error={errors.total_soa_amt}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-id'\n              required\n              label='Medical Partner ID'\n              value={newBundle.facility_id}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner.id}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n              }\n              error={errors.facility_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-name'\n              required\n              label='Medical Partner Name (Facility)'\n              value={newBundle.facility_name}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner.name}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeAutosuggest({ field: 'facility_name', value, isSuggestionClick })\n              }\n              error={errors.facility_name}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-docotr-partner-id'\n              label='Medical Partner ID'\n              value={newBundle.doctor_id}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner.id}\n              onChange={(value, isSuggestionClick, selectedIndex) =>\n                handleOnChangeAutosuggest({ field: 'doctor_id', value, isSuggestionClick, selectedIndex })\n              }\n              error={errors.doctor_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-doctor-name'\n              label='Medical Partner Name (Doctor)'\n              value={newBundle.doctor_name}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner.full_name}\n              onChange={(value, isSuggestionClick, selectedIndex) =>\n                handleOnChangeAutosuggest({ field: 'doctor_name', value, isSuggestionClick, selectedIndex })\n              }\n              error={errors.doctor_name}\n            />\n          </Grid>\n        </Grid>\n\n        <div className={classes.actions}>\n          <Button variant='contained' color='primary' className='button-negative' onClick={cancel} id='cancel'>\n            Cancel\n          </Button>\n\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={() =>\n              !validate() &&\n              setOpenAlert(state => ({\n                ...state,\n                show: true,\n                message: 'Are you sure you want to save this?'\n              }))\n            }\n            disabled={disableControls}\n            id='save'\n          >\n            Save\n          </Button>\n\n          <Alert\n            open={openAlert.show}\n            message={openAlert.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenAlert(state => ({ ...state, show: false }))}\n            onOk={handleOnSave}\n          />\n        </div>\n      </Paper>\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ce')\n\nexport default class ClaimsEncodingServices {\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getLetterNotice ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // static getDropdown (params) {\n  //   return axios({\n  //     url: '/lookups/dropdown',\n  //     method: 'GET',\n  //     params,\n  //     headers: { [ExcludeErrorConstants['all']]: 1 }\n  //   })\n  // }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getICDSynonyms (params) {\n    return axios({\n      url: `/lookups/icd-10-synonym`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","// TODO: Uncomment\nimport moment from 'moment'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport claimTypes from 'Constant/claimTypes'\n\n/**\n * SOA ETL Controller. \n * An ETL (Extract Transform Load) controller \"prototype/function\" class intended to contain ETL\n * logic for extracting, transforming and loading SOA import data.\n *\n * As of the moment, extraction and loading is being done elsewhere outside this\n * utility. So this class is currently only performing the \"Transformation phase\"\n */\nfunction SoaEtlController() { }\n\nSoaEtlController.MINIMUM_KEYS = {\n  BUNDLE_SOA_NUM: 'BUNDLE_SOA_NUM',\n  // BUNDLE_RCS_NUM: 'BULDE_RCS_NUM',\n  BUNDLE_RCS_DATE: 'BUNDLE_RCS_DATE',\n\n  BUNDLE_FACILITY_NAME: 'BUNDLE_FACILITY_NAME',\n  BUNDLE_FACILITY_CODE: 'BUNDLE_FACILITY_CODE',\n\n  BATCH_CLAIMS_SOURCE: 'BATCH_CLAIMS_SOURCE',\n  BATCH_CLAIM_TYPE: 'BATCH_CLAIM_TYPE',\n\n  CLAIM_DATE_AVAILMENT: 'CLAIM_DATE_AVAILMENT',\n  CLAIM_DATE_ADMITTED: 'CLAIM_DATE_ADMITTED',\n  CLAIM_DATE_DISCHARGE: 'CLAIM_DATE_DISCHARGE',\n  CLAIM_LOA_NUM: 'CLAIM_LOA_NUM',\n  CLAIM_APPROVAL_CODE: 'CLAIM_APPROVAL_CODE',\n  CLAIM_MEMBER_NUM: 'CLAIM_MEMBER_NUM',\n  CLAIM_MEMBER_NAME: 'CLAIM_MEMBER_NAME',\n  CLAIM_DIAGNOSIS_NAME: 'CLAIM_DIAGNOSIS_NAME',\n  CLAIM_DIAGNOSIS_CODE: 'CLAIM_DIAGNOSIS_CODE',\n\n  CLAIM_DOCTOR_NAME: 'CLAIM_DOCTOR_NAME',\n  CLAIM_DOCTOR_AMOUNT: 'CLAIM_DOCTOR_AMOUNT',\n\n  CLAIM_PROCEDURE_NAME: 'CLAIM_PROCEDURE_NAME',\n  CLAIM_PROCEDURE_AMOUNT: 'CLAIM_PROCEDURE_AMOUNT',\n\n  CLAIM_HOSPITAL_ITEM_NAME: 'CLAIM_HOSPITAL_ITEM_NAME',\n  CLAIM_HOSPITAL_ITEM_AMOUNT: 'CLAIM_HOSPITAL_ITEM_AMOUNT'\n}\n\nSoaEtlController.COLUMN_TEMPLATES = {\n  DEFAULT:\n  {\n    // Bundle fields\n    'SOA No.': SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM,\n    // 'RCSNum': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM,\n    'RCSNum': SoaEtlController.MINIMUM_KEYS.CLAIM_LOA_NUM,\n    'RCS Date': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE,\n\n    // Batch fields\n    'Claim Type': SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE,\n\n    // Claim fields\n\n    // Claim fields - date\n    'Date of Availment': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_AVAILMENT,\n    'Date Admitted': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED,\n    'Date Discharge': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE,\n\n    'Approval Code / LOE No.': SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE,\n\n    'Member Number': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM,\n    'Patient Name': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME,\n\n    'Diagnosis': SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME,\n    'ICD10 Code': SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE,\n\n    // Claim fields - line items\n    'Doctors Name': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME,\n    'PF Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT,\n\n    'Procedure': SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME,\n    'Proc Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT,\n\n    'Hospital Item': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME,\n    'HospItem Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT\n  }\n}\n\n/**\n * Performs transformation of specified data rows using the specified data mapping\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n */\nSoaEtlController.transform = function (dataRows, dataMapping, defaults = {}) {\n  console.log('soa_etl', 'transform')\n\n  // Initial check parameters\n  if (!dataRows || !dataMapping || !dataMapping.columns || !dataMapping.fields[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]) throw { error: 'invalid parameters' }\n  const prepData = SoaEtlController._transformPreviewDataToPrepData(dataRows, dataMapping, defaults)\n  console.log(prepData)\n\n  const bundle = SoaEtlController._transformPrepDataToHierarchicalData(prepData)\n  console.log(JSON.stringify(bundle, null, 2))\n\n  return bundle\n}\n\n/** \n * Loads the specified bundle data unto the Claims server by invoking the appropriate API calls\n * for the bundle, batch and claims information found in the bundle data.\n * \n * @param bundle bundle data from transform()\n */\nSoaEtlController.loadToApi = function (bundle, successCallback) {\n\n  let promise = new Promise(function (resolve, reject) {\n    // TODO: refactor; callback hell\n\n    // Invoke Create Bundle\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      const bundleNumber = data\n      console.log(bundleNumber)\n\n      bundle.bundle_number = bundleNumber\n\n      const bundleParam = { ...bundle }\n      delete bundleParam.batches\n\n      // Invoke Update Bundle\n      BatchEncodingServices.updateBundle({ bundle_number: bundleNumber, data: bundleParam }).then(res => {\n\n        // Create promise for each add batch operation (which contains add-claims operation)\n        const addBatchPromises = bundle.batches.map(batch => {\n          const batchParam = { ...batch }\n          delete batchParam.claims\n\n          // Create single promise for add batch\n          const promise = new Promise((resolveBatchPromise, rejectBatchPromise) => {\n\n            // Call create batch API\n            BatchEncodingServices.createBatch({ data: batchParam, bundle_number: bundleNumber })\n              .then(res => {\n                const { data } = res.data\n                batch.batch_number = data.batch_number\n\n                async function addClaims() {\n                  for (let i = 0; i < batch.claims.length; i++) {\n                    const claim = batch.claims[i]\n                    // Invoke create claim\n                    await ClaimsEncodingServices.addClaim({ batch_number: batch.batch_number, data: claim })\n                  }\n                  resolveBatchPromise()\n                }\n\n                // Create claims for batch\n                addClaims()\n\n              })\n              .catch(() => {\n                rejectBatchPromise('Batch creation failed')\n              })\n          })\n\n          return promise\n        })\n\n        // Note: VNI requirement, is to not perform automatic bundle submission \n        //       and consequentially, no automatic claims creation for claims under the\n        //       automatically created batches. That is the function requirement. \n        //       The technical operation however, needs claims to be created but just \n        //       NOT visible as of yet to claims encoders (and up).\n        // // Todo: refactor to wait for all batches to be created before submitting bundle\n        // BatchEncodingServices.submitBundle({ bundle_number: bundleNumber }).then(res => {\n        //   if (successCallback) { successCallback();} \n        //   resolve()\n        //   // batch.claims.forEach(element => {\n        //   //   let claim = element\n        //   // })\n        // }).catch(() => {\n        //   reject('Bundle submission failed')\n        // })\n\n\n        // PromiseUtil.executeInSequence(addBatchPromises)\n        Promise.all(addBatchPromises)\n          .then(() => {\n            console.log('success SOA loading unto API')\n            //alert('success SOA loading unto API')\n            resolve(bundle.bundle_number)\n          })\n\n      }).catch(() => {\n        console.log('failed SOA loading unto API')\n        //alert('failed SOA loading unto API')\n        reject('Bundle creation failed')\n      })\n\n    })\n  });\n\n  return promise\n}\n\n\n/**\n * Performs transformation of \"preview data rows\" to \"preparation data rows\"\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n *\n * @return mapped-out data rows\n */\nSoaEtlController._transformPreviewDataToPrepData = function (dataRows, dataMapping, defaults = {}) {\n  const outputEntries = []\n  let prevEntry = {}\n  dataRows.forEach(dataEntry => {\n    const outputEntry = {}\n    let hasSingleValue = false\n    Object.keys(dataMapping.columns).forEach(columnKey => {\n      let dataValue = dataEntry[columnKey]\n      let outputKey = dataMapping.columns[columnKey]\n\n      // If no value for the key\n      if (!dataValue || dataValue.trim().length === 0) {\n        dataValue = ''\n        // Attempt to use previous row's value\n        // dataValue = prevEntry[outputKey]\n        // if (!dataValue) dataValue = ''\n      } else {\n        hasSingleValue = true\n      }\n\n      // Store upon output entry\n      outputEntry[outputKey] = dataValue.trim()\n    })\n\n    if (hasSingleValue) {\n      if (defaults) {\n        Object.keys(defaults).forEach(key => {\n          outputEntry[key] = defaults[key]\n        })\n      }\n\n      Object.keys(dataMapping.fields).forEach(fieldKey => {\n        let value = outputEntry[fieldKey]\n        if (value && value.length > 0) {\n          outputEntry[fieldKey] = dataMapping.fields[fieldKey][value]\n          if (!outputEntry[fieldKey]) throw 'Missing claim type or wrong data format in the uploaded SOA file.'\n        }\n      })\n\n      outputEntries.push(outputEntry)\n    }\n    // Keep track of previews row\n    prevEntry = outputEntry\n  })\n  return outputEntries\n}\n\n/** \n * Transforms Preparation Data into Hierarchical Data (bundle, batches and claims).\n * \n * @param prepDataRows output from _transformPreviewDataToPrepData()\n * \n * @return bundle object which includes underneath batches and claims objects\n */\nSoaEtlController._transformPrepDataToHierarchicalData = function (prepDataRows) {\n  let prevPrepEntry = {}\n\n  let bundle = null\n  let currentBatch = null\n  let currentClaim = null\n  let totalGrossAmount = 0\n\n  prepDataRows.forEach(dataEntry => {\n\n    const soaNumber = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM]\n    if (!bundle) {\n      // let rcsTotal = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM]\n      // try {\n      //   rcsTotal = parseInt(rcsTotal)\n      // } catch {\n      //   throw 'Error: Invalid Total RCS (' + rcsTotal + ')'\n      // }\n\n      // bundle = {\n      //   soa: { number: soaNumber, amount: 0.0 },\n      //   date: { received: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE] },\n      //   facility: {\n      //     id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n      //     name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]\n      //   },\n      //   total_rcs: rcsTotal,\n      //   batches: []\n      // }\n      const dateReceived = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]\n      bundle = {\n        soa_number: soaNumber,\n        total_soa_amt: 0.0,\n\n        // TODO: uncomment\n        date_received: moment(dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]).format('MM/DD/YYYY'),\n        due_date: moment(dateReceived).add(30, 'days').format('MM/DD/YYYY'),\n\n        facility_id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n        facility_name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME],\n        // total_rcs: rcsTotal,\n        total_rcs: 0,\n        doctor_id: '',\n        doctor_name: '',\n        batches: []\n      }\n    }\n\n    // Enforce there is only SOA number\n    if (soaNumber !== '' && soaNumber !== bundle.soa_number) {\n      //throw 'Error: Another SOA Number found (' + soaNumber + ')'\n      throw 'Unable to upload SOA file. Please ensure there is one SOA no. only.'\n    }\n\n    // Fetch claim type and check if there is a change\n    const claimType = dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]\n    if (!currentBatch || (claimType != '' && claimType != currentBatch.claim_type)) {\n      // currentBatch = {\n      //   claim: {\n      //     type: claimType,\n      //     source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n      //   },\n      //   claims: []\n      // }\n\n      currentBatch = {\n        claim_type: claimType,\n        claim_source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n        doctor_id: '',\n        doctor_name: '',\n        total_rcs: 0,\n        amount_billed: 0.0,\n        notes: \"SYSTEM GENERATED BATCH VIA SOA UPLOAD\\n\",\n        claims: []\n      }\n\n      bundle.batches.push(currentBatch)\n    }\n\n    // Fetch approval code and check if there is a change\n    const approvalCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE]\n    if (!currentClaim || (approvalCode != '' && approvalCode != currentClaim[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE])) {\n\n      // Increment total RCS for the parent batch\n      currentBatch.total_rcs += 1\n      bundle.total_rcs += 1\n\n      const memberName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME]\n      const nameParts = memberName.split(',')\n\n      // currentClaim = {\n      //   member: {\n      //     account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n      //     last_name: nameParts[0].trim(),\n      //     first_name: nameParts[1].trim(),\n      //     middle_name: '',\n      //   },\n      //   approval_code: approvalCode,\n      //   professional_fees: [],\n      //   hospital_items: [],\n      //   procedures: []\n      // }\n\n      currentClaim = {\n        member_account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n        member_first_name: nameParts[1].trim(),\n        member_middle_name: '',\n        member_last_name: nameParts[0].trim(),\n\n        facility_id: bundle.facility_id,\n        facility_name: bundle.facility_name,\n\n        approval_code: approvalCode,\n        loa_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_LOA_NUM],\n\n        diagnosis: [],\n        professional_fees: [],\n        hospital_items: [],\n        procedures: [],\n\n        date_from: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED],\n        date_to: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE],\n\n        claim_sub_type: 'Surgical',\n        claim_sub_sub_type: 'Physical',\n\n        with_corporate_guarantee: '',\n        loa_notes: '',\n\n      }\n\n      if (currentBatch.claim_type === 'In Patient') {\n        currentClaim.room_type = 'WARD'\n        currentClaim.room_rate = 0.0\n        currentClaim.pro_id = 'N/A'\n        currentClaim.pro_name = 'N/A'\n      }\n\n      currentBatch.claims.push(currentClaim)\n    }\n\n    // Check for diagnosis entries  \n    const diagnosisName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME]\n    const diagnosisCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE]\n    if (diagnosisName && diagnosisCode) {\n      const flag = currentClaim.diagnosis.length == 0\n      currentClaim.diagnosis.push({ code: diagnosisCode, description: diagnosisName, primary: flag })\n    }\n\n    let lineItem = null\n    let lineAmount = null\n\n    // Check for line item - professional fee \n    lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME]\n    lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT]\n    if (lineItem && lineAmount) {\n      try {\n        lineAmount = parseFloat(lineAmount)\n      } catch {\n        lineAmount = 0.0\n      }\n \n      bundle.total_soa_amt += lineAmount\n      currentBatch.amount_billed += lineAmount\n      \n      currentClaim.professional_fees.push({\n        doctor_name: lineItem, doctor_id: \"unknown\", gross_amount: lineAmount,\n        specialization: \"unknown\", vat_amount: 0, amount_paid_by_member: 0,\n        philhealth_amount_paid: 0, philhealth_remarks: \"\", amount_not_covered: 0, reason: \"\", amount_due_from_member: 0, reason_for_charging_member: \"\"\n      })\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Procedure') {\n      // Check for line item - hospital item \n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.hospital_items.push({\n          name: lineItem, item_code: \"unknown\", gross_amount: lineAmount,\n          vat_amount: 0, amount_paid_by_member: 0, philhealth_amount_paid: 0, philhealth_remarks: \"\", amount_not_covered: 0, reason: \"\", amount_due_from_member: 0, reason_for_charging_member: \"\"\n        })\n      }\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Consultation') {\n        // Check for line item - procedure\n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.procedures.push({\n          description: lineItem, gross_amount: lineAmount,\n          code: \"unknown\", vat_amount: 0, amount_paid_by_member: 0, philhealth_amount_paid: 0, philhealth_remarks: \"\"\n        })\n      }\n    }\n\n  })\n\n  return bundle\n}\n\n\n// TODO: set to false on normal operation; set to true only for debugging purposes\nSoaEtlController.DEBUG = false\n\nif (SoaEtlController.DEBUG) {\n  SoaEtlController.test = function () {\n\n    const dataRows = [\n      {\n        'SOA No.': 'SOA0001',\n        'RCSNum': '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '5556',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Yu, Eusebio',\n        'Diagnosis': 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 0\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': 'Cardiac Arrest',\n        'ICD10 Code': 'C0055',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 1\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': 'Dr. ABC',\n        'PF Amt': '500',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 2\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': 'X-Ray',\n        'Proc Amt': '1000',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 3\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': 'Dextrose',\n        'HospItem Amt': ' 850.00 ',\n        '__index__': 4\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 5\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 6\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 7\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 8\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 9\n      },\n      {\n        'SOA No.': 'SOA0001',\n        'RCSNum': '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '6667',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Conan, Detective',\n        'Diagnosis': 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': 'Dr. Evil',\n        'PF Amt': '100000.00',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 10\n      },\n    ]\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]:\n        {\n          'IP': 'In Patient',\n          'OPP': 'Out Patient Procedure',\n          'OPC': 'Out Patient Consultation'\n        }\n\n      }\n    }\n    console.log(dataMapping)\n\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: 'Hospital',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: 'HOS000012',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: 'Davao Doctors Hospital',\n    }\n\n    const bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n    SoaEtlController.loadToApi(bundle)\n  }\n\n  // TODO: comment out\n  // SoaEtlController.test()\n}\n\n// TODO: Uncomment\nexport default SoaEtlController\n","import XLSX from 'xlsx'\n\nexport default async function XLSXParser ({ file, onComplete }) {\n  let headers = null\n  const results = []\n\n  var reader = new FileReader()\n  reader.onload = function (e) {\n    const workbook = XLSX.read(e.target.result, { type: 'binary' })\n\n    const sheet = workbook.Sheets[workbook.SheetNames[0]]\n    const data = XLSX.utils.sheet_to_json(sheet, { raw: false, header: 1 })\n    headers = data.shift()\n\n    for (let index = 0; index < data.length; index++) {\n      const _item = {}\n      headers.map(i => (_item[i] = ''))\n\n      data[index].map((value, index) => (_item[headers[index]] = value))\n\n      if (index === data.length - 1 && !data[index].length) continue\n\n      results.push(_item)\n    }\n\n    onComplete({ headers, results })\n  }\n\n  reader.readAsBinaryString(file)\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport Parser from './../../Parser'\n\n// Style\nimport classes from './UploadSpace.module.scss'\n\nconst Progress = withStyles({\n  root: {\n    height: 15,\n    borderRadius: 20,\n    backgroundColor: '#c7c7c7'\n  },\n  bar: {\n    borderRadius: 20,\n    backgroundColor: '#00ab00'\n  }\n})(LinearProgress)\n\nexport default function UploadSpace (props) {\n  const { onSelectFile } = props\n  const dialogRef = React.useRef()\n\n  const [dragged, setDragged] = React.useState(false)\n  const [fileLoaded, setFileLoaded] = React.useState()\n  const [progress, setProgress] = React.useState(0)\n\n  const handleOnClick = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    dialogRef.current.click()\n  }\n\n  const handleOnChangeFile = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    const file = event.target.files[0]\n\n    if (!file) return\n\n    handleParse(file)\n  }\n\n  const handleOnDrag = state => e => {\n    e.preventDefault()\n    e.stopPropagation()\n    setDragged(state)\n  }\n\n  const handleDrop = e => {\n    setDragged(false)\n    e.preventDefault()\n    e.stopPropagation()\n\n    // TODO if multiple file and invalid file type\n    const [file] = e.dataTransfer.files\n\n    handleParse(file)\n  }\n\n  const handleParse = file => {\n    setFileLoaded(true)\n\n    console.log(file)\n    Parser({\n      file,\n      onComplete: ({ results, headers }) => {\n        setProgress(100)\n        setTimeout(() => onSelectFile({ items: results, headers, fileName: file.name }), 1000)\n      }\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {!fileLoaded && (\n        <div\n          className={`${classes.root} ${dragged && classes.dragged}`}\n          onDrop={handleDrop}\n          onDragOver={handleOnDrag(true)}\n          onDragLeave={handleOnDrag(false)}\n        >\n          <div className={`${classes.container} ${classes.clickable}`} onClick={handleOnClick}>\n            <FontAwesomeIcon icon='file-upload' className={classes.icon} />\n            <Typography variant='subtitle2' className={classes.label}>\n              Click or drag/drop file to preview\n            </Typography>\n\n            <div className={classes.warning}>\n              <Typography variant='subtitle2' className={classes.label}>\n                Make sure the dates are in the format where the\n              </Typography>\n              <Typography variant='subtitle2' className={classes.label}>\n                <span>month is written first</span> (ex. MM/DD/YYYY or YYYY/MM/DD)\n              </Typography>\n            </div>\n          </div>\n\n          <input\n            id='file-dialog'\n            type='file'\n            ref={dialogRef}\n            style={{ display: 'none' }}\n            accept='.xlsx, .xls, .csv'\n            onChange={handleOnChangeFile}\n          />\n        </div>\n      )}\n\n      {fileLoaded && (\n        <div className={classes.root}>\n          <div className={classes.container}>\n            <div className={classes['progress-container']}>\n              <Progress variant='determinate' value={progress} />\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\n\n// Styles\nimport classes from './DynamicTable.module.scss'\n\nexport default function DynamicTable (props) {\n  const { headers, items, fileName } = props.data\n  const { onRemoveFile } = props\n  const { onDetectDataRows } = props\n\n  const [tableState, setTableState] = React.useState({\n    limit: 10,\n    page: 1\n  })\n\n  const [selectedItems, setSelectedItems] = React.useState([])\n\n  React.useEffect(() => {\n    handleOnChangeItems({})\n  }, [])\n\n  React.useEffect(() => {\n    onDetectDataRows(selectedItems)\n  }, [selectedItems])\n\n  const handleOnTableChange = params => {\n    setTableState(state => ({ ...state, ...params }))\n    handleOnChangeItems(params)\n  }\n\n  const handleOnChangeItems = ({ page = 1, limit = 10 }) => {\n    const _items = []\n\n    const startAt = (page - 1) * limit\n    const endAt = page * limit\n\n    for (let index = startAt; index < endAt; index++) {\n      const item = items[index]\n      if (!item) break\n\n      const hasValue = Object.keys(item).find(key => { return item[key] && item[key].trim().length > 0 })\n      if (hasValue) _items.push({ ...item, __index__: index })\n    }\n\n    setSelectedItems(_items)\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['file-name-container']}>\n        <Typography id='file-name' variant='subtitle2' className={classes['file-name']}>\n          {fileName}\n        </Typography>\n\n        <IconButton size='small'>\n          <FontAwesomeIcon icon='minus-circle' className={classes.icon} onClick={onRemoveFile} />\n        </IconButton>\n      </div>\n\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              <TableCell id={`column-row-number`}>#</TableCell>\n\n              {headers.map(item => (\n                <TableCell key={item} id={`column-${item}`}>\n                  {item}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          body={selectedItems.map(item => (\n            <TableRow key={`${JSON.stringify(item)}-${item.__index__}`}>\n              <TableCell id={`row-${item.__index__}`}>{item.__index__ + 1}</TableCell>\n\n              {headers.map(header => (\n                <TableCell key={`item-${header}-${item.__index__}`}>{item[header]}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n          count={setSelectedItems.length}\n          page={tableState.page}\n          limit={tableState.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={handleOnTableChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\n// Shared Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './DataPairs.module.scss'\nimport { Typography } from '@material-ui/core'\n\nconst DataPair = props => {\n  const { index, sources, targets, source, target } = props\n  const { onClickRemove, onChangeSource, onChangeTarget } = props\n\n  return (\n    <div className={classes.child}>\n      <div className={classes.source}>\n        {/* <DropDown items={sources} value={source} onChange={onChangeSource} /> */}\n        <TextField\n          className={classes.name}\n          id={`input-source-${index}`}\n          value={source}\n          onChange={onChangeSource}\n          autoFocus\n          fullWidth\n        />\n      </div>\n      <div className={classes.target}>\n        <DropDown items={targets} value={target} onChange={onChangeTarget} />\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickRemove}>Remove</Button>\n      </div>\n    </div>\n  )\n}\nexport default function DataPairContainer (props) {\n  const { headers = ['Source', 'Target'], fields = [], sources, targets } = props\n  const { onClickAddNew, onClickRemove, onChangeSource, onChangeTarget } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        {headers.map((head, index) => (\n          <Typography key={`heade-${index}`} variant='h6'>\n            {head}\n          </Typography>\n        ))}\n      </div>\n      <div className={classes.children}>\n        {fields.map((field, index) => (\n          <DataPair\n            key={`field-${index}`}\n            index={index}\n            sources={sources}\n            targets={targets}\n            source={field.source || ''}\n            target={field.target || ''}\n            onChangeSource={event => onChangeSource({ index, value: event.target.value })}\n            onChangeTarget={event => onChangeTarget({ index, value: event.target.value })}\n            onClickRemove={event => onClickRemove({ index })}\n          />\n        ))}\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickAddNew}>Add New</Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n// Shared Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport DataPairContainer from './DataPairs/DataPairs'\n\n// Styles\nimport classes from './FieldMapper.module.scss'\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nconst dropdown_source = [\n  { value: 'OP', text: 'OP' },\n  { value: 'PF', text: 'PF' },\n  { value: 'IP', text: 'IP' }\n]\n\nconst dropdown_target = [\n  { value: 'In Patient', text: 'In Patient' },\n  { value: 'Out Patient Procedure', text: 'Out Patient Procedure' },\n  { value: 'Out Patient Consultation', text: 'Out Patient Consultation' },\n  { value: 'Reimbursement', text: 'Reimbursement' },\n  { value: 'Emergency', text: 'Emergency' },\n  { value: 'Dental', text: 'Dental' },\n  { value: 'Medicine Allowance', text: 'Medicine Allowance' },\n  { value: 'APE', text: 'APE' },\n  { value: 'ECU', text: 'ECU' },\n  { value: 'Pharmacy', text: 'Pharmacy' },\n  { value: 'PPE', text: 'PPE' },\n  { value: 'Medical Supplies', text: 'Medical Supplies' },\n  { value: 'Clinic Management', text: 'Clinic Management' }\n]\n\nexport default function FieldMapper (props) {\n  // Variables\n  const { sources = dropdown_source, targets = dropdown_target, claimSources = claim_sources } = props\n\n  // Services\n  const { ApiService } = props\n\n  // Callbacks\n  const { onSaveSuccess } = props\n  const { onChangeHeaderInputs } = props\n  const { onChangeClaimTypeDataMapping } = props\n\n  // Local Variables\n  const [facilityTemplate, setFacilityTemplate] = React.useState({\n    facility_id: '',\n    facility_name: '',\n    claim_source: ''\n  })\n  const [template, setTemplate] = React.useState({\n    id: '',\n    name: '',\n    isDefault: false,\n    fields: []\n  })\n\n  const [templates, setTemplates] = React.useState([])\n\n  const [suggestions, setSuggestions] = React.useState({\n    facility: {}\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null\n  })\n\n  const [dialog, setDialog] = React.useState({\n    show: false,\n    name: '',\n    isDefault: false,\n    error: {}\n  })\n\n  const [alertDialog, setAlertDialog] = React.useState({\n    show: false,\n    mesage: '',\n    okLabel: 'Okay'\n  })\n\n  // Listeners\n  React.useEffect(() => {\n    getTemplates()\n  }, [])\n\n  React.useEffect(() => {\n    onChangeHeaderInputs(facilityTemplate)\n  }, [facilityTemplate])\n\n  React.useEffect(() => {\n    onChangeClaimTypeDataMapping(template.fields)\n  }, [template])\n\n  // Fetchers\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestions(state => ({ ...state, facility: { [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getTemplates = () => {\n    ApiService.getTemplates().then(res => {\n      const { data } = res.data\n      setTemplates(data.map(data => ({ ...data, value: data.name, text: data.name })))\n      const _default = data.find(d => d.is_default === true)\n      if (_default) {\n        setTemplate({ id: _default._id, name: _default.name, fields: _default.fields, isDefault: _default.is_default })\n      }\n    })\n  }\n\n  // Events\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setFacilityTemplate(state => ({ ...state, [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          setFacilityTemplate(state => ({ ...state, facility_id: i.id, facility_name: i.name }))\n        }\n      }\n    } else {\n      setSuggestions(state => ({ ...state, facility: [] }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const handleOnClickAddNewTemplate = () => {\n    setDialog({ show: true, name: '', isDefault: false, error: {} })\n  }\n\n  const handleOnChangeTemplate = ({ value, text }) => {\n    const _template = templates.find(t => t.value === value)\n    setTemplate({ id: _template._id, name: _template.name, fields: _template.fields, isDefault: _template.is_default })\n  }\n\n  const handleOnChangeDialog = ({ field, value }) => {\n    setDialog(state => ({ ...state, [field]: value }))\n  }\n\n  const onClickAddField = () => {\n    const _fields = template.fields\n    const last = _fields[_fields.length - 1]\n    if (last && (last.source === '' || last.target === '')) return\n    _fields.push({ source: '', target: '' })\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onRemoveField = ({ index }) => {\n    const _fields = template.fields\n    _fields.splice(index, 1)\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeSource = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], source: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeTarget = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], target: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const doValidateTemplate = () => {\n    if (dialog.name === '') return false\n\n    return true\n  }\n\n  const doValidateFacilityTemplate = () => {\n    if (template.fields.length < 1) return false\n    template.fields.forEach(field => {\n      if (field.source === '' || field.target === '') {\n        return false\n      }\n    })\n\n    return true\n  }\n\n  const handleOnSaveTemplateDialog = () => {\n    if (!doValidateTemplate()) {\n      setAlertDialog({\n        show: true,\n        message: 'Enter Template Name',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: dialog.isDefault, fields: [] },\n      template_name: dialog.name\n    }).then(res => {\n      const { data } = res.data\n      setDialog({\n        show: false,\n        name: '',\n        isDefault: false,\n        error: {}\n      })\n      getTemplates()\n      setTemplate({ id: data._id, name: data.name, isDefault: data.is_default, fields: data.fields })\n    })\n  }\n\n  const handleOnSaveFacilityTemplate = () => {\n    if (!doValidateFacilityTemplate()) {\n      setAlertDialog({\n        show: true,\n        message:\n          'SOA details and mapping of data is required. Please complete first the SOA details and mapping of data to continue.',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: template.isDefault, fields: template.fields },\n      template_name: template.name\n    }).then(res => {\n      const { data } = res.data\n      ApiService.storeFacilityTemplate({\n        data: {\n          facility_name: facilityTemplate.facility_name,\n          claim_source: facilityTemplate.claim_source,\n          template_id: data._id\n        },\n        facility_id: facilityTemplate.facility_id\n      }).then(res => {\n        setAlertDialog({\n          show: true,\n          message: 'SOA details mapping of data successfully saved.',\n          okLabel: 'Okay'\n        })\n        onSaveSuccess({ template, facility: facilityTemplate })\n      })\n    })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-id'\n              required\n              label='Medical Partner ID'\n              value={facilityTemplate.facility_id}\n              suggestions={suggestions.facility.id}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeFacility({\n                  field: 'facility_id',\n                  value,\n                  isSuggestionClick\n                })\n              }\n            />\n          </div>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-facility-name'\n              required\n              label='Medical Partner (Facility) Name'\n              value={facilityTemplate.facility_name}\n              suggestions={suggestions.facility.name}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeFacility({\n                  field: 'facility_name',\n                  value,\n                  isSuggestionClick\n                })\n              }\n            />\n          </div>\n          <div className={classes['input']}>\n            <DropDown\n              id='claim-source'\n              label='Claim Source'\n              required\n              items={claimSources}\n              value={facilityTemplate.claim_source}\n              onChange={event => setFacilityTemplate(state => ({ ...state, claim_source: event.target.value }))}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <Typography variant='h6' className={classes.title}>\n            Data Values\n          </Typography>\n        </div>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <DropDown\n              id='data-templates'\n              label='Data Mapping Template'\n              required\n              items={templates}\n              value={template.name}\n              onChange={event =>\n                event.target.value !== 'add-new'\n                  ? handleOnChangeTemplate({ value: event.target.value, text: event.target.text })\n                  : handleOnClickAddNewTemplate()\n              }\n              addNew={{\n                show: true,\n                text: '+ Add New Data Map',\n                value: 'add-new'\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes.field}>\n            <div className={classes.label}>\n              <Typography>Claim Type</Typography>\n            </div>\n            <div className={classes.table}>\n              <DataPairContainer\n                headers={['Values', 'Data Column']}\n                sources={sources}\n                targets={targets}\n                fields={template.fields}\n                onClickAddNew={() => onClickAddField()}\n                onClickRemove={({ index }) => onRemoveField({ index })}\n                onChangeSource={({ index, value }) => onChangeSource({ index, value })}\n                onChangeTarget={({ index, value }) => onChangeTarget({ index, value })}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.groups}>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            onClick={handleOnSaveFacilityTemplate}\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n      <Dialog\n        fullWidth\n        maxWidth='sm'\n        onClose={() => setDialog(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={dialog.show}\n        className={classes.dialog}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Define Data Map\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDialog(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.input}>\n            <TextField\n              className={classes.name}\n              id='data-map-name'\n              value={dialog.name}\n              autoFocus\n              fullWidth\n              placeholder='Template Name'\n              onChange={event => handleOnChangeDialog({ field: 'name', value: event.target.value })}\n              error={dialog.error.name}\n            />\n          </div>\n          <div className={classes.input}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  className={classes.default}\n                  id='data-map-default'\n                  checked={dialog.isDefault}\n                  value={dialog.isDefault}\n                  onChange={event => handleOnChangeDialog({ field: 'isDefault', value: event.target.checked })}\n                />\n              }\n              label={'Set as default template'}\n            />\n          </div>\n          <div className={classes.footer}>\n            <div className={classes.action}>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, show: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={handleOnSaveTemplateDialog}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Save\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      <Alert\n        open={alertDialog.show}\n        message={alertDialog.message}\n        okLabel={alertDialog.okLabel}\n        onOk={() => {\n          setAlertDialog(state => ({ ...state, show: false }))\n        }}\n      />\n    </Paper>\n  )\n}\n","import React, { Fragment } from 'react'\n// import Grid from '@material-ui/core/Grid'\n// import Paper from '@material-ui/core/Paper'\n// import moment from 'moment'\nimport Button from '@material-ui/core/Button'\n// import Typography from '@material-ui/core/Typography'\n\n// Controller\nimport SoaEtlController from 'Controllers/SoaEtlController'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport UploadSpace from './Components/UploadSpace/UploadSpace'\nimport DynamicTable from './Components/DynamicTable/DynamicTable'\nimport FieldMapper from '../../FieldMapper/FieldMapper'\n// import CustomTextField from 'SharedComponents/TextField/CustomTextField'\n// import DatePicker from 'SharedComponents/DatePicker/DatePicker'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n// import Alert from 'SharedComponents/Alert/Alert'\n\n// // Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// Style\nimport classes from './UploadSoaPage.module.scss'\nimport claimTypes from 'Constant/claimTypes'\n\nexport default function UploadSoaPage (props) {\n  const { ApiService } = props\n  const [data, setData] = React.useState()\n  const [headerInputs, setHeaderInputs] = React.useState({})\n  const [claimTypeValues, setClaimTypeValues] = React.useState([])\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [dataRows, setDataRows] = React.useState([])\n\n  React.useEffect(() => {\n    PageTitleService(`Upload SOA File`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'uploadSoa'])\n  }, [])\n\n  const handleOnSelectFile = data => setData(data)\n\n  const handleOnRemoveFile = () => setData()\n\n  const handleOnCancelUpload = () => setData()\n\n  const handleProceedUpload = () => {\n    if (!claimTypeValues || claimTypeValues.length === 0) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message:\n          'SOA details and mapping of data is required. Please complete first the SOA details and mapping of data to continue.'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_id) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner ID'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_name) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner Name'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.claim_source) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Claim Source'\n      }))\n      return\n    }\n\n    // Construct data mapping for Transformation\n    const claimTypeMap = {}\n    claimTypeValues.forEach(element => {\n      claimTypeMap[element.source] = element.target\n    })\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: claimTypeMap\n      }\n    }\n\n    // Construct defaults for Transformation\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: headerInputs.claim_source,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: headerInputs.facility_id,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: headerInputs.facility_name\n    }\n\n    const fileHeaders = Object.keys(dataRows[0])\n    const fileMapping = Object.keys(dataMapping.columns)\n    const err = fileMapping.filter(head => !fileHeaders.includes(head))\n\n    if (err.length > 0) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please make sure that the uploaded SOA file has the correct column headers.'\n      }))\n      return\n    }\n\n    LoadingService.loading(true)\n\n    let bundle = null\n    // Invoke transformation\n    try {\n      bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n    } catch (ex) {\n      LoadingService.loading(false)\n      // Unable to upload SOA file. Please ensure there is one SOA no. only.\"\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: ex\n      }))\n      return\n    }\n\n    const onSuccess = function (bundle_number) {\n      // alert('SOA Upload successful')\n      // setAlertCloseHandlerAlert(handleOnCancel)\n\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'SOA Uploaded Successfully: Bundle No. ' + bundle_number,\n        onOk: () => {\n          handleOnCancel()\n          setOpenAlert(state => ({\n            ...state,\n            show: false\n          }))\n        }\n      }))\n    }\n\n    // Invoke loading unto Claims API\n    SoaEtlController.loadToApi(bundle, onSuccess)\n      .then(bundle_number => {\n        onSuccess(bundle_number)\n        LoadingService.loading(false)\n      })\n      .catch(() => {\n        LoadingService.loading(false)\n        setOpenAlert(state => ({\n          ...state,\n          show: true,\n          message: 'SOA Upload failed'\n        }))\n      })\n  }\n\n  // close for validation\n  const handleOnClose = () => {\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n  }\n\n  const handleOnCancel = () => {\n    LoadingService.loading(true)\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      handleOnCancelUpload()\n      LoadingService.loading(false)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {SoaEtlController.DEBUG && (\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-negative'\n          id='test-etl'\n          onClick={SoaEtlController.test}\n        >\n          Test ETL\n        </Button>\n      )}\n\n      {!data && <UploadSpace onSelectFile={handleOnSelectFile} />}\n\n      {data && (\n        <div className={classes.table}>\n          <DynamicTable\n            data={data}\n            onRemoveFile={handleOnRemoveFile}\n            onDetectDataRows={dataRows => {\n              setDataRows(dataRows)\n            }}\n          />\n        </div>\n      )}\n\n      {data && (\n        <Fragment>\n          <FieldMapper\n            ApiService={ApiService}\n            onSaveSuccess={({ template, facility }) => {\n              console.log('Field Mapper Saved!', { template, facility })\n            }}\n            onChangeHeaderInputs={headerInputs => {\n              setHeaderInputs(headerInputs)\n            }}\n            onChangeClaimTypeDataMapping={fields => {\n              setClaimTypeValues(fields)\n            }}\n          />\n\n          {/* TODO: replace evil quick-fix */}\n          <br />\n\n          <div align='right'>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel-upload'\n              onClick={handleOnCancel}\n            >\n              Cancel\n            </Button>\n            {/* TODO: replace evil quick-fix */}\n            &nbsp; &nbsp;\n            <Button\n              id='proceed-upload'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={handleProceedUpload}\n            >\n              Upload\n            </Button>\n          </div>\n        </Fragment>\n      )}\n\n      <Alert open={openAlert.show} message={openAlert.message} okLabel='Close' onOk={openAlert.onOk || handleOnClose} />\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/c')\n\nexport default class ClaimsAdjudicationServices {\n  static utilizationLegder (params) {\n    return axios({\n      url: `/utilization-ledger`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static transmittalReport (params, client) {\n    return axios({\n      url: '/transmittal-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getTransmittalReportPdf (params) {\n    return axios({\n      url: '/transmittal-report/reports',\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' },\n      params\n    })\n  }\n\n  static utilizationClient (params) {\n    return axios({\n      url: '/utilization-ledger/client',\n      method: 'GET',\n      params\n    })\n  }\n\n  static utilizationClientTable (params) {\n    return axios({\n      url: '/utilization-ledger/client/table',\n      method: 'GET',\n      params\n    })\n  }\n\n  static loadingHIMSData (params) {\n    return axios({\n      url: `/loading-hims-data`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static confinementReport (params) {\n    return axios({\n      url: `/confinement-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static paymentRequestReport (params) {\n    return axios({\n      url: '/payment-request-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static paymentRequestClaims (params, bundle_number) {\n    return axios({\n      url: `/payment-request-report/${bundle_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reimbursementClaimReport (params) {\n    return axios({\n      url: '/reimbursement-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static productivityReport (params) {\n    return axios({\n      url: '/productivity-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static claimsSummaryReport (params) {\n    return axios({\n      url: '/claims-summary-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static lookupsQuery ({ category, field, value }) {\n    return axios({\n      url: `/lookups/auto-suggest`,\n      method: 'GET',\n      params: { category, field, value },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static lookupsAll ({ category }) {\n    return axios({\n      url: `/lookups/auto-suggest/${category}`,\n      method: 'GET',\n      params: { category },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static returnedClaimsReport (params) {\n    return axios({\n      url: `/returned-claims-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static agingPartialApprovedClaimsReport (params) {\n    return axios({\n      url: `/aging-partial-approved-claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static agingReturnClaimsReport (params) {\n    return axios({\n      url: `/aging-return-claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static claimsBeyond3Months (params) {\n    return axios({\n      url: `/claims-beyond-3-months`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reimbursmentAgingReport (params) {\n    return axios({\n      url: `/reimbursement-aging`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static performanceReport (params) {\n    return axios({\n      url: `/performance-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedPerformanceReport (params) {\n    return axios({\n      url: `/detailed-performance-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedMonitoringReport (params) {\n    return axios({\n      url: `/detailed-monitoring-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedClaimsReport (params) {\n    return axios({\n      url: `/detailed-claims-report`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import FileSaver from 'file-saver'\n\nexport default function Download ({ fileName = 'CSV', header = [], rows = [], extension = 'csv', statics = [], data = [] }) {\n  const valueSeperator = ','\n  const newLine = '\\r\\n'\n  const [c_header = [], c_footer = []] = statics\n\n  let _rows = [\n    ...c_header,\n    header.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n    newLine,\n    ...rows.map(row =>\n      [\n        row.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n        newLine\n      ].join('')\n    ),\n    ...c_footer\n  ]\n\n  if (data && data.length) _rows = data\n\n  const blob = new Blob(_rows, { type: 'data:text/csv;charset=utf-8' })\n\n  // Trial\n  try {\n    const { ipcRenderer } = window.require('electron')\n\n    const reader = new FileReader()\n    reader.readAsDataURL(blob)\n    reader.onloadend = function () {\n      const data = reader.result\n      const base64data = data.split(';base64,').pop()\n      ipcRenderer.send('open-save-dialog', { data: base64data, fileName })\n    }\n  } catch (error) {\n    FileSaver.saveAs(blob, `${fileName}.${extension}`)\n  }\n}\n","// Received Path as Array\n// Received Path as String\n\nconst SafeAccess = (value, path, def = undefined, delimeter = '.') => {\n  if (typeof path === 'object') {\n    return path.reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n  } else if (typeof path === 'string') {\n    return (\n      path.split(delimeter).reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n    )\n  }\n} // pass in your object structure as array elements\n\nexport { SafeAccess }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date Range From')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Date Range From\" should be on or before \"Date Range To\"`\n    }),\n  date_to: Joi.date()\n    .label('Date Range To')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Date Range To\" should be on or after \"Date Range From\"`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimsUtilLedgerReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Batch No.', data: 'batch_number', search: true, match: 'any' },\n  { label: 'Claim No.', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, match: 'any' },\n  { label: 'Approval Code', data: 'approval_code', search: true, match: 'start' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, match: 'any' },\n  { label: 'Loa No.', data: 'loa_number', search: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, match: 'any' },\n  { label: 'Member Account No.', data: 'member_account_number', search: true, match: 'any' },\n  { label: 'Member Last Name', data: 'member_last_name', search: true, match: 'any' },\n  { label: 'Member First Name', data: 'member_first_name', search: true, match: 'any' },\n  { label: 'Member Middle Name', data: 'member_middle_name', search: true, match: 'any' },\n  { label: 'Client Account Number', data: 'client_account_number', search: true, match: 'any' },\n  { label: 'Client Account Name', data: 'client_name', search: true, match: 'any' },\n  { label: 'Customer Account Number', data: 'customer_company_account_number', search: true, match: 'any' },\n  { label: 'Company Name', data: 'company_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Facility) Name', data: 'facility_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'doctor_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Doctor) Name', data: 'doctor_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID (Anesthesiologist)', data: 'anesthesiologist_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Anesthesiologist) Name', data: 'anesthesiologist_name', search: true, match: 'any' },\n  { label: 'Date Admitted', type: 'date', data: 'date_admission_from', search: true, match: 'date' },\n  { label: 'Date Discharged', type: 'date', data: 'date_admission_to', search: true, match: 'date' },\n  { label: 'Date of Service', type: 'date', data: 'date_service', search: true, match: 'date' },\n  { label: 'Date of Service (From)', type: 'date', data: 'date_service_from', search: true, match: 'date' },\n  { label: 'Date of Service (To)', type: 'date', data: 'date_service_to', search: true, match: 'date' },\n  { label: 'Contract Year (From)', type: 'date', data: 'contract_from', search: true, match: 'date' },\n  { label: 'Contract Year (To)', type: 'date', data: 'contract_to', search: true, match: 'date' },\n  { label: 'Department', data: 'department', search: true, match: 'any' },\n  { label: 'Recommendation', data: 'recommendation', search: true, match: 'any' },\n  { label: 'Room Type', data: 'room_type', search: true, match: 'any' },\n  { label: 'Room Rate', data: 'room_rate', search: true, match: 'exact' },\n  { label: 'PRO ID', data: 'pro_id', search: true, match: 'any' },\n  { label: 'PRO Name', data: 'pro_name', search: true, match: 'any' },\n  { label: 'Claim Sub Type', data: 'claim_sub_type', search: true, match: 'any' },\n  { label: 'Claim Sub-sub Type', data: 'claim_sub_sub_type', search: true, match: 'any' },\n  { label: 'With Corporate Guaranty', data: 'with_corporate_guaranty', search: true, match: 'any' },\n  { label: 'Medicine Category', data: 'medicine_category', search: true, match: 'any' },\n  { label: 'Reimbursement Type', data: 'reimbursement_type', search: true, match: 'any' },\n  { label: 'Reimbursement Category', data: 'reimbursement_category', search: true, match: 'any' },\n  { label: 'Official Receipt Number', data: 'receipt_number', search: true, match: 'any' },\n  { label: 'APE/PPE Package/s', data: 'ape_ppe_packages', search: true, match: 'any' },\n  { label: 'Given Diagnosis', type: 'array', data: 'diagnosis.given_diagnosis', search: true, match: 'any' },\n  { label: 'ICD10 Description', type: 'array', data: 'diagnosis.description', search: true, match: 'any' },\n  { label: 'ICD10 Code', type: 'array', data: 'diagnosis.code', search: true, match: 'any' },\n  { label: 'ICD10 Primary', type: 'array', data: 'diagnosis.primary', search: true, match: 'any' },\n  { label: 'LOA Notes', data: 'loa_notes', search: true, match: 'any' },\n  { label: 'Tooth Number', type: 'array', data: 'dental_procedures.tooth_number', search: true, match: 'exact' },\n  { label: 'Procedure Name', type: 'array', data: 'procedures.description', search: true, match: 'any' },\n  { label: 'CPT Code', type: 'array', data: 'procedures.code', search: true, match: 'any' },\n  { label: '(Procedures) Gross Amount', type: 'array', data: 'procedures.gross_amount', search: true, match: 'exact' },\n  { label: '(Procedures) Vat Amount', type: 'array', data: 'procedures.vat_amount', search: true, match: 'exact' },\n  {\n    label: '(Procedures) Amount Paid by Member',\n    type: 'array',\n    data: 'procedures.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'procedures.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Remarks',\n    type: 'array',\n    data: 'procedures.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Procedures) Amount not Covered',\n    type: 'array',\n    data: 'procedures.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Procedures) Reason', type: 'array', data: 'procedures.reason', search: true, match: 'any' },\n  {\n    label: '(Procedures) Amount due From Member',\n    type: 'array',\n    data: 'procedures.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) Reason for Charging Member',\n    type: 'array',\n    data: 'procedures.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Procedures) Amount due From Client',\n    type: 'array',\n    data: 'procedures.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) Reason for Charging Client',\n    type: 'array',\n    data: 'procedures.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Hospital Item Name', type: 'array', data: 'hospital_items.name', search: true, match: 'any' },\n  { label: 'Item Code', type: 'array', data: 'hospital_items.item_code', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Gross Amount',\n    type: 'array',\n    data: 'hospital_items.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Vat Amount',\n    type: 'array',\n    data: 'hospital_items.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Amount Paid by Member',\n    type: 'array',\n    data: 'hospital_items.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'hospital_items.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Remarks',\n    type: 'array',\n    data: 'hospital_items.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Hospital Items) Amount not Covered',\n    type: 'array',\n    data: 'hospital_items.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Hospital Items) Reason', type: 'array', data: 'hospital_items.reason', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Amount due From Member',\n    type: 'array',\n    data: 'hospital_items.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Reason for Charging Member',\n    type: 'array',\n    data: 'hospital_items.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Hospital Items) Amount due From Client',\n    type: 'array',\n    data: 'hospital_items.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Reason for Charging Client',\n    type: 'array',\n    data: 'hospital_items.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Medical Partner ID', type: 'array', data: 'professional_fees.doctor_id', search: true, match: 'any' },\n  { label: 'Doctor Name', type: 'array', data: 'professional_fees.doctor_name', search: true, match: 'any' },\n  { label: 'Specialization', type: 'array', data: 'professional_fees.specialization', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Gross Amount',\n    type: 'array',\n    data: 'professional_fees.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Vat Amount',\n    type: 'array',\n    data: 'professional_fees.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Amount Paid by Member',\n    type: 'array',\n    data: 'professional_fees.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'professional_fees.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Remarks',\n    type: 'array',\n    data: 'professional_fees.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Professional Fee) Amount not Covered',\n    type: 'array',\n    data: 'professional_fees.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Professional Fee) Reason', type: 'array', data: 'professional_fees.reason', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Amount due From Member',\n    type: 'array',\n    data: 'professional_fees.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Reason for Charging Member',\n    type: 'array',\n    data: 'professional_fees.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Professional Fee) Amount due From Client',\n    type: 'array',\n    data: 'professional_fees.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Reason for Charging Client',\n    type: 'array',\n    data: 'professional_fees.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Claim Remarks', data: 'claim_remarks', search: true, match: 'any', remarks: true }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ClaimsUtilLedgerReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange, refresh } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Ledger Report')\n    BreadcrumbsService.setSelectedItems(['utilizationLedger'])\n  }, [])\n\n  // const [allClaims, setAllClaims] = React.useState({\n  //   data: [],\n  //   columns: columns.map(value => ({\n  //     name: value.name,\n  //     type: value.type\n  //   }))\n  // })\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchLedger = () => {\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to)\n        // date_admission_from: DateFormatter(claim.date_admitted),\n        // date_discharged: DateFormatter(claim.date_discharged),\n        // date_issued: DateFormatter(claim.date_issued),\n        // diagnosis: claim.diagnosis && claim.diagnosis.length > 0 ? claim.diagnosis.shift().description : null\n      }))\n      setClaims(state => ({ ...state, data: _claims, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to)\n      }))\n\n      const rows = _claims.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n      // console.log(rows)\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Utilization Ledger Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchLedger()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                fetchLedger()\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Component\nimport { Typography } from '@material-ui/core'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Footer.module.scss'\n\nexport default function ClaimsUtilLedgerReport (props) {\n  const { username, total = {} } = props\n\n  // TODO For refactoring :(( )\n  return (\n    <div className={classes.footer}>\n      <hr />\n      <div className={classes.total}>\n        <div className={classes['total-row']}>\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AMOUNT: ${CurrencyFormatter(total.amount)}`}</p>\n          </div>\n\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AR: ${CurrencyFormatter(total.ar_amount)}`}</p>\n          </div>\n        </div>\n      </div>\n      <div className={classes['all-signatories']}>\n        <div className={classes.signatories}>\n          <Typography>Transmitted by: </Typography>\n          <Typography className={classes.username}>{username}</Typography>\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Noted by: </Typography>\n          <div className={classes['line-note']} />\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Received by: </Typography>\n          <div className={classes['line-received']} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/x/cc')\n\nexport default class CustomerCareServices {\n  static getMember ({ account_number }) {\n    return axios({\n      url: `/member`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getClient ({ account_number }) {\n    return axios({\n      url: `/client`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getMemberUtilizationLoa ({ account_number }) {\n    return axios({\n      url: `/members/${account_number}/utilization-loa`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // PRO User lookup\n  static proUsersLookup ({ value, field }) {\n    return axios({\n      url: '/users/pro',\n      method: 'GET',\n      params: { [field]: value }\n    })\n  }\n\n  static getMemberContract ({ mct_id }) {\n    return axios({\n      url: `/member/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getClientContract ({ mct_id }) {\n    return axios({\n      url: `/client/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getClientInfo ({ value, field }) {\n    return axios({\n      url: `/client-info`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { [field]: value }\n    })\n  }\n\n  static getClients ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/clients`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getMembers ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/members`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getClientUtilizationLoa ({ client_account_no }) {\n    return axios({\n      url: `/client/${client_account_no}/utilization-loa`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getMemberContractPlanType ({ account_number }) {\n    return axios({\n      url: `/member/contract-plan-type`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getClientrContractPlanType ({ account_number }) {\n    return axios({\n      url: `/client/contract-plan-type`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getDoctorSpecilizations ({ data }) {\n    return axios({\n      url: '/doctor-specializations',\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { data }\n    })\n  }\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/md')\n\nexport default class MedicalConsultantServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import MedicalConsultantServices from './MedicalConsultantServices'\nimport instance from './instance'\nconst axios = instance('/client')\n\nexport default class UserManagementServices {\n  static getUsers (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getUsersByRole (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getClaimsVerifierSupervisors () {\n    return this.getUsers('CLAIMS_VERIFIER_SUPERVISOR')\n  }\n\n  static getClaimsAnalyst () {\n    return this.getUsers('CLAIMS_ANALYST')\n  }\n\n  static getUserById (id) {\n    return axios({\n      url: `http://18.138.94.224:4101/api/users/${id}`,\n      method: 'GET'\n    })\n  }\n}\n","export default {\n  header: ['Company:', 'Account No.:', 'Contract:', 'Date:'],\n  footer: ['Total', 'Transmitted by:', 'Noted by:', 'Received by:']\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport PrintIcon from '@material-ui/icons/Print'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Footer from './Footer/Footer'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { staticHeaderFooter } from './helper/staticHeaderFooter'\n\n// Validator\nimport DateRangeValidator from './validator/DateRangeValidator'\n\n// Styles\nimport classes from './TransmittalReport.module.scss'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { initSuggestions, resetSuggestionObject, setSuggestionObject } = actions\n\nconst columns = [\n  { label: 'NO.', sortField: 'number', sort: false, align: 'left', class: 'h_no' },\n  { label: 'LOA NO.', sortField: 'latest.loa_number', sort: true, align: 'left', class: 'h_loa' },\n  { label: 'DATE', sortField: 'status_date', sort: true, align: 'left', class: 'h_date' },\n  { label: 'MEMBER', sortField: 'member_name', sort: true, align: 'left', class: 'h_member' },\n  { label: 'AMOUNT', sortField: 'total_amount', sort: false, align: 'right', class: 'h_amount' },\n  { label: 'AR', sortField: 'total_due_from_member', sort: false, align: 'right', class: 'h_ar' }\n]\n\nexport default function TransmittalReport (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [claims, setClaims] = React.useState({\n    raw: [],\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'loa_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [client, setClient] = React.useState({\n    registered_name: '',\n    corporate_account_no: ''\n  })\n\n  const [returnClient, setReturnClient] = React.useState({})\n\n  const [total, setTotal] = React.useState({\n    amount: 0,\n    ar_amount: 0\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [username, setUsername] = React.useState('')\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    PageTitleService('Transmittal Report')\n    BreadcrumbsService.setSelectedItems(['transmittal'])\n\n    // TODO is this right?\n    const _id = localStorage.getItem('user_id')\n    UserManagementServices.getUserById(_id).then(res => {\n      const { username = '' } = res.data\n      setUsername(username)\n    })\n  }, [])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleClientOnChange = ({ value, field, isSuggestionClick }) => {\n    setClient(state => ({ ...state, [field]: value }))\n    if (isSuggestionClick) {\n      for (const i of suggestions.client.data) {\n        if (value === i.registered_name || value === i.corporate_account_no) {\n          dispatch(resetSuggestionObject({ field: 'client' }))\n          setClient(state => ({\n            ...state,\n            registered_name: i.registered_name,\n            corporate_account_no: i.corporate_account_no\n          }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'client' }))\n      getClientSuggestions({ value, field })\n    }\n  }\n\n  const getClientSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getClientInfo({ value, field }).then(res => {\n            const { data = [] } = res.data\n\n            const item = []\n            for (const d of data) {\n              item.push(d[field])\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'client',\n                suggestion: { [field]: item, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchTransmittalItems = params => {\n    if (client.registered_name === '' || client.corporate_account_no === '') {\n      LoadingService.loading(false)\n      return setClaims(state => ({ ...state, data: [] }))\n    }\n\n    LoadingService.loading(true)\n    ClaimsServices.transmittalReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      client\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page, client = {} } = res.data.data\n      const _totam_amout = raw.reduce((a, c) => a + c.total_amount, 0)\n      const _ar_amount = raw.reduce((a, c) => a + c.total_due_from_member, 0)\n\n      setReturnClient(client)\n      setClaims(state => ({ ...state, data: results, raw, count, page, limit }))\n      setTotal(state => ({\n        ...state,\n        amount: !_totam_amout <= 0 ? _totam_amout : 0,\n        ar_amount: !_ar_amount <= 0 ? _ar_amount : 0\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...claims,\n      ...args\n    }\n\n    setClaims(state => ({ ...state, ...args }))\n    fetchTransmittalItems(params)\n  }\n\n  const handlePrintReport = params => {\n    if (!claims.data.length) return\n\n    PdfViewer2Service({\n      name: 'Transmittal Report',\n      fileName: 'transmittal_report',\n      service: ClaimsServices.getTransmittalReportPdf({\n        range: params.range,\n        sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n        client\n      }),\n      open: true\n    })\n  }\n\n  const handleGenerateReport = () => {\n    if (!claims.raw.length) return\n\n    const header = columns.map(i => i.label)\n    const rows = []\n\n    claims.raw.forEach(item => {\n      item.date = DateFormatter(item.date)\n      rows.push(Object.values(item))\n    })\n\n    const statics = staticHeaderFooter({ ...returnClient, ...total, username })\n    LoadingService.loading(true)\n    ArrayToCSV({ fileName: `${client.registered_name} Transmittal Report`, header, rows, statics })\n    LoadingService.loading(false)\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes['search-header']}>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Company:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by company name'\n                  id='company-name'\n                  value={client.registered_name}\n                  suggestions={suggestions.client.registered_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'registered_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Account No.:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by account number'\n                  id='account-number'\n                  value={client.corporate_account_no}\n                  suggestions={suggestions.client.corporate_account_no}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'corporate_account_no',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                fetchTransmittalItems(claims)\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='print-report' onClick={() => handlePrintReport(claims)} disabled={!claims.data.length}>\n              <PrintIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Print Report\n              </Typography>\n            </Button>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <TableSortLabel\n                        active={claims.orderBy === headCell.sortField}\n                        direction={claims.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell className={classes.left} align='left'>\n                      {item.loa_number}\n                    </TableCell>\n                    <TableCell className={classes.left} align='left'>\n                      {DateFormatter(item.date)}\n                    </TableCell>\n                    <TableCell className={classes.member} align='left'>{`${item.member_name}`}</TableCell>\n                    <TableCell className={classes.right} align='right'>\n                      {CurrencyFormatter(!item.total_amount <= 0 ? item.total_amount : 0)}\n                    </TableCell>\n                    <TableCell className={classes.right} align='right'>\n                      {CurrencyFormatter(!item.total_due_from_member <= 0 ? item.total_due_from_member : 0)}\n                    </TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n          <Footer username={username} total={total} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport ArrayToCSV from 'Services/ArrayToCSV'\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './TreasuryTransmittalReport.module.scss'\n\nconst columns = [\n  { label: 'Date Requested', data: 'date_requested', search: true, match: 'date' },\n  { label: 'Transmittal No.', data: 'transimittal_no', search: true, match: 'any' },\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Delivery Status', data: 'delivery_status', search: true, match: 'any' },\n  { label: 'Received By', data: 'received_by', search: true, match: 'any' },\n  { label: 'Date Received', data: 'date_received', search: true, match: 'date' }\n]\n\nexport default function TreasuryTransmittalReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Treasury Transmittal Reports')\n    BreadcrumbsService.setSelectedItems(['treasuryTransmittalReport'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  const fetchReport = () => {\n    LoadingService.loading(true)\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './PRCheckReport.module.scss'\n\nconst columns = [\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check Voucher No.', data: 'check_voucher_no', search: true, match: 'any' },\n  { label: 'Check Voucher Date.', data: 'check_voucher_date', search: true, match: 'date' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Check Release Date', data: 'check_release_date', search: true, match: 'date' },\n  { label: 'FPAD Transmittal Date', data: 'fpad_transmittal_date', search: true, match: 'date' },\n  { label: 'Date Received (FPAD Delivery)', data: 'date_received_fpad_delivery', search: true, match: 'date' }\n]\n\nexport default function PRCheckReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('PR and Check Report')\n    BreadcrumbsService.setSelectedItems(['prReports'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    // TODO:\n    // Change service if api becomes available\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  const fetchReport = () => {\n    // TODO:\n    // Change service if api becomes available\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import { DateFormatter } from 'Utilities/TextFormatter'\n\nexport const mapData = ({ data }) => {\n  return data.map(i => {\n    return {\n      claim_no: i.claim_no || '',\n      diagnosis: i.diagnosis || i.diagnoses || [{ diagnosis: i.primary_diagnosis || '', icd10_code: i.primary_icd10_code || '' }],\n      procedures: i.procedures || [], // partner_doctor_name\n      provider: { facility: [i.partner_name] || '', doctor: i.doctors ? setDoctors(i.doctors, i.partner_doctor_name) : i.partner_doctor_name ? [i.partner_doctor_name] : [] },\n      amount: i.total_amount || i.grand_total || 0,\n      session: i.session || 1,\n      date: DateFormatter(i.date_issued),\n      type: i.type,\n      status: i.status\n    }\n  })\n}\n\nconst setDoctors = (doctors = [], partner_name) => {\n  if (partner_name == undefined) return doctors.map(i => (i.name))\n  return doctors.map(i => (i.name)).concat([partner_name])\n}\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n// import TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport { setPaginate } from './Utils/pagination'\nimport { mapData } from './Utils/mapData'\nimport { itemFilter } from './Utils/query'\n\n// Styles\nimport classes from './Utilization.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setLimitType, resetLimitType } = actions\n\nconst headCellsComplete = [\n  { name: 'Claim ID', sortField: 'claim_no', search: true },\n  { name: 'Diagnosis', sortField: 'diagnosis', search: true },\n  { name: 'Procedure', sortField: 'procedures', search: true },\n  { name: 'Provider', sortField: 'provider', search: true },\n  { name: 'Amount', sortField: 'amount', search: true },\n  { name: 'Session', sortField: 'session', search: true },\n  { name: 'Date', sortField: 'date', search: true },\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Status', sortField: 'status', search: true }\n]\n\nconst randomRange = (min, max) => {\n  return Math.random() * (max - min) + min\n}\n\nexport default function Utilization (props) {\n  const dispatch = useDispatch()\n  const title = useSelector(({ ClaimsAnalysis: state }) => state.title)\n\n  const {\n    fetchService,\n    diagnosis,\n    isMember = true,\n    member = {},\n    utilizationLoa = [],\n    hideSearchBar = false,\n    hideActionColumn = false,\n    dataColumns\n  } = props\n\n  const [headCells, setHeadCells] = React.useState(headCellsComplete)\n  const [rows, setRows] = React.useState([])\n  const [allList, setAllList] = React.useState([])\n  const [filteredRows, setFilteredRows] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    category: 'all',\n    search: '',\n    filter: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = headCellsComplete\n    } else {\n      filtered = headCellsComplete.filter(entry => dataColumns.indexOf(entry.sortField) > -1)\n    }\n    setHeadCells(filtered)\n  }, [dataColumns])\n\n  React.useEffect(() => {\n    if (member) {\n      let type\n      let limit\n\n      if (member.benefit_limits) {\n        if (member.benefit_limits.length > 0) {\n          type = member.benefit_limits[0].type\n          limit = member.benefit_limits[0].limit\n        }\n      }\n\n      if (type === 'ABL') {\n        dispatch(setLimitType('Annual Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        fetchService({\n          member_account_no: member.info.member_id,\n          type: '',\n          icd_code: ''\n        }).then(res => {\n          const { data } = res.data\n\n          const list = mapData({\n            data: [\n              ...utilizationLoa.map(i => ({ ...i, type: 'IBNR' })),\n              ...data.map(i => ({ ...i, status: 'Approved' }))\n            ]\n          })\n\n          setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n          setRows(list.slice(0, filteredRows.limit))\n          setAllList(list)\n\n          let ibnr = 0\n          let utilized = 0\n\n          utilizationLoa.map(item => (ibnr += item.total_amount))\n          data.map(item => (utilized += item.grand_total))\n\n          setGraph(state => ({\n            ...state,\n            ibnr,\n            utilized\n          }))\n        })\n      } else if (type === 'MBL') {\n        dispatch(setLimitType('Maximum Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        let primary = (diagnosis && diagnosis.filter(icd => icd.primary === true)[0]) || {\n          code: '',\n          description: '',\n          category_code: ''\n        }\n\n        IcdCptStorageServices.lookups({\n          on: 'icd-10',\n          params: { query: primary.code, by: 'code' }\n        }).then(res => {\n          const { data } = res.data\n          const { diagnosis_code } = data[0] || []\n\n          // If claim have no diagnosis field then return all\n          primary.code ? (primary.category_code = diagnosis_code) : (primary.category_code = '')\n\n          fetchService({\n            member_account_no: member.info.member_id,\n            type: 'mbl',\n            icd_code: primary.category_code\n          }).then(res => {\n            const { data } = res.data\n\n            // ICD Screening\n            let _utilizationLoa = utilizationLoa.filter(item => {\n              if (item.primary_icd10_code) {\n                return item.primary_icd10_code.startsWith(primary.category_code)\n              }\n            })\n\n            const list = mapData({\n              data: [\n                ..._utilizationLoa.map(i => ({ ...i, type: 'IBNR' })),\n                ...data.map(i => ({ ...i, status: 'Approved' }))\n              ]\n            })\n\n            setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n            setRows(list.slice(0, filteredRows.limit))\n            setAllList(list)\n\n            let ibnr = 0\n            let utilized = 0\n\n            _utilizationLoa.map(item => (ibnr += item.total_amount))\n            data.map(item => (utilized += item.grand_total))\n\n            setGraph(state => ({\n              ...state,\n              ibnr,\n              utilized\n            }))\n          })\n        })\n      }\n    } else {\n      dispatch(setLimitType('Member Not Found'))\n    }\n  }, [member, diagnosis])\n\n  React.useEffect(() => {\n    dispatch(resetLimitType())\n  }, [])\n\n  React.useEffect(() => {\n    // console.log(list)\n    const _data = itemFilter({ search: filteredRows.search, filter: filteredRows.filter, data: allList })\n\n    setFilteredRows(state => ({ ...state, count: _data.length, data: _data, page: 1 }))\n    setRows(_data.slice(0, filteredRows.limit))\n  }, [filteredRows.search, filteredRows.filter])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = args => {\n    const { event, field, type } = args\n    const search = event.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (type === 'all') setFilteredRows(state => ({ ...state, search }))\n        else setFilteredRows(state => ({ ...state, filter: { ...state.filter, [field]: search } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: filteredRows })\n    setFilteredRows(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const renderRows = ({ rows = [] }) => {\n    return rows.map((row, index) => (\n      <TableRow id={`utilization-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n        {headCells.map(headCell => {\n          switch (headCell.sortField) {\n            case 'claim_no':\n              return (\n                <TableCell key={`${index}-claim-no`} id={`utilization-claim_no-${index}`}>\n                  <div className={classes.cell}>\n                    <span>{row.claim_no}</span>\n                    <span className={classes.label}>SWIPE</span>\n                    <span>YES</span>\n                  </div>\n                </TableCell>\n              )\n\n            case 'diagnosis':\n              return (\n                <TableCell key={`${index}-diagnosis`} id={`utilization-diagnosis-${index}`}>\n                  {row.diagnosis.map((row, index) => (\n                    <div key={`icd-${index}`} className={classes.cell}>\n                      <span>{row.diagnosis}</span>\n                      <span className={classes.label}>ICD 10 CODE</span>\n                      <span>{row.icd10_code}</span>\n                    </div>\n                  ))}\n                </TableCell>\n              )\n\n            case 'procedures':\n              return (\n                <TableCell key={`${index}-procedures`} id={`utilization-procedures-${index}`}>\n                  <div className={classes.cell}>\n                    {row.procedures.map((row, index) => (\n                      <div key={`procedure-${index}`} className={classes.cell}>\n                        <span>{row.procedure_name}</span>\n                        <span className={classes.label}>CPT CODE</span>\n                        <span>{row.cpt_code}</span>\n                      </div>\n                    ))}\n                  </div>\n                </TableCell>\n              )\n\n            case 'provider':\n              return (\n                <TableCell key={`${index}-provider`} id={`utilization-partner_name-${index}`}>\n                  <div className={classes.cell}>\n                    <div className={classes.cell}>\n                      {row.provider.facility.map((row, index) => (\n                        <span key={`facility-${index}`}>{row}</span>\n                      ))}\n                      {row.provider.doctor.length !== 0 && <span className={classes.label}>MEDICAL DOCTOR</span>}\n                      {row.provider.doctor.map((row, index) => (\n                        <span key={`doctor-${index}`}>{`${row},`}</span>\n                      ))}\n                    </div>\n                  </div>\n                </TableCell>\n              )\n\n            case 'amount':\n              return (\n                <TableCell key={`${index}-amount`} align='right' id={`utilization-grand_total-${index}`}>\n                  <span>{CurrencyFormatter(row.amount)}</span>\n                </TableCell>\n              )\n\n            case 'session':\n              return (\n                <TableCell key={`${index}-session`} align='right' id={`utilization-session-${index}`}>\n                  <span>{row.session}</span>\n                </TableCell>\n              )\n\n            case 'date':\n              return (\n                <TableCell key={`${index}-date_admitted`} id={`utilization-date_admitted-${index}`}>\n                  <span>{row.date}</span>\n                </TableCell>\n              )\n\n            case 'type':\n              return (\n                <TableCell key={`${index}-type`} id={`utilization-type-${index}`}>\n                  <span>{row.type}</span>\n                </TableCell>\n              )\n\n            case 'status':\n              return (\n                <TableCell key={`${index}-status`} align='center' id={`utilization-status-${index}`}>\n                  <span>{row.status}</span>\n                </TableCell>\n              )\n          }\n        })}\n\n        {hideActionColumn === false && (\n          <TableCell key={`${index}-icon`} align='center' id={`utilization-action-${index}`}>\n            <FontAwesomeIcon icon='file-alt' size='lg' className={classes.icon} />\n          </TableCell>\n        )}\n      </TableRow>\n    ))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.graph}>\n          <div className={classes['anual-benefit']}>\n            <Typography variant='button'>{title}</Typography>\n            <Typography id='utilization-graph-total' variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n          </div>\n\n          <div className={classes['line-graph']}>\n            <div className={classes.container}>\n              <div className={classes['line-container']}>\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.utilized / graph.total) * 100}%`, background: '#4fb083' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.ibnr / graph.total) * 100}%`, background: '#2a2b6e' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{\n                    width: `${\n                      ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                        ? 0\n                        : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                    }%`,\n                    background: '#f8b439'\n                  }}\n                />\n              </div>\n              <div className={classes['line-details']}>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#4fb083' }} />\n                    <Typography variant='button'>UTILIZED</Typography>\n                  </div>\n                  <Typography id='utilization-graph-utilized' variant='button' style={{ color: '#4fb083' }}>\n                    {`PHP ${CurrencyFormatter(graph.utilized)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#2a2b6e' }} />\n                    <Typography variant='button'>IBNR</Typography>\n                  </div>\n                  <Typography id='utilization-graph-ibnr' variant='button' style={{ color: '#2a2b6e' }}>\n                    {`PHP ${CurrencyFormatter(graph.ibnr)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#f8b439' }} />\n                    <Typography variant='button'>AVAILABLE</Typography>\n                  </div>\n                  <Typography id='utilization-graph-available' variant='button' style={{ color: '#f8b439' }}>\n                    {`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.search} style={{ display: hideSearchBar === true ? 'none' : 'block' }}>\n          <SearchTextComponent\n            id='search-utilization'\n            onChange={event => handleSearchChange({ event, field: 'all', type: 'all' })}\n            placeholder='Search'\n          />\n        </div>\n        <div style={{ display: hideSearchBar === false ? 'none' : 'block' }}>\n          {/* TODO: replace with filler */}\n          <br />\n          <br />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  {headCell.name}\n                  {headCell.search && (\n                    <TextField\n                      id={`utilization-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event => handleSearchChange({ event, field: headCell.sortField, type: 'column' })}\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              {hideActionColumn === false && <TableCell align='center' />}\n            </TableRow>\n          }\n          body={renderRows({ rows: rows })}\n          pagination\n          count={filteredRows.count}\n          page={filteredRows.page}\n          limit={filteredRows.limit}\n          rowsPerPageOptions={filteredRows.rowsPerPageOptions}\n          onChange={args => handleOnPaginate(args)}\n        />\n      </div>\n    </div>\n  )\n}\n","export const itemFilter = args => {\n  const { search, filter, data = [] } = args\n  let _data = data\n\n  if (search) {\n    const _search = search.toLowerCase()\n    _data = _data.filter(i => {\n      return i.claim_no.toLowerCase().includes(_search) ||\n        i.diagnosis.some(i => i.diagnosis.toLowerCase().includes(_search) || i.icd10_code.toLowerCase().includes(_search)) ||\n        i.procedures.some(i => i.procedure_name.toLowerCase().includes(_search) || i.cpt_code.toLowerCase().includes(_search)) ||\n        i.provider.doctor.some(i => i.toLowerCase().includes(_search)) ||\n        i.provider.facility.some(i => i.toLowerCase().includes(_search)) ||\n        i.amount.toString().toLowerCase().includes(_search) ||\n        i.session.toString().toLowerCase().includes(_search) ||\n        i.date.toLowerCase().includes(_search) ||\n        i.type.toLowerCase().includes(_search) ||\n        i.status.toLowerCase().includes(_search)\n    })\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const _fields = Object.keys(filter)\n\n    for (const f of _fields) {\n      let value = filter[f].toLowerCase()\n      if (value && f === 'diagnosis') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.diagnosis.toLowerCase().includes(value) || i.icd10_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'procedures') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.procedure_name.toLowerCase().includes(value) || i.cpt_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'provider') {\n        _data = _data.filter(i => {\n          return i[f].doctor.some(i => i.toLowerCase().includes(value)) || i[f].facility.some(i => i.toLowerCase().includes(value))\n        })\n      } else if (value) {\n        _data = _data.filter(i => {\n          return i[f].toString().toLowerCase().includes(value)\n        })\n      }\n    }\n  }\n  return _data\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ca')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // static getDropdown (params) {\n  //   return axios({\n  //     url: '/lookups/dropdown',\n  //     method: 'GET',\n  //     params,\n  //     headers: { [ExcludeErrorConstants['all']]: 1 }\n  //   })\n  // }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getICDSynonyms (params) {\n    return axios({\n      url: `/lookups/icd-10-synonym`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/c/cr')\n\nexport default class ClaimsReconServices extends ClaimsAdjudicationServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getClientUtilization ({ client_account_no }) {\n    return axios({\n      url: `/claims/client/${client_account_no}/utilizations`,\n      method: 'GET'\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static removeClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/destroy`,\n      method: 'DELETE',\n      data: { claim_number }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getTemplates () {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'GET'\n    })\n  }\n\n  static getTemplate ({ template_name }) {\n    return axios({\n      url: `/data-map/templates/${template_name}`,\n      method: 'GET'\n    })\n  }\n\n  static storeTemplate ({ template_name, data }) {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'POST',\n      params: { template_name },\n      data\n    })\n  }\n\n  static getFacilityTemplate ({ facility_id }) {\n    return axios({\n      url: `/data-map/templates/${facility_id}`,\n      method: 'GET'\n    })\n  }\n\n  static storeFacilityTemplate ({ facility_id, data }) {\n    return axios({\n      url: `/data-map/facilities`,\n      method: 'POST',\n      params: { facility_id },\n      data\n    })\n  }\n}\n","/**\n * Graph Color Theme\n */\nconst theme = {\n  InPatient: '#EDEDED',\n  OutPatientProcedure: '#DEDEDE',\n  OutPatientConsultation: '#9EA3AC',\n  Reimbursement: '#0D5E40',\n  Emergency: '#FAB435',\n  Dental: '#8034AD',\n  MedicineAllowance: '#1AB1C4',\n  APE: '#3AB77D',\n  ECU: '#FD5451',\n  Pharmacy: '#62FFB7',\n  PPE: '#1E2071',\n  MedicalSupplies: '#E6A8E4',\n  ClinicManagement: '#66AFBE'\n}\nexport default theme\n","const mockData = [\n  { description: 'In Patient', type: 'InPatient' },\n  { description: 'Out Patient Procedure', type: 'OutPatientProcedure' },\n  { description: 'Out Patient Consultation', type: 'OutPatientConsultation' },\n  { description: 'Reimbursement', type: 'Reimbursement' },\n  { description: 'Emergency', type: 'Emergency' },\n  { description: 'Dental', type: 'Dental' },\n  { description: 'Medicine Allowance', type: 'MedicineAllowance' },\n  { description: 'APE', type: 'APE' },\n  { description: 'ECU', type: 'ECU' },\n  { description: 'Pharmacy', type: 'Pharmacy' },\n  { description: 'PPE', type: 'PPE' },\n  { description: 'Medical Supplies', type: 'MedicalSupplies' },\n  { description: 'Clinic Management', type: 'ClinicManagement' }\n]\n\nexport default mockData\n","const months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n\nexport default months\n","import React from 'react'\n\nimport moment from 'moment'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Select from '@material-ui/core/Select'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// import ClaimsUtilLedgerReport from '../ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\nimport Utilization from './../../ClaimsViewer/Components/Utilization/Utilization'\n\n// Services\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, LargeNumberFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './style/UtilizationReport.module.scss'\nimport theme from './style/theme'\n\n// Data\nimport legend from './data/legend'\n\n// Config\nimport months from './config/months'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst clientColumns = [\n  { label: 'Type', field: 'type', search: true, match: 'any' },\n  { label: 'Total Amount', field: 'total_amount', search: true, match: 'number' },\n  { label: 'Number of Cases', field: 'cases', search: true, match: 'number' },\n  { label: 'Availed By Principals', field: 'availed_by_principals', search: true, match: 'number' },\n  { label: 'Availed By Dependents', field: 'availed_by_dependents', search: true, match: 'number' }\n]\n\n// const memberDataColumns = [\n//   'loa_number',\n//   'approval_code',\n//   'claim_number',\n//   'diagnosis',\n//   'procedures.description',\n//   'facility_id'\n// ]\n\nconst memberDataColumns = ['claim_no', 'diagnosis', 'procedures', 'provider']\n\nexport default function UtilizationReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'type',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n  const [reportType, setReportType] = React.useState('client')\n\n  /**\n   * initial -> initialized on generate report\n   * actual -> data displayed on the graph\n   * initial is retained as reference for filtering\n   *  graph data to refrain from making api calls\n   */\n  const [graphData, setGraphData] = React.useState({\n    initial: [],\n    actual: []\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  const [limitType, setLimitType] = React.useState({ ABL: 'Annual Benefit Limit', MBL: 'Maximum Benefit Limit' })\n\n  const [graphFilter, setGraphFilter] = React.useState('all')\n  // const [refreshMemberReport, doRefreshMemberReport] = React.useState(0)\n  const [client, setClient] = React.useState({ name: '--', account_no: '', limit: { type: '', limit: 0 } })\n  const [member, setMember] = React.useState({})\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Report')\n    BreadcrumbsService.setSelectedItems(['utilizationReport'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchTable()\n    // Watch filter items\n\n    // [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page]\n  }, [reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  React.useEffect(() => {\n    /**\n     * Handle Graph Filtering\n     * Also Handles Initial Data\n     */\n    let newData\n    if (graphFilter === 'all') {\n      // Returns all data after being processed for percentage count\n      newData = graphData.initial.map(data => {\n        const newChild = data.claims.map(child => ({ ...child, percentage: getPercentage(child.total_amount) }))\n        return { ...data, claims: newChild }\n      })\n    } else {\n      // Returns selected data after being processed for percentage count\n      newData = graphData.initial.map(data => {\n        let childContainer = []\n        data.claims.map(child => {\n          if (child.claim_type === graphFilter) {\n            childContainer.push({ ...child, percentage: getPercentage(child.total_amount) })\n          }\n        })\n        return { ...data, claims: childContainer }\n      })\n    }\n\n    setGraphData(p => ({ ...p, actual: newData }))\n  }, [graphFilter, graphData.initial])\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        /**\n         * Disabled: Change to dynamic mapping\n         *  if ever needed to print cvs\n         */\n        // return columns.map(col => {\n        //   if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n        //   return formatData({ type: col.type, source: report, field: col.data })\n        // })\n      })\n\n      // const header = columns.map(c => c.label)\n      // LoadingService.loading(true)\n      // ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n      // LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: reports.range.from,\n      date_to: reports.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchReport = () => {\n    if (reportType === 'member') {\n      getMember(reports.search)\n      // doRefreshMemberReport(refreshMemberReport + 1)\n      return\n    }\n\n    if (reports.search === '') return\n    LoadingService.loading(true)\n    Promise.all([\n      ClaimsServices.utilizationClient({\n        search: reports.search,\n        range: reports.range,\n        filter: reports.filter,\n        sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n        page: reports.page,\n        limit: reports.limit,\n        type: graphFilter\n      }),\n      ClaimsReconServices.getClientUtilization({ client_account_no: reports.search }),\n      CustomerCareServices.getClientUtilizationLoa({ client_account_no: reports.search })\n    ])\n      .then(res => {\n        const [graphClientRes, clientUtilRes, clientUtilLoaRes] = res\n        const { data: graph } = graphClientRes.data\n        const { data: utilAmount } = clientUtilRes.data\n        const { data: loaAmount } = clientUtilLoaRes.data\n\n        // Total limit is just a placeholder, waiting for the endpoint // dirty fix\n        setGraph(state => ({\n          ...state,\n          total: graph.client.limit.limit,\n          utilized: utilAmount.total_utilization_amount || 0,\n          ibnr: loaAmount.total_ibnr_amount || 0\n        }))\n        setGraphData(p => ({ ...p, initial: graph.results }))\n        setClient(state => ({\n          ...state,\n          name: graph.client.name,\n          account_no: graph.client.account_number,\n          limit: graph.client.limit\n        }))\n        fetchTable()\n      })\n      .catch(err => console.error(`Error Fetching Data: ${err}`))\n  }\n\n  // Fetching table\n  const fetchTable = () => {\n    ClaimsServices.utilizationClientTable({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { results = [], page, count, limit } = res.data.data\n\n      setReports(state => ({ ...state, data: results, count, page, limit }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = event => {\n    // /*\n    //  * Debounce for searching through\n    //  * SearchTextComponent\n    //  */\n    const search = event.target.value\n    setReports(state => ({ ...state, search }))\n    // clearTimeout(debounce)\n    // setDebounce(\n    // setTimeout(() => {\n    //   }, 500)\n    // )\n  }\n\n  const handleReportType = args => {\n    setReportType(args.target.value)\n  }\n\n  const generateGraph = args => {\n    /**\n     * style={{ bottom: `${data.percentage === '100%' ? '80%' : data.percentage}` }}\n     * -Prevents tooltip/popover description to display above the chart\n     */\n    return (\n      <div className={classes['graph-container']}>\n        <div className={classes['bar-chart-wrapper']}>\n          {args.map((data, index) => (\n            <div className={classes['bar-chart']}>\n              <div\n                className={classes.graph}\n                style={{ height: `${data.percentage}`, background: theme[data.claim_type] }}\n              >\n                {''}\n              </div>\n              <div\n                className={classes.tooltip}\n                style={{ bottom: `${data.percentage === '100%' ? '80%' : data.percentage}` }}\n              >\n                {`${LargeNumberFormatter(data.total_amount / 1000).toString()}K`}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n  const getPercentage = (args = 0) => {\n    // Returns argument on percentage scale\n    const result = (args / 250000) * 100\n    // Set maximum percentage to 100%\n    return `${result > 100 ? 100 : result}%`\n  }\n\n  const handleGraphFilter = args => {\n    // Triggers the filter watch function\n    setGraphFilter(args)\n  }\n\n  const getMember = account_number => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: account_number }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: account_number })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setMemberFetchStatus(`${data.status}`)\n      })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Report Type:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <RadioGroup className={classes['radio-group']} value={reportType} onChange={handleReportType}>\n                <div className={classes['radio-container']}>\n                  <p>Corporate Client</p> <Radio color='primary' value='client' />\n                </div>\n                <div className={classes['radio-container']}>\n                  <p> Member </p> <Radio color='primary' value='member' />\n                </div>\n              </RadioGroup>\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              value={reports.search}\n              onChange={handleSearchChange}\n              placeholder={reportType == 'client' ? `Search for Client ID or Client Name` : `Search for Member ID`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.header}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='ledger-filter-date-from'\n                value={reports.range.from}\n                onChange={date => {\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }}\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='ledger-filter-date-to'\n                value={reports.range.to}\n                onChange={date => {\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }}\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                fetchReport()\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Generate\n            </Button>\n          </div>\n        </div>\n      </div>\n      <hr />\n      {reportType && reportType === 'client' && (\n        // TODO\n        /**\n         * Header-report:\n         * -Waiting for data\n         */\n        <div className={classes.body}>\n          <Typography variant='h6'>{client.name}</Typography>\n          <div className={classes['header-report']}>\n            <div className={classes['report-primary']}>\n              <div className={classes.title}>{client.limit.type ? limitType[client.limit.type] : ''}</div>\n              <Typography variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n            </div>\n            <div className={classes['report-details']}>\n              {graph.total ? (\n                <div className={classes.graph}>\n                  <div\n                    className={classes.item}\n                    style={{ background: '#00a896', width: `${(graph.utilized / graph.total) * 100}%` }}\n                  >\n                    {''}\n                  </div>\n                  <div\n                    className={classes.item}\n                    style={{ background: '#606c38', width: `${(graph.ibnr / graph.total) * 100}%` }}\n                  >\n                    {''}\n                  </div>\n                  <div\n                    className={classes.item}\n                    style={{\n                      background: '#e63946',\n                      width: `${\n                        ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                          ? 0\n                          : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                      }%`\n                    }}\n                  >\n                    {''}\n                  </div>\n                </div>\n              ) : null}\n              <div className={classes.legend}>\n                <div className={classes.item}>\n                  <div className={classes['header-data']}>\n                    <div className={classes.mark} style={{ background: '#00a896' }}>\n                      {''}\n                    </div>\n                    <div className={classes.text} style={{ color: '#00a896' }}>\n                      utilized\n                    </div>\n                  </div>\n                  <div className={classes.details}>{`PHP ${CurrencyFormatter(graph.utilized)}`}</div>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes['header-data']}>\n                    <div className={classes.mark} style={{ background: '#606c38' }}>\n                      {''}\n                    </div>\n                    <div className={classes.text} style={{ color: '#606c38' }}>\n                      ibnr\n                    </div>\n                  </div>\n                  <div className={classes.details}>{`PHP ${CurrencyFormatter(graph.ibnr)}`}</div>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes['header-data']}>\n                    <div className={classes.mark} style={{ background: '#e63946' }}>\n                      {''}\n                    </div>\n                    <div className={classes.text} style={{ color: 'e63946' }}>\n                      available\n                    </div>\n                  </div>\n                  <div className={classes.details}>{`PHP ${CurrencyFormatter(\n                    graph.total - graph.ibnr - graph.utilized\n                  )}`}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <Typography variant='h6'>Utilization Summary</Typography>\n          <div className={classes.filter} style={{ textAlign: 'right' }}>\n            <span>\n              <FormControl>\n                <Select\n                  className={classes['select']}\n                  value={graphFilter}\n                  onChange={e => handleGraphFilter(e.target.value)}\n                >\n                  <MenuItem value={'all'}>\n                    <Typography className={classes.input}>All Types</Typography>\n                  </MenuItem>\n                  {legend.map(data => (\n                    <MenuItem value={data.type}>\n                      <Typography className={classes.input}>{data.description}</Typography>\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </span>\n          </div>\n          <div className={classes['graph-legend']}>\n            <div className={classes['legend-wrapper']}>\n              {legend.map(data => (\n                <div className={classes['legend-group']}>\n                  <div className={classes['legend']} style={{ background: theme[data.type] }}>\n                    {''}\n                  </div>\n                  <div className={classes['description']}>{data.description}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className={classes['graph-reports']}>\n            <div className={classes['graph-plot']}>\n              <div className={classes['plot-items']}>250k</div>\n              <div className={classes['plot-items']}>150k</div>\n              <div className={classes['plot-items']}>100k</div>\n              <div className={classes['plot-items']}>50k</div>\n              <div className={classes['plot-items']}>0</div>\n            </div>\n            {graphData.actual.map(data => (\n              <div className={classes['graph-group']}>\n                {generateGraph(data.claims)}\n                <div className={classes['graph-category']}>\n                  {months[data.month]} {graphData.actual && graphData.actual.length >= 12 ? data.year : ''}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{\n                style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n              }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {clientColumns.map((headCell, index) => (\n                    <TableCell key={`table-header-${index}`}>\n                      <TableSortLabel\n                        active={reports.orderBy === headCell.field}\n                        direction={reports.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.field, order: !reports.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                      {headCell.search && (\n                        <div className={classes.input}>\n                          {headCell.type && headCell.type === 'date' ? (\n                            <DatePicker\n                              noMargin\n                              id={`${headCell.field}`}\n                              onChange={date =>\n                                handleOnFilter({\n                                  field: headCell.field,\n                                  value: date.toISOString(),\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          ) : (\n                            <TextField\n                              noMargin\n                              onChange={event =>\n                                handleOnFilter({\n                                  field: headCell.field,\n                                  value: event.target.value,\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          )}\n                        </div>\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              }\n              body={\n                reports.data &&\n                reports.data.map((claim, index) => (\n                  <TableRow key={index}>\n                    <TableCell>{claim.type}</TableCell>\n                    <TableCell>{claim.total_amount.toFixed(2)}</TableCell>\n                    <TableCell>{claim.cases}</TableCell>\n                    <TableCell>{claim.availed_by_principals}</TableCell>\n                    <TableCell>{claim.availed_by_dependents}</TableCell>\n                  </TableRow>\n                ))\n              }\n              pagination\n              count={reports.count}\n              page={reports.page}\n              limit={reports.limit}\n              rowsPerPageOptions={reports.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* <ClaimsUtilLedgerReport\n        refresh={refreshMemberReport}\n        dateRange={{ from: reports.range.from, to: reports.range.to }}\n        dataColumns={memberDataColumns}\n        hideReport={reportType === 'client' ? 'true' : ''}\n        hideHeader='true'\n      /> */}\n\n      {reportType && reportType === 'member' && (\n        <div>\n          <div className={classes.header}>\n            <Typography variant='h6'>\n              {SafeAccess(member, ['info', 'first_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'middle_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'last_name'], '')}\n            </Typography>\n            <Typography variant='h6'>{SafeAccess(member, ['info', 'brand_name'], '')}</Typography>\n          </div>\n\n          <div className={classes.content}>\n            <table className={classes.memberinfo}>\n              <tbody>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'member_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>Birthdate (Age)</td>\n                  <td className={classes.memberInfoValue}>\n                    {member &&\n                      member.info &&\n                      moment(SafeAccess(member, ['info', 'date_of_birth'], '')).format('MMMM DD, YYYY') +\n                        ' (' +\n                        moment().diff(SafeAccess(member, ['info', 'date_of_birth'], ''), 'years', false) +\n                        ')'}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Gender</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'gender'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Plant Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'limit_unit'], '') +\n                      ' ' +\n                      SafeAccess(member, ['benefit_limits', 1, 'limit'], '')}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Civil Status</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'civil_status'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>R&amp;B</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'limit_unit'], '') +\n                      ' ' +\n                      SafeAccess(member, ['benefit_limits', 0, 'limit'], '')}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Effectivity Date</td>\n                  <td className={classes.memberInfoValue}>\n                    {moment(SafeAccess(member, ['info', 'effectivity_date'], '')).format('MMMM DD, YYYY')}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          {/* TODO: replace with filler */}\n          <br />\n\n          <Utilization\n            fetchService={ClaimsAdjudicationServices.getUtilizations}\n            utilizationLoa={utilizationLoa}\n            // isMember={isMember}\n            member={member}\n            // client={client}\n            diagnosis={[]}\n            dataColumns={memberDataColumns}\n            hideSearchBar\n            hideActionColumn\n          />\n        </div>\n      )}\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\n// Styles\nimport classes from './LoadingHimsData.module.scss'\n\nconst columns = [\n  { label: `Member's Account No.`, field: 'member_account_number', match: 'start' },\n  { label: `Member's Plan Contract`, field: 'contract', match: 'exact' },\n  { label: 'Claim No.', field: 'claim_number', search: true, match: 'start' },\n  { label: 'Date of Availment', type: 'date', field: 'availment_date', match: 'date' },\n  { label: 'Approved Date', type: 'date', field: 'approved_date', match: 'date' },\n  { label: 'Approved by', field: 'approved_by', match: 'any' },\n  { label: 'Posted Date', type: 'date', field: 'posted_date', match: 'date' },\n  { label: 'Posted by', field: 'posted_by', match: 'any' },\n  { label: 'TPA', field: 'TPA', match: 'any' },\n  { label: 'SOA Number', field: 'soa_number', match: 'start' },\n  { label: 'Office Branch', field: 'office_branch', match: 'any' },\n  { label: 'Reimbursement', field: 'reimbursement', match: 'exact' },\n  { label: 'Type of Availment', field: 'availment_type', match: 'any' },\n  { label: 'Amount of Availment', type: 'currency', field: 'availment_amount', match: 'number' },\n  { label: 'Date Admitted', type: 'date', field: 'date_admitted', match: 'date' },\n  { label: 'Date Discharge', type: 'date', field: 'date_discharged', match: 'date' },\n  { label: 'Hospital/Clinic Code', field: 'facility_code', match: 'any' },\n  { label: 'Procedure/s', field: 'procedures', match: 'any' },\n  { label: 'Diagnosis', field: 'diagnosis', match: 'any' },\n  { label: 'In House', field: 'in_house', match: 'any' },\n  { label: 'Payment Due Date', type: 'date', field: 'payment_due_date', match: 'date' },\n  { label: 'Breakdown Amount', type: 'currency', field: 'breakdown_amount', match: 'number' },\n  { label: 'Breakdown AR Amount', type: 'currency', field: 'breakdown_ar_amount', match: 'number' },\n  { label: 'AR Addresee', field: 'ar_addresee', match: 'any' },\n  { label: `Member's Name`, field: 'member_name', match: 'any' },\n  { label: 'Payee Code', field: 'payee_code', match: 'any' },\n  { label: 'Payee Name', field: 'payee_name', match: 'any' },\n  { label: 'Disease Code', field: 'disease_code', match: 'any' },\n  { label: 'Disease Name', field: 'disease_name', match: 'any' },\n  { label: 'Layer', field: 'layer', match: 'any' },\n  { label: 'Remarks', field: 'remarks', match: 'any' },\n  { label: 'AR Reason', field: 'ar_reason', match: 'any' },\n  { label: 'Code of AR Reason', field: 'ar_reason_code', match: 'any' },\n  { label: 'Type of Service', field: 'type_of_service', match: 'any' },\n  { label: 'Hospital Services Details', field: 'hospital_service_details', match: 'any' },\n  { label: 'Hospital Services Amount', type: 'currency', field: 'hospital_service_amount', match: 'number' },\n  { label: 'Hospital Services AR Amount', type: 'currency', field: 'hospital_service_ar_amount', match: 'number' }\n]\n\nexport default function LoadingHimsData (props) {\n  const [claims, setClaims] = React.useState({\n    raw: [],\n    data: [],\n    filter: {},\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'member_account_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Template for Loading HIMS Data')\n    BreadcrumbsService.setSelectedItems(['loadingHimsData'])\n  }, [])\n\n  const fetchHIMSData = params => {\n    LoadingService.loading(true)\n    ClaimsServices.loadingHIMSData({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page } = res.data.data\n      console.log(res)\n      setClaims(state => ({ ...state, data: results, raw, count, page, limit }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchHIMSData(_params)\n  }\n\n  const handleOnColumnFilter = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    fetchHIMSData(_params)\n  }\n\n  const handleGenerateReport = () => {\n    LoadingService.loading(true)\n    ClaimsServices.loadingHIMSData({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { results } = res.data.data\n\n      const claims = results.map(i => ({\n        ...i,\n        availment_date: DateFormatter(i.availment_date),\n        approved_date: DateFormatter(i.approved_date),\n        posted_date: DateFormatter(i.posted_date),\n        date_admitted: DateFormatter(i.date_admitted),\n        date_discharged: DateFormatter(i.date_discharged),\n        payment_due_date: DateFormatter(i.payment_due_date)\n      }))\n\n      const header = columns.map(c => c.label)\n      const rows = claims.map(claim =>\n        columns.map(col => formatData({ type: col.type, source: claim, field: col.field }))\n      )\n\n      ArrayToCSV({ fileName: 'Loading HIMS Data Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                fetchHIMSData(claims)\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    <TableSortLabel\n                      active={claims.orderBy === headCell.field}\n                      direction={claims.order ? 'asc' : 'desc'}\n                      onClick={event => handleOnPaginate({ orderBy: headCell.field, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    <div className={classes.input}>\n                      <TextField\n                        noMargin\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnColumnFilter({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.field]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                              setClaims(state => ({\n                                ...state,\n                                filter: { ...state.filter, [headCell.field]: { value: search, match: headCell.match } }\n                              }))\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.field })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ConfinementReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No.', data: 'no', search: false },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, match: 'any' },\n  { label: 'Medical Partner Name', data: 'facility_name', search: true, match: 'any' },\n  { label: 'ICD10 Diagnosis', type: 'array', data: 'diagnosis.diagnosis_description', search: true, match: 'any' },\n  { label: 'Date of Service', type: 'date', data: 'date_from', search: true, match: 'date' },\n  { label: 'Member Account No.', data: 'member_account_number', search: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ConfinementReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('List of Emergencies Leading to Confinement')\n    BreadcrumbsService.setSelectedItems(['confinementReport'])\n  }, [])\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.confinementReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _claims = results.map(claim => ({\n        ...claim\n      }))\n      setClaims(state => ({ ...state, data: _claims, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.confinementReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _claims = results.map(claim => ({\n        ...claim\n      }))\n\n      const rows = _claims.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n      // console.log(rows)\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'List of Emergencies Leading to Confinement',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          []\n        ],\n        fileName: 'List of Emergencies Leading to Confinement Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchRecords()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","export default {\n  // rows\n  header: [\n    { id_row: { label_left: 'Medical Partner ID:', label_right: 'Total PR Amount:' } },\n    { name_row: { label_left: 'Medical Partner Name:', label_right: 'Discount Amount:' } },\n    { bundle_row: { label_left: 'Bundle/SOA Number:', label_right: 'Due Date:' } },\n    { date_row: {label_left: 'Bundle/SOA Date:'} }\n  ],\n  footer: ['Total']\n}\n","import React from 'react'\n\n// Material Component\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Footer.module.scss'\n\nexport default function ClaimsUtilLedgerReport (props) {\n  const { total = {}, bundles = [], page } = props\n\n  // TODO For refactoring :(( )\n  return (\n    <div className={classes.footer}>\n      <hr />\n      {bundles.length > 0 && (\n        <div className={classes.bundle}>\n          <p><span><b>Bundle Number: </b></span>{`${bundles[page - 1]}`}</p>\n        </div>\n      ) }\n\n      <div className={classes.total}>\n        <div className={classes['total-row']}>\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL APPROVED: ${CurrencyFormatter(total.total_approved_amount)}`}</p>\n          </div>\n\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL TAX: ${CurrencyFormatter(total.total_tax_amount)}`}</p>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { staticHeaderFooter } from './helper/staticHeaderFooter'\n\n// Components\nimport Footer from './Footer/Footer'\n\n// Validator\nimport DateRangeValidator from './../TransmittalReport/validator/DateRangeValidator'\n\n// Styles\nimport classes from './PaymentRequestReport.module.scss'\n\nconst columns = [\n  { label: 'No.', sortField: 'number', sort: false, search: false, align: 'left' },\n  { label: 'RCS/LOA No.', sortField: 'loa_number', sort: true, search: true, align: 'left', match: 'start' },\n  {\n    label: 'Member Account No.',\n    sortField: 'member_account_number',\n    sort: true,\n    search: true,\n    align: 'left',\n    match: 'any'\n  },\n  { label: 'Member Name', sortField: 'member_name', sort: true, search: true, align: 'left', match: 'any' },\n  { label: 'Approved Amount', sortField: 'approved_amount', sort: false, search: false, align: 'right' },\n  { label: 'Tax Amount', sortField: 'tax_amount', sort: false, search: false, align: 'right' }\n]\n\nconst initialDetails = {\n  total_pr_amount: 0,\n  discount_amount: 0,\n  due_date: '',\n  total_approved_amount: 0,\n  total_tax_amount: 0\n}\n\nexport default function PaymentRequestReport (props) {\n  // added\n  const [searchValue, setSearchValue] = React.useState({\n    medical_partner_id: '',\n    medical_partner_name: '',\n    bundle: ''\n  })\n\n  const [claims, setClaims] = React.useState({\n    bundles: [],\n    raw: [],\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'loa_number',\n    order: true,\n    page: 1,\n    limit: 1,\n    count: 0,\n    filter: {},\n    rowsPerPageOptions: [0],\n    // on filter_value\n    search: {\n      medical_partner_id: '',\n      medical_partner_name: '',\n      bundle: ''\n    }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n\n  const [details, setDetails] = React.useState(initialDetails)\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    bundle: {\n      id: [],\n      data: []\n    }\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Payment Request Report')\n    BreadcrumbsService.setSelectedItems(['paymentRequestReport'])\n  }, [])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    bundle: null,\n    column: null\n  })\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, search: { ...state.search, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.medicalPartner.data) {\n        if (value === i.id || value === i.name) {\n          setClaims(state => ({\n            ...state,\n            search: { ...state.search, medical_partner_id: i.id, medical_partner_name: i.name }\n          }))\n\n          setSuggestions(state => ({\n            ...state,\n            medicalPartner: {\n              id: [],\n              name: [],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestions(state => ({\n        ...state,\n        medicalPartner: {\n          id: [],\n          name: [],\n          data: []\n        }\n      }))\n      const { 2: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Bundle/SOA*\n  const handleOnChangeBundleSoa = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, search: { ...state.search, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.bundle.data) {\n        if (value === i.bundle_number || value === i.soa) {\n          setClaims(state => ({\n            ...state,\n            search: {\n              ...state.search,\n              bundle: value\n            }\n          }))\n          setSuggestions(state => ({\n            ...state,\n            bundle: {\n              id: [],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestions(state => ({\n        ...state,\n        bundle: {\n          id: [],\n          data: []\n        }\n      }))\n      getBundleSoaSuggestions({ value })\n    }\n  }\n\n  const getBundleSoaSuggestions = ({ value = '' }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.bundle)\n    setDebounce(state => ({\n      ...state,\n      bundle: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'bundle-soa',\n            params: { query: value }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n\n            // TODO Clarify if its OR (Bundle/SOA)\n            // store soa_number first\n            data.forEach(d => {\n              if (d.soa) _items.push(d.soa)\n              _items.push(d.bundle_number)\n            })\n\n            setSuggestions(state => ({\n              ...state,\n              bundle: { ...state.bundle, id: _items.filter(i => i.startsWith(value)), data }\n            }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnFilter = params => {\n    // added\n    setSearchValue(state => ({ ...state, ...params.search }))\n    const _claims = { ...claims, ...params.search }\n\n    if (claims.search.medical_partner_id.trim().length < 3 || claims.search.medical_partner_name.trim().length < 3) {\n      LoadingService.loading(false)\n      setFetching(false)\n      return setClaims(state => ({ ...state, data: [] }))\n    }\n    LoadingService.loading(true)\n\n    // prev 'claims'\n    ClaimsServices.paymentRequestReport({\n      range: _claims.range,\n      sort: `${_claims.orderBy}|${_claims.order ? 'asc' : 'desc'}`,\n      page: _claims.page,\n      limit: _claims.limit,\n      filter: _claims.filter,\n      searchValue: _claims.search\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page } = res.data.data\n      setClaims(state => ({ ...state, bundles: results, raw, count, page, limit }))\n\n      setFetching(true)\n\n      const bundle_number = results[_claims.page - 1]\n      if (bundle_number) {\n        ClaimsServices.paymentRequestClaims(\n          { sort: `${_claims.orderBy}|${_claims.order ? 'asc' : 'desc'}`, searchValue: _claims.search },\n          bundle_number\n        ).then(res => {\n          const { results = [], details = {} } = res.data.data\n\n          // details.due_date = DateFormatter(details.due_date)\n\n          setClaims(state => ({ ...state, data: results }))\n          setDetails(state => ({ ...state, ...details }))\n          setFetching(false)\n          LoadingService.loading(false)\n        })\n      } else {\n        setClaims(state => ({ ...state, data: [] }))\n        setDetails(state => ({ ...state, ...initialDetails }))\n        setFetching(false)\n        LoadingService.loading(false)\n      }\n    })\n  }\n\n  const handlePagination = params => {\n    const bundle_number = params.bundles[params.page - 1]\n\n    ClaimsServices.paymentRequestClaims(\n      {\n        sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n        filter: params.filter,\n        // added\n        searchValue: searchValue\n      },\n      bundle_number\n    ).then(res => {\n      const { results = [], details = {} } = res.data.data\n\n      // details.due_date = DateFormatter(details.due_date)\n\n      setClaims(state => ({ ...state, data: results }))\n      setDetails(state => ({ ...state, ...details }))\n      setFetching(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const handleColumnFiltering = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n    // setFetching(true)\n    setClaims(state => ({ ...state, ...params }))\n    handlePagination(_params)\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n    setFetching(true)\n    setClaims(state => ({ ...state, ...params }))\n    handlePagination(_params)\n  }\n\n  const handleGenerateReport = () => {\n    if (!claims.raw.length) return\n\n    const header = columns.map(i => i.label)\n\n    const data = staticHeaderFooter({ ...claims.range, raw: claims.raw, ...claims.search, columns: header })\n\n    ArrayToCSV({ fileName: `${claims.search.medical_partner_name} Payment Request Report`, data })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes['search-header']}>\n          {/* row-1 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Medical Partner ID:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by medical partner id'\n                  id='medical-partner-id'\n                  value={claims.search.medical_partner_id}\n                  suggestions={suggestions.medicalPartner.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'medical_partner_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Total PR Amount: ${CurrencyFormatter(details.total_pr_amount)}`}</Typography>\n            </div>\n          </div>\n          {/* row-2 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Medical Partner Name:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by medical partner name'\n                  id='medical-partner-name'\n                  value={claims.search.medical_partner_name}\n                  suggestions={suggestions.medicalPartner.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'medical_partner_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Discount Amount: ${CurrencyFormatter(details.discount_amount)}`}</Typography>\n            </div>\n          </div>\n          {/* row-3 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Bundle/SOA Number:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by bundle/soa number'\n                  id='account-number'\n                  value={claims.search.bundle}\n                  suggestions={suggestions.bundle.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeBundleSoa({\n                      field: 'bundle',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Due Date: ${\n                details.due_date ? DateFormatter(details.due_date) : ''\n              }`}</Typography>\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                // handleOnFilter({ ...claims, page: 1 })\n                handleOnFilter({ range: claims.range, search: claims.search })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          // onClick={event => {}}\n                          onClick={event =>\n                            handleColumnFiltering({ orderBy: headCell.sortField, order: !claims.order })\n                          }\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <TextField\n                      id={`text-field-${headCell.sortField}`}\n                      readOnly={!headCell.search}\n                      TextFieldStyle={{ margin: 0 }}\n                      fullWidth\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce.column)\n                        setDebounce(state => ({\n                          ...state,\n                          column: setTimeout(() => {\n                            handleColumnFiltering({\n                              filter: {\n                                ...claims.filter,\n                                [headCell.sortField]: { value: search, match: headCell.match }\n                              }\n                            })\n                            // setClaims(state => ({\n                            //   ...state,\n                            //   filter: { ...state.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                          }, 500)\n                        }))\n                      }}\n                    />\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              fetching ? (\n                <TableRow className={classes['table-row']}>\n                  <TableCell align='center' colSpan={6}>\n                    <CircularProgress size={30} />\n                  </TableCell>\n                </TableRow>\n              ) : claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell align='left'>{item.loa_number}</TableCell>\n                    <TableCell align='left'>{item.member_account_number}</TableCell>\n                    <TableCell align='left'>{`${item.member_name}`}</TableCell>\n                    <TableCell align='right'>\n                      {CurrencyFormatter(!item.approved_amount <= 0 ? item.approved_amount : 0)}\n                    </TableCell>\n                    <TableCell align='right'>\n                      {CurrencyFormatter(!item.tax_amount <= 0 ? item.tax_amount : 0)}\n                    </TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n          <Footer\n            total={{ total_approved_amount: details.total_approved_amount, total_tax_amount: details.total_tax_amount }}\n            bundles={claims.bundles}\n            page={claims.page}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import constants from './constants'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// TODO Need refactor\n// UGLY CSV Generation\nexport const staticHeaderFooter = args => {\n  const { columns = [], to, from, raw = [], medical_partner_id, medical_partner_name } = args\n  columns.push('\\r\\n')\n  const data = []\n\n  for (const item of raw) {\n    const total_approved_amount = item.details.reduce((a, c) => a + c.approved_amount, 0)\n    const total_tax_amount = item.details.reduce((a, c) => a + c.tax_amount, 0)\n\n    // HEADER\n    const static_header = constants.header.map(i => {\n      switch (true) {\n        case i.hasOwnProperty('id_row'):\n\n          return [i.id_row.label_left, medical_partner_id, '', '', i.id_row.label_right, total_approved_amount, '\\r\\n']\n        case i.hasOwnProperty('name_row'):\n          // hardcoded discount value\n          return [i.name_row.label_left, medical_partner_name, '', '', i.name_row.label_right, 0, '\\r\\n']\n        case i.hasOwnProperty('bundle_row'):\n          return [i.bundle_row.label_left, item._id, '', '', i.bundle_row.label_right, DateFormatter(item.due_date), '\\r\\n']\n        case i.hasOwnProperty('date_row'):\n          return [i.date_row.label_left, `${DateFormatter(from)} - ${DateFormatter(to)}`, '\\r\\n']\n      }\n    })\n\n    // COLUMN HEADER\n    const _columns = columns.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(','), '').slice(1)\n\n    // BODY\n    const claims = item.details.map((i, index) => ({ no: index + 1, ...i }))\n    const rows = []\n    claims.forEach(item => {\n      delete item.bundle_number\n      rows.push(Object.values(item))\n    })\n    const body = rows.map(row =>\n      [\n        row.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(','), '').slice(1),\n        '\\r\\n'\n      ].join('')\n    )\n\n    // FOOTER\n    const static_footer = constants.footer.map(i => {\n      switch (i) {\n        case 'Total':\n          return ['', '', '', i, total_approved_amount, total_tax_amount, '\\r\\n']\n      }\n    })\n    const _data = [].concat(static_header, '\\r\\n', _columns, '\\r\\n', body, '\\r\\n', static_footer, '\\r\\n', '\\r\\n', '\\r\\n')\n\n    data.push(..._data)\n  }\n\n  return data\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\n// import moment from 'moment'\n\n// Styles\nimport classes from './ReimbursementReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No.', data: 'no', search: false },\n  { label: 'Claim Number', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Reimbursement Claim Amount', type: 'number', data: 'grand_total', search: false },\n  { label: 'Reimbursement Category', data: 'reimbursement_category', search: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', type: 'sentence', search: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ReimbursementReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'latest.date.from'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20],\n    grandTotal: 0\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Reimbursement Claims Report')\n    BreadcrumbsService.setSelectedItems(['reimbursementReport'])\n  }, [])\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursementClaimReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0, grand_total = 0 } = data\n      setClaims(state => ({ ...state, data: results, count, grandTotal: grand_total }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursementClaimReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Reimbursement Claims Report',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Total Amount: ${grand_total}`]\n        ],\n        fileName: 'Reimbursement Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchRecords()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'sentence') {\n      output = source[field]\n        .toLowerCase()\n        .split('_')\n        .map(word => word.charAt(0).toUpperCase() + word.substring(1))\n        .join(' ')\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' disabled={claims.data.length <= 0} onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    <div className={`${classes.input} ${!headCell.search ? classes.hidden : ''}`}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date =>\n                            handleOnFilter({\n                              field: headCell.data,\n                              value: date.toISOString(),\n                              match: headCell.match\n                            })\n                          }\n                        />\n                      ) : (\n                        <TextField\n                          noMargin\n                          onChange={event =>\n                            handleOnFilter({\n                              field: headCell.data,\n                              value: event.target.value,\n                              match: headCell.match\n                            })\n                          }\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <Typography variant='caption' className='bold'>\n                <span>Total Amount: </span>\n                <span>{CurrencyFormatter(claims.grandTotal)}</span>\n              </Typography>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date Range From')\n    .required(),\n  date_to: Joi.date()\n    .label('Date Range To')\n    .required()\n    .min(Joi.ref('date_from'))\n    .max(Joi.ref('date_max'))\n    .messages({\n      'date.min': `\"Date Range To\" should be on or after \"Date Range From\"`,\n      'date.max': `\"Date Range To\" should be on the same year....s\"`\n    }),\n  date_max: Joi.date()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// MUI Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport PrintIcon from '@material-ui/icons/Print'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n// Custom Components\nimport Table from 'SharedComponents/Table/Table'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport classes from './ClaimsSummaryReport.module.scss'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\n\n// Validator\nimport DateRangeValidator from './validator/DateRangeValidator'\n\n// Utilities\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport moment from 'moment'\n\nconst columns = [\n  { label: 'Month', align: 'center', type: 'string', data: 'month' },\n  { label: 'Number of Claims Received', align: 'center', type: 'number', data: 'number_of_claims' },\n  { label: 'Number of Claims Processed', align: 'center', type: 'number', data: 'claims_processed' },\n  { label: 'Amount of Claims Processed', align: 'center', type: 'number', data: 'amount_processed' }\n]\nconst initialClaims = {\n  data: {\n    claims: [\n      { month: 'January', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'Febuary', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'March', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'April', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'May', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'June', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'July', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'August', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'September', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'October', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'November', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'December', number_of_claims: 0, claims_processed: 0, amount_processed: 0 }\n    ],\n    total_received: 0,\n    total_processed: { count: 0, total: 0 }\n  },\n  range: {\n    from: moment().format(),\n    to: moment().format()\n  },\n  filter: {\n    claim_type: 'ALL',\n    claim_source: 'ALL',\n    claim_sub_type: 'ALL',\n    contract_plan: 'ALL',\n    section: 'ALL',\n    claim_status: 'ALL',\n    user: 'ALL',\n    geography: 'ALL'\n  }\n}\nconst initialValue = {\n  claim_type: [],\n  claim_source: [],\n  claim_sub_type: [],\n  contract_plan: [],\n  section: [],\n  claim_status: [],\n  user: [],\n  geography: []\n}\n\n/**\n * Claims Summary Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ClaimsSummaryReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [suggestion, setSuggestion] = React.useState(initialValue)\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    claim_sub_type: null,\n    section: null,\n    user: null,\n    geopgraphy: null\n  })\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [claims, setClaims] = React.useState(initialClaims)\n\n  React.useEffect(() => {\n    PageTitleService('Claims Summary Report')\n    BreadcrumbsService.setSelectedItems(['claimsSummaryReport'])\n  }, [])\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsSummaryReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(({ data: res }) => {\n      const { data } = res\n      const { total_received = 0, total_processed = {} } = data\n      const results = data.claims\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Claims Summary Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Contract Plan Type: ${claims.filter.contract_plan}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n'\n          ],\n          [`Grand Total: `, `${total_received}`, `${total_processed.count}`, `${total_processed.total}`].join(',')\n        ],\n        fileName: 'Claims Summary Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.map(d => d[field])] }))\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  const handleOnFilter = () => {\n    LoadingService.loading(true)\n    const params = {\n      filter: claims.filter,\n      range: claims.range\n    }\n    ClaimsServices.claimsSummaryReport(params).then(({ data: res }) => {\n      const { data } = res\n      setClaims({ ...claims, data: data })\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to,\n      date_max: `12-31-${moment(claims.range.from).year()}`\n    })\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type || 'ALL'}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source || 'ALL'}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Sub-Type/Category</Typography>\n              <AutoComplete\n                placeholder='Search by claim sub-type/category'\n                id='claim-sub-type'\n                value={claims.filter.claim_sub_type || 'ALL'}\n                suggestions={suggestion.claim_sub_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-sub-type',\n                    field: 'sub_type'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section || 'ALL'}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, section: event }\n                  }))\n                }}\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user || 'ALL'}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, user: event }\n                  }))\n                }}\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.geography || 'ALL'}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, geography: event }\n                  }))\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && handleOnFilter()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.claims.length ? (\n                claims.data.claims.map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell align='center'>{item.month}</TableCell>\n                    <TableCell align='center'>{item.number_of_claims}</TableCell>\n                    <TableCell align='center'>{item.claims_processed}</TableCell>\n                    <TableCell align='center'>{item.amount_processed}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination={false}\n          />\n        </div>\n        <div className={classes.footer}>\n          <div className={classes.label}>\n            <Typography className='bold'>Grand Total:</Typography>\n          </div>\n          <div className={classes.received}>\n            <Typography className='bold'>{claims.data.total_received}</Typography>\n          </div>\n          <div className={classes.processed}>\n            <Typography className='bold'>{claims.data.total_processed.count}</Typography>\n          </div>\n          <div className={classes.total}>\n            <Typography className='bold'>{claims.data.total_processed.total}</Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ProductivityPerformaceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Time', data: 'time' },\n  { label: 'Number of Claims Received', type: 'number', data: 'received' },\n  { label: 'Number of Claims Processed', type: 'number', data: 'processed' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { claim_type: '', claim_source: '', claim_sub_type: '', section: '', user: '', region: '' },\n    receivedTotal: 0,\n    processedTotal: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    claim_type: [],\n    claim_source: [],\n    claim_sub_type: [],\n    section: [],\n    user: [],\n    region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    claim_sub_type: null,\n    section: null,\n    user: null,\n    region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Productivity and Performance Report')\n    BreadcrumbsService.setSelectedItems(['productivityPerformaceReport'])\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.productivityReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], received_total = 0, processed_total = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        receivedTotal: received_total,\n        processedTotal: processed_total\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.productivityReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], received_total = 0, processed_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Productivity and Performance Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Claim Sub-Type/Category: ${claims.filter.claim_sub_type}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n',\n            `Geogpraphy: ${claims.filter.region}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Grand Total`, `${received_total}`, `${processed_total}`].join(',')\n        ],\n        fileName: 'Productivity and Performance Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Sub-Type/Category</Typography>\n              <AutoComplete\n                placeholder='Search by claim sub-type/category'\n                id='claim-sub-type'\n                value={claims.filter.claim_sub_type}\n                suggestions={suggestion.claim_sub_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-sub-type',\n                    field: 'sub_type'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={suggestion.section}\n                onChange={\n                  (value, isSuggestionClick) => {}\n                  // handleOnChange({\n                  //   value,\n                  //   isSuggestionClick,\n                  //   category: 'claim-sub-type',\n                  //   field: 'sub_type'\n                  // })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={suggestion.user}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'user',\n                    field: 'first_name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.region}\n                suggestions={suggestion.region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'region',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n            footerComponent={\n              <div className={classes.footer}>\n                <Typography variant='caption' className='bold'>\n                  <span>Grand Total: </span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{``}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{claims.receivedTotal}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{``}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{claims.processedTotal}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{``}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{``}</span>\n                </Typography>\n              </div>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ReturnedClaimsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No.', sortField: 'no', search: false, sort: false, type: 'number' },\n  { label: 'Claim Number', sortField: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Claim Amount', sortField: 'claim_amount', search: false, sort: false, type: 'number' },\n  { label: 'Reason for Return', sortField: 'return_reason', search: true, sort: true, match: 'any' },\n  { label: 'Medical Partner ID', sortField: 'facility_id', search: true, sort: true, match: 'start' },\n  { label: 'Medical Partner Name', sortField: 'facility_name', search: true, sort: true, match: 'start' },\n  { label: 'Claim Type', sortField: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', sortField: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Geography', sortField: 'geography', search: true, sort: true, match: 'any' }\n]\n\nexport default function ReturnedClaimsReport (props) {\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'status_date'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    total_amount: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Returned Claims Report')\n    BreadcrumbsService.setSelectedItems(['returnedClaimsReport'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const fetchReport = params => {\n    LoadingService.loading(true)\n    ClaimsServices.returnedClaimsReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], total = [], count, limit, page } = res.data.data\n      const [_total] = total\n\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count,\n        page,\n        limit,\n        total_amount: total.length ? _total.total_amount : 0\n      }))\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchReport({ ...claims, ...range })\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchReport({ ..._params, range: dateRange })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = params => {\n    LoadingService.loading(true)\n    ClaimsServices.returnedClaimsReport({\n      range: dateRange,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { results } = res.data.data\n      const header = columns.map(i => i.label)\n\n      const rows = results.map(i => {\n        return columns.map(col => formatData({ type: col.type, source: i, field: col.sortField }))\n      })\n\n      // array.from or of\n      ArrayToCSV({\n        statics: [\n          [\n            'Returned Claims Report',\n            '\\r\\n',\n            '\\r\\n',\n            ['Date Range:', `${DateFormatter(dateRange.from)} - ${DateFormatter(dateRange.to)}`],\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', 'Total Amount:', `${claims.total_amount}`].join(',')\n        ],\n        fileName: 'Returned Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                handleOnClickFilter({ range: claims.range })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV(claims)} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <div className={classes.input}>\n                      <TextField\n                        noMargin\n                        id={`text-field-${headCell.sortField}`}\n                        readOnly={!headCell.search}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnPaginate({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.sortField]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell align='left'> {item.claim_number}</TableCell>\n                    <TableCell align='right'>{CurrencyFormatter(item.claim_amount)}</TableCell>\n                    <TableCell align='left'>{item.return_reason}</TableCell>\n                    <TableCell align='left'> {item.facility_id}</TableCell>\n                    <TableCell align='left'>{item.facility_name}</TableCell>\n                    <TableCell align='left'>{item.claim_type}</TableCell>\n                    <TableCell align='left'>{item.claim_source}</TableCell>\n                    <TableCell align='left'>{item.geography}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <Typography variant='caption' className='bold'>\n                <span>Total Amount: </span>\n                <span>{CurrencyFormatter(claims.total_amount)}</span>\n              </Typography>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './PerformanceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: '', data: 'type' },\n  { label: 'Total Number of Handled Claims', type: 'number', data: 'count' },\n  { label: 'Average Handling Time', type: 'number', data: 'average' },\n  { label: 'Number of Hours Worked', type: 'number', data: 'work' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { claim_type: '', claim_source: '', contract_plan_type: '', section: '', user: '' },\n    total: {}\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    claim_type: [],\n    claim_source: [],\n    contract_plan_type: [],\n    section: [],\n    user: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    contract_plan_type: null,\n    section: null,\n    user: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.performanceReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total = {} } = data\n      setClaims(state => ({ ...state, data: results, total }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.performanceReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total = {} } = data\n\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Performance Summary Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Contract Plan Type: ${claims.filter.contract_plan_type}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n'\n          ],\n          [`Grand Amount: `, `${total.count}`, `${total.average}`, `${total.work}`].join(',')\n        ],\n        fileName: 'Performance Summary Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    PageTitleService('Performance Summary Report')\n    BreadcrumbsService.setSelectedItems(['performanceReport'])\n  }, [])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Contract Plan Type</Typography>\n              <AutoComplete\n                placeholder='Search by contract plan type'\n                id='contract-plan-type'\n                value={claims.filter.contract_plan_type}\n                suggestions={suggestion.contract_plan_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'contract-plan-type',\n                    field: 'code'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={suggestion.section}\n                onChange={\n                  (value, isSuggestionClick) => {}\n                  // handleOnChange({\n                  //   value,\n                  //   isSuggestionClick,\n                  //   category: 'claim-sub-type',\n                  //   field: 'sub_type'\n                  // })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={suggestion.user}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'user',\n                    field: 'first_name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n            footerComponent={\n              <div className={classes.footer}>\n                <Typography variant='caption' className='bold'>\n                  <span>Grand Total: </span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{claims.total.count}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{claims.total.average}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{claims.total.work}</span>\n                </Typography>\n              </div>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './AgingPartialApprovedReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Month', data: 'month' },\n  { label: 'Number of partially approved claims within grace period', type: 'number', data: 'total15Days' },\n  { label: 'Number of partially approved claims 1 week beyond grace period', type: 'number', data: 'total1Week' },\n  { label: 'Number of partially approved claims 1 month beyond grace period', type: 'number', data: 'total1Month' },\n  { label: 'Percentage of partially approved claims beyond grace period (total)', type: 'number', data: 'totalAll' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { facility_id: '', facility_name: '', claim_type: '', claim_source: '', region: '' },\n    total15Days: 0,\n    total1Week: 0,\n    total1Month: 0,\n    totalAll: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    facility_id: [],\n    facility_name: [],\n    claim_type: [],\n    claim_source: [],\n    region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility_id: null,\n    facility_name: null,\n    claim_type: null,\n    claim_source: null,\n    region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Aging of Partially Approved Claim Report')\n    BreadcrumbsService.setSelectedItems(['agingPartialApprovedReport'])\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingPartialApprovedClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingPartialApprovedClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Aging of Partially Approved Claim Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Medical Partner ID: ${claims.filter.facility_id}`,\n            '\\r\\n',\n            `Medical Partner Name: ${claims.filter.facility_name}`,\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Geogpraphy: ${claims.filter.region}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Grand Total`, `${total15Days}`, `${total1Week}`, `${total1Month}`, `${totalAll}`].join(',')\n        ],\n        fileName: 'Aging of Partially Approved Claim Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner ID</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner id'\n                id='facility-id'\n                value={claims.filter.facility_id}\n                suggestions={suggestion.facility_id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'facility',\n                    field: 'id'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Parttner Name</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner name'\n                id='facility-name'\n                value={claims.filter.facility_name}\n                suggestions={suggestion.facility_name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'facility',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.region}\n                suggestions={suggestion.region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'region',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n            // Footer trials\n            // footer={\n            //   <TableRow>\n            //     <TableCell>\n            //       <Typography variant='caption' className={`bold ${classes.label}`}>\n            //         <span>Grand Total: </span>\n            //       </Typography>\n            //     </TableCell>\n            //     <TableCell>\n            //       <Typography variant='caption' className='bold'>\n            //         <span>{CurrencyFormatter(claims.total15Days)}</span>\n            //       </Typography>\n            //     </TableCell>\n            //     <TableCell>\n            //       <Typography variant='caption' className='bold'>\n            //         <span>{CurrencyFormatter(claims.total1Week)}</span>\n            //       </Typography>\n            //     </TableCell>\n            //     <TableCell>\n            //       <Typography variant='caption' className='bold'>\n            //         <span>{CurrencyFormatter(claims.total1Month)}</span>\n            //       </Typography>\n            //     </TableCell>\n            //     <TableCell>\n            //       <Typography variant='caption' className='bold'>\n            //         <span>{CurrencyFormatter(claims.totalAll)}</span>\n            //       </Typography>\n            //     </TableCell>\n            //   </TableRow>\n            // }\n            footerComponent={\n              <div className={classes.footer}>\n                <Typography variant='caption' className={`bold ${classes.label}`}>\n                  <span>Grand Total: </span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{CurrencyFormatter(claims.total15Days)}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{CurrencyFormatter(claims.total1Week)}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{CurrencyFormatter(claims.total1Month)}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{CurrencyFormatter(claims.totalAll)}</span>\n                </Typography>\n              </div>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './AgingReturnClaimReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Month', data: 'month' },\n  { label: 'Number of partially approved claims within grace period', type: 'number', data: 'total15Days' },\n  { label: 'Number of partially approved claims 1 week beyond grace period', type: 'number', data: 'total1Week' },\n  { label: 'Number of partially approved claims 1 month beyond grace period', type: 'number', data: 'total1Month' },\n  { label: 'Percentage of partially approved claims beyond grace period (total)', type: 'number', data: 'totalAll' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { facility_id: '', facility_name: '', claim_type: '', claim_source: '', region: '' },\n    total15Days: 0,\n    total1Week: 0,\n    total1Month: 0,\n    totalAll: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    facility_id: [],\n    facility_name: [],\n    claim_type: [],\n    claim_source: [],\n    region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility_id: null,\n    facility_name: null,\n    claim_type: null,\n    claim_source: null,\n    region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Aging of Returned Claims Report')\n    BreadcrumbsService.setSelectedItems(['agingReturnedClaims'])\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingReturnClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingReturnClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Aging of Returned Claims Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Medical Partner ID: ${claims.filter.facility_id}`,\n            '\\r\\n',\n            `Medical Partner Name: ${claims.filter.facility_name}`,\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Geogpraphy: ${claims.filter.region}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Grand Total`, `${total15Days}`, `${total1Week}`, `${total1Month}`, `${totalAll}`].join(',')\n        ],\n        fileName: 'Aging of Returned Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner ID</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner id'\n                id='facility-id'\n                value={claims.filter.facility_id}\n                suggestions={suggestion.facility_id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'facility',\n                    field: 'id'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Parttner Name</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner name'\n                id='facility-name'\n                value={claims.filter.facility_name}\n                suggestions={suggestion.facility_name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'facility',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.region}\n                suggestions={suggestion.region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'region',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n            // Footer trials\n            // footer={\n            //   <TableRow>\n            //     <TableCell>\n            //       <Typography variant='caption' className={`bold ${classes.label}`}>\n            //         <span>Grand Total: </span>\n            //       </Typography>\n            //     </TableCell>\n            //     <TableCell>\n            //       <Typography variant='caption' className='bold'>\n            //         <span>{CurrencyFormatter(claims.total15Days)}</span>\n            //       </Typography>\n            //     </TableCell>\n            //     <TableCell>\n            //       <Typography variant='caption' className='bold'>\n            //         <span>{CurrencyFormatter(claims.total1Week)}</span>\n            //       </Typography>\n            //     </TableCell>\n            //     <TableCell>\n            //       <Typography variant='caption' className='bold'>\n            //         <span>{CurrencyFormatter(claims.total1Month)}</span>\n            //       </Typography>\n            //     </TableCell>\n            //     <TableCell>\n            //       <Typography variant='caption' className='bold'>\n            //         <span>{CurrencyFormatter(claims.totalAll)}</span>\n            //       </Typography>\n            //     </TableCell>\n            //   </TableRow>\n            // }\n            footerComponent={\n              <div className={classes.footer}>\n                <Typography variant='caption' className={`bold ${classes.label}`}>\n                  <span>Grand Total: </span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{CurrencyFormatter(claims.total15Days)}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{CurrencyFormatter(claims.total1Week)}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{CurrencyFormatter(claims.total1Month)}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{CurrencyFormatter(claims.totalAll)}</span>\n                </Typography>\n              </div>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ClaimsBeyond3MonthsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No', data: 'no' },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Date Received', data: 'received_date', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, sort: true, match: 'any' },\n  { label: 'Medical Partner Name', data: 'facility_name', search: true, sort: true, match: 'any' },\n  { label: 'Date of Service', data: 'date_of_service', type: 'date', search: true, sort: true, match: 'date' },\n  { label: 'Claim Amount', data: 'claim_amount', sort: false, type: 'currency' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  // const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'latest.date.received'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'latest.date.received' },\n    // range: {\n    //   from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n    //   to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n    //   field: 'status_date'\n    // },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Claims Beyond 3 Months Report')\n    BreadcrumbsService.setSelectedItems(['claimsBeyond3Months'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchRecords({ ...claims, ...range })\n  }\n\n  // const handleOnFilter = args => {\n  //   const { field, value, match } = args\n  //   setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  // }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ..._params, range: dateRange })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsBeyond3Months({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0, count, limit, page } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count,\n        limit,\n        page,\n        grandTotal: grand_total\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsBeyond3Months({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Claims Beyond 3 Months',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Claims Beyond 3 Months',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  // React.useEffect(() => {\n  //   // Goal: Adjust columns to show based on data columns passed as props\n\n  //   let filtered = null\n  //   if (!dataColumns || dataColumns.length === 0) {\n  //     filtered = completeColumns\n  //   } else {\n  //     filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n  //   }\n  //   setColumns(filtered)\n  // }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    // <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n    //   <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter({ range: claims.range })}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnPaginate({\n                                  filter: {\n                                    ...claims.filter,\n                                    [headCell.data]: { value: date.toISOString(), match: headCell.match }\n                                  },\n                                  page: 1\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnPaginate({\n                                  filter: {\n                                    ...claims.filter,\n                                    [headCell.data]: { value: search, match: headCell.match }\n                                  },\n                                  page: 1\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <div className={classes.footer}>\n                <Typography variant='caption' className='bold'>\n                  <span>Grand Total: </span>\n                  <span>{CurrencyFormatter(claims.grandTotal)}</span>\n                </Typography>\n              </div>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ReimbursementAgingReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: '', data: 'item' },\n  { label: 'Number of Reimbursement Claims', type: 'number', data: 'reimbursement_count' },\n  { label: 'Number of Percentage of Reimbursement Claims', type: 'number', data: 'reimbursement_percent' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { reimbursement_category: '' }\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    reimbursement_category: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    reimbursement_category: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Reimbursement Aging Report')\n    BreadcrumbsService.setSelectedItems(['agingReimbursement'])\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursmentAgingReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      setClaims(state => ({\n        ...state,\n        data: results\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursmentAgingReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Reimbursement Aging Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Reimbursement Category: ${claims.filter.reimbursement_category}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ]\n        ],\n        fileName: 'Reimbursement Aging Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Reimbursment Category</Typography>\n              <AutoComplete\n                placeholder='Search by reimbursement Category'\n                id='reimbursment-category'\n                value={claims.filter.reimbursement_category}\n                suggestions={suggestion.reimbursement_category}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'reimbursement-category',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './DetailedClaimsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No.', sortField: 'no', search: false, sort: false, type: 'number' },\n  { label: 'Process Date', sortField: 'process_date', search: true, sort: true, match: 'date', type: 'date' },\n  { label: 'Claim Number', sortField: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Claim Type', sortField: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Amount', sortField: 'claim_amount', search: false, sort: false, type: 'currency', align: 'right' },\n  { label: 'Claim Status', sortField: 'claim_status', search: true, sort: true, match: 'any' },\n  { label: 'Section', sortField: 'section', search: true, sort: true, match: 'any' },\n  { label: 'User', sortField: 'user', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', sortField: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Geography', sortField: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', sortField: 'contract_plan_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', sortField: 'claim_sub_type', search: true, sort: true, match: 'any' }\n]\n\nexport default function DetailedClaimsReport (props) {\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'status_date'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    total_amount: 0,\n    total_received: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Claims Report')\n    BreadcrumbsService.setSelectedItems(['detailedClaimsReport'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const fetchReport = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedClaimsReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], grand_total, count, limit, page, total_received } = res.data.data\n\n      setClaims(state => ({ ...state, data: results, count, page, limit, total_amount: grand_total, total_received }))\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchReport({ ...claims, ...range })\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchReport({ ..._params, range: dateRange })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedClaimsReport({\n      range: dateRange,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { results, grand_total, total_received, count } = res.data.data\n      const header = columns.map(i => i.label)\n\n      const rows = results.map(i => {\n        return columns.map(col => formatData({ type: col.type, source: i, field: col.sortField }))\n      })\n\n      // array.from or of\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Claims Report',\n            '\\r\\n',\n            '\\r\\n',\n            ['Date Range:', `${DateFormatter(dateRange.from)} - ${DateFormatter(dateRange.to)}`],\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [\n            '\\r\\n',\n            ['Number of Claims Received:', `${total_received}`],\n            '\\r\\n',\n            ['Number of Claims Processed:', `${count}`],\n            '\\r\\n',\n            ['Amount of Claims Processed:', `${grand_total}`]\n          ]\n        ],\n        fileName: 'Detailed Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                handleOnClickFilter({ range: claims.range })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV(claims)} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <div className={`${classes.input} ${!headCell.search ? classes.hidden : ''}`}>\n                      <TextField\n                        noMargin\n                        id={`text-field-${headCell.sortField}`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnPaginate({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.sortField]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={`${item.claim_number}-${index}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        align={col.align}\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${index}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: item, field: col.sortField })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            // footerComponent={\n            //   <Typography variant='caption' className='bold'>\n            //     <span>Total Amount: </span>\n            //     <span>{CurrencyFormatter(claims.total_amount)}</span>\n            //   </Typography>\n            // }\n          />\n        </div>\n        {/* trial ugly */}\n        <div className={classes.footer}>\n          <div className={classes.label}>\n            <Typography className='bold'>{`Number of Claims Received: ${claims.total_received}`}</Typography>\n          </div>\n          <div className={classes.label}>\n            <Typography className='bold'>{`Number of Claims Processed: ${claims.count}`}</Typography>\n          </div>\n          <div className={classes.label}>\n            <Typography className='bold'>\n              {`Amount of Claims Processed: ${CurrencyFormatter(claims.total_amount)}`}\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './DetailedPerformanceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No', data: 'no' },\n  { label: 'Date Received', data: 'date_received', type: 'date', search: true, sort: true, match: 'start' },\n  { label: 'Date Due', data: 'date_due', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Process Date', data: 'date_processed', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Section', data: 'claim_section', search: true, sort: true, match: 'any' },\n  { label: 'User', data: 'user', search: true, sort: true, match: 'any' },\n  { label: 'TAT per Claim', data: 'tat_claim', search: true, sort: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', data: 'claim_sub_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'created_date'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'latest.date.received' },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Performance Report')\n    BreadcrumbsService.setSelectedItems(['detailedPerformanceReport'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchRecords({ ...claims, ...range })\n  }\n\n  // const handleOnFilter = args => {\n  //   const { field, value, match } = args\n  //   setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  // }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ..._params, range: dateRange })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedPerformanceReport({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0, count, limit, page } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count,\n        limit,\n        page,\n        grandTotal: grand_total\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedPerformanceReport({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Performance Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Detailed Performance Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter({ range: claims.range })}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnPaginate({\n                                  filter: {\n                                    ...claims.filter,\n                                    [headCell.data]: { value: date.toISOString(), match: headCell.match }\n                                  },\n                                  page: 1\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnPaginate({\n                                  filter: {\n                                    ...claims.filter,\n                                    [headCell.data]: { value: search, match: headCell.match }\n                                  },\n                                  page: 1\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <div className={classes.footer}>\n                <Typography variant='caption' className='bold'>\n                  <span>Grand Total: </span>\n                  <span>{CurrencyFormatter(claims.grandTotal)}</span>\n                </Typography>\n              </div>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './DetailedMonitoringReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No', data: 'no' },\n  { label: 'Date Received', data: 'date_received', type: 'date', search: true, sort: true, match: 'start' },\n  { label: 'Date Due', data: 'date_due', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Process Date', data: 'date_processed', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', data: 'claim_sub_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Section', data: 'claim_section', search: true, sort: true, match: 'any' },\n  { label: 'Claim User', data: 'user', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' },\n  { label: 'Handling Time per Claim', data: 'handling_per_claim', search: true, sort: true, match: 'any' },\n  { label: 'Section Handling Time Beyond KPI', data: 'handling_beyond_kpi', search: true, sort: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'created_date'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'latest.date.received' },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Monitoring Report')\n    BreadcrumbsService.setSelectedItems(['detailedMonitoringReport'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchRecords({ ...claims, ...range })\n  }\n\n  // const handleOnFilter = args => {\n  //   const { field, value, match } = args\n  //   setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  // }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ..._params, range: dateRange })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedMonitoringReport({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0, count, limit, page } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count,\n        limit,\n        page,\n        grandTotal: grand_total\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedMonitoringReport({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Monitoring Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Detailed Monitoring Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter({ range: claims.range })}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnPaginate({\n                                  filter: {\n                                    ...claims.filter,\n                                    [headCell.data]: { value: date.toISOString(), match: headCell.match }\n                                  },\n                                  page: 1\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnPaginate({\n                                  filter: {\n                                    ...claims.filter,\n                                    [headCell.data]: { value: search, match: headCell.match }\n                                  },\n                                  page: 1\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <div className={classes.footer}>\n                <Typography variant='caption' className='bold'>\n                  <span>Grand Total: </span>\n                  <span>{CurrencyFormatter(claims.grandTotal)}</span>\n                </Typography>\n              </div>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\n// Pages\nimport ClaimsUtilLedgerReport from '../Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\nimport TransmittalReport from './../Components/Reports/TransmittalReport/TransmittalReport'\nimport TreasuryTransmittalReport from '../Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport'\nimport PRCheckReport from '../Components/Reports/PRCheckReport/PRCheckReport'\nimport UtilizationReport from '../Components/Reports/UtilizationReport/UtilizationReport'\nimport LoadingHimsData from '../Components/Reports/LoadingHimsData/LoadingHimsData'\nimport ConfinementReport from '../Components/Reports/ConfinementReport/ConfinementReport'\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\nimport ReimbursementReport from '../Components/Reports/ReimbursementReport/ReimbursementReport'\nimport ClaimsSummaryReport from '../Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport'\nimport ProductivityPerformaceReport from '../Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport'\nimport ReturnedClaimsReport from '../Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport'\nimport PerformanceReport from '../Components/Reports/PerformanceReport/PerformanceReport'\nimport AgingPartialApprovedReport from '../Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport'\nimport AgingReturnClaimReport from '../Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport'\nimport ClaimsBeyond3MonthsReport from '../Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport'\nimport ReimbursementAgingReport from '../Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport'\nimport DetailedClaimsReport from '../Components/Reports/DetailedClaimsReport/DetailedClaimsReport'\nimport DetailedPerformanceReport from '../Components/Reports/DetailedPerformanceReport/DetailedPerformanceReport'\nimport DetailedMonitoringReport from '../Components/Reports/DetailedMonitoringReport/DetailedMonitoringReport'\n\nconst reportPages = {\n  transmittal: {\n    name: 'transmittal',\n    label: 'Transmittal Report',\n    to: '/reports/transmittal-report',\n    component: TransmittalReport\n  },\n  utilizationLedger: {\n    name: 'utilizationLedger',\n    label: 'Generate Utilization Ledger',\n    to: '/reports/utilization-ledger',\n    component: ClaimsUtilLedgerReport\n  },\n  treasuryTransmittalReport: {\n    name: 'treasuryTransmittalReport',\n    label: 'View Treasury Transmittal',\n    to: '/reports/treasury-reports',\n    component: TreasuryTransmittalReport\n  },\n  utilizationReport: {\n    name: 'utilizationReport',\n    label: 'View Account & Member Utilization',\n    to: '/reports/utilization',\n    component: UtilizationReport\n  },\n  prReports: {\n    name: 'prReports',\n    label: 'View PR and Check Details',\n    to: '/reports/pr-reports',\n    component: PRCheckReport\n  },\n  loadingHimsData: {\n    name: 'loadingHimsData',\n    label: 'Template for Loading HIMS Data',\n    to: '/reports/loading-hims-data',\n    component: LoadingHimsData\n  },\n  confinementReport: {\n    name: 'confinementReport',\n    label: 'List of Emergencies Leading to Confinement Report',\n    to: '/reports/confinement-report',\n    component: ConfinementReport\n  },\n  paymentRequestReport: {\n    name: 'paymentRequestReport',\n    label: 'Payment Request Report',\n    to: '/reports/payment-request-report',\n    component: PaymentRequestReport\n  },\n  reimbursementReport: {\n    name: 'reimbursementReport',\n    label: 'Reimbursement Claims Report',\n    to: '/reports/reimburesment-report',\n    component: ReimbursementReport\n  },\n  claimsSummaryReport: {\n    name: 'claimsSummaryReport',\n    label: 'Claims Summary Report',\n    to: '/reports/claims-summary-report',\n    component: ClaimsSummaryReport\n  },\n  productivityPerformaceReport: {\n    name: 'productivityPerformaceReport',\n    label: 'Productivity and Performance Report',\n    to: '/reports/productivity-performance',\n    component: ProductivityPerformaceReport\n  },\n  returnedClaimsReport: {\n    name: 'returnedClaimsReport',\n    label: 'Returned Claims Report',\n    to: '/reports/returned-claims',\n    component: ReturnedClaimsReport\n  },\n  performanceReport: {\n    name: 'performanceReport',\n    label: 'Performance Summary Report',\n    to: '/reports/performance',\n    component: PerformanceReport\n  },\n  agingPartialApprovedReport: {\n    name: 'agingPartialApprovedReport',\n    label: 'Aging of Partially Approved Claims Report',\n    to: '/reports/aging-partial-approve-claims',\n    component: AgingPartialApprovedReport\n  },\n  agingReturnedClaims: {\n    name: 'agingReturnedClaims',\n    label: 'Aging of Returned Claims Report',\n    to: '/reports/aging-returned-claims',\n    component: AgingReturnClaimReport\n  },\n  claimsBeyond3Months: {\n    name: 'claimsBeyond3Months',\n    label: 'Claims Beyond 3 Months Report',\n    to: '/reports/claims-beyond-3-months',\n    component: ClaimsBeyond3MonthsReport\n  },\n  agingReimbursement: {\n    name: 'agingReimbursement',\n    label: 'Reimbursement Aging Report',\n    to: '/reports/aging-reimbursement',\n    component: ReimbursementAgingReport\n  },\n  detailedClaimsReport: {\n    name: 'detailedClaimsReport',\n    label: 'Detailed Claims Report',\n    to: '/reports/detailed-claims',\n    component: DetailedClaimsReport\n  },\n  detailedPerformanceReport: {\n    name: 'detailedPerformanceReport',\n    label: 'Detailed Performance Report',\n    to: '/reports/detailed-performance',\n    component: DetailedPerformanceReport\n  },\n  detailedMonitoringReport: {\n    name: 'detailedMonitoringReport',\n    label: 'Detailed Monitoring Report',\n    to: '/reports/detailed-monitoring',\n    component: DetailedMonitoringReport\n  }\n}\n\nconst reportsItems = {\n  BATCH_ENCODER: ['utilizationLedger', 'transmittal', 'confinementReport'],\n  BATCH_ENCODER_SUPERVISOR: [\n    'utilizationLedger',\n    'confinementReport',\n    'transmittal',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  CLAIMS_DETAILS_ENCODER: ['utilizationLedger', 'confinementReport'],\n  CLAIMS_DETAILS_ENCODER_SUPERVISOR: [\n    'utilizationLedger',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  CLAIMS_ANALYST: ['utilizationLedger', 'confinementReport'],\n  PR_OFFICER: ['utilizationLedger', 'confinementReport'],\n  PR_OFFICER_SUPERVISOR: [\n    'utilizationLedger',\n    'loadingHimsData',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  MEDICAL_CONSULTANT: ['utilizationLedger', 'confinementReport'],\n  CLAIMS_RECON: [\n    'utilizationLedger',\n    'transmittal',\n    'prReports',\n    'treasuryTransmittalReport',\n    'utilizationReport',\n    'reimbursementReport',\n    'confinementReport'\n  ],\n  CLAIMS_VERIFIER_SUPERVISOR: [\n    'utilizationLedger',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'productivityPerformaceReport',\n    'claimsSummaryReport',\n    'returnedClaimsReport',\n    'performanceReport',\n    'agingPartialApprovedReport',\n    'agingReturnedClaims',\n    'claimsBeyond3Months',\n    'agingReimbursement',\n    'detailedClaimsReport',\n    'detailedPerformanceReport',\n    'detailedMonitoringReport'\n  ],\n  CLAIMS_MANAGER: [\n    'utilizationLedger',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'productivityPerformaceReport',\n    'claimsSummaryReport',\n    'returnedClaimsReport',\n    'performanceReport',\n    'agingPartialApprovedReport',\n    'agingReturnedClaims',\n    'claimsBeyond3Months',\n    'agingReimbursement',\n    'detailedClaimsReport',\n    'detailedPerformanceReport',\n    'detailedMonitoringReport'\n  ]\n}\nconst generateBreadCrumbs = userRole => {\n  let breads = {}\n  for (const r of reportsItems[userRole]) {\n    breads[r] = { text: reportPages[r].label, to: reportPages[r].to }\n  }\n  return breads\n}\n\nconst generateSideBar = userRole => {\n  return {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: (reportsItems[userRole] && reportsItems[userRole].map(r => reportPages[r])) || []\n  }\n}\n\nconst generateRoutes = userRole => {\n  return reportsItems[userRole].map(r => (\n    <Route key={reportPages[r].name} exact path={reportPages[r].to} component={reportPages[r].component} />\n  ))\n}\n\nexport { generateSideBar, generateBreadCrumbs, generateRoutes }\n","import constants from './constants'\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport moment from 'moment'\n\nexport const staticHeaderFooter = args => {\n  const { registered_name, corporate_account_no, contracts = [], amount, ar_amount, username } = args\n\n  const static_header = constants.header.map(i => {\n    switch (i) {\n      case 'Company:':\n        return [i, registered_name, '\\r\\n']\n      case 'Account No.:':\n        return [i, corporate_account_no, '\\r\\n']\n      case 'Contract:':\n        return [i, contracts.length, '\\r\\n']\n      case 'Date:':\n        return [i, `${DateFormatter(new Date())} ${moment().format('LTS')}`, '\\r\\n']\n    }\n  })\n\n  const static_footer = constants.footer.map(i => {\n    switch (i) {\n      case 'Total':\n        return ['', '', '', i, amount, ar_amount, '\\r\\n']\n      case 'Transmitted by:':\n        return [i, username, '\\r\\n']\n      case 'Noted by:':\n        return [i, '--', '\\r\\n']\n      case 'Received by:':\n        return [i, '--', '\\r\\n']\n    }\n  })\n\n  return [\n    [...static_header, '\\r\\n'],\n    ['\\r\\n', ...static_footer]\n  ]\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport Dashboard from './../Components/BatchEncoder/Dashboard/Dashboard'\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n\n        {/* REPORTS */}\n        {generateRoutes(userRole)}\n      </Switch>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\nconst columns = [\n  { id: 'encoder-name', name: 'Encoder Name', sortField: 'name', match: 'any' },\n  { id: 'total-bundle', name: 'Total Bundles', sortField: 'total_bundle', match: 'any' },\n  { id: 'total-batch', name: 'Total Batches', sortField: 'total_batch', match: 'any' }\n]\n\nconst BatchAndEncoderTile = props => {\n  const { services, sizes } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBatchEncoderWork({ category: 'created', limit: 10, sort: 'name|asc' }),\n      services.getBatchEncoderWorkCount()\n    ]).then(values => {\n      const [batchEncoders, count] = values\n      setItems({ data: batchEncoders.data.data.results, count: count.data.data })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Bundle and Batch Encoder' })\n    services.getBatchEncoderWork({ limit: 10, sort: 'name|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBatchEncoderWork(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'bundle-and-batch-encoder-count' }}\n        sizes={sizes}\n        title='Bundle and Batch Encoder'\n        id='bundle-and-batch-encoder'\n        isFilterShown={false}\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='bundle-and-batch-encoder-view-list'\n          >\n            View List\n          </Typography>\n        }\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={item.id}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.data.map((item, index) => (\n              <TableRow key={item.user_id}>\n                <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n                <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n                <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n                <TableCell id={`view-work-${index}`}>\n                  <Link to={`/batch-encoder-work/${item.user_id}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        id='bundle-and-batch-encoder'\n        columns={columns}\n        searchTextPlaceHolder='Search for Encoder Name, Total Bundles or Total Batches'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.user_id}>\n              <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n              <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n              <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n              <TableCell id={`view-work-${index}`}>\n                <Link to={`/batch-encoder-work/${item.user_id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nBatchAndEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default BatchAndEncoderTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { name: 'SOA No.', sortField: 'soa_number', match: 'any' },\n  { name: 'Bundle', sortField: 'bundle_number', match: 'any' },\n  { name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ForReconciliationClaimsTile = props => {\n  const { services, sizes } = props\n  const [claims, setClaims] = React.useState({\n    for_recon: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const [viewList, setViewList] = React.useState({\n    category: 'for-recon',\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'for-recon',\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getClaimCount({ category: 'for-recon' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for_recon'\n\n    services\n      .getClaims({\n        category,\n        range: value,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = `Claims for Reconciliation`\n    const category = 'for_recon'\n\n    setViewList(p => ({ ...p, show: true, title, category }))\n    services\n      .getClaims({ category, limit: viewList.limit, sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claim-for-Reconciliation'\n        count={{ color: 3, value: claims.for_recon.count }}\n        sizes={sizes}\n        title='Claims for Reconciliation'\n        viewList={\n          <Typography id='fr-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map((item, index) => (\n                <TableCell\n                  key={index}\n                  // id={item.id}\n                >\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.for_recon.data.map((item, index) => (\n              <TableRow key={`${item.claim_number}-${index}`}>\n                <TableCell>{item.claim_number}</TableCell>\n                <TableCell>{item.soa.number}</TableCell>\n                <TableCell>{item.bundle_number}</TableCell>\n                <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell>{item.facility.name}</TableCell>\n                <TableCell id={`view-review-${index}`}>\n                  <Link to={`/claims/recon/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View Claim\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='claim-for-Reconciliation'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell>{item.claim_number}</TableCell>\n              <TableCell>{item.soa.number}</TableCell>\n              <TableCell>{item.bundle_number}</TableCell>\n              <TableCell>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell>{item.facility.name}</TableCell>\n              <TableCell id={`view-review-${index}`}>\n                <Link to={`/claims/recon/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View Claim\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForReconciliationClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default ForReconciliationClaimsTile\n","import instance from './instance'\n// import { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/bes')\n\nexport default class BatchEncodingSupervisoryServices {\n  static getBatchEncoderWork (params) {\n    return axios({\n      url: '/batch-encoder-work',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchEncoderWorkCount () {\n    return axios({\n      url: '/batch-encoder-work/count',\n      method: 'GET'\n    })\n  }\n\n  static getBundles ({ user_id, params }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassignBundles ({ user_id, data }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\nimport BatchEncodingSupervisoryServices from 'Services/Api/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Bundle And Batch Encoding'>\n            <CreatedBundlesTile services={BatchEncodingServices} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} {...props} />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { show, setShow, services, onSubmit } = props\n\n  const [reassign, setReassign] = React.useState({})\n  const [showAlert, setShowAlert] = React.useState()\n  const [users, setUsers] = React.useState([])\n\n  const [reassignErrors, setReassignErrors] = React.useState({})\n\n  React.useEffect(() => {\n    setReassign({})\n    setReassignErrors({})\n    setUsers([])\n    setShowAlert()\n\n    if (show) {\n      services.getUsers('BATCH_ENCODER').then(({ data: response }) => {\n        setUsers(\n          response.map(item => ({\n            value: item._id,\n            text: `${item.first_name} ${item.last_name}`\n          }))\n        )\n      })\n    }\n  }, [show])\n\n  const validate = () => {\n    const { error } = ReassignValidator(reassign)\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (!validate()) setShowAlert(true)\n  }\n\n  const handleOnClose = () => {\n    setShow()\n  }\n\n  const handleOnAlertConfirm = () => {\n    setShow()\n    onSubmit({ ...reassign })\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={show || false}\n          onClose={handleOnClose}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                onChange={event => {\n                  const note = event.target.value\n                  setReassign(state => ({\n                    ...state,\n                    note\n                  }))\n                }}\n                id='reassign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {users && users.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='dropdown-assign-to'\n                  items={users}\n                  value={reassign.assignee || ''}\n                  error={reassignErrors.assignee}\n                  onChange={event =>\n                    setReassign(state => ({\n                      ...state,\n                      assignee: event.target.value\n                    }))\n                  }\n                  disableComponents={!!(users && users.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button onClick={handleOnClose} variant='contained' color='primary' className='button-negative'>\n                  Cancel\n                </Button>\n                <Button onClick={handleOnSubmit} variant='contained' color='primary' className='button-positive'>\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={showAlert || false}\n          onClose={setShowAlert}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Bundle/SOA to Batch Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Bundle/SOA to the selected Batch Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This Bundle/SOA will be sent to the assigned Batch Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button onClick={() => setShowAlert()} variant='contained' color='primary' className='button-negative'>\n                Cancel\n              </Button>\n              <Button onClick={handleOnAlertConfirm} variant='contained' color='primary' className='button-positive'>\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/BatchEncodingSupervisoryServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Styles\nimport classes from './CreatedBundlesPage.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columnss = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Received', sortField: 'date_received', match: 'date' },\n  { id: 'date-due', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nexport default function CreatedBundlesPage (props) {\n  const [bundle, setBundle] = React.useState({\n    data: [],\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  const [batchEncoderId, setBatchEncoderId] = React.useState()\n  const [openModal, setOpenModal] = React.useState()\n  const [activeAssigning, setActiveAssigning] = React.useState()\n  const [headerCheckBox, setHeaderCheckBox] = React.useState({})\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    const _batchEncoderId = props.match.params.user_id\n    setBatchEncoderId(_batchEncoderId)\n\n    PageTitleService('Created Bundles')\n    // BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${_batchEncoderId}`])\n    BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${' '}`])\n\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: _batchEncoderId,\n      params: { limit: 10, sort: `${bundle.orderBy}|${bundle.order ? 'desc' : 'asc'}` }\n    }).then(({ data: response }) => {\n      const { results: data } = response.data\n      setBundle(state => ({ ...state, ...response.data, data }))\n    })\n  }, [])\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setBundle(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setBundle(p => ({ ...p, orderBy, order: !bundle.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${bundle.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: bundle.limit,\n      page: bundle.page,\n      search: bundle.search,\n      sort: `${bundle.orderBy}|${bundle.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: batchEncoderId,\n      params: _params\n    }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setBundle(state => ({ ...state, data: results, count, limit, page }))\n\n      setHeaderCheckBox({})\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnItemSelect = index => {\n    setBundle(state => {\n      const data = state.data\n      data[index].selected = !data[index].selected\n\n      const selectedCount = data.filter(i => i.selected).length\n      setHeaderCheckBox({ checked: !!selectedCount, indeterminate: selectedCount && selectedCount !== data.length })\n\n      return { ...state, data }\n    })\n  }\n\n  const handleOnSelectAllItem = () => {\n    const { checked, indeterminate } = headerCheckBox\n\n    setBundle(state => {\n      return {\n        ...state,\n        data: state.data.map(i => ({\n          ...i,\n          selected: checked && indeterminate ? true : !(checked && !indeterminate)\n        }))\n      }\n    })\n\n    setHeaderCheckBox({ checked: (checked && indeterminate) || !checked })\n  }\n\n  const handleOnSubmit = ({ note, assignee }) => {\n    LoadingService.loading(true)\n\n    const bundle_numbers = []\n    bundle.data.filter(i => i.selected && bundle_numbers.push(i.bundle_number))\n\n    BatchEncodingSupervisoryServices.reassignBundles({\n      user_id: batchEncoderId,\n      data: {\n        note,\n        assignee,\n        bundle_numbers\n      }\n    }).then(res => {\n      handleOnViewListChange({})\n    })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setBundle(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...bundle.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.content}>\n        <div className={classes['first-container']}>\n          <div className={classes.action}>\n            <Button\n              id='cancelreassign-btn'\n              variant='contained'\n              color='primary'\n              className='button-neutral'\n              onClick={() => setActiveAssigning(true)}\n              disabled={!!activeAssigning}\n            >\n              Re-Assign\n            </Button>\n          </div>\n\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for bundle number, date or facility name'\n            />\n          </div>\n        </div>\n\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      style={{ marginTop: '30px' }}\n                      disabled={!bundle.data.length}\n                      checked={headerCheckBox.checked || false}\n                      indeterminate={headerCheckBox.indeterminate || false}\n                      onChange={handleOnSelectAllItem}\n                    />\n                  </TableCell>\n                )}\n\n                {columnss.map(column => (\n                  <TableCell key={column.sortField} id={column.id}>\n                    <TableSortLabel\n                      active={bundle.orderBy === column.sortField}\n                      direction={bundle.order ? 'asc' : 'desc'}\n                      onClick={handleOnSort(column.sortField)}\n                    >\n                      {column.name}\n                    </TableSortLabel>\n\n                    <TextField\n                      id={`text-field-${column.id}`}\n                      // value={newBundle.bundle_number}\n                      TextFieldStyle={{ margin: 0 }}\n                      fullWidth\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: column.sortField,\n                              value: search,\n                              match: column.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={bundle.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      onChange={() => handleOnItemSelect(index)}\n                      checked={item.selected || false}\n                    />\n                  </TableCell>\n                )}\n\n                <TableCell id={`bundle-number-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`received-date-${index}`}>{DateFormatter(item.date.received)}</TableCell>\n                <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`view-work-${index}`}>\n                  <Link to={`/batch-encoder-work/${batchEncoderId}/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n            count={bundle.count}\n            page={bundle.page}\n            limit={bundle.limit}\n            rowsPerPageOptions={[10, 15, 20]}\n            onChange={handleOnViewListChange}\n          />\n        </div>\n\n        <div className={classes.footer}>\n          {activeAssigning && (\n            <Typography variant='subtitle2' className={classes.title}>\n              Total Bundle Selected: {bundle.data.filter(i => i.selected).length}\n            </Typography>\n          )}\n\n          <div className={classes.actions}>\n            {activeAssigning ? (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => {\n                    setActiveAssigning()\n                  }}\n                  id='cancel'\n                >\n                  Cancel\n                </Button>\n\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className={`${classes.save} button-positive`}\n                  onClick={() => setOpenModal(true)}\n                  disabled={!(headerCheckBox.checked || false)}\n                  id='save'\n                >\n                  Assign\n                </Button>\n              </React.Fragment>\n            ) : (\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push('/')}\n                id='cancel'\n              >\n                Close\n              </Button>\n            )}\n          </div>\n        </div>\n      </Paper>\n      <AssignDialog\n        show={openModal}\n        setShow={setOpenModal}\n        services={UserManagementServices}\n        onSubmit={handleOnSubmit}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DiscrepancyBase.module.scss'\n\nexport default function DiscrepancyBase (props) {\n  // INIT\n  const { discrepancy, id = '', children, iconStyle = {}, ...others } = props\n\n  // Breaking down props\n  const { result } = discrepancy\n  const { retainSpace = false, noMargin = false, autoWidth = false, showIcon = true } = others\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n          list = list.flat(Infinity)\n        }\n      }\n\n      // const uniqOnly = Array.from(new Set(list))\n      // uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n\n      list.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  React.useEffect(() => {\n    spreadResult(result)\n  }, [result])\n\n  const open = Boolean(anchorEl)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const icon = ({ iconStyle }) => {\n    return (\n      <div\n        className={`${classes['discrepancy-icon']} ${\n          message === '' ? (retainSpace ? classes['display-hidden'] : classes['display-none']) : ''\n        } ${noMargin ? classes['no-margin'] : classes['with-margin']}`}\n      >\n        <FontAwesomeIcon\n          id={`exc-circle-${id}`}\n          style={iconStyle}\n          icon='exclamation-circle'\n          className={`${classes['icon']}`}\n          onClick={handleClick}\n        />\n        <Popover\n          id={`simple-popover`}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'left'\n          }}\n        >\n          <Typography style={{ whiteSpace: 'pre-line' }} className={classes['message']}>\n            {message}\n          </Typography>\n        </Popover>\n      </div>\n    )\n  }\n\n  return (\n    <div id={id} className={`${classes[`root`]}`}>\n      <div\n        className={`${classes[`input-wrapper`]} ${autoWidth ? classes['auto-width'] : classes['max-width']} ${\n          message !== '' ? classes['discrepancy'] : ''\n        }`}\n      >\n        {children}\n      </div>\n      {showIcon ? icon({ iconStyle }) : ''}\n      {/* {message !== '' && icon({ iconStyle })} */}\n    </div>\n  )\n}\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Style\nimport classes from './LoadingIndicator.module.scss'\n\nexport default function LoadingIndicator (props) {\n  // Variables\n  const { loading = false, children } = props\n  // Services\n  // Events\n  // Callbacks\n  // Local Variables\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        <div className={classes.root}>\n          <div className={classes.loading} id='loading-overlay'>\n            <CircularProgress id='fetching-animation' className={classes.animation} size={50} />\n          </div>\n        </div>\n      ) : (\n        children\n      )}\n    </React.Fragment>\n  )\n}\n","const includesAny = (s1 = '', s2 = '') => {\n  return s1.toLowerCase().includes(s2.toLowerCase())\n}\n\nconst compare = (list, find, comparer = includesAny, fields = []) => {\n  if (Array.isArray(list)) {\n    return list.some(item => {\n      for (const field of fields) {\n        if (comparer(item[field], find)) return true\n      }\n    })\n  } else {\n    if (comparer(list, find)) return true\n  }\n  return false\n}\n\nexport { compare, includesAny }\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\n// import CircularProgress from '@material-ui/core/CircularProgress'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n// Services\n// import { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport lodash from 'lodash'\n\n// Styles\nimport classes from './ClientMemberLookup.module.scss'\n\nexport default function ClientMemberLookup (props) {\n  // Variables\n  const { columns = [], allSearch = '', allSearchText = '', allSearchFields, mode = '' } = props\n  // Services\n  const { service } = props\n  // Events\n  // Callbacks\n  const { onRecordSet } = props\n\n  // Local Variables\n  const [apiData, setApiData] = React.useState({\n    rows: [],\n    search: '',\n    order: '',\n    limit: 10\n    // count: 0,\n    // page: 1,\n    // rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [finalRows, setFinalRows] = React.useState([])\n  const [selected, setSelected] = React.useState(-1)\n  const [debounce, setDebounce] = React.useState(null)\n  const [colFilters, setColFilters] = React.useState({})\n  const [loading, setLoading] = React.useState(false)\n\n  React.useEffect(() => {\n    setApiData(state => ({ ...state, search: allSearch }), fetchData(allSearch))\n  }, [])\n\n  React.useEffect(() => {\n    const order = apiData.order.split(' ')\n    let _rows = lodash.orderBy(apiData.rows, [order[0]], [order[1]])\n    _rows = translateRows(_rows)\n    _rows = filterData(_rows)\n    setFinalRows(_rows)\n  }, [apiData.rows, apiData.order, colFilters])\n\n  const fetchData = search => {\n    if (search === '') return\n    setLoading(true)\n    let fields = {}\n    for (const col of columns) {\n      fields[col.id] = true\n    }\n    const order = apiData.order === '' ? `${columns[0].id} asc` : apiData.order\n    setApiData(state => ({ ...state, rows: [], order }))\n    let fetches = []\n    for (const field of allSearchFields) {\n      fetches.push(\n        new Promise((resolve, reject) => {\n          service({\n            where: { [field.id]: { value: search, match: field.match } },\n            order,\n            fields,\n            limit: apiData.limit\n          }).then(res => resolve(res))\n        })\n      )\n    }\n    Promise.all(fetches).then(responses => {\n      for (const res of responses) {\n        if (!res) return\n        const { data } = res.data\n        setApiData(state => ({ ...state, rows: [...state.rows, ...data[mode]] }))\n      }\n      setLoading(false)\n    })\n  }\n\n  const translateRows = rows => {\n    return rows.map(row => columns.map((col, colIdx) => col.value(row)))\n  }\n\n  const revertRow = row => {\n    if (!row) return\n    const _row = {}\n    for (const [index, cell] of Object.entries(row)) {\n      _row[columns[index].id] = cell\n    }\n    return _row\n  }\n\n  const filterData = rows => {\n    let _rows = rows\n    // _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, filters.all)).some(val => val))\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!colFilters[index]) return true\n            return includesAny(`${col}`, colFilters[index])\n          })\n          .some(val => val === false)\n    )\n    return _rows\n  }\n\n  const renderRows = rows => {\n    if (!rows) return\n    return rows.map((row, index) => (\n      <TableRow\n        id={`member-row-${index}`}\n        key={`member-${index}`}\n        hover\n        role='checkbox'\n        tabIndex={-1}\n        className={selected && selected[0] === row[0] ? classes.selected : classes['default-override']}\n      >\n        {columns.map((col, colIdx) => (\n          <TableCell key={`${col.id}-${colIdx}`} id={`${col.id}-${colIdx}`} onClick={() => handleItemClick(row)}>\n            {row[colIdx]}\n          </TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const handleOnSort = id => {\n    const [, direction] = apiData.order.split(' ')\n    setApiData(state => ({ ...state, order: `${id} ${direction !== 'asc' ? 'asc' : 'desc'}` }))\n  }\n\n  const handleColumnFilter = ({ id, index, value }) => {\n    setColFilters(state => ({ ...state, [index]: value }))\n  }\n\n  const handleItemClick = row => {\n    if (!selected) setSelected(row)\n    else if (row[0] === selected[0]) setSelected()\n    else setSelected(row)\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.search}>\n        <SearchTextComponent\n          id='search'\n          value={apiData.search}\n          onChange={event => {\n            const search = event.target.value\n            setApiData(state => ({ ...state, search }))\n            clearTimeout(debounce)\n            setDebounce(\n              setTimeout(() => {\n                fetchData(search)\n              }, 500)\n            )\n          }}\n          placeholder={allSearchText}\n        />\n      </div>\n      <div className={classes.table}>\n        <LoadingIndicator loading={loading}>\n          <Table\n            TableContainerProps={{ style: { height: '300px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((cell, colIdx) => (\n                  <TableCell key={cell.id} id={cell.id}>\n                    <TableSortLabel\n                      active={apiData.order.split(' ')[0] === cell.id}\n                      direction={apiData.order.split(' ')[1] === 'asc' ? 'asc' : 'desc'}\n                      onClick={() => handleOnSort(cell.id)}\n                    >\n                      {cell.label}\n                    </TableSortLabel>\n                    <TextField\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFilter({\n                              id: cell.id,\n                              index: colIdx,\n                              value: search\n                            })\n                          }, 250)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={renderRows(finalRows)}\n            pagination={false}\n            // count={count}\n            // page={page}\n            // limit={limit}\n            // rowsPerPageOptions={rowsPerPageOptions}\n            // onChange={onPaginate}\n          />\n        </LoadingIndicator>\n      </div>\n      <div className={classes.footer}>\n        <Button\n          variant='contained'\n          color='primary'\n          id='select'\n          className='button-positive'\n          onClick={() => selected && onRecordSet(revertRow(selected))}\n        >\n          Select\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport MemberLookup from './ClientMemberLookup'\n\n// Styles\nimport classes from './ClientMemberModal.module.scss'\n\nexport default function ClientMemberModal (props) {\n  // Variables\n  const { show, title = '' } = props\n  // Services\n  // Events\n  // Callbacks\n  const { onClose } = props\n  // Local Variables\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={onClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <MemberLookup {...props} />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/client')\nexport default class CustomerCareService {\n  static getLoaDetails ({ approval_code }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa/approval/${approval_code}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n\n  static getUtilizationLoa ({ params }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa`,\n      method: 'GET',\n      params: {\n        filter: params\n      }\n    })\n  }\n\n  static getContractList ({ member_account_number }) {\n    return axios({\n      url: `api/customer-care/members/${member_account_number}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n}\n","const renameProp = (\n  oldProp,\n  newProp,\n  { [oldProp]: old, ...others }\n) => ({\n  [newProp]: old,\n  ...others\n})\n\nexport { renameProp }\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  const room_type = loa.room ? loa.room[0].room_type : ''\n  const room_rate = loa.room ? loa.room[0].total_amount : ''\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => {\n        if (item.type.localeCompare(room_type, 'en', { sensitivity: 'base' }) === 0) {\n          dispatch(setClaimBaseDetails({ field: 'room_type', value: room_type.toUpperCase() }))\n          dispatch(setClaimBaseDetails({ field: 'room_rate', value: room_rate }))\n        }\n        return {\n          text: item.type,\n          value: item.type.toUpperCase(),\n          rate: item.rate\n        }\n      })\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n  console.log('zzz', procedures)\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  console.log(common, loa)\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  if (diagnosis.length === 0) {\n    diagnosis.push({\n      description: primary_diagnosis,\n      code: primary_icd10_code,\n      primary: true\n    })\n  } else {\n    diagnosis.map((diag, i) => {\n      let primary = false\n      if (diag.icd10_code === primary_icd10_code) primary = true\n      diagnosis[i].primary = primary\n      diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n      diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n    })\n  }\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function Reimbursment ({ common, loa, dispatch, claim }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n  if (claim.reimbursement_type === 'InPatient') {\n    details = {\n      ...details,\n      room_type: loa.room ? loa.room[0].room_type : '',\n      room_rate: loa.room ? loa.room[0].total_amount : 0,\n      pro_id: '',\n      pro_name: ''\n    }\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    claim_source: '',\n    medicine_category: '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].tooth_number = procedures[i].tooth_numbers[0] || '' // Check if this should be an array :/\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_issued_date ? loa.date_issued_date : Date.now(),\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || [],\n    claim_remarks: loa.remarks || ''\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\nimport MedicalSupplies from './MedicalSupplies'\nimport Pharmacy from './Pharmacy'\nimport Dental from './Dental'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\n// import ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\n\nconst AutoFill = ({ loa, claim_type, claim }) => {\n  // const type = ClaimTypes[claim_type].other_name\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n  console.log(claim_type)\n  switch (claim_type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch, claim })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n    case 'MedicalSupplies':\n      MedicalSupplies({ common, loa, dispatch })\n      break\n    case 'Pharmacy':\n      Pharmacy({ common, loa, dispatch })\n      break\n    case 'Dental':\n      Dental({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","export default {\n  'In Patient': { prefix: 'IP', other_name: 'InPatient' },\n  'Out Patient Procedure': { prefix: 'OP', other_name: 'OutPatientProcedure' },\n  'Out Patient Consultation': { prefix: 'PF', other_name: 'OutPatientConsultation' },\n  Emergency: { prefix: 'ER', other_name: 'Emergency' },\n  Dental: { prefix: 'DN', other_name: 'Dental' },\n  'Medicine Allowance': { prefix: 'MA', other_name: 'MedicineAllowance' },\n  APE: { prefix: 'AP', other_name: 'APE' },\n  ECU: { prefix: 'EC', other_name: 'ECU' },\n  Pharmacy: { prefix: 'PH', other_name: 'Pharmacy' },\n  PPE: { prefix: 'PE', other_name: 'PPE' },\n  'Medical Supplies': { prefix: 'MS', other_name: 'MedicalSupplies' },\n  'Clinic Management': { prefix: 'CM', other_name: 'ClinicManagement' },\n  Reimbursement: {\n    prefix: 'RM',\n    other_name: 'Reimbursement',\n    subType: [\n      { text: 'In Patient', value: 'InPatient' },\n      { text: 'Out Patient', value: 'OutPatient' },\n      { text: 'Professional Fee', value: 'ProfessionalFee' },\n      { text: 'Maternity Assistance', value: 'MaternityAssistance' },\n      { text: 'OPD Medicine', value: 'OPDMedicine' },\n      { text: 'Optical', value: 'Optical' },\n      { text: 'Dental', value: 'Dental' }\n    ]\n  }\n}\n","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport DiscrepancyBase from './..//DiscrepancyBase/DiscrepancyBase'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport CustomerCareService from 'Services/Api/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../../AutoFill'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\n// import ReimbursementTypes from 'Constant/reimbursementTypes'\n// Constants\nimport ClaimTypes from '../../../../Constant/ClaimTypes'\n\n// On Init\n// const reimbursementTypes = ReimbursementTypes.dropdown()\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } = actions\n\nexport default function BaseDetails (props) {\n  const {\n    onChange,\n    claim,\n    disableControls,\n    onChangeReimbursementType = () => {},\n    handleMemberAccountNumber,\n    permissions,\n    requiredFields = {\n      approval_code: true,\n      loa_number: true,\n      reimbursement_type: true\n    },\n    showReimbursement = false,\n    showApprovalCode = true,\n    showClaimSource = false,\n    showLoaNumber = true,\n    showCompany = false,\n    isDental = false,\n    showMemberAccountNumber = true,\n    isCM = false\n  } = props\n\n  const dispatch = useDispatch()\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const errors = useSelector(({ ClaimsAnalysis: state }) => state.error)\n\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [contractPlanTypeLoading, setContractPlanTypeLoading] = React.useState(false)\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getMemberContractPlanType({ account_number: member_id })\n      .then(res => {\n        const { data } = res.data\n        onChange({ field: 'contract_plan_type', value: data.contract_plan_type })\n      })\n      .catch(err => {\n        console.log(err.response)\n        onChange({ field: 'contract_plan_type', value: '' })\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getClientrContractPlanType({ account_number: corporate_account_no })\n      .then(res => {\n        const { data } = res.data\n        onChange({ field: 'contract_plan_type', value: data.contract_plan_type })\n      })\n      .catch(err => {\n        console.log(err.response)\n        onChange({ field: 'contract_plan_type', value: '' })\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  const handleLoaDetails = event => {\n    const { value } = event.target\n    if (value) {\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value }).then(res => {\n        const loa = res.data\n        if (loa) {\n          AutoFill({\n            loa,\n            claim_type,\n            claim\n          })\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {permissions.read && !isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-approval-code'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.approval_code\n                  }}\n                >\n                  <TextField\n                    id='approval-code'\n                    required={!!requiredFields.approval_code}\n                    label='Approval Code'\n                    placeholder={claim.approval_code || 'Pending'}\n                    value={claim.approval_code}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                    onBlur={handleLoaDetails}\n                    error={errors.approval_code}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-loa-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.loa_number\n                  }}\n                >\n                  <TextField\n                    id='loa-number'\n                    required={!!requiredFields.loa_number}\n                    label='LOA No.'\n                    placeholder={claim.loa_number || 'Pending'}\n                    value={claim.loa_number}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                    error={errors.loa_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  readOnly\n                />\n              </LoadingIndicator>\n            </div>\n\n            {showReimbursement && (\n              <div className={classes.input}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  required={!!requiredFields.reimbursement_type}\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n\n            {showClaimSource && (\n              <div className={classes.input}>\n                <TextField\n                  id='claim-source'\n                  label='Claim Source'\n                  required\n                  value={claim.claim_source}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n                  error={errors.claim_source}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n          </div>\n          {showCompany && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-customer-account-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.client_account_number\n                  }}\n                >\n                  <TextField\n                    id='company-account-number'\n                    label='Customer Account Number'\n                    value={claim.client_account_number}\n                    disabled={disableControls}\n                    required\n                    onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                    error={errors.client_account_number}\n                    readOnly={!permissions.update}\n                  />\n                  {permissions.update && (\n                    <div className={classes.search}>\n                      <Button\n                        id='client-account-number-search'\n                        variant='outlined'\n                        className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                        onClick={handleOnClickClientLookup}\n                      >\n                        <SearchIcon />\n                      </Button>\n                    </div>\n                  )}\n                </DiscrepancyBase>\n              </div>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-company-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.client_account_name\n                  }}\n                >\n                  <TextField\n                    id='company-name'\n                    label='Company Name'\n                    value={claim.client_account_name}\n                    disabled={disableControls}\n                    required\n                    onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                    error={errors.client_account_name}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            {showMemberAccountNumber && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-member-account-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.member_account_number\n                  }}\n                >\n                  <TextField\n                    id='member-account-number'\n                    required\n                    label='Member Account No.'\n                    value={claim.member_account_number}\n                    disabled={disableControls}\n                    onChange={event =>\n                      onChange({\n                        field: 'member_account_number',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.member_account_number}\n                    readOnly={!permissions.update}\n                  />\n                  {permissions.update && (\n                    <div className={classes.search}>\n                      <Button\n                        id='member-account-number-search'\n                        variant='outlined'\n                        className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                        onClick={handleOnClickMemberLookup}\n                      >\n                        <SearchIcon />\n                      </Button>\n                    </div>\n                  )}\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-last-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_last_name\n                }}\n              >\n                <TextField\n                  id='member-last-name'\n                  required\n                  label='Member Last Name'\n                  value={claim.member_last_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                  error={errors.member_last_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-first-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_first_name\n                }}\n              >\n                <TextField\n                  id='member-first-name'\n                  required\n                  label='Member First Name'\n                  value={claim.member_first_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_first_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_first_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-middle-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_middle_name\n                }}\n              >\n                <TextField\n                  id='member-middle-name'\n                  required={!!isDental}\n                  label='Member Middle Name'\n                  value={claim.member_middle_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_middle_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_middle_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {permissions.read && isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-client-account-number'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.client_account_number\n                }}\n              >\n                <TextField\n                  id='client-account-number'\n                  label='Client Account Number'\n                  value={claim.client_account_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                  error={errors.client_account_number}\n                  readOnly={!permissions.update}\n                />\n                {permissions.update && (\n                  <div className={classes.search}>\n                    <Button\n                      id='client-account-number-search'\n                      variant='outlined'\n                      className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                      onClick={handleOnClickClientLookup}\n                    >\n                      <SearchIcon />\n                    </Button>\n                  </div>\n                )}\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-client-account-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.client_account_number\n                }}\n              >\n                <TextField\n                  id='client-account-name'\n                  label='Client Account Name'\n                  value={claim.client_account_name}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'client_account_name'\n                      })\n                    )\n                  }\n                  error={errors.client_account_number}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  disabled\n                />\n              </LoadingIndicator>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <AutoFillInitializer />\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n// Compoments\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = props => {\n  const { children } = props\n  return (\n    <div className={classes.root}>\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    required,\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    onDeleteDiagnosis,\n    error = { description: '', code: '' },\n    permissions\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.delete}>\n          {''}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary {required && ' *'}\n        </Typography>\n      </div>\n      <div className={classes['sub-wrapper']}>\n        <div className={classes.delete}>\n          {permissions.delete && (\n            <IconButton id='delete-icd' onClick={index => onDeleteDiagnosis({ index })}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          )}\n        </div>\n\n        <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={description}>\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions.description}\n              onChange={(value, isSuggestionClick) => onChangeDescription({ value, isSuggestionClick })}\n              error={error.description}\n              readOnly={!permissions.update}\n            />\n          </div>\n        </Tooltip>\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions.code}\n            onChange={(value, isSuggestionClick) => onChangeCode({ value, isSuggestionClick })}\n            error={error.code}\n            readOnly={!permissions.update}\n          />\n        </div>\n        <div className={classes.primary}>\n          <Radio color='primary' checked={primary} onClick={onChangePrimary} disabled={!permissions.update} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst GivenDiagnosisField = props => {\n  const {\n    required,\n    id = '',\n    givenDiag = '',\n    suggestions = { description: [], code: [] },\n    onChangeGivenDiag,\n    error = { description: '', code: '' },\n    permissions\n  } = props\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          <Typography variant='subtitle2' className={classes.delete}>\n            {''}\n          </Typography>\n          <Typography variant='subtitle2' className={classes.description}>\n            Given Diagnosis {required && ' *'}\n          </Typography>\n        </div>\n        <div className={classes['given-diagnosis']}>\n          <AutoComplete\n            id={id}\n            value={givenDiag}\n            suggestions={suggestions.given_diagnosis}\n            onChange={(value, isSuggestionClick) => onChangeGivenDiag({ value, isSuggestionClick })}\n            error={error.given_diagnosis}\n            readOnly={!permissions.update}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField, GivenDiagnosisField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Components\n\nimport { ICDTextFields, ICDTextField, GivenDiagnosisField } from '../ICDTextField/ICDTextField'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  resetSuggestionArray,\n  setSuggestionOnArray,\n  setError\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, error, permissions, id } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n\n  const handleOnClickAddDiagnosis = (defaultBehaviour = true) => {\n    const lastEntry = items.length !== 0 ? items[items.length - 1] : null\n    if (defaultBehaviour && lastEntry && (!lastEntry.code.length || !lastEntry.description.length)) {\n      return false\n    }\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnConfirmDelete = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    setOpenDeleteDialog({ show: false, index: null })\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(setError({ diagnosis: {} }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n    if (items.length === 1 && index !== null) {\n      handleOnClickAddDiagnosis(false)\n    }\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, isSuggestionClick, index } = args\n\n    dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      for (let i of suggestions.icd10[index].data) {\n        if (value === i[field]) {\n          dispatch(\n            setClaimDiagnosis({\n              index,\n              data: { description: i.description, code: i.code }\n            })\n          )\n          if (field === 'given_diagnosis') {\n            getIcd10Suggestions({ value, by: field, index, synonym: true })\n          }\n        }\n      }\n    } else getIcd10Suggestions({ value, by: field, index })\n\n    dispatch(resetSuggestionArray({ field: 'icd10', index }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const getIcd10Suggestions = ({ value, by, index, synonym = false }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          if (by === 'given_diagnosis') {\n            ClaimsAdjudicationServices.getICDSynonyms({ query: value }).then(res => {\n              const { data } = res.data\n              let _items = []\n              let _by = by\n              if (synonym) _by = 'description'\n              for (let d of data) _items.push(d[_by])\n              dispatch(\n                setSuggestionOnArray({\n                  field: 'icd10',\n                  index,\n                  by: _by,\n                  suggestion: _items,\n                  data\n                })\n              )\n            })\n          } else {\n            IcdCptStorageServices.lookups({\n              on: 'icd-10',\n              params: { query: value, by }\n            }).then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n\n              dispatch(\n                setSuggestionOnArray({\n                  field: 'icd10',\n                  index,\n                  by,\n                  suggestion: _items,\n                  data\n                })\n              )\n            })\n          }\n        }\n      }, 500)\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.groups} id={id}>\n          <div className={`${classes['diagnosis-list']} ${error['list'] && classes['has-error']}`}>\n            <Typography variant='h6' className={classes.title}>\n              Diagnosis List\n            </Typography>\n            <ICDTextFields>\n              {items.map((item, index) => (\n                <React.Fragment key={`diagnosis-${index}`}>\n                  {/* // Given Diagnosis */}\n                  <DiscrepancyBase\n                    id={`dp-icd-description-${index}`}\n                    key={`icd-given-${index}`}\n                    discrepancy={{\n                      result: discrepancy.diagnosis[index]\n                    }}\n                    showIcon={false}\n                    retainSpace\n                    noMargin\n                    className={classes.discrepancy}\n                  >\n                    <GivenDiagnosisField\n                      required\n                      id={`given-diagnosis-${index}`}\n                      givenDiag={item.given_diagnosis}\n                      onChangeGivenDiag={args => handleOnChangeIcd10({ field: 'given_diagnosis', index, ...args })}\n                      permissions={permissions}\n                      suggestions={suggestions.icd10[index]}\n                      error={error && error.items && error.items[index]}\n                    />\n                  </DiscrepancyBase>\n                  <DiscrepancyBase\n                    id={`dp-icd-description-${index}`}\n                    key={`icd-${index}`}\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.diagnosis[index]\n                    }}\n                    retainSpace\n                    noMargin\n                    className={classes.discrepancy}\n                  >\n                    <ICDTextField\n                      required\n                      key={`icd-${index} ${error[index]}`}\n                      id={`icd-description-${index}`}\n                      codeId={`icd-code-${index}`}\n                      error={error && error.items && error.items[index]}\n                      description={item.description}\n                      suggestions={suggestions.icd10[index]}\n                      code={item.code}\n                      primary={item.primary}\n                      onChangeDescription={args => handleOnChangeIcd10({ field: 'description', index, ...args })}\n                      onChangeCode={args => handleOnChangeIcd10({ field: 'code', index, ...args })}\n                      onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                      onDeleteDiagnosis={() => handleOnConfirmDelete(index)}\n                      permissions={permissions}\n                    />\n                  </DiscrepancyBase>\n                </React.Fragment>\n              ))}\n            </ICDTextFields>\n            {permissions.create && (\n              <Button\n                id='add-diagnosis-button'\n                className={classes['add-diagnosis-button']}\n                onClick={handleOnClickAddDiagnosis}\n              >\n                + Add a diagnosis\n              </Button>\n            )}\n          </div>\n          {error.error && <span className={classes.error}>{error.list}</span>}\n          <Alert\n            open={openDeleteDialog.show}\n            message='Are you sure you want to delete this diagnosis?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n            onOk={() => handleOnRemoveDiagnosis(openDeleteDialog.index)}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './CustomTable.module.scss'\n\nconst Table = ({ children }) => {\n  const _children = React.Children.toArray(children)\n\n  const headers = []\n  const body = []\n  _children.filter((item, index) => {\n    if (item.type.displayName === 'TableHeader') {\n      headers.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n\n    if (item.type.displayName === 'TableBody') {\n      body.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n  })\n\n  return (\n    <table className={classes.table}>\n      {headers}\n      {body}\n    </table>\n  )\n}\n\nconst TableHeader = ({ items = [] }) => {\n  return (\n    <thead>\n      <tr>\n        {items.map((i, index) => (\n          <th key={i.name} style={{ width: `${i.width}px`, textAlign: i.align }}>\n            {i.name}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\nTableHeader.displayName = 'TableHeader'\n\nconst TableBody = ({ children }) => {\n  return <tbody>{children}</tbody>\n}\nTableBody.displayName = 'TableBody'\n\nconst TableRow = ({ children, className, onClick, expanded, id }) => {\n  const _children = React.Children.toArray(children)\n  // const [open, setOpen] = React.useState(expanded)\n  const [expandable, setExpandable] = React.useState([])\n  const [cells, setCells] = React.useState([])\n\n  React.useEffect(() => {\n    _children.filter((item, index) => {\n      if (item.type === 'td') {\n        setCells(state => [\n          ...state,\n          React.cloneElement(item, {\n            key: index\n          })\n        ])\n      }\n\n      if (item.type) {\n        if (item.type.displayName === 'TableRowExpandable') {\n          setExpandable(state => [\n            ...state,\n            React.cloneElement(item, {\n              key: index\n            })\n          ])\n        }\n      }\n    })\n  }, [])\n\n  const handleOnClick = () => {\n    // setOpen(!open)\n    if (typeof onClick === 'function') onClick()\n  }\n\n  return (\n    <React.Fragment>\n      <tr id={id} onClick={handleOnClick} className={className}>\n        {cells}\n      </tr>\n      <tr id={id} className={classes.expandable}>\n        <td colSpan={cells.length}>\n          <div className={`${classes.container} ${expanded ? classes.open : ''}`}>\n            <div className={classes.content}>{expandable}</div>\n          </div>\n        </td>\n      </tr>\n    </React.Fragment>\n  )\n}\nTableRow.displayName = 'TableRow'\n\nconst TableRowExpandable = ({ children }) => {\n  return children\n}\nTableRowExpandable.displayName = 'TableRowExpandable'\n\nexport { Table, TableHeader, TableBody, TableRow, TableRowExpandable }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function ProcedureForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    isDental,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState(null)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = procedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProcedure({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n\n  // ***** FETCHING\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ data: procedure.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProcedure(procedure.details))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ data: procedure.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProcedure({ index, details: procedure.details }))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProcedure({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Procedure Form')} */}\n      {/* {console.log('Data', procedure)} */}\n      {/* {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', procedure.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {procedure.show && procedure.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.diagnosis}>\n                  <div>\n                    <DropDown\n                      id='given-diagnosis'\n                      label='Given Diagnosis'\n                      required\n                      items={diagnosis.map(({ given_diagnosis }) => ({\n                        text: given_diagnosis,\n                        value: given_diagnosis\n                      }))}\n                      value={procedure.details.diagnosis_given_diagnosis}\n                      onChange={event =>\n                        handleOnChangeDiagnosis({\n                          field: 'diagnosis_given_diagnosis',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.diagnosis_given_diagnosis}\n                      readOnly={!permissions.update}\n                    />\n                  </div>\n                  <div className={classes.groups}>\n                    <div className={`${classes.input} ${classes.limit}`}>\n                      <DropDown\n                        id='icd10-description'\n                        required\n                        label='ICD10 Description'\n                        items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                        value={procedure.details.diagnosis_description}\n                        onChange={event =>\n                          handleOnChangeDiagnosis({\n                            field: 'diagnosis_description',\n                            value: event.target.value\n                          })\n                        }\n                        error={_errors.diagnosis_description}\n                        readOnly={!permissions.update}\n                      />\n                    </div>\n                    <div className={classes.input}>\n                      <DropDown\n                        id='icd10-code'\n                        required\n                        label='ICD10 Code'\n                        items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                        value={procedure.details.diagnosis_code}\n                        onChange={event =>\n                          handleOnChangeDiagnosis({\n                            field: 'diagnosis_code',\n                            value: event.target.value\n                          })\n                        }\n                        error={_errors.diagnosis_code}\n                        readOnly={!permissions.update}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-description'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { code: discrepancy.code, description: discrepancy.description }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    id={`procedure-description-autocomplete`}\n                    required\n                    label={'Procedure Details'}\n                    value={procedure.details.description}\n                    suggestions={suggestions.cpt.description}\n                    onChange={(value, isSuggestionClick, selectedIndex) =>\n                      handleOnChangeCpt({\n                        field: 'description',\n                        value,\n                        isSuggestionClick,\n                        selectedIndex\n                      })\n                    }\n                    error={_errors.description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n\n                <div className={classes.code}>\n                  <AutoComplete\n                    id={`procedure-code-autocomplete`}\n                    required\n                    label={'CPT Code'}\n                    value={procedure.details.code}\n                    suggestions={suggestions.cpt.code}\n                    onChange={(value, isSuggestionClick, selectedIndex) =>\n                      handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                    }\n                    error={_errors.code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {isDental && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-tooth-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.tooth_number\n                  }}\n                  autoWidth\n                >\n                  <Typography variant='subtitle2' className={classes['label']}>\n                    {`Tooth Number *`}\n                  </Typography>\n                  <TextField\n                    id='tooth-number'\n                    value={procedure.details.tooth_number}\n                    onChange={event => {\n                      handleOnChange({\n                        field: 'tooth_number',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.tooth_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={procedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={procedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='procedure-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={procedure.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={procedure.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={procedure.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={procedure.details.amount_not_covered > 0}\n                      disableComponents={procedure.details.amount_not_covered === 0}\n                      value={procedure.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={procedure.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={procedure.details.amount_due_from_member > 0}\n                      disableComponents={procedure.details.amount_due_from_member === 0}\n                      value={procedure.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={procedure.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={procedure.details.amount_due_from_client > 0}\n                      disableComponents={procedure.details.amount_due_from_client === 0}\n                      value={procedure.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(procedure.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='procedure-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(procedure.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`procedure-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(procedure.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this procedure?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(procedure.index)}\n      />\n    </React.Fragment>\n  )\n}\n","const Item = item => {\n  // fields from Encoder\n  const { gross_amount = 0, vat_amount = 0, amount_paid_by_member = 0, philhealth_amount_paid = 0 } = item\n  // fields from Analyst\n  const { amount_not_covered = 0 } = item\n  // , amount_due_from_member = 0, amount_due_from_client = 0\n\n  return (\n    parseFloat(gross_amount) +\n    parseFloat(vat_amount) -\n    (parseFloat(amount_not_covered) + parseFloat(philhealth_amount_paid) + parseFloat(amount_paid_by_member))\n  )\n}\n\nconst List = items => {\n  return items.reduce((current, item) => current + Item(item), 0)\n}\n\nconst Grand = lineItems => {\n  const { procedures, dental_procedures, hospital_items, professional_fees } = lineItems || {}\n  let grand = 0\n  if (procedures) grand += List(procedures)\n  if (dental_procedures) grand += List(dental_procedures)\n  if (hospital_items) grand += List(hospital_items)\n  if (professional_fees) grand += List(professional_fees)\n  return grand\n}\n\nexport default { Item, List, Grand }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.procedure)\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.procedure)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProcedure({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-procedure'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProcedure({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Procedure\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Procedure List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${procedure ? procedure.show : ''}`}\n                id={`procedure-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={procedure.index === index ? procedure.show : false}\n              >\n                <td\n                  id={`procedure-row-description-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.description}\n                </td>\n                <td\n                  id={`procedure-row-code-${index}`}\n                  className={`${classes.align} ${classes.center}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.code}\n                </td>\n                <td\n                  id={`procedure-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {procedure.mode === 'add' && (\n              <TableRow\n                key={`add ${procedure ? procedure.show : ''} `}\n                id={`procedure-add`}\n                className={`${classes['row']}`}\n                expanded={procedure.mode === 'add' ? procedure.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'procedure-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setHospitalItem,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetError\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthRemarks = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = hospitalItem.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeHospitalItem = ({ value, field, isSuggestionClick }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.hospitalItem.data) {\n        if (value === i.name || value === i.item_code) {\n          dispatch(\n            setHospitalItem({\n              details: {\n                id: i.id,\n                name: i.name,\n                item_code: i.item_code\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n  // ***** FETCHING\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'hospitalItem',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ data: hospitalItem.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimHospitalItem(hospitalItem.details))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ data: hospitalItem.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimHospitalItem({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOCancel = index => {\n    dispatch(resetError({ index }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Hospital Item Form')} */}\n      {/* {console.log('Data', hospitalItem)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', hospitalItem.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {hospitalItem.show && hospitalItem.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.diagnosis}>\n                  <div>\n                    <DropDown\n                      id='given-diagnosis'\n                      label='Given Diagnosis'\n                      required\n                      items={diagnosis.map(({ given_diagnosis }) => ({\n                        text: given_diagnosis,\n                        value: given_diagnosis\n                      }))}\n                      value={hospitalItem.details.diagnosis_given_diagnosis}\n                      onChange={event =>\n                        handleOnChangeDiagnosis({\n                          field: 'diagnosis_given_diagnosis',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.diagnosis_given_diagnosis}\n                      readOnly={!permissions.update}\n                    />\n                  </div>\n                  <div className={classes.groups}>\n                    <div className={`${classes.input} ${classes.limit}`}>\n                      <DropDown\n                        id='icd10-description'\n                        required\n                        label='ICD10 Description'\n                        items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                        value={hospitalItem.details.diagnosis_description}\n                        onChange={event =>\n                          handleOnChangeDiagnosis({\n                            field: 'diagnosis_description',\n                            value: event.target.value\n                          })\n                        }\n                        readOnly={!permissions.update}\n                        error={_errors.diagnosis_description}\n                      />\n                    </div>\n                    <div className={classes.input}>\n                      <DropDown\n                        id='icd10-code'\n                        required\n                        label='ICD10 Code'\n                        items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                        value={hospitalItem.details.diagnosis_code}\n                        onChange={event =>\n                          handleOnChangeDiagnosis({\n                            field: 'diagnosis_code',\n                            value: event.target.value\n                          })\n                        }\n                        readOnly={!permissions.update}\n                        error={_errors.diagnosis_code}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospital-item'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { item_code: discrepancy.item_code, name: discrepancy.name }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    label={'Item Name'}\n                    required\n                    id={`hospital-item-name`}\n                    value={hospitalItem.details.name}\n                    suggestions={suggestions.hospitalItem.name}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeHospitalItem({ field: 'name', value, isSuggestionClick })\n                    }\n                    error={_errors.name}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.code}>\n                  <AutoComplete\n                    label={'Item Code'}\n                    required\n                    id={`hospital-item-code`}\n                    value={hospitalItem.details.item_code}\n                    suggestions={suggestions.hospitalItem.item_code}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeHospitalItem({ field: 'item_code', value, isSuggestionClick })\n                    }\n                    error={_errors.item_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={hospitalItem.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-vat-amount'\n                  label='VAT Amount'\n                  value={hospitalItem.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospitalItem-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='hospital-item-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={hospitalItem.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-philhealth-amount-paid'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_amount_paid\n                }}\n              >\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={hospitalItem.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_amount_paid}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={hospitalItem.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n          </div>\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={hospitalItem.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={hospitalItem.details.amount_not_covered > 0}\n                      disableComponents={hospitalItem.details.amount_not_covered === 0}\n                      value={hospitalItem.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={hospitalItem.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={hospitalItem.details.amount_due_from_member > 0}\n                      disableComponents={hospitalItem.details.amount_due_from_member === 0}\n                      value={hospitalItem.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={hospitalItem.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={hospitalItem.details.amount_due_from_client > 0}\n                      disableComponents={hospitalItem.details.amount_due_from_client === 0}\n                      value={hospitalItem.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnSave(hospitalItem.index)}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {hospitalItem.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='hospital-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(hospitalItem.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`hospital-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOCancel(hospitalItem.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this hospital item?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(hospitalItem.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setHospitalItem } = actions\n\nexport default function HospitalItemList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.hospital_item)\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.hospital_item)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setHospitalItem({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-hospital-item'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setHospitalItem({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Items\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Hospital List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', hospitalItem)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospital-item-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={hospitalItem.index === index ? hospitalItem.show : false}\n              >\n                <td id={`hospital-item-row-name-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>\n                  {i.name}\n                </td>\n                <td\n                  id={`hospital-item-row-code${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                  className={`${classes.align} ${classes.center}`}\n                >\n                  {i.item_code}\n                </td>\n                <td\n                  id={`hospital-item-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {hospitalItem.mode === 'add' && (\n              <TableRow\n                key={`add ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospitalItem-add`}\n                className={`${classes['row']}`}\n                expanded={hospitalItem.mode === 'add' ? hospitalItem.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'hospital-item-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProfessionalFee,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setError\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = professionalFee.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.pfDoctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                doctor_id: i.id,\n                doctor_name: i.full_name,\n                specialization: i.specialization.main + ', ' + i.specialization.major\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeSpecialization = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.specialization.data) {\n        if (value === i.description) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                specialization: i.description\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'specialization' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'specialization' }))\n      getSpecializationSuggestions({ value, by: 'description' })\n    }\n  }\n\n  // ***** FETCHING\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'pfDoctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getSpecializationSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getDoctorSpecilizations({ data: value }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'specialization',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ data: professionalFee.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProfessionalFee(professionalFee.details))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ data: professionalFee.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('ProfessionalFee Form')} */}\n      {/* {console.log('Data', professionalFee)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', professionalFee.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {professionalFee.show && professionalFee.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.diagnosis}>\n                  <div>\n                    <DropDown\n                      id='given-diagnosis'\n                      label='Given Diagnosis'\n                      required\n                      items={diagnosis.map(({ given_diagnosis }) => ({\n                        text: given_diagnosis,\n                        value: given_diagnosis\n                      }))}\n                      value={professionalFee.details.diagnosis_given_diagnosis}\n                      onChange={event =>\n                        handleOnChangeDiagnosis({\n                          field: 'diagnosis_given_diagnosis',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.diagnosis_given_diagnosis}\n                      readOnly={!permissions.update}\n                    />\n                  </div>\n                  <div className={classes.groups}>\n                    <div className={`${classes.input} ${classes.limit}`}>\n                      <DropDown\n                        id='icd10-description'\n                        required\n                        label='ICD10 Description'\n                        items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                        value={professionalFee.details.diagnosis_description}\n                        onChange={event =>\n                          handleOnChangeDiagnosis({\n                            field: 'diagnosis_description',\n                            value: event.target.value\n                          })\n                        }\n                        error={_errors.diagnosis_description}\n                        readOnly={!permissions.update}\n                      />\n                    </div>\n                    <div className={classes.input}>\n                      <DropDown\n                        id='icd10-code'\n                        required\n                        label='ICD10 Code'\n                        items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                        value={professionalFee.details.diagnosis_code}\n                        onChange={event =>\n                          handleOnChangeDiagnosis({\n                            field: 'diagnosis_code',\n                            value: event.target.value\n                          })\n                        }\n                        error={_errors.diagnosis_code}\n                        readOnly={!permissions.update}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-medical-partner-id'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_id\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={professionalFee.details.doctor_id}\n                  suggestions={pfSuggestions.pfDoctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={_errors.doctor_id}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-doctor-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_name\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-doctor-name'\n                  required\n                  label='Doctor Name'\n                  value={professionalFee.details.doctor_name}\n                  suggestions={pfSuggestions.pfDoctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={_errors.doctor_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-specialization'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.specialization\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-specialization'\n                  required\n                  label='Specialization'\n                  value={professionalFee.details.specialization}\n                  suggestions={pfSuggestions.specialization.description}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeSpecialization({\n                      field: 'specialization',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={_errors.specialization}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={professionalFee.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-vat-amount'\n                  label='VAT Amount'\n                  value={professionalFee.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-professional-fee-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='professional-fee-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={professionalFee.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={professionalFee.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={professionalFee.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={professionalFee.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={professionalFee.details.amount_not_covered > 0}\n                      disableComponents={professionalFee.details.amount_not_covered === 0}\n                      value={professionalFee.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={professionalFee.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={professionalFee.details.amount_due_from_member > 0}\n                      disableComponents={professionalFee.details.amount_due_from_member === 0}\n                      value={professionalFee.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={professionalFee.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={professionalFee.details.amount_due_from_client > 0}\n                      disableComponents={professionalFee.details.amount_due_from_client === 0}\n                      value={professionalFee.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {professionalFee.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='professional-fee-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(professionalFee.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`professional-fee-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(professionalFee.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this professional fee?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(professionalFee.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProfessionalFee } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.professional_fee)\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.professional_fee)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProfessionalFee({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-professional-fee'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProfessionalFee({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Professional Fee\n            </Typography>\n          )}\n        </div>\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Professional Fee List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${professionalFee ? professionalFee.show : ''}`}\n                id={`professional-fee-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={professionalFee.index === index ? professionalFee.show : false}\n              >\n                <td\n                  id={`professional-fee-row-doctor-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.doctor_name}\n                </td>\n                <td\n                  id={`professional-fee-row-specialization-${index}`}\n                  className={classes.specialization}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.specialization}\n                </td>\n                <td\n                  id={`professional-fee-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {professionalFee.mode === 'add' && (\n              <TableRow\n                key={`add ${professionalFee ? professionalFee.show : ''}`}\n                id={`professionalFee-add`}\n                className={`${classes['row']}`}\n                expanded={professionalFee.mode === 'add' ? professionalFee.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'professional-fee-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string().trim()\n    .label('Escalation Message')\n    .messages({ 'string.empty': `Please enter reason of escalation.` })\n    .required(),\n  assignee: Joi.string().trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' }),\n  assignee: Joi.string()\n    .trim()\n    .label('Assignee')\n    .required()\n    .messages({ 'string.empty': 'Please select a name from the Assigned To field.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport Button from '@material-ui/core/Button'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\n// Validations\nimport EscalateValidator from './EscalateValidator'\nimport ReconValidator from './ReconValidator'\nimport ReturnValidator from './ReturnValidator'\n\n// lodash\nimport { sortBy } from 'lodash'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  resetEscalation,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetReassign,\n  setReassignMessage,\n  setReassignAssignee,\n  resetReturn,\n  setReturnNote\n} = actions\n\nexport default function ClaimFooter (props) {\n  // Events\n  const {\n    doValidate,\n    onReject,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReassign,\n    onSave,\n    onEscalate,\n    onApprove,\n    onCancel,\n    isReimbursement,\n    onRemove,\n    onViewClaimNotice,\n    onReturn\n  } = props\n  // Variables\n  const { disabled, permissions, reimbursement_info = [] } = props\n  // Services\n  const { grandTotal, claimType, userManagementService = () => {} } = props\n\n  const dispatch = useDispatch()\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n  const c_return = useSelector(({ ClaimsAnalysis: state }) => state.return)\n  const rejectStatus = useSelector(({ ClaimsAnalysis: state }) => state.rejectStatus)\n\n  const [escalateModal, setEscalateModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [reassignModal, setReassignModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [returnModal, setReturnModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [approveModal, setApproveModal] = React.useState({ message: '', show: false })\n  const [saveModal, setSaveModal] = React.useState(false)\n  const [cancelModal, setCancelModal] = React.useState(false)\n  const [removeModal, setRemoveModal] = React.useState(false)\n  const [validateModal, setValidateModal] = React.useState(false)\n\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  const [escalationErrors, setEscalationErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [returnError, setReturnErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n  // Init functions\n  const initDropdownUsers = async ({ roles }) => {\n    userManagementService.getUsersByRole(roles[0]).then(({ data }) => {\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  // Validators\n  const doValidateEscalation = () => {\n    const { error } = EscalateValidator({\n      message: escalations.message,\n      assignee: escalations.assignee.id\n    })\n\n    setEscalationErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReturn = () => {\n    const { error } = ReturnValidator({\n      message: c_return.note\n    })\n\n    setReturnErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReassign = () => {\n    const { error } = ReconValidator({\n      message: reassign.message,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  // UI Functions\n  const handleEscalateDialog = () => {\n    dispatch(resetEscalation())\n    initDropdownUsers({ roles: permissions.escalate.options.roles })\n    setEscalationErrors({ message: '', assignee: '' })\n    dispatch(setEscalationMessage(''))\n    setEscalateModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleReassignDialog = () => {\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: permissions.reassign.options.roles })\n    setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignMessage(''))\n    setReassignModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowReturnDialog = () => {\n    dispatch(resetReturn())\n    setReassignErrors({ message: '' })\n    dispatch(setReturnNote(''))\n    setReturnModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowModal = () => {\n    const { AuthorityMatrix } = permissions.approve.options\n\n    const modalProps = { show: true }\n\n    if (AuthorityMatrix) {\n      const { other_types } = AuthorityMatrix\n\n      const selected_amount = AuthorityMatrix[claimType] === undefined ? other_types : AuthorityMatrix[claimType]\n\n      if (grandTotal > selected_amount) {\n        modalProps.message =\n          'The billed amount to be approved is higher than the threshold. Are you sure you want to approve this claim?'\n      }\n    }\n\n    setApproveModal(modalProps)\n    return true\n  }\n\n  const doValidateMiddleware = () => {\n    if (doValidate()) {\n      setValidateModal(true)\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.left}>\n        {SafeAccess(permissions.return_advice, ['visible']) && reimbursement_info.length > 1 && (\n          <Button\n            id='btn-return-advice'\n            variant='contained'\n            color='secondary'\n            className='button-positive'\n            onClick={() => onViewClaimNotice({ goBack: false })}\n            disabled={disabled && permissions.analysis_sheet.enabled}\n          >\n            Return Advice\n          </Button>\n        )}\n      </div>\n      <div className={classes.center} />\n      <div className={classes.right}>\n        {permissions.visible && (\n          <React.Fragment>\n            {SafeAccess(permissions.analysis_sheet, ['visible']) && (\n              <Button\n                id='btn-view-analysis'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                // onClick={() => !doValidateMiddleware() && onViewAnalysisSheet({ goBack: false })}\n                onClick={() => onViewAnalysisSheet({ goBack: false })}\n                disabled={disabled && permissions.analysis_sheet.enabled}\n              >\n                View Analysis Sheet\n              </Button>\n            )}\n            {SafeAccess(permissions.letter_of_advice, ['visible']) && (\n              <Button\n                id='btn-view-loa'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                // onClick={() => !doValidateMiddleware() && onViewLetterOfAdvice({ goBack: false })}\n                onClick={() => onViewLetterOfAdvice({ goBack: false })}\n                disabled={disabled && permissions.letter_of_advice.enabled}\n              >\n                View Letter of Advice\n              </Button>\n            )}\n            {SafeAccess(permissions.escalate, ['visible']) && (\n              <Button\n                id='btn-escalate'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleEscalateDialog()}\n                disabled={disabled && permissions.escalate.enabled}\n              >\n                Escalate\n              </Button>\n            )}\n            {SafeAccess(permissions.reject, ['visible']) && (\n              <Button\n                id='btn-reject'\n                variant='contained'\n                color='secondary'\n                onClick={() =>\n                  !doValidateMiddleware() && (isReimbursement ? onReject({ goBack: false }) : setRejectModal(true))\n                }\n                disabled={rejectStatus && !isReimbursement}\n              >\n                Reject\n              </Button>\n            )}\n            {SafeAccess(permissions.return, ['visible']) && (\n              <Button\n                id='btn-return'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => handleOnShowReturnDialog()}\n                disabled={disabled && permissions.return.enabled}\n              >\n                Return\n              </Button>\n            )}\n            {SafeAccess(permissions.approve, ['visible']) && (\n              <Button\n                id='approve'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleOnShowModal()}\n                disabled={disabled && permissions.approve.enabled}\n              >\n                Approve\n              </Button>\n            )}\n            {SafeAccess(permissions.save, ['visible']) && (\n              <Button\n                id='save-for-now'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && setSaveModal(true)}\n                disabled={disabled && permissions.save.enabled}\n              >\n                Save for now\n              </Button>\n            )}\n            {SafeAccess(permissions.remove, ['visible']) && (\n              <Button\n                id='remove'\n                variant='contained'\n                color='secondary'\n                onClick={() => setRemoveModal(true)}\n                disabled={disabled && permissions.remove.enabled}\n              >\n                Remove\n              </Button>\n            )}\n            {SafeAccess(permissions, ['close']) ? (\n              <Button id='cancel' variant='contained' color='secondary' onClick={() => onCancel({ goBack: true })}>\n                Close\n              </Button>\n            ) : (\n              <Button id='cancel' variant='contained' color='secondary' onClick={() => setCancelModal(true)}>\n                Cancel\n              </Button>\n            )}\n            {SafeAccess(permissions.reassign, ['visible']) && (\n              <Button\n                id='btn-reassign'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => handleReassignDialog()}\n                disabled={disabled && permissions.reassign.enabled}\n              >\n                Reassign\n              </Button>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n      <div className={classes.modals}>\n        {SafeAccess(permissions.escalate, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={escalateModal.dialog}\n              className={classes.escalate}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reason For Escalation\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id='escalation-text'\n                    value={escalations.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                    error={escalationErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                    </Typography>\n                    <DropDown\n                      id='escalate-to'\n                      items={dropDownUsers}\n                      value={escalations.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setEscalationAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={escalationErrors.assignee}\n                      disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      id='escalate-cancel'\n                      onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() =>\n                        !doValidateEscalation() && setEscalateModal(state => ({ ...state, confirm: true }))\n                      }\n                      id='escalate-submit'\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={escalateModal.confirm}\n              message='Are you sure you want to escalate claim?'\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setEscalateModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setEscalateModal(state => ({ ...state, dialog: false, confirm: false }))\n                onEscalate({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reassign, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setReassignModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={reassignModal.dialog}\n              className={classes.reassign}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reassign\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={reassign.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setReassignMessage(event.target.value))}\n                    error={reassignErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      Assign To:\n                    </Typography>\n                    <DropDown\n                      id='reassign-to'\n                      items={dropDownUsers}\n                      value={reassign.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setReassignAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={reassignErrors.assignee}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => !doValidateReassign() && setReassignModal(state => ({ ...state, confirm: true }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={reassignModal.confirm}\n              message={\n                permissions.reassign && permissions.reassign.message\n                  ? permissions.reassign.message\n                  : 'Are you sure you want to re-assign claim?'\n              }\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setReassignModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setReassignModal(state => ({ ...state, dialog: false, confirm: false }))\n                onReassign({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.return, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setReturnModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={returnModal.dialog}\n              className={classes.return}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Notes\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setReturnModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={c_return.note}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setReturnNote(event.target.value))}\n                    error={returnError.message}\n                  />\n                </div>\n                <div className={classes.return}>\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setReturnModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => !doValidateReturn() && onReturn({ goBack: true })}\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Ok\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reject, ['enabled']) && (\n          <Alert\n            open={rejectModal}\n            message='Are you sure you want to reject this claim?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setRejectModal(false)}\n            onOk={() => {\n              setRejectModal(false)\n              onReject({ goBack: false })\n            }}\n          />\n        )}\n\n        {SafeAccess(permissions.approve, ['enabled']) && (\n          <Alert\n            open={approveModal.show}\n            message={approveModal.message || 'Are you sure you want to approve the claim?'}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setApproveModal({ show: false })}\n            onOk={() => {\n              setApproveModal({ show: false })\n              onApprove({ goBack: false })\n            }}\n          />\n        )}\n\n        <Alert\n          open={validateModal}\n          message='Please input all mandatory fields'\n          okLabel='Ok'\n          onOk={() => {\n            setValidateModal(false)\n          }}\n        />\n\n        <Alert\n          open={saveModal}\n          message='Are you sure you want to save the changes?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setSaveModal(false)}\n          onOk={() => {\n            setSaveModal(false)\n            onSave(true)\n          }}\n        />\n\n        <Alert\n          open={cancelModal}\n          message='Are you sure you want to cancel?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setCancelModal(false)}\n          onOk={() => {\n            setCancelModal(false)\n            onCancel({ goBack: true })\n          }}\n        />\n\n        <Alert\n          open={removeModal}\n          message='Are you sure you want to remove this claim?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setRemoveModal(false)}\n          onOk={() => {\n            setRemoveModal(false)\n            onRemove({ goBack: true })\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DisapprovedLabel.module.scss'\n\nexport default function DisapprovedLabel(props) {\n  // INIT\n  const { reasons, ...other } = props\n\n  // Breaking down props\n  let { id } = props\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  // FUNCTIONS\n\n  function generateMessage(results) {\n    if (typeof results === 'string') {\n      return '\\u2022 ' + results\n    } else if (typeof results === 'object') {\n      let message = ''\n      results.map((value, index) => {\n        message += '\\u2022 ' + value + '\\n'\n      })\n      return message.substring(0, message.length - 1)\n    }\n  }\n\n  const open = Boolean(anchorEl)\n  id = open ? 'simple-popover' : id\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n  return (\n    <React.Fragment>\n      {reasons && reasons.length > 0 ? (\n        <div className={`${classes[`root`]} ${reasons.length > 0 ? classes.disapproved : ''}`}>\n          <div id={id} className={`${classes[`input-wrapper`]}`}>\n            <Typography\n              id={props.id}\n              variant='h6'\n              className={`${classes.label} ${classes['read-only-value']}`}\n              {...other}\n            >\n              {props.value}\n            </Typography>\n            {reasons.length > 0 ? (\n              <div id={`container-${id}`} className={classes['icon-container']}>\n                <FontAwesomeIcon\n                  id={`exc-circle-${id}`}\n                  icon='exclamation-circle'\n                  className={classes.icon}\n                  onClick={handleClick} />\n                <Popover\n                  id={id}\n                  open={open}\n                  anchorEl={anchorEl}\n                  onClose={handleClose}\n                  anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'center',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n                    {generateMessage(reasons)}\n                  </Typography>\n                </Popover>\n              </div>\n            ) : (\n                ''\n              )}\n          </div>\n        </div>\n      ) : (\n          ''\n        )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport classes from './TextFieldSubmit.module.scss'\nexport default function TextFieldSubmit (props) {\n  const { label = '', required, readOnly, error, onSubmit, ...other } = props\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {props.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${error && classes['has-error']}`}>\n              <InputBase className={classes.input} {...other} autoComplete='no' />\n              <Button\n                className={`button-positive ${classes.submit}`}\n                onClick={onSubmit}\n                variant='contained'\n                color='primary'\n                autoFocus\n              >\n                Send\n              </Button>\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  comment: Joi.string()\n    .trim()\n    .label('Comment')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextFieldSubmit from 'SharedComponents/TextFieldSubmit/TextFieldSubmit'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ChatBox.module.scss'\n\n// Validator\nimport ExcalateValidator from './EscalateValidator'\n\nexport default function ChatBox (props) {\n  let {\n    messages = [],\n    title,\n    permissions,\n    placeholder = 'Compose Message',\n    confirmMessage = 'Are you sure you want to reply to the escalated claim?',\n    okLabel = 'Send',\n    cancelLabel = 'Cancel',\n    onSubmitComment = () => {},\n    confirm = false\n  } = props\n\n  if (permissions.options) {\n    confirmMessage = permissions.options.confirmMessage\n    okLabel = permissions.options.okLabel\n    cancelLabel = permissions.options.cancelLabel\n    confirm = permissions.options.confirm\n  }\n\n  let lastDate = ''\n\n  const [confirmSubmitDialog, setConfirmSubmitDialog] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [comment, setComment] = React.useState('')\n\n  const isMe = args => {\n    const user_id = localStorage.getItem('user_id')\n    return args._id === user_id\n  }\n\n  const doDateSplit = date => {\n    const sdate = DateFormatter(date)\n\n    if (lastDate !== sdate) {\n      lastDate = sdate\n      return true\n    }\n    return false\n  }\n\n  const doValidate = () => {\n    const { error } = ExcalateValidator({ comment })\n    if (error) {\n      setErrors(error)\n      return !!error\n    }\n  }\n\n  const doSubmit = () => {\n    if (confirm) setConfirmSubmitDialog(true)\n    else onSubmitComment(comment)\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.root}>\n          <Paper className={classes.wrapper}>\n            {title && (\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  {title}\n                </Typography>\n              </div>\n            )}\n\n            <div className={classes.body}>\n              {messages.length <= 0 ? (\n                <div className={classes.placeholder}>\n                  <Typography variant='subtitle2'>No Message</Typography>\n                </div>\n              ) : (\n                <div className={classes.messages}>\n                  {messages.map((m, index) => (\n                    <React.Fragment key={`${m.timestamp.object}`}>\n                      {doDateSplit(m.timestamp.object) && (\n                        <Typography variant='subtitle2' className={classes.split}>\n                          {DateFormatter(m.timestamp.object)}\n                        </Typography>\n                      )}\n                      <div\n                        key={`${index}`}\n                        className={`${classes.balloon} ${isMe(m.sender) ? classes.me : classes.receive} `}\n                      >\n                        <div className={classes.mheader}>\n                          <Typography variant='subtitle2' className={classes.sender}>\n                            {m.sender.username}\n                          </Typography>\n                          <Typography variant='subtitle2' className={classes.time}>\n                            {DateFormatter(m.timestamp.object, 'hh:mm A')}\n                          </Typography>\n                        </div>\n                        <div className={classes.mbody}>\n                          <Typography\n                            variant='subtitle2'\n                            style={{ whiteSpace: 'pre-line' }}\n                            className={classes.content}\n                          >\n                            {m.message}\n                          </Typography>\n                        </div>\n                      </div>\n                    </React.Fragment>\n                  ))}\n                </div>\n              )}\n            </div>\n            <div className={classes.action}>\n              {permissions.create && (\n                <div className={classes['comment-box']}>\n                  <TextFieldSubmit\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={comment}\n                    autoFocus\n                    fullWidth\n                    placeholder={placeholder}\n                    onChange={event => setComment(event.target.value)}\n                    onSubmit={event => !doValidate() && doSubmit()}\n                    error={errors.comment}\n                  />\n                </div>\n              )}\n            </div>\n          </Paper>\n          <Alert\n            open={confirmSubmitDialog}\n            message={confirmMessage}\n            cancelLabel={cancelLabel}\n            okLabel={okLabel}\n            onCancel={() => setConfirmSubmitDialog(false)}\n            onOk={() => {\n              setConfirmSubmitDialog(false)\n              onSubmitComment(comment)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './CustomTabs.module.scss'\n\nfunction TabPanel (props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      key={`tab-${index}`}\n      {...other}\n    >\n      <div>{children}</div>\n    </Typography>\n  )\n}\n\nconst CustomTabs = props => {\n  const { children, defaultIndex = 0, containerSyles = {} } = props\n  const [value, setValue] = React.useState(defaultIndex)\n\n  let items = React.Children.toArray(children)\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'CustomTab') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n  function handleChange (event, newValue) {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root} style={containerSyles}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor='primary'\n        textColor='primary'\n        variant='scrollable'\n        scrollButtons='auto'\n        aria-label='scrollable auto tabs example'\n        className={classes['header']}\n      >\n        {items.map((item, index) => (\n          <Tab\n            id={`${item.props.id}-control`}\n            key={`${item.props.label}-tab-label`}\n            className={classes['item']}\n            label={item.props.label}\n          />\n        ))}\n      </Tabs>\n\n      {items.map((item, index) => (\n        <TabPanel\n          id={item.props.id}\n          key={`${item.props.label}-tab-content`}\n          className={classes['panels']}\n          value={value}\n          index={index}\n        >\n          {item}\n        </TabPanel>\n      ))}\n    </div>\n  )\n}\n\nconst CustomTab = ({ children }) => {\n  return children\n}\nCustomTab.displayName = 'CustomTab'\n\nexport { CustomTabs, CustomTab }\n","import React from 'react'\n\n// Components\nimport TreeView from '@material-ui/lab/TreeView'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport TreeItem from '@material-ui/lab/TreeItem'\n\n// Styles\nimport classes from './SideBar.module.scss'\n\nexport default function SideBar (props) {\n  const { contractId, nodes = [], onItemClick } = props\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['contract-id']}>\n        <span>CONTRACT ID</span>\n        <span className={classes.id}>{contractId}</span>\n      </div>\n      <div className={classes['plan-types']}>\n        <TreeView defaultCollapseIcon={<ExpandMoreIcon />} defaultExpandIcon={<ChevronRightIcon />}>\n          {nodes.map(node =>\n            node.type === 'item' ? (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes.node}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n                onClick={() => onItemClick({ planPackage: node.planPackage, benefitCategory: node.benefitCategory })}\n              />\n            ) : (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes['benefit-label']}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n              >\n                {node.benefits &&\n                  Object.keys(node.benefits).map(key => (\n                    <TreeItem\n                      id={`node-coverages-${node.benefits[key].details.tree_id}-control`}\n                      key={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      className={classes.node}\n                      nodeId={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      label={node.benefits[key].details.name}\n                      onClick={() =>\n                        onItemClick({\n                          planPackage: node.planPackage,\n                          benefitCategory: node.benefits[key].details.code\n                        })\n                      }\n                    />\n                  ))}\n              </TreeItem>\n            )\n          )}\n        </TreeView>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport classes from './ValueField.module.scss'\nimport { Typography } from '@material-ui/core'\n\nexport default function ValueField (props) {\n  const { title = '', label = '', value = '' } = props\n\n  return (\n    <div className={`${classes.root}`}>\n      {title !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {title}\n        </Typography>\n      )}\n      {label !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n        </Typography>\n      )}\n      <Typography variant='subtitle2' className={classes.value}>\n        {value}\n      </Typography>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport ValueField from '../ValueField/ValueField'\n\nimport classes from './FloatingFields.module.scss'\n\nexport default function FloatingFields (props) {\n  // Variables\n  const { elements, node } = props\n  // Events\n\n  const [fields, setFields] = React.useState([])\n\n  React.useEffect(() => {\n    if (!elements) return\n    const values = elements.map(elem => ({ ...elem, value: elem.data(node) }))\n    setFields(values)\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        {fields.map(\n          field =>\n            field.value && (\n              <div key={field.id} className={classes[field.layout ? `w-${field.layout}` : 'w-100']}>\n                <ValueField\n                  key={`${field.id}`}\n                  id={field.id}\n                  title={field.title}\n                  label={field.label}\n                  value={field.value}\n                />\n              </div>\n            )\n        )}\n      </div>\n    </div>\n  )\n}\n","export default function (unit) {\n  if (!unit) return ''\n\n  switch (unit.toLowerCase()) {\n    case 'percentage':\n    case 'percent':\n      return '%'\n    case 'amount_limit':\n      return 'Amount Limit'\n    case 'max_session':\n      return 'Max Session'\n    case 'max_amount':\n      return 'Max Amount'\n    case 'percent_mbl':\n      return 'Percent of MBL'\n    case 'percent_abl':\n      return 'Percent of ABL'\n    case 'no_visits':\n      return 'No. of Visits'\n    default:\n      return unit\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  name: ({ nodes, details }) => details.name,\n  parent_name: ({ nodes, details }) => details.parent_name,\n  title: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.title', '-'),\n  limit_type: ({ nodes, details }) => details.limits.map(limit => limit.type).join('\\r\\n'),\n  age_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.age_limit', 0),\n  max_availee: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.max_availee', 0),\n  number: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.number', 0),\n  required: ({ nodes, details }) => DefaultValue(SafeAccess(details, 'custom_metadata.required') || false),\n  no_of_days: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_days', ''),\n  time_from: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_from', ''),\n  time_to: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_to', ''),\n  member_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.member_type', ''),\n  plan_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.plan_type', ''),\n  peso_limit_amt: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit_amt', ''),\n  no_of_members: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_members', 0),\n  peso_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit', ''),\n\n  // Arrays\n  payment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.payment', ''),\n  availment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.availment', ''),\n  limit: ({ nodes, details }) =>\n    details.limits\n      .map(limit => limit.limit && limit.limit_unit && `${DigitFormatter(limit.limit)} ${Unit(limit.limit_unit)}`)\n      .join('\\r\\n'),\n  rollover: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.rollover', '')),\n  refresh: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.refresh', '')),\n  eligible_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligible_availees', ''),\n  days_deployed: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.days_deployed', ''),\n  eligibility: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligibility', ''),\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true },\n    { id: 'rollover', name: 'Rollover', data: Functions.rollover, search: true },\n    { id: 'refresh', name: 'Refresh', data: Functions.refresh, search: true }\n  ],\n  // COVERAGE\n  EM: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  IP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'inner-limit-type',\n      name: 'Inner Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'inner-limit',\n      name: 'Inner Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'daily-inner-limit', name: 'Daily Inner Limit', data: Functions.empty, search: true }\n  ],\n  OP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'benefit', name: 'Benefit', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  PV: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  APE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum-age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  PPE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum_age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  SD: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true }\n  ],\n\n  // RIDERS\n  MT: [\n    { id: 'provision', name: 'Provision', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'availment-type', name: 'Availment Type', data: Functions.availment, search: true }\n  ],\n  OM: [\n    {\n      id: 'excluded-medicine',\n      name: 'Excluded Medicine',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    {\n      id: 'availment-type',\n      name: 'Availment Type',\n      data: Functions.availment,\n      search: true\n    }\n  ],\n  CC: [\n    {\n      id: 'personnel',\n      name: 'Personnel',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'no-of-days',\n      name: 'No. of Days',\n      data: Functions.number_of_days,\n      search: true\n    },\n    {\n      id: 'days-deployed',\n      name: 'Days Deployed',\n      data: Functions.days_deployed,\n      search: true\n    },\n    {\n      id: 'time-from',\n      name: 'Time From',\n      data: Functions.time_from,\n      search: true\n    },\n    {\n      id: 'time-to',\n      name: 'Time To',\n      data: Functions.time_to,\n      search: true\n    }\n  ],\n  DNT: [\n    {\n      id: 'category',\n      name: 'Category',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  SH: [\n    {\n      id: 'plan',\n      name: 'Plan',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    }\n  ],\n  ADD: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    },\n    {\n      id: 'plan-type',\n      name: 'Plan Type',\n      data: Functions.plan_type,\n      search: true\n    },\n    {\n      id: 'peso-limit-amount',\n      name: 'Peso Limit Amount',\n      data: Functions.peso_limit_amt,\n      search: true\n    }\n  ],\n  ECU: [\n    {\n      id: 'benefit',\n      name: 'Benefit',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'eligibility',\n      name: 'Eligibility',\n      data: Functions.eligibility,\n      search: true\n    },\n    {\n      id: 'no-of-members',\n      name: 'No. of Members',\n      data: Functions.no_of_members,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'peso-limit',\n      name: 'Peso Limit',\n      data: Functions.peso_limit,\n      search: true\n    }\n  ]\n}\n","export default function (value) {\n  switch (typeof value) {\n    case 'boolean':\n      return value ? 'Yes' : 'Optional'\n    case 'number':\n      return value\n    default:\n      return '--'\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  partner: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.dental_form_partner', '-'),\n  rate: ({ nodes, details }) => `${DigitFormatter(SafeAccess(details, 'custom_metadata.dental_form_rate', 0))} PHP`,\n  rb_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.type ? abl_mbl.type : ''\n  },\n  rb_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.limit ? `${DigitFormatter(abl_mbl.limit)} ${Unit(abl_mbl.limit_unit)}` : ''\n  },\n  rb_mode_of_payment: ({ nodes, details }) => {\n    const modeOfPayment = {\n      annual: 'Annual',\n      semiannual: 'Semi-Annual',\n      quarterly: 'Quarterly',\n      monthly: 'Monthly'\n    }\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return modeOfPayment[data.mode_of_payment] || ''\n  },\n  rb_pec_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    const units = {\n      PHP: 'Peso',\n      Months: 'Time-based'\n    }\n    return units[pec.limit_unit] || ''\n  },\n  rb_pec_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (!['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    return `${DigitFormatter(pec.limit)} ${pec.limit_unit}`\n  },\n  rb_pec_limit_specify: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    if (!pec.time_based_limit) return ''\n    const lines = pec.time_based_limit.map(\n      item => `After ${item.number_mount} ${item.day_based}: ${item.limit} ${Unit(item.limit_type)}`\n    )\n    return lines.join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'limit-type',\n      title: 'Limit Type',\n      label: '',\n      data: Functions.rb_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: '',\n      data: Functions.rb_limit,\n      layout: '30'\n    },\n    {\n      id: 'mode-of-payment',\n      title: 'Mode of Payment',\n      label: '',\n      data: Functions.rb_mode_of_payment,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit-type',\n      title: 'PEC Limit Type',\n      label: '',\n      data: Functions.rb_pec_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit',\n      title: 'PEC  Limit',\n      label: '',\n      data: Functions.rb_pec_limit,\n      layout: '30'\n    },\n    {\n      id: 'specify-limit',\n      title: 'Specify  Limit*',\n      label: '',\n      data: Functions.rb_pec_limit_specify,\n      layout: '30'\n    }\n  ],\n  // COVERAGE\n  EM: [],\n  IP: [],\n  OP: [],\n  PV: [],\n  APE: [],\n  PPE: [],\n  SD: [],\n\n  // RIDERS\n  MT: [],\n  OM: [],\n  CC: [],\n  DNT: [\n    {\n      id: 'partner',\n      title: 'Partner',\n      label: '',\n      data: Functions.partner,\n      layout: '50'\n    },\n    {\n      id: 'rate-person',\n      title: 'Rate/Person',\n      label: '',\n      data: Functions.rate,\n      layout: '50'\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  billing_arangement: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    const billingArrangement = {\n      premium: 'Imputed in premiums',\n      billback: 'Bill back with admin fee',\n      rider_fee: '1-time rider fee to be upon enrollment',\n      imputed_in_premiums: 'Imputed in premiums',\n      billback_net: 'Bill back, net of APE cost with admin fee',\n      fixed_rate_rider: 'Scheduled fixed rate for the entire rider',\n      fixed_rate_personnel: 'Scheduled fixed rate per personnel deployed',\n      soa_rate: 'Scheduled SOA based on fixed rate/hour/personnel deployed',\n      soa_actual_cost: 'Scheduled SOA based on actual cost of personnel deployed'\n    }\n    // CC\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   fixed_rate_rider: \"Scheduled fixed rate for the entire rider\",\n    //   fixed_rate_personnel: \"Scheduled fixed rate per personnel deployed\",\n    //   soa_rate: \"Scheduled SOA based on fixed rate/hour/personnel deployed\",\n    //   soa_actual_cost: \"Scheduled SOA based on actual cost of personnel deployed\",\n    //   rider_fee: \"1-time rider fee to be upon start of contract\",\n    // }\n    // ECU\n    // const billingArrangement = {\n    //   imputed_in_premiums: 'Imputed in premiums',\n    //   billback: 'Bill back with admin fee',\n    //   billback_net: 'Bill back, net of APE cost with admin fee',\n    //   rider_fee: '1-time rider fee to be upon enrollment'\n    // }\n    // MT\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   billback: \"Bill back with admin fee\",\n    //   rider_fee: \"1-time rider fee to be upon enrollment\"\n    // }\n    if (!data) return ''\n    if (!billingArrangement[data.billing_arangement]) return ''\n    return [\n      billingArrangement[data.billing_arangement],\n      data.billback_fee ? `${data.billback_fee} ${Unit(data.billback_type)}` : '',\n      data.rider_fee ? `${data.rider_fee} ${Unit(data.rider_fee_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  waiting_period: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data || !data.waiting_period_type) return ''\n    return [\n      data.waiting_period_type === 'effectivity' ? 'Waiting period after effectivity of member' : '',\n      data.waiting_period_type === 'date_of_hire' ? 'Waiting period after date of hire' : '',\n      data.waiting_period ? `${data.waiting_period} ${Unit(data.waitin_period_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  limit: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit ? `${data.limit} ${Unit(data.limit_unit)}` : ''\n  },\n  limit_for_all: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit_for_all ? `${data.limit_for_all} ${Unit(data.limit_for_all_unit)}` : ''\n  },\n  availment_per_year: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.availment_per_year ? `${DigitFormatter(data.availment_per_year)}` : ''\n  },\n  voluntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.voluntary_upgrading_type) return ''\n    switch (data.voluntary_upgrading_type) {\n      case 'paid_by_member':\n        return 'Room and Board difference is paid by the Member'\n      case 'first_hours_free':\n        return data.voluntary_upgrading_amount\n          ? `First ${data.voluntary_upgrading_amount} hours free`\n          : 'First 0 hour free'\n      case 'rate':\n        return data.voluntary_upgrading_amount ? `Rate: ${data.voluntary_upgrading_amount} %` : 'Rate: 0%'\n    }\n  },\n  involuntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.involuntary_upgrading_type) return ''\n    return [\n      data.except_suite_room && data.except_suite_room === true ? 'Except Suite Room' : '',\n      data.involuntary_upgrading_type === 'paid_by_member' ? 'Room and Board difference is paid by the Member' : '',\n      data.involuntary_upgrading_type === 'first_hours_free'\n        ? `First ${data.involuntary_upgrading_amount ? `${data.involuntary_upgrading_amount} hours` : '0 hour'} free`\n        : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'involuntary-room-upgrading',\n      title: 'Involuntary Room Upgrading',\n      label: '',\n      data: Functions.involuntary_upgrading_type\n    },\n    {\n      id: 'voluntary-room-upgrading',\n      title: 'Voluntary Room Upgrading',\n      label: '',\n      data: Functions.voluntary_upgrading_type\n    }\n  ],\n  // COVERAGE\n  EM: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  IP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  OP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  PV: [],\n  APE: [\n    {\n      id: 'mobile-ape',\n      title: 'Mobile APE',\n      label: 'Min no. of availees in a shift (8 hrs)',\n      data: Functions.mobile_ape_availees\n    }\n  ],\n  PPE: [],\n  SD: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    }\n  ],\n\n  // RIDERS\n  MT: [\n    {\n      id: 'availment-per-year',\n      title: 'Availment Per Year',\n      label: '',\n      data: Functions.availment_per_year\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  OM: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  CC: [\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  DNT: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import React from 'react'\n\n// Components\n\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport SideBar from './Components/SideBar/SideBar'\nimport FloatingFields from './Components/FloatingFields/FloatingFields'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Mapper\nimport BenefitTable from './Mapper/BenefitTable'\nimport BenefitHeaders from './Mapper/BenefitHeaders'\nimport BenefitFooters from './Mapper/BenefitFooters'\n\n// Styles\nimport classes from './Benefits.module.scss'\n\nexport default function Benefits (props) {\n  // Events\n\n  // Variables\n  const { isMember, member, client } = props\n\n  // Collections\n  const [columns, setColumns] = React.useState([])\n  const [rows, setRows] = React.useState([])\n\n  // Table Variables\n  const [table, setTable] = React.useState({\n    count: 0,\n    orderBy: 0,\n    order: 'asc',\n    limit: 5,\n    filters: { all: '', fields: {} },\n    page: 1,\n    rowsPerPageOptions: [5, 10, 15, 20]\n  })\n\n  // Local Variables\n  const [contractId, setContractId] = React.useState('')\n  const [planType, setPlanType] = React.useState('')\n  const [planPackage, setPlanPackage] = React.useState('')\n  const [benefitCategory, setBenefitCategory] = React.useState('')\n  const [lastRoomAndBoard, setLastRoomAndBoard] = React.useState('')\n\n  // Nodes\n  const [roomAndBoard, setRoomAndBoard] = React.useState({})\n  const [coverages, setCoverages] = React.useState({})\n  const [riders, setRiders] = React.useState({})\n\n  const [rootNode, setRootNode] = React.useState({})\n  const [benefitNode, setBenefitNode] = React.useState({})\n\n  const [headers, setHeaders] = React.useState([])\n  const [footers, setFooters] = React.useState([])\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      if (!member.latest_contract) return\n      let { plan_type } = member.info\n      const { MCT } = member.benefit_tree\n      plan_type = plan_type\n        .toUpperCase()\n        .split(' ')\n        .join('')\n\n      setContractId(member.latest_contract._id)\n      setPlanType(plan_type)\n      setRootNode(MCT)\n\n      const rnb = SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RB`, {})\n      setRoomAndBoard(rnb)\n      setCoverages(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.CV.nodes`, {}))\n      setRiders(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RI.nodes`, {}))\n\n      if (rnb.nodes) {\n        const _keys = Object.keys(rnb.nodes).sort()\n        const _name = _keys[_keys.length - 1]\n        setLastRoomAndBoard(_name)\n        setBenefitCategory(_name)\n      }\n      setPlanPackage('RB')\n    } else {\n    }\n  }, [isMember, member, client])\n\n  React.useEffect(() => {\n    if (planType === '' || planPackage === '' || benefitCategory === '') return\n    setBenefitNode(SafeAccess(rootNode, `nodes.CT.nodes.${planType}.nodes.${planPackage}.nodes.${benefitCategory}`, {}))\n  }, [rootNode, planType, planPackage, benefitCategory])\n\n  React.useEffect(() => {\n    if (!benefitNode) return\n    const _rows = getRows()\n    setRows(_rows)\n    setColumns(BenefitTable[planPackage === 'RB' ? 'RB' : benefitCategory] || [])\n    setTable(state => ({ ...state, count: _rows.length }))\n\n    setHeaders(getHeaders())\n    setFooters(getFooters())\n  }, [benefitNode])\n\n  const getRows = () => {\n    let _columns = BenefitTable[benefitCategory]\n    const { nodes } = benefitNode\n\n    let parent_keys = []\n    if (benefitCategory === lastRoomAndBoard) {\n      if (!benefitNode) return []\n\n      if (Object.keys(benefitNode).length <= 0) {\n        return []\n      }\n    } else if (lastRoomAndBoard === '') {\n      return []\n    } else {\n      if (!nodes) return []\n\n      if (Object.keys(nodes).length <= 0) return []\n\n      parent_keys = Object.keys(nodes).sort()\n    }\n\n    let _rows = []\n    switch (benefitCategory) {\n      case lastRoomAndBoard:\n        _columns = BenefitTable['RB']\n        _rows = [_columns.map(col => col.data(benefitNode))]\n        break\n      case 'EM':\n      case 'PV':\n      case 'SD':\n      case 'ADD':\n        _rows = parent_keys.map((key, index) => _columns.map(col => col.data(nodes[key])))\n        break\n      default:\n        _rows = parent_keys\n          .map((pkey, index) =>\n            Object.keys(nodes[pkey].nodes)\n              .sort()\n              .map(key => {\n                const sub_node = nodes[pkey].nodes[key]\n                sub_node.details.parent_name = nodes[pkey].details.name\n                return _columns.map(col => col.data(sub_node))\n              })\n          )\n          .reduce((acc, curr) => [...acc, ...curr], [])\n\n        break\n    }\n\n    return _rows\n  }\n\n  const renderRows = () => {\n    if (!rows) return\n    const { all, fields } = table.filters\n\n    let _rows = rows\n\n    const ascending = (a, b) => a[table.orderBy].length - b[table.orderBy].length\n\n    const descending = (a, b) => b[table.orderBy].length - a[table.orderBy].length\n\n    _rows = table.order === 'asc' ? rows.sort(ascending) : rows.sort(descending)\n\n    _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, all)).some(val => val))\n\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!fields[index]) return true\n            return includesAny(`${col}`, fields[index])\n          })\n          .some(val => val === false)\n    )\n\n    return _rows.slice((table.page - 1) * table.limit, table.page * table.limit).map((row, index) => (\n      <TableRow key={`limits-row-${index}`}>\n        {columns.map((col, index) => (\n          <TableCell key={`limits-row-${index}-column-${col.id}`}>{row[index]}</TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const getHeaders = () => {\n    if (planPackage === 'RB') return BenefitHeaders['RB']\n    return BenefitHeaders[benefitCategory]\n  }\n\n  const getFooters = () => {\n    if (planPackage === 'RB') return BenefitFooters['RB']\n    return BenefitFooters[benefitCategory]\n  }\n\n  const handleSidebarItemClick = args => {\n    const { planPackage, benefitCategory } = args\n    setPlanPackage(planPackage)\n    setBenefitCategory(benefitCategory)\n  }\n\n  const handleTableSort = ({ id, index }) => {\n    const order = table.order === 'asc' ? 'desc' : 'asc'\n    setTable(state => ({ ...state, orderBy: index, order }))\n  }\n\n  const handleTableFilter = ({ id, value, index }) => {\n    setTable(state => ({\n      ...table,\n      filters: { ...state.filters, fields: { ...state.filters.fields, [index]: value } }\n    }))\n  }\n\n  const handleOnChangeSearchBox = value => {\n    setTable(state => ({ ...table, filters: { ...state.filters, all: value } }))\n  }\n\n  const handleOnPaginate = args => {\n    setTable(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes['left-side']}>\n          <Typography className={classes.title}>Member Benefits</Typography>\n          <SideBar\n            contractId={contractId}\n            nodes={[\n              {\n                id: 'room_and_board',\n                label: 'Room and Board',\n                type: 'item',\n                planPackage: 'RB',\n                benefitCategory: lastRoomAndBoard\n              },\n              {\n                id: 'coverage',\n                label: 'Coverage',\n                type: 'list',\n                planPackage: 'CV',\n                benefits: coverages\n              },\n              {\n                id: 'riders',\n                label: 'Riders',\n                type: 'list',\n                planPackage: 'RI',\n                benefits: riders\n              }\n            ]}\n            onItemClick={handleSidebarItemClick}\n          />\n        </div>\n        <div className={classes['right-side']}>\n          <div className={classes.header}>\n            <FloatingFields elements={headers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n          {planPackage !== 'RB' && (\n            <div className={classes['table-header']}>\n              <div className={classes.search}>\n                <SearchTextComponent onChange={event => handleOnChangeSearchBox(event.target.value)} />\n              </div>\n              <div className={classes.contract}>\n                <span>Contract Type</span>\n                <span>---</span>\n              </div>\n            </div>\n          )}\n\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {columns.map((cell, index) => (\n                    <TableCell key={cell.data}>\n                      <TableSortLabel\n                        active={table.orderBy === cell.id || table.orderBy === index}\n                        direction={table.order === 'asc' ? 'asc' : 'desc'}\n                        onClick={event => handleTableSort({ id: cell.id, index })}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          id={`${cell.id}-input`}\n                          className={`${classes.search}`}\n                          onChange={event => handleTableFilter({ value: event.target.value, id: cell.id, index })}\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={renderRows()}\n              pagination\n              count={table.count}\n              page={table.page}\n              limit={table.limit}\n              rowsPerPageOptions={table.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n          <div className={classes.footer}>\n            <FloatingFields elements={footers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { setPaginate } from './Utils/pagination'\nimport { sort } from './Utils/sortBy'\nimport { onQuery } from './Utils/query'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './Exclusions.module.scss'\n\nlet columns = [\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Item', sortField: 'item_name', search: true }\n]\n\nexport default function Benefits (props) {\n  const { isMember, member, client } = props\n\n  const [selectedPlan, setSelectedPlan] = React.useState('BASE')\n  const [planTypes, setPlanTypes] = React.useState([])\n  const [rows, setRows] = React.useState([])\n  const [allExclusions, setAllExclusions] = React.useState([])\n  const [exclusionList, setExclusionList] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    count: 0,\n    page: 1,\n    limit: 5,\n    filter: {},\n    search: {},\n    plan_type: '',\n    rowsPerPageOptions: [5, 10, 15]\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      // getExclusions(member.benefit_tree)\n      const _rows = getExclusions2(member.benefit_tree)\n\n      setAllExclusions(_rows)\n      setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n      setRows(_rows.slice(0, exclusionList.limit))\n      handleOnSetItem(selectedPlan)\n    }\n  }, [member, isMember, client])\n\n  const getExclusions = nodes => {\n    const { MCT } = nodes\n    let arr_list = []\n\n    if (Object.keys(nodes).length) {\n      let plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n      let plan_type_keys = Object.keys(plan_types)\n\n      setPlanTypes(plan_type_keys)\n\n      for (const type of plan_type_keys) {\n        Object.keys(plan_types[type].nodes).forEach(i => {\n          if (i === 'EX') {\n            let child_node = Object.keys(plan_types[type].nodes[i].nodes)\n              .map(c => plan_types[type].nodes[i].nodes[c])\n              .filter(i => Object.keys(i.nodes).length)\n              .map(outer_node => {\n                if (Object.keys(outer_node.nodes).length) {\n                  return Object.values(outer_node.nodes)\n                    .filter(i => i.details.custom_metadata.is_excluded)\n                    .map(inner_node => ({\n                      item_name: inner_node.details.name,\n                      plan_type: type,\n                      type: outer_node.details.name,\n                      code: inner_node.details.code,\n                      parent_code: outer_node.details.code\n                    }))\n                }\n              })\n            arr_list = [].concat.apply([], child_node)\n          }\n        })\n      }\n    }\n    let _rows = arr_list.filter(benefit => benefit.plan_type === selectedPlan)\n\n    setAllExclusions(arr_list)\n    setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n    setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const getExclusions2 = nodes => {\n    const { MCT } = nodes\n    const plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n\n    const plan_types_keys = Object.keys(plan_types)\n    setPlanTypes(plan_types_keys)\n\n    let rows = []\n    plan_types_keys.forEach(planTypeKey => {\n      const ex_nodes = SafeAccess(plan_types, `${planTypeKey}.nodes.EX.nodes`, null)\n      if (ex_nodes) {\n        Object.keys(ex_nodes).map(exclusionKey => {\n          const inner_node = ex_nodes[exclusionKey]\n          Object.keys(inner_node.nodes).map(innerKey => {\n            const { details } = inner_node.nodes[innerKey]\n            if (details.custom_metadata.is_excluded) {\n              rows.push({\n                item_name: details.name,\n                plan_type: planTypeKey,\n                type: inner_node.details.name,\n                code: details.code,\n                parent_code: inner_node.details.code\n              })\n            }\n          })\n        })\n      }\n    })\n    return rows\n  }\n  // TODO will park this for now\n  // const handleOnSearchAll = args => {\n  //   const { search, page } = args\n\n  //   const queriedData = onQueryAll({\n  //     search: search.toLowerCase(),\n  //     data: allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n  //   })\n\n  //   setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n  //   setRows(queriedData.slice(0, exclusionList.limit))\n  // }\n  const handleOnSearch = args => {\n    const { search, page, range } = args\n    const _data = allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n\n    if (range !== 'all') {\n      exclusionList.filter[range] = search\n    } else {\n      exclusionList.search[range] = search\n    }\n\n    const queriedData = onQuery({ filter: exclusionList.filter, search: exclusionList.search, data: _data })\n\n    setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n    setRows(queriedData.slice(0, exclusionList.limit))\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: exclusionList })\n    setExclusionList(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const handleOnSetItem = item => {\n    let _rows = allExclusions.filter(benefit => benefit.plan_type === item)\n\n    setSelectedPlan(item)\n    setExclusionList(state => ({\n      ...state,\n      data: _rows,\n      count: _rows.length,\n      page: 1,\n      limit: state.rowsPerPageOptions[0]\n    }))\n    setRows(_rows.slice(0, exclusionList.rowsPerPageOptions[0]))\n\n    // TODO\n    // setExclusionList(state => ({ ...state, data: _rows, count: _rows.length, page: 1 }))\n    // setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const handleOnSort = args => {\n    const { data: sortedData } = sort({ data: rows, field: args.orderBy, direction: args.order })\n\n    setRows(sortedData.slice(0, exclusionList.limit))\n    setExclusionList(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header} />\n      <div className={classes.body}>\n        <div className={classes[`plan-types`]}>\n          {planTypes.map((item, index) => (\n            <Typography key={`plan-${index}`} className={classes.type}>\n              <Link onClick={() => handleOnSetItem(item)}>\n                <span>{item}</span>\n              </Link>\n            </Typography>\n          ))}\n        </div>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-exclusion'\n            onChange={e => {\n              const search = e.target.value\n              clearTimeout(debounce)\n              setDebounce(\n                setTimeout(() => {\n                  handleOnSearch({ search, page: 1, range: 'all' })\n                }, 500)\n              )\n            }}\n            placeholder='Search'\n          />\n        </div>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map(headCell => (\n                  <TableCell key={headCell.sortField}>\n                    <TableSortLabel\n                      active={exclusionList.orderBy === headCell.sortField}\n                      direction={exclusionList.order ? 'asc' : 'desc'}\n                      onClick={event => handleOnSort({ orderBy: headCell.sortField, order: !exclusionList.order })}\n                    >\n                      {headCell.name}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <TextField\n                        id={`${headCell.sortField}-input`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={e => {\n                          const search = e.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearch({ search, page: 1, range: headCell.sortField })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              rows.length ? (\n                rows.map((row, index) => (\n                  <TableRow id={`exlusions-tab-row-${index}`} key={`ex-${index}`}>\n                    <TableCell id={`exlusions-tab-row-item-${index}-type`}>{row.type}</TableCell>\n                    <TableCell id={`exlusions-tab-row-item-${index}-name`}>{row.item_name}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={2}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={exclusionList.count}\n            page={exclusionList.page}\n            limit={exclusionList.limit}\n            rowsPerPageOptions={exclusionList.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const onQuery = args => {\n  const { filter, search, data } = args\n  let mutable_data = []\n\n  if (search.all) {\n    const _search = search.all.toLowerCase()\n    mutable_data = data.filter(\n      i => i.item_name.toLowerCase().includes(_search) || i.type.toLowerCase().includes(_search)\n    )\n  } else {\n    mutable_data = data\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const fields = Object.keys(filter)\n    fields.forEach((field, index) => {\n      const search = filter[field].toLowerCase()\n\n      if (index === 0) {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      } else {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      }\n    })\n  }\n\n  return mutable_data\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import lodash from 'lodash'\n\nexport const sort = args => {\n  return { data: lodash.orderBy(args.data, [args.field], [args.direction ? 'asc' : 'desc']) }\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Typography from '@material-ui/core/Typography'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n\n// Styles\nimport classes from './PartnerNetwork.module.scss'\n\nconst headCells = [\n  { name: 'Code', sortField: 'code', search: true, match: 'start' },\n  { name: 'Name', sortField: 'name', search: true, match: 'any' },\n  { name: 'Location', sortField: 'location', search: true, match: 'any' },\n  { name: '', sortField: 'affiliated_doctors', search: false }\n]\n\nconst headCellsDoctors = [\n  { name: 'Medical Partner ID', sortField: 'id', search: true, match: 'start' },\n  { name: 'Doctor Name', sortField: 'name', search: true, match: 'any' },\n  { name: 'Specialization', sortField: 'specialization', search: true, match: 'any' },\n  { name: 'Schedule', sortField: 'schedule', search: true, match: 'any' },\n  { name: 'Remarks', sortField: 'remarks', search: false, match: 'any' }\n]\n\nexport default function PartnerNetwork (props) {\n  const { partnerService, doctorService, memberAccountNumber } = props\n  // const [partnerId, setPartnerId] = React.useState('')\n  // const [partnerName, setPartnerName] = React.useState('')\n  // const [partnerLocation, setPartnerLocation] = React.useState('')\n\n  const [partners, setPartners] = React.useState({\n    data: [],\n    category: 'all',\n    search: '',\n    count: 0,\n    page: 1,\n    limit: 10,\n    filter: {},\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [doctors, setDoctors] = React.useState({\n    show: false,\n    facility_id: '',\n    search: '',\n    data: [],\n    filtered: [],\n    filter: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const fetchPartner = args => {\n    partnerService({\n      member_account_no: memberAccountNumber,\n      params: {\n        search: args.search,\n        sort: `${args.orderBy}|${args.order ? 'asc' : 'desc'}`,\n        page: args.page,\n        filter: args.filter,\n        limit: args.limit\n      }\n    }).then(res => {\n      const { results, count, limit, page } = res.data.data\n      setPartners(state => ({\n        ...state,\n        data: results,\n        count,\n        page,\n        limit\n      }))\n    })\n  }\n\n  const fetchDoctors = args => {\n    console.log(args)\n    doctorService({\n      member_account_no: memberAccountNumber,\n      params: {\n        limit: args.limit,\n        page: args.page,\n        filter: args.filter,\n        sort: `${args.orderBy}|${args.order ? 'asc' : 'desc'}`,\n        search: args.search\n      },\n      facility_id: args.facility_id\n    }).then(res => {\n      const { results, count, limit, page } = res.data.data\n      console.log(results)\n      setDoctors(state => ({\n        ...state,\n        show: true,\n        data: results,\n        count,\n        limit,\n        page\n        // filtered: data.results,\n        // filters\n      }))\n    })\n  }\n\n  const onQueryColumn = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        ...partners,\n        ...params\n      }\n\n      fetchPartner(_params)\n    } else {\n      const _params = {\n        ...doctors,\n        ...params\n      }\n\n      fetchDoctors(_params)\n    }\n  }\n\n  const onQueryAll = params => {\n    const _params = {\n      ...partners,\n      ...params\n    }\n\n    fetchPartner(_params)\n  }\n\n  const handleOnPaginate = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        ...partners,\n        ...params\n      }\n\n      setPartners(state => ({ ...state, ...params }))\n      fetchPartner(_params)\n    } else {\n      const _params = {\n        ...doctors,\n        ...params\n      }\n\n      setDoctors(state => ({ ...state, ...params }))\n      fetchDoctors(_params)\n    }\n  }\n\n  const handleOnClickAffiliated = params => {\n    const _params = {\n      ...doctors,\n      ...params\n    }\n\n    setDoctors(state => ({ ...state, facility_id: params.facility_id }))\n    fetchDoctors(_params)\n  }\n\n  React.useEffect(() => {\n    if (memberAccountNumber) fetchPartner(partners)\n  }, [memberAccountNumber])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-partner'\n            //  onChange={event => queryColumn('partners', { search: event.target.value, field: 'any' })}\n            onChange={event => {\n              const search = event.target.value\n              clearTimeout(debounce)\n              setDebounce(\n                setTimeout(() => {\n                  onQueryAll({ search, page: 1 })\n                  setPartners(state => ({ ...state, search }))\n                }, 500)\n              )\n            }}\n            placeholder='Search for Partner Network Code, Name, and Location'\n          />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={partners.orderBy === headCell.sortField}\n                    direction={partners.order ? 'asc' : 'desc'}\n                    // onClick={hanleOnPaginate('partners', headCell.sortField)}\n                    onClick={() => handleOnPaginate('partners', { orderBy: headCell.sortField, order: !partners.order })\n                    }\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  {headCell.search && (\n                    <TextField\n                      id={`pn-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            setPartners(p => ({ ...p, filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                            onQueryColumn('partners', { filter: { ...partners.filter, [headCell.sortField]: { value: search, match: headCell.match } }, page: 1 })\n                          }, 500)\n                        )\n                      }\n                      }\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={partners.data.map((row, index) => (\n            <TableRow id={`pn-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n              <TableCell id={`pn-code-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.code}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-name-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.name}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-location-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.location}</span>\n                </div>\n              </TableCell>\n\n              <TableCell id={`pn-view-link-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    <Typography\n                      id={`pn-view-link-${index}-control`}\n                      variant='caption'\n                      className={`text-link `}\n                      onClick={() => handleOnClickAffiliated({ facility_id: row.code })}\n                      // onChange={() => {}}\n                    >\n                      View Affiliated Doctors\n                    </Typography>\n                  </span>\n                </div>\n              </TableCell>\n            </TableRow>\n          ))}\n          pagination\n          count={partners.count}\n          page={partners.page}\n          limit={partners.limit}\n          rowsPerPageOptions={partners.rowsPerPageOptions}\n          onChange={args => handleOnPaginate('partners', args)}\n        />\n      </div>\n\n      <Dialog\n        fullWidth\n        maxWidth='md'\n        onClose={() => setDoctors(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={doctors.show}\n        className={classes.doctors}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Affiliated Doctors\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDoctors(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCellsDoctors.map(cell => (\n                    <TableCell key={cell.sortField}>\n                      <TableSortLabel\n                        active={doctors.orderBy === cell.sortField}\n                        direction={doctors.order ? 'asc' : 'desc'}\n                        // onClick={handleOnSort('doctors', cell.sortField)}\n                        onClick={() => handleOnPaginate('doctors', { orderBy: cell.sortField, order: !doctors.order })}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          className={`${classes.search}`}\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                setDoctors(p => ({ ...p, filter: { ...p.filter, [cell.sortField]: { value: search, match: cell.match } } }))\n                                onQueryColumn('doctors', { filter: { ...doctors.filter, [cell.sortField]: { value: search, match: cell.match } }, page: 1 })\n                              }, 500)\n                            )\n                          }\n                          }\n                          // onChange={event => {}}\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                doctors.data.length <= 0 ? (\n                  <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                    <TableCell id={`no-record`} colSpan={5}>\n                      <div className={`${classes.cell} ${classes.center}`}>\n                        <span>No Records</span>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  doctors.data.map((row, index) => (\n                    <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n                      <TableCell id={`doctor-id-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.id}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-name-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.name}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-specialization-${index}`}>\n                        <div className={classes.cell}>\n                          <span>\n                            {row.specialization}\n                          </span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-schedule-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.schedule}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-remarks-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.remarks}</span>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )\n              }\n              pagination\n              count={doctors.count}\n              page={doctors.page}\n              limit={doctors.limit}\n              rowsPerPageOptions={doctors.rowsPerPageOptions}\n              onChange={args => handleOnPaginate('doctors', args)}\n            />\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Component\nimport { PdfView2Component } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Utilities\nimport { NameFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Contract.module.scss'\n\nexport default function Contract (props) {\n  // Service\n  const { getMemberContract, getClientContract } = props\n  // Variables\n  const { isMember, member, client } = props\n\n  const [fileName, setFileName] = React.useState('')\n  const [title, setTitle] = React.useState('')\n  const [service, setService] = React.useState(null)\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      const mct_id = member.benefit_tree.MCT.details._id\n      setService(getMemberContract({ mct_id }))\n      setFileName(`${NameFormatter(member.info).format2} Contract`)\n      setTitle('Member Contract')\n    } else {\n      if (!client) return\n      const mct_id = client.benefit_tree.MCT.details._id\n      setService(getClientContract({ mct_id }))\n      setFileName(`${client.info.brand_name} Contract`)\n      setTitle('Client Contract')\n    }\n  }, [isMember, member, client])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes.pdf}>\n          <PdfView2Component\n            name={title}\n            fileName={fileName}\n            initialPageNumber={1}\n            initialScale={1}\n            service={service}\n            enabled\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Button, Typography } from '@material-ui/core'\n\n// Components\nimport ChatBox from '../ChatBox/ChatBox'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { CustomTabs, CustomTab } from 'SharedComponents/CustomTabs/CustomTabs'\n\n// Compare Tabs\nimport Benefits from '../Benefits/Benefits'\nimport Exclusions from '../Exclusions/Exclusions'\nimport PartnerNetwork from '../PartnerNetwork/PartnerNetwork'\nimport Utilization from '../Utilization/Utilization'\nimport Contract from '../Contract/Contract'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Styles\nimport classes from './RightPanelTabs.module.scss'\n\nexport default function RightPanelTabs (props) {\n  // Events\n  const { onReturnEscalate, onReturnInquire = () => {} } = props\n  // Variables\n  const { claim, permissions, isMember, member, memberFetchStatus, client, clientFetchStatus, utilizationLoa } = props\n  // Services\n  const { getUtilizations, getPartners, getDoctors, getMemberContract, getClientContract } = props\n\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  return (\n    <CustomTabs id='medical-partner-tabs' defaultIndex={0}>\n      {SafeAccess(permissions, ['tabs', 'benefits', 'read']) && (\n        <CustomTab id='benefits-tab' label='BENEFITS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Benefits isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'exclusions', 'read']) && (\n        <CustomTab id='exclusions-tab' label='EXCLUSIONS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Exclusions isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'partner', 'read']) && (\n        <CustomTab id='partner-network-tab' label='PARTNER NETWORK'>\n          <PartnerNetwork\n            partnerService={getPartners}\n            doctorService={getDoctors}\n            memberAccountNumber={claim.member_account_number || '-'}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'utilization', 'read']) && (\n        <CustomTab id='utilization-tab' label='UTILIZATION'>\n          <Utilization\n            fetchService={getUtilizations}\n            utilizationLoa={utilizationLoa}\n            isMember={isMember}\n            member={member}\n            client={client}\n            diagnosis={claim.diagnosis || []}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'communication', 'read']) && (\n        <CustomTab id='communication-tab' label='COMMUNICATION'>\n          <ChatBox\n            messages={inquiries.messages}\n            title='Communication Logs'\n            onSubmitComment={comment => onReturnInquire({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.communication}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'contact', 'read']) && (\n        <CustomTab id='contract-tab' label='CONTRACT'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Contract\n              isMember={isMember}\n              member={member}\n              client={client}\n              getMemberContract={getMemberContract}\n              getClientContract={getClientContract}\n            />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'comments', 'read']) && (\n        <CustomTab id='comment-tab' label='COMMENTS'>\n          <ChatBox\n            messages={escalations.messages}\n            title='Escalation Logs'\n            onSubmitComment={comment => onReturnEscalate({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.comments}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'notes', 'read']) && (\n        <CustomTab id='notes-tab' label='NOTES'>\n          <ChatBox messages={recon.messages} permissions={permissions.tabs.notes} />\n        </CustomTab>\n      )}\n    </CustomTabs>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data, permissions, onChange } = props\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data || ''}\n          readOnly={permissions}\n          onChange={onChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .required(),\n\n    // TODO Claim Source here\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Name')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n      .required(),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .required(),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .allow('', null),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      contract_plan_type: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      diagnosis: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n          text: item.type,\n          value: item.type,\n          rate: item.rate\n        }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.desc,\n      rate: item.rate || 0\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n  console.log('inpatient', error)\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Date Admitted'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Date Discharged'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_type\n                    }}\n                  >\n                    <DropDown\n                      id='room-type'\n                      required\n                      label='Room Type'\n                      items={dropDown.rooms}\n                      value={claim.room_type}\n                      onChange={handleOnChangeRoomType}\n                      error={error.room_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-rate'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_rate\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='room-rate'\n                      required\n                      label='Room Rate'\n                      value={claim.room_rate}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'room_rate'\n                          })\n                        )\n                      }}\n                      error={error.room_rate}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          department: data.department,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-department'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.department\n                    }}\n                  >\n                    <TextField\n                      id='department'\n                      label='Department'\n                      value={claim.department}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'department'\n                          })\n                        )\n                      }\n                      error={error.department}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={suggestions.anesthesiologist.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          recommendation: data.recommendation,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-facility-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-facility-id'\n                      required\n                      label='Medical Facility ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-recommendation'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.recommendation\n                    }}\n                  >\n                    <TextField\n                      id='recommendation'\n                      label='Recommendation'\n                      value={claim.recommendation}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'recommendation'\n                          })\n                        )\n                      }\n                      error={error.recommendation}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={[]}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro, onChangeDoctor } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_name: data.doctor.name,\n          doctor_id: data.doctor.id,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          medicine_category: data.medicine_category,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                showCompany\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      required\n                      error={error.medicine_category}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doValidate={doValidateAll}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ContractRange.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nexport default function ContractRange (props) {\n  const {\n    contract_year_from,\n    contract_year_to,\n    suggestions,\n    error,\n    required,\n    // disableControls = false,\n    onChange = () => {},\n    readOnly = false,\n    hasDiscrepancy = false\n  } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (!(contract_year_from || contract_year_to)) {\n      setError(error)\n    }\n  }, [error, contract_year_from, contract_year_to])\n\n  const handleOnItemClick = ({ event, item }) => {\n    onChange(item)\n    setTimeout(() => setFocus(false), 10)\n  }\n  return (\n    <div className={classes['root']}>\n      <div\n        className={`${classes.container} ${_error ? classes['has-error'] : focus && classes.focus} box-shadow-field`}\n        tabIndex={0}\n        onFocus={() => setFocus(true)}\n        onClick={() => setFocus(true)}\n        onBlur={() => setFocus(false)}\n      >\n        <div className={classes.label}>\n          <Typography variant='subtitle2'>{`${!readOnly && required ? '* ' : ''}Contract Year:`}</Typography>\n        </div>\n\n        <div className={classes['values']}>\n          <Typography variant={hasDiscrepancy ? 'subtitle2' : 'subtitle1'}>\n            <span>From: </span>\n            {contract_year_from ? DateFormatter(contract_year_from) : '----------'} <span>To: </span>\n            {contract_year_to ? DateFormatter(contract_year_to) : '----------'}\n          </Typography>\n        </div>\n\n        {!readOnly && focus && (\n          <Paper className={`${classes.suggestions} ${error && classes['add-margin']}`} square>\n            <div className={classes.header}>\n              <Typography variant='subtitle2'>Member Contract Period</Typography>\n            </div>\n\n            <div className={classes['values-container']}>\n              <div className={classes.message}>\n                <Typography variant='body2'>Please select contract period for this claim</Typography>\n              </div>\n\n              <div className={classes.list}>\n                {suggestions.map((item, index) => (\n                  <div key={index} className={classes.item} onClick={event => handleOnItemClick({ event, item })}>\n                    {DateFormatter(item.from)} To {DateFormatter(item.to)}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </Paper>\n        )}\n\n        {_error && <span className={classes.error}>\"Contract Year\" is required.</span>}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <path\n          className={classes.crown}\n          d='M256.5,66.8c0,0,13.6,48.5,11.2,91.9c-2.5,43.4-8.7,93.1-11.2,103c-2.5,9.9-14.9,33.5-11.2,40.9s1.2,24.8,5,34.7c3.7,9.9,0,37.9,0,46.2s-6.2,24.5-12.4,24.5c-6.2,0-21.8-1.2-28.5,0c-6.7,1.2-29.8-2.5-39.7,0c-9.9,2.5-40.9,12.4-38.5-5s-6.2-22.3,5-47.2c11.2-24.8,26.1-54.6,29.8-59.6c3.7-5,12.4-2.5,17.4-19.9c5-17.4,12.6-67,19.3-80.7c6.7-13.6,21.6-62,24.1-72c2.5-9.9,11.2-42.2,14.9-47.2C245.3,71.9,254.9,60.9,256.5,66.8z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M245.3,302.7c-3.7-7.4,8.7-31,11.2-40.9c2.5-9.9,8.7-59.6,11.2-103c2.5-43.4-11.2-91.9-11.2-91.9c-1.5-5.9-11.2,5.1-14.9,10c-3.7,5-12.4,37.2-14.9,47.2c-2.5,9.9-17.4,58.3-24.1,72c-6.7,13.6-14.4,63.3-19.3,80.7c-5,17.4-13.6,14.9-17.4,19.9c-1.7,2.2-5.5,9.4-10.3,18.8c10.9,2.2,80.1,15.2,95.6,25.7c-0.2-1.3-0.5-2.5-0.9-3.5C246.5,327.5,249,310.1,245.3,302.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <path\n          className={classes.crown}\n          d='M297.4,405.6c0,0-19.9-6.2-7.4-31c12.4-24.8,21.1-40.9,27.3-57.1c6.2-16.1,3.7-37.2,12.4-50.9c8.7-13.6,27.3-65.8,29.8-85.6c2.5-19.9,14.9-91.8,22.3-96.8c7.4-5,16.1,9.9,17.4,17.4c1.2,7.4,1.2,69.5,0,75.7c-1.2,6.2-5,67-6.2,79.4c-1.2,12.4-9.9,39.7-9.9,49.6c0,9.9,1.2,33.5,1.2,45.9c0,12.4-1.2,39.7-8.7,45.9c-7.4,6.2-10.6,7.4-32.6,7.4C321,405.6,297.4,405.6,297.4,405.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M393,256.7c1.2-12.4,5-73.2,6.2-79.4c1.2-6.2,1.2-68.2,0-75.7c-1.2-7.4-9.9-22.3-17.4-17.4c-7.4,5-19.9,76.9-22.3,96.8c-2.5,19.9-21.1,72-29.8,85.6c-8.7,13.6-6.2,34.7-12.4,50.9c-3.4,8.9-7.6,17.9-12.8,28.3c7.1-6.1,14.5-11.8,22.8-16.1c15.5-7.8,36.3-9,48.5,3.3c3.1,3.1,5.7,7.1,8.3,10.9c-0.3-12.7-1.1-29.6-1.1-37.6C383,296.4,391.7,269.1,393,256.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor3 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.1712341308594)'>\n        <path\n          className={classes.crown}\n          d='M239.7,459c4.1,11.8,5.9,37.2,5.9,43.1c0,5.9,1.8,29,0,35.5c-1.8,6.5-8.3,15.4-7.1,21.3c1.2,5.9,3,30.9,2.4,32.6c-0.6,1.7,0,20.6,1.2,25.3c1.2,4.7,8.3,50.2,10,55.6c1.8,5.3,8.3,34.9,8.3,36.6c0,1.8-2.4,8.3-8.9,7.1c-6.5-1.2-17.7-11.8-18.6-16c-0.9-4.1-18-38.4-21-45.5c-3-7.1-8.3-24.2-12.4-40.2c-4.1-16-11.2-42-11.2-43.7c0-1.8,2.4-13.6-5.9-27.2c-8.3-13.6-16.5-37.2-17.1-39.6c-0.6-2.4-3.5-26-3.5-33.7c0-7.7-2.4-17,5.9-18C175.8,451.3,235.5,447.2,239.7,459z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.2712097167969)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M188.2,570.7c0,1.8,7.1,27.8,11.2,43.7c4.1,16,9.5,33.1,12.4,40.2c3,7.1,20.1,41.4,21,45.5c0.9,4.1,12.1,14.8,18.6,16c6.5,1.2,8.9-5.3,8.9-7.1s-6.5-31.3-8.3-36.6c-1.8-5.3-8.9-50.8-10-55.6c-1.2-4.7-1.8-23.6-1.2-25.3c0.6-1.7-1.2-26.7-2.4-32.6c-1.1-5.5,4.4-13.5,6.6-19.8c-16.2,9.5-37.6,9.9-54,0.6c-4.9-2.8-10-6.5-15.2-8.3c2,4.4,4.2,8.7,6.4,12.2C190.6,557.1,188.2,569,188.2,570.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor4 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.1224517822266)'>\n        <path\n          className={classes.crown}\n          d='M279.9,455.5c-0.6,5.3-4.7,6.5-3.5,16.5c1.2,10,3,33.1,6.5,38.4c3.5,5.3,8.8,23.6,13.6,40.2c4.7,16.5,13,41.4,15.4,56.2c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c3.5-2.4,7.1-19.5,7.1-29.6s-1.8-39.6-2.4-42c-0.6-2.4-1.2-18.3-7.7-18.3C343.7,454.9,280.5,450.2,279.9,455.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.2224884033203)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M311.8,606.8c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c1.9-1.3,3.8-6.7,5.1-12.9c-5.7,7.2-11.9,13.7-20.1,15.3c-20,3.8-33.6-23.8-51.9-29.2c3.1,8.2,6.8,21,10.2,32.8C301.1,567.2,309.4,592,311.8,606.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <path\n          className={classes.crown}\n          d='M455,426.7c-2.5-3.7-22.3-25-31-37.3s2.5-50.8,8.7-60.7c6.2-9.9,19.9-22.3,22.3-31c2.5-8.7,6.2-39.7,8.7-44.7c2.5-5,7.4-37,7.4-46.4c0-9.4,6.2-72.7,16.1-87.6c9.9-14.9,21.1-29.7,23.6-40.9c2.5-11.3,6.2-32.3,12.4-27.3c6.2,5,12.4,3.5,12.4,16s-1.2,33.6,0,49.7c1.2,16.1,0,67,0,73.2s2.3,35,0.6,54.7c-1.8,19.7-9.2,32.1-9.2,44.5s-6.2,27.3,0,39.7c6.2,12.4,9.9,39.7,9.9,50.9c0,11.2-3.7,14.9-11.2,19.9c-7.4,5-16.1,0-22.3,6.2c-6.2,6.2-27.3,17.4-29.8,21.1C471.1,430.5,455,426.7,455,426.7z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M527,289c0-12.4,7.4-24.8,9.2-44.5c1.8-19.7-0.6-48.5-0.6-54.7s1.2-57.1,0-73.2c-1.2-16.1,0-37.2,0-49.7c0-12.5-6.2-11.1-12.4-16c-6.2-5-9.9,16-12.4,27.3c-2.5,11.3-13.6,26.1-23.6,40.9c-9.9,14.9-16.1,78.2-16.1,87.6c0,9.4-5,41.4-7.4,46.4c-2.5,5-6.2,36-8.7,44.7c-2.4,8.3-14.9,19.9-21.4,29.6c11.8-15,29.5-25.3,48.5-28c9.2-1.3,19.2-0.7,26.6,4.9c12.2,9.3,13.2,28.8,23.3,39.4c-1.4-5.8-3.1-11-5-14.9C520.8,316.3,527,301.4,527,289z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.4396057128906)'>\n        <path\n          className={classes.crown}\n          d='M446,430.6c0,0,7.9,14.3,14.3,17.8c6.4,3.5,24.7,12.4,27.7,20.7c3,8.3,1.8,34.3,0,46.7c-1.8,12.4-11.2,31.3-12.4,39c-1.2,7.7-6.5,57.9,0,70.9c6.5,13,6.5,31.3,8.3,49.1c1.8,17.7,8.3,69.4,5.9,72.1c-2.4,2.7-14.8,14.3-21.6,2.7c-6.8-11.6-14.5-45.3-18-50.6c-3.5-5.3-24.8-46.1-26-53.2c-1.2-7.1-16.5-95.2-20.7-99.3c-4.1-4.1-11.8-33.7-13.6-52.6c-1.8-18.9-1.2-29.6,4.7-35.5c5.9-5.9,26-21.3,27.8-23.6c1.8-2.4,15.7-5.6,15.7-5.6S443.6,426.6,446,430.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.5395812988281)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M424.1,645.8c1.2,7.1,22.5,47.9,26,53.2c3.5,5.3,11.2,39,18,50.6c6.8,11.6,19.2,0,21.6-2.7c2.4-2.7-4.2-54.4-5.9-72.1c-1.8-17.7-1.8-36.1-8.3-49.1c-6.5-13-1.2-63.2,0-70.9c1-6.6,8.2-21.6,11.3-33.5c-3.8,3.2-7,7.3-10.9,10.6c-21,17.6-53.5,4.3-73.9-14c-3-2.7-6.1-5.6-9.7-7.3c3.1,16.2,8.1,32.9,11.1,36C407.5,550.6,422.9,638.7,424.1,645.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.0228881835938)'>\n        <path\n          className={classes.crown}\n          d='M700.7,708.5c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c5.6-2.4,14.5-16,14.5-29c0-13-5.9-41.4-13-46.1c-7.1-4.7-30.1-3.5-37.2,0c-7.1,3.5-11.2,8.9-19.5,4.1c-8.3-4.7-17.1-20.8-34.3-17.5c-17.1,3.3-17.1,5.1-23.1,9.8c-5.9,4.7-14.2,8.9-21.3,9.5c-7.1,0.6-26.6,0-27.2,4.1c-0.6,4.1-3,7.7-3,18.9c0,11.2-1.2,18.9,0,27.2c1.2,8.3,5.9,27.2,10,31.9c4.1,4.7,11.2,13,11.2,20.7c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7s13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7C685.9,710.8,698.9,714.5,700.7,708.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.1229248046875)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M559.4,561.3c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7c9.5,0,13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7c1.2,4.7,14.2,8.4,16,2.4c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c3.2-1.3,7.3-6.2,10.4-12.5c-17.3-1-31.9,11.9-46.7,21c-38.6,23.8-80.4,14.6-117.8-10.9c-2.1-1.4-4.6-2.8-7.2-4c2,7.9,4.8,16.4,7.4,19.3C552.3,545.3,559.4,553.6,559.4,561.3z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 814.9726867675781)'>\n        <path\n          className={classes.crown}\n          d='M832.9,453.6c0,0-7.1-13.6-17.7-9.5c-10.6,4.1-23.6,2.8-27.8,4.3c-4.1,1.6-14.8,4.5-14.2,12.2c0.6,7.7-4.2,23.6,0,35.5c4.2,11.8,11.3,34.9,18.3,40.8c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c7.1-5.3,21.4-24.2,19.9-46.7c-1.6-22.5-3.3-41.4-7.5-45.5c-4.1-4.1-17.1-3-20.1,0c-3,3-14.8,7.1-16,4.1c-1.2-3-20.1-18.3-25.4-15.4c-5.3,3-21.3,3.5-28.4,8.9C851.2,442.9,832.9,453.6,832.9,453.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 815.0726623535156)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M791.5,536.9c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c3.3-2.5,8.2-7.9,12.3-15.3c-7.5-0.5-15.3,0.3-22.8,1.1c-42.2,4.5-84.4,9.1-126.6,13.6c-6.7,0.7-9.8-0.1-12.2-1.7C788.1,533,789.8,535.5,791.5,536.9z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <path\n          className={classes.crown}\n          d='M667.2,244.5c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4s22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-6.2,6.2-16.1,27.3-17.4,34.7c-1.2,7.4-11.4,42.9-6.3,51.2c5.1,8.3,11.3,10.8,21.2,17c9.9,6.2,23.6,17.6,29.8,12.5c6.2-5.1,37.2-18.7,43.4-17.5c6.2,1.2,24.8,5,28.5,9.9c3.7,5,14.9,5,24.8,0c9.9-5,16.1-6.8,17.4-22c1.2-15.2,3.7-47.5,0-54.9c-3.7-7.4-18.6-22.3-14.9-31c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7c0-18.6-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64C678.3,210.8,671.1,249.8,667.2,244.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M742.9,297.7c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7s-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64c1,4.2-6.3,43.1-10.2,37.8c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4c6.3,11.1,22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-2.4,2.4-5.3,7-8.1,12.1c17.6-9.8,38.4-14,58.6-12.6c26.6,1.8,52.2,12.7,73.9,28.3c6,4.3,11.9,9,18.8,11.7c-0.3-3.8-0.8-6.8-1.7-8.5C754,321.3,739.1,306.4,742.9,297.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar2 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <path\n          className={classes.crown}\n          d='M863.6,231.4c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-6.6,8.3-21.5,33.6-21,43.6c0.6,9.9-6.1,35.3,0,39.7c6.1,4.4,12.7,4.4,17.7,5c5,0.6,8.3,5,11,5c2.8,0,43.6-22.6,48.5-22.1c5,0.6,18.2,10.5,25.4,12.1c7.2,1.7,27.6,5,37.5,0c9.9-5,14.9-11,16-33.1c1.1-22.1-4.4-48.5-8.3-51.8c-3.9-3.3-7.7-3.3-11-14.9c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2s-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5C869.1,223.2,865,236.5,863.6,231.4z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M946.3,292.1c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2c-4.4-3.9-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5c-1.7,5-5.7,18.4-7.2,13.2c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-1.9,2.3-4.4,6-7,10.3c5.1-2.9,10.2-5.7,15.3-8c20-9,42.5-10.4,64.3-11.6c19.1-1.1,40.2-1.5,55.5,9.4c-0.4-0.8-0.8-1.4-1.2-1.8C953.5,303.7,949.6,303.7,946.3,292.1z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\nimport Incisor1 from './Incisor/1'\nimport Incisor2 from './Incisor/2'\nimport Incisor3 from './Incisor/3'\nimport Incisor4 from './Incisor/4'\nimport Canine1 from './Canine/1'\nimport Canine2 from './Canine/2'\nimport Premolar1 from './Premolar/1'\nimport Premolar2 from './Premolar/2'\nimport Molar1 from './Molar/1'\nimport Molar2 from './Molar/2'\n\nimport classes from './style.module.scss'\n\nexport default function TeethFactory (props) {\n  const { type, index, transform = {}, state = [] } = props\n\n  return (\n    <div className={classes.root}>\n      {transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <div className={classes.circle} />\n            <span>{index + 1}</span>\n          </div>\n        </React.Fragment>\n      )}\n\n      <div\n        className={`${classes.teeth} ${classes[state]}  ${transform.flipX && classes['flip-x']} ${transform.flipY &&\n          classes['flip-y']}`}\n      >\n        <React.Fragment>\n          {type === 'Incisor1' && <Incisor1 state={state} />}\n          {type === 'Incisor2' && <Incisor2 state={state} />}\n          {type === 'Incisor3' && <Incisor3 state={state} />}\n          {type === 'Incisor4' && <Incisor4 state={state} />}\n\n          {type === 'Canine1' && <Canine1 state={state} />}\n          {type === 'Canine2' && <Canine2 state={state} />}\n\n          {type === 'Premolar1' && <Premolar1 state={state} />}\n          {type === 'Premolar2' && <Premolar2 state={state} />}\n\n          {type === 'Molar1' && <Molar1 state={state} />}\n          {type === 'Molar2' && <Molar2 state={state} />}\n        </React.Fragment>\n      </div>\n      {!transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <span>{index + 1}</span>\n            <div className={classes.circle} />\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport TeethFactory from './Teeth/TeethFactory'\n\nexport default function TeethGroup (props) {\n  const { number, teeth, states = {} } = props\n\n  const [details, setDetails] = React.useState()\n\n  React.useEffect(() => {\n    let _details = {}\n\n    switch (number) {\n      case 1:\n        _details = {\n          startAt: 0,\n          transform: {\n            flipX: 1\n          }\n        }\n        break\n\n      case 2:\n        _details = {\n          startAt: 8\n        }\n        break\n\n      case 3:\n        _details = {\n          startAt: 31,\n          reverse: true,\n          transform: {\n            flipX: 1,\n            flipY: 1\n          }\n        }\n        break\n\n      case 4:\n        _details = {\n          startAt: 23,\n          reverse: true,\n          transform: {\n            flipY: 1\n          }\n        }\n        break\n\n      default:\n        break\n    }\n\n    setDetails(_details)\n  }, [number])\n\n  return (\n    <React.Fragment>\n      {details && (\n        <React.Fragment>\n          {teeth.map((type, index) => {\n            const _index = !details.reverse ? details.startAt + index : details.startAt - index\n            return (\n              <TeethFactory\n                key={_index}\n                transform={details.transform}\n                type={type}\n                index={_index}\n                state={states[_index]}\n              />\n            )\n          })}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport TeethGroup from './TeethGroup'\n\n// Styles\nimport classes from './DentalChart.module.scss'\n\nconst teeth = {\n  uppper: {\n    left: ['Molar2', 'Molar1', 'Premolar1', 'Canine2', 'Canine1', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Canine1', 'Canine2', 'Premolar1', 'Molar1', 'Molar2']\n  },\n  lower: {\n    left: ['Molar2', 'Premolar2', 'Premolar1', 'Canine1', 'Incisor4', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Incisor4', 'Canine1', 'Premolar1', 'Premolar2', 'Molar2']\n  }\n}\n\n// props\n// states Object {\n//  enum: 'filled, extracted, default\n// }\n\nexport default function DentalChart (props) {\n  const { states } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='h6'>Dental Examination Chart</Typography>\n      </div>\n      <div className={classes.container}>\n        <div className={classes.chart}>\n          <div className={classes.upper}>\n            <TeethGroup number={1} teeth={teeth.uppper.left} states={states} />\n            <TeethGroup number={2} teeth={teeth.uppper.right} reverse states={states} />\n          </div>\n\n          <div className={classes.lower}>\n            <TeethGroup number={3} teeth={teeth.lower.left} states={states} />\n            <TeethGroup number={4} teeth={teeth.lower.right} states={states} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport DentalChart from '../../../DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.dental_procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                // isDental\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={`${classes.groups} ${classes.chart}`}>\n                <DentalChart states={constructDentalStates(claim.procedures)} />\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  isDental\n                  showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          claim_sub_type: data.claim_sub.type,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                // showContractRange\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO/ECU Specialist ID'\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO/ECU Specialist Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          claim_source: data.claim_source,\n          medicine_category: data.medicine_category,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                showClaimSource\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      required\n                      error={error.medicine_category}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions, onReturn } = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packagers: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          ppe_packages: data.ppe_packages || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                showMemberAccountNumber={false}\n                showCompany\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-from'\n                      required\n                      label='Date of Service (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-to'\n                      required\n                      label='Date of Service (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['packages']}`}>\n                  <Typography>PPE Package/s:</Typography>\n                  <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                    <List>\n                      {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                        <ListItem key={index}>\n                          <ListItemText primary={`Package ${index + 1}`} />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Paper>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .messages({ 'string.empty': `\"Approval Code\" is required.` })\n    .required(),\n  contract_plan_type: Joi.string()\n    .trim()\n    .allow('', null),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .messages({ 'string.empty': `\"LOA No.\" is required.` })\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow('', null),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .allow('', null),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = fields => (data, type = false) => {\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport MainValidator from './ClaimMedicalSuppliesValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      contract_plan_type: '',\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          contract_plan_type: data.contract_plan_type,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                isCM\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date\n                              .toISOString()\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  // showAmountPaidByMember={false}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  // showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  // showAmountPaidByMember={false}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfo.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfo (props) {\n  const {\n    show,\n    canPrintNotice = true,\n    setShowModal,\n    handleOnSave,\n    doReject,\n    doViewClaimNotice = () => {},\n    service,\n    lookup\n  } = props\n  const {\n    batch_number,\n    member_last_name,\n    member_first_name,\n    member_middle_name,\n    reimbursement_info_analysts: data = []\n  } = props.claim\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [items, setItems] = React.useState([])\n  const [reasonDropdown, setReasonDropdown] = React.useState([])\n\n  React.useEffect(() => {\n    setItems(data)\n  }, [data])\n\n  React.useEffect(() => {\n    if (showAdd) {\n      service\n        .lookups({\n          on: 'dropdown',\n          params: { field: lookup }\n        })\n        .then(res => {\n          const { data } = res.data\n          setReasonDropdown(\n            data.map(item => ({\n              value: item.reason,\n              text: item.reason\n            }))\n          )\n        })\n    }\n  }, [showAdd])\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnClickAdd = () => {\n    setShowAdd(true)\n\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  const handleOnClickSave = ({ item }) => {\n    setItems(items => {\n      const _items = [...items, item]\n      handleOnItemSave(_items)\n      return _items\n    })\n    setShowAdd()\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    items[index] = item\n    setItems(items => {\n      let _items = items.map((_item, _index) => {\n        if (_index === index) _item = { ...item, show: false, showCell: false }\n        return _item\n      })\n\n      handleOnItemSave(_items)\n      return _items\n    })\n  }\n\n  const handleOnClose = () => {\n    setShowModal(false)\n    setItems(items => {\n      return items.map((item, _index) => {\n        item.show = false\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          item.showCell = false\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n\n    handleOnSave(_items)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <ItemForm\n                      reasonDropdown={reasonDropdown}\n                      index={index}\n                      item={item}\n                      handleOnClickCancel={handleOnClickCancel}\n                      handleOnClickUpdate={handleOnClickUpdate}\n                      service={service}\n                      lookup={lookup}\n                      setReasonDropdown={setReasonDropdown}\n                    />\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <ItemForm\n                  index='add'\n                  reasonDropdown={reasonDropdown}\n                  item={{}}\n                  handleOnClickSave={handleOnClickSave}\n                  handleOnClickCancel={handleOnClickCancel}\n                  service={service}\n                  lookup={lookup}\n                  setReasonDropdown={setReasonDropdown}\n                />\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => setRejectModal(true)}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n          {canPrintNotice && (\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={() => doViewClaimNotice({ goBack: false })}\n            >\n              Print Notice\n            </Button>\n          )}\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n  const { index, item: _item, readOnly, reasonDropdown, service, lookup, setReasonDropdown } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction\n  } = props\n\n  const [item, setItem] = React.useState({})\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setItem({\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: today,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) item[field] = value\n        return item\n      })\n    }))\n  }\n\n  const handleOnLookup = args => {\n    const { save = false, update = false } = args\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n        if (save || update) {\n          let hasError = false\n          const reasons = item.reasons\n          const tempReasons = []\n          reasons.map(reason => {\n            const existing = data.filter(i => i.reason === reason.value)\n            if (existing.length === 0) {\n              tempReasons.push({ ...reason, value: '', error: 'Please Input a Valid Reason' })\n              hasError = true\n            } else tempReasons.push(reason)\n          })\n          setItem({ ...item, reasons: tempReasons })\n          if (hasError) {\n            return false\n          }\n          if (save) handleOnClickSave({ index, item })\n          if (update) handleOnClickUpdate({ index, item })\n        }\n      })\n  }\n\n  const _handleOnClickUpdate = () => {\n    handleOnLookup({ update: true })\n  }\n\n  const _handleOnClickSave = () => {\n    handleOnLookup({ save: true })\n  }\n\n  return (\n    <TableRow key={`collapsible-${index}`}>\n      <TableCell colSpan={headCells.length} id={`collabsible-cell-${index}`} className={classes['collapsible-cell']}>\n        <div className={`${classes.container} ${!item.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n          <div className={classes.cell}>\n            <Typography variant='h6' className={classes.label}>\n              {index === 'add' ? 'Add Item' : 'Update Item'}\n            </Typography>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-created-${index}`}\n                  label='Date Created'\n                  value={item.date_created}\n                  onChange={date => handleOnChange({ field: 'date_created', value: date.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`prepared-by-${index}`}\n                  label='Prepared By'\n                  value={item.prepared_by || ''}\n                  onChange={date => handleOnChange({ field: 'prepared_by', value: date.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-encoded-${index}`}\n                  label='Date Encoded'\n                  value={item.date_encoded}\n                  onChange={date => handleOnChange({ field: 'date_encoded', value: date.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`released-to-${index}`}\n                  label='Released To'\n                  value={item.released_to || ''}\n                  onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-released-${index}`}\n                  label='Date Released'\n                  value={item.date_released}\n                  onChange={date => handleOnChange({ field: 'date_released', value: date.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`return-date-${index}`}\n                  label='Return Date'\n                  value={item.date_return}\n                  disableComponents\n                  onChange={date => handleOnChange({ field: 'date_return', value: date.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']} style={{ width: '50%' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1 }}\n                  multiline\n                  rows={3}\n                  id='remarks'\n                  label='Remarks'\n                  value={item.remarks || ''}\n                  onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n                />\n              </div>\n            </div>\n\n            <div className={classes['reasons-container']}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Reasons\n                </Typography>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Other Details\n                </Typography>\n\n                <div className={classes.delete} />\n              </div>\n\n              {/* Reasons */}\n              {(item.reasons || []).map((item, _index) => (\n                <div className={classes.reasons} key={`reason-${_index}`}>\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <DropDown\n                      items={reasonDropdown}\n                      id={`reason-text-${_index}`}\n                      value={item.value || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })\n                      }\n                      error={item.error}\n                    />\n                  </div>\n\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <TextField\n                      id={`reason-other-details-${_index}`}\n                      value={item.other_details || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                      }\n                    />\n                  </div>\n\n                  <div className={classes.delete}>\n                    <IconButton id='delete-reason'>\n                      <DeleteIcon fontSize='small' onClick={() => handleOnClickRemoveReason(_index)} />\n                    </IconButton>\n                  </div>\n                </div>\n              ))}\n\n              <Typography\n                variant='body2'\n                className={`${classes['add-link']} ${(item.reasons || []).length ? '' : classes['empty-reasons']}`}\n                onClick={() => handleOnClickAddReason()}\n              >\n                + Add a reason\n              </Typography>\n              {/* Reasons */}\n            </div>\n\n            <div className={classes.footer}>\n              <React.Fragment>\n                {!readOnly && (\n                  <React.Fragment>\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      id='cancel'\n                      className='button-negative'\n                      onClick={() => handleOnClickCancel(index)}\n                    >\n                      Cancel\n                    </Button>\n                    {index === 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickSave}\n                        >\n                          Save\n                        </Button>\n                      </React.Fragment>\n                    )}\n                    {index !== 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickUpdate}\n                        >\n                          Update\n                        </Button>\n                      </React.Fragment>\n                    )}\n                  </React.Fragment>\n                )}\n              </React.Fragment>\n            </div>\n          </div>\n        </div>\n      </TableCell>\n    </TableRow>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n\n  let additional_fields = []\n\n  switch (type) {\n    case 'InPatient':\n      additional_fields = InPatient\n      break\n    default:\n      additional_fields = other_fields\n      break\n  }\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ReimbursementInfo from '../ReimbursementInfo/ReimbursementInfo'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Controller\nimport AdditionalFields from './AdditionalFields'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onViewClaimNotice, onChangeDoctor = () => {}, onReject, onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, onChangePro, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  // const [openDialog, setOpenDialog] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  //\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      reimbursement_type: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      diagnosis: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(undefined) })\n      setInitialAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n\n      let _claim = {\n        approval_code: data.approval_code,\n        contract_plan_type: data.contract_plan_type,\n        loa_number: data.loa_number,\n        reimbursement_type: data.reimbursement_details.type,\n        member_account_number: data.member.account_number,\n        member_last_name: data.member.last_name,\n        member_first_name: data.member.first_name,\n        member_middle_name: data.member.middle_name,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        date_from: data.date.from,\n        date_to: data.date.to,\n        medicine_category: data.medicine_category,\n        reimbursement_category: data.reimbursement_details.category,\n        official_receipt_number: data.reimbursement_details.official_receipt_number,\n        diagnosis: data.diagnosis || [],\n        procedures: data.procedures || [],\n        professional_fees: data.professional_fees || [],\n        hospital_items: data.hospital_items || [],\n        reimbursement_info: data.reimbursement_info || [],\n        reimbursement_info_analysts: data.reimbursement_info_analysts || [],\n        claim_remarks: data.claim_remarks\n      }\n\n      if (data.reimbursement_details.type === 'InPatient') {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate || 0,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name\n        }\n      } else {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          department: data.department\n        }\n      }\n      dispatch(setClaimFields(_claim))\n      setAllowedFields({\n        ..._allowedFields,\n        ...AdditionalFields(data.reimbursement_details.type)\n      })\n\n      setBatchNumber(data.batch_number)\n    })\n  }, [])\n\n  //* Room\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const [data] = res.data.data\n\n      let rooms = []\n      if (data) {\n        rooms = (data.rooms || []).map(item => ({\n          text: item.type,\n          value: item.type,\n          rate: item.rate\n        }))\n      }\n\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.desc,\n      rate: item.rate || 0\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n\n    if (value === 'InPatient') {\n      const _claim = Object.assign({}, claim)\n      delete _claim.doctor_id\n      delete _claim.doctor_name\n      delete _claim.department\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          date_to: moment(claim.date_from)\n            .endOf('day')\n            .toISOString()\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              permissions={permissions.base}\n              showReimbursement\n              requiredFields={{ reimbursement_type: true }}\n            />\n            <div className={classes.wrap}>\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-id'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_id\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-id'\n                    required\n                    label='Medical Partner ID'\n                    value={claim.facility_id}\n                    suggestions={suggestions.facility.id}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeFacility({\n                        field: 'facility_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={error.facility_id}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-facility-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_name\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-facility-name'\n                    required\n                    label='Medical Partner (Facility) Name'\n                    value={claim.facility_name}\n                    suggestions={suggestions.facility.name}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeFacility({\n                        field: 'facility_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={error.facility_name}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='dp-medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-from'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_from\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-from'\n                        required\n                        label='Admission Date (From)'\n                        value={claim.date_from}\n                        onChange={date =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: date.startOf('day').toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }\n                        error={error.date_from}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-to'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-to'\n                        required\n                        label='Admission Date (To)'\n                        value={claim.date_to}\n                        onChange={date =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: date.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-type'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_type\n                      }}\n                    >\n                      <DropDown\n                        id='room-type'\n                        label='Room Type'\n                        items={dropDown.rooms}\n                        value={claim.room_type}\n                        onChange={handleOnChangeRoomType}\n                        error={error.room_type}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-rate'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_rate\n                      }}\n                    >\n                      <TextFieldCurrency\n                        id='room-rate'\n                        label='Room Rate'\n                        value={claim.room_rate}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'room_rate'\n                            })\n                          )\n                        }}\n                        error={error.room_rate}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-of-service'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='date-of-service'\n                        required\n                        label='Date of Service'\n                        value={claim.date_to}\n                        onChange={date =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: date.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-department'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.department\n                      }}\n                    >\n                      <TextField\n                        id='department'\n                        label='Department'\n                        value={claim.department}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'department'\n                            })\n                          )\n                        }\n                        error={error.pro_id}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        required\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      readOnly={!permissions.base.update}\n                      error={error.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-reimbursement-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.reimbursement_category\n                      }}\n                    >\n                      <TextField\n                        id='reimbursement-category'\n                        label='Reimbursement Category'\n                        value={claim.reimbursement_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'reimbursement_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.reimbursement_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-official-receipt-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.official_receipt_number\n                  }}\n                >\n                  <TextField\n                    id='official-receipt-number'\n                    label='Official Receipt Number'\n                    value={claim.official_receipt_number}\n                    required\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'official_receipt_number'\n                        })\n                      )\n                    }\n                    readOnly={!permissions.base.update}\n                    error={error.official_receipt_number}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <div className={classes['left-side']}>\n                {permissions.diagnosis.read && (\n                  <DiagnosisList\n                    id='diagnosis-list'\n                    permissions={permissions.diagnosis}\n                    items={claim.diagnosis}\n                    error={error.diagnosis}\n                  />\n                )}\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doValidate={doValidateAll}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doViewClaimNotice={onViewClaimNotice}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            onReject={({ goBack }) => setShowReimbursementModal(true)}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, field: allowedFields })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            isReimbursement\n            reimbursement_info={claim.reimbursement_info}\n          />\n          <ReimbursementInfo\n            claim={{\n              ...claim,\n              batch_number: batchNumber\n            }}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            service={ClaimsAdjudicationServices}\n            permission={permissions.reimbursement_info}\n            canPrintNotice={false}\n            doViewClaimNotice={onViewClaimNotice}\n            handleOnSave={data =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: data,\n                  field: 'reimbursement_info_analysts'\n                })\n              )\n            }\n            doReject={() => onReject({ goBack: true })}\n            lookup={'reject-reason'}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport { useHistory } from 'react-router-dom'\n\n// Styles\nimport classes from './Error.module.scss'\n\nlet history = null\n\nconst DashboardRedirect = props => {\n  const { title = `Page not found`, body = `We cant seem to find the page you're looking for.` } = props\n  const [counter, setCounter] = React.useState()\n\n  React.useEffect(() => {\n    let _counter = 10\n    setCounter(_counter)\n    let interval = setInterval(() => {\n      if (_counter) {\n        _counter--\n        setCounter(_counter)\n      } else {\n        clearInterval(interval)\n        history.push('/')\n      }\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='h4' className={classes.title}>\n        {title}\n      </Typography>\n      <Typography variant='body1' className={classes.message}>\n        {body}\n      </Typography>\n\n      <div className={classes['action-messages']}>\n        <Typography variant='body2' className={classes.message}>\n          You will be redirected to Dashboard in {counter}\n        </Typography>\n        <Typography variant='body2' className={classes.message}>\n          Click the button below to go to that page.\n        </Typography>\n      </div>\n\n      <Button variant='contained' color='primary' className='button-neutral' onClick={() => history.push('/')}>\n        Go to Dashboard\n      </Button>\n    </div>\n  )\n}\n\nconst DashboardRedirectInit = props => {\n  history = useHistory()\n  return ''\n}\n\nconst DashboardRedirectService = {\n  redirect: () => {\n    history.push('/404')\n  }\n}\n\nexport { DashboardRedirectInit, DashboardRedirect, DashboardRedirectService }\n","import React from 'react'\n\n// Services\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport { DashboardRedirect } from 'SharedComponents/DashboardRedirect/DashboardRedirect'\n\nexport default function GetClaimComponent (_props) {\n  const { _type } = _props\n  const props = _props\n\n  const SelectecClaimType = selected => {\n    // const type = ClaimTypes[selected].other_name\n    switch (selected) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        LoadingService.loading(false)\n        return <DashboardRedirect title='Claim Type Under Development' />\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  given_diagnosis: Joi.string().trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code || i.description) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport GetClaimComponent from './GetClaimComponent'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\nimport Total from 'Utilities/Total'\n\n// Validators\nimport DiagnosisListValidator from './Components/DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from './Components/HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from './Components/ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from './Components/ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from './Components/ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from './Components/HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from './Components/ProfessionalFeeForm/DiagnosisValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  resetClaim,\n  setClaimType,\n  setDropDown,\n  initDropDowns,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setClaimFacility,\n  setClaimDoctor,\n  addSuggestionToArray,\n  initDiscrepancy,\n  setDiscrepancy,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  setError,\n  resetError,\n  setEscalationMessages,\n  setInquiryMessages,\n  setClaimPro,\n  resetRecon,\n  setReconNotes,\n  setRejectStatus\n} = actions\n\nexport default function ClaimAnalysis (props) {\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsAnalysis: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n  const c_return = useSelector(({ ClaimsAnalysis: state }) => state.return)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n\n  const [fetching, setFetching] = React.useState(true)\n\n  const [isMember, setIsMember] = React.useState(true)\n\n  const [member, setMember] = React.useState(null)\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n  const [client, setClient] = React.useState(null)\n  const [clientFetchStatus, setClientFetchStatus] = React.useState('')\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n\n  const { ApiService, breadCrumbsList, isManager = false } = props\n\n  const [claimNumber, setClaimNumber] = React.useState('')\n\n  const REPORT_LETTER_OF_ADVICE = 1\n  const REPORT_ANALYSIS_SHEET = 2\n  const REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE = 3\n  const NOTICE = 4\n\n  const getClaimType = ({ claim_number }) => {\n    setFetching(true)\n    BreadcrumbsService.setSelectedItems(breadCrumbsList)\n\n    ApiService.getClaim({ claim_number }).then(res => {\n      const { data } = res.data\n      const _claim_type = data.__type\n      dispatch(setClaimType(_claim_type))\n      dispatch(setDiscrepancy(getDiscrepancy(data.analysis_results.result)))\n      setFetching(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    dispatch(initDiscrepancy())\n    dispatch(resetError())\n    dispatch(resetRecon())\n    LoadingService.loading(true)\n    const { claim_number } = props.match.params\n\n    getClaimType({ claim_number })\n    getEscalationLogs({ claim_number })\n    getInquiryLogs({ claim_number })\n    getReconNotes({ claim_number })\n\n    return () => {\n      dispatch(setClaimType(''))\n    }\n  }, [props.match.params.claim_number])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    setGrandTotal(grand)\n    dispatch(setRejectStatus(!(grand === 0)))\n  }, [claim])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const getClaimDetails = callback => {\n    const { claim_number } = props.match.params\n    setClaimNumber(claim_number)\n    dispatch(\n      setProcedure({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setHospitalItem({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setProfessionalFee({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n\n    ApiService.getClaim({\n      claim_number\n    }).then(res => {\n      const { data } = res.data\n      // Set Diagnosis Suggestions\n      const diagnosis = data.diagnosis || []\n      diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n      callback(data)\n\n      // FETCH Member from Customer Care\n      if (data.member && data.member.account_number) {\n        const member_account_no = data.member.account_number\n        const client_account_number = data.member.customer_account_number\n        if (isMember) {\n          getMember({ member_account_no })\n        } else {\n          getClient({ client_account_number })\n        }\n      }\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'facility',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'doctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // pro user lookup\n          CustomerCareServices.proUsersLookup({ value, field }).then(res => {\n            // limit temporary - no limit in api seer\n            const limit = []\n            for (let i = 0; i < 10; i++) {\n              if (!res.data.data[i]) break\n              limit.push(res.data.data[i])\n            }\n\n            const data = limit.map(elem => {\n              let full_name = `${elem.first_name} ${elem.last_name}`\n              delete elem.first_name\n              delete elem.last_name\n              return { ...elem, name: full_name }\n            })\n\n            let _items = []\n\n            if (field === 'pro_id') {\n              for (let d of data) {\n                _items.push(d[`employee_${field.split('_')[1]}`])\n              }\n            } else {\n              for (let d of data) {\n                _items.push(d['name'])\n              }\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'pro',\n                suggestion: { [`${field.split('_')[1]}`]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getUtilizations = args => ApiService.getUtilizations(args)\n\n  const getPartners = args => ApiService.getPartners(args)\n\n  const getDoctors = args => ApiService.getDoctors(args)\n\n  const getUsers = args => ApiService.getUsers(args)\n\n  const getMember = ({ member_account_no }) => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: member_account_no }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: member_account_no })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        console.log(err)\n        const { data } = err.response\n        // status === 404\n        setMemberFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getClient = ({ client_account_number }) => {\n    setClientFetchStatus('fetching')\n    CustomerCareServices.getClient({ account_number: client_account_number })\n      .then(res => {\n        const { data } = res.data\n        setClientFetchStatus('success')\n        setClient(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setClientFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getMemberContract = args => CustomerCareServices.getMemberContract(args)\n\n  const getClientContract = args => CustomerCareServices.getClientContract(args)\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'anesthesiologist',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getDiscrepancy = adjudicationResults => {\n    const debug = false\n    if (debug) console.group('Discrepancy Check')\n    let discrepancy = {}\n    let diagnosis = {}\n    let procedures = {}\n    let hospital_items = {}\n    let professional_fees = {}\n    if (debug) console.log(adjudicationResults)\n\n    if (adjudicationResults) {\n      adjudicationResults.map((result, index) => {\n        result.fields.map((field, fieldIndex) => {\n          if (field.item_type === 'procedures') {\n            if (!procedures[field.item_id]) procedures[field.item_id] = {}\n            if (!procedures[field.item_id][field.id]) procedures[field.item_id][field.id] = []\n            procedures = {\n              ...procedures,\n              [field.item_id]: {\n                ...procedures[field.item_id],\n                [field.id]: [...procedures[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'hospital_items') {\n            if (!hospital_items[field.item_id]) hospital_items[field.item_id] = {}\n            if (!hospital_items[field.item_id][field.id]) hospital_items[field.item_id][field.id] = []\n            hospital_items = {\n              ...hospital_items,\n              [field.item_id]: {\n                ...hospital_items[field.item_id],\n                [field.id]: [...hospital_items[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'professional_fees') {\n            if (!professional_fees[field.item_id]) professional_fees[field.item_id] = {}\n            if (!professional_fees[field.item_id][field.id]) professional_fees[field.item_id][field.id] = []\n            professional_fees = {\n              ...professional_fees,\n              [field.item_id]: {\n                ...professional_fees[field.item_id],\n                [field.id]: [...professional_fees[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else {\n            if (!discrepancy[field.id]) discrepancy[field.id] = []\n            discrepancy = { ...discrepancy, [field.id]: [...discrepancy[field.id], field.message] }\n          }\n        })\n      })\n    }\n    discrepancy = {\n      ...discrepancy,\n      diagnosis: diagnosis,\n      procedure: procedures,\n      hospital_item: hospital_items,\n      professional_fee: professional_fees\n    }\n    if (debug) console.log(discrepancy)\n    if (debug) console.groupEnd()\n    return discrepancy\n  }\n\n  const getEscalationLogs = ({ claim_number }) => {\n    ApiService.getComments({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setEscalationMessages({ messages: data }))\n    })\n  }\n\n  const getInquiryLogs = ({ claim_number }) => {\n    ApiService.getInquiries({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setInquiryMessages({ messages: data }))\n    })\n  }\n\n  const getReconNotes = ({ claim_number }) => {\n    const { permissions } = props\n    if (SafeAccess(permissions.tabs.notes, ['read'])) {\n      ApiService.getNotes({ claim_number }).then(res => {\n        const { data } = res.data\n        dispatch(setReconNotes({ messages: data }))\n      })\n    }\n  }\n\n  const getReport = mode => {\n    LoadingService.loading(true)\n    ApiService.getClaim({ claim_number: claimNumber }).then(value => {\n      LoadingService.loading(false)\n      // const hasAmount = value.data.data.has_amount_concerns\n\n      let pdf = {}\n\n      switch (mode) {\n        case REPORT_ANALYSIS_SHEET:\n          pdf = {\n            name: 'Analysis Sheet',\n            fileName: 'analysis_sheet',\n            service: ApiService.getAnalysisSheet({ claimNo: claimNumber })\n          }\n          break\n\n        case REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Reports',\n            fileName: 'reports',\n            service: ApiService.getReports({ claimNo: claimNumber }),\n            onClose: () => props.history.push('/')\n          }\n          break\n\n        case REPORT_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Letter of Advice',\n            fileName: 'letter_of_advice',\n            service: ApiService.getLetterOfAdvice({ claimNo: claimNumber })\n          }\n          break\n\n        case NOTICE:\n          pdf = {\n            name: 'Claims Notice',\n            fileName: 'claim_notice',\n            service: ApiService.getLetterNotice({ claimNo: claimNumber }),\n            onClose: () => props.history.push('/')\n          }\n          break\n      }\n\n      PdfViewer2Service({ ...pdf, open: true })\n    })\n  }\n\n  const getReason = () => {\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n    ApiService.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ApiService.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const getRooms = ({ value, by = 'id' }) => {\n    ApiService.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n            text: item.type,\n            value: item.type,\n            rate: item.rate\n          }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimFacility({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          dispatch(setClaimFacility({ facility_id: i.id, facility_name: i.name }))\n          dispatch(resetSuggestionObject({ field: 'facility' }))\n          return i.rooms\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'facility' }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimPro({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.pro.data) {\n        if (value === i.employee_id || value === i.name) {\n          dispatch(setClaimPro({ pro_name: i.name, pro_id: i.employee_id }))\n          dispatch(resetSuggestionObject({ field: 'pro' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    }\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.anesthesiologist.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ anesthesiologist_id: i.id, anesthesiologist_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by })\n    }\n  }\n\n  const handleOnEscalate = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = escalations.assignee\n      ApiService.escalate({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: escalations.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReturn = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.returnClaim({\n      claim_number: claimNumber,\n      data: { note: c_return.note }\n    }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnInquire = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = inquiries.assignee\n      ApiService.inquire({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: inquiries.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReject = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.reject({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnReassign = ({ goBack = true }) => {\n    LoadingService.loading(true)\n\n    const { id } = reassign.assignee\n\n    ApiService.reassign({\n      claim_number: claimNumber,\n      data: { receiver_id: id, message: reassign.message }\n    }).then(res => {\n      if (goBack) props.history.push('/')\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnApprove = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.approve({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnViewAnalysisSheet = () => {\n    getReport(REPORT_ANALYSIS_SHEET)\n  }\n\n  const handleOnViewLetterOfAdvice = () => {\n    getReport(REPORT_LETTER_OF_ADVICE)\n  }\n\n  const handleOnViewClaimNotice = ({ goBack = false }) => {\n    getReport(NOTICE)\n  }\n\n  const handleOnSave = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnCancel = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    if (goBack && !isManager) props.history.push('/')\n    else {\n      const { bundle_number, batch_number } = props.match.params\n      props.history.push(`/payment-request/${bundle_number}/submitted/${batch_number}`)\n    }\n    LoadingService.loading(false)\n  }\n\n  const handleOnReturnEscalate = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.comment({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnReturnInquire = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.inquire({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnRemove = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.removeClaim({ claim_number: claimNumber }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  // Validation\n  const doValidateAll = ({ validator, field = undefined }) => {\n    dispatch(resetError())\n    console.log('zzz', validator)\n    const base_errors = doValidateBase({ claim, validator: validator, field })\n    let diagnosis = {}\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    if (claim.diagnosis) {\n      diagnosis = doValidateDiagnosis({ diagnosis: claim.diagnosis })\n    }\n\n    if (claim.procedures) {\n      for (const [index, value] of claim.procedures.entries()) {\n        const error = doValidateProcedure({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          procedure = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProcedure({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n    if (claim.hospital_items) {\n      for (const [index, value] of claim.hospital_items.entries()) {\n        const error = doValidateHospitalItem({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          hospital_item = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setHospitalItem({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n    if (claim.professional_fees) {\n      for (const [index, value] of claim.professional_fees.entries()) {\n        const error = doValidateProfessionalFee({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          professional_fee = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProfessionalFee({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    return invalid\n  }\n\n  const doValidateBase = ({ claim, validator, field }) => {\n    const data = {}\n    const {\n      diagnosis,\n      procedures,\n      hospital_items,\n      professional_fees,\n      reimbursement_info,\n      reimbursement_info_analysts,\n      ppe_packages,\n      ...rest\n    } = claim\n    for (let f in rest) data[f] = claim[f]\n    const { error = {} } = validator(Object.keys(field || claim))({ ...data })\n\n    dispatch(\n      setError({\n        ...error\n      })\n    )\n    return error\n  }\n\n  const doValidateDiagnosis = ({ diagnosis }) => {\n    const error = DiagnosisListValidator(diagnosis)\n    dispatch(\n      setError({\n        diagnosis: error\n      })\n    )\n    return error\n  }\n\n  const doValidateProcedure = ({ data, index }) => {\n    const { error } = ProcedureValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ data, index }) => {\n    const { error } = HospitalItemValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        hospital_item: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ data, index }) => {\n    const { error } = ProfessionalFeeValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n    dispatch(\n      setError({\n        professional_fee: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  React.useEffect(() => {\n    if (error) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [error])\n  console.log('error2', error)\n  return (\n    <React.Fragment>\n      {claim_type && !fetching && (\n        <GetClaimComponent\n          // #region VARIABLES\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          isMember={isMember}\n          member={member}\n          memberFetchStatus={memberFetchStatus}\n          client={client}\n          clientFetchStatus={clientFetchStatus}\n          utilizationLoa={utilizationLoa}\n          grandTotal={grandTotal}\n          //  #endregion\n          // #region FETCHING\n          getClaimDetails={getClaimDetails}\n          getUtilizations={getUtilizations}\n          getUsers={getUsers}\n          getPartners={getPartners}\n          getDoctors={getDoctors}\n          getMember={getMember}\n          getClient={getClient}\n          getMemberContract={getMemberContract}\n          getClientContract={getClientContract}\n          getReason={getReason}\n          getRooms={getRooms}\n          //  #endregion\n          // #region EVENTS\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          onReturnEscalate={handleOnReturnEscalate}\n          onReturnInquire={handleOnReturnInquire}\n          onEscalate={handleOnEscalate}\n          onInquire={handleOnInquire}\n          onViewAnalysisSheet={handleOnViewAnalysisSheet}\n          onViewLetterOfAdvice={handleOnViewLetterOfAdvice}\n          onViewClaimNotice={handleOnViewClaimNotice}\n          onReject={handleOnReject}\n          onReassign={handleOnReassign}\n          onApprove={handleOnApprove}\n          onSave={handleOnSave}\n          onCancel={handleOnCancel}\n          onChangePro={handleOnChangePro}\n          onRemove={handleOnRemove}\n          onReturn={handleOnReturn}\n          //  #endregion\n          // #region SERVICES\n          userManagementService={UserManagementServices}\n          // #endregion\n          // #region VALIDATION\n          doValidateAll={doValidateAll}\n          doValidateDiagnosis={doValidateDiagnosis}\n          doValidateProcedure={doValidateProcedure}\n          doValidateHospitalItem={doValidateHospitalItem}\n          doValidateProfessionalFee={doValidateProfessionalFee}\n          // #endregion\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    description: Joi.string()\n      .trim()\n      .label('Description')\n      .required(),\n    code: Joi.string()\n      .trim()\n      .label('Code')\n      .required(),\n    tooth_number: Joi.string()\n      .label('Tooth Number')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    flag: Joi.boolean().default(false)\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    name: Joi.string()\n      .trim()\n      .label('Item Name')\n      .required(),\n    item_code: Joi.string()\n      .trim()\n      .label('Item Code')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      })\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Doctor Name')\n      .required(),\n    specialization: Joi.string()\n      .trim()\n      .label('Specialization')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      })\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\n\n// Pages of Batch Encoder Supervisor\nimport Dashboard from './../Components/BatchEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\n// Reports\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n        <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n        <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n        <Route\n          path='/claims/recon/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n              {...props}\n              permissions={permissions}\n              ApiService={ClaimsReconServices}\n            />\n          )}\n        />\n\n        {/* REPORTS */}\n        {generateRoutes(userRole)}\n      </Switch>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst OpenBatchesTile = props => {\n  const { services, sizes } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBatches({\n        category: 'open',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'open' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setBatches({ data: openBatches, count: openBatchCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'open'\n    services.getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnEncode = batch_number => {\n    services.assignBatch({ batch_number }).then(({ data: res }) => {\n      props.history.push(`/batches/${batch_number}`)\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'open'\n    setViewList({ ...initialValue, show: true, title: `Open Batches`, category })\n    services.getBatches({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'open',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBatches(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='open-batches'\n        sizes={sizes}\n        count={{ color: 3, value: batches.count, id: 'open-batches-count' }}\n        title='Open Batches'\n        viewList={\n          <Typography id='ob-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`op-${item.id}`} id={`op-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={item.batch_number}>\n                <TableCell id={`ob-batch-no-${index}`}>{item.batch_number}</TableCell>\n                <TableCell id={`ob-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`ob-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Typography\n                    id={`encode-batch-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnEncode(item.batch_number)}\n                  >\n                    Encode\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='open-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  onClick={() => handleOnEncode(item.batch_number)}\n                >\n                  Encode\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOpenBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default OpenBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst MyBatchesTile = props => {\n  const { services, sizes } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    //* My Batches\n    Promise.all([\n      services.getBatches({\n        category: 'my',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'my' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const myBatches = batchResponse.data.data.results\n      const myBatchCount = batchCountResponse.data.data\n      setBatches({ data: myBatches, count: myBatchCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'my'\n    services.getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'my'\n    setViewList({ ...initialValue, show: true, title: `My Batches`, category })\n    services.getBatches({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'my',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBatches(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-batches'\n        sizes={sizes}\n        count={{ color: 8, value: batches.count, id: 'my-batches-count' }}\n        title='My Batches'\n        viewList={\n          <Typography id='mb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`mb-${item.id}`} id={`mb-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={item.batch_number}>\n                <TableCell id={`mb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                <TableCell id={`mb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`mb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/batches/${item.batch_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                      Update\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='my-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default MyBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CompletedBatchesTile = props => {\n  const { services, sizes } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBatches({\n        category: 'completed',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'completed' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const completedBatches = batchResponse.data.data.results\n      const completedBatchCount = batchCountResponse.data.data\n      setBatches({ data: completedBatches, count: completedBatchCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'completed'\n    services.getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'completed'\n    setViewList({ ...initialValue, show: true, title: `Completed Batches`, category })\n    services.getBatches({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'completed',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBatches(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='completed-batches'\n        sizes={sizes}\n        count={{ color: 5, value: batches.count, id: 'completed-batches-count' }}\n        title='Completed Batches'\n        viewList={\n          <Typography id='cb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`cb-${item.id}`} id={`cb-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={item.batch_number}>\n                <TableCell id={`cb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                <TableCell id={`cb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`cb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/batches/${item.batch_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        id='completed-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCompletedBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default CompletedBatchesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [openTickets] = React.useState({ count: 0, data: [] })\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <OpenBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList\n                count={openTickets.count}\n                title='Open Tickets'\n                viewAllLink={{ to: '/batches', caption: 'View all' }}\n              >\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {openTickets.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchesPage.module.scss'\n\nexport default function BatchesPage () {\n  PageTitleService('Batches')\n  BreadcrumbsService.setSelectedItems(['dashboard', 'batches'])\n\n  return (\n    <div className={classes.root}>\n      <span>My batches</span>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails ({ details, reassign_notes = true }) {\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n        {reassign_notes && (\n          <div className={classes['input']}>\n            <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n          </div>\n        )}\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const {\n    onClickAdd,\n    onClickProviderSchedule,\n    count,\n    status,\n    type = '',\n    inputChange = null,\n    disabled = false,\n    isManager = false\n  } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims</Typography>\n        <Typography id={'claim-count'} variant='subtitle2'>{`(${count})`}</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n\n        {status !== 'Completed' && !isManager && (\n          <React.Fragment>\n            {(type === 'APE' || type === 'ECU' || type === 'PPE') && (\n              <Button\n                id={`${type.toLowerCase()}-schedule`}\n                variant='contained'\n                color='primary'\n                className={`${classes.button} button-positive`}\n                onClick={onClickProviderSchedule}\n              >\n                Provider's {type} Schedule\n              </Button>\n            )}\n\n            <Button\n              id='add-claim'\n              variant='contained'\n              color='primary'\n              className={`${classes.button} button-positive`}\n              onClick={onClickAdd}\n              disabled={disabled}\n            >\n              Add Claim\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n// import IconButton from '@material-ui/core/IconButton'\n// import DeleteIcon from '@material-ui/icons/Delete'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\nconst cmHeadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'client-account-number', numeric: false, disablePadding: false, label: 'Client Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst prManagerheadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({\n  items,\n  selectedClaimNumber,\n  onItemClick,\n  type,\n  onConfirm,\n  openDialog,\n  onCancel,\n  // forDeletion,\n  actionItems,\n  setActionItems,\n  // setForDeletion,\n  submittedBatch,\n  setSelected,\n  pagination,\n  setPagination,\n  isManager = false,\n  selectStatus = true\n}) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  const getMessage = claims => {\n    let message = 'Are you sure you want to delete this claim?'\n    if (claims.claim_numbers.length > 1) {\n      message = 'Are you sure you want to delete these claims?'\n    }\n    return message\n  }\n\n  React.useEffect(() => {\n    const data = items.map(i => ({\n      ...i,\n      selected: false\n    }))\n    setClaims({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setActionItems({ claim_numbers: [] })\n    setSelected([])\n  }, [items, selectStatus])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleClick = ({ claims, index }) => {\n    const _claims = {\n      ...claims,\n      data: claims.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n  const handleSelectAllClick = event => {\n    let _claims = claims\n\n    if (_claims.data) {\n      _claims.data.map(i => {\n        i.selected = _claims.indeterminate ? true : !_claims.checked\n        return i\n      })\n    }\n\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _claims = data || claims\n    let selected_count = 0\n    let claimNumbers = []\n    if (_claims.data) {\n      for (let c of _claims.data) {\n        if (c.selected) {\n          selected_count++\n          claimNumbers.push(c.claim_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _claims.data.length : false\n    let checked = selected_count ? selected_count === _claims.data.length : false\n    _claims = { ..._claims, indeterminate, checked }\n    setClaims(_claims)\n\n    setActionItems({ claim_numbers: claimNumbers })\n    setSelected(state => [...claimNumbers])\n  }\n  const handleItemClick = index => onItemClick(index)\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={type === 'Clinic Management' ? cmHeadCells : !isManager ? headCells : prManagerheadCells}\n        handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        pagination={pagination}\n        rowsLength={rows.length}\n        checkAll\n        indeterminate={!!claims.indeterminate}\n        checked={!!claims.checked}\n        allowCheck\n        allowCheckDisabled={submittedBatch}\n        selectStatus={selectStatus}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow\n                className={`${\n                  selectedClaimNumber === row.claim_number ? classes.selected : classes['default-override']\n                }`}\n                selected={selectedClaimNumber === row.claim_number}\n                role='checkbox'\n                tabIndex={-1}\n                key={row.claim_number}\n              >\n                {selectStatus ? (\n                  <TableCell padding='checkbox'>\n                    <Checkbox\n                      disabled={submittedBatch}\n                      checked={row.selected}\n                      color='default'\n                      onClick={event => handleClick({ index, claims })}\n                    />\n                  </TableCell>\n                ) : null}\n\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number || ''}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number || ''}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code || ''}\n                </TableCell>\n                <TableCell id={`member-name-${index}`} onClick={() => handleItemClick(index)}>{`${\n                  row.member ? row.member.first_name : ''\n                } ${row.member ? row.member.last_name : ''}`}</TableCell>\n                {type === 'Clinic Management' || type === 'PPE' ? (\n                  <React.Fragment>\n                    {type === 'Clinic Management' && (\n                      <TableCell id={`client-account-name-${index}`} onClick={() => handleItemClick(index)}>\n                        {row.client.account_name}\n                      </TableCell>\n                    )}\n                    <TableCell id={`client-account-number-${index}`} onClick={() => handleItemClick(index)}>\n                      {row.client.account_number}\n                    </TableCell>\n                  </React.Fragment>\n                ) : !isManager ? (\n                  <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.member.account_number}\n                  </TableCell>\n                ) : (\n                  <TableCell id={`account-name-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.client.account_name}\n                  </TableCell>\n                )}\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n                {isManager && (\n                  <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                    <Link\n                      to={`/payment-request/${row.bundle_number}/submitted/${row.batch_number}/claim/${row.claim_number}`}\n                    >\n                      <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                        View Claim\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      {!isManager ? (\n        <Alert\n          open={openDialog}\n          message={getMessage(actionItems)}\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={onCancel}\n          onOk={onConfirm}\n        />\n      ) : null}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ProviderSchedule.module.scss'\n\n// Validations\n\n// Store\n\nconst headCells = [\n  { id: '1', name: 'Reference No.', sortField: '' },\n  { id: '2', name: 'Inclusive Dates', sortField: '' },\n  { id: '3', name: 'Account Name', sortField: '' },\n  { id: '3', name: 'Prepared By', sortField: '' }\n]\n\nexport default function ProviderSchedule (props) {\n  // Events\n  const { type, facility, dialog, setDialog } = props\n  // Variables\n  // Services\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={() => setDialog(false)}\n      aria-labelledby='customized-dialog-title'\n      open={dialog}\n      className={classes.root}\n      PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header1}>\n          <Typography variant='h6' className={classes.title}>\n            {facility.name}\n          </Typography>\n          <div className={classes.search}>\n            <SearchTextComponent id='search' onChange={() => {}} placeholder='Search for ' />\n          </div>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.body}>\n        <div className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map((headCell, index) => (\n                    <TableCell key={`${headCell.sortField} ${index}`} id={headCell.id}>\n                      <TableSortLabel active={false} direction={'asc'} onClick={() => {}}>\n                        {type} {headCell.name}\n                      </TableSortLabel>\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                  <TableCell id={`no-record`} colSpan={5}>\n                    <div\n                      className={`${classes.cell} ${classes.center}`}\n                      style={{\n                        textAlign: 'center',\n                        fontStyle: 'italic'\n                      }}\n                    >\n                      <span>No Records</span>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              }\n              pagination={false}\n            />\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.partition}>\n              <Typography>{type} Package/s:</Typography>\n              <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                <List>\n                  {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                    <ListItem key={index}>\n                      <ListItemText primary={`Package ${index + 1}`} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </div>\n            <div className={classes.partition}>\n              <Typography>Notes:</Typography>\n              <Paper style={{ height: '200px', overflow: 'auto' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                  multiline\n                  rows={3}\n                  id='notes'\n                  value={''}\n                  disabled={false}\n                  readOnly\n                  onChange={event => {}}\n                />\n              </Paper>\n            </div>\n          </div>\n        </div>\n        <div className={classes.action}>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-negative'>\n            Close\n          </Button>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-positive'>\n            Add Claim\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\nimport ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\nimport Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const { apiService } = props\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [selectedClaimNumber, setSelectedClaimNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [submitStatus, setsubmitStatus] = React.useState('')\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [openDialog, setOpenDialog] = React.useState({})\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n  const [showProviderSchedule, setShowProviderSchedule] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [debounce, setDebounce] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n  const [cancelDialog, setCancelDialog] = React.useState({})\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        // getClaimsAndCount({ batch_number: batchNumber, search })\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  const getClaimsAndCount = ({ batch_number }, test) => {\n    apiService\n      .getClaims({\n        batch_number,\n        params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n      })\n      .then(res => {\n        const { results, count, page, limit } = res.data.data\n        setClaims(results)\n        setClaimCount(count)\n        setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n      })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const _batchNumber = props.match.params._batchNumber\n    setBatchNumber(_batchNumber)\n\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      setDetails(data)\n      LoadingService.loading(false)\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Completed',\n          color: 'green'\n        }\n      }\n\n      setsubmitStatus(_status.text)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', 'batches', `specificBatch:${_batchNumber}`])\n\n      PageTitleService(`Batch No. ${_batchNumber}`, {\n        text: _status.text,\n        color: _status.color\n      })\n    })\n    getClaimsAndCount({ batch_number: _batchNumber })\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const handleOnItemClick = index => {\n    const { claim_number } = claims[index]\n    setSelectedClaimNumber(claim_number)\n\n    // if (submitStatus === 'Completed') return\n\n    // props.history.push(`/batches/${batchNumber}/claims/${claim_number}`)\n  }\n\n  const handleOnUpdate = () => {\n    if (submitStatus === 'Completed') return\n\n    // if (selected.length > 1) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select ONLY one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // } else if (!selected.length) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // }\n    console.log(selectedClaimNumber)\n    if (!selectedClaimNumber || selectedClaimNumber === '') {\n      return setDialog({\n        open: true,\n        message: 'Please select one claim to update.',\n        okLabel: 'OK',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    props.history.push(`/batches/${batchNumber}/claims/${selectedClaimNumber}`)\n  }\n\n  const handleOnSubmit = index => {\n    LoadingService.loading(true)\n    setOpenDialog(state => ({ ...state, show: false }))\n\n    apiService.submitBatch({ batch_number: batchNumber }).then(res => {\n      LoadingService.loading(false)\n      props.history.push(`/`)\n    })\n  }\n\n  const onOpenDelete = claim => {\n    // setselectedClaim(claim)\n    setOpenDeleteDialog(true)\n  }\n\n  const onCancelDelete = () => {\n    setOpenDeleteDialog(false)\n  }\n\n  const onConfirmDelete = () => {\n    console.log(forDeletion)\n    apiService\n      .deleteMultipleClaim({\n        batch_number: batchNumber,\n        data: forDeletion\n      })\n      .then(() => {\n        getClaimsAndCount({ batch_number: batchNumber })\n        setOpenDeleteDialog(false)\n        setForDeletion({ claim_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDeleteDialog(false)\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader\n            batchNumber={batchNumber}\n            type={details.claim.type}\n            onClickProviderSchedule={() => setShowProviderSchedule(true)}\n            // onClickPPESchedule={() => setShowPPESchedule(true)}\n            onClickAdd={() => props.history.push(`/batches/${batchNumber}/claims/add`)}\n            count={claimCount}\n            status={submitStatus}\n            inputChange={handleSearchChange}\n            disabled={!!(details.claim.type === 'Reimbursement' && claims.length > 0)}\n          />\n          <ClaimList\n            pagination={pagination}\n            setPagination={setPagination}\n            items={claims}\n            selectedClaimNumber={selectedClaimNumber}\n            onItemClick={handleOnItemClick}\n            type={details.claim.type}\n            onConfirm={onConfirmDelete}\n            openDialog={openDeleteDialog}\n            onCancel={onCancelDelete}\n            actionItems={forDeletion}\n            setActionItems={setForDeletion}\n            setSelected={setSelected}\n            submittedBatch={submitStatus === 'Completed'}\n            selectStatus\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {submitStatus === 'In Progress' && (\n                <React.Fragment>\n                  {forDeletion.claim_numbers.length > 0 && (\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      className={`${'button-negative'} ${classes['delete-button']}`}\n                      onClick={() => {\n                        onOpenDelete(true)\n                      }}\n                      id='cancel'\n                    >\n                      Delete\n                    </Button>\n                  )}\n\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() =>\n                      setCancelDialog({\n                        open: true,\n                        message: 'Are you sure you want to cancel?',\n                        okLabel: 'Yes',\n                        cancelLabel: 'No',\n                        onCancel: () => setCancelDialog(state => ({ ...state, open: false })),\n                        onOk: () => props.history.push('/')\n                      })\n                    }\n                  >\n                    Cancel\n                  </Button>\n                  <Button variant='contained' color='primary' className='button-positive' onClick={handleOnUpdate}>\n                    Update Claim\n                  </Button>\n                  <Button\n                    id='submit-batch'\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() =>\n                      setOpenDialog(state => ({\n                        ...state,\n                        show: true,\n                        message: 'Are you sure you want to submit this batch?',\n                        handleOnOk: handleOnSubmit\n                      }))\n                    }\n                  >\n                    Submit\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {submitStatus === 'Completed' && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => props.history.push('/')}\n                >\n                  Close\n                </Button>\n              )}\n            </div>\n          </div>\n          <ProviderSchedule\n            type={details.claim.type}\n            facility={details.facility}\n            dialog={showProviderSchedule}\n            setDialog={setShowProviderSchedule}\n          />\n\n          <Alert\n            open={openDialog.show}\n            message={openDialog.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(state => ({ ...state, show: false }))}\n            onOk={openDialog.handleOnOk}\n          />\n        </React.Fragment>\n      )}\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n      <Alert\n        open={!!cancelDialog.open}\n        message={cancelDialog.message}\n        cancelLabel={cancelDialog.cancelLabel}\n        okLabel={cancelDialog.okLabel}\n        onOk={cancelDialog.onOk}\n        onCancel={cancelDialog.onCancel}\n      />\n    </div>\n  )\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  const room_type = loa.room ? loa.room[0].room_type : ''\n  const room_rate = loa.room ? loa.room[0].total_amount : ''\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => {\n        if (item.type.localeCompare(room_type, 'en', { sensitivity: 'base' }) === 0) {\n          dispatch(setClaimBaseDetails({ field: 'room_type', value: room_type.toUpperCase() }))\n          dispatch(setClaimBaseDetails({ field: 'room_rate', value: room_rate }))\n        }\n        return {\n          text: item.type,\n          value: item.type.toUpperCase(),\n          rate: item.rate\n        }\n      })\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n  console.log('zzz', procedures)\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  if (diagnosis.length === 0) {\n    diagnosis.push({\n      description: primary_diagnosis,\n      code: primary_icd10_code,\n      primary: true\n    })\n  } else {\n    diagnosis.map((diag, i) => {\n      let primary = false\n      if (diag.icd10_code === primary_icd10_code) primary = true\n      diagnosis[i].primary = primary\n      diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n      diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n    })\n  }\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function Reimbursment ({ common, loa, dispatch, claim }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n  if (claim.reimbursement_type === 'InPatient') {\n    details = {\n      ...details,\n      room_type: loa.room ? loa.room[0].room_type : '',\n      room_rate: loa.room ? loa.room[0].total_amount : 0,\n      pro_id: '',\n      pro_name: ''\n    }\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    claim_source: '',\n    medicine_category: '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].tooth_number = procedures[i].tooth_numbers[0].toString() || '' // Check if this should be an array :/\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_issued_date ? loa.date_issued_date : Date.now(),\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || [],\n    claim_remarks: loa.remarks || ''\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\nimport MedicalSupplies from './MedicalSupplies'\nimport Pharmacy from './Pharmacy'\nimport Dental from './Dental'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\nconst AutoFill = ({ loa, claim_type, claim }) => {\n  const type = ClaimTypes[claim_type].other_name\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n  switch (type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch, claim })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n    case 'MedicalSupplies':\n      MedicalSupplies({ common, loa, dispatch })\n      break\n    case 'Pharmacy':\n      Pharmacy({ common, loa, dispatch })\n      break\n    case 'Dental':\n      Dental({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport CustomerCareService from 'Services/Api/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../AutoFill'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\n// Libraries\n\nconst { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } = actions\n\nexport default function BaseDetails (props) {\n  const defaultFunction = () => {}\n\n  const {\n    onChange,\n    onChangeReimbursementType = defaultFunction,\n    handleMemberAccountNumber,\n    claim,\n    errors,\n    disableControls,\n    showReimbursement = false,\n    showCompany = false,\n    // showContractRange = false,\n    showClaimSource = false,\n    showApprovalCode = true,\n    reqApprovalCode = false,\n    showLoaNumber = true,\n    reqLoaNumber = false,\n    isDental = false,\n    showMemberAccountNumber = true,\n    isCM = false\n  } = props\n\n  const dispatch = useDispatch()\n\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [contractPlanTypeLoading, setContractPlanTypeLoading] = React.useState(false)\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleLoaDetails = event => {\n    const value = event.target.value.trim()\n\n    if (value) {\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value }).then(res => {\n        const loa = res.data\n        if (loa) {\n          AutoFill({\n            loa,\n            claim_type,\n            claim\n          })\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getMemberContractPlanType({ account_number: member_id })\n      .then(res => {\n        const { data } = res.data\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: data.contract_plan_type }))\n      })\n      .catch(err => {\n        console.log(err.response)\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: '' }))\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getClientrContractPlanType({ account_number: corporate_account_no })\n      .then(res => {\n        const { data } = res.data\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: data.contract_plan_type }))\n      })\n      .catch(err => {\n        console.log(err.response)\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: '' }))\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {!isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes.input}>\n                <TextField\n                  id='approval-code'\n                  label='Approval Code'\n                  required={reqApprovalCode}\n                  value={claim.approval_code}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                  onBlur={handleLoaDetails}\n                  error={errors.approval_code}\n                />\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes.input}>\n                <TextField\n                  id='loa-number'\n                  label='LOA No.'\n                  required={reqLoaNumber}\n                  value={claim.loa_number}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                  error={errors.loa_number}\n                />\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  readOnly\n                />\n              </LoadingIndicator>\n            </div>\n\n            {showClaimSource && (\n              <div className={classes.input}>\n                <TextField\n                  id='claim-source'\n                  label='Claim Source'\n                  required\n                  value={claim.claim_source}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n                  error={errors.claim_source}\n                />\n              </div>\n            )}\n\n            {showReimbursement && (\n              <div className={classes.input}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                />\n              </div>\n            )}\n          </div>\n\n          {showCompany && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextField\n                  id='company-account-number'\n                  label='Customer Account Number'\n                  value={claim.client_account_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                  error={errors.client_account_number}\n                />\n                <div className={classes.search}>\n                  <Button\n                    id='client-account-number-search'\n                    variant='outlined'\n                    className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                    onClick={handleOnClickClientLookup}\n                  >\n                    <SearchIcon />\n                  </Button>\n                </div>\n              </div>\n              <div className={classes.input}>\n                <TextField\n                  id='company-name'\n                  label='Company Name'\n                  required\n                  value={claim.client_account_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                  error={errors.client_account_name}\n                />\n              </div>\n            </div>\n          )}\n\n          <div className={classes.groups}>\n            {showMemberAccountNumber && (\n              <div className={classes.input}>\n                <TextField\n                  id='member-account-number'\n                  required\n                  label='Member Account No.'\n                  value={claim.member_account_number}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_account_number',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_account_number}\n                />\n                <div className={classes.search}>\n                  <Button\n                    id='member-account-number-search'\n                    variant='outlined'\n                    className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                    onClick={handleOnClickMemberLookup}\n                  >\n                    <SearchIcon />\n                  </Button>\n                </div>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <TextField\n                id='member-last-name'\n                required\n                label='Member Last Name'\n                value={claim.member_last_name}\n                disabled={disableControls}\n                onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                error={errors.member_last_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                id='member-first-name'\n                required\n                label='Member First Name'\n                value={claim.member_first_name}\n                disabled={disableControls}\n                onChange={event =>\n                  onChange({\n                    field: 'member_first_name',\n                    value: event.target.value\n                  })\n                }\n                error={errors.member_first_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                id='member-middle-name'\n                label='Member Middle Name'\n                required={!!isDental}\n                value={claim.member_middle_name}\n                disabled={disableControls}\n                onChange={event =>\n                  onChange({\n                    field: 'member_middle_name',\n                    value: event.target.value\n                  })\n                }\n                error={errors.member_middle_name}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextField\n                id='client-account-number'\n                label='Client Account Number'\n                value={claim.client_account_number}\n                disabled={disableControls}\n                required\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'client_account_number'\n                    })\n                  )\n                }\n                error={errors.client_account_number}\n              />\n              <div className={classes.search}>\n                <Button\n                  id='client-account-number-search'\n                  variant='outlined'\n                  className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                  onClick={handleOnClickClientLookup}\n                >\n                  <SearchIcon />\n                </Button>\n              </div>\n            </div>\n            <div className={classes.input}>\n              <TextField\n                id='client-account-name'\n                label='Client Account Name'\n                value={claim.client_account_name}\n                disabled={disableControls}\n                required\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'client_account_name'\n                    })\n                  )\n                }\n                error={errors.client_account_name}\n              />\n            </div>\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  disabled\n                />\n              </LoadingIndicator>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <AutoFillInitializer />\n\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <div className={classes.actions} />\n\n        {/* <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary\n        </Typography> */}\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    givenDiag = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeGivenDiag,\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    errors = { description: '', code: '' },\n    onDeleteDiagnosis\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          <div className={classes.actions} />\n          <Typography variant='subtitle2' className={classes.description}>\n            Given Diagnosis *\n          </Typography>\n        </div>\n        <div className={classes['given-diagnosis']}>\n          <AutoComplete\n            id={`given-${id}`}\n            value={givenDiag}\n            suggestions={suggestions.given_diagnosis}\n            onChange={(value, isSuggestionClick) => onChangeGivenDiag({ value, isSuggestionClick })}\n            error={errors.given_diagnosis}\n          />\n        </div>\n        <div className={classes.header}>\n          <div className={classes.actions} />\n          <Typography variant='subtitle2' className={classes.description}>\n            ICD10 Description *\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.code}>\n            ICD10 Code *\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.primary}>\n            Primary\n          </Typography>\n        </div>\n        <div className={classes['sub-wrapper']}>\n          <div className={classes.actions}>\n            <IconButton id='delete-icd' onClick={() => setOpenDialog(true)}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          </div>\n\n          <Tooltip\n            onClose={() => setTooltipOpen(false)}\n            onOpen={handleTooltipOpen}\n            open={tooltipOpen}\n            title={description}\n          >\n            {/* {console.log('error ', errors)} */}\n            <div className={`${classes['description']}`}>\n              <AutoComplete\n                id={id}\n                value={description}\n                suggestions={suggestions.description}\n                onChange={(value, isSuggestionClick) => onChangeDescription({ value, isSuggestionClick })}\n                error={errors.description}\n              />\n            </div>\n          </Tooltip>\n\n          <div className={`${classes['code']}`}>\n            <AutoComplete\n              id={codeId}\n              value={code}\n              suggestions={suggestions.code}\n              onChange={(value, isSuggestionClick) => onChangeCode({ value, isSuggestionClick })}\n              error={errors.code}\n            />\n          </div>\n\n          <div className={classes.primary}>\n            <Radio color='primary' checked={primary} onClick={onChangePrimary} />\n          </div>\n        </div>\n      </div>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to delete this diagnosis?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={() => {\n          setOpenDialog(false)\n          onDeleteDiagnosis()\n        }}\n      />\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  addClaimDiagnosis,\n  addSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  removeSuggestionToArray,\n  resetSuggestionArray,\n  setSuggestionOnArray,\n  removeClaimDiagnosis\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, errors = [] } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const handleOnClickAddDiagnosis = () => {\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, isSuggestionClick, index } = args\n\n    dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      for (let i of suggestions.icd10[index].data) {\n        if (value === i[field]) {\n          dispatch(\n            setClaimDiagnosis({\n              index,\n              data: { description: i.description, code: i.code }\n            })\n          )\n          if (field === 'given_diagnosis') {\n            getIcd10Suggestions({ value, by: field, index, synonym: true })\n          }\n        }\n      }\n    } else getIcd10Suggestions({ value, by: field, index })\n\n    dispatch(resetSuggestionArray({ field: 'icd10', index }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const getIcd10Suggestions = ({ value, by, index, synonym = false }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          if (by === 'given_diagnosis') {\n            ClaimsEncodingServices.getICDSynonyms({ query: value }).then(res => {\n              const {data} = res.data\n              let _items = []\n              let _by = by\n              if (synonym) _by = 'description'\n              for (let d of data) _items.push(d[_by])\n              dispatch(\n                setSuggestionOnArray({\n                  field: 'icd10',\n                  index,\n                  by: _by,\n                  suggestion: _items,\n                  data\n                })\n              )\n            })\n          } else {\n            IcdCptStorageServices.lookups({\n              on: 'icd-10',\n              params: { query: value, by }\n            }).then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionOnArray({\n                  field: 'icd10',\n                  index,\n                  by,\n                  suggestion: _items,\n                  data\n                })\n              )\n            })\n          }\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n  }\n\n  React.useEffect(() => items && items.length === 0 && handleOnClickAddDiagnosis(), [])\n  return (\n    <div className={classes.groups}>\n      <div className={`${classes['diagnosis-list']} ${errors.error && classes['has-error']}`}>\n        <Typography variant='h6' className={classes.title}>\n          Diagnosis List\n        </Typography>\n        <ICDTextFields>\n          {items.map((item, index) => {\n            let error = null\n\n            try {\n              error = errors.items[index]\n            } catch (_error) {}\n\n            return (\n              <ICDTextField\n                key={`icd-${index}`}\n                id={`icd-description-${index}`}\n                codeId={`icd-code-${index}`}\n                errors={error || {}}\n                givenDiag={item.given_diagnosis}\n                description={item.description}\n                suggestions={suggestions.icd10[index]}\n                code={item.code}\n                primary={item.primary}\n                onChangeGivenDiag={args => handleOnChangeIcd10({ field: 'given_diagnosis', index, ...args })}\n                onChangeDescription={args => handleOnChangeIcd10({ field: 'description', index, ...args })}\n                onChangeCode={args => handleOnChangeIcd10({ field: 'code', index, ...args })}\n                onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                onDeleteDiagnosis={() => handleOnRemoveDiagnosis(index)}\n              />\n            )\n          })}\n        </ICDTextFields>\n\n        <Button\n          id='add-diagnosis-button'\n          className={classes['add-diagnosis-button']}\n          onClick={handleOnClickAddDiagnosis}\n        >\n          + Add a diagnosis\n        </Button>\n      </div>\n      {errors.error && <span className={classes.error}>{errors.list}</span>}\n    </div>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './CptTextField.module.scss'\n\nconst CptTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Procedure Details *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          CPT Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst CptTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    errors,\n    description = '',\n    code = '',\n    suggestions = [],\n    onChangeDescription,\n    onChangeCode = () => {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions.description}\n              onChange={onChangeDescription}\n              error={errors.description}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions.code}\n            onChange={onChangeCode}\n            error={errors.code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { CptTextFields, CptTextField }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function ProcedureForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthField = true, showPhilhealthRemarks = true, diagnosis, doValidate, errors } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const procedure = useSelector(({ ClaimsEncoding: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  // const [errorss, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('procedure.show', state => {\n      // setErrors({})\n      dispatch(setError({ procedure: { index: null, details: {} } }))\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = procedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProcedure({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnSaveProcedure = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: procedure.details })\n    dispatch(\n      setError({\n        procedure: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n    dispatch(addClaimProcedure(procedure.details))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: procedure.details })\n    dispatch(\n      setError({\n        procedure: { index, ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProcedure({ index, details: procedure.details }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setProcedure({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    procedure.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={`${classes.groups} ${classes.limit}`}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={procedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={`${classes.groups} ${classes.limit}`}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={procedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={procedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={procedure.details.description}\n                suggestions={suggestions.cpt}\n                code={procedure.details.code}\n                onChangeDescription={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    isSuggestionClick,\n                    selectedIndex\n                  })\n                }\n                onChangeCode={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                }\n                errors={errors}\n              />\n            </CptTextFields>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-gross-amount'\n                label='Gross Amount'\n                value={procedure.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-vat-amount'\n                label='VAT Amount'\n                value={procedure.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={procedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={procedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n              {showPhilhealthRemarks && (\n                <div className={classes.input}>\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProcedure}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='procedure-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProcedure({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProcedure(procedure.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='procedure-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this procedure?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProcedure(procedure.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './HospitalItemTextField.module.scss'\n\nconst HospitalItemTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Item Name *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          Item Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst HospitalItemTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    name = '',\n    item_code = '',\n    errors,\n    suggestions = [],\n    onChangeName,\n    onChangeCode = () => {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!name.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={name}>\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              required\n              value={name}\n              suggestions={suggestions.name}\n              onChange={onChangeName}\n              error={errors.name}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            required\n            value={item_code}\n            suggestions={suggestions.item_code}\n            onChange={onChangeCode}\n            error={errors.item_code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { HospitalItemTextFields, HospitalItemTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required()\n    .messages({\n      'string.empty': `\"Item Name\" is required.`\n    }),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required()\n    .messages({\n      'string.empty': `\"Item Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { HospitalItemTextFields, HospitalItemTextField } from '../HospitalItemTextField/HospitalItemTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport HospitalItemFormValidator from './HospitalItemFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n/// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setHospitalItem,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetSuggestionObject,\n  setSuggestionObject,\n  setError\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthRemarks = true, diagnosis, errors, doValidate } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const hospitalItem = useSelector(({ ClaimsEncoding: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('hospitalItem.show', state => {\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = hospitalItem.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeHospitalItem = ({ value, field, isSuggestionClick }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.hospitalItem.data) {\n        if (value === i[field]) {\n          dispatch(\n            setHospitalItem({\n              details: {\n                id: i.id,\n                name: i.name,\n                item_code: i.item_code\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'hospitalItem',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeHospitalForm = args => {\n    const { value, field } = args\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSaveHospitalItem = () => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    const _errors = doValidate({ data: hospitalItem.details })\n    dispatch(\n      setError({\n        hospital_item: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimHospitalItem(hospitalItem.details))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnUpdateHospitalItem = index => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    const _errors = doValidate({ data: hospitalItem.details })\n    dispatch(\n      setError({\n        hospital_item: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnRemoveHospitalItem = index => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    dispatch(removeClaimHospitalItem({ index }))\n    dispatch(setHospitalItem({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    hospitalItem.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={`${classes.groups} ${classes.limit}`}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={hospitalItem.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={`${classes.groups} ${classes.limit}`}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={hospitalItem.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={hospitalItem.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <HospitalItemTextFields>\n            <HospitalItemTextField\n              id='hospital-item-name'\n              codeId={`hospital-item-code`}\n              name={hospitalItem.details.name || ''}\n              item_code={hospitalItem.details.item_code || ''}\n              suggestions={suggestions.hospitalItem}\n              onChangeName={(value, isSuggestionClick) =>\n                handleOnChangeHospitalItem({ field: 'name', value, isSuggestionClick })\n              }\n              onChangeCode={(value, isSuggestionClick) =>\n                handleOnChangeHospitalItem({ field: 'item_code', value, isSuggestionClick })\n              }\n              errors={errors}\n            />\n          </HospitalItemTextFields>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-gross-amount'\n                label='Gross Amount'\n                value={hospitalItem.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-vat-amount'\n                label='VAT Amount'\n                value={hospitalItem.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='hospital-item-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={hospitalItem.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={hospitalItem.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={hospitalItem.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveHospitalItem}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='hospital-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setHospitalItem({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {hospitalItem.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateHospitalItem(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='hospital-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this hospital item?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveHospitalItem(hospitalItem.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required()\n    .messages({\n      'string.empty': `\"Medical Partner ID\" is required.`\n    }),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Name\" is required.`\n    }),\n  specialization: Joi.string()\n    .trim()\n    .label('Doctor Specialization')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Specialization\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProfessionalFeeFormValidator from './ProfessionalFeeFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProfessionalFee,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  resetSuggestionObject,\n  setSuggestionObject,\n  setError\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const { diagnosis, doValidate, errors } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const professionalFee = useSelector(({ ClaimsEncoding: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('professionalFee.show', state => {\n      dispatch(setError({ procedure: { index: null, details: {} } }))\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = professionalFee.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.pfDoctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                doctor_id: i.id,\n                doctor_name: i.full_name,\n                specialization: i.specialization.main + ', ' + i.specialization.major\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'pfDoctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Specialization\n  const handleOnChangeSpecialization = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.specialization.data) {\n        if (value === i.description) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                specialization: i.description\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'specialization' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'specialization' }))\n      getSpecializationSuggestions({ value, by: 'description' })\n    }\n  }\n\n  const getSpecializationSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getDoctorSpecilizations({ data: value }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'specialization',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeProfessionalFeeForm = args => {\n    const { value, field } = args\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnSaveProfessionalFee = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _errors = doValidate({ data: professionalFee.details })\n    dispatch(\n      setError({\n        professional_fee: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimProfessionalFee(professionalFee.details))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnUpdateProfessionalFee = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _errors = doValidate({ data: professionalFee.details })\n    dispatch(\n      setError({\n        professional_fee: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnRemoveProfessionalFee = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    dispatch(setProfessionalFee({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    professionalFee.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={`${classes.groups} ${classes.limit}`}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={professionalFee.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={`${classes.groups} ${classes.limit}`}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={professionalFee.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={professionalFee.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={`${classes.groups} `}>\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-medical-partner-id'\n                required\n                label='Medical Partner ID'\n                value={professionalFee.details.doctor_id || ''}\n                suggestions={pfSuggestions.pfDoctor.id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeDoctor({ field: 'doctor_id', value, isSuggestionClick })\n                }\n                error={errors.doctor_id}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-doctor-name'\n                required\n                label='Doctor Name'\n                value={professionalFee.details.doctor_name || ''}\n                suggestions={pfSuggestions.pfDoctor.full_name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeDoctor({ field: 'doctor_name', value, isSuggestionClick })\n                }\n                error={errors.doctor_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-specialization'\n                required\n                label='Specialization'\n                value={professionalFee.details.specialization || ''}\n                suggestions={pfSuggestions.specialization.description}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeSpecialization({ field: 'specialization', value, isSuggestionClick })\n                }\n                error={errors.specialization}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-gross-amount'\n                label='Gross Amount'\n                value={professionalFee.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-vat-amount'\n                label='VAT Amount'\n                value={professionalFee.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-amount-paid-by-member'\n                label='Amount Paid by Member'\n                value={professionalFee.details.amount_paid_by_member}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'amount_paid_by_member',\n                    value: event.target.value\n                  })\n                }\n                error={errors.amount_paid_by_member}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={professionalFee.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                multiline\n                rows={3}\n                id='philhealth-remarks'\n                label='PhilHealth Remarks'\n                value={professionalFee.details.philhealth_remarks}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_remarks',\n                    value: event.target.value\n                  })\n                }\n              />\n            </div>\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProfessionalFee}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='professional-fee-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProfessionalFee({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {professionalFee.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProfessionalFee(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='professional-fee-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this professional fee?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProfessionalFee(professionalFee.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProcedure, setProfessionalFee, setHospitalItem, resetSuggestionObject, setDentalProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, isDental = false } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    if (isDental) return dispatch(setDentalProcedure({ show: false }))\n\n    dispatch(setProcedure({ show: false }))\n  }, [])\n\n  const showProcedureForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n\n    if (isDental) {\n      dispatch(setDentalProcedure(params))\n    } else {\n      dispatch(setProcedure(params))\n    }\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.description} ${i.code} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProcedureForm({ show: true, mode: 'add' })}\n          >\n            + Add Procedure\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`procedure-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProcedureForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`procedure-row-description-${index}`}>{i.description}</td>\n                <td id={`procedure-row-code-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.code}\n                </td>\n                <td id={`procedure-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setHospitalItem, setProcedure, setDentalProcedure, setProfessionalFee, resetSuggestionObject } = actions\n\nexport default function HospitalItemList (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setHospitalItem({ show: false }))\n  }, [])\n\n  const showHospitalItemForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n    dispatch(setHospitalItem(params))\n\n    // TODO currently creating baseform\n    dispatch(setProcedure({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.name} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showHospitalItemForm({ show: true, mode: 'add' })}\n          >\n            + Add Items\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`hospital-item-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']} `}\n                onClick={showHospitalItemForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`hospital-item-row-name-${index}`}>{i.name}</td>\n                <td id={`hospital-item-row-code${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.item_code}\n                </td>\n                <td id={`hospital-item-row-amount${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProfessionalFee, setHospitalItem, setProcedure, setDentalProcedure, resetSuggestionObject } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data } = props\n\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setProfessionalFee({ show: false }))\n  }, [])\n\n  const showProfessionalFeeForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n    dispatch(setProfessionalFee(params))\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.doctor_name} ${i.specialization} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProfessionalFeeForm({ show: true, mode: 'add' })}\n          >\n            + Add Professional Fee\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`professional-fee-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProfessionalFeeForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`professional-fee-row-doctor-${index}`}>{i.doctor_name}</td>\n                <td id={`professional-fee-row-specialization-${index}`}>{i.specialization}</td>\n                <td id={`professional-fee-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data || ''}\n          onChange={event =>\n            dispatch(\n              setClaimBaseDetails({\n                value: event.target.value,\n                field: 'claim_remarks'\n              })\n            )\n          }\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\nexport default function ClaimFooter (props) {\n  const { handleOnSave, doValidate, setOpenDialog, openDialog, onOk, setShowReimbursementModal } = props\n\n  const doValidateMiddleware = () => {\n    if (doValidate()) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {setShowReimbursementModal && (\n        <Button\n          variant='contained'\n          color='primary'\n          id='save-for-now'\n          className='button-positive'\n          onClick={() => !doValidateMiddleware() && setShowReimbursementModal(true)}\n        >\n          Return\n        </Button>\n      )}\n\n      <Button\n        variant='contained'\n        color='primary'\n        id='save-for-now'\n        className='button-positive'\n        onClick={() => !doValidateMiddleware() && handleOnSave(true)}\n      >\n        Save for now\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        className='button-positive'\n        onClick={() => !doValidateMiddleware() && handleOnSave(false)}>\n        Save and Close\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        id='cancel'\n        className='button-negative'\n        onClick={() => setOpenDialog(true)}\n      >\n        Cancel\n      </Button>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to cancel?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={onOk}\n      />\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .allow('', null),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .allow('', null),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .default('')\n      .allow('', null),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .default('')\n      .allow('', null),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .default('')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .allow('', null),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .messages({ 'string.empty': `\"Claim Sub Type\" is required.` })\n      .required(),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n\n  const {\n    claim,\n    onChangeFacility,\n    getClaimDetails,\n    onChangePro,\n    apiService,\n    doValidateAll,\n    onSave,\n    doValidateProcedure,\n    doValidateHospitalItem,\n    doValidateProfessionalFee\n  } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0].rooms || []).map(room => ({\n              text: room.type,\n              value: room.type,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.desc,\n      rate: item.rate || 0\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Date Admitted'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Date Discharged'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='room-type'\n                  required\n                  label='Room Type'\n                  items={dropDown.rooms}\n                  value={claim.room_type}\n                  disabled={disableControls}\n                  onChange={handleOnChangeRoomType}\n                  error={errors.room_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='room-rate'\n                  required\n                  label='Room Rate'\n                  value={claim.room_rate}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'room_rate'\n                      })\n                    )\n                  }\n                  error={errors.room_rate}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  required\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  required\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm diagnosis={claim.diagnosis} errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm diagnosis={claim.diagnosis} errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n\n  const {\n    doValidateAll,\n    onSave,\n    doValidateProcedure,\n    doValidateProfessionalFee\n  } = props\n\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            department: data.department,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='department'\n                  label='Department'\n                  value={claim.department}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'department'\n                      })\n                    )\n                  }\n                  error={errors.department}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm diagnosis={claim.diagnosis} errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  const {\n    doValidateAll,\n    onSave,\n    doValidateProfessionalFee\n  } = props\n\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            recommendation: data.recommendation,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: (date).toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: (date).toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='recommendation'\n                  label='Recommendation'\n                  value={claim.recommendation}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'recommendation'\n                      })\n                    )\n                  }\n                  error={errors.recommendation}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails, onChangePro, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  required\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  required\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  required\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm diagnosis={claim.diagnosis} errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm diagnosis={claim.diagnosis} errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required(),\n  tooth_number: Joi.string()\n    .label('Tooth Number')\n    .required()\n    .messages({\n      'string.empty': `\"Tooth Number\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ToothNumber.module.scss'\n\nexport default function ToothNumber (props) {\n  const { label = '', readOnly, error, onChange, value = '', required = false } = props\n  return (\n    <div className={classes['root']}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {`${label} ${required ? '*' : ''}`}\n      </Typography>\n      <div>\n        <TextField value={value} id='tooth-number' onChange={onChange} readOnly={readOnly} error={error} />\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DentalProcedureFormValidator from './DentalProcedureFormValidator'\nimport ToothNumber from '../ToothNumber/ToothNumber'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './DentalProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setDentalProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function DentalProcedureForm (props) {  \n  const { showAmountPaidByMember = true, showPhilhealthField = true, showPhilhealthRemarks = true, diagnosis, doValidate, errors } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const dentalProcedure = useSelector(({ ClaimsEncoding: state }) => state.dentalProcedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('dentalProcedure.show', state => {\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = dentalProcedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setDentalProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setDentalProcedure({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setDentalProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnSaveProcedure = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: dentalProcedure.details })\n    dispatch(\n      setError({\n        procedure: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimProcedure(dentalProcedure.details))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: dentalProcedure.details })\n    dispatch(\n      setError({\n        procedure: { index, ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProcedure({ index, details: dentalProcedure.details }))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setDentalProcedure({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    dentalProcedure.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={`${classes.groups} ${classes.limit}`}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={dentalProcedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={`${classes.groups} ${classes.limit}`}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={dentalProcedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={dentalProcedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={dentalProcedure.details.description}\n                suggestions={suggestions.cpt}\n                code={dentalProcedure.details.code}\n                onChangeDescription={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    isSuggestionClick,\n                    selectedIndex\n                  })\n                }\n                onChangeCode={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                }\n                errors={errors}\n              />\n            </CptTextFields>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <ToothNumber\n                id='tooth-number'\n                label='Tooth Number'\n                required\n                value={dentalProcedure.details.tooth_number}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'tooth_number',\n                    value: event.target.value\n                  })\n                }\n                error={errors.tooth_number}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-gross-amount'\n                label='Gross Amount'\n                value={dentalProcedure.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-vat-amount'\n                label='VAT Amount'\n                value={dentalProcedure.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={dentalProcedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={dentalProcedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n              {showPhilhealthRemarks && (\n                <div className={classes.input}>\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={dentalProcedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {dentalProcedure.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProcedure}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='procedure-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setDentalProcedure({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n            {dentalProcedure.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProcedure(dentalProcedure.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='procedure-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this procedure?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProcedure(dentalProcedure.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\n// import ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport DentalChart from 'Pages/Protected/Claims/Components/DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\n// Libraries\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails } = props\n  const { doValidateAll, onSave, doValidateDentalProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_last_name: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.dental_procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n              isDental\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.chart}`}>\n              <DentalChart states={constructDentalStates(claim.procedures)} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <DentalProcedureForm\n                    errors={errors.procedure}\n                    doValidate={doValidateDentalProcedure}\n                    showPhilhealthField={false}\n                  />\n                  <HospitalItemForm errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, flag: true })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: data.date.to,\n            date_to: data.date.to,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            hospital_items: data.hospital_items || [],\n            loa_number: data.loa_number,\n            medicine_category: data.medicine_category,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            procedures: data.procedures || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.desc,\n      rate: item.rate || 0\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              reqLoaNumber\n              reqApprovalCode\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category'\n                  value={claim.medicine_category}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, getClaimDetails, onChangePro, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            claim_sub_type: data.claim_sub.type,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-id'\n                  required\n                  label='PRO/ECU Specialist ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-name'\n                  required\n                  label='PRO/ECU Specialist Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packages: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            ppe_packages: data.ppe_packages || [],\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              showMemberAccountNumber={false}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-from'\n                  required\n                  label='Date of Service (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(date)\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-to'\n                  required\n                  label='Date of Service (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>PPE Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initSuggestions } = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            claim_source: data.claim_source,\n            medicine_category: data.medicine_category,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.to,\n            date_to: data.date.to,\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.desc,\n      rate: item.rate || 0\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showClaimSource\n              reqApprovalCode\n              reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(date)\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category *'\n                  value={claim.medicine_category}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthRemarks={false} errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthField={false} showPhilhealthRemarks={false} errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .messages({ 'string.empty': `\"Approval Code\" is required.` })\n    .required(),\n  contract_plan_type: Joi.string()\n    .trim()\n    .allow('', null),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .messages({ 'string.empty': `\"LOA No.\" is required.` })\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  // Used initial for Dental, added here to bypass validation\n  flag: Joi.boolean().default(false),\n\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = fields => (data, type = false) => {\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport MainValidator from './ClaimMedicalSuppliesValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: new Date(data.date.to).toISOString(),\n            date_to: new Date(data.date.to).toISOString(),\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              reqApprovalCode\n              reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthField={false} showPhilhealthRemarks={false} errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const { claim, getClaimDetails } = props\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      contract_plan_type: '',\n      client_account_number: '',\n      client_account_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            contract_plan_type: data.contract_plan_type,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              isCM\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfo.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfo (props) {\n  const { show, setShowModal, handleOnSave, doReject, doViewClaimNotice = () => {}, service, lookup } = props\n  const {\n    batch_number,\n    member_last_name,\n    member_first_name,\n    member_middle_name,\n    reimbursement_info: data = []\n  } = props.claim\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [isModified, setIsModified] = React.useState(false)\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [showSaveAlert, setShowSaveAlert] = React.useState(false)\n  const [items, setItems] = React.useState([])\n  const [reasonDropdown, setReasonDropdown] = React.useState([])\n\n  React.useEffect(() => {\n    setItems(data)\n  }, [data])\n\n  React.useEffect(() => {\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n      })\n  }, [])\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnClickAdd = () => {\n    setShowAdd(true)\n\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  const handleOnClickSave = ({ item }) => {\n    setItems(items => {\n      const _items = [...items, item]\n      handleOnItemSave(_items)\n      return _items\n    })\n    setIsModified(true)\n    setShowAdd()\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    items[index] = item\n\n    setItems(items => {\n      let _items = items.map((_item, _index) => {\n        if (_index === index) _item = { ...item, show: false, showCell: false }\n        return _item\n      })\n      handleOnItemSave(_items)\n      return _items\n    })\n    setIsModified(true)\n  }\n\n  const handleOnClose = () => {\n    setShowModal(false)\n    setItems(items => {\n      return items.map((item, _index) => {\n        item.show = false\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          item.showCell = false\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n\n    handleOnSave(_items)\n  }\n\n  const handleOnClickPrintNotice = () => {\n    if (!isModified && items.length > 0) doViewClaimNotice({ goBack: false })\n    else setShowSaveAlert(true)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <ItemForm\n                      reasonDropdown={reasonDropdown}\n                      index={index}\n                      item={item}\n                      handleOnClickCancel={handleOnClickCancel}\n                      handleOnClickUpdate={handleOnClickUpdate}\n                      service={service}\n                      lookup={lookup}\n                      setReasonDropdown={setReasonDropdown}\n                    />\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <ItemForm\n                  index='add'\n                  reasonDropdown={reasonDropdown}\n                  item={{}}\n                  handleOnClickCancel={handleOnClickCancel}\n                  handleOnClickSave={handleOnClickSave}\n                  service={service}\n                  lookup={lookup}\n                  setReasonDropdown={setReasonDropdown}\n                />\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => setRejectModal(true)}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n          <Button variant='contained' color='primary' className='button-positive' onClick={handleOnClickPrintNotice}>\n            Print Notice\n          </Button>\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n\n      <Alert\n        open={showSaveAlert}\n        message='These records have been updated. Please save this Claim before proceeding with \"Print Notice\".'\n        okLabel='Yes'\n        onOk={() => {\n          setShowSaveAlert(false)\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n  const { index, item: _item, readOnly, reasonDropdown, service, lookup, setReasonDropdown } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction\n  } = props\n\n  const [item, setItem] = React.useState({})\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setItem({\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: today,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) {\n          item[field] = value\n          item.error = ''\n        }\n        return item\n      })\n    }))\n  }\n\n  const handleOnLookup = args => {\n    const { save = false, update = false } = args\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n        if (save || update) {\n          let hasError = false\n          const reasons = item.reasons\n          const tempReasons = []\n          reasons.map(reason => {\n            const existing = data.filter(i => i.reason === reason.value)\n            if (existing.length === 0) {\n              tempReasons.push({ ...reason, value: '', error: 'Please Input a Valid Reason' })\n              hasError = true\n            } else tempReasons.push(reason)\n          })\n          setItem({ ...item, reasons: tempReasons })\n          if (hasError) {\n            return false\n          }\n          if (save) handleOnClickSave({ index, item })\n          if (update) handleOnClickUpdate({ index, item })\n        }\n      })\n  }\n\n  const _handleOnClickUpdate = () => {\n    handleOnLookup({ update: true })\n  }\n\n  const _handleOnClickSave = () => {\n    handleOnLookup({ save: true })\n  }\n\n  return (\n    <TableRow key={`collapsible-${index}`}>\n      <TableCell colSpan={headCells.length} id={`collabsible-cell-${index}`} className={classes['collapsible-cell']}>\n        <div className={`${classes.container} ${!item.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n          <div className={classes.cell}>\n            <Typography variant='h6' className={classes.label}>\n              {index === 'add' ? 'Add Item' : 'Update Item'}\n            </Typography>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-created-${index}`}\n                  label='Date Created'\n                  value={item.date_created}\n                  onChange={date => handleOnChange({ field: 'date_created', value: date.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`prepared-by-${index}`}\n                  label='Prepared By'\n                  value={item.prepared_by || ''}\n                  onChange={event => handleOnChange({ field: 'prepared_by', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-encoded-${index}`}\n                  label='Date Encoded'\n                  value={item.date_encoded}\n                  onChange={date => handleOnChange({ field: 'date_encoded', value: date.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`released-to-${index}`}\n                  label='Released To'\n                  value={item.released_to || ''}\n                  onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-released-${index}`}\n                  label='Date Released'\n                  value={item.date_released}\n                  onChange={date => handleOnChange({ field: 'date_released', value: date.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`return-date-${index}`}\n                  label='Return Date'\n                  value={item.date_return}\n                  disableComponents\n                  onChange={date => handleOnChange({ field: 'date_return', value: date.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']} style={{ width: '50%' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1 }}\n                  multiline\n                  rows={3}\n                  id='remarks'\n                  label='Remarks'\n                  value={item.remarks || ''}\n                  onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n                />\n              </div>\n            </div>\n\n            <div className={classes['reasons-container']}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Reasons\n                </Typography>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Other Details\n                </Typography>\n\n                <div className={classes.delete} />\n              </div>\n\n              {/* Reasons */}\n              {(item.reasons || []).map((item, _index) => (\n                <div className={classes.reasons} key={`reason-${_index}`}>\n                  <div className={classes['input']} style={{ minWidth: '50%' }}>\n                    <DropDown\n                      items={reasonDropdown}\n                      id={`reason-text-${_index}`}\n                      value={item.value || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })\n                      }\n                      error={item.error}\n                    />\n                  </div>\n\n                  <div className={classes['input']} style={{ minWidth: '50%' }}>\n                    <TextField\n                      id={`reason-other-details-${_index}`}\n                      value={item.other_details || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                      }\n                    />\n                  </div>\n\n                  <div className={classes.delete}>\n                    <IconButton id='delete-reason'>\n                      <DeleteIcon fontSize='small' onClick={() => handleOnClickRemoveReason(_index)} />\n                    </IconButton>\n                  </div>\n                </div>\n              ))}\n\n              <Typography\n                variant='body2'\n                className={`${classes['add-link']} ${(item.reasons || []).length ? '' : classes['empty-reasons']}`}\n                onClick={() => handleOnClickAddReason()}\n              >\n                + Add a reason\n              </Typography>\n              {/* Reasons */}\n            </div>\n\n            <div className={classes.footer}>\n              {!readOnly && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    id='cancel'\n                    className='button-negative'\n                    onClick={() => handleOnClickCancel(index)}\n                  >\n                    Cancel\n                  </Button>\n                  {index === 'add' && (\n                    <React.Fragment>\n                      <Button\n                        variant='contained'\n                        color='primary'\n                        id='save-for-now'\n                        className='button-positive'\n                        onClick={_handleOnClickSave}\n                      >\n                        Save\n                      </Button>\n                    </React.Fragment>\n                  )}\n                  {index !== 'add' && (\n                    <React.Fragment>\n                      <Button\n                        variant='contained'\n                        color='primary'\n                        id='save-for-now'\n                        className='button-positive'\n                        onClick={_handleOnClickUpdate}\n                      >\n                        Update\n                      </Button>\n                    </React.Fragment>\n                  )}\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        </div>\n      </TableCell>\n    </TableRow>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst Dental = ['doctor_id', 'doctor_name', 'date_from', 'department']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n  let additional_fields = []\n\n  switch (type) {\n    case 'InPatient':\n      additional_fields = InPatient\n      break\n    case 'Dental':\n      additional_fields = Dental\n      break\n    default:\n      additional_fields = other_fields\n      break\n  }\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ReimbursementInfo from './../../../../ReimbursementInfo/ReimbursementInfo'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport AdditionalFields from './AdditionalFields'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setDentalProcedure,\n  setProfessionalFee,\n  setHospitalItem\n} = actions\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  const {\n    claim,\n    onChangeFacility,\n    getClaimDetails,\n    onChangeDoctor,\n    onChangePro,\n    apiService,\n    doViewClaimNotice = () => {}\n  } = props\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  const [type, setType] = React.useState('')\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      reimbursement_type: props.isAdd ? 'InPatient' : '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      diagnosis: [],\n      claim_remarks: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(props.isAdd ? 'InPatient' : undefined) })\n      setlineItemFields(_lineItemFields)\n      setInitialAllowedFields(_allowedFields)\n\n      const initial_values = {\n        ..._allowedFields,\n        ...AdditionalFields(props.isAdd ? 'InPatient' : undefined),\n        ..._lineItemFields\n      }\n\n      if (props.isAdd) initial_values['date_to'] = new Date().toISOString()\n\n      dispatch(setClaimFields({ ...initial_values }))\n\n      // if (result['date_to'] !== undefined)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        setType(data.reimbursement_details.type)\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0].rooms || []).map(room => ({\n              text: room.type,\n              value: room.type,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        let _claim = {\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          reimbursement_type: data.reimbursement_details.type,\n          member_account_number: data.member.account_number,\n          member_last_name: data.member.last_name,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          medicine_category: data.medicine_category,\n          reimbursement_category: data.reimbursement_details.category,\n          official_receipt_number: data.reimbursement_details.official_receipt_number,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          hospital_items: data.hospital_items || [],\n          reimbursement_info: data.reimbursement_info || [],\n          claim_remarks: data.claim_remarks\n        }\n\n        if (data.reimbursement_details.type === 'InPatient') {\n          _claim = {\n            ..._claim,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate || 0,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name\n          }\n        } else {\n          _claim = {\n            ..._claim,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            department: data.department\n          }\n        }\n\n        dispatch(setClaimFields(_claim))\n        setAllowedFields({\n          ..._allowedFields,\n          ...AdditionalFields(data.reimbursement_details.type)\n        })\n      })\n    }\n    setType(_allowedFields.reimbursement_type)\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.desc,\n      rate: item.rate || 0\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n    setType(value)\n    const _claim = Object.assign({}, claim)\n    if (value !== 'InPatient') {\n      console.log('not in patient', _claim)\n      delete _claim.pro_id\n      delete _claim.pro_name\n      delete _claim.room_rate\n      delete _claim.date_to\n      dispatch(setClaimFields(_claim))\n    }\n    if (value === 'InPatient') {\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          date_to: moment().toISOString()\n        })\n      )\n    } else if (value === 'Dental') {\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          reimbursement_type: 'Dental',\n          date_from: moment().toISOString(),\n          doctor_id: '',\n          doctor_name: ''\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  React.useEffect(() => {\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }, [type])\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showReimbursement\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              // handleMemberAccountNumber={type === 'Dental'}\n              // isDental={type === 'Dental'}\n            />\n\n            <div className={classes.wrap}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-id'\n                    label='Medical Partner ID'\n                    value={claim.doctor_id}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor.id}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangeDoctor({\n                        field: 'doctor_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.doctor_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-name'\n                    label='Medical Partner (Doctor) Name'\n                    value={claim.doctor_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor.full_name}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangeDoctor({\n                        field: 'doctor_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.doctor_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      disabled={disableControls}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(date)\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={errors.date_from}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      disabled={disableControls}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={errors.date_to}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && !(type === 'InPatient') && (\n                <div className={classes['input']}>\n                  <DatePicker\n                    id='date-of-service'\n                    required\n                    label='Date of Service'\n                    value={claim.date_from}\n                    disabled={disableControls}\n                    onChange={date => {\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: date.toISOString(),\n                          field: 'date_from'\n                        })\n                      )\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: date.toISOString(),\n                          field: 'date_to'\n                        })\n                      )\n                    }}\n                    error={errors.date_from}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'department') && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='department'\n                    label='Department'\n                    value={claim.department}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'department'\n                        })\n                      )\n                    }\n                    error={errors.department}\n                  />\n                </div>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <div className={classes['input']}>\n                  <DropDown\n                    id='room-type'\n                    required\n                    label='Room Type'\n                    items={dropDown.rooms}\n                    value={claim.room_type}\n                    disabled={disableControls}\n                    onChange={handleOnChangeRoomType}\n                    error={errors.room_type}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='room-rate'\n                    required\n                    label='Room Rate'\n                    value={claim.room_rate}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'room_rate'\n                        })\n                      )\n                    }\n                    error={errors.room_rate}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-id'\n                    required\n                    label='PRO ID'\n                    value={claim.pro_id}\n                    suggestions={suggestions.pro.id}\n                    disabled={disableControls}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangePro({\n                        field: 'pro_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-name'\n                    required\n                    label='PRO Name'\n                    value={claim.pro_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.pro.name}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangePro({\n                        field: 'pro_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.pro_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              <div className={classes['input']}>\n                <TextField\n                  id='official-receipt-number'\n                  label='Official Receipt Number'\n                  value={claim.official_receipt_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'official_receipt_number'\n                      })\n                    )\n                  }\n                  error={errors.official_receipt_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental={type === 'Dental'} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  {/* temporary dental proc  dental_procedure */}\n                  <DentalProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            setShowReimbursementModal={setShowReimbursementModal}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <ReimbursementInfo\n            claim={claim}\n            isAdd={props.isAdd}\n            doViewClaimNotice={doViewClaimNotice}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            service={apiService}\n            handleOnSave={reimbursement_info =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: reimbursement_info,\n                  field: 'reimbursement_info'\n                })\n              )\n            }\n            lookup={'return-reason'}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport ClaimTypes from '../../../Constant/ClaimTypes'\n\nexport default function GetClaimComponent (_props) {\n  const { _type, ...props } = _props\n\n  const SelectecClaimType = selected => {\n    const type = ClaimTypes[selected].other_name\n\n    switch (type) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        break\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string().trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string().trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  given_diagnosis: Joi.string().trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description, given_diagnosis: d.given_diagnosis }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code || i.description || i.given_diagnosis) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    // .less(Joi.ref('gross_amount'))\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Alert from 'SharedComponents/Alert/Alert'\n\nlet _setDialog = null\nlet _resolve = null\nconst SoftValidatorAlertComponent = () => {\n  const [dialog, setDialog] = React.useState({})\n\n  React.useState(() => {\n    setDialog(state => ({ ...state, show: false }))\n    _setDialog = setDialog\n  }, [])\n\n  const action = t => {\n    setDialog(state => ({ ...state, show: false }))\n    _resolve(t)\n  }\n\n  return (\n    <Alert\n      open={dialog.show}\n      message={dialog.message}\n      cancelLabel='No'\n      okLabel='Yes'\n      onCancel={() => action()}\n      onOk={() => action(true)}\n    />\n  )\n}\n\nconst SoftValidatorService = ({ fields = [] }) => {\n  const _fields = []\n\n  fields.map(i => {\n    const [key] = Object.keys(i)\n    if (!i[key].trim()) _fields.push(key)\n  })\n\n  if (!_fields.length) return true\n\n  let message = 'Missing'\n  const length = _fields.length\n\n  for (let i = 0; i < length; i++) {\n    if (i && i === length - 1) message = `${message} and`\n    else if (i && i < length - 1) message = `${message},`\n\n    message = `${message} ${_fields[i]}`\n  }\n\n  message = `${message}. Are you sure you want to proceed?`\n\n  return new Promise(resolve => {\n    _resolve = resolve\n    _setDialog({ show: true, message })\n  })\n}\n\nexport { SoftValidatorAlertComponent, SoftValidatorService }\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport GetClaimComponent from './GetClaimComponent'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Libraries\nimport moment from 'moment'\n// Validators\nimport DiagnosisListValidator from './Components/DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from './Components/HospitalItemForm/HospitalItemFormValidator'\nimport ProfessionalFeeValidator from './Components/ProfessionalFeeForm/ProfessionalFeeFormValidator'\nimport ProcedureValidator from './Components/ProcedureForm/ProcedureFormValidator'\nimport DentalProcedureValidator from './Components/DentalProcedureForm/DentalProcedureFormValidator'\nimport DentalProcedureDiagnosisValidator from './Components/DentalProcedureForm/DiagnosisValidator'\nimport ProcedureDiagnosisValidator from './Components/ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from './Components/HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from './Components/ProfessionalFeeForm/DiagnosisValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from './Components/BaseDetails/SoftValidator'\n\nconst {\n  resetClaim,\n  setGrandTotal,\n  setClaimType,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setClaimFacility,\n  setClaimDoctor,\n  setProcedure,\n  setDentalProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  setError,\n  resetError,\n  addSuggestionToArray,\n  resetGrandTotal,\n  setClaimPro\n} = actions\n\nexport default function ClaimPage (props) {\n  const { apiService } = props\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsEncoding: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const error = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const getBatchDetails = ({ _batchNumber }) => {\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      dispatch(setClaimType(data.claim.type))\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    dispatch(resetError())\n    LoadingService.loading(true)\n    const { _batchNumber, _claimNumber } = props.match.params\n\n    let pageTitle = ''\n    let breadCrumbs = ['dashboard', 'batches', `specificBatch:${_batchNumber}`]\n    if (props.isAdd) {\n      pageTitle = 'Add new claim'\n      breadCrumbs = [...breadCrumbs, 'addClaim']\n    } else {\n      pageTitle = `Update Claim No. ${_claimNumber}`\n      breadCrumbs = [...breadCrumbs, 'updateClaim']\n    }\n\n    PageTitleService(pageTitle)\n    BreadcrumbsService.setSelectedItems(breadCrumbs)\n    getBatchDetails({ _batchNumber })\n\n    return () => {\n      dispatch(setClaimType(''))\n      dispatch(resetClaim())\n      dispatch(resetGrandTotal())\n    }\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    dispatch(setGrandTotal(grand))\n  }, [claim])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const getClaimDetails = callback => {\n    const { _batchNumber, _claimNumber } = props.match.params\n    apiService\n      .getClaim({\n        batch_number: _batchNumber,\n        claim_number: _claimNumber\n      })\n      .then(res => {\n        const { data } = res.data\n        // Set Diagnosis Suggestions\n        const { diagnosis = [] } = data\n        diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n\n        callback(data)\n      })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimFacility({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          dispatch(setClaimFacility({ facility_id: i.id, facility_name: i.name }))\n          dispatch(resetSuggestionObject({ field: 'facility' }))\n          return i.rooms\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'facility' }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'medical-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionObject({\n                  field: 'facility',\n                  suggestion: { [by]: _items, data }\n                })\n              )\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionObject({\n                  field: 'doctor',\n                  suggestion: { [by]: _items, data }\n                })\n              )\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimPro({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.pro.data) {\n        if (value === i.employee_id || value === i.name) {\n          dispatch(setClaimPro({ pro_name: i.name, pro_id: i.employee_id }))\n          dispatch(resetSuggestionObject({ field: 'pro' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // PRO User lookup\n          CustomerCareServices.proUsersLookup({ value, field }).then(res => {\n            // limit temporary - no limit in api seer\n            const limit = []\n            for (let i = 0; i < 10; i++) {\n              if (!res.data.data[i]) break\n              limit.push(res.data.data[i])\n            }\n\n            const data = limit.map(elem => {\n              let full_name = `${elem.first_name} ${elem.last_name}`\n              delete elem.first_name\n              delete elem.last_name\n              return { ...elem, name: full_name }\n            })\n\n            let _items = []\n\n            if (field === 'pro_id') {\n              for (let d of data) {\n                _items.push(d[`employee_${field.split('_')[1]}`])\n              }\n            } else {\n              for (let d of data) {\n                _items.push(d['name'])\n              }\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'pro',\n                suggestion: { [`${field.split('_')[1]}`]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.anesthesiologist.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ anesthesiologist_id: i.id, anesthesiologist_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by })\n    }\n  }\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionObject({\n                  field: 'anesthesiologist',\n                  suggestion: { [by]: _items, data }\n                })\n              )\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Report: Claim Notice\n  const handleOnViewClaimNotice = mode => {\n    LoadingService.loading(true)\n    const { _claimNumber } = props.match.params\n    const pdf = {\n      name: 'Claims Notice',\n      fileName: 'claim_notice',\n      service: apiService.getLetterNotice({ claim_number: _claimNumber })\n    }\n    PdfViewer2Service({ ...pdf, open: true })\n    LoadingService.loading(false)\n  }\n\n  // Validation\n  const doValidateAll = ({ validator, field = undefined, flag = false }) => {\n    dispatch(resetError())\n    const base_errors = doValidateBase({ claim, validator: validator, field, flag })\n    let diagnosis = {}\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n    if (claim.diagnosis) {\n      diagnosis = doValidateDiagnosis({ diagnosis: claim.diagnosis })\n    }\n\n    if (claim.procedures) {\n      for (const [index, value] of claim.procedures.entries()) {\n        if (flag) {\n          const error = doValidateDentalProcedure({ data: value, index, flag })\n          if (Object.keys(error).length > 0) {\n            procedure = { index, ...error }\n            // AUTO OPEN CLAIM\n            dispatch(\n              setDentalProcedure({\n                show: true,\n                mode: 'edit',\n                index,\n                details: value\n              })\n            )\n            break\n          }\n        } else {\n          const error = doValidateProcedure({ data: value, index })\n          if (Object.keys(error).length > 0) {\n            procedure = { index, ...error }\n            // AUTO OPEN CLAIM\n            dispatch(\n              setProcedure({\n                show: true,\n                mode: 'edit',\n                index,\n                details: value\n              })\n            )\n            break\n          }\n        }\n      }\n    }\n    if (claim.hospital_items) {\n      for (const [index, value] of claim.hospital_items.entries()) {\n        const error = doValidateHospitalItem({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          hospital_item = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setHospitalItem({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n    if (claim.professional_fees) {\n      for (const [index, value] of claim.professional_fees.entries()) {\n        const error = doValidateProfessionalFee({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          professional_fee = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProfessionalFee({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    return invalid\n  }\n\n  const doValidateBase = ({ claim, validator, field, flag }) => {\n    const data = {}\n    const {\n      diagnosis,\n      procedures,\n      hospital_items,\n      professional_fees,\n      reimbursement_info,\n      reimbursement_info_analysts,\n      ppe_packages,\n      ...rest\n    } = claim\n    for (let f in rest) data[f] = claim[f]\n    let _fields = {}\n    if (field) _fields = { ...field, flag }\n    else _fields = { ...claim, flag }\n    const { error = {} } = validator(Object.keys(_fields))({ ...data, flag })\n    dispatch(\n      setError({\n        ...error\n      })\n    )\n    return error\n  }\n\n  const doValidateDiagnosis = ({ diagnosis }) => {\n    const error = DiagnosisListValidator(diagnosis)\n    dispatch(\n      setError({\n        diagnosis: error\n      })\n    )\n    return error\n  }\n\n  const doValidateDentalProcedure = ({ data, index }) => {\n    const { error } = DentalProcedureValidator({\n      description: data.description,\n      code: data.code.toString(),\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid,\n      tooth_number: data.tooth_number\n    })\n\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setDentalProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = DentalProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, ...error, ...diagnosisError.error }\n      })\n    )\n\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProcedure = ({ data, index }) => {\n    const { error } = ProcedureValidator({\n      description: data.description,\n      code: data.code.toString(),\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, ...error, ...diagnosisError.error }\n      })\n    )\n\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ data, index }) => {\n    const { error } = HospitalItemValidator({\n      name: data.name,\n      item_code: data.item_code.toString(),\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        hospital_item: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ data, index }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name,\n      specialization: data.specialization,\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n    dispatch(\n      setError({\n        professional_fee: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const handleOnSave = async ({ lineItemFields, allowedFields, goBack = true }) => {\n    const { _batchNumber, _claimNumber } = props.match.params\n    const claimFields = Object.keys(allowedFields)\n\n    if (claimFields.includes('approval_code') && claimFields.includes('loa_number')) {\n      const proceed = await SoftValidatorService({\n        fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n      })\n      if (!proceed) return\n    }\n\n    LoadingService.loading(true)\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (!data.date_to) data.date_to = moment().toISOString()\n\n    if (props.isAdd) {\n      apiService.addClaim({ batch_number: _batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${_batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      apiService.updateClaim({ batch_number: _batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${_batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n  React.useEffect(() => {\n    if (error) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [error])\n  return (\n    <React.Fragment>\n      {claim_type && (\n        <GetClaimComponent\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n          onSave={handleOnSave}\n          onChangePro={handleOnChangePro}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          doViewClaimNotice={handleOnViewClaimNotice}\n          doValidateAll={doValidateAll}\n          doValidateDiagnosis={doValidateDiagnosis}\n          doValidateProcedure={doValidateProcedure}\n          doValidateDentalProcedure={doValidateDentalProcedure}\n          doValidateHospitalItem={doValidateHospitalItem}\n          doValidateProfessionalFee={doValidateProfessionalFee}\n        />\n      )}\n      <SoftValidatorAlertComponent />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder\nimport Dashboard from './../Components/ClaimsDetailsEncoder/Dashboard/Dashboard'\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\nconst columns = [\n  { id: 's-encoder-name', name: ' Encoder Name', sortField: 'username', match: 'any' },\n  { id: 's-total-batches', name: ' Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'any' }\n]\nconst ClaimsEncoderTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    getEncoders()\n  }, [])\n\n  const getEncoders = () => {\n    services\n      .getEncodersBatches({ limit: 10, sort: 'name|asc' })\n      .then(res => {\n        const { results, total_count } = res.data.data\n        setBatches(state => ({ ...state, count: total_count, data: results }))\n      })\n      .catch(err => {\n        console.error(err)\n        setBatches(state => ({ ...state, count: 0, data: [] }))\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    setViewList({ ...initialValue, show: true, title: startCase(`${category} Batches`), category })\n    services.getEncodersBatches({ page: 1, limit: 10, sort: 'name|asc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n    services.getEncodersBatches({ ..._params }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-encoder'\n        count={{ color: 3, value: batches.count, id: 'claims-encoder-count' }}\n        isFilterShown={false}\n        title='Claims Encoder'\n        sizes={sizes}\n        viewList={\n          <Typography\n            id='ob-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('claim-encoder')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={() => {}}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`ces-${item.id}`} id={`ces-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`ces-encoder-name-${index}`}>{item.username}</TableCell>\n                <TableCell id={`ces-total-batches-${index}`}>{item.total_batches}</TableCell>\n                <TableCell id={`ces-total-rcs-${index}`}>{item.total_rcs}</TableCell>\n                <TableCell>\n                  <Link to={`/batches/assigned/${item.id}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-encoder'\n        columns={columns}\n        searchTextPlaceHolder='Search for Encoder Name, Total Bundles or Total Batches'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.id}>\n              <TableCell id={`batch-number-${index}`}>{item.username}</TableCell>\n              <TableCell id={`date-received-${index}`}>{item.total_batches}</TableCell>\n              <TableCell id={`due-date-${index}`}>{item.total_rcs}</TableCell>\n              <TableCell id={`view-encoder-${index}`}>\n                <Link to={`/batches/assigned/${item.id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsEncoderTile\n","import instance from '../instance'\n// import ClaimsEncodingServices from '../ClaimsEncodingServices'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ces')\n\nexport default class ClaimsEncoderSupervisorServices {\n  static getEncodersBatches (params) {\n    return axios({\n      url: `/batches/encoders`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatches (params) {\n    return axios({\n      url: `/batches/encoders/assigned`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatch (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderClaims (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign (params) {\n    return axios({\n      url: `/batches/encoders/reassign`,\n      method: 'POST',\n      params\n    })\n  }\n\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={`${classes.tiles} ${classes.row}`} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 8 }} title='Claims Encoding'>\n            <OpenBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n\n          <Grid item className={classes['task-tray-monitor']}>\n            <TaskTray sizes={{ xs: 8 }} title='Items to Monitor'>\n              <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            </TaskTray>\n          </Grid>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell id='cvs-ticket-no'>Ticket #</TableCell>\n                      <TableCell id='cvs-date'>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell id={`cvs-ticket-no-${index}`}>2334324343</TableCell>\n                        <TableCell id={`cvs-date-${index}`}>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nconst { setReassignAssignee, setReassignNotes } = actions\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n  const dispatch = useDispatch()\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => dispatch(setReassignNotes(event.target.value))}\n                // onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.assignee.id}\n                  // onChange={event =>\n                  //   dispatch(\n                  //     setEscalationAssignee({\n                  //       id: event.target.value,\n                  //       name: event.target.value\n                  //     })\n                  //   )\n                  // }\n                  onChange={event => {\n                    dispatch(\n                      setReassignAssignee({\n                        id: event.target.value,\n                        name: event.target.value\n                      })\n                    )\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n          {/*\n          <DialogActions>\n            <Button\n              onClick={() => setDialog(false)}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-negative'\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {}}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-positive'\n            >\n              Submit\n            </Button>\n          </DialogActions> */}\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign SOA to Claim Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the SOA to the selected Claim Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This SOA will be sent to the assigned Claim Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign()\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// lodash\nimport { sortBy } from 'lodash'\n\n// Component\nimport AssignDialog from '../AssignDialog/AssignDialog'\n\nconst { resetReassign, setReassignNotes } = actions\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmitReassign = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    UserManagementServices = () => {},\n    count,\n    _id = ''\n  } = props\n\n  const dispatch = useDispatch()\n  // const [count, setCount] = React.useState(0)\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  // const reassign = useSelector(({ClaimsEncoding: state}) =>  state.reassign)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  const initDropdownUsers = async ({ roles }) => {\n    UserManagementServices.getUsersByRole(roles).then(({ data = [] }) => {\n      let users = data\n        .map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n        .filter(i => i.value !== _id)\n\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  // const handleOnsubmitReassign = (batches, user_id) => {\n  //   console.log(batches)\n  //   console.log(user_id)\n  // }\n\n  const handleOnOpenDialog = () => {\n    if (count === 0) return\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: 'CLAIMS_DETAILS_ENCODER' })\n    // setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignNotes(''))\n    // setReassignModal(state => ({ ...state, dialog: true }))\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography variant='subtitle2'>Total Batches Selected: {count} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                disabled={count < 1}\n                color='primary'\n                id='btn-assign'\n                className='button-positive'\n                onClick={() => handleOnOpenDialog()}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='btn-cancel'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitReassign}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Paper from '@material-ui/core/Paper'\n\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\n\n// Styles\nimport classes from './CreatedBatchesPage.module.scss'\n\nexport default function CreatedBatchesPage (props) {\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const [headcell, setHeadCell] = React.useState([\n    { id: 's-batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'date.received', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'date.due', match: 'date' },\n    { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'number' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n  ])\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    // data: [],\n    filter: {},\n    orderBy: 'batch_number',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  }\n\n  // const [viewList, setViewList] = React.useState(initialValue)\n\n  const [batch, setBatch] = React.useState({})\n  const [batches, setBatches] = React.useState(initialValue)\n  const [id, setId] = React.useState(null)\n  const [selected, setSelected] = React.useState({ batch_numbers: [] })\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Created Batches')\n    BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${props.match.params._id}`])\n    LoadingService.loading(true)\n\n    const _id = props.match.params._id\n    getBatches(batches)\n    setId(_id)\n  }, [props.match.params.id])\n\n  const getBatches = params => {\n    ClaimsEncoderSupervisorServices.getEncoderBatches({\n      id: props.match.params._id,\n      search: params.search,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      filter: params.filter,\n      limit: params.limit\n    })\n      .then(res => {\n        const { results = [], count, limit, page } = res.data.data\n        setBatches(state => ({ ...state, count, limit, page }))\n\n        const data = results.map(batch => ({ ...batch, checked: false }))\n\n        // if (data) setSelectStatus(false)\n        setSelected({ batch_numbers: [] })\n        setBatch({\n          data: data,\n          loading: false,\n          indeterminate: undefined,\n          checked: undefined\n        })\n        LoadingService.loading(false)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }\n\n  const handleSelectAll = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.checked = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleItemSelect = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.checked = !i.checked\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.checked) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n\n    setSelected({ batch_numbers: batchNumbers })\n  }\n\n  const handleOnCancel = () => {\n    let _data = batch.data.map(i => ({ ...i, checked: false }))\n\n    setBatch(state => ({ ...state, data: _data, checked: false, indeterminate: undefined }))\n    setSelectStatus(false)\n    setSelected({ batch_numbers: [] })\n  }\n\n  const handleOnSubmitReassign = () => {\n    LoadingService.loading(true)\n    ClaimsEncoderSupervisorServices.reassign({\n      selected: selected.batch_numbers,\n      id: reassign.assignee.id,\n      notes: reassign.note,\n      prev_user: id\n    }).then(() => {\n      setSelected({ batch_numbers: [] })\n      getBatches(batches)\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnSearchAllChange = args => {\n    getBatches({ ...batches, ...args })\n  }\n\n  const handleOnSearch = args => {\n    const _params = {\n      limit: batches.limit,\n      page: batches.page,\n      search: batches.search,\n      sort: `${batches.orderBy}|${batches.order ? 'desc' : 'asc'}`,\n      filter: batches.filter,\n      ...args\n    }\n    getBatches(_params)\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...batches,\n      ...args\n    }\n    setBatches(state => ({ ...state, ...args }))\n    getBatches(params)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox\n                color='default'\n                indeterminate={!!batch.indeterminate}\n                checked={!!batch.checked}\n                onClick={event => handleSelectAll()}\n              />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={batches.orderBy === headCell.sortField}\n                direction={batches.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !batches.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              <TextField\n                id={`column-filter-${headCell.id}`}\n                // className={`${classes.search}`}\n                TextFieldStyle={{ margin: 0 }}\n                fullWidth\n                onChange={event => {\n                  const search = event.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      setBatches(p => ({ ...p, filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                      handleOnSearch({ filter: { ...batches.filter, [headCell.sortField]: { value: search, match: headCell.match } }, page: 1 })\n                    }, 500)\n                  )\n                }}\n              />\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return batch.data\n        ? batch.data.map((row, index) => (\n          <TableRow key={index}>\n            {selectStatus ? (\n              <TableCell padding='checkbox'>\n                <Checkbox\n                  checked={row.checked}\n                  color='default'\n                  onClick={event => handleItemSelect({ index, batch })}\n                />\n              </TableCell>\n            ) : null}\n            <TableCell id={`batch-number-${index}`}>{row.batch_number}</TableCell>\n            <TableCell id={`date-received-${index}`}>{DateFormatter(row.date_received)}</TableCell>\n            <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n            <TableCell align='center' id={`total-rcs-${index}`}>\n              {row.total_rcs}\n            </TableCell>\n            <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n            <TableCell id={`view-encoder-${index}`}>\n              <Typography\n                variant='caption'\n                className='text-link underline'\n                onClick={() => props.history.push(`/batches/assigned/${id}/${row.batch_number}`)}\n              >\n                  View\n              </Typography>\n            </TableCell>\n          </TableRow>\n        ))\n        : null\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                id='reassign-btn'\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => {\n                  const search = e.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      handleOnSearchAllChange({ search, page: 1 })\n                      setBatches(state => ({ ...state, search }))\n                    }, 500)\n                  )\n                }}\n                placeholder='Search for batch number, date or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={batches.count}\n              page={batches.page}\n              limit={batches.limit}\n              pagination\n              rowsPerPageOptions={batches.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            count={selected.batch_numbers.length ? selected.batch_numbers.length : 0}\n            handleOnSubmitReassign={handleOnSubmitReassign}\n            UserManagementServices={UserManagementServices}\n            handleOnCancel={() => handleOnCancel()}\n            handleOnClose={() => props.history.push(`/`)}\n            _id={id}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails (props) {\n  const { details = {} } = props\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const { count, inputChange = null } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims ({count})</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({ items, type, pagination, setPagination }) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  React.useEffect(() => {\n    setClaims({\n      data: items\n    })\n  }, [items])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleItemClick = index => {}\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        handleRequestSort={handleRequestSort}\n        pagination={pagination}\n        rowsLength={rows.length}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow tabIndex={-1} key={row.claim_number}>\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code}\n                </TableCell>\n                <TableCell\n                  id={`member-name-${index}`}\n                  onClick={() => handleItemClick(index)}\n                >{`${row.member.first_name} ${row.member.last_name}`}</TableCell>\n                <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.member.account_number}\n                </TableCell>\n\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ProviderSchedule from '../../../ClaimsDetailsEncoder/Components/ProviderSchedule/ProviderSchedule'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [debounce, setDebounce] = React.useState(null)\n  const [id, setId] = React.useState()\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const getClaimsAndCount = ({ batch_number }) => {\n    ClaimsEncoderSupervisorServices.getClaims({\n      batch_number,\n      params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n    }).then(res => {\n      const { results, count, page, limit } = res.data.data\n      setClaims(results)\n      setClaimCount(count)\n      setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n    })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const batch_number = props.match.params._batchNumber\n    const _id = props.match.params._id\n    setId(_id)\n    setBatchNumber(batch_number)\n\n    ClaimsEncoderSupervisorServices.getEncoderBatch({ id: _id }, batch_number).then(res => {\n      const { data } = res.data\n\n      setDetails(data)\n      LoadingService.loading(false)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${_id}`, `specificBatch:${batch_number}`])\n\n      PageTitleService(`Batch No. ${batch_number}`, {\n        text: 'In Progress',\n        color: 'blue'\n      })\n\n      getClaimsAndCount({ batch_number: batch_number })\n    })\n  }, [props.match.params._batchNumber, props.match.params._id])\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader inputChange={handleSearchChange} count={claimCount} />\n          <ClaimList pagination={pagination} setPagination={setPagination} items={claims} type={details.claim.type} />\n\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push(`/batches/assigned/${id}`)}\n              >\n                Close\n              </Button>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder Supervisor\nimport Dashboard from './../Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Details Encoder\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'latest.date.due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'latest.facility.name', match: 'any' }\n]\n\nconst ForAdjudicationTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({\n    open: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'open',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'open' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, open: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnAnalyze = claim_number => {\n    services.assignClaim({ claim_number }).then(({ data: res }) => {\n      props.history.push(`/claims/${claim_number}/analyze`)\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-adjudication'\n        count={{ color: 3, value: claims.open.count, id: 'for-adjudication-count' }}\n        sizes={sizes}\n        title='For Adjudication'\n        viewList={\n          <Typography\n            id='fa-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('open')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('open')}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='fa-claim-no'>Claim No.</TableCell>\n              <TableCell id='fa-due-date'>Due Date</TableCell>\n              <TableCell id='fa-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.open.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  {/* { item.claim_number.startsWith('IP') && */}\n                  <Typography\n                    id={`analyze-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnAnalyze(item.claim_number)}\n                  >\n                    Analyze\n                  </Typography>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList2\n        id='for-adjudication'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`analyze-cell-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  id={`analyze-claim-${index}`}\n                  onClick={() => {\n                    handleOnAnalyze(item.claim_number)\n                  }}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForAdjudicationTile.displayName = 'DashboardTileComponent'\n\nexport default ForAdjudicationTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'latest.date.due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'latest.facility.name', match: 'any' }\n]\n\nconst MyClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    my: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'my',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'my' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, my: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-claims'\n        count={{ color: 3, value: claims.my.count, id: 'my-claims-count' }}\n        sizes={sizes}\n        title='My Claims'\n        viewList={\n          <Typography\n            id='mc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('my')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('my')}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='mc-claim-no'>Claim No.</TableCell>\n              <TableCell id='mc-due-date'>Due Date</TableCell>\n              <TableCell id='mc-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.my.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`mc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`mc-facility-name${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  {/* { item.claim_number.startsWith('IP') && */}\n                  <Link to={`/claims/${item.claim_number}/analyze`}>\n                    <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                      Update\n                    </Typography>\n                  </Link>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList2\n        id='my-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`update-cell-${index}`}>\n                <Link to={`/claims/${item.claim_number}/analyze`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-claim-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default MyClaimsTile\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\nimport PrintIcon from '@material-ui/icons/Print'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'latest.claim_number' },\n  { id: 'due-date', name: ' Due Date', sortField: 'latest.date.due' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ id, viewList, setViewList, onViewListChange, onItemClick }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      id={id}\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent id={`${id}-body`} dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          id={`${id}-table`}\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow id={`${id}-header`}>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell\n                id={\n                  category === 'open'\n                    ? `analyze-claim-${index}`\n                    : category === 'my'\n                    ? `update-claim-${index}`\n                    : category === 'submitted'\n                    ? `print-${index}`\n                    : `update-esc-claim-${index}`\n                }\n              >\n                {category === 'submitted' && (\n                  <React.Fragment>\n                    <IconButton\n                      id={`print-${index}`}\n                      aria-label='more'\n                      aria-controls='long-menu'\n                      aria-haspopup='true'\n                      onClick={event =>\n                        onItemClick({ category, claim_number: row.claim_number, event: event, claim: row })\n                      }\n                    >\n                      <PrintIcon />\n                    </IconButton>\n                  </React.Fragment>\n                )}\n\n                {category !== 'submitted' && (\n                  <Typography\n                    variant='caption'\n                    className='text-link underline'\n                    onClick={() => onItemClick({ category, claim_number: row.claim_number })}\n                  >\n                    {category === 'open' && 'Analyze'}\n                    {category === 'my' && 'Update'}\n                    {category === 'escalated' && 'Update'}\n                  </Typography>\n                )}\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Print from '@material-ui/icons/Print'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst SubmittedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claimNumber, setClaimNumber] = React.useState(false)\n  const [claimType, setClaimType] = React.useState(null)\n  const [disableLoaButton, setDisableLoaButton] = React.useState(false)\n  const ITEM_HEIGHT = 48\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const open = Boolean(anchorEl)\n\n  function handleClickSubmitted (event, claim) {\n    setAnchorEl(event.currentTarget)\n    setClaimNumber(claim.claim_number)\n    setClaimType(claim._type)\n    setDisableLoaButton(!claim.has_amount_concerns)\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const [claims, setClaims] = React.useState({\n    submitted: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, submitted: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    handleClickSubmitted(event, claim)\n  }\n\n  const handleOnShowPdf = ({ claim_number, type }) => {\n    setAnchorEl()\n\n    let pdf = {}\n\n    switch (type) {\n      case 'letter_of_advice':\n        pdf = {\n          name: 'Letter of Advice',\n          service: services.getLetterOfAdvice({ claimNo: claim_number })\n        }\n        break\n\n      case 'analysis_sheet':\n        pdf = {\n          name: 'Analysis Sheet',\n          service: services.getAnalysisSheet({ claimNo: claim_number })\n        }\n\n        break\n\n      case 'notice':\n        pdf = {\n          name: 'Claim Notice',\n          service: services.getLetterNotice({ claimNo: claim_number })\n        }\n        break\n    }\n\n    PdfViewer2Service({ ...pdf, open: true, fileName: type })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-claims'\n        count={{ color: 5, value: claims.submitted.count, id: 'submitted-claims-count' }}\n        sizes={sizes}\n        title='Submitted Claims'\n        viewList={\n          <Typography\n            id='sc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('submitted')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('submitted')}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='sc-claim-no'>Claim No.</TableCell>\n              <TableCell id='sc-due-date'>Due Date</TableCell>\n              <TableCell id='sc-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.submitted.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`sc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`sc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`sc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <IconButton\n                    id={`print${index}`}\n                    aria-label='more'\n                    aria-controls='long-menu'\n                    aria-haspopup='true'\n                    onClick={e => handleClickSubmitted(e, item)}\n                  >\n                    <Print />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n            <Menu\n              id='long-menu'\n              anchorEl={anchorEl}\n              keepMounted\n              open={open}\n              onClose={handleClose}\n              style={{\n                zIndex: 1310\n              }}\n              PaperProps={{\n                style: {\n                  maxHeight: ITEM_HEIGHT * 4.5,\n                  width: claimType === 'Reimbursement' ? 280 : 200\n                }\n              }}\n            >\n              <MenuItem onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'analysis_sheet' })}>\n                {claimType === 'Reimbursement' ? 'Approved Reimbursement Letter' : 'Analysis Sheet'}\n              </MenuItem>\n              {/* {disableLoaButton ? ( */}\n              <MenuItem\n                disabled={disableLoaButton}\n                onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'letter_of_advice' })}\n              >\n                {claimType === 'Reimbursement' ? 'Rejected Reimbursement Letter' : 'Letter Of Advice'}\n              </MenuItem>\n            </Menu>\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-claims'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedClaimsTile.displayName = 'DashboardTileComponent'\nexport default SubmittedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ReturnedEscalatedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    escalated: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'escalated',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'escalated' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, escalated: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Returned Escalated Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    props.history.push(`/claims/${claim_number}/analyze`)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='returned-escalated'\n        count={{ color: 3, value: claims.escalated.count, id: 'returned-escalated-count' }}\n        sizes={sizes}\n        title='Returned Escalated Claims'\n        viewList={\n          <Typography\n            id='re-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('escalated')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('escalated')}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='re-claim-no'>Claim No.</TableCell>\n              <TableCell id='re-due-date'>Due Date</TableCell>\n              <TableCell id='re-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.escalated.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`re-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`re-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`re-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`re-update-claim-${index}`}>\n                  <Link to={`/claims/${item.claim_number}/analyze`}>\n                    <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                      Update\n                    </Typography>\n                  </Link>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='returned-escalated'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nReturnedEscalatedClaimsTile.displayName = 'DashboardTileComponent'\nexport default ReturnedEscalatedClaimsTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from '../../Tiles/ForAdjudicationTile'\nimport MyClaimsTile from '../../Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from '../../Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from '../../Tiles/ReturnedEscalatedClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForAdjudicationTile services={ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <ReturnedEscalatedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\nimport classes from './DatePicker.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\n\nconst ClaimsInputBase = props => {\n  const {\n    error,\n    value,\n    InputRef,\n    setOpen,\n    handleOnFocus,\n    handleDateChange,\n    noMargin,\n    id,\n    handleOnBlur,\n    focus,\n    disableComponents,\n    ...other\n  } = props\n  return (\n    <React.Fragment>\n      <Paper\n        className={`${classes['text-field']} ${noMargin ? classes['no-margin'] : ''}  ${\n          error ? classes['has-error'] : focus && classes.focus\n        } box-shadow-field ${disableComponents && classes.disabled}`}\n        onBlur={handleOnBlur}\n      >\n        <InputBase\n          id={id}\n          inputProps={{ ref: InputRef }}\n          className={classes.input}\n          format='MM/DD/YYYY'\n          value={value}\n          onChange={event => handleDateChange(moment(event.target.value))}\n          onFocus={handleOnFocus}\n          disabled={disableComponents}\n          {...other}\n        />\n\n        <div className={classes['date-button']}>\n          <IconButton\n            id={`${id}-date-button`}\n            className={classes.button}\n            disabled={disableComponents}\n            size='small'\n            onClick={() => setOpen(true)}\n          >\n            <FontAwesomeIcon icon='calendar-day' className={classes.icon} />\n          </IconButton>\n        </div>\n      </Paper>\n      {error && <span className={classes.error}>{error}</span>}\n    </React.Fragment>\n  )\n}\n\nexport default function DatePicker (props) {\n  const { id, label, required, value, format, readOnly, onChange, error, tabindex, ...other } = props\n  const [open, setOpen] = React.useState(false)\n  // const [selectedDate, setSelectedDate] = React.useState()\n\n  const InputRef = React.useRef()\n  const [focus, setFocus] = React.useState()\n\n  // React.useEffect(() => {\n  //   setSelectedDate(new Date(value))\n  // }, [value])\n\n  const handleOnClose = () => {\n    setOpen(false)\n    handleOnFocus()\n  }\n  const handleDateChange = date => {\n    setOpen(false)\n    // setSelectedDate(date)\n    if (typeof onChange === 'function') onChange(date)\n\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n    setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <KeyboardDatePicker\n              TextFieldComponent={p =>\n                ClaimsInputBase({\n                  ...p,\n                  focus,\n                  setOpen,\n                  handleDateChange,\n                  InputRef,\n                  handleOnFocus,\n                  id,\n                  handleOnBlur,\n                  ...other\n                })\n              }\n              value={value}\n              open={open}\n              onClose={handleOnClose}\n              onChange={handleDateChange}\n              allowKeyboardControl\n              format='MM/DD/YYYY'\n              clearable\n              showTodayButton\n              {...other}\n            />\n          </MuiPickersUtilsProvider>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date From')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport TextField from '@material-ui/core/TextField'\nimport MomentUtils from '@date-io/moment'\nimport Button from '@material-ui/core/Button'\n\nimport ClearIcon from '@material-ui/icons/Clear'\nimport { IconButton } from '@material-ui/core'\n\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\n\n// Components\n\nimport DatePicker from './Components/DatePicker/DatePicker.js'\nimport DatePickerCurrent from 'SharedComponents/DatePicker/DatePicker.js'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Validators\nimport DateValidator from './Validations/DateValidator'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nimport classes from './Test.module.scss'\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n  { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'Léon: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL·E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Amélie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 }\n]\n\n// https://github.com/mui-org/material-ui-pickers/issues/1388\nconst WrappedTextField = props => <ClaimsInputBase {...props} />\n\nconst ClaimsInputBase = props => {\n  const { error, ...others } = props\n  return (\n    <React.Fragment>\n      <Paper className={`${classes['text-field']}   ${error ? classes['has-error'] : ''} box-shadow-field `}>\n        <InputBase\n          // id={id}\n          // inputProps={{ ref: InputRef }}\n          format='MM/DD/YYYY'\n          className={classes.input}\n          {...others}\n          // value={p.value !== p.masking && !isNaN(p.masking) ? p.masking : p.value}\n          // onChange={event => handleDateChange(moment(event.target.value))}\n          // onFocus={handleOnFocus}\n        />\n\n        {/* <div className={classes['date-button']}>\n          <IconButton\n            // id={`${id}-date-button`}\n            className={classes.button}\n            // disabled={disableComponents}\n            size='small'\n            // onClick={() => setOpen(true)}\n          >\n            <FontAwesomeIcon icon='calendar-day' className={classes.icon} />\n          </IconButton>\n        </div> */}\n      </Paper>\n      {error && <span className={classes.error}>{error}</span>}\n    </React.Fragment>\n  )\n}\n\nexport default function Test (props) {\n  const [storage, setStorage] = React.useState({\n    facility_id: '',\n    facility_name: '',\n    date_from: null\n  })\n\n  const [errors, setErrors] = React.useState({ date_from: '' })\n\n  const [suggestion, setSuggestion] = React.useState({\n    facilities: []\n  })\n\n  const [loading, setLoading] = React.useState(false)\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Test')\n    BreadcrumbsService.setSelectedItems(['test'])\n  }, [])\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    // if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          setLoading(true)\n          ClaimsAdjudicationServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by: by.split('_')[1] }\n          }).then(res => {\n            setLoading(false)\n            const { data } = res.data\n            setSuggestion(state => ({ ...state, facilities: data }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const onChange = ({ value, field }) => {\n    console.log('onChaneg', value)\n    setStorage(state => ({ ...state, [field]: value }))\n  }\n\n  const onChangeFacility = ({ id = '', name = '' }) => {\n    setStorage(state => ({ ...state, facility_id: id, facility_name: name }))\n  }\n\n  const dateValidate = () => {\n    const { error } = DateValidator({ date_from: storage.date_from })\n    setErrors(error || {})\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.row}>\n        <div className={classes.input}>\n          <div className={classes['proto-auto-complete']}>\n            <div className={classes.root}>\n              <Typography variant='subtitle2' className={classes.label}>\n                {'Sample Documentation Using TextField'}\n              </Typography>\n              <div className={classes.wrapper}>\n                <Paper>\n                  <Autocomplete\n                    id='combo-box-demo'\n                    options={top100Films}\n                    getOptionLabel={option => option.title}\n                    style={{ width: 300 }}\n                    renderInput={params => <TextField {...params} label='Combo box' variant='outlined' />}\n                  />\n                </Paper>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.input}>\n          <div className={classes['proto-auto-complete']}>\n            <div className={classes.root}>\n              <Typography variant='subtitle2' className={classes.label}>\n                {'Medical Partner ID using TextField'}\n              </Typography>\n\n              <div className={classes.wrapper}>\n                <Paper>\n                  <Autocomplete\n                    style={{ width: 300 }}\n                    options={suggestion.facilities}\n                    getOptionLabel={option => option.id}\n                    freeSolo\n                    loading={loading}\n                    renderInput={params => <TextField {...params} label='Combo box' variant='outlined' />}\n                    onClose={() => setSuggestion(state => ({ ...state, facilities: [] }))}\n                    onChange={(event, value) => onChangeFacility(value || [])}\n                    onInputChange={(event, value = '') => {\n                      getFacilitySuggestions({ value, by: 'facility_id' })\n                      onChange({ value, field: 'facility_id' })\n                    }}\n                    // value={storage.facility_id}\n                    inputValue={storage.facility_id}\n                  />\n                </Paper>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.input}>\n          <div className={classes['proto-auto-complete']}>\n            <div className={classes.root}>\n              <Typography variant='subtitle2' className={classes.label}>\n                {'Medical Partner (Facility) Name TextField'}\n              </Typography>\n\n              <div className={classes.wrapper}>\n                <Paper>\n                  <Autocomplete\n                    style={{ width: 300 }}\n                    options={suggestion.facilities}\n                    getOptionLabel={option => option.name}\n                    freeSolo\n                    loading={loading}\n                    renderInput={params => <TextField {...params} label='Combo box' variant='outlined' />}\n                    onClose={() => setSuggestion(state => ({ ...state, facilities: [] }))}\n                    onChange={(event, value) => onChangeFacility(value || [])}\n                    onInputChange={(event, value = '') => {\n                      getFacilitySuggestions({ value, by: 'facility_name' })\n                      onChange({ value, field: 'facility_name' })\n                    }}\n                    // value={storage.facility_name}\n                    inputValue={storage.facility_name}\n                  />\n                </Paper>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className={classes.row}>\n        <div className={classes.input}>\n          <div className={classes['proto-auto-complete']}>\n            <div className={classes.root}>\n              <Typography variant='subtitle2' className={classes.label}>\n                {'Medical Partner ID using InputBase'}\n              </Typography>\n\n              <div className={classes.wrapper}>\n                <Paper>\n                  <Autocomplete\n                    style={{ width: 300 }}\n                    options={suggestion.facilities}\n                    getOptionLabel={option => option.id}\n                    freeSolo\n                    loading={loading}\n                    renderInput={params => (\n                      <InputBase {...params} ref={params.InputProps.ref} className={classes.input} />\n                    )}\n                    onClose={() => setSuggestion(state => ({ ...state, facilities: [] }))}\n                    onChange={(event, value) => onChangeFacility(value || [])}\n                    onInputChange={(event, value = '') => {\n                      getFacilitySuggestions({ value, by: 'facility_id' })\n                      onChange({ value, field: 'facility_id' })\n                    }}\n                    // value={storage.facility_id}\n                    inputValue={storage.facility_id}\n                  />\n                </Paper>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.input}>\n          <div className={classes['proto-auto-complete']}>\n            <div className={classes.root}>\n              <Typography variant='subtitle2' className={classes.label}>\n                {'Medical Partner (Facility) Name InputBase'}\n              </Typography>\n\n              <div className={classes.wrapper}>\n                <Paper>\n                  <Autocomplete\n                    style={{ width: 300 }}\n                    options={suggestion.facilities}\n                    getOptionLabel={option => option.name}\n                    freeSolo\n                    loading={loading}\n                    renderInput={params => (\n                      <InputBase {...params} ref={params.InputProps.ref} className={classes.input} />\n                    )}\n                    onClose={() => setSuggestion(state => ({ ...state, facilities: [] }))}\n                    onChange={(event, value) => onChangeFacility(value || [])}\n                    onInputChange={(event, value = '') => {\n                      getFacilitySuggestions({ value, by: 'facility_name' })\n                      onChange({ value, field: 'facility_name' })\n                    }}\n                    // value={storage.facility_name}\n                    inputValue={storage.facility_name}\n                  />\n                </Paper>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className={classes.row}>\n        <div className={classes.input}>\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <KeyboardDatePicker\n              label={'Stock'}\n              value={storage.date_from}\n              onChange={date => onChange({ value: date, field: 'date_from' })}\n              InputProps={{\n                endAdornment: (\n                  <IconButton onClick={() => onChange({ value: null, field: 'date_from' })}>\n                    <ClearIcon />\n                  </IconButton>\n                )\n              }}\n              InputAdornmentProps={{\n                position: 'start'\n              }}\n              format='MM/DD/YYYY'\n              clearable\n            />\n          </MuiPickersUtilsProvider>\n        </div>\n\n        <div className={classes.input}>\n          'Stock + InputBase\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <KeyboardDatePicker\n              label={'Stock + InputBase'}\n              value={storage.date_from}\n              onChange={date => onChange({ value: date, field: 'date_from' })}\n              TextFieldComponent={ClaimsInputBase}\n              // InputProps={{\n              //   inputComponent: ClaimsInputBase\n              // }}\n              format='MM/DD/YYYY'\n              allowKeyboardControl\n              clearable\n              showTodayButton\n            />\n          </MuiPickersUtilsProvider>\n        </div>\n\n        <div className={classes.input}>\n          <DatePickerCurrent\n            label='Current'\n            value={storage.date_from}\n            onChange={date => {\n              onChange({ value: new Date(date), field: 'date_from' })\n            }}\n            error={errors.date_from}\n          />\n        </div>\n        <div className={classes.input}>\n          <DatePicker\n            label='New'\n            value={storage.date_from}\n            onChange={date => {\n              onChange({ value: date, field: 'date_from' })\n            }}\n            error={errors.date_from}\n          />\n        </div>\n\n        <div className={classes.input}>\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={dateValidate}\n            id='save'\n          >\n            Validate\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Analyst\nimport Dashboard from './../Components/ClaimsAnalyst/Dashboard/Dashboard'\nimport Test from './../Components/ClaimsAnalyst/Test/Test'\n\n// Components\nimport ClaimsViewer from './../Components/ClaimsViewer'\nimport ClaimsUtilLedgerReport from '../Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  test: {\n    text: 'Test',\n    to: data => `/test`\n  }\n}\n\nconst permissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  reimbursement_info: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    return_advice: { visible: true, enabled: true, options: {} },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/utilization-ledger' exact render={() => <ClaimsUtilLedgerReport />} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsAdjudicationServices}\n          />\n        )}\n      />\n      <Route path='/test' exact component={Test} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number', match: 'start' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa.number', match: 'or' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name', match: 'any' }\n]\n\nconst ForPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'payment-request',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'payment-request' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const paymentRequestClaims = batchResponse.data.data.results\n      const paymentRequestClaimCount = batchCountResponse.data.data\n      setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'For Payment Request'\n    const category = 'payment-request'\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'payment-request'\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'payment-request',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      filter: viewList.filter,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-payment-request'\n        count={{ color: 3, value: claims.count, id: 'for-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'For Payment Request' : mTitle}\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`for-pr-${item.id}`} id={`for-pr-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-request/${item.bundle_number}`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                      Request Payment\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='for-payment-request'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default ForPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nconst SubmittedPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const paymentRequestClaims = batchResponse.data.data.results\n      const paymentRequestClaimCount = batchCountResponse.data.data\n      setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Submitted PR'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'submitted'\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-pr'\n        count={{ color: 3, value: claims.count, id: 'submitted-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'Submitted PR' : mTitle}\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-pr-view-list'\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`submitted-pr-${item.id}`} id={`submitted-pr-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-pr'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nconst OverrideClaimTile = props => {\n  const { services, sizes } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'override',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'override' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const paymentRequestClaims = batchResponse.data.data.results\n      const paymentRequestClaimCount = batchCountResponse.data.data\n      setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Override Claim'\n    const category = 'override'\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'override'\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'override',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='override-claim'\n        count={{ color: 5, value: claims.count, id: 'override-claim-count' }}\n        sizes={sizes}\n        title='Override Claim'\n        viewAllLink={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`oc-${item.id}`} id={`oc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell>{item.claim_number}</TableCell>\n                <TableCell>{item.soa.number || item.bundle_number}</TableCell>\n                <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-request/${item.bundle_number}`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                      Request Payment\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='override-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`oc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`oc-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`oc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`oc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOverrideClaimTile.displayName = 'DashboardTileComponent'\n\nexport default OverrideClaimTile\n","import instance from './instance'\nconst axios = instance('/c/pr')\n\nexport default class PaymentRequestServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequest ({ bundle_number }) {\n    return axios({\n      url: `/payment-request/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getPaymentRequestBatches ({ bundle_number, params }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static submit ({ bundle_number, data }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/submit`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPaymentRequestTile from './../../../Components/Tiles/SubmittedPaymentRequestTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// CSS\nimport classes from './PaymentRequestPage.module.scss'\n\nconst pendingHeadCells = [\n  { id: 'pending-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n  { id: 'pending-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'pending-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'pending-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  {\n    id: 'pending-discount-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Hospital Discount Amount'\n  }\n]\nconst submittedHeadCells = [\n  { id: 'submitted-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n  { id: 'submitted-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'submitted-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'submitted-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  {\n    id: 'submitted-discount-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Hospital Discount Amount'\n  }\n]\nexport default function PaymentRequestPage (props) {\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n\n  const [batches, setBatches] = React.useState({\n    pending: { data: [], header: {}, loading: true },\n    submitted: { data: [], header: {}, loading: true }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n\n    PageTitleService(`Request for Payment: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Pending Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'pending' } }).then(\n      ({ data: res }) => resetBatches({ type: 'pending', data: res.data, bundle })\n    )\n\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = `${data.length} / ${bundle.total_batch}`\n    const total_rcs = `${data.reduce((acc, batch) => acc + batch.claims.length, 0)} / ${bundle.total_rcs}`\n\n    data = data.map(i => ({\n      ...i,\n      selected: false,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0),\n      discount_amount: i.claims.reduce((acc, claim) => acc + claim.discount_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          approved_amount,\n          pr_amount: 0\n        },\n        loading: false,\n        indeterminate: undefined,\n        checked: undefined\n      }\n    }))\n  }\n\n  const handleClick = ({ index, batches: selectedBatches }) => {\n    const _batch = {\n      ...batches[selectedBatches],\n      data: batches[selectedBatches].data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    console.log(_batch)\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const handleSelectAllClick = ({ batches: selectedBatches }) => {\n    let _batch = batches[selectedBatches]\n\n    _batch.data.map(i => {\n      i.selected = _batch.indeterminate ? true : !_batch.checked\n      return i\n    })\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const changeSelectAllState = ({ batches: selectedBatches, data }) => {\n    let _batch = data || batches[selectedBatches]\n\n    let selected_count = 0\n    let pr_amount = 0\n    let discount_amount = 0\n    for (let b of _batch.data) {\n      if (b.selected) {\n        pr_amount += b.total_amount\n        discount_amount += b.discount_amount\n        selected_count++\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batch.data.length : false\n    let checked = selected_count ? selected_count === _batch.data.length : false\n\n    _batch = { ..._batch, indeterminate, checked, header: { ..._batch.header, pr_amount, discount_amount } }\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n  }\n\n  const handleOnSubmit = () => {\n    let selected = getSelectedPending(batches.pending.data)\n\n    if (!selected.length) {\n      return setDialog({\n        open: true,\n        // message: 'Please select a batch for submission to Treasury Department.',\n        message: 'User must select first a batch for submission.',\n        okLabel: 'Close',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    const onOk = () => {\n      LoadingService.loading(true)\n      setDialog(state => ({ ...state, open: false }))\n      const requestBatch = []\n\n      for (let select of selected) {\n        const claims = select.claims.map(claim => {\n          return claim.claim_number\n        })\n        requestBatch.push(PaymentRequestServices.submit({ bundle_number, data: { claims } }))\n      }\n\n      Promise.all(requestBatch).then(\n        ({ data: res }) => {\n          const data = batches.pending.data.filter((i, index) => {\n            let should_include = true\n            for (let s of selected) {\n              if (s.index === index) {\n                should_include = false\n                break\n              }\n            }\n            if (should_include) return i\n          })\n          resetBatches({ type: 'pending', data, bundle })\n          resetBatches({ type: 'submitted', data: [...selected, ...batches.submitted.data], bundle })\n          LoadingService.loading(false)\n        },\n        err => {\n          console.log(err)\n        }\n      )\n    }\n\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to submit?',\n      okLabel: 'Yes',\n      cancelLabel: 'No',\n      onCancel: () => setDialog(state => ({ ...state, open: false })),\n      onOk\n    })\n  }\n\n  const handleOnCancel = () => {\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to cancel?',\n      okLabel: 'Yes',\n      onOk: () => props.history.push(`/`),\n      cancelLabel: 'Close',\n      onCancel: () => setDialog(state => ({ ...state, open: false }))\n    })\n  }\n\n  const getSelectedPending = data => {\n    return data.filter((i, index) => {\n      if (i.selected) {\n        i.index = index\n        return i\n      }\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {bundle ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header}>Total Batches: {batches.pending.header.total_batches}</Typography>\n              <Typography className={classes.header}>Total RCS: {batches.pending.header.total_rcs}</Typography>\n              <Typography className={classes.header}>\n                Total Approved Amount:\n                <span id='total-approved-amount'>{`PHP ${CurrencyFormatter(\n                  batches.pending.header.approved_amount\n                )}`}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total PR Amount: PHP\n                <span id='total-pr-amount'>{`PHP ${CurrencyFormatter(batches.pending.header.pr_amount)}`}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total Discount Amount:\n                <span id='total-discount-amount'>{`PHP ${CurrencyFormatter(batches.pending.header.discount_amount)}`}</span>\n              </Typography>\n            </div>\n\n            <EnhancedTable\n              className={classes.table}\n              headCells={pendingHeadCells}\n              handleSelectAllClick={() => handleSelectAllClick({ batches: 'pending' })}\n              indeterminate={!!batches.pending.indeterminate}\n              checked={!!batches.pending.checked}\n              checkAll\n              checkboxColor='default'\n              selectStatus\n            >\n              <TableBody>\n                {batches.pending.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      onClick={event => handleClick({ index, batches: 'pending' })}\n                      role='checkbox'\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell padding='checkbox'>\n                        <Checkbox checked={batch.selected} color='default' />\n                      </TableCell>\n                      <TableCell align='left' id={`pending-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`pending-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`pending-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`pending-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`pending-discount-amount-${index}`}>\n                        {CurrencyFormatter(batch.discount_amount)}\n                        {/* 0.00 */}\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n                {!batches.pending.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              onClick={handleOnCancel}\n              id='cancel'\n            >\n              Cancel\n            </Button>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={handleOnSubmit}\n              id='submit'\n            >\n              Submit\n            </Button>\n          </div>\n\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes['submit-header']}>Submitted Batches</Typography>\n            </div>\n            <EnhancedTable className={classes.table} headCells={submittedHeadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      // hover\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell align='left' id={`submitted-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`submitted-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`submitted-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`submitted-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`submitted-discount-amount-${index}`}>\n                        {CurrencyFormatter(batch.discount_amount)}\n                        {/* 0.00 */}\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\n\n// CSS\nimport classes from './SubmittedPaymentRequestPage.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: true, center: false, disablePadding: false, label: 'Hospital Discount Amount' }\n]\n\nconst prManagerheadCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: true, center: false, disablePadding: false, label: 'Hospital Discount Amount' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const { supervisor, isManager } = props\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n\n  const [batches, setBatches] = React.useState({\n    submitted: { data: [], header: {} }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n    PageTitleService(`Submitted PR: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = data.length\n    const total_rcs = data.reduce((acc, batch) => acc + batch.claims.length, 0)\n\n    data = data.map(i => ({\n      ...i,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          pr_amount: approved_amount\n        }\n      }\n    }))\n  }\n  const approved_by_uid = bundle ? bundle.approved_by_uid : ''\n\n  return (\n    <div className={classes.root}>\n      {bundle && approved_by_uid ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header} align='center'>\n                Total Batches: {batches.submitted.header.total_batches}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total RCS: {batches.submitted.header.total_rcs}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total PR Amount:\n                <span id='total-pr-amount'>{`PHP ${CurrencyFormatter(batches.submitted.header.pr_amount)}`}</span>\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total Discount Amount:\n                <span id='total-discount-amount'>{`PHP ${CurrencyFormatter(0)}`}</span>\n              </Typography>\n            </div>\n\n            <EnhancedTable className={classes.table} headCells={!isManager ? headCells : prManagerheadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow>\n                      <TableCell align='center' id={`batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell align='center' id={`total-rcs-${index}`}>\n                        {batch.claims.length}\n                      </TableCell>\n                      <TableCell align='right' id={`billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`discount-amount-${index}`}>\n                        {/* {CurrencyFormatter(batch.discount_amount)} */}\n                        0.00\n                      </TableCell>\n                      {isManager && (\n                        <TableCell align='right' id={`discount-amount-${index}`}>\n                          <Link\n                            // to={`/payment-requests/${item.id}/list`}\n                            to={`/payment-request/${bundle_number}/submitted/${batch.batch_number}`}\n                          >\n                            <Typography\n                              variant='caption'\n                              className={`text-link underline`}\n                              id={`submmited-pr-${index}`}\n                            >\n                              View\n                            </Typography>\n                          </Link>\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              onClick={() =>\n                supervisor || isManager\n                  ? props.history.push(`/payment-requests/${approved_by_uid}/list`)\n                  : props.history.push('/')\n              }\n              id='cancel'\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport Dashboard from './../Components/PaymentRequest/Dashboard/Dashboard'\nimport PaymentRequestPage from './../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route path='/payment-request/:bundle_number/submitted' exact component={SubmittedPaymentRequestPage} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\nconst columns = [\n  { id: 'approved-by', name: 'PR Processor', sortField: 'approved_by', match: 'any' },\n  { id: 'total-bundles', name: 'Total Bundle/SOA', sortField: 'total_bundles', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' }\n]\n\nconst SubmittedPrSupervisorTile = props => {\n  const { services, sizes } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([services.getSubmittedPaymentRequest({ limit: 10, sort: '' }), services.getBundleCount()]).then(\n      values => {\n        const bundleResponse = values\n        const submittedRequestClaims = bundleResponse[0].data.data.results\n        const submittedRequestClaimCount = bundleResponse[1].data.data\n        setClaims({ data: submittedRequestClaims, count: submittedRequestClaimCount })\n      }\n    )\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Submitted PR'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services.getSubmittedPaymentRequest({ limit: 10, sort: '' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page, category }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getSubmittedPaymentRequest(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page, category: 'submitted' }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-pr'\n        count={{ color: 3, value: claims.count, id: 'submitted-claim-count' }}\n        sizes={sizes}\n        title='Submitted PR'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-pr-view-list'\n          >\n            View List\n          </Typography>\n        }\n        isFilterShown={false}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell>PR Processor</TableCell>\n              <TableCell>Total Bundle/SOA</TableCell>\n              <TableCell>Total Batches</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n                <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n                <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-requests/${item.id}/list`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-pr'\n        columns={columns}\n        searchTextPlaceHolder='Search for PR Processor'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n              <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n              <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n              <TableCell>\n                <Link to={`/payment-requests/${item.id}/list`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPrSupervisorTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPrSupervisorTile\n","import instance from './instance'\nconst axios = instance('/c/prs')\n\nexport default class PaymentRequestServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequestBundles ({ processor_id }, params) {\n    return axios({\n      url: `/payment-requests/${processor_id}/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport PaymentRequestSupervisorServices from 'Services/Api/PaymentRequestSupervisorServices'\n\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ sm: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPrSupervisorTile services={PaymentRequestSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={8} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestSupervisorServices from 'Services/Api/PaymentRequestSupervisorServices'\n\n// CSS\nimport classes from './SubmittedPaymentRequestList.module.scss'\n\n// UTIL\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Received', sortField: 'date.received', match: 'date' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const processor_id = props.match.params.pr_officer\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'date.due',\n    order: true,\n    sort: 'date.due|desc'\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Submitted PR')\n    BreadcrumbsService.setSelectedItems(['dashboard', 'submittedPaymentRequest'])\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, initialValue).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }, [])\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, _params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSearchColumn = args => {\n    const { field, value, match } = args\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      {viewList.data ? (\n        <React.Fragment>\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for Bundle Number, Date or Facility Name'\n            />\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map(headCell => (\n                    <TableCell key={headCell.sortField} id={headCell.id}>\n                      <TableSortLabel\n                        active={viewList.orderBy === headCell.sortField}\n                        direction={viewList.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort(headCell.sortField)}\n                      >\n                        {headCell.name}\n                      </TableSortLabel>\n                      <TextField\n                        id={`column-filter-${headCell.id}`}\n                        // className={`${classes.search}`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearchColumn({\n                                field: headCell.sortField,\n                                value: search,\n                                match: headCell.match\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </TableCell>\n                  ))}\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <React.Fragment>\n                  {viewList.data.map((row, index) => (\n                    <TableRow key={`${row.claim_number}-${index}`}>\n                      <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n                      <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n                      <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n                      <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/payment-request/${row.bundle_number}/submitted`}>\n                          <Typography variant='caption' className={`text-link underline`}>\n                            View\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </React.Fragment>\n              }\n              count={viewList.count}\n              page={viewList.page}\n              limit={viewList.limit}\n              rowsPerPageOptions={[10, 15, 20]}\n              onChange={handleOnViewListChange}\n            />\n          </div>\n          <div align='right' className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel'\n              onClick={() => props.history.push(`/`)}\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// Pages of Payment Request Officer Supervisor\nimport Dashboard from './../Components/PaymentRequestSupervisor/Dashboard/Dashboard'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route\n        path='/payment-request/:bundle_number/submitted'\n        exact\n        render={props => <SubmittedPaymentRequestPage supervisor {...props} />}\n      />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { name: 'Claim Number', sortField: 'latest.claim_number' },\n  { name: 'Due Date', sortField: 'latest.date.due' },\n  { name: 'Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ id, viewList, setViewList, onViewListChange }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      id={id}\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent id={`${id}-body`} dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          id={`${id}-table`}\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow id={`${id}-header`}>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow id={`for-review-claim-${index}`} key={row.claim_number}>\n              <TableCell>{row.claim_number}</TableCell>\n              <TableCell>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/claims/review/${row.claim_number}`}>\n                  <Typography id={`review-claim-${index}`} variant='caption' className={`text-link underline`}>\n                    Review\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/MedicalConsultantServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [claims, setClaims] = React.useState({\n    for_review: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Claims\n    Promise.all([\n      MedicalConsultantServices.getClaims({\n        category: 'for-review',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      MedicalConsultantServices.getClaimCount({ category: 'for-review' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_review: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    MedicalConsultantServices.getClaims({\n      category,\n      range: value,\n      limit: 10,\n      sort: 'latest.due.date|desc'\n    }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/review/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'for_review') title = 'For Review'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    MedicalConsultantServices.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    MedicalConsultantServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'for_review') handleOnReview(claim_number)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.for_review.count }}\n              sizes={{ sm: 12 }}\n              title='Escalated Claims'\n              viewList={\n                <Typography\n                  id='mc-view-list'\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('for-review')}\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('for_review')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.for_review.data.map((item, index) => (\n                    <TableRow key={item.claim_number}>\n                      <TableCell>{item.claim_number}</TableCell>\n                      <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          id={`review-claim-${index}`}\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnReview(item.claim_number)}\n                        >\n                          Review\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {claims.ticket.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n\n      <ViewList\n        id='for-review'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/MedicalConsultant/Dashboard/Dashboard'\n\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport MedicalConsultantServices from 'Services/Api/MedicalConsultantServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  review: {\n    text: 'Review',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    communication: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'review']}\n            {...props}\n            permissions={permissions}\n            ApiService={MedicalConsultantServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForReconciliationClaimsTile services={ClaimsReconServices} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/ClaimsReconciliation/Dashboard/Dashboard'\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    remove: { visible: true }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import Button from '@material-ui/core/Button'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Services\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nexport default function AssignDialog (props) {\n  const { dialog, handleOnSubmit = () => {}, setDialog } = props\n\n  const [reassignData, setReassignData] = React.useState({\n    user_id: '',\n    message: ''\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  React.useEffect(() => {\n    UserManagementServices.getClaimsAnalyst()\n      .then(res => {\n        const _data = res.data\n        const data = _data.map(user => {\n          return { value: user._id, text: `${user.first_name} ${user.last_name}` }\n        })\n        setDropDownUsers(prevState => [...prevState, ...data])\n      })\n      .catch(err => console.error('Failed fetching Claims Verifiers: ', err))\n  }, [])\n\n  const onDropDownChanged = params => {\n    setReassignData(prevState => ({ ...prevState, user_id: params }))\n  }\n\n  const onTextFieldChanged = params => {\n    setReassignData(prevState => ({ ...prevState, message: params }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='reassign-notes'\n                value={reassignData.message}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Message'\n                onChange={e => onTextFieldChanged(e.target.value)}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassignData.user_id}\n                  onChange={e => onDropDownChanged(e.target.value)}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  id='reassign-cancel'\n                  onClick={() => setDialog(state => ({ ...state, assign: false }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  id='reassign-submit'\n                  onClick={() => setDialog(state => ({ ...state, alert: true }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claim Verifier</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claim Analyst?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claim Analyst for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmit(reassignData)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Component\nimport AssignDialog from './../AssignDialog/AssignDialog'\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmit = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    claimsCount = 0\n  } = props\n\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography>Total Claims Selected: {claimsCount} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-positive'\n                onClick={() => setDialog(state => ({ ...state, assign: true }))}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog dialog={dialog} setDialog={setDialog} handleOnSubmit={handleOnSubmit} />\n    </div>\n  )\n}\n","import instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims/adjudication',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/adjudication/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/adjudication/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/adjudication/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getDropdown (params) {\n    return axios({\n      url: '/lookups/dropdown',\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n}\n","import ClaimsAdjudicationServices from '../ClaimsAdjudicationServices'\nimport instance from '../instance'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsReimbursementServices extends ClaimsAdjudicationServices {\n  static getItems (params) {\n    return axios({\n      url: `/claims/medical-collectibles/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/medical-collectibles/count`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nimport ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport MedicalCollectiblesServices from './MedicalCollectiblesServices'\nconst axios = instance('/c/cvs')\n\nclass index extends ClaimsAdjudicationServices {\n  // MOCK ENDPOINT\n  static getClaims (params) {\n    return axios({\n      url: '/claims/all',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/all/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItems (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getClaimsBySubbordinateCount (params) {\n    console.log(params)\n    return axios({\n      url: '/subordinate/claims/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static totalSubordinatesClaims (params) {\n    return axios({\n      url: '/claims/subordinates/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getSubordinates (params) {\n    return axios({\n      url: '/claims/subordinates',\n      method: 'GET',\n      params\n    })\n  }\n\n  static returnClaim ({claim_number, data}) {\n    console.log(data)\n    return axios({\n      url: `/claims/${claim_number}/return`,\n      method: 'POST',\n      params: data\n    })\n  }\n}\n\nindex.ClaimsAdjudicationServices = ClaimsAdjudicationServices\nindex.MedicalCollectiblesServices = MedicalCollectiblesServices\nexport default index\n","import Button from '@material-ui/core/Button'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsList.module.scss'\n\nexport default function ClaimsPage (props) {\n  const userId = props.match.params.user_id\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const headcell = [\n    { id: 's-claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'any' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'date.received', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'date.due', match: 'date' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n  ]\n  const [claims, setClaims] = React.useState({\n    category: 'my',\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    filter: {},\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [claimsCount, setClaimsCount] = React.useState(0)\n\n  React.useEffect(() => {\n    PageTitleService('For Adjudication')\n    BreadcrumbsService.setSelectedItems(['assigned'])\n    LoadingService.loading(true)\n    getClaims()\n    LoadingService.loading(false)\n  }, [])\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getClaims()\n    LoadingService.loading(false)\n  }, [claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  const getClaims = () => {\n    ClaimsVerifierSupervisorServices.getItems({\n      category: claims.category,\n      search: claims.search,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit,\n      user_id: userId,\n      filter: claims.filter\n    })\n      .then(res => {\n        const { results, count, limit, page } = res.data.data\n        results.map(claim => (claim.checked = false))\n        setClaims(prevState => ({ ...prevState, data: results, count, limit, page }))\n      })\n      .catch(err => console.error('Error fetching records: ', err))\n  }\n\n  const handleItemSelect = (event, index) => {\n    let data = [...claims.data]\n    const count = event.target.checked ? 1 : -1\n    data[index] = { ...data[index], checked: event.target.checked }\n    setClaims(prevState => ({ ...prevState, data }))\n    setClaimsCount(prevState => prevState + count)\n  }\n\n  const handleOnSearch = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnSearchAll = (args = '') => {\n    setClaims(prevState => ({ ...prevState, search: args }))\n  }\n\n  const handleOnSubmit = params => {\n    LoadingService.loading(true)\n    const { user_id, message } = params\n    const reassign = async () => {\n      return Promise.all(\n        claims.data.map(async claim => {\n          if (claim.checked === true) {\n            await ClaimsVerifierSupervisorServices.reassign({\n              claim_number: claim.claim_number,\n              data: { receiver_id: user_id, message: message }\n            }).catch(err => console.error(err))\n          }\n        })\n      )\n    }\n    reassign()\n      .then(() => {\n        handleUnselectAll()\n        LoadingService.loading(false)\n        getClaims()\n      })\n      .catch(err => console.error(('Error Assigning Claims: ', err)))\n  }\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleSelectAll = event => {\n    let data = [...claims.data]\n    const count = event.target.checked ? 1 : 0\n    data.map(claim => {\n      claim.checked = event.target.checked\n    })\n    setClaims(prevState => ({ ...prevState, data }))\n    setClaimsCount(count > 0 ? data.length : 0)\n  }\n\n  const handleUnselectAll = () => {\n    let data = [...claims.data]\n    data.map(claim => {\n      claim.checked = false\n    })\n    setClaims(prevState => ({ ...prevState, data }))\n    setSelectStatus(false)\n    setClaimsCount(0)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox color='default' onClick={event => handleSelectAll(event)} />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={claims.orderBy === headCell.sortField}\n                direction={claims.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              {headCell.match === 'date' ? (\n                <DatePicker\n                  noMargin\n                  id={`column-filter-${headCell.id}`}\n                  onChange={date =>\n                    handleOnSearch({\n                      field: headCell.sortField,\n                      value: date.toISOString(),\n                      match: headCell.match\n                    })\n                  }\n                  value={null}\n                />\n              ) : (\n                <TextField\n                  // className={`${classes.search}`}\n                  id={`column-filter-${headCell.id}`}\n                  TextFieldStyle={{ margin: 0 }}\n                  fullWidth\n                  onChange={event =>\n                    handleOnSearch({\n                      field: headCell.sortField,\n                      value: event.target.value,\n                      match: headCell.match\n                    })\n                  }\n                />\n              )}\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return claims.data.map((row, index) => (\n        <TableRow key={index}>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox checked={row.checked} color='default' onClick={event => handleItemSelect(event, index)} />\n            </TableCell>\n          ) : null}\n          <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n          <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n          <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n          <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n          <TableCell id={`view-claim-${index}`}>\n            <Link to={`/claims/view/${row.claim_number}`}>\n              <Typography id={`analyze-claim-${index}`} variant='caption' className='text-link underline'>\n                View\n              </Typography>\n            </Link>\n          </TableCell>\n        </TableRow>\n      ))\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => handleOnSearchAll(e.target.value)}\n                placeholder='Search for claim number or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={claims.count}\n              page={claims.page}\n              limit={claims.limit}\n              rowsPerPageOptions={claims.rowsPerPageOptions}\n              pagination\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            handleOnCancel={() => handleUnselectAll()}\n            handleOnClose={() => props.history.push(`/`)}\n            handleOnSubmit={handleOnSubmit}\n            claimsCount={claimsCount}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst RejectedClaimsTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'rejected',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'REJECTED' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'rejected'\n\n    services\n      .getItems({\n        category,\n        filter: viewList.filter,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/rejected/${claim_number}`)\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'rejected'\n    let title = `Rejected Claims`\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services\n      .getItems({ category, limit: 10, sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    // TO BE EDITED, WAITING FOR CLAIMS SUPERVISOR API SERVICES TO BE UP\n    // mock datas from med consultant\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='rejected-claim'\n        count={{ color: 3, value: claims.recon['count'], id: 'rejected-claim-count' }}\n        sizes={{ sm: 12 }}\n        title='Rejected Claims'\n        viewList={\n          <Typography id='rc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.recon.data.map((item, index) => (\n              <TableRow key={`${item.claim_number}-${index}`}>\n                <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`rc-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    View\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='rejected-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nRejectedClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default RejectedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\nconst columns = [\n  { id: 'verifier-name', name: 'Verifier Name', sortField: 'username', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 'total-claims', name: 'Total Claims', sortField: 'total_claims', match: 'any' }\n]\n\nconst ClaimsVerifierTile = props => {\n  const { services } = props\n\n  const [viewList, setViewList] = React.useState({\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'latest.date.due',\n    order: true\n  })\n  const [verifiers, setVerifiers] = React.useState({ data: [], count: 0 })\n\n  React.useEffect(() => {\n    Promise.all([\n      services.totalSubordinatesClaims(),\n      // services.getClaimsBySubbordinateCount(),\n      services.getSubordinates({ page: 1, limit: 10, sort: 'name|asc' })\n    ])\n      .then(res => {\n        const [usersCount, verifiers] = res\n        const { results, count } = verifiers.data.data.data\n\n        setViewList(prev => ({ ...prev, count: count }))\n        setVerifiers(p => ({ ...p, data: results, count: usersCount.data.data }))\n      })\n      .catch(err => console.error(err.message))\n  }, [])\n\n  const getSubordinates = params => {\n    services\n      .getSubordinates(params)\n      .then(res => {\n        const { results, count } = res.data.data.data\n        const { limit, page } = res.data.data\n\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .catch(err => console.error('Error fetching subordinates: ', err))\n  }\n\n  const handleOnReviewUser = (params = null) => () => {\n    if (!params) return false\n    props.history.push(`/list/${params}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Claims Verifier List'\n\n    setViewList(prev => ({ ...prev, show: true, title, data: [] }))\n    getSubordinates({ page: 1, limit: 10, sort: 'name|asc' })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n    // console.log(_params)\n    getSubordinates({ ..._params })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-verifier'\n        count={{ color: 3, value: verifiers.count, id: 'claims-verifier-count' }}\n        sizes={{ sm: 12 }}\n        title='Claims Verifier'\n        isFilterShown={false}\n        viewList={\n          <Typography id='cv-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList()}>\n            View List\n          </Typography>\n        }\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`cv-${item.id}`} id={`cv-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {verifiers.data &&\n              verifiers.data.map((item, index) => (\n                <TableRow key={`verifier-list-item-${index}`}>\n                  <TableCell id={`cv-verifier-name-${index}`}>{item.username}</TableCell>\n                  <TableCell id={`cv-total-batches-${index}`}>{item.total_batches}</TableCell>\n                  <TableCell id={`cv-total-claims-${index}`}>{item.total_claims}</TableCell>\n                  <TableCell id={`cv-view-user-${index}`}>\n                    <Typography\n                      id={`view-user-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={handleOnReviewUser(item.id)}\n                    >\n                      View\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-verifier'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claims Analyst'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`verifier-list-item-${index}`}>\n              <TableCell id={`cv-verifier-name-${index}`}>{item.username}</TableCell>\n              <TableCell id={`cv-total-batches-${index}`}>{item.total_batches}</TableCell>\n              <TableCell id={`cv-total-claims-${index}`}>{item.total_claims}</TableCell>\n              <TableCell id={`cv-view-user-${index}`}>\n                <Typography\n                  id={`view-user-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={handleOnReviewUser(item.id)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsVerifierTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsVerifierTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ReconTIle = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'recon',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  // url: ,\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'RECONCILED' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'recon') title = 'Reconciled Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reconciled-claim'\n        count={{ color: 3, value: claims.recon['count'], id: 'reconciled-claim-count' }}\n        sizes={{ sm: 12 }}\n        title='Reconciled Claims'\n        viewList={\n          <Typography\n            id='rc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('recon')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('recon')}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.recon.data.map((item, index) => (\n              <TableRow key={`${item.claim_number}-${index}`}>\n                <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`rc-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    Analyze\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='reconciled-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReconTIle.displayName = 'DashboardTileComponent'\n\nexport default ReconTIle\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ClaimsForApprovalTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'for-approval',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'FOR APPROVAL' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const claims = claimResponse.data.data.results\n      const claimsCount = claimCountResponse.data.data\n      setClaims({ data: claims, count: claimsCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for-approval'\n\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'for-approval'\n    let title = 'Claims For Approval'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'for-approval',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-for-approval'\n        count={{ color: 3, value: claims['count'], id: 'claims-for-approval-count' }}\n        sizes={{ sm: 12 }}\n        title='Claims For Approval'\n        isFilterShown={false}\n        viewList={\n          <Typography id='fa-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={`fa-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`fa-view-claim-${index}`}>\n                  <Link to={`/claims/for-approval/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-for-approval'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`view-claim-${index}`}>\n                <Link to={`/claims/for-approval/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsForApprovalTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsForApprovalTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter, NameFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'account-number', name: 'Account No.', sortField: 'latest.client.account_number', match: 'any' },\n  { id: 'account-name', name: 'Account Name', sortField: 'latest.client.account_name', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member_name', match: 'any' }\n]\n\nconst MedicalCollectiblesTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    filter: {},\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, data: allClaims, count: allClaimsCount }))\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    let title = 'Medical Collectibles'\n\n    setViewList({ ...initialValue, show: true, title })\n    services\n      .getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='medical-collectibles'\n        count={{ color: 3, value: claims.count, id: 'medical-collectibles-count' }}\n        sizes={{ sm: 12 }}\n        title='Medical Collectibles'\n        isFilterShown={false}\n        viewList={\n          <Typography id='mc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={`mc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                {/* added cond on client to support old data */}\n                <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n                <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n                <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n                <TableCell id={`mc-view-claim-${index}`}>\n                  <Link to={`/claims/review/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='medical-collectibles'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              {/* added cond on client to support old data */}\n              <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n              <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n              <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n              <TableCell id={`mc-view-claim-${index}`}>\n                <Link to={`/claims/review/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMedicalCollectiblesTile.displayName = 'DashboardTileComponent'\n\nexport default MedicalCollectiblesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date ', sortField: 'date.due', match: 'date' },\n  { id: 'account-name', name: 'Account No.', sortField: 'member.account_number', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member.name', match: 'any' }\n]\n\nconst ReimbursementClaimTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'reimbursement',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ claim_type: 'Reimbursement' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const { results } = claimResponse.data.data\n      setClaims(prevState => ({\n        ...prevState,\n        data: results,\n        count: claimCountResponse.data.data\n      }))\n    })\n  }, [])\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = 'Reimbursement Claim'\n    // const _params = {\n    //   category: viewList.category,\n    //   limit: viewList.limit,\n    //   page: viewList.page,\n    //   search: viewList.search,\n    //   sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n    // }\n    setViewList({ ...initialValue, show: true, title })\n    services.getItems({ category: viewList.category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n\n    setViewList({ ...initialValue, show: true, title })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reimbursement-claims'\n        count={{ color: 3, value: claims.count, id: 'reimbursement-claims-count' }}\n        sizes={{ sm: 12 }}\n        title='Reimbursement Claim'\n        isFilterShown={false}\n        viewList={\n          <Typography id='rmc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={`rmc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={`rmc-claim-list-${index}`}>\n                <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n                <TableCell id={`rmc-member-name-${index}`}>{`${item.member.first_name} ${item.member.middle_name |\n                  ''} ${item.member.last_name}`}</TableCell>\n                <TableCell id={`rmc-view-claim-${index}`}>\n                  <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='reimbursement-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`rmc-claim-list-${index}`}>\n              <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n              <TableCell id={`rmc-member-name-${index}`}>{`${item.member.first_name} ${item.member.middle_name | ''} ${\n                item.member.last_name\n              }`}</TableCell>\n              <TableCell id={`rmc-view-claim-${index}`}>\n                <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReimbursementClaimTile.displayName = 'DashboardTileComponent'\n\nexport default ReimbursementClaimTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from './../../../Components/Tiles/ForAdjudicationTile'\nimport MyClaimsTile from './../../../Components/Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from './../../../Components/Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from './../../../Components/Tiles/ReturnedEscalatedClaimsTile'\nimport RejectedClaimsTile from './../../../Components/Tiles/RejectedClaimsTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ReconciledClaimsTile from './../../../Components/Tiles/ReconciledClaimsTile'\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport MedicalCollectiblesTile from './../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from './../../../Components/Tiles/ReimbursementClaimTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Claims Adjudication'>\n            <ForAdjudicationTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <ReturnedEscalatedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <RejectedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ReconciledClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              {...props}\n            />\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n        </Grid>\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from './../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\nimport Dashboard from './../Components/ClaimsVerifierSupervisor/Dashboard/Dashboard'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\n\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Reports\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  reconciled: {\n    text: 'Reconciled',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  assigned: {\n    text: 'For Adjudication'\n  },\n  view: {\n    text: 'View'\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  }\n}\n\nconst forAdjudicationPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    communication: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 100000000,\n          other_types: 100000000\n        }\n      }\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forReconciledPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {}\n    },\n    save: { visible: true, enabled: true, options: {} },\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_ANALYST'], validate: false },\n      message:\n        'Are you sure you want to submit the Claim to the selected Claim Analyst? This Claim will be sent to the assigned Claim Analyst for processing.'\n    }\n  }\n}\n\nconst viewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nconst reviewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: {\n      visible: true,\n      enabled: true\n    },\n    letter_of_advice: {\n      visible: true,\n      enabled: true\n    }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={forAdjudicationPermissions}\n            ApiService={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n          />\n        )}\n      />\n\n      <Route path='/payment-request-report' exact render={() => <PaymentRequestReport />} />\n\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n\n      <Route\n        path='/claims/reconciled/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reconciled']}\n            {...props}\n            permissions={forReconciledPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/view/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={viewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={reviewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/rejected/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import instance from './../instance'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsManagerServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch (params) {\n    const { bundle_number, batch_number } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getApprovedClaims (params) {\n    const { bundle_number, batch_number } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims`,\n      method: 'GET'\n    })\n  }\n\n  static overrideClaims (params) {\n    const { bundle_number, batch_number, ...others } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims/override`,\n      method: 'POST',\n      params: { others }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport MedicalCollectiblesTile from '../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from '../../../Components/Tiles/ReimbursementClaimTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport ClaimsManagerServices from 'Services/Api/ClaimsManagerServices/ClaimsManagerServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ForPaymentRequestTile services={PaymentRequestServices} mTitle='Payment Request for Approval' {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <SubmittedPrSupervisorTile services={ClaimsManagerServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Claims Processor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} {...props} />\n            <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} {...props} />\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n        </Grid>\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n\n  const [reassign, setReassign] = React.useState({\n    user_id: '',\n    note: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.user_id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n\n    setReassign({\n      note: '',\n      user_id: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  const handleOnChange = event => {\n    const value = event.target.value\n    setReassign(state => ({ ...state, note: value }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => handleOnChange(event)}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.user_id}\n                  onChange={event => {\n                    setReassign(state => ({ ...state, user_id: event.target.value }))\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claims Analyst/Verifier Supervisor:</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claims Analyst/Verifier Supervisor?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claims Analyst/Verifier Supervisor for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign(reassign)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                  setReassign({\n                    note: '',\n                    user_id: ''\n                  })\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from '../../ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList'\n// import AssignDialiog from './../'\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// import ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchDetailsPage.module.scss'\n\nexport default function BatchDetailsPage (props) {\n  const { ApiService, UserManagementApi } = props\n  const [details, setDetails] = React.useState()\n  const [batch_number, setBatchNumber] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [claims, setClaim] = React.useState([])\n  const [forOverride, setForOverride] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [selectStatus, setSelectStatus] = React.useState(false)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const { batch_number, bundle_number } = props.match.params\n    setBatchNumber(batch_number)\n    setBundleNumber(bundle_number)\n\n    PageTitleService(`Batch No. ${batch_number}`)\n    BreadcrumbsService.setSelectedItems([\n      'dashboard',\n      'submittedPaymentRequest',\n      `submittedSpecificPaymentRequest:${bundle_number}`,\n      `specificBatch:${batch_number}`\n    ])\n    getBatchAndClaims({ batch_number, bundle_number })\n  }, [props.match.params.batch_number, props.match.params.bundle_number])\n\n  const getBatchAndClaims = args => {\n    const { batch_number, bundle_number } = args\n    Promise.all([\n      ApiService.getBatch({ bundle_number, batch_number }),\n      ApiService.getApprovedClaims({ bundle_number, batch_number })\n    ]).then(res => {\n      const [batchRes, claimsRes] = res\n\n      const { data: batch } = batchRes.data\n      const { result: claims } = claimsRes.data.data\n\n      setClaimCount(claims.length)\n      setClaim(claims)\n      setDetails(batch)\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleClickOverride = () => {\n    initDropdownUsers()\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  const initDropdownUsers = () => {\n    Promise.all([UserManagementApi.getClaimsAnalyst(), UserManagementApi.getClaimsVerifierSupervisors()]).then(res => {\n      const [analystRes, supervisorRes] = res\n      const data = [...analystRes.data, ...supervisorRes.data]\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n\n      setDropDownUsers(users)\n    })\n  }\n\n  const handleOnSubmitOverride = args => {\n    LoadingService.loading(true)\n    const { user_id, note } = args\n    ApiService.overrideClaims({\n      bundle_number,\n      batch_number,\n      claims: forOverride.claim_numbers,\n      _id: user_id,\n      note\n    }).then(res => {\n      getBatchAndClaims({ batch_number, bundle_number })\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} reassign_notes={false} />\n          <ClaimListHeader isManager count={claimCount} />\n          <ClaimList\n            isManager\n            items={claims}\n            onItemClick={args => {}}\n            actionItems={forOverride}\n            setActionItems={setForOverride}\n            setSelected={setSelected}\n            selectStatus={selectStatus}\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {!selectStatus ? (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => setSelectStatus(true)}\n                  >\n                    Override Claim\n                  </Button>\n                  <Button\n                    id='close'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => props.history.push(`/payment-request/${bundle_number}/submitted`)}\n                  >\n                    Close\n                  </Button>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => handleClickOverride()}\n                    disabled={forOverride.claim_numbers.length < 1}\n                  >\n                    Override\n                  </Button>\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => {\n                      setSelectStatus(false)\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitOverride}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsEncodingServices {\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static storeLookups ({ on, data, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'post',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static updateLookups ({ on, data, code, params }) {\n    return axios({\n      url: `/lookups/${code}/${on}`,\n      method: 'put',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Radio from '@material-ui/core/Radio'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Services\nimport ClaimsMaintainerServices from 'Services/Api/ClaimsMaintainerServices'\n\n// Styles\nimport classes from './MaintenancePage.module.scss'\n\n// Constants\nconst lookups = {\n  hospital_items: { on: 'hospital-item-list', field: 'hospital-item-list' },\n  reason_covered: { on: 'maintenance', field: 'covered-reason' },\n  reason_charging: { on: 'maintenance', field: 'charging-reason' },\n  reason_return: { on: 'maintenance', field: 'return-reason' },\n  reason_reject: { on: 'maintenance', field: 'reject-reason' },\n  claims_source: { on: 'maintenance', field: 'claims-source' },\n  claim_sub_type: { on: 'maintenance', field: 'claims-sub-type' },\n  claim_sub_sub_type: { on: 'maintenance', field: 'claims-sub-sub-type' }\n}\nconst initialValue = {\n  show: false,\n  title: '',\n  count: 0,\n  search: '',\n  limit: 10,\n  page: 1,\n  data: [],\n  orderBy: '',\n  order: true,\n  header: 'Hospital Item List',\n  filter: {description: {value: ''}, status: {value: ''}}\n}\nconst initialItem = {\n  description: '',\n  status: 'Active',\n  code: '',\n  active: true,\n  deactivate: false\n}\nlet columns = [\n  { name: 'Description', sortField: 'description', id: 'description', match: 'any' },\n  { name: 'Status', sortField: 'status', id: 'status', match: 'start' }\n]\nexport default function MaintenancePage (props) {\n  const [data, setData] = React.useState(initialValue)\n  const [lookup, setLookup] = React.useState(lookups.hospital_items)\n  const [debounce, setDebounce] = React.useState(null)\n  const [item, setItem] = React.useState(initialItem)\n  const [showAddItem, setShowAddItem] = React.useState({\n    show: false,\n    mode: 'add'\n  })\n  const [showAlert, setShowAlert] = React.useState({\n    open: false,\n    message: '',\n    onOk: '',\n    okLabel: 'Okay',\n    cancelLabel: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Claims Maintenance')\n    BreadcrumbsService.setSelectedItems(['maintenance'])\n  }, [])\n\n  React.useEffect(() => {\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: {...data, field: lookup.field} }).then(({ data: res }) => {\n      const { results, count } = res.data\n      setData(state => ({...state, data: results, count}))\n    })\n  }, [lookup])\n\n  const handleOnChange = params => {\n    const _params = {\n      limit: data.limit,\n      page: data.page,\n      search: data.search,\n      sort: `${data.orderBy}|${data.order ? 'desc' : 'asc'}`,\n      filter: data.filter,\n      field: lookup.field,\n      ...params\n    }\n\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setData(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const isActive = args => {\n    return (lookup && lookup.field && args === lookup.field ? 'active' : '')\n  }\n\n  const onClickHospitalItem = () => {\n    setLookup(lookups.hospital_items)\n    setData({...data, header: 'Hospital Item List', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n  const onClickNotCoveredReason = () => {\n    setLookup(lookups.reason_covered)\n    setData({...data, header: 'Not Covered Reasons', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickChargingReason = () => {\n    setLookup(lookups.reason_charging)\n    setData({...data, header: 'Reasons For Charging Member', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickClaimSource = () => {\n    setLookup(lookups.claims_source)\n    setData({...data, header: 'Claim Source', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickReturnReason = () => {\n    setLookup(lookups.reason_return)\n    setData({...data, header: 'Reimbursement Return Reasons', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickRejectReason = () => {\n    setLookup(lookups.reason_reject)\n    setData({...data, header: 'Reimbursement Reject Reasons', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickClaimSubType = () => {\n    setLookup(lookups.claim_sub_type)\n    setData({...data, header: 'Claim Sub-Type', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickClaimSubSubType = () => {\n    setLookup(lookups.claim_sub_sub_type)\n    setData({...data, header: 'Claim Sub Sub-Type', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const handleOnSort = orderBy => e => {\n    setData(p => ({ ...p, orderBy, order: !data.order }))\n    handleOnChange({ sort: `${orderBy}|${data.order ? 'asc' : 'desc'}` })\n  }\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setData(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnChange({ filter: { ...data.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  const handleOnSaveItem = () => {\n    LoadingService.loading(true)\n    const initialLookup = lookup\n    const _params = {\n      limit: 1,\n      page: 1,\n      search: {\n        description: item.description,\n        code: item.code\n      },\n      field: lookup.field\n    }\n    const handleOnOk = () => {\n      setShowAlert(state => ({ ...state, open: false }))\n    }\n\n    if (!item.description.trim()) {\n      setShowAlert(state =>\n        ({\n          ...state,\n          open: true,\n          message: 'Description details is empty. Please input the description details.',\n          onOk: handleOnOk,\n          okLabel: 'Okay',\n          cancelLabel: ''\n        }))\n      LoadingService.loading(false)\n    } else {\n      ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n        const { results } = res.data\n        if (results.length > 0) {\n          setShowAlert(state =>\n            ({\n              ...state,\n              open: true,\n              message: 'Description details already exists. Please change the description details encoded.',\n              onOk: handleOnOk,\n              okLabel: 'Okay',\n              cancelLabel: ''\n            }))\n        } else {\n          if (showAddItem.mode === 'add') {\n            ClaimsMaintainerServices.storeLookups({ on: lookup.on, data: item, params: { field: lookup.field } }).then(res => {\n              setItem(initialItem)\n              setLookup(false)\n              setLookup(initialLookup)\n              setShowAddItem({...showAddItem, show: false})\n              LoadingService.loading(false)\n            })\n          } else if (showAddItem.mode === 'edit') {\n            ClaimsMaintainerServices.updateLookups({ on: lookup.on, data: item, code: item.code, params: { field: lookup.field } }).then(res => {\n              setItem(initialItem)\n              setLookup(false)\n              setLookup(initialLookup)\n              setShowAddItem({...showAddItem, show: false})\n              LoadingService.loading(false)\n            })\n          }\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  const handleOnEditItem = item => {\n    setShowAddItem({...showAddItem, show: true, mode: 'edit'})\n    setItem({\n      description: item.description,\n      code: item.code,\n      status: item.status,\n      active: item.status === 'Active',\n      deactivate: item.status === 'Inactive'\n    })\n  }\n\n  const handleOnCancelItem = () => {\n    if (item.description) {\n      setShowAlert(state =>\n        ({\n          ...state,\n          open: true,\n          message: 'Are you sure you want to discard your changes?',\n          onOk: () => {\n            setShowAlert(alert => ({...alert, open: false}))\n            setShowAddItem(show => ({...show, show: false}))\n            setItem(item => ({...item, description: ''}))\n          },\n          okLabel: 'Yes',\n          cancelLabel: 'No'\n        }))\n    } else {\n      setShowAddItem({...showAddItem, show: false})\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['button-parent']}>\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='hospital-item-list' className={`button-positive ${classes[isActive('hospital-item-list')]}`} onClick={onClickHospitalItem} >\n          Hospital Item List\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='not-covered-reason' className={`button-positive ${classes[isActive('covered-reason')]}`} onClick={onClickNotCoveredReason} >\n          Not Covered Reason\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='reason-for-charging' className={`button-positive ${classes[isActive('charging-reason')]}`} onClick={onClickChargingReason} >\n          Reason for Charging Member\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-source' className={`button-positive ${classes[isActive('claims-source')]}`} onClick={onClickClaimSource} >\n          Claim Source\n        </Button>\n      </div>\n\n      <div className={classes['button-parent']}>\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='reimbursement-return-reason' className={`button-positive ${classes[isActive('return-reason')]}`} onClick={onClickReturnReason} >\n          Reimbursement Return Reason\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='reimbursement-reject-reason' className={`button-positive ${classes[isActive('reject-reason')]}`} onClick={onClickRejectReason} >\n          Reimbursement Reject Reason\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-sub-type' className={`button-positive ${classes[isActive('claims-sub-type')]}`} onClick={onClickClaimSubType} >\n          Claim Sub-Type\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-sub-sub-type' className={`button-positive ${classes[isActive('claims-sub-sub-type')]}`} onClick={onClickClaimSubSubType} >\n          Claim Sub Sub-Type\n        </Button>\n      </div>\n\n      <div className={classes.header}>\n        <div className={classes['header-wrapper']}>\n          <span className={classes['header-text']}> {data.header} </span>\n          <Button disabled={showAddItem.show} variant='contained' color='primary' id='add-item' className='button-positive' onClick={() => setShowAddItem({...showAddItem, show: true, mode: 'add'})} >\n           + Add\n          </Button>\n        </div>\n      </div>\n\n      {showAddItem.show && <div className={classes['add-item-root']}>\n        <div className={classes.wrapper}>\n          <span className={classes['header-text']}>\n            Description:\n          </span>\n          <div className={classes['text-wrapper']}>\n            <TextField\n              id={'description-field'}\n              value={item.description}\n              onChange={event => { setItem({...item, description: event.target.value}) }}\n            />\n          </div>\n          <div className={classes['radio-buttons']}>\n            <div className={classes.activate}>\n              Active:\n              <Radio\n                color='primary'\n                id={'activate'}\n                checked={item.active}\n                onClick={() =>\n                  setItem(\n                    {...item,\n                      status: 'Active',\n                      active: true,\n                      deactivate: false})} />\n            </div>\n            <div className={classes.deactivate}>\n              Deactivate:\n              <Radio\n                color='primary'\n                id={'deactivate'}\n                checked={item.deactivate}\n                onClick={() =>\n                  setItem(\n                    {...item,\n                      status: 'Inactive',\n                      active: false,\n                      deactivate: true})} />\n            </div>\n          </div>\n          <div className={classes['button-wrapper']}>\n            <Button variant='contained' color='primary' id='add-item' className='button-positive' onClick={handleOnSaveItem} >\n              Save\n            </Button>\n            <Button variant='contained' color='primary' id='add-item' className='button-negative' onClick={handleOnCancelItem} >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </div>}\n\n      {!showAddItem.show && <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <React.Fragment>\n              <TableRow>\n                {columns.map(headCell => (\n                  <TableCell key={headCell.sortField} id={`sort-${headCell.id}`}>\n                    <TableSortLabel\n                      active={data.orderBy === headCell.sortField}\n                      direction={data.order ? 'asc' : 'desc'}\n                      onClick={handleOnSort(headCell.sortField)}\n                    >\n                      {headCell.name}\n                    </TableSortLabel>\n                    <TextField\n                      value={data.filter[headCell.sortField].value || ''}\n                      onChange={event => {\n                        const search = event.target.value\n                        setData(p => ({ ...p, filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: search,\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n                <TableCell key={'action'} id={`sort-action`} />\n              </TableRow>\n            </React.Fragment>\n\n          }\n          body={data && data.data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`item-description-${index}`}>{item.description}</TableCell>\n              <TableCell id={`item-status-${index}`}>{item.status}</TableCell>\n              <TableCell align={'center'}>\n                <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`} onClick={() => handleOnEditItem(item)} >\n                  Edit\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={data && data.count}\n          page={data && data.page}\n          limit={data && data.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={handleOnChange}\n        />\n      </div>}\n      <Alert\n        open={showAlert.open}\n        message={showAlert.message}\n        okLabel={showAlert.okLabel}\n        cancelLabel={showAlert.cancelLabel}\n        onCancel={() => setShowAlert(alert => ({...alert, open: false}))}\n        onOk={showAlert.onOk}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\n\n// Pages of Batch Encoder Supervisor\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Pages of Claims Details Encoder Supervisor\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from '../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\n\n// Pages of PR Supervisor\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Pages of Claim Manager\nimport Dashboard from '../Components/ClaimsManager/Dashboard/Dashboard'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// ClaimsManager\nimport BatchDetailsPage from '../Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage'\n\n// Maintenance Page\nimport MaintenancePage from '../Components/ClaimsManager/MaintenancePage/MaintenancePage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport ClaimsManagerServices from 'Services/Api/ClaimsManagerServices/ClaimsManagerServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Maintenance',\n    icon: 'tools',\n    to: '/claims/maintenance'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  },\n  maintenance: {\n    text: 'Claims Maintenance',\n    to: '/claims/maintenance'\n  },\n  submittedSpecificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}/submitted`\n  },\n  view: {\n    text: 'View'\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst prManagerPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    close: true\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } }\n  }\n}\n\nconst reviewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: {\n      visible: true,\n      enabled: true\n    },\n    letter_of_advice: {\n      visible: true,\n      enabled: true\n    }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nconst viewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n      <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n\n      {/* PR Supervisor Pages */}\n      <Route\n        path='/payment-request/:bundle_number/submitted'\n        exact\n        render={props => <SubmittedPaymentRequestPage isManager {...props} />}\n      />\n      <Route\n        path='/payment-request/:bundle_number/submitted/:batch_number'\n        exact\n        render={props => (\n          <BatchDetailsPage ApiService={ClaimsManagerServices} UserManagementApi={UserManagementServices} {...props} />\n        )}\n      />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n\n      {/* Routes for Claim Viewer */}\n      <Route\n        path='/payment-request/:bundle_number/submitted/:batch_number/claim/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={[\n              'dashboard',\n              'submittedPaymentRequest',\n              `submittedSpecificPaymentRequest:${props.match.params.bundle_number}`,\n              `specificBatch:${props.match.params.batch_number}`,\n              'claims',\n              `specificClaim:${props.match.params.claim_number}`\n            ]}\n            {...props}\n            isManager\n            permissions={prManagerPermissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={reviewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/view/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={viewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n      {/* End of Routes for Claim Viewer  */}\n\n      <Route path='/claims/maintenance' exact component={MaintenancePage} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","const roles = {\n  BATCH_ENCODER: ['BATCH_ENCODER'],\n  BATCH_ENCODER_SUPERVISOR: ['BATCH_ENCODER_SUPERVISOR'],\n  CLAIMS_DETAILS_ENCODER: ['CLAIMS_ENCODER', 'CLAIMS_DETAILS_ENCODER'],\n  CLAIMS_DETAILS_ENCODER_SUPERVISOR: ['CLAIMS_DETAILS_ENCODER_SUPERVISOR'],\n  CLAIMS_ANALYST: ['CLAIMS_ANALYST', 'CLAIMS_VERIFIER'],\n  PR_OFFICER: ['PR_OFFICER'],\n  PR_OFFICER_SUPERVISOR: ['PR_OFFICER_SUPERVISOR'],\n  MEDICAL_CONSULTANT: ['MEDICAL_CONSULTANT'],\n  CLAIMS_RECON: ['CLAIMS_RECON'],\n  CLAIMS_VERIFIER_SUPERVISOR: ['CLAIMS_VERIFIER_SUPERVISOR', 'CLAIMS_SUPERVISOR'],\n  CLAIMS_MANAGER: ['CLAIMS_MANAGER']\n}\n\nconst mapRoles = role => {\n  for (const r in roles) {\n    if (roles[r].includes(role)) return r\n  }\n}\n\nexport { mapRoles, roles }\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: null\n}\nconst bundlesReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BUNDLE_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'ADD_BUNDLE':\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      }\n\n    case 'SET_SELECTED_BUNDLE':\n      return {\n        ...state,\n        selected: action.payload\n      }\n\n    case 'SET_BUNDLE_BATCHES':\n      return {\n        ...state,\n        selected: { ...state.selected, batches: action.payload }\n      }\n\n    case 'ADD_BATCH':\n      const { batches } = state.selected\n      const { items } = batches\n\n      return {\n        ...state,\n        selected: { ...state.selected, batches: { ...batches, items: [action.payload, ...items] } }\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default bundlesReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: {},\n  batchNumber: '',\n  show: false,\n  action: '',\n  saveControl: false\n}\nconst batchReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BATCH_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'SET_BATCH_ACTION':\n      return {\n        ...state,\n        action: action.payload\n      }\n\n    case 'SET_SELECTED_BATCH':\n      return {\n        ...state,\n        selected: { ...state.selected, ...action.payload }\n      }\n\n    case 'SET_SHOW_BATCH_FORM':\n      return {\n        ...state,\n        show: action.payload\n      }\n\n    case 'SET_SAVE_BATCH_CONTROL':\n      return {\n        ...state,\n        saveControl: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default batchReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  client: {\n    registered_name: [],\n    corporate_account_no: [],\n    data: []\n  }\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  // value of suggestion first render without calling action (temp) reason: action.for is undefined on first render if there's a selector on component\n  // tried to solved by useEffect but failed since useEffect will render after component's rendered\n  if (!action.for) return initialState\n  // value of suggestion calling action (temp) if not equal to BATCH_ENCODING (when calling an action)\n  else if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import { combineReducers } from 'redux'\n\nimport bundlesReducer from './bundlesReducer'\nimport batchReducer from './batchReducer'\nimport suggestionsReducer from './suggestionsReducer'\n\nexport default combineReducers({\n  bundles: bundlesReducer,\n  batch: batchReducer,\n  suggestions: suggestionsReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_ClAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_ClAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'SET_ClAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'ADD_ClAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  pro: {\n    id: [],\n    name: [],\n    data: []\n  },\n  facility: {\n    id: [],\n    name: [],\n    data: []\n  },\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  anesthesiologist: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  pfDoctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  specialization: {\n    description: [],\n    data: []\n  },\n  hospitalItem: {\n    id: [],\n    name: [],\n    data: []\n  },\n  icd10: [],\n  cpt: {\n    description: [],\n    code: [],\n    data: []\n  },\n  contract: {\n    years: []\n  }\n}\n\nconst icd10 = {\n  given_diagnosis: [],\n  description: [],\n  code: [],\n  data: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { field } = action.payload\n        return {\n          ...state,\n          [field]: [...state[field], { ...icd10 }]\n        }\n      })()\n\n    case 'REMOVE_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { index, field } = action.payload\n        return {\n          ...state,\n          [field]: state[field].filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    case 'RESET_SUGGESTION_ARRAY':\n      return (() => {\n        const { field, index } = action.payload\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              for (let f in icd10) i[f] = icd10[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst grandTotalReducer = (state = 0, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_GRAND_TOTAL':\n      return 0\n\n    case 'SET_GRAND_TOTAL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default grandTotalReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    tooth_number: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst dentalProcedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_DENTAL_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default dentalProcedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  notes: [],\n  assignee: { id: '', name: '' },\n  note: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_NOTES':\n      return initialValue\n\n    case 'SET_REASSIGN_NOTES':\n      return (() => {\n        return {\n          ...state,\n          note: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport grandTotalReducer from './grandTotalReducer'\nimport dentalProcedureReducer from './dentalProcedureReducer'\nimport reassignReducer from './reassignReducer'\nimport errorReducer from './errorReducer'\n\nexport default combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  grandTotal: grandTotalReducer,\n  error: errorReducer,\n  dentalProcedure: dentalProcedureReducer,\n  reassign: reassignReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_CLAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_CLAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  pro: {\n    id: [],\n    name: [],\n    data: []\n  },\n  facility: {\n    id: [],\n    name: [],\n    data: []\n  },\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  anesthesiologist: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  pfDoctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  specialization: {\n    description: [],\n    data: []\n  },\n  hospitalItem: {\n    id: [],\n    name: [],\n    data: []\n  },\n  icd10: [],\n  cpt: {\n    description: [],\n    code: [],\n    data: []\n  },\n  contract: {\n    years: []\n  }\n}\n\nconst icd10 = {\n  given_diagnosis: [],\n  description: [],\n  code: [],\n  data: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { field } = action.payload\n        return {\n          ...state,\n          [field]: [...state[field], { ...icd10 }]\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    case 'RESET_SUGGESTION_ARRAY':\n      return (() => {\n        const { field, index } = action.payload\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              for (let f in icd10) i[f] = icd10[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst discrepancyReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DISCREPANCY':\n      return initialValue\n\n    case 'SET_DISCREPANCY':\n      return { ...initialValue, ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default discrepancyReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst escalationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ESCALATION_MESSAGES':\n      return initialValue\n\n    case 'ADD_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_ESCALATION_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default escalationReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst inquiryReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_INQUIRY_MESSAGES':\n      return initialValue\n\n    case 'ADD_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_INQUIRY_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default inquiryReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_MESSAGES':\n      return initialValue\n\n    case 'ADD_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import constants from './../../contants'\n\nconst initialValue = true\n\nconst rejectReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_REJECT_CONTROL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default rejectReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: []\n}\n\nconst reconReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_RECON_NOTES':\n      return initialValue\n\n    case 'SET_RECON_NOTES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reconReducer\n","import constants from './../../contants'\n\nconst initialValue = '--'\n\nconst utilizationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_LIMIT_TYPE':\n      return (state = action.payload)\n\n    case 'RESET_LIMIT_TYPE':\n      return initialValue\n\n    default:\n      return state\n  }\n}\n\nexport default utilizationReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  note: ''\n}\n\nconst returnReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_RETURN_NOTES':\n      return initialValue\n\n    case 'SET_RETURN_NOTES':\n      return (() => {\n        return {\n          ...state,\n          note: action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default returnReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport discrepancyReducer from './discrepancyReducer'\nimport errorReducer from './errorReducer'\nimport escalationReducer from './escalationReducer'\nimport inquiryReducer from './inquiryReducer'\nimport reassignReducer from './reassignReducer'\nimport rejectReducer from './rejectReducer'\nimport reconReducer from './reconReducer'\nimport utilizationReducer from './utilizationReducer'\nimport returnReducer from './returnReducer'\n\nconst reducers = combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  discrepancy: discrepancyReducer,\n  error: errorReducer,\n  inquiries: inquiryReducer,\n  escalations: escalationReducer,\n  reassign: reassignReducer,\n  rejectStatus: rejectReducer,\n  recon: reconReducer,\n  title: utilizationReducer,\n  return: returnReducer\n})\n\nexport default reducers\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'CLAIMS') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport BatchEncoding from './BatchEncoding'\nimport ClaimsEncoding from './ClaimsEncoding'\nimport ClaimsAnalysis from './ClaimsAnalysis'\n\nconst reducers = combineReducers({\n  BatchEncoding,\n  ClaimsEncoding,\n  ClaimsAnalysis\n})\n\nexport default reducers\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Routes by role\nimport BatchEncoderRoutes from './Routes/BatchEncoder'\nimport BatchEncoderSupervisorRoutes from './Routes/BatchEncoderSupervisor'\nimport ClaimsDetailsEncoderRoutes from './Routes/ClaimsDetailsEncoder'\nimport ClaimsDetailsEncoderSupervisorRoutes from './Routes/ClaimsDetailsEncoderSupervisor'\nimport ClaimsAnalystRoutes from './Routes/ClaimsAnalyst'\nimport PaymentRequestRoutes from './Routes/PaymentRequest'\nimport PaymentRequestSupervisorRoutes from './Routes/PaymentRequestSupervisor'\nimport MedicalConsultantRoutes from './Routes/MedicalConsultant'\nimport ClaimsReconRoutes from './Routes/ClaimsRecon'\nimport ClaimsVerifierSupervisorRoutes from './Routes/ClaimsVerifierSupervisor'\nimport ClaimsManagerRoutes from './Routes/ClaimsManager'\n\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Constants\nimport { mapRoles } from './Constant/ClaimUsers'\n\n// Store\nimport { Provider } from 'react-redux'\nimport Store from './Store'\n\nexport default function ClaimsModule ({ history }) {\n  const [userRole, setUserRole] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(true)\n\n  React.useEffect(() => {\n    document.title = 'HIMS - Claims'\n    const role = localStorage.getItem('role')\n    setUserRole(mapRoles(role))\n    setIsLoading(false)\n  }, [])\n\n  const batchEncoderLogic = props => {\n    if (localStorage.getItem('from_login')) {\n      BatchEncodingServices.createBundle().then(res => {\n        const { data } = res.data\n        localStorage.removeItem('from_login')\n        history.push(`/bundles/${data}/create`)\n      })\n    } else return <Route path='/' render={() => BatchEncoderRoutes(props)} />\n  }\n\n  return (\n    <Provider store={Store}>\n      {!isLoading && (\n        <Switch>\n          {userRole === 'BATCH_ENCODER' && batchEncoderLogic({ userRole })}\n          {userRole === 'BATCH_ENCODER_SUPERVISOR' && (\n            <Route path='/' render={() => BatchEncoderSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_DETAILS_ENCODER' && (\n            <Route path='/' render={() => ClaimsDetailsEncoderRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_DETAILS_ENCODER_SUPERVISOR' && (\n            <Route path='/' render={() => ClaimsDetailsEncoderSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_ANALYST' && <Route path='/' render={() => ClaimsAnalystRoutes({ userRole })} />}\n\n          {userRole === 'PR_OFFICER' && <Route path='/' render={() => PaymentRequestRoutes({ userRole })} />}\n\n          {userRole === 'PR_OFFICER_SUPERVISOR' && (\n            <Route path='/' render={() => PaymentRequestSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'MEDICAL_CONSULTANT' && <Route path='/' render={() => MedicalConsultantRoutes({ userRole })} />}\n\n          {userRole === 'CLAIMS_RECON' && <Route path='/' render={() => ClaimsReconRoutes({ userRole })} />}\n\n          {userRole === 'CLAIMS_VERIFIER_SUPERVISOR' && (\n            <Route path='/' render={() => ClaimsVerifierSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_MANAGER' && <Route path='/' render={() => ClaimsManagerRoutes({ userRole })} />}\n        </Switch>\n      )}\n    </Provider>\n  )\n}\n","import numeral from 'numeral'\nimport moment from 'moment'\n\nconst CurrencyFormatter = value => {\n  return numeral(value).format('0,0.00')\n}\n\nconst UpperWord = sentence => {\n  return sentence.charAt(0).toUpperCase() + sentence.slice(1)\n}\n\nconst DigitFormatter = value => {\n  return numeral(value).format('0,0')\n}\n\nconst DateFormatter = (value, format = 'MM/DD/YYYY') => {\n  const _value = moment(value)\n  return _value.isValid() ? moment(value).format(format) : ''\n}\n\nconst DateFormatterByAbbreviation = (value, format = 'MMM DD, YYYY') => {\n  return moment(value).format(format)\n}\n\nconst DateFormatterFromNow = value => {\n  return moment(value).fromNow()\n}\n\nconst LargeNumberFormatter = value => {\n  return parseFloat(numeral(value).format('0,0.00'))\n}\n\nconst NameFormatter = args => {\n  const { initial, abr } = args\n  const { lastName, firstName, middleName } = args\n  const { last_name, first_name, middle_name } = args\n\n  return {\n    format1: [lastName || last_name, ',', firstName || first_name, middleName || middle_name, initial, abr]\n      .filter(Boolean)\n      .join(' '),\n    format2: [abr, firstName || first_name, middleName || middle_name, lastName || last_name, initial]\n      .filter(Boolean)\n      .join(' ')\n  }\n}\n\nexport {\n  CurrencyFormatter,\n  DigitFormatter,\n  UpperWord,\n  DateFormatter,\n  DateFormatterByAbbreviation,\n  DateFormatterFromNow,\n  LargeNumberFormatter,\n  NameFormatter\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nimport moment from 'moment'\n\nimport classes from './DatePicker.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\nexport default function DatePicker (props) {\n  const {\n    id,\n    label,\n    required,\n    value,\n    format,\n    disableComponents = false,\n    readOnly,\n    onChange,\n    error,\n    tabindex,\n    noMargin = false,\n    ...other\n  } = props\n  const [open, setOpen] = React.useState(false)\n  const [selectedDate, setSelectedDate] = React.useState()\n\n  const InputRef = React.useRef()\n  const [focus, setFocus] = React.useState()\n\n  React.useEffect(() => {\n    setSelectedDate(value)\n    // setSelectedDate(new Date(value))\n  }, [value])\n\n  const handleOnClose = () => {\n    setOpen(false)\n    handleOnFocus()\n  }\n  const handleDateChange = date => {\n    setOpen(false)\n    setSelectedDate(date)\n    if (typeof onChange === 'function') onChange(moment(date))\n\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n    setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <KeyboardDatePicker\n              TextFieldComponent={p => (\n                <React.Fragment>\n                  <Paper\n                    className={`${classes['text-field']} ${noMargin ? classes['no-margin'] : ''}  ${\n                      error ? classes['has-error'] : focus && classes.focus\n                    } box-shadow-field ${disableComponents && classes.disabled}`}\n                    onBlur={handleOnBlur}\n                  >\n                    <InputBase\n                      id={id}\n                      inputProps={{ ref: InputRef }}\n                      className={classes.input}\n                      value={p.value}\n                      onFocus={handleOnFocus}\n                      disabled={disableComponents}\n                    />\n\n                    <div className={classes['date-button']}>\n                      <IconButton\n                        id={`${id}-date-button`}\n                        className={classes.button}\n                        disabled={disableComponents}\n                        size='small'\n                        onClick={() => setOpen(true)}\n                      >\n                        <FontAwesomeIcon icon='calendar-day' className={classes.icon} />\n                      </IconButton>\n                    </div>\n                  </Paper>\n                  {error && <span className={classes.error}>{error}</span>}\n                </React.Fragment>\n              )}\n              value={selectedDate}\n              format={'MM/DD/YYYY' || format}\n              open={open}\n              onClose={handleOnClose}\n              onChange={handleDateChange}\n              clearable\n              {...other}\n            />\n          </MuiPickersUtilsProvider>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\n// import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\n\n// Styles\nimport classes from './Table.module.scss'\nimport { TableCell } from '@material-ui/core'\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}))\n\nfunction TablePaginationActions (props) {\n  const classes = useStyles1()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label='first page'>\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label='previous page'>\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}\n\nexport default function CustomTable ({\n  id = '',\n  TableContainerProps,\n  TableProps,\n  head,\n  body,\n  footer,\n  pagination = true,\n  count = 0,\n  page = 1,\n  limit = 10,\n  rowsPerPageOptions = [5, 10, 25],\n  onChange,\n  footerComponent\n}) {\n  // const emptyRows = limit - Math.min(limit, count - (page - 1) * limit)\n\n  const handleChangePage = (event, newPage) => {\n    onChange({ page: newPage + 1 })\n  }\n\n  const handleChangeRowsPerPage = event => {\n    const value = parseInt(event.target.value)\n    onChange({ limit: value, page: 1 })\n  }\n\n  return (\n    <React.Fragment>\n      <TableContainer component={Paper} className={classes.root} {...TableContainerProps}>\n        <Table id={id} className={classes.table} aria-label='custom pagination table' {...TableProps}>\n          <TableHead>{head}</TableHead>\n          <TableBody>\n            {body}\n\n            {/* {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows, backgroundColor: 'white' }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )} */}\n          </TableBody>\n          <TableFooter>{footer}</TableFooter>\n        </Table>\n      </TableContainer>\n\n      <Table className={classes.footer}>\n        <TableBody>\n          <TableRow>\n            <TableCell className={classes.float}>{footerComponent}</TableCell>\n            {pagination && (\n              <React.Fragment>\n                <TablePagination\n                  rowsPerPageOptions={rowsPerPageOptions}\n                  count={count}\n                  rowsPerPage={limit}\n                  page={page - 1}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </React.Fragment>\n            )}\n          </TableRow>\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function Alert (props) {\n  const defaultFunction = () => {}\n  const {\n    message,\n    open = false,\n    cancelLabel,\n    okLabel,\n    onOk = defaultFunction,\n    onCancel = defaultFunction,\n    onClose = defaultFunction\n  } = props\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>{message}</DialogTitle>\n        <DialogActions>\n          {cancelLabel && (\n            <Button\n              id='alert-dialog-cancel'\n              onClick={onCancel}\n              variant='contained'\n              color='primary'\n              className='button-negative'\n            >\n              {cancelLabel}\n            </Button>\n          )}\n\n          {okLabel && (\n            <Button\n              id='alert-dialog-ok'\n              onClick={onOk}\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              autoFocus\n            >\n              {okLabel}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\n// CSS Classes\nimport classes from './DashboardTileComponent.module.scss'\n\n/**\n * Create dashboard tile component\n *\n * @param children child components\n * @param count count value to be displayed; keys: color, value\n * @param header tile header label; keys: color, value\n * @param title title string\n * @param viewList view list\n * @param onFilterChange change filter handler\n * @param isFilterShown flag for showing filter\n */\nconst DashboardTileComponent = ({\n  children,\n  count,\n  header,\n  title,\n  viewList,\n  actionHeader = null,\n  onFilterChange,\n  isFilterShown = true,\n  id\n}) => {\n  const [filter, setFilter] = React.useState('this-week')\n  const handleFilterChange = event => {\n    setFilter(event.target.value)\n    if (typeof onFilterChange === 'function') onFilterChange(event.target.value)\n  }\n\n  return (\n    <Paper className={classes.root} id={id}>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          {header && (\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${header.color}`}>\n                {header.value}\n              </Typography>\n            </div>\n          )}\n\n          <div className={classes['first-row']}>\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${count.color}`} id={count.id}>\n                {count.value || 0}\n              </Typography>\n            </div>\n            {isFilterShown && (\n              <div className={classes.filter}>\n                <span>\n                  <FormControl>\n                    <Select\n                      className={classes['select']}\n                      value={filter}\n                      onChange={handleFilterChange}\n                      id={`${id}-filter`}\n                    >\n                      <MenuItem value='today' id={`${id}-today`}>\n                        <Typography className={classes.input}>Today</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-week' id={`${id}-this-week`} selected>\n                        <Typography className={classes.input}>This Week</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-month' id={`${id}-this-month`}>\n                        <Typography className={classes.input}>This Month</Typography>\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className={classes['second-row']}>\n            <div className={classes.title}>\n              <Typography variant='subtitle2'>{title}</Typography>\n            </div>\n            <div className={classes.action}>{actionHeader || ''}</div>\n          </div>\n        </div>\n\n        <div className={classes.list}>\n          {React.Children.map(children, child => {\n            return child\n          })}\n        </div>\n\n        <div className={classes.action}>{viewList || ''}</div>\n      </div>\n    </Paper>\n  )\n}\n\nDashboardTileComponent.displayName = 'DashboardTileComponent'\n\nexport default DashboardTileComponent\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    minWidth: 400,\n    border: '1px solid transparent'\n  },\n  focus: {\n    borderColor: 'green'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n})\n\nexport default function SearchTextComponent ({ value, onChange, placeholder = '', id }) {\n  const classes = useStyles()\n\n  const [focus, setFocus] = React.useState()\n\n  return (\n    <Paper className={`${classes.root} ${focus && classes.focus} box-shadow-field`} onBlur={() => setFocus(false)}>\n      <IconButton className={classes.iconButton} aria-label='search'>\n        <SearchIcon />\n      </IconButton>\n      <InputBase\n        id={id}\n        className={classes.input}\n        placeholder={placeholder}\n        value={value || null}\n        onChange={e => onChange && onChange(e)}\n        autoComplete='off'\n        onFocus={() => setFocus(true)}\n      />\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './TextFieldCurrency.module.scss'\nexport default function TextFieldCurrency (props) {\n  const { label = '', required, currency = true, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {CurrencyFormatter(other.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                thousandSeparator\n                decimalScale={2}\n                allowEmptyFormatting\n                fixedDecimalScale\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { floatValue } = values\n                  return floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n                onBlur={() => setFocus(false)}\n                // {...other}\n              />\n              {currency && (\n                <div className={classes.currency}>\n                  <Typography variant='subtitle2' className={classes.label}>\n                    PHP\n                  </Typography>\n                </div>\n              )}\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__2LrBe\",\"teeth\":\"style_teeth__2oVTW\",\"flip-x\":\"style_flip-x__1PGnc\",\"flip-y\":\"style_flip-y__33IP9\",\"crown\":\"style_crown__1599k\",\"gums\":\"style_gums__11FhV\",\"extracted\":\"style_extracted__3PnGn\",\"filled\":\"style_filled__1lsjD\",\"other-details\":\"style_other-details__NUZKH\",\"circle\":\"style_circle__15989\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark\n      },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}))\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color='inherit' variant='subtitle1'>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant='h6' id='tableTitle'>\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title='Delete'>\n            <IconButton aria-label='delete'>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title='Filter list'>\n            <IconButton aria-label='filter list'>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  analystTable: {\n    minWidth: 650\n  },\n  tableWrapper: {\n    overflowX: 'hidden'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}))\n\nexport default function EnhancedTable (props) {\n  const {\n    headCells,\n    children,\n    handleRequestSort,\n    handleSelectAllClick,\n    order,\n    orderBy,\n    pagination,\n    checkAll,\n    sorter,\n    size,\n    indeterminate,\n    checked,\n    checkboxColor,\n    analyst,\n    allowCheck = true,\n    allowCheckDisabled = false,\n    selectStatus = false\n  } = props\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={`${analyst ? classes.analystTable : classes.table}`}\n            aria-labelledby='tableTitle'\n            size={size}\n          >\n            <TableHead>\n              <TableRow>\n                {selectStatus\n                  ? checkAll && (\n                    <TableCell padding='checkbox'>\n                      {allowCheck ? (\n                        <Checkbox\n                          disabled={allowCheckDisabled}\n                          indeterminate={indeterminate}\n                          checked={checked}\n                          onChange={handleSelectAllClick}\n                          color={checkboxColor}\n                        />\n                      ) : null}\n                    </TableCell>\n                  )\n                  : null}\n\n                {headCells.map(headCell => (\n                  <TableCell\n                    key={headCell.id}\n                    align={headCell.center ? 'center' : headCell.numeric ? 'right' : 'left'}\n                    padding={headCell.disablePadding ? 'none' : 'default'}\n                    sortDirection={orderBy === headCell.id ? order : false}\n                    width={headCell.width}\n                    id={headCell.id}\n                  >\n                    {sorter ? (\n                      <TableSortLabel\n                        active={orderBy === headCell.id}\n                        direction={order}\n                        onClick={event => handleRequestSort(event, headCell.id)}\n                      >\n                        {headCell.label}\n                        {orderBy === headCell.id ? (\n                          <span className={classes.visuallyHidden}>\n                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                          </span>\n                        ) : null}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            {children}\n          </Table>\n        </div>\n        {pagination && <TablePagination component='div' {...pagination} />}\n      </Paper>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DashboardTileComponent_root__3ZFup\",\"wrapper\":\"DashboardTileComponent_wrapper__1hVRB\",\"header\":\"DashboardTileComponent_header__2_IQZ\",\"input\":\"DashboardTileComponent_input__sFY_A\",\"first-row\":\"DashboardTileComponent_first-row__KbzvW\",\"count\":\"DashboardTileComponent_count__NJO1q\",\"filter\":\"DashboardTileComponent_filter__3FsXI\",\"second-row\":\"DashboardTileComponent_second-row__1xXpk\",\"title\":\"DashboardTileComponent_title__1vnM-\",\"list\":\"DashboardTileComponent_list__38Z1j\",\"action\":\"DashboardTileComponent_action__2L_x5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Table_root__1yDG4\",\"loader\":\"Table_loader__jTLoL\",\"footer\":\"Table_footer__3Si1n\",\"float\":\"Table_float__3dNhj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker_root__MX4vO\",\"label\":\"DatePicker_label__2BW98\",\"wrapper\":\"DatePicker_wrapper__3veK8\",\"read-only-value\":\"DatePicker_read-only-value__2RKjx\",\"text-field\":\"DatePicker_text-field__2A671\",\"no-margin\":\"DatePicker_no-margin__2gW7n\",\"input\":\"DatePicker_input__2NmuO\",\"date-button\":\"DatePicker_date-button__NIXXn\",\"focus\":\"DatePicker_focus__QzQPi\",\"has-error\":\"DatePicker_has-error__dQMqm\",\"disabled\":\"DatePicker_disabled__1dIUt\",\"error\":\"DatePicker_error__3kYtU\",\"date\":\"DatePicker_date__3vBBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldCurrency_root__fkWBS\",\"label\":\"TextFieldCurrency_label__3VB-Y\",\"wrapper\":\"TextFieldCurrency_wrapper__2DwLz\",\"read-only-value\":\"TextFieldCurrency_read-only-value__3klW0\",\"text-field\":\"TextFieldCurrency_text-field__2ZFkS\",\"input\":\"TextFieldCurrency_input__3v0Q_\",\"currency\":\"TextFieldCurrency_currency__20Xbk\",\"focus\":\"TextFieldCurrency_focus__3OqZJ\",\"has-error\":\"TextFieldCurrency_has-error__fUhVi\",\"error\":\"TextFieldCurrency_error__3bHzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__8Tg0R\",\"header-container\":\"ViewList_header-container__2ebNU\",\"header\":\"ViewList_header__1yXdi\",\"title\":\"ViewList_title__2CYeW\",\"content\":\"ViewList_content__boknL\",\"search\":\"ViewList_search__2dgTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TaskTrayComponent_root__31ufL\",\"title\":\"TaskTrayComponent_title__2hrpU\",\"wrapper\":\"TaskTrayComponent_wrapper__1iTYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TicketListComponent_root__aFbrR\",\"title\":\"TicketListComponent_title__1ySxt\",\"wrapper\":\"TicketListComponent_wrapper__19DvO\",\"content\":\"TicketListComponent_content__2qWWX\",\"header\":\"TicketListComponent_header__1OiZt\",\"input\":\"TicketListComponent_input__1VLul\",\"count\":\"TicketListComponent_count__3DIoE\",\"filter\":\"TicketListComponent_filter__1CeKK\",\"list\":\"TicketListComponent_list__314I6\",\"action\":\"TicketListComponent_action__Ufizk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__oAI_u\",\"tiles\":\"Dashboard_tiles__2syUb\",\"task-tray\":\"Dashboard_task-tray__XT4CQ\",\"list-item\":\"Dashboard_list-item__12cH_\",\"details\":\"Dashboard_details__KoE3I\",\"detail-item\":\"Dashboard_detail-item__1IcO1\",\"label\":\"Dashboard_label__27GN_\",\"content\":\"Dashboard_content__1bf_x\",\"action\":\"Dashboard_action__3rzPy\",\"ticket-list\":\"Dashboard_ticket-list__2n3Wk\",\"completed_task\":\"Dashboard_completed_task__1hbob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete_root__2814h\",\"label\":\"AutoComplete_label__3-iRy\",\"wrapper\":\"AutoComplete_wrapper__2kjw3\",\"read-only-value\":\"AutoComplete_read-only-value__6V5Rg\",\"autocomplete-field\":\"AutoComplete_autocomplete-field__DKxfc\",\"form-control\":\"AutoComplete_form-control__izw0T\",\"input\":\"AutoComplete_input__1okbY\",\"suggestions\":\"AutoComplete_suggestions__3l5Zj\",\"focus\":\"AutoComplete_focus__2WKYu\",\"has-error\":\"AutoComplete_has-error__1GzeK\",\"error\":\"AutoComplete_error__QM8Cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldNumber_root__ZJK7b\",\"label\":\"TextFieldNumber_label__3x30X\",\"wrapper\":\"TextFieldNumber_wrapper__26xqZ\",\"read-only-value\":\"TextFieldNumber_read-only-value__37dIc\",\"text-field\":\"TextFieldNumber_text-field__2-te1\",\"input\":\"TextFieldNumber_input__2aj-i\",\"focus\":\"TextFieldNumber_focus__1VUVD\",\"has-error\":\"TextFieldNumber_has-error__2Z7EW\",\"error\":\"TextFieldNumber_error__1YPiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BundleDetails_root__1kDZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchList_root__1b5fa\",\"buttonWrapper\":\"BatchList_buttonWrapper__NCrl5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DropDown_root__1k5bx\",\"label\":\"DropDown_label__nY7ih\",\"wrapper\":\"DropDown_wrapper__3QKA8\",\"read-only-value\":\"DropDown_read-only-value__kiJtQ\",\"select-container\":\"DropDown_select-container__cdS_q\",\"select\":\"DropDown_select__3X8Jg\",\"input\":\"DropDown_input__2BzGr\",\"focus\":\"DropDown_focus__9njFf\",\"has-error\":\"DropDown_has-error__1knu_\",\"disabled\":\"DropDown_disabled__NMExl\",\"error\":\"DropDown_error__21XnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchForm_root__1Rotq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"BundlePage_header__14ooW\",\"title\":\"BundlePage_title__1Lc1W\",\"root\":\"BundlePage_root__a3kNL\",\"list-header\":\"BundlePage_list-header__1bSSF\",\"actions\":\"BundlePage_actions__3D_Z5\",\"bundle-details\":\"BundlePage_bundle-details__2awUE\",\"batch-list\":\"BundlePage_batch-list__3fbdk\",\"table-container\":\"BundlePage_table-container__4YbDV\",\"buttonWrapper\":\"BundlePage_buttonWrapper__y7DXv\",\"delete-button\":\"BundlePage_delete-button__2Bc0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NewBundlePage_root__30-wL\",\"upload-container\":\"NewBundlePage_upload-container__1tAyb\",\"label\":\"NewBundlePage_label__tShUk\",\"form\":\"NewBundlePage_form__2WWBk\",\"inputs\":\"NewBundlePage_inputs__1PsuR\",\"input\":\"NewBundlePage_input__l22M7\",\"actions\":\"NewBundlePage_actions__1XH58\",\"save\":\"NewBundlePage_save__I7VG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadSpace_root__3I1-s\",\"dragged\":\"UploadSpace_dragged__1DiLS\",\"container\":\"UploadSpace_container__38f8b\",\"clickable\":\"UploadSpace_clickable__20X37\",\"icon\":\"UploadSpace_icon__13iY0\",\"label\":\"UploadSpace_label__bx5xk\",\"warning\":\"UploadSpace_warning__2UISF\",\"progress-container\":\"UploadSpace_progress-container__2XgEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DynamicTable_root__3YBZd\",\"file-name-container\":\"DynamicTable_file-name-container__l4skU\",\"file-name\":\"DynamicTable_file-name__I3JZH\",\"icon\":\"DynamicTable_icon__384D9\",\"table\":\"DynamicTable_table__IETmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DataPairs_root__3KG2O\",\"header\":\"DataPairs_header__Bkti-\",\"child\":\"DataPairs_child__3_ngq\",\"source\":\"DataPairs_source__HI-Vj\",\"target\":\"DataPairs_target__Eu-V-\",\"action\":\"DataPairs_action__2HV-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FieldMapper_root__3_tUQ\",\"section\":\"FieldMapper_section__3oEw5\",\"groups\":\"FieldMapper_groups__2HNYq\",\"input\":\"FieldMapper_input__2Mszl\",\"field\":\"FieldMapper_field__2nwpO\",\"label\":\"FieldMapper_label__1skyK\",\"table\":\"FieldMapper_table__2XzRc\",\"dialog\":\"FieldMapper_dialog__3aDtJ\",\"header-container\":\"FieldMapper_header-container__2JtIE\",\"header\":\"FieldMapper_header__QCFUW\",\"title\":\"FieldMapper_title__3E3Bf\",\"content\":\"FieldMapper_content__b3Uqj\",\"footer\":\"FieldMapper_footer__3NYKX\",\"action\":\"FieldMapper_action__2Ci4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadSoaPage_root__1JzXF\",\"table\":\"UploadSoaPage_table__3q8r-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsUtilLedgerReport_root__2f7j7\",\"header\":\"ClaimsUtilLedgerReport_header__3SkBF\",\"content\":\"ClaimsUtilLedgerReport_content__1W3eV\",\"filter\":\"ClaimsUtilLedgerReport_filter__3QHK8\",\"input\":\"ClaimsUtilLedgerReport_input__W6YU-\",\"submit\":\"ClaimsUtilLedgerReport_submit__f-hsB\",\"body\":\"ClaimsUtilLedgerReport_body__3G83I\",\"table\":\"ClaimsUtilLedgerReport_table__3TNU0\",\"remarks\":\"ClaimsUtilLedgerReport_remarks__3Z9th\",\"table-cell\":\"ClaimsUtilLedgerReport_table-cell__1plst\",\"table-row\":\"ClaimsUtilLedgerReport_table-row__3Y-tQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3oHfX\",\"total\":\"Footer_total__3_8Xj\",\"total-row\":\"Footer_total-row__1NiIX\",\"total-cell\":\"Footer_total-cell__2ExBc\",\"all-signatories\":\"Footer_all-signatories__AM-GJ\",\"signatories\":\"Footer_signatories__2V122\",\"username\":\"Footer_username__1whot\",\"line-note\":\"Footer_line-note__1BI5X\",\"line-received\":\"Footer_line-received__KlyKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TransmittalReport_root__13RYz\",\"header\":\"TransmittalReport_header__1LohO\",\"typo\":\"TransmittalReport_typo__2QKnI\",\"disabled\":\"TransmittalReport_disabled__3_q8n\",\"content\":\"TransmittalReport_content__3_9vc\",\"filter\":\"TransmittalReport_filter__27k1z\",\"input\":\"TransmittalReport_input__OnyIq\",\"submit\":\"TransmittalReport_submit__VuyPg\",\"search-header\":\"TransmittalReport_search-header__xdK5O\",\"search-header-child\":\"TransmittalReport_search-header-child__10jDH\",\"column\":\"TransmittalReport_column__1dPqY\",\"body\":\"TransmittalReport_body__26j71\",\"table\":\"TransmittalReport_table__1u_Pl\",\"right\":\"TransmittalReport_right__3OOJU\",\"h_amount\":\"TransmittalReport_h_amount__1-OuF\",\"h_ar\":\"TransmittalReport_h_ar__M03I0\",\"h_member\":\"TransmittalReport_h_member__2fOhO\",\"h_date\":\"TransmittalReport_h_date__14PcF\",\"handling\":\"TransmittalReport_handling__1t_0M\",\"table-row\":\"TransmittalReport_table-row__1nh4N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TreasuryTransmittalReport_root__RmXBp\",\"header\":\"TreasuryTransmittalReport_header__3p3Rf\",\"content\":\"TreasuryTransmittalReport_content__1wzny\",\"filter\":\"TreasuryTransmittalReport_filter__2GQoK\",\"input\":\"TreasuryTransmittalReport_input__3hS-d\",\"submit\":\"TreasuryTransmittalReport_submit__FP1Mo\",\"body\":\"TreasuryTransmittalReport_body__HvS7_\",\"table\":\"TreasuryTransmittalReport_table__WES8q\",\"table-row\":\"TreasuryTransmittalReport_table-row__2lid3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PRCheckReport_root__2WSai\",\"header\":\"PRCheckReport_header__3S6zh\",\"content\":\"PRCheckReport_content__3989Q\",\"filter\":\"PRCheckReport_filter__1-XzS\",\"input\":\"PRCheckReport_input__29L_D\",\"submit\":\"PRCheckReport_submit__3VE-t\",\"body\":\"PRCheckReport_body__1ZDmc\",\"table\":\"PRCheckReport_table__2MkNN\",\"table-row\":\"PRCheckReport_table-row__e88aD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Utilization_root__h-zoM\",\"header\":\"Utilization_header__1ivJ-\",\"graph\":\"Utilization_graph__3ZLe9\",\"anual-benefit\":\"Utilization_anual-benefit__1VWqy\",\"line-graph\":\"Utilization_line-graph__1p8lX\",\"container\":\"Utilization_container__4lgbS\",\"line-container\":\"Utilization_line-container__2OYMe\",\"item\":\"Utilization_item__2yhM3\",\"line-details\":\"Utilization_line-details__10WCH\",\"label\":\"Utilization_label__3Mdsb\",\"color\":\"Utilization_color__1LPa-\",\"search\":\"Utilization_search__3pjGe\",\"table\":\"Utilization_table__1yiXM\",\"cell\":\"Utilization_cell__18zs3\",\"icon\":\"Utilization_icon__3oS4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UtilizationReport_root__29RLR\",\"header\":\"UtilizationReport_header__F8Q9y\",\"content\":\"UtilizationReport_content__KyGyi\",\"filter\":\"UtilizationReport_filter__3HaBQ\",\"input\":\"UtilizationReport_input__1NNnv\",\"submit\":\"UtilizationReport_submit__gyDiv\",\"radio-group\":\"UtilizationReport_radio-group__2NtcH\",\"radio-container\":\"UtilizationReport_radio-container___KTHn\",\"body\":\"UtilizationReport_body__pKJ3l\",\"table\":\"UtilizationReport_table__3QcuP\",\"graph-reports\":\"UtilizationReport_graph-reports__35PtI\",\"graph-legend\":\"UtilizationReport_graph-legend__1VYWe\",\"legend-wrapper\":\"UtilizationReport_legend-wrapper__OXtbJ\",\"legend-group\":\"UtilizationReport_legend-group__3M_DG\",\"legend\":\"UtilizationReport_legend__2OmGP\",\"header-report\":\"UtilizationReport_header-report__39ovc\",\"report-primary\":\"UtilizationReport_report-primary__2Vx_L\",\"title\":\"UtilizationReport_title__1jyQx\",\"report-details\":\"UtilizationReport_report-details__1bGh-\",\"graph\":\"UtilizationReport_graph__3KuFD\",\"item\":\"UtilizationReport_item__MLRbC\",\"header-data\":\"UtilizationReport_header-data__o2M-w\",\"mark\":\"UtilizationReport_mark__1xh3X\",\"text\":\"UtilizationReport_text__2mdEi\",\"graph-plot\":\"UtilizationReport_graph-plot__2918H\",\"plot-items\":\"UtilizationReport_plot-items__21fJr\",\"graph-group\":\"UtilizationReport_graph-group__TSW3K\",\"graph-container\":\"UtilizationReport_graph-container__2GdhR\",\"bar-chart-wrapper\":\"UtilizationReport_bar-chart-wrapper__3nonl\",\"bar-chart\":\"UtilizationReport_bar-chart__2qoxe\",\"tooltip\":\"UtilizationReport_tooltip__17mGM\",\"graph-category\":\"UtilizationReport_graph-category__3HxMk\",\"table-row\":\"UtilizationReport_table-row__1LDFs\",\"memberinfo\":\"UtilizationReport_memberinfo__2VG76\",\"memberInfoLabel\":\"UtilizationReport_memberInfoLabel__UAA-3\",\"memberInfoValue\":\"UtilizationReport_memberInfoValue__3qy2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoadingHimsData_root__3WU8t\",\"header\":\"LoadingHimsData_header__3AgKz\",\"typo\":\"LoadingHimsData_typo__2IkSb\",\"disabled\":\"LoadingHimsData_disabled__31oIJ\",\"content\":\"LoadingHimsData_content__ck1LN\",\"filter\":\"LoadingHimsData_filter__1TZ1x\",\"input\":\"LoadingHimsData_input__YHPrG\",\"submit\":\"LoadingHimsData_submit__qqksA\",\"body\":\"LoadingHimsData_body__3yN6l\",\"table\":\"LoadingHimsData_table__11EHs\",\"table-row\":\"LoadingHimsData_table-row__1ltt_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ConfinementReport_root__1uSjB\",\"header\":\"ConfinementReport_header__16HCk\",\"content\":\"ConfinementReport_content__HdGg-\",\"filter\":\"ConfinementReport_filter__24wrc\",\"input\":\"ConfinementReport_input__auX4A\",\"submit\":\"ConfinementReport_submit__1ztRA\",\"body\":\"ConfinementReport_body__16cNS\",\"table\":\"ConfinementReport_table__3HeUY\",\"remarks\":\"ConfinementReport_remarks__15eon\",\"table-cell\":\"ConfinementReport_table-cell__3g-6U\",\"table-row\":\"ConfinementReport_table-row__1Ag6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2NykO\",\"total\":\"Footer_total__106js\",\"total-row\":\"Footer_total-row__2oNxf\",\"total-cell\":\"Footer_total-cell__2mlRs\",\"bundle\":\"Footer_bundle__cygl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestReport_root__1yyHg\",\"header\":\"PaymentRequestReport_header__1hEoh\",\"typo\":\"PaymentRequestReport_typo__lzZPi\",\"disabled\":\"PaymentRequestReport_disabled__7bH-b\",\"content\":\"PaymentRequestReport_content__3Xk-l\",\"filter\":\"PaymentRequestReport_filter__2HiUS\",\"input\":\"PaymentRequestReport_input__1BVX2\",\"submit\":\"PaymentRequestReport_submit__nlqNw\",\"search-header\":\"PaymentRequestReport_search-header__13iAT\",\"search-header-child\":\"PaymentRequestReport_search-header-child__3hgZo\",\"column-label\":\"PaymentRequestReport_column-label__28Gps\",\"column-input\":\"PaymentRequestReport_column-input__zavve\",\"column-label2\":\"PaymentRequestReport_column-label2__38wK2\",\"body\":\"PaymentRequestReport_body__Qp11G\",\"table\":\"PaymentRequestReport_table__25wJP\",\"right\":\"PaymentRequestReport_right__ZClv0\",\"handling\":\"PaymentRequestReport_handling__cz42W\",\"table-row\":\"PaymentRequestReport_table-row__3HEQg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementReport_root__32Om0\",\"header\":\"ReimbursementReport_header__12zwF\",\"content\":\"ReimbursementReport_content__mbnn4\",\"filter\":\"ReimbursementReport_filter__1WwW5\",\"input\":\"ReimbursementReport_input__kohO7\",\"submit\":\"ReimbursementReport_submit__1MEua\",\"body\":\"ReimbursementReport_body__2-ZBv\",\"table\":\"ReimbursementReport_table__3HtyM\",\"hidden\":\"ReimbursementReport_hidden__kOzBm\",\"remarks\":\"ReimbursementReport_remarks__3VTZf\",\"table-cell\":\"ReimbursementReport_table-cell__1DP3G\",\"table-row\":\"ReimbursementReport_table-row__3QOOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsSummaryReport_root__1ka3i\",\"header\":\"ClaimsSummaryReport_header__39eJB\",\"field-filter\":\"ClaimsSummaryReport_field-filter__2SIg-\",\"input\":\"ClaimsSummaryReport_input__2fYOe\",\"content\":\"ClaimsSummaryReport_content__2_BF2\",\"filter\":\"ClaimsSummaryReport_filter__id9k7\",\"submit\":\"ClaimsSummaryReport_submit__FEVvZ\",\"body\":\"ClaimsSummaryReport_body__13Jph\",\"table\":\"ClaimsSummaryReport_table__7Ph-I\",\"remarks\":\"ClaimsSummaryReport_remarks__2FkBN\",\"table-cell\":\"ClaimsSummaryReport_table-cell__2Ld-d\",\"footer\":\"ClaimsSummaryReport_footer__1028J\",\"label\":\"ClaimsSummaryReport_label__4CdeZ\",\"received\":\"ClaimsSummaryReport_received__2ZOV5\",\"processed\":\"ClaimsSummaryReport_processed__KMDYx\",\"total\":\"ClaimsSummaryReport_total__Adq-O\",\"table-row\":\"ClaimsSummaryReport_table-row__4aT6I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProductivityPerformaceReport_root__2dUB0\",\"header\":\"ProductivityPerformaceReport_header__2jbkM\",\"field-filter\":\"ProductivityPerformaceReport_field-filter__35OXP\",\"input\":\"ProductivityPerformaceReport_input__2o3yw\",\"content\":\"ProductivityPerformaceReport_content__1p5h0\",\"filter\":\"ProductivityPerformaceReport_filter__3M0No\",\"submit\":\"ProductivityPerformaceReport_submit__2SI5D\",\"body\":\"ProductivityPerformaceReport_body__3eVBy\",\"table\":\"ProductivityPerformaceReport_table__J_Mgn\",\"remarks\":\"ProductivityPerformaceReport_remarks__1pXa6\",\"table-cell\":\"ProductivityPerformaceReport_table-cell__1Q-O3\",\"footer\":\"ProductivityPerformaceReport_footer__2ioMa\",\"table-row\":\"ProductivityPerformaceReport_table-row__2Wduf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReturnedClaimsReport_root__3miJ9\",\"header\":\"ReturnedClaimsReport_header__2QSE3\",\"typo\":\"ReturnedClaimsReport_typo__3UFCW\",\"disabled\":\"ReturnedClaimsReport_disabled__182Sx\",\"content\":\"ReturnedClaimsReport_content__14MOK\",\"filter\":\"ReturnedClaimsReport_filter__2meIS\",\"input\":\"ReturnedClaimsReport_input__19ygB\",\"submit\":\"ReturnedClaimsReport_submit__1Mgt8\",\"body\":\"ReturnedClaimsReport_body__220AW\",\"table\":\"ReturnedClaimsReport_table__1WY5j\",\"remarks\":\"ReturnedClaimsReport_remarks__10htg\",\"table-cell\":\"ReturnedClaimsReport_table-cell__aqjTo\",\"handling\":\"ReturnedClaimsReport_handling__10Zah\",\"table-row\":\"ReturnedClaimsReport_table-row__3MQ-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PerformanceReport_root__3v0l5\",\"header\":\"PerformanceReport_header__2cAig\",\"field-filter\":\"PerformanceReport_field-filter__1J_xd\",\"input\":\"PerformanceReport_input__qTNUq\",\"content\":\"PerformanceReport_content__1RJ-f\",\"filter\":\"PerformanceReport_filter__3HVDH\",\"submit\":\"PerformanceReport_submit__1sQmg\",\"body\":\"PerformanceReport_body__3mx5Y\",\"table\":\"PerformanceReport_table__1eG1Z\",\"remarks\":\"PerformanceReport_remarks__3BqBk\",\"table-cell\":\"PerformanceReport_table-cell__XM63r\",\"footer\":\"PerformanceReport_footer__1gA8-\",\"table-row\":\"PerformanceReport_table-row__2u1xW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AgingPartialApprovedReport_root__njXRF\",\"header\":\"AgingPartialApprovedReport_header__33b_k\",\"field-filter\":\"AgingPartialApprovedReport_field-filter__3Z1mh\",\"input\":\"AgingPartialApprovedReport_input__3a_o0\",\"content\":\"AgingPartialApprovedReport_content__1pWFX\",\"filter\":\"AgingPartialApprovedReport_filter__3sVP8\",\"submit\":\"AgingPartialApprovedReport_submit__3D5zL\",\"body\":\"AgingPartialApprovedReport_body__39FC8\",\"table\":\"AgingPartialApprovedReport_table__2EheT\",\"remarks\":\"AgingPartialApprovedReport_remarks__2lfE6\",\"table-cell\":\"AgingPartialApprovedReport_table-cell__dRnX7\",\"footer\":\"AgingPartialApprovedReport_footer__33O-v\",\"label\":\"AgingPartialApprovedReport_label__20iKa\",\"table-row\":\"AgingPartialApprovedReport_table-row__TdYPu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AgingReturnClaimReport_root__2ZjYN\",\"header\":\"AgingReturnClaimReport_header__2pYrS\",\"field-filter\":\"AgingReturnClaimReport_field-filter__3bBD5\",\"input\":\"AgingReturnClaimReport_input__yJYHL\",\"content\":\"AgingReturnClaimReport_content__2dDb7\",\"filter\":\"AgingReturnClaimReport_filter__J2zBy\",\"submit\":\"AgingReturnClaimReport_submit__2ONSY\",\"body\":\"AgingReturnClaimReport_body__2v_Du\",\"table\":\"AgingReturnClaimReport_table__3OBJ-\",\"remarks\":\"AgingReturnClaimReport_remarks__1NXHH\",\"table-cell\":\"AgingReturnClaimReport_table-cell__gHjGb\",\"footer\":\"AgingReturnClaimReport_footer__3M3iw\",\"label\":\"AgingReturnClaimReport_label__1bL4K\",\"table-row\":\"AgingReturnClaimReport_table-row__2LK4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsBeyond3MonthsReport_root__3VXaM\",\"header\":\"ClaimsBeyond3MonthsReport_header__3lsVk\",\"typo\":\"ClaimsBeyond3MonthsReport_typo__264r4\",\"field-filter\":\"ClaimsBeyond3MonthsReport_field-filter__3_-_O\",\"input\":\"ClaimsBeyond3MonthsReport_input__3rZEj\",\"content\":\"ClaimsBeyond3MonthsReport_content__2QCP_\",\"filter\":\"ClaimsBeyond3MonthsReport_filter__1_UPE\",\"submit\":\"ClaimsBeyond3MonthsReport_submit__3Ixe3\",\"body\":\"ClaimsBeyond3MonthsReport_body__1a198\",\"table\":\"ClaimsBeyond3MonthsReport_table__3XK2P\",\"remarks\":\"ClaimsBeyond3MonthsReport_remarks__2x-XG\",\"table-cell\":\"ClaimsBeyond3MonthsReport_table-cell__2Bcc3\",\"handling\":\"ClaimsBeyond3MonthsReport_handling__1s9wT\",\"table-row\":\"ClaimsBeyond3MonthsReport_table-row__1FRZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementAgingReport_root__3Qevg\",\"header\":\"ReimbursementAgingReport_header__2fR1j\",\"field-filter\":\"ReimbursementAgingReport_field-filter__3omDl\",\"input\":\"ReimbursementAgingReport_input__uImhm\",\"content\":\"ReimbursementAgingReport_content__kcYV4\",\"filter\":\"ReimbursementAgingReport_filter__2vQYS\",\"submit\":\"ReimbursementAgingReport_submit__34jwM\",\"body\":\"ReimbursementAgingReport_body__1Aq7Z\",\"table\":\"ReimbursementAgingReport_table__2m2l3\",\"remarks\":\"ReimbursementAgingReport_remarks__3qa3B\",\"table-cell\":\"ReimbursementAgingReport_table-cell__3QyBG\",\"footer\":\"ReimbursementAgingReport_footer__3RAWu\",\"table-row\":\"ReimbursementAgingReport_table-row__3R0lS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedClaimsReport_root__pZDjc\",\"header\":\"DetailedClaimsReport_header__b7pO0\",\"typo\":\"DetailedClaimsReport_typo__-qeZp\",\"disabled\":\"DetailedClaimsReport_disabled__32hnn\",\"content\":\"DetailedClaimsReport_content__30k_Y\",\"filter\":\"DetailedClaimsReport_filter__3uIPD\",\"input\":\"DetailedClaimsReport_input__3mk2W\",\"submit\":\"DetailedClaimsReport_submit__28yJR\",\"body\":\"DetailedClaimsReport_body__2wNh-\",\"table\":\"DetailedClaimsReport_table__1QGoK\",\"label\":\"DetailedClaimsReport_label__y28Kk\",\"hidden\":\"DetailedClaimsReport_hidden__1H_Ss\",\"remarks\":\"DetailedClaimsReport_remarks__E0xIw\",\"table-cell\":\"DetailedClaimsReport_table-cell__3rPot\",\"handling\":\"DetailedClaimsReport_handling__WipVd\",\"footer\":\"DetailedClaimsReport_footer__10ig-\",\"table-row\":\"DetailedClaimsReport_table-row__TiSmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedPerformanceReport_root__3lPH7\",\"header\":\"DetailedPerformanceReport_header__1FlLI\",\"typo\":\"DetailedPerformanceReport_typo__1SeuS\",\"field-filter\":\"DetailedPerformanceReport_field-filter__3G5pv\",\"input\":\"DetailedPerformanceReport_input__1uLNQ\",\"content\":\"DetailedPerformanceReport_content__2MZx8\",\"filter\":\"DetailedPerformanceReport_filter__2HFAt\",\"submit\":\"DetailedPerformanceReport_submit___T5Hi\",\"body\":\"DetailedPerformanceReport_body__37Z1n\",\"table\":\"DetailedPerformanceReport_table__1DoqJ\",\"remarks\":\"DetailedPerformanceReport_remarks__3bm40\",\"table-cell\":\"DetailedPerformanceReport_table-cell__1X1h4\",\"handling\":\"DetailedPerformanceReport_handling__2bFLc\",\"table-row\":\"DetailedPerformanceReport_table-row__XZFGn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedMonitoringReport_root__LgC3Q\",\"header\":\"DetailedMonitoringReport_header__3LHkv\",\"typo\":\"DetailedMonitoringReport_typo__3spA7\",\"field-filter\":\"DetailedMonitoringReport_field-filter__2ZzJm\",\"input\":\"DetailedMonitoringReport_input__1_QJS\",\"content\":\"DetailedMonitoringReport_content__3_FYj\",\"filter\":\"DetailedMonitoringReport_filter__3eYWk\",\"submit\":\"DetailedMonitoringReport_submit__o8fc7\",\"body\":\"DetailedMonitoringReport_body__2Dq-U\",\"table\":\"DetailedMonitoringReport_table__13f4R\",\"remarks\":\"DetailedMonitoringReport_remarks__3vGUl\",\"table-cell\":\"DetailedMonitoringReport_table-cell__1xIUc\",\"handling\":\"DetailedMonitoringReport_handling__FZhM-\",\"table-row\":\"DetailedMonitoringReport_table-row__1dc8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1q5aB\",\"tiles\":\"Dashboard_tiles__2EVcx\",\"row\":\"Dashboard_row__1-jaR\",\"task-tray\":\"Dashboard_task-tray__1GVCA\",\"list-item\":\"Dashboard_list-item__3bt0O\",\"details\":\"Dashboard_details__vEx2z\",\"detail-item\":\"Dashboard_detail-item__2vLSc\",\"label\":\"Dashboard_label__1wDfJ\",\"content\":\"Dashboard_content__3ngEB\",\"action\":\"Dashboard_action__1YK0T\",\"ticket-list\":\"Dashboard_ticket-list__2qkpP\",\"wrapper\":\"Dashboard_wrapper__30OUo\",\"float\":\"Dashboard_float__vdcOu\",\"completed_task\":\"Dashboard_completed_task__2zPQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__23Ujl\",\"header-container\":\"AssignDialog_header-container__yl2nA\",\"header\":\"AssignDialog_header__3VGqX\",\"title\":\"AssignDialog_title__3z9IT\",\"content\":\"AssignDialog_content__ibboc\",\"input\":\"AssignDialog_input__2xDp_\",\"footer\":\"AssignDialog_footer__26ROV\",\"assign\":\"AssignDialog_assign__b5j_4\",\"to\":\"AssignDialog_to__4uznN\",\"action\":\"AssignDialog_action__3Hmu9\",\"message-content\":\"AssignDialog_message-content__3scNs\",\"message\":\"AssignDialog_message__WFHxL\",\"message-child\":\"AssignDialog_message-child__1-8nz\",\"alert-title\":\"AssignDialog_alert-title__2Werr\",\"footer-action\":\"AssignDialog_footer-action__1CV67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBundlesPage_root__3yhzm\",\"content\":\"CreatedBundlesPage_content__38yCp\",\"first-container\":\"CreatedBundlesPage_first-container__22tad\",\"action\":\"CreatedBundlesPage_action__16R81\",\"search\":\"CreatedBundlesPage_search__1ZBFS\",\"table\":\"CreatedBundlesPage_table__295G-\",\"footer\":\"CreatedBundlesPage_footer__2xe-r\",\"actions\":\"CreatedBundlesPage_actions__3feoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DiscrepancyBase_root__3KSsR\",\"input-wrapper\":\"DiscrepancyBase_input-wrapper__1DMc_\",\"max-width\":\"DiscrepancyBase_max-width__AgMfs\",\"auto-width\":\"DiscrepancyBase_auto-width__3hZoL\",\"discrepancy\":\"DiscrepancyBase_discrepancy__EFJsJ\",\"discrepancy-icon\":\"DiscrepancyBase_discrepancy-icon__278mF\",\"with-margin\":\"DiscrepancyBase_with-margin__3UThX\",\"icon\":\"DiscrepancyBase_icon__3BUJ7\",\"display-hidden\":\"DiscrepancyBase_display-hidden__2uBK6\",\"display-none\":\"DiscrepancyBase_display-none__3au4S\",\"message\":\"DiscrepancyBase_message__10P-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoadingIndicator_root__1QWbJ\",\"loading\":\"LoadingIndicator_loading__3Nv8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberLookup_root__3O8kK\",\"search\":\"ClientMemberLookup_search__2Crg2\",\"table\":\"ClientMemberLookup_table__vUzoY\",\"loading\":\"ClientMemberLookup_loading__w2vwH\",\"input\":\"ClientMemberLookup_input__1zsR_\",\"selected\":\"ClientMemberLookup_selected__25J7P\",\"default-override\":\"ClientMemberLookup_default-override__2M4nX\",\"footer\":\"ClientMemberLookup_footer__1TxMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberModal_root__nf2t4\",\"header-container\":\"ClientMemberModal_header-container__2TpBd\",\"header\":\"ClientMemberModal_header__3jFfv\",\"title\":\"ClientMemberModal_title__aQLcu\",\"content\":\"ClientMemberModal_content__1ZzDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BaseDetails_root__1sXMB\",\"wrapper\":\"BaseDetails_wrapper__36CBG\",\"groups\":\"BaseDetails_groups__3iH6M\",\"input\":\"BaseDetails_input__33wlu\",\"search\":\"BaseDetails_search__3HeKm\",\"box-search-button\":\"BaseDetails_box-search-button__31qFK\",\"no-pad\":\"BaseDetails_no-pad__hmdGm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__2UDqG\",\"given-diagnosis\":\"ICDTextField_given-diagnosis__tUggz\",\"header\":\"ICDTextField_header___QvWL\",\"delete\":\"ICDTextField_delete__1QGhl\",\"description\":\"ICDTextField_description__3nYcX\",\"code\":\"ICDTextField_code__3U5AV\",\"primary\":\"ICDTextField_primary__1iHwC\",\"discrepancy\":\"ICDTextField_discrepancy__S1yCX\",\"wrapper\":\"ICDTextField_wrapper__2CKYW\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__NjIhZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1e8te\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__PsY8D\",\"has-error\":\"DiagnosisList_has-error__2xPng\",\"title\":\"DiagnosisList_title__1qdNr\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__2ON5n\",\"error\":\"DiagnosisList_error__1Vbz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expandable\":\"CustomTable_expandable__1imJS\",\"container\":\"CustomTable_container__3quUk\",\"content\":\"CustomTable_content__258N4\",\"open\":\"CustomTable_open__2q7AF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__32M3A\",\"groups\":\"ProcedureForm_groups__dcIQZ\",\"diagnosis\":\"ProcedureForm_diagnosis__23R5U\",\"input\":\"ProcedureForm_input__38bS_\",\"limit\":\"ProcedureForm_limit__3nb9n\",\"description\":\"ProcedureForm_description__2Hdy7\",\"code\":\"ProcedureForm_code__i2i2k\",\"buttons\":\"ProcedureForm_buttons__2CdpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3AdZk\",\"table\":\"ProcedureList_table__10YsE\",\"table-header\":\"ProcedureList_table-header__17a3B\",\"table-description\":\"ProcedureList_table-description__22Tav\",\"add-link\":\"ProcedureList_add-link__Jk8bg\",\"row\":\"ProcedureList_row__1SUZy\",\"align\":\"ProcedureList_align__3E32S\",\"center\":\"ProcedureList_center__3umXK\",\"right\":\"ProcedureList_right__yYRNE\",\"discrepancy\":\"ProcedureList_discrepancy__3nlct\",\"icon-container\":\"ProcedureList_icon-container__-1hA_\",\"table-total\":\"ProcedureList_table-total__a6mY3\",\"caption\":\"ProcedureList_caption__aqG17\",\"amount\":\"ProcedureList_amount__3Wz7S\",\"groups\":\"ProcedureList_groups__3j6lu\",\"input\":\"ProcedureList_input__nZI-i\",\"buttons\":\"ProcedureList_buttons__1cLC0\",\"table-grid\":\"ProcedureList_table-grid__20Uo9\",\"message\":\"ProcedureList_message__2P1i6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__1FWwW\",\"groups\":\"HospitalItemForm_groups__2XyW6\",\"diagnosis\":\"HospitalItemForm_diagnosis__3sjLa\",\"input\":\"HospitalItemForm_input__1y2VP\",\"limit\":\"HospitalItemForm_limit__24jFc\",\"description\":\"HospitalItemForm_description__1tsvR\",\"code\":\"HospitalItemForm_code__3bAga\",\"buttons\":\"HospitalItemForm_buttons__3Rewh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3P8XU\",\"table\":\"HospitalItemList_table__1_Iw2\",\"table-header\":\"HospitalItemList_table-header__1nWDu\",\"table-description\":\"HospitalItemList_table-description__2RsHb\",\"add-link\":\"HospitalItemList_add-link__Ap2Fd\",\"row\":\"HospitalItemList_row__3Y9w1\",\"align\":\"HospitalItemList_align__3Cquk\",\"center\":\"HospitalItemList_center__2uJ8Q\",\"right\":\"HospitalItemList_right__1YzKx\",\"discrepancy\":\"HospitalItemList_discrepancy__2rt0u\",\"icon-container\":\"HospitalItemList_icon-container__37b7k\",\"table-total\":\"HospitalItemList_table-total__35dxK\",\"caption\":\"HospitalItemList_caption__-jFT8\",\"amount\":\"HospitalItemList_amount__jgs1I\",\"groups\":\"HospitalItemList_groups__1Jxjv\",\"input\":\"HospitalItemList_input__3ysJe\",\"buttons\":\"HospitalItemList_buttons__3zaDd\",\"table-grid\":\"HospitalItemList_table-grid__wBYBH\",\"message\":\"HospitalItemList_message__3E-4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__3B4jc\",\"groups\":\"ProfessionalFeeForm_groups__dlWbX\",\"diagnosis\":\"ProfessionalFeeForm_diagnosis__1BrAK\",\"input\":\"ProfessionalFeeForm_input__333On\",\"limit\":\"ProfessionalFeeForm_limit__1lq0S\",\"buttons\":\"ProfessionalFeeForm_buttons__2lZlR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2Og-R\",\"table\":\"ProfessionalFeeList_table__2NcVa\",\"specialization\":\"ProfessionalFeeList_specialization__11Av7\",\"table-header\":\"ProfessionalFeeList_table-header__2PK3t\",\"table-description\":\"ProfessionalFeeList_table-description__30ZVR\",\"add-link\":\"ProfessionalFeeList_add-link__2AlqJ\",\"row\":\"ProfessionalFeeList_row__1uiD-\",\"align\":\"ProfessionalFeeList_align__3XDND\",\"center\":\"ProfessionalFeeList_center__3xzMO\",\"right\":\"ProfessionalFeeList_right__1_oyw\",\"discrepancy\":\"ProfessionalFeeList_discrepancy__1DP02\",\"icon-container\":\"ProfessionalFeeList_icon-container__1sopO\",\"table-total\":\"ProfessionalFeeList_table-total__bFKvI\",\"caption\":\"ProfessionalFeeList_caption__2uJsv\",\"amount\":\"ProfessionalFeeList_amount__Bwl5O\",\"groups\":\"ProfessionalFeeList_groups__3OH3g\",\"input\":\"ProfessionalFeeList_input__LBwVv\",\"buttons\":\"ProfessionalFeeList_buttons__V3_MP\",\"table-grid\":\"ProfessionalFeeList_table-grid__148wo\",\"message\":\"ProfessionalFeeList_message__2GTKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__3TUHv\",\"left\":\"ClaimFooter_left__2BPxB\",\"center\":\"ClaimFooter_center__2tYE7\",\"right\":\"ClaimFooter_right__31DOI\",\"escalate\":\"ClaimFooter_escalate__2Wg_9\",\"header-container\":\"ClaimFooter_header-container__3MyMe\",\"header\":\"ClaimFooter_header__2h2N5\",\"title\":\"ClaimFooter_title__2HClu\",\"content\":\"ClaimFooter_content__2ZAYv\",\"input\":\"ClaimFooter_input__1T6qD\",\"footer\":\"ClaimFooter_footer__aACcA\",\"assign\":\"ClaimFooter_assign__2fguI\",\"to\":\"ClaimFooter_to__iojTq\",\"action\":\"ClaimFooter_action__3rpDz\",\"reassign\":\"ClaimFooter_reassign__32y-a\",\"return\":\"ClaimFooter_return__1aB5w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DisapprovedLabel_root__2fuHC\",\"input-wrapper\":\"DisapprovedLabel_input-wrapper__3Mg-w\",\"disapproved\":\"DisapprovedLabel_disapproved__2jHnW\",\"icon-container\":\"DisapprovedLabel_icon-container__2AwzY\",\"message\":\"DisapprovedLabel_message__mRFZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldSubmit_root__31Odd\",\"label\":\"TextFieldSubmit_label__1hK2p\",\"wrapper\":\"TextFieldSubmit_wrapper__1VXm5\",\"read-only-value\":\"TextFieldSubmit_read-only-value__3vlhq\",\"text-field\":\"TextFieldSubmit_text-field__M9IqT\",\"submit\":\"TextFieldSubmit_submit__3gRq6\",\"has-error\":\"TextFieldSubmit_has-error__2RVyG\",\"error\":\"TextFieldSubmit_error__1IF87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChatBox_root__CJdTJ\",\"wrapper\":\"ChatBox_wrapper__Udbg_\",\"header\":\"ChatBox_header__1cGwF\",\"title\":\"ChatBox_title__2zeRL\",\"body\":\"ChatBox_body__3cDDA\",\"messages\":\"ChatBox_messages__1p2Ci\",\"split\":\"ChatBox_split__3YuFW\",\"balloon\":\"ChatBox_balloon__2wMJO\",\"mheader\":\"ChatBox_mheader___jqXV\",\"sender\":\"ChatBox_sender__1OlBm\",\"time\":\"ChatBox_time__20VAg\",\"mbody\":\"ChatBox_mbody__34g_9\",\"content\":\"ChatBox_content__2ekaM\",\"receive\":\"ChatBox_receive__1SB9q\",\"me\":\"ChatBox_me__3g5h1\",\"placeholder\":\"ChatBox_placeholder__2r0o4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTabs_root__2VH--\",\"header\":\"CustomTabs_header__3jmhR\",\"item\":\"CustomTabs_item__rKqcK\",\"active\":\"CustomTabs_active__3MzuP\",\"panels\":\"CustomTabs_panels__MhL8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SideBar_root__BfHb8\",\"contract-id\":\"SideBar_contract-id__1i7cP\",\"id\":\"SideBar_id__hD-Fx\",\"plan-types\":\"SideBar_plan-types__22aGd\",\"node\":\"SideBar_node__12eOL\",\"benefit-label\":\"SideBar_benefit-label__355P0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ValueField_root__3IGn7\",\"value\":\"ValueField_value__2tKyn\",\"center\":\"ValueField_center__3Ytb8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FloatingFields_root__24bnx\",\"wrapper\":\"FloatingFields_wrapper__2Pcva\",\"w-30\":\"FloatingFields_w-30__3n_pJ\",\"w-50\":\"FloatingFields_w-50__1n6EK\",\"w-100\":\"FloatingFields_w-100__3NIZO\",\"center\":\"FloatingFields_center__123ob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Benefits_root__bhUTi\",\"wrapper\":\"Benefits_wrapper__3FSOt\",\"left-side\":\"Benefits_left-side__1RHLZ\",\"title\":\"Benefits_title__2Y66j\",\"right-side\":\"Benefits_right-side__2K0vf\",\"header\":\"Benefits_header__3Cy59\",\"table-header\":\"Benefits_table-header__1UT8m\",\"search\":\"Benefits_search__OOfZa\",\"contract\":\"Benefits_contract__3j7Fa\",\"table\":\"Benefits_table__38mZl\",\"hidden\":\"Benefits_hidden__2oBEr\",\"cell\":\"Benefits_cell__12KcA\",\"footer\":\"Benefits_footer__2PXlW\",\"center\":\"Benefits_center__1s61P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Exclusions_root__aIVf_\",\"header\":\"Exclusions_header__2PP5C\",\"body\":\"Exclusions_body__10OEr\",\"search\":\"Exclusions_search__2ex94\",\"plan-types\":\"Exclusions_plan-types__rtSrd\",\"type\":\"Exclusions_type__AJdcD\",\"table\":\"Exclusions_table__3GuIp\",\"hidden\":\"Exclusions_hidden__1fYuW\",\"cell\":\"Exclusions_cell__3huMq\",\"handling\":\"Exclusions_handling__3_HIN\",\"center\":\"Exclusions_center__36WKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PartnerNetwork_root__3pngF\",\"header\":\"PartnerNetwork_header__2joMW\",\"search\":\"PartnerNetwork_search__QRWSW\",\"table\":\"PartnerNetwork_table__id1kf\",\"hidden\":\"PartnerNetwork_hidden__1Wg_f\",\"cell\":\"PartnerNetwork_cell__24Zde\",\"doctors\":\"PartnerNetwork_doctors__3qxwm\",\"header-container\":\"PartnerNetwork_header-container__uNSDQ\",\"title\":\"PartnerNetwork_title__2pC_E\",\"content\":\"PartnerNetwork_content__OC-z4\",\"center\":\"PartnerNetwork_center__VSY8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Contract_root__2TV5c\",\"wrapper\":\"Contract_wrapper__7hk_4\",\"pdf\":\"Contract_pdf__14ff5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"RightPanelTabs_center__2F79-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__1AD2B\",\"header\":\"ClaimsRemarks_header__2JuzE\",\"header-text\":\"ClaimsRemarks_header-text__2hE-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__1S7ZM\",\"first-container\":\"ClaimInPatient_first-container__1hi-9\",\"groups\":\"ClaimInPatient_groups__3GlMb\",\"input\":\"ClaimInPatient_input__D_kUM\",\"child-container\":\"ClaimInPatient_child-container__LtiUL\",\"left-side\":\"ClaimInPatient_left-side__3BSE_\",\"right-side\":\"ClaimInPatient_right-side__7yeR8\",\"tables-container\":\"ClaimInPatient_tables-container__1FSgK\",\"wrapper\":\"ClaimInPatient_wrapper__2Ll5k\",\"table\":\"ClaimInPatient_table__33jlK\",\"table-header\":\"ClaimInPatient_table-header__32cAA\",\"table-description\":\"ClaimInPatient_table-description__LHg-Q\",\"add-link\":\"ClaimInPatient_add-link__2HgjW\",\"row\":\"ClaimInPatient_row__19SQp\",\"align\":\"ClaimInPatient_align__3EmF1\",\"center\":\"ClaimInPatient_center__mwmUx\",\"right\":\"ClaimInPatient_right__2NOPD\",\"table-total\":\"ClaimInPatient_table-total__ADdpw\",\"caption\":\"ClaimInPatient_caption__3GWNc\",\"amount\":\"ClaimInPatient_amount__14BmU\",\"sticky\":\"ClaimInPatient_sticky__1p4_i\",\"grand-total\":\"ClaimInPatient_grand-total__5xeWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__32DbM\",\"first-container\":\"ClaimOutPatientProcedure_first-container__7XqrM\",\"groups\":\"ClaimOutPatientProcedure_groups__2khSB\",\"input\":\"ClaimOutPatientProcedure_input__2wGBp\",\"child-container\":\"ClaimOutPatientProcedure_child-container__3Qm-6\",\"left-side\":\"ClaimOutPatientProcedure_left-side__aiMMr\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2qNzx\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__24TXm\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__1oOih\",\"table\":\"ClaimOutPatientProcedure_table__3gy4g\",\"table-header\":\"ClaimOutPatientProcedure_table-header__1vFDA\",\"table-description\":\"ClaimOutPatientProcedure_table-description__2sVgC\",\"add-link\":\"ClaimOutPatientProcedure_add-link__20WGP\",\"row\":\"ClaimOutPatientProcedure_row__1154i\",\"align\":\"ClaimOutPatientProcedure_align__1-JcK\",\"center\":\"ClaimOutPatientProcedure_center__2LEg6\",\"right\":\"ClaimOutPatientProcedure_right__1b2OO\",\"table-total\":\"ClaimOutPatientProcedure_table-total__25Yuw\",\"caption\":\"ClaimOutPatientProcedure_caption__1-1aH\",\"amount\":\"ClaimOutPatientProcedure_amount__1pVET\",\"sticky\":\"ClaimOutPatientProcedure_sticky__2J6YA\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__2-FT5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1OYw5\",\"first-container\":\"ClaimOutPatientConsultation_first-container__36dTh\",\"groups\":\"ClaimOutPatientConsultation_groups__2FduB\",\"input\":\"ClaimOutPatientConsultation_input__qhYZ3\",\"child-container\":\"ClaimOutPatientConsultation_child-container__1yLGC\",\"left-side\":\"ClaimOutPatientConsultation_left-side__1Q-9R\",\"right-side\":\"ClaimOutPatientConsultation_right-side__ZE8bC\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__1BJ87\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1zN1p\",\"table\":\"ClaimOutPatientConsultation_table__11vlA\",\"table-header\":\"ClaimOutPatientConsultation_table-header__2v7ad\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1oqaA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__3akmi\",\"row\":\"ClaimOutPatientConsultation_row__28nQM\",\"align\":\"ClaimOutPatientConsultation_align__1dHEU\",\"center\":\"ClaimOutPatientConsultation_center__1_QYZ\",\"right\":\"ClaimOutPatientConsultation_right__ZGur7\",\"table-total\":\"ClaimOutPatientConsultation_table-total__po07J\",\"caption\":\"ClaimOutPatientConsultation_caption__3vMTQ\",\"amount\":\"ClaimOutPatientConsultation_amount__1Ev9r\",\"sticky\":\"ClaimOutPatientConsultation_sticky__JCmg6\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__9crdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__3Dhsx\",\"first-container\":\"ClaimEmergency_first-container__o2WbL\",\"groups\":\"ClaimEmergency_groups__1udG1\",\"input\":\"ClaimEmergency_input__2anfv\",\"child-container\":\"ClaimEmergency_child-container__1p4eO\",\"left-side\":\"ClaimEmergency_left-side__36vix\",\"right-side\":\"ClaimEmergency_right-side__3uIlK\",\"tables-container\":\"ClaimEmergency_tables-container__1qiki\",\"wrapper\":\"ClaimEmergency_wrapper__3WqYc\",\"table\":\"ClaimEmergency_table__Jj0aB\",\"table-header\":\"ClaimEmergency_table-header__1i-JE\",\"table-description\":\"ClaimEmergency_table-description__Xz_Ya\",\"add-link\":\"ClaimEmergency_add-link__3k7IP\",\"row\":\"ClaimEmergency_row__1Esd0\",\"align\":\"ClaimEmergency_align__1S8uR\",\"center\":\"ClaimEmergency_center__2CsIC\",\"right\":\"ClaimEmergency_right__2vx76\",\"table-total\":\"ClaimEmergency_table-total__2oM7S\",\"caption\":\"ClaimEmergency_caption__25QSW\",\"amount\":\"ClaimEmergency_amount__tTDY5\",\"sticky\":\"ClaimEmergency_sticky__3o2tq\",\"grand-total\":\"ClaimEmergency_grand-total__2QhZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__1epVL\",\"first-container\":\"ClaimMedicineAllowance_first-container__2ZF-j\",\"groups\":\"ClaimMedicineAllowance_groups__2H4ww\",\"input\":\"ClaimMedicineAllowance_input__8xyct\",\"child-container\":\"ClaimMedicineAllowance_child-container__28G1C\",\"left-side\":\"ClaimMedicineAllowance_left-side__1WUXX\",\"right-side\":\"ClaimMedicineAllowance_right-side__1igyg\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__3dELc\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__9Um0n\",\"table\":\"ClaimMedicineAllowance_table__3EybV\",\"table-header\":\"ClaimMedicineAllowance_table-header__2pBup\",\"table-description\":\"ClaimMedicineAllowance_table-description__1PmDt\",\"add-link\":\"ClaimMedicineAllowance_add-link__1AbYf\",\"row\":\"ClaimMedicineAllowance_row__2WWWY\",\"align\":\"ClaimMedicineAllowance_align__39ocu\",\"center\":\"ClaimMedicineAllowance_center__3EtXe\",\"right\":\"ClaimMedicineAllowance_right__27Jp2\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IsI8\",\"caption\":\"ClaimMedicineAllowance_caption__DMDzf\",\"amount\":\"ClaimMedicineAllowance_amount__1LRtQ\",\"sticky\":\"ClaimMedicineAllowance_sticky__EUuY7\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1JKZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContractRange_root__3nD_-\",\"container\":\"ContractRange_container__1yYoI\",\"focus\":\"ContractRange_focus__209RV\",\"has-error\":\"ContractRange_has-error__26k8I\",\"label\":\"ContractRange_label__16qj0\",\"values\":\"ContractRange_values__1s186\",\"suggestions\":\"ContractRange_suggestions__3mNVu\",\"add-margin\":\"ContractRange_add-margin__36OMI\",\"header\":\"ContractRange_header__2vYoG\",\"values-container\":\"ContractRange_values-container__2mlE7\",\"message\":\"ContractRange_message__1DGJU\",\"list\":\"ContractRange_list__12tdX\",\"item\":\"ContractRange_item__WiBsw\",\"error\":\"ContractRange_error__19pL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalChart_root__2NsEP\",\"title\":\"DentalChart_title__2XddS\",\"container\":\"DentalChart_container__iRz9F\",\"chart\":\"DentalChart_chart__3tLNQ\",\"upper\":\"DentalChart_upper__3L8HX\",\"lower\":\"DentalChart_lower__2M2mJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__256b4\",\"first-container\":\"ClaimDental_first-container__38T7E\",\"groups\":\"ClaimDental_groups__3jvsJ\",\"input\":\"ClaimDental_input__haCWE\",\"contract-range\":\"ClaimDental_contract-range__37ykS\",\"chart\":\"ClaimDental_chart__3-xWm\",\"child-container\":\"ClaimDental_child-container__3mow6\",\"left-side\":\"ClaimDental_left-side__3jave\",\"right-side\":\"ClaimDental_right-side__1FQqB\",\"tables-container\":\"ClaimDental_tables-container__1C3Pu\",\"wrapper\":\"ClaimDental_wrapper__1RMw-\",\"table\":\"ClaimDental_table__1LS70\",\"table-header\":\"ClaimDental_table-header__1b5ix\",\"table-description\":\"ClaimDental_table-description__3_nXw\",\"add-link\":\"ClaimDental_add-link__2HTRl\",\"row\":\"ClaimDental_row__1X_Fq\",\"align\":\"ClaimDental_align__1TfeR\",\"center\":\"ClaimDental_center__2wbY9\",\"right\":\"ClaimDental_right__3UJIj\",\"table-total\":\"ClaimDental_table-total__209ol\",\"caption\":\"ClaimDental_caption__TjFQ_\",\"amount\":\"ClaimDental_amount__2qE7s\",\"sticky\":\"ClaimDental_sticky__1m1JQ\",\"grand-total\":\"ClaimDental_grand-total__3-zy6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__3iC6V\",\"first-container\":\"ClaimAPE_first-container__rfLOL\",\"groups\":\"ClaimAPE_groups___LUKZ\",\"input\":\"ClaimAPE_input__3KeOV\",\"contract-range\":\"ClaimAPE_contract-range__3lIhD\",\"child-container\":\"ClaimAPE_child-container__1cNVx\",\"left-side\":\"ClaimAPE_left-side__3k7Fu\",\"right-side\":\"ClaimAPE_right-side__2yzN-\",\"tables-container\":\"ClaimAPE_tables-container__Q8Qw-\",\"wrapper\":\"ClaimAPE_wrapper__2G6uN\",\"table\":\"ClaimAPE_table__3HkNw\",\"table-header\":\"ClaimAPE_table-header__15MOT\",\"table-description\":\"ClaimAPE_table-description__1mF2U\",\"add-link\":\"ClaimAPE_add-link__1xoUx\",\"row\":\"ClaimAPE_row__3kl-i\",\"align\":\"ClaimAPE_align__3dAFu\",\"center\":\"ClaimAPE_center__3dtFL\",\"right\":\"ClaimAPE_right__15WMJ\",\"table-total\":\"ClaimAPE_table-total__30NF6\",\"caption\":\"ClaimAPE_caption__-xHuO\",\"amount\":\"ClaimAPE_amount__2j9QR\",\"sticky\":\"ClaimAPE_sticky__1awLT\",\"grand-total\":\"ClaimAPE_grand-total__3M-am\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__rZ8IS\",\"first-container\":\"ClaimECU_first-container__2FNj4\",\"groups\":\"ClaimECU_groups__2RmkW\",\"input\":\"ClaimECU_input__1Tnla\",\"contract-range\":\"ClaimECU_contract-range__21rJC\",\"child-container\":\"ClaimECU_child-container__26HT3\",\"left-side\":\"ClaimECU_left-side__3-TzS\",\"right-side\":\"ClaimECU_right-side__11s0l\",\"tables-container\":\"ClaimECU_tables-container__3eYaA\",\"wrapper\":\"ClaimECU_wrapper__h-NDN\",\"table\":\"ClaimECU_table__UgdcY\",\"table-header\":\"ClaimECU_table-header__2u8yv\",\"table-description\":\"ClaimECU_table-description__B5h1x\",\"add-link\":\"ClaimECU_add-link__xzFPx\",\"row\":\"ClaimECU_row__2xFZY\",\"align\":\"ClaimECU_align__3ToIF\",\"center\":\"ClaimECU_center__3XEtE\",\"right\":\"ClaimECU_right__1u8Su\",\"table-total\":\"ClaimECU_table-total__1N-8u\",\"caption\":\"ClaimECU_caption__3WoBZ\",\"amount\":\"ClaimECU_amount__UXVTQ\",\"sticky\":\"ClaimECU_sticky__HXgU3\",\"grand-total\":\"ClaimECU_grand-total__x5-d8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__3o6nU\",\"first-container\":\"ClaimPharmacy_first-container__24DOY\",\"groups\":\"ClaimPharmacy_groups__gN0O5\",\"input\":\"ClaimPharmacy_input__2zV0D\",\"child-container\":\"ClaimPharmacy_child-container__3bxBF\",\"left-side\":\"ClaimPharmacy_left-side__36Ydb\",\"right-side\":\"ClaimPharmacy_right-side__3b9ZU\",\"tables-container\":\"ClaimPharmacy_tables-container__29er7\",\"wrapper\":\"ClaimPharmacy_wrapper__1tYX9\",\"table\":\"ClaimPharmacy_table__sOxO5\",\"table-header\":\"ClaimPharmacy_table-header__vbfpz\",\"table-description\":\"ClaimPharmacy_table-description__1rTw7\",\"add-link\":\"ClaimPharmacy_add-link__1oaJN\",\"row\":\"ClaimPharmacy_row__3U2ex\",\"align\":\"ClaimPharmacy_align__1qqZT\",\"center\":\"ClaimPharmacy_center__KJIk6\",\"right\":\"ClaimPharmacy_right__K6eAn\",\"table-total\":\"ClaimPharmacy_table-total__3IDSI\",\"caption\":\"ClaimPharmacy_caption__2JNG1\",\"amount\":\"ClaimPharmacy_amount__1wFSr\",\"sticky\":\"ClaimPharmacy_sticky__2QcKU\",\"grand-total\":\"ClaimPharmacy_grand-total__28Qkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__It_Uf\",\"first-container\":\"ClaimPPE_first-container__2PDwy\",\"groups\":\"ClaimPPE_groups__3F8T-\",\"input\":\"ClaimPPE_input__3KbyV\",\"contract-range\":\"ClaimPPE_contract-range__21-LF\",\"child-container\":\"ClaimPPE_child-container__19svW\",\"left-side\":\"ClaimPPE_left-side__3EWSi\",\"right-side\":\"ClaimPPE_right-side__Mcre2\",\"tables-container\":\"ClaimPPE_tables-container__3vLX8\",\"wrapper\":\"ClaimPPE_wrapper__2lDkk\",\"table\":\"ClaimPPE_table__1d9ZQ\",\"table-header\":\"ClaimPPE_table-header__2jfWY\",\"table-description\":\"ClaimPPE_table-description__B0pV4\",\"add-link\":\"ClaimPPE_add-link__2TK1j\",\"row\":\"ClaimPPE_row__hPaGI\",\"align\":\"ClaimPPE_align__EakZn\",\"center\":\"ClaimPPE_center__2DSBO\",\"right\":\"ClaimPPE_right__1jInO\",\"table-total\":\"ClaimPPE_table-total__1-SlE\",\"caption\":\"ClaimPPE_caption__RtH_1\",\"amount\":\"ClaimPPE_amount__3GEJt\",\"sticky\":\"ClaimPPE_sticky__3IMMC\",\"grand-total\":\"ClaimPPE_grand-total__2O3kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3aZUF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3n5WF\",\"groups\":\"ClaimMedicalSupplies_groups__1kAYn\",\"input\":\"ClaimMedicalSupplies_input__3w3Na\",\"child-container\":\"ClaimMedicalSupplies_child-container__1qpYg\",\"left-side\":\"ClaimMedicalSupplies_left-side__3fj2z\",\"right-side\":\"ClaimMedicalSupplies_right-side__3Jxo1\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2g1bZ\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__1YB7S\",\"table\":\"ClaimMedicalSupplies_table__39sXK\",\"table-header\":\"ClaimMedicalSupplies_table-header__3dEXc\",\"table-description\":\"ClaimMedicalSupplies_table-description__TGhRl\",\"add-link\":\"ClaimMedicalSupplies_add-link__17TK6\",\"row\":\"ClaimMedicalSupplies_row__2vdFX\",\"align\":\"ClaimMedicalSupplies_align__yK5co\",\"center\":\"ClaimMedicalSupplies_center__12JQw\",\"right\":\"ClaimMedicalSupplies_right__XJJUu\",\"table-total\":\"ClaimMedicalSupplies_table-total__3NnUJ\",\"caption\":\"ClaimMedicalSupplies_caption__2811S\",\"amount\":\"ClaimMedicalSupplies_amount__puMje\",\"sticky\":\"ClaimMedicalSupplies_sticky__2SQjJ\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__Dtrsg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__cFi4C\",\"first-container\":\"ClaimClinicManagement_first-container__z1jWC\",\"groups\":\"ClaimClinicManagement_groups__1Y38E\",\"input\":\"ClaimClinicManagement_input__1xBc_\",\"search\":\"ClaimClinicManagement_search__9MCKU\",\"box-search-button\":\"ClaimClinicManagement_box-search-button__2mHNL\",\"no-pad\":\"ClaimClinicManagement_no-pad__1Uccu\",\"child-container\":\"ClaimClinicManagement_child-container__kVMQD\",\"left-side\":\"ClaimClinicManagement_left-side__2dy65\",\"right-side\":\"ClaimClinicManagement_right-side__FXm_-\",\"tables-container\":\"ClaimClinicManagement_tables-container__2fZlC\",\"wrapper\":\"ClaimClinicManagement_wrapper__CK0dL\",\"table\":\"ClaimClinicManagement_table__9y78F\",\"table-header\":\"ClaimClinicManagement_table-header__CvQ9s\",\"table-description\":\"ClaimClinicManagement_table-description__1K-ma\",\"add-link\":\"ClaimClinicManagement_add-link__E0inx\",\"row\":\"ClaimClinicManagement_row__1ZByz\",\"align\":\"ClaimClinicManagement_align__3Bsjj\",\"center\":\"ClaimClinicManagement_center__1agdC\",\"right\":\"ClaimClinicManagement_right__1n2Y8\",\"table-total\":\"ClaimClinicManagement_table-total__1ka1r\",\"caption\":\"ClaimClinicManagement_caption__1rGus\",\"amount\":\"ClaimClinicManagement_amount__3GbWj\",\"sticky\":\"ClaimClinicManagement_sticky__VwhGL\",\"grand-total\":\"ClaimClinicManagement_grand-total__223ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfo_root__2ZhBR\",\"header-container\":\"ReimbursementInfo_header-container__2Be7O\",\"header\":\"ReimbursementInfo_header__3zAnI\",\"title\":\"ReimbursementInfo_title__1ZCQA\",\"content\":\"ReimbursementInfo_content__1LKaM\",\"basic-info\":\"ReimbursementInfo_basic-info__1pQO5\",\"label\":\"ReimbursementInfo_label__1eWwR\",\"collapsible-cell\":\"ReimbursementInfo_collapsible-cell__2LS9L\",\"container\":\"ReimbursementInfo_container__3j2Tx\",\"show-cell\":\"ReimbursementInfo_show-cell__V330m\",\"cell\":\"ReimbursementInfo_cell__3e4E4\",\"groups\":\"ReimbursementInfo_groups__2b0kL\",\"input\":\"ReimbursementInfo_input__1-9pI\",\"reasons-container\":\"ReimbursementInfo_reasons-container__O8h98\",\"delete\":\"ReimbursementInfo_delete__2NG1u\",\"reasons\":\"ReimbursementInfo_reasons__1Bpgw\",\"add-link\":\"ReimbursementInfo_add-link__3IClX\",\"empty-reasons\":\"ReimbursementInfo_empty-reasons__265UY\",\"footer\":\"ReimbursementInfo_footer__2HTae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__3hhrG\",\"first-container\":\"ClaimReimbursement_first-container__38NDs\",\"wrap\":\"ClaimReimbursement_wrap__1ey6r\",\"input\":\"ClaimReimbursement_input__36yRs\",\"child-container\":\"ClaimReimbursement_child-container__1VY-Q\",\"left-side\":\"ClaimReimbursement_left-side__343Le\",\"right-side\":\"ClaimReimbursement_right-side__2CbJR\",\"tables-container\":\"ClaimReimbursement_tables-container__2WwnX\",\"wrapper\":\"ClaimReimbursement_wrapper__1Jn5F\",\"table\":\"ClaimReimbursement_table__ksGL1\",\"table-header\":\"ClaimReimbursement_table-header__1BJ7k\",\"table-description\":\"ClaimReimbursement_table-description__30ZTt\",\"add-link\":\"ClaimReimbursement_add-link__iKc2O\",\"row\":\"ClaimReimbursement_row__1vEel\",\"align\":\"ClaimReimbursement_align__27QCo\",\"center\":\"ClaimReimbursement_center__28QGF\",\"right\":\"ClaimReimbursement_right__RESK7\",\"table-total\":\"ClaimReimbursement_table-total__3V1AF\",\"caption\":\"ClaimReimbursement_caption__38fKN\",\"amount\":\"ClaimReimbursement_amount__1w8eC\",\"sticky\":\"ClaimReimbursement_sticky__2pMEc\",\"grand-total\":\"ClaimReimbursement_grand-total__26LC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Error_root__3MOwq\",\"title\":\"Error_title__2zyaE\",\"message\":\"Error_message__3Qoxb\",\"action-messages\":\"Error_action-messages__1Y6y3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2CKVA\",\"tiles\":\"Dashboard_tiles__1zqWv\",\"task-tray\":\"Dashboard_task-tray__1JXKE\",\"list-item\":\"Dashboard_list-item__330ar\",\"details\":\"Dashboard_details__2yOoR\",\"detail-item\":\"Dashboard_detail-item__222xC\",\"label\":\"Dashboard_label__1pqEl\",\"content\":\"Dashboard_content__2u9m1\",\"action\":\"Dashboard_action__Epa7q\",\"ticket-list\":\"Dashboard_ticket-list__2hY-r\",\"wrapper\":\"Dashboard_wrapper__2R19Z\",\"float\":\"Dashboard_float__1wkpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__QvxEj\",\"groups\":\"BatchDetails_groups__287zx\",\"input\":\"BatchDetails_input__tzzPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__1wK71\",\"title\":\"ClaimListHeader_title__3VPI4\",\"wrapper\":\"ClaimListHeader_wrapper__2or4f\",\"button\":\"ClaimListHeader_button__3Hs-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__dqWZg\",\"default-override\":\"ClaimList_default-override__1mOrj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProviderSchedule_root__3Hb8e\",\"header-container\":\"ProviderSchedule_header-container__1JwiJ\",\"header1\":\"ProviderSchedule_header1__3gDQw\",\"title\":\"ProviderSchedule_title__3sbdz\",\"body\":\"ProviderSchedule_body__1mUiH\",\"content\":\"ProviderSchedule_content__2z-Wg\",\"table\":\"ProviderSchedule_table__1IJDe\",\"groups\":\"ProviderSchedule_groups__2QLV6\",\"partition\":\"ProviderSchedule_partition__1QDjs\",\"action\":\"ProviderSchedule_action__3vB_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__26Wrc\",\"claims-container\":\"BatchPage_claims-container__2G2QW\",\"footer\":\"BatchPage_footer__3Fysl\",\"actions\":\"BatchPage_actions___M6eN\",\"delete-button\":\"BatchPage_delete-button__1fPqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"BaseDetails_groups__sN0KI\",\"input\":\"BaseDetails_input__3fzd_\",\"search\":\"BaseDetails_search__1xIEN\",\"box-search-button\":\"BaseDetails_box-search-button__1prH9\",\"no-pad\":\"BaseDetails_no-pad__2S67i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__hOE-z\",\"header\":\"ICDTextField_header__3AzkP\",\"description\":\"ICDTextField_description__fLJtE\",\"code\":\"ICDTextField_code__snQp0\",\"primary\":\"ICDTextField_primary__1rF7r\",\"actions\":\"ICDTextField_actions__ROI6c\",\"wrapper\":\"ICDTextField_wrapper__2Tl6S\",\"given-diagnosis\":\"ICDTextField_given-diagnosis__1PFMi\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__3GWEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1dpY2\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__1iY52\",\"has-error\":\"DiagnosisList_has-error__3hfPU\",\"title\":\"DiagnosisList_title__qjkfp\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__3tk0Y\",\"error\":\"DiagnosisList_error__2Q9Ah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CptTextField_root__16Cl9\",\"header\":\"CptTextField_header__18VEF\",\"description\":\"CptTextField_description__38J8w\",\"code\":\"CptTextField_code__3zwiV\",\"wrapper\":\"CptTextField_wrapper__14kEU\",\"sub-wrapper\":\"CptTextField_sub-wrapper__3kUzW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__3MFfj\",\"groups\":\"ProcedureForm_groups__33Ssh\",\"limit\":\"ProcedureForm_limit__1jMQI\",\"input\":\"ProcedureForm_input__1I42d\",\"buttons\":\"ProcedureForm_buttons__3gBiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemTextField_root__3kCkJ\",\"header\":\"HospitalItemTextField_header__1p8vm\",\"description\":\"HospitalItemTextField_description__3dt50\",\"code\":\"HospitalItemTextField_code__37pF3\",\"wrapper\":\"HospitalItemTextField_wrapper__2ejzj\",\"sub-wrapper\":\"HospitalItemTextField_sub-wrapper__1TcFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__2OG0L\",\"groups\":\"HospitalItemForm_groups__3_yeP\",\"limit\":\"HospitalItemForm_limit__zR-Bu\",\"input\":\"HospitalItemForm_input__1ZqXE\",\"buttons\":\"HospitalItemForm_buttons__1C7f4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__2ptS9\",\"groups\":\"ProfessionalFeeForm_groups__K8Zz9\",\"limit\":\"ProfessionalFeeForm_limit__dn0RU\",\"input\":\"ProfessionalFeeForm_input__20gH-\",\"buttons\":\"ProfessionalFeeForm_buttons__2JE2y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3v4P_\",\"table\":\"ProcedureList_table__1lDzW\",\"table-header\":\"ProcedureList_table-header__OUZ2f\",\"table-description\":\"ProcedureList_table-description__1woO4\",\"add-link\":\"ProcedureList_add-link__3Y3oZ\",\"row\":\"ProcedureList_row__2-dja\",\"align\":\"ProcedureList_align__qvO_Y\",\"center\":\"ProcedureList_center__3o-L0\",\"right\":\"ProcedureList_right__3krqZ\",\"table-total\":\"ProcedureList_table-total__1VNZY\",\"caption\":\"ProcedureList_caption__164Op\",\"amount\":\"ProcedureList_amount__E-XjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3MjT2\",\"table\":\"HospitalItemList_table__dG_Tf\",\"table-header\":\"HospitalItemList_table-header__2MLsx\",\"table-description\":\"HospitalItemList_table-description__B2u7N\",\"add-link\":\"HospitalItemList_add-link__3rajh\",\"row\":\"HospitalItemList_row__2dICf\",\"align\":\"HospitalItemList_align__1olVn\",\"center\":\"HospitalItemList_center__aS130\",\"right\":\"HospitalItemList_right__2ZVKU\",\"table-total\":\"HospitalItemList_table-total__2NfAE\",\"caption\":\"HospitalItemList_caption__2asKo\",\"amount\":\"HospitalItemList_amount__t79nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2w3dt\",\"table\":\"ProfessionalFeeList_table__10Ygk\",\"table-header\":\"ProfessionalFeeList_table-header__14PMs\",\"table-description\":\"ProfessionalFeeList_table-description__1zGjK\",\"add-link\":\"ProfessionalFeeList_add-link__3_ArR\",\"row\":\"ProfessionalFeeList_row__99ivp\",\"align\":\"ProfessionalFeeList_align__10CgV\",\"center\":\"ProfessionalFeeList_center__5efkN\",\"right\":\"ProfessionalFeeList_right__2qbRI\",\"table-total\":\"ProfessionalFeeList_table-total__3stF4\",\"caption\":\"ProfessionalFeeList_caption__119dY\",\"amount\":\"ProfessionalFeeList_amount__2aSsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__2Ee-X\",\"header\":\"ClaimsRemarks_header__3yH1H\",\"header-text\":\"ClaimsRemarks_header-text__3BhQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__9kPKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__3osD9\",\"first-container\":\"ClaimInPatient_first-container__3t49M\",\"groups\":\"ClaimInPatient_groups__3oIox\",\"input\":\"ClaimInPatient_input__hVAF4\",\"child-container\":\"ClaimInPatient_child-container__2Cq2R\",\"tables-container\":\"ClaimInPatient_tables-container__2oIYc\",\"left-side\":\"ClaimInPatient_left-side__3DTmU\",\"wrapper\":\"ClaimInPatient_wrapper__35AeS\",\"table\":\"ClaimInPatient_table__18wS_\",\"table-header\":\"ClaimInPatient_table-header__EDm4F\",\"table-description\":\"ClaimInPatient_table-description__2dbX9\",\"add-link\":\"ClaimInPatient_add-link__2PqWJ\",\"row\":\"ClaimInPatient_row__2S-um\",\"align\":\"ClaimInPatient_align__-0kRI\",\"center\":\"ClaimInPatient_center__SCdjg\",\"right\":\"ClaimInPatient_right__SWljZ\",\"table-total\":\"ClaimInPatient_table-total__1FFT6\",\"caption\":\"ClaimInPatient_caption__12ndJ\",\"amount\":\"ClaimInPatient_amount__1BJYs\",\"right-side\":\"ClaimInPatient_right-side__16K8Y\",\"sticky\":\"ClaimInPatient_sticky__3RBSE\",\"grand-total\":\"ClaimInPatient_grand-total__27yFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__3Ga7K\",\"first-container\":\"ClaimOutPatientProcedure_first-container__3Bo1i\",\"groups\":\"ClaimOutPatientProcedure_groups__1_PgN\",\"input\":\"ClaimOutPatientProcedure_input__2yb91\",\"child-container\":\"ClaimOutPatientProcedure_child-container__2IJug\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__koGml\",\"left-side\":\"ClaimOutPatientProcedure_left-side__2oLag\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__3yj4V\",\"table\":\"ClaimOutPatientProcedure_table__39AFH\",\"table-header\":\"ClaimOutPatientProcedure_table-header__2_DFL\",\"table-description\":\"ClaimOutPatientProcedure_table-description__22jzE\",\"add-link\":\"ClaimOutPatientProcedure_add-link__2zVd0\",\"row\":\"ClaimOutPatientProcedure_row__3tr7i\",\"align\":\"ClaimOutPatientProcedure_align__3aSS8\",\"center\":\"ClaimOutPatientProcedure_center__26F-I\",\"right\":\"ClaimOutPatientProcedure_right__2TzV6\",\"table-total\":\"ClaimOutPatientProcedure_table-total__2SbHo\",\"caption\":\"ClaimOutPatientProcedure_caption__37F57\",\"amount\":\"ClaimOutPatientProcedure_amount__1nHfc\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2kHXN\",\"sticky\":\"ClaimOutPatientProcedure_sticky__YQpzp\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__3r0fZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1iLTK\",\"first-container\":\"ClaimOutPatientConsultation_first-container__1-5nU\",\"groups\":\"ClaimOutPatientConsultation_groups__2oMDd\",\"input\":\"ClaimOutPatientConsultation_input__19UZR\",\"child-container\":\"ClaimOutPatientConsultation_child-container__aUMUP\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__2mF2h\",\"left-side\":\"ClaimOutPatientConsultation_left-side__19GSs\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1t8lb\",\"table\":\"ClaimOutPatientConsultation_table__37ymv\",\"table-header\":\"ClaimOutPatientConsultation_table-header__1mDNN\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1K6LA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__1kLWg\",\"row\":\"ClaimOutPatientConsultation_row__1QVq1\",\"align\":\"ClaimOutPatientConsultation_align__JzFHT\",\"center\":\"ClaimOutPatientConsultation_center__Kj125\",\"right\":\"ClaimOutPatientConsultation_right__2UzFx\",\"table-total\":\"ClaimOutPatientConsultation_table-total__3Y5uM\",\"caption\":\"ClaimOutPatientConsultation_caption__1fpt6\",\"amount\":\"ClaimOutPatientConsultation_amount__2NcEC\",\"right-side\":\"ClaimOutPatientConsultation_right-side__2G55v\",\"sticky\":\"ClaimOutPatientConsultation_sticky__1p7r8\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__3hH8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__oSnYx\",\"first-container\":\"ClaimEmergency_first-container__3b0DZ\",\"groups\":\"ClaimEmergency_groups__fVn6k\",\"input\":\"ClaimEmergency_input__20Z4V\",\"child-container\":\"ClaimEmergency_child-container__2B7dx\",\"tables-container\":\"ClaimEmergency_tables-container__1SqZm\",\"left-side\":\"ClaimEmergency_left-side__2XQXV\",\"wrapper\":\"ClaimEmergency_wrapper__2dRHq\",\"table\":\"ClaimEmergency_table__2Ye6U\",\"table-header\":\"ClaimEmergency_table-header__XQM6o\",\"table-description\":\"ClaimEmergency_table-description__eEvjz\",\"add-link\":\"ClaimEmergency_add-link__3f1pP\",\"row\":\"ClaimEmergency_row__9kBGW\",\"align\":\"ClaimEmergency_align__2pcQ2\",\"center\":\"ClaimEmergency_center__2EBE3\",\"right\":\"ClaimEmergency_right__3yT5b\",\"table-total\":\"ClaimEmergency_table-total__1Sfid\",\"caption\":\"ClaimEmergency_caption__3PPFO\",\"amount\":\"ClaimEmergency_amount__22h7o\",\"right-side\":\"ClaimEmergency_right-side__1VzuD\",\"sticky\":\"ClaimEmergency_sticky__2nEt5\",\"grand-total\":\"ClaimEmergency_grand-total__1rCNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ToothNumber_root__2xwxL\",\"label\":\"ToothNumber_label__3a7e8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalProcedureForm_root__2Acnv\",\"groups\":\"DentalProcedureForm_groups__2VwcV\",\"limit\":\"DentalProcedureForm_limit__B0N0H\",\"input\":\"DentalProcedureForm_input__3fOJ9\",\"buttons\":\"DentalProcedureForm_buttons__1zf4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__2JDL2\",\"first-container\":\"ClaimDental_first-container__1bgJH\",\"groups\":\"ClaimDental_groups__1-ERD\",\"chart\":\"ClaimDental_chart__3Dc9C\",\"input\":\"ClaimDental_input__25h7r\",\"contract-range\":\"ClaimDental_contract-range__3m5nq\",\"child-container\":\"ClaimDental_child-container__3e0an\",\"tables-container\":\"ClaimDental_tables-container__cMXte\",\"left-side\":\"ClaimDental_left-side__1TcV5\",\"wrapper\":\"ClaimDental_wrapper__3ThOl\",\"table\":\"ClaimDental_table__2F5f1\",\"table-header\":\"ClaimDental_table-header__2akCh\",\"table-description\":\"ClaimDental_table-description__216ml\",\"add-link\":\"ClaimDental_add-link__lzfHs\",\"row\":\"ClaimDental_row__3LXFH\",\"align\":\"ClaimDental_align__mJMlm\",\"center\":\"ClaimDental_center__3s7zR\",\"right\":\"ClaimDental_right__1k-F1\",\"table-total\":\"ClaimDental_table-total__3QDdT\",\"caption\":\"ClaimDental_caption__3mlFq\",\"amount\":\"ClaimDental_amount__2ltb-\",\"right-side\":\"ClaimDental_right-side__1TuoJ\",\"sticky\":\"ClaimDental_sticky__2jLb5\",\"grand-total\":\"ClaimDental_grand-total__gc69p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__3tnOB\",\"first-container\":\"ClaimMedicineAllowance_first-container__AHNJn\",\"groups\":\"ClaimMedicineAllowance_groups__2iRok\",\"input\":\"ClaimMedicineAllowance_input__1XM4n\",\"child-container\":\"ClaimMedicineAllowance_child-container__eGvyY\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__9NdEv\",\"left-side\":\"ClaimMedicineAllowance_left-side__3ULwO\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__2a9dZ\",\"table\":\"ClaimMedicineAllowance_table__tRJMn\",\"table-header\":\"ClaimMedicineAllowance_table-header__1Ynyj\",\"table-description\":\"ClaimMedicineAllowance_table-description__3P7Fc\",\"add-link\":\"ClaimMedicineAllowance_add-link__bcTPs\",\"row\":\"ClaimMedicineAllowance_row__X0O5w\",\"align\":\"ClaimMedicineAllowance_align__BxZLW\",\"center\":\"ClaimMedicineAllowance_center__bUmmq\",\"right\":\"ClaimMedicineAllowance_right__1oGzD\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IQEl\",\"caption\":\"ClaimMedicineAllowance_caption__15HJx\",\"amount\":\"ClaimMedicineAllowance_amount__1OeW6\",\"right-side\":\"ClaimMedicineAllowance_right-side__2LJsC\",\"sticky\":\"ClaimMedicineAllowance_sticky__1tKev\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1HUo0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__10qUm\",\"first-container\":\"ClaimAPE_first-container__3VIQz\",\"groups\":\"ClaimAPE_groups__1H7zB\",\"input\":\"ClaimAPE_input__2Wllf\",\"contract-range\":\"ClaimAPE_contract-range__1xKUx\",\"child-container\":\"ClaimAPE_child-container__2-Cqb\",\"tables-container\":\"ClaimAPE_tables-container__2c44w\",\"left-side\":\"ClaimAPE_left-side__3Grb8\",\"wrapper\":\"ClaimAPE_wrapper__3kVSF\",\"table\":\"ClaimAPE_table__omI3l\",\"table-header\":\"ClaimAPE_table-header__2bLUm\",\"table-description\":\"ClaimAPE_table-description__1imB1\",\"add-link\":\"ClaimAPE_add-link__2hydA\",\"row\":\"ClaimAPE_row__2LLeH\",\"align\":\"ClaimAPE_align__2aoEU\",\"center\":\"ClaimAPE_center__DIEY_\",\"right\":\"ClaimAPE_right__3JBKi\",\"table-total\":\"ClaimAPE_table-total__1hqGE\",\"caption\":\"ClaimAPE_caption__2uqYE\",\"amount\":\"ClaimAPE_amount__1I4D8\",\"right-side\":\"ClaimAPE_right-side__3R0S8\",\"sticky\":\"ClaimAPE_sticky__3qv6w\",\"grand-total\":\"ClaimAPE_grand-total__1i42h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__Y8G80\",\"first-container\":\"ClaimECU_first-container__1rhnH\",\"groups\":\"ClaimECU_groups__3Ibk_\",\"input\":\"ClaimECU_input__26EJ2\",\"child-container\":\"ClaimECU_child-container__1MXFG\",\"tables-container\":\"ClaimECU_tables-container__1eXUa\",\"left-side\":\"ClaimECU_left-side__2cvFC\",\"wrapper\":\"ClaimECU_wrapper__gZOgU\",\"table\":\"ClaimECU_table__1Bicl\",\"table-header\":\"ClaimECU_table-header__1vKl3\",\"table-description\":\"ClaimECU_table-description__qUDPT\",\"add-link\":\"ClaimECU_add-link__wl7KO\",\"row\":\"ClaimECU_row__20V6A\",\"align\":\"ClaimECU_align__4hqDF\",\"center\":\"ClaimECU_center__1bRln\",\"right\":\"ClaimECU_right__3VP8v\",\"table-total\":\"ClaimECU_table-total__GSoyb\",\"caption\":\"ClaimECU_caption__156Qz\",\"amount\":\"ClaimECU_amount__3anBs\",\"right-side\":\"ClaimECU_right-side__3rxLw\",\"sticky\":\"ClaimECU_sticky__1sJqT\",\"grand-total\":\"ClaimECU_grand-total__3ggCY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__3RVRM\",\"first-container\":\"ClaimPPE_first-container__21sPt\",\"groups\":\"ClaimPPE_groups__u8awx\",\"input\":\"ClaimPPE_input__2H_V4\",\"packages\":\"ClaimPPE_packages__3-Fqt\",\"child-container\":\"ClaimPPE_child-container__4CbFv\",\"tables-container\":\"ClaimPPE_tables-container__1P7tK\",\"left-side\":\"ClaimPPE_left-side__1Wl6h\",\"wrapper\":\"ClaimPPE_wrapper__EWklO\",\"table\":\"ClaimPPE_table__ECnsY\",\"table-header\":\"ClaimPPE_table-header__1MiEt\",\"table-description\":\"ClaimPPE_table-description__23Chj\",\"add-link\":\"ClaimPPE_add-link__2jmjj\",\"row\":\"ClaimPPE_row__3D1tu\",\"align\":\"ClaimPPE_align__12mQb\",\"center\":\"ClaimPPE_center__3ZjbJ\",\"right\":\"ClaimPPE_right__3uBxk\",\"table-total\":\"ClaimPPE_table-total__vFP-x\",\"caption\":\"ClaimPPE_caption__3SGWC\",\"amount\":\"ClaimPPE_amount__3eFhL\",\"right-side\":\"ClaimPPE_right-side__MiTxO\",\"sticky\":\"ClaimPPE_sticky__1TIh3\",\"grand-total\":\"ClaimPPE_grand-total__IdBsM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__2OUHv\",\"first-container\":\"ClaimPharmacy_first-container__3CTh5\",\"groups\":\"ClaimPharmacy_groups__1dXFx\",\"input\":\"ClaimPharmacy_input__1fnDP\",\"child-container\":\"ClaimPharmacy_child-container__2DXAY\",\"tables-container\":\"ClaimPharmacy_tables-container__OVhpf\",\"left-side\":\"ClaimPharmacy_left-side__2knv5\",\"wrapper\":\"ClaimPharmacy_wrapper__uDOW8\",\"table\":\"ClaimPharmacy_table__2ttlx\",\"table-header\":\"ClaimPharmacy_table-header__2DPRY\",\"table-description\":\"ClaimPharmacy_table-description__anC6p\",\"add-link\":\"ClaimPharmacy_add-link__3-l-Y\",\"row\":\"ClaimPharmacy_row__1EBvJ\",\"align\":\"ClaimPharmacy_align__3dWWS\",\"center\":\"ClaimPharmacy_center__2Lg3i\",\"right\":\"ClaimPharmacy_right__3Irs7\",\"table-total\":\"ClaimPharmacy_table-total__sPYMH\",\"caption\":\"ClaimPharmacy_caption__2a4nY\",\"amount\":\"ClaimPharmacy_amount__AYkmn\",\"right-side\":\"ClaimPharmacy_right-side__1ss74\",\"sticky\":\"ClaimPharmacy_sticky__RRGLs\",\"grand-total\":\"ClaimPharmacy_grand-total__3QkK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3NBGF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3-YoF\",\"groups\":\"ClaimMedicalSupplies_groups__3hkzB\",\"input\":\"ClaimMedicalSupplies_input__22TfW\",\"child-container\":\"ClaimMedicalSupplies_child-container__eULTM\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2zfdH\",\"left-side\":\"ClaimMedicalSupplies_left-side__2MoH7\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__2hL_L\",\"table\":\"ClaimMedicalSupplies_table__2JI1-\",\"table-header\":\"ClaimMedicalSupplies_table-header__CX7uX\",\"table-description\":\"ClaimMedicalSupplies_table-description__14O2d\",\"add-link\":\"ClaimMedicalSupplies_add-link__1nCh7\",\"row\":\"ClaimMedicalSupplies_row__g6Y-_\",\"align\":\"ClaimMedicalSupplies_align__1_hYI\",\"center\":\"ClaimMedicalSupplies_center__eJ3xR\",\"right\":\"ClaimMedicalSupplies_right__1Rf4R\",\"table-total\":\"ClaimMedicalSupplies_table-total__XHhz_\",\"caption\":\"ClaimMedicalSupplies_caption__1slE2\",\"amount\":\"ClaimMedicalSupplies_amount__3oFZd\",\"right-side\":\"ClaimMedicalSupplies_right-side__gNovx\",\"sticky\":\"ClaimMedicalSupplies_sticky__3bxBP\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__1G-Tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__1r___\",\"first-container\":\"ClaimClinicManagement_first-container__2skqe\",\"groups\":\"ClaimClinicManagement_groups__3FbWr\",\"input\":\"ClaimClinicManagement_input__2Keb1\",\"search\":\"ClaimClinicManagement_search__2LTYC\",\"box-search-button\":\"ClaimClinicManagement_box-search-button__3GicP\",\"no-pad\":\"ClaimClinicManagement_no-pad__2SIL6\",\"child-container\":\"ClaimClinicManagement_child-container__n7uq4\",\"tables-container\":\"ClaimClinicManagement_tables-container__3NmAQ\",\"left-side\":\"ClaimClinicManagement_left-side__D4Ima\",\"wrapper\":\"ClaimClinicManagement_wrapper__3yNmB\",\"table\":\"ClaimClinicManagement_table__1OvWr\",\"table-header\":\"ClaimClinicManagement_table-header__2avVb\",\"table-description\":\"ClaimClinicManagement_table-description__2hA0s\",\"add-link\":\"ClaimClinicManagement_add-link__2GJYD\",\"row\":\"ClaimClinicManagement_row__1YHad\",\"align\":\"ClaimClinicManagement_align__3VKHt\",\"center\":\"ClaimClinicManagement_center__2ugQN\",\"right\":\"ClaimClinicManagement_right__2YJdE\",\"table-total\":\"ClaimClinicManagement_table-total__12gwG\",\"caption\":\"ClaimClinicManagement_caption__1ufF7\",\"amount\":\"ClaimClinicManagement_amount__38Qbv\",\"right-side\":\"ClaimClinicManagement_right-side__33DHV\",\"sticky\":\"ClaimClinicManagement_sticky__jEfao\",\"grand-total\":\"ClaimClinicManagement_grand-total__1xe5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfo_root__A48Ge\",\"header-container\":\"ReimbursementInfo_header-container__7Rc0y\",\"header\":\"ReimbursementInfo_header__2Fspq\",\"title\":\"ReimbursementInfo_title__1JbPt\",\"content\":\"ReimbursementInfo_content__1O8ol\",\"basic-info\":\"ReimbursementInfo_basic-info__1oPax\",\"label\":\"ReimbursementInfo_label__LDCyS\",\"collapsible-cell\":\"ReimbursementInfo_collapsible-cell__1PlUR\",\"container\":\"ReimbursementInfo_container__M1ZXd\",\"show-cell\":\"ReimbursementInfo_show-cell__1q80V\",\"cell\":\"ReimbursementInfo_cell__2ZIqz\",\"groups\":\"ReimbursementInfo_groups__na5mh\",\"input\":\"ReimbursementInfo_input__2qSpD\",\"reasons-container\":\"ReimbursementInfo_reasons-container__3vqkq\",\"delete\":\"ReimbursementInfo_delete__2aKoN\",\"reasons\":\"ReimbursementInfo_reasons__1twVx\",\"add-link\":\"ReimbursementInfo_add-link__3leZg\",\"empty-reasons\":\"ReimbursementInfo_empty-reasons__2hpfm\",\"footer\":\"ReimbursementInfo_footer__3FzeE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__2-8KB\",\"first-container\":\"ClaimReimbursement_first-container__18fTD\",\"wrap\":\"ClaimReimbursement_wrap__3HMhP\",\"input\":\"ClaimReimbursement_input__3la5w\",\"child-container\":\"ClaimReimbursement_child-container__1kWRr\",\"tables-container\":\"ClaimReimbursement_tables-container__PR9B_\",\"left-side\":\"ClaimReimbursement_left-side__1m7FN\",\"wrapper\":\"ClaimReimbursement_wrapper__246w6\",\"table\":\"ClaimReimbursement_table__2S73N\",\"table-header\":\"ClaimReimbursement_table-header__1zQ8j\",\"table-description\":\"ClaimReimbursement_table-description__2tmiu\",\"add-link\":\"ClaimReimbursement_add-link__2JH4c\",\"row\":\"ClaimReimbursement_row__1OSjx\",\"align\":\"ClaimReimbursement_align__3OEDi\",\"center\":\"ClaimReimbursement_center__13TIn\",\"right\":\"ClaimReimbursement_right__3fu2G\",\"table-total\":\"ClaimReimbursement_table-total__3dvpa\",\"caption\":\"ClaimReimbursement_caption__2HDFA\",\"amount\":\"ClaimReimbursement_amount__3l1fZ\",\"right-side\":\"ClaimReimbursement_right-side__14Gxn\",\"sticky\":\"ClaimReimbursement_sticky__26GxQ\",\"groups\":\"ClaimReimbursement_groups__38k8I\",\"grand-total\":\"ClaimReimbursement_grand-total__7vHa3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2d4M4\",\"tiles\":\"Dashboard_tiles__16_MG\",\"row\":\"Dashboard_row__2TDbS\",\"task-tray\":\"Dashboard_task-tray__1YmzT\",\"task-tray-monitor\":\"Dashboard_task-tray-monitor__1FeES\",\"ticket-list\":\"Dashboard_ticket-list__1Q0kW\",\"wrapper\":\"Dashboard_wrapper__1T3tt\",\"float\":\"Dashboard_float__1Xub9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2xUj2\",\"buttons\":\"ButtonFooter_buttons__3v_r7\",\"counter\":\"ButtonFooter_counter__1pqmU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__1B1lo\",\"header-container\":\"AssignDialog_header-container__2q19w\",\"header\":\"AssignDialog_header__4mmtH\",\"title\":\"AssignDialog_title__1t8cw\",\"content\":\"AssignDialog_content__Y7uRW\",\"input\":\"AssignDialog_input__2npYe\",\"footer\":\"AssignDialog_footer__3QHDI\",\"assign\":\"AssignDialog_assign__1aP36\",\"to\":\"AssignDialog_to__2eLiV\",\"action\":\"AssignDialog_action__2H051\",\"message-content\":\"AssignDialog_message-content__1NrdY\",\"message\":\"AssignDialog_message__27R73\",\"message-child\":\"AssignDialog_message-child__2eYo7\",\"alert-title\":\"AssignDialog_alert-title__ZMO3M\",\"footer-action\":\"AssignDialog_footer-action__27lzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBatchesPage_root__1b7-1\",\"table-container\":\"CreatedBatchesPage_table-container__1gFsH\",\"search-container\":\"CreatedBatchesPage_search-container__2wgNb\",\"reassign\":\"CreatedBatchesPage_reassign__14Y6T\",\"search\":\"CreatedBatchesPage_search__2mhtd\",\"action-container\":\"CreatedBatchesPage_action-container__Pa7R0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__1PwO3\",\"groups\":\"BatchDetails_groups__3A2VN\",\"input\":\"BatchDetails_input__3hwk1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__2YvdB\",\"title\":\"ClaimListHeader_title__2tIMg\",\"wrapper\":\"ClaimListHeader_wrapper__1gVaD\",\"button\":\"ClaimListHeader_button__2wf-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__27Pnu\",\"default-override\":\"ClaimList_default-override__2T421\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__3iS6_\",\"claims-container\":\"BatchPage_claims-container__FFC4C\",\"footer\":\"BatchPage_footer__6IBOB\",\"actions\":\"BatchPage_actions__BbrLm\",\"delete-button\":\"BatchPage_delete-button__1-tPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__311ud\",\"header-container\":\"ViewList_header-container__1eor8\",\"header\":\"ViewList_header__15HTz\",\"title\":\"ViewList_title__d_bSk\",\"content\":\"ViewList_content__2LOiZ\",\"search\":\"ViewList_search__2hJ0S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2It_d\",\"tiles\":\"Dashboard_tiles__2DX72\",\"task-tray\":\"Dashboard_task-tray__2MeJZ\",\"list-item\":\"Dashboard_list-item__1ixUY\",\"details\":\"Dashboard_details__39R6g\",\"detail-item\":\"Dashboard_detail-item__1qIsO\",\"label\":\"Dashboard_label__2wpxb\",\"content\":\"Dashboard_content__2vmkp\",\"action\":\"Dashboard_action__10xYG\",\"ticket-list\":\"Dashboard_ticket-list__1iTbF\",\"wrapper\":\"Dashboard_wrapper__3z4j1\",\"float\":\"Dashboard_float__1Hiew\",\"completed_task\":\"Dashboard_completed_task__RN1as\"};"],"sourceRoot":""}