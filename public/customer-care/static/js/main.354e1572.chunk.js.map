{"version":3,"sources":["Pages/CustomerCarePage/GlobalFunction.tsx","Pages/CustomerCarePage/Components/InputField.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/CheckContractSection.tsx","Pages/CustomerCarePage/API.tsx","Pages/CustomerCarePage/Components/CustomTable.tsx","Pages/CustomerCarePage/Components/IconButton.tsx","Pages/TicketList/API.tsx","Components/UI/LoadingIndicator/index.tsx","../@hims/core/dist/index.es.js","Pages/CustomerCarePage/Components/TextButton.tsx","Pages/CustomerCarePage/LeftPanelSection/SearchedMembersList.tsx","Pages/CustomerCarePage/Components/Loading.tsx","Pages/CustomerCarePage/Components/TypeValueField.tsx","Pages/CustomerCarePage/LeftPanelSection/MemberDataSection.tsx","Pages/CustomerCarePage/Processmaker.tsx","Pages/CustomerCarePage/LeftPanelSection/ClientDataSection.tsx","Pages/CustomerCarePage/LeftPanelSection/SearchedClientsList.tsx","Pages/CustomerCarePage/Payloads.tsx","Pages/CustomerCarePage/LeftPanelSection/LeftPanelSection.tsx","Pages/CustomerCarePage/Components/Dropdown.tsx","Pages/CustomerCarePage/Components/DetailedDropdown.tsx","Pages/CustomerCarePage/Components/DetailedNumberField.tsx","Pages/CustomerCarePage/Components/DatePicker.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ConfinementSection.tsx","Pages/CustomerCarePage/Components/NumberField.tsx","Pages/CustomerCarePage/Components/CustomCheckbox.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/AvailmentSection.tsx","Pages/CustomerCarePage/Components/CustomDropzone.tsx","Pages/CustomerCarePage/Components/InputArea.tsx","Pages/CustomerCarePage/Components/CustomChip.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/TicketInfoSection.tsx","Pages/CustomerCarePage/Components/InputChip.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/InquirySection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ConsultationSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/EmergencyRoomSection.tsx","Pages/CustomerCarePage/TicketFooter.tsx","Pages/CustomerCarePage/Components/CustomTab.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/BasicInformationSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ContactsAndBranchesSection.tsx","Pages/CustomerCarePage/Components/TextTab.tsx","Pages/CustomerCarePage/Components/CustomRadio.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ServicingInstructionsSection/CardSortingSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ServicingInstructionsSection/CardPrintingSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ServicingInstructionsSection/BillingSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ServicingInstructionsSection/EnrollmentSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ServicingInstructionsSection/CollectionSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ServicingInstructionsSection/AvailmentSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ServicingInstructionsSection/ReportorialSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ServicingInstructionsSection/ServicingInstructionsSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/HMOInformationSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/MembersSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/HistorySection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/DocumentsSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/AuditLogsSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/MemberFieldsSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ClientProfileSection.tsx","Components/UI/GlobalFunction.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/MemberProfileSection/HMOInformation/index.tsx","Components/UI/TableComponent/index.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/MemberProfileSection/Documents/index.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/MemberProfileSection/index.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/PartnerNetworkSection.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/CheckUtilizationSection.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/TicketInfoModal.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/ReviewTicketsSection.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/CheckBenefitSection.tsx","Pages/CustomerCarePage/CreateTicketPage/CreateTicketPage.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/SummarySection.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/CRUDTable.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/UpdateSection.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/AccommodationsSection.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/DiagnosesSection.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/PhysiciansSection.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/ProceduresSection.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/OtherDetailsSection.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/DischargeDetailsSection.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/UploadedDocumentsSection.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/UpdateInquirySection.tsx","Pages/CustomerCarePage/Components/CustomModal.tsx","Pages/CustomerCarePage/UpdateTicketPage/UpdateTicketPage.tsx","Pages/Home/Loadable.tsx","Pages/CustomerCarePage/Components/ComplexTable.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/ApproveAvailmentSection.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/SummaryAvailmentSection.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/ApproveInpatientSection.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/ApproveConsultationSection.tsx","Pages/CustomerCarePage/ResolveTicketPage/ResolveTicketPage.tsx","Pages/TicketList/Loadable.tsx","Pages/CustomerCarePage/Components/DetailedInputField.tsx","Pages/CustomerCarePage/AdvanceSearch/AdvanceSearch.tsx","Pages/Dashboard/Dashboard.tsx","Containers/App/index.tsx","i18n.ts","Containers/App/constants.ts","Containers/App/reducer.ts","app.tsx","reducers.ts"],"names":["GlobalFunction","sentence","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","fname","mname","lname","getIntials","num","isDecimal","toFixed","toString","replace","text","initials","wordArray","paramDate","date","Date","day","getDate","monthIndex","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","meridian","newSec","toLocaleString","fromDate","toDate","getTime","valueList","Math","round","index","birthDate","ageInMillis","now","abs","getUTCFullYear","ticketType","specificType","appNo","tempString","InputField","props","_state","this","placeholder","value","error","dynamicStyle","borderColor","undefined","className","disabled","type","style","onChange","event","charLimit","target","textAlign","React","CheckContractSection","contractUrls","state","contractListUpdated","API","get","memberId","clientId","response","console","log","map","benefit","_id","setState","pdfUrl","process","execPath","viewerUrl","paddingTop","width","height","src","backendUrl","url","success","fail","fetch","method","headers","then","json","data","catch","body","customHeader","JSON","stringify","CustomTable","handleChangePage","_event","page","handleChangeRowsPerPage","rowsPerPage","parseInt","resetPage","getSlicedData","rowsPerPageOptions","startingItem","rows","slice","filterData","_props","onChangeState","overflow","canOverflow","stickyHeader","columns","column","label","renderHeader","renderRow","row","j","colSpan","noRowsMessage","paginationClass","count","labelDisplayedRows","info","onChangeInfo","from","to","labelRowsPerPage","onChangePage","onChangeRowsPerPage","IconButton","onClick","icon","size","localStorage","getItem","useStyles","makeStyles","root","position","zIndex","right","bottom","top","left","backgroundColor","container","outline","alignItems","justifyContent","display","flexDirection","Loader","classes","defaultProps","Object","freeze","index$1","index$2","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","service_worker","URL","href","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","index$3","ServiceWorker","index$4","BaseTheme","createMuiTheme","palette","primary","main","contrastText","secondary","typography","fontFamily","button","fontWeight","fontSize","textTransform","overrides","MuiDialog","MuiDialogTitle","color","MuiDialogContentText","MuiFormControlLabel","MuiIconButton","MuiButton","containedPrimary","boxShadow","containedSecondary","border","outlinedSecondary","_extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","_assign","assign","t","s","n","arguments","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","__generator","f","y","g","_","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","push","__spreadArrays","il","r","k","a","jl","borderCss","borderRadius","theme","createStyles","control","borderBottomColor","input","select","marginTop","spacing","valueContainer","flexWrap","flex","noOptionsMessage","padding","singleValue","paper","inputComponent","_a","inputRef","getOwnPropertySymbols","propertyIsEnumerable","__rest","createElement","ref","components","Control","children","innerProps","innerRef","selectProps","TextFieldProps","TextField","InputProps","inputProps","variant","fullWidth","Menu","Paper","square","Option","MenuItem","selected","isFocused","component","isSelected","NoOptionsMessage","Typography","Placeholder","SingleValue","ValueContainer","useState","single","setSingle","FormControl","NoSsr","inputId","options","suggestions","optionItem","isSearchable","isClearable","index$5","InputAutocomplete","borderCss$1","useStyles$1","textField","currentValue","setcurrentValue","id","defaultValue","chips","multiline","index$6","InputChipTextField","borderCss$2","borderStyles","useStyles$2","formControl","selectEmpty","marginRight","StyledOutlinedInput","withStyles","OutlinedInput","items","defVal","find","item","getDefaultValue","setCurrentValue","inputLabel","useRef","labelWidth","InputLabel","htmlFor","selectedItem","name","IconComponent","selectItem","displaySelectItem","required","key","index$7","InputSelect","borderCss$3","borderStyles$1","useStyles$3","errorIcon","float","StyledOutlinedInput$1","FormHelperText","errorMessage","index$8","InputSelectSetValue","useStyles$4","borderCss$4","StyledTextField","index$9","InputTextField","useStyles$5","inputSelect","marginBottom","dialog","align","justify","dialogContent","paddingRight","paddingLeft","dialogTitle","dialogContentTitle","dialogContentText","formControlLabel","checkBox","dialogAction","resolveDialogAction","leftButton","marginLeft","rightButton","StyledCheckbox","checked","Checkbox","notes","notesError","isResolved","_b","setDisabled","handleClose","onClose","setFieldValue","fieldName","setFieldError","Grid","direction","xs","DialogTitle","disableTypography","DialogContent","DialogContentText","FormControlLabel","checkedIcon","labelPlacement","DialogActions","Button","onSubmit","selectItems","Dialog","open","isModalOpen","index$a","TicketModal","styles","_super","SampleCoreComponent","render","Component","index$b","useStyles$6","appBar","breakpoints","up","menuButton","logo","badge","grow","flexGrow","AppBar","Toolbar","edge","menuOnClick","Link","logoImage","alt","userOnClick","Avatar","userImage","badgeCount","propTypes","number","useStyles$7","sideBar","listItem","listItemIcon","minWidth","avatar","avatarSelected","listItemText","listItemTextSelected","iconSelected","divider","ListItemLink","link","textDecoration","ListItem","sidebarSelected","dashboard","create_ticket","members","proposals","clients","tickets","reports","templates","help","selectedMenu","handleDashboardOnClick","attr","handleSidebarClick","setSelectedMenu","List","ListItemIcon","ListItemText","Divider","useStyles$8","drawer","flexShrink","drawerPaper","content","toolbar","mixins","useStyles$9","gridContainer","breadCrumbs","headerTitle","linkPrevious","cursor","linkCurrent","index$c","Breadcrumbs","useStyles$a","nameFontSize","valueFontSize","useStyles$b","grid","string","useCirclePrimitive","circlePrimitiveStyle","rotate","delay","margin","opacity","animation","animationDelay","useStyles$c","useStyles$d","previous_page","current_page","useStyles$e","minHeight","buttonTitle","buttonSubTitle","rightButtons","leftButtons","useStyles$f","sidebar","maxWidth","contentgrid","flexBasis","index$d","LoadingIndicator","AppHeader","AppSidebar","AuthenticatedLayout","mobileOpen","setMobileOpen","handleDrawerToggle","Hidden","smUp","implementation","Drawer","xsDown","PageHeader","ClientInfoItem","GridHorizontalDivider","BreadcrumbsComponent","FloatingButtons","PageLayout","newPlacement","anchorEl","setAnchorEl","_c","setOpen","_d","placement","setPlacement","logolink","Popper","transition","TransitionProps","Fade","timeout","onLogout","currentTarget","prev","index$e","Actions","Definitions","Reducers","Services","Stores","UI","checkStore","store","shape","dispatch","subscribe","getState","replaceReducer","runSaga","injectedReducers","injectedSagas","DAEMON","ONCE_TILL_UNMOUNT","constants","RESTART_ON_REMOUNT","injectReducerFactory","createReducer","isValid","reducer","Reflect","has","getInjectors","injectReducer","allowedModes","descriptor","saga","mode","_mode","includes","injectSagaFactory","args","newDescriptor","hasSaga","task","ejectSagaFactory","cancel","getInjectors$1","injectSaga","ejectSaga","ResponseError","_this","statusText","Error","parseJSON","checkStatus","ActionTypes","index$f","configureStore","initialState","history","composeEnhancers","sagaMiddleware","middlewares","enhancers","run","hocWithReducer","WrappedComponent","ReducerInjector","context","displayName","useInjectReducer","hocWithSaga","InjectSaga","injectors","componentWillUnmount","useInjectSaga","loadable","importFunc","fallback","LazyComponent","getReducerInjectors","request","getSagaInjectors","index$g","componentProps","ThemeProvider","basename","ActionTypes$1","locale","selectLanguage","language","enTranslationMessages","formatTranslationMessages","messages","defaultFormattedMessages","keys","reduce","formattedMessages","formattedMessage","stateSelector","languageState","index$h","Provider","Children","only","appLocales","messageProviderReducer","action","CHANGE_LOCALE","payload","header","scope","defaultMessage","index$i","Document","Message","NotFoundPage","TextButton","SearchedMembersList","getExtractedMembers","filter","trim","member","searchText","renderMemberShortDetail","firstName","middleName","lastName","onSelectMember","clientName","Loading","CircularProgress","TypeValueField","classNamePrefix","choices","choice","onChangeType","onChangeValue","MemberDataSection","getBenefitsLimit","limits","benefits","forEach","targetLimitIndex","limit","limitType","toNameFormat","client","registeredName","toShortDateString","age","getAge","contractStatus","contract","isVip","loadingBenefits","formatNumber","limitUnit","gender","civilStatus","loadingRecentTickets","recentTickets","renderTableHeader","rowData","renderTableRow","TableCell","recentTicket","TableRow","ticketNo","dateUpdated","Processmaker","ClientDataSection","linkedTickets","disableLinkedTickets","getLinkedTicketsData","corporateAccountNo","mainAddress","mainOfficeAddress","barangay","city","region","startDate","endDate","cardName","salesChannel","contactPersons","contactNo","renderRecentTicketHeader","renderRecentTicketRow","ticket","dateCreated","SearchedClientsList","getExtractedClients","onSelectClient","Payloads","uploadedFiles","confinement","availment","inquiries","consultation","transaction_no","transactionNo","received_via","ticketChannel","received_from","ticketSource","member_name","memberName","corporate_client","broker","brokerName","hospital_name","facility","department","caller_name","callerName","contact_no","additional_notes","additionalNotes","supporting_documents","file","path","ticket_category","ticket_type","specific_type","urgency","assign_to","agent","availment_details","provider","availments_list","diagnosis","diagnoses","icd10_code","icd10Code","remarks","is_primary","is_final","doctors","specialization","fee","no_of_visits","procedures","procedure","cptCode","cpt_code","procedure_name","amount","doctor","phic","isPHIC","date_added","assessment_type","assessmentType","assessment_remarks","assessmentRemarks","approved_amount","approvedAmount","confinement_details","date_admitted","dateAdmitted","confinement_kind","confinementKind","gift_given","updates","room_accommodation","room_type","roomType","no_of_days","costPerDay","total_amount","initialDiagnosis","params","others","coverage","final_bill","philhealth_amount","consultation_details","inquiry_details","inquiry_list","inquiry","detail","specific_detail","specificDetail","answer","related_tickets","relatedTickets","support_docs","pmaker_case_uid","date_created","date_updated","created_by","createdBy","tmp","user_id","module","timestamp","member_id","member_data","is_vip","last_name","middle_name","first_name","client_id","client_data","registered_name","contract_id","loa","doc_name","docName","field","giftGiven","update","hospital_bill","hospitalBill","accommodations","accommodation","days","primaryDiagnosisIndex","isFinal","physicians","physician","visits","item_name","ticket_no","paid_by","paidBy","philhealthAmount","finalBill","discharge_date","dischargeDate","pmCaseId","approval_code","approvalCode","loas","getApprovedAvailmentsCost","total","isPrimary","noOfVisits","dateAdded","generate_approval_code","loa_no","loaNo","date_of_birth","civil_status","latest_contract","custom_metadata","coverage_start_date","coverage_end_date","member_status","getClientData","benefitTree","planTypes","getAddress","address","floor","unit","bldgNo","bldg_no","bldgName","bldg_name","street","brgy","zipCode","zip_code","contactNos","contact_numbers","contact","no","contact_persons","email","email_address","designation","brandName","brand_name","name_on_card","corporate_account_no","tinNo","tin_no","vatType","vat_type","evatNo","evat_no","industry","ownership","years","years_of_existence","prevHMOProvider","prev_hmo_provider","prevHMOEffectivityDate","prev_hmo_effectivity_date","prevHMOExpiryDate","prev_hmo_expiry_date","secRegNo","sec_reg_no","authSignatory","authorized_signatory","authContactNo","authorized_signatory_contact_no","authEmail","authorized_signatory_email_address","authDesignation","authorized_signatory_designation","sourceOfFunds","sources_of_funds","sales_channel","agent_name","company","company_name","contactName","contact_person","main_office_address","branches","branch","level","tree_id","contracts","getContract","attachments","attachment","tags","origName","originalname","encoding","mimeType","mimetype","files","groupName","group_name","headCompanyName","head_company_name","memberFields","member_data_fields","isRequired","is_required","system_name","dataType","data_type","inputType","input_type","field_type","planType","plan_type_name","code","plan_type_code","benefit_count","principals","principal_count","dependents","dependent_count","version","servicingInstructions","servicing_instructions","sortingOfCards","sorting_of_cards","cardSorting","card_sorting","cardPacking","card_packing","packAccordingTo","pack_accdg_to","printingOfCards","printing_of_cards","billing","addressSoaTo","address_soa_to","sendSoaTo","send_soa_to","sendSoaDays","send_soa_days","sendSoaFormats","send_soa_formats","cmApplication","cm_application","additionalRequirements","additional_requirements","soaGeneration","soa_generation","soaSorting","soa_sorting","additionalFieldsSoa","additional_fields_soa","enrollment","employeeEntrollment","employee_enrollment","dependentEntrollment","dependent_enrollment","enrollmentDoneThrough","enrollment_done_through","collection","prefredMeansOfPayment","preferred_means_of_payment","employeeEnrollment","contactPersonForFollowups","contact_person_for_followups","detialsForPaymentPickup","details_for_payment_pickup","preferedBank","preferred_bank","reportorial","reportType","report_type","frequency","available","contractNo","contract_no","handler","activityId","activity_id","user","activity","time","doc","document_name","proposalNo","proposal_number","uploader","uploaded_by","uploadDate","uploaded_date","signedDate","date_signed","batchName","batch_name","endorseDate","date_endorsed","sender","section","member_card_no","corporateName","client_object","effectivityDate","effectivity_date","terminationDate","termination_date","ticketCategory","additionalFiles","dateEscalated","date_escalated","providerData","parseFloat","concat","LeftPanelSection","idTypes","getMemberData","onUpdateMemberStateChange","onUpdateClientStateChange","getMemberBenefit","getRecentTicketsData","loadingMember","combineNodes","category","parent_name","limit_unit","parentNodes","childNodes","parent","child","foundChild","childNode","loadingClient","targetId","where","processmakerParticipated","cases","matchedCase","caseItem","app_uid","generateTicketNumber","app_number","loadingLinkedTickets","onSearchChanged","trimmedValue","splitValue","searchIDType","slicedText","sliceClientID","sliceMemberID","newValue","searchIDValue","loadingClients","isClientsLoaded","loadingMembers","isMembersLoaded","ticketStatus","renderSearchArea","renderTopArea","promptChooseMember","renderTicketData","faSearch","toDateAndTime","Dropdown","isDisabled","onInputChange","filterOption","option","rawInput","hasNoInput","choicesAreShort","inputIsShort","isInputMatch","DetailedDropdown","DetailedNumberField","targetNewValue","isFloat","onFocus","numberValue","isNaN","newStringValue","DatePicker","utils","MomentUtils","format","minDate","ConfinementSection","confinementTypes","facilities","createTicketAttemp","refreshConfinementState","cptCodes","NumberField","disableDelimiter","CustomCheckbox","AvailmentSection","itemToEditIndex","icd10CodeToEdit","doctorToEdit","filteredICD10","icd10Codes","isSame","totalCost","diagnosisIndex","refreshAvailmentState","getFilteredICD10","faPlus","pushBlankDiagnosis","lineHeight","faCheckCircle","faTimesCircle","getProcedureCosts","faPen","faMinusCircle","splice","procedureIndex","renderProcedureDetails","stateProcedure","stateProcedures","pushBlankProcedures","CustomDropzone","multiple","onDrop","acceptedFiles","accept","getRootProps","getInputProps","faFileUpload","InputArea","defaultRows","TextareaAutosize","CustomChip","Chip","onDelete","TicketInfoSection","ticketChannels","ticketSources","ticketTypes","specificTypes","urgencies","agents","refreshTicketState","InputChip","fullWidthInput","onAdd","chip","_chip","InquirySection","supportDocs","refreshInquiryState","filteredInquiries","getFilteredInquiries","onAddInquiry","onRemoveInquiry","ConsultationSection","refreshConsultationState","EmergencyRoomSection","chiefComplaint","editIcon","deleteIcon","TicketFooter","interval","setInterval","onSaveForNow","lastSave","getTimeDeffirence","onResolveTicket","onSubmitTicket","onAssign","disableAssign","onEscalate","disableEscalate","onUpdateTicket","onFinalAssessment","disableFinalAssessment","onSummarizeAssessment","onGenerateApprovalCode","onResolveAndCloseTicket","onCloseTicket","disableCloseTicket","CustomTabs","Tabs","selectedTab","scrollButtons","indicatorColor","setSelectedTab","tabList","tab","Tab","BasicInformationSection","yearsAndCount","brokerCompany","renderItem","ContactsAndBranchesSection","renderAddress","paddingBottom","branchName","borderBottom","TextTab","orientation","tabStyle","tabLabel","CustomRadio","Radio","checkedCondition","CardSortingSection","_value","CardPrintingSection","BillingSection","softCopy","EnrollmentSection","memberClientEncoding","CollectionSection","ReportorialSection","reportorialData","reportorialIsUpdated","capitalizeEachWord","ServicingInstructionsSection","_index","HMOInformationSection","filterName","filterBenefits","filterPrincipals","filterDependents","filterDateCreated","filterDateUpdated","filterVersion","overflowX","renderHeaderColumn","attrName","headerText","faSort","MembersSection","getMembers","HistorySection","loadData","getContractData","renderContractTable","updateDate","DocumentsSection","signedContractsHeader","signedProposalsHeader","masterlistsHeader","apdEndorsementsHeader","corporateGuaranteesHeader","lettersAndRequestsHeader","documents","getDocuments","document","renderTableCell","conditionState","AuditLogsSection","getAuditLogs","logs","audit_logs","MemberFieldsSection","filterByType","fieldtype","ClientProfileSection","informationTabs","accountTabs","activitiesTabs","benefit_plan_tree","plan_types","renderSideBar","renderMainContent","borderRight","renderSideTabs","random","substr","hmoitemStyles","hmoname","hmovalue","hmovaluelink","HMOItem","hmoinfoStyles","subtitle","hmocheckboxlabel","hmographsubtitle","hmodependentsbox","hmoremarksbox","hmodependentsbox_link","change_status_link","icons","popper","borderWidth","background","arrow","borderStyle","HMOInformation","memberData","memberDependents","clientData","contractId","contractName","MBL","ABL","PEC","isValidDate","md","moment","member_type","plan_type","is_philhealth_rider","diff","title","suffix","Table","TableHead","TableBody","Box","cost_center","financial_code","site","site_address","job_lvl","supervisor","hire_date","radioSelected","selectedValue","clickCell","clickValue","cellSelectStyles","textFieldStyles","checkboxStyles","Select","cellSelectClasses","renderValue","TableFilterCell","onFilter","filteringEnabled","TableRadio","onToggle","restProps","stopPropagation","TableCheckBox","faCheckSquare","TableSearchPanel","onValueChange","startAdornment","DefaultTableToolbar","disableGutters","SortingIcon","faSortUp","faSortDown","TableSortLabel","onSort","sortingEnabled","hideSortIcon","EmptyCellFormatter","faExclamationCircle","EmptyCellDataTypeProvider","formatterComponent","RequiredFormatter","RequiredDataTypeProvider","RequiredCheckboxFormatter","RequiredCheckboxDataTypeProvider","ReadOnlyCheckboxFormatter","ReadOnlyCheckboxDataTypeProvider","UploadFileFormatter","UploadFileDataTypeProvider","DisapproveRadioFormatter","aria-label","cnt","DisapproveRadioDataTypeProvider","IncompleteRadioFormatter","IncompleteRadioDataTypeProvider","RadioNameFormatter","RadioDataTypeProvider","ValuesNameFormatter","ValuesNameDataTypeProvider","SystemNameFormatter","SystemNameDataTypeProvider","DataFormatter","DataDataTypeProvider","NumberFormatter","textFieldClasses","NumberDataTypeProvider","TextFormatter","TextDataTypeProvider","DateFormatter","DateCellDataTypeProvider","TimeFormatter","TimeCellDataTypeProvider","TableComponent","formattedColumns","singleSelect","disablePaging","disableSearch","disableSelect","disableSort","disableFilter","toolbarType","columnExtensions","columnBands","showSelectionColumn","query","selection","setSelection","currentPage","setCurrentPage","pageSize","setPageSize","pageSizes","setRows","useEffect","dataTypeProviders","for","data_name","value_name","required_columns","radio","incomplete_radio","disapprove_action","required_checkbox","readonly_checkbox","upload_file","required_cell","onCurrentPageChange","onPageSizeChange","defaultSort","defaultSorting","onSortingChange","onFilterChange","defaultFilter","sorting","onSelectionChange","newSelection","onClickRow","onSelectedRadio","onClickCell","lastSelected","defaultFilters","filters","columnFilteringEnabled","filterExtensions","onFiltersChange","noData","message","selectByRowClick","cellComponent","headerCellComponent","showSelectAll","showSortingControls","sortLabelComponent","rootComponent","Documents","handleClickRow2","handleFilter","applySortFilter","handleSort","documents_tab","aria-controls","all_documents_table","all_filter","all_sort","uploaded_documents_table","uploaded_filter","uploaded_sort","missing_documents_table","missing_filter","missing_sort","all_data","MemberProfileSection","memberTabs","reset","loading","setselectedTab","setLoading","isLoading","callback","fetchMemberDependents","tempId","ins","principal_temp_id","GET_DEPENDENTS_URL","loadMemberData","memberNumber","memberDataList","appendDocumentData","temp_id","clienthmoinfo","contract_name","abl","mbl","pec","rbList","rblItem","docResponse","generateDocumentData","docerror","cerror","componentDidMount","sample_document_data","purpose","uploaded","all_table","columnName","uploaded_table","missing_table","temp_row","file_names","uploaded_file","filename","documents_all_data","documents_all_table","documents_uploaded_table","documents_missing_table","handleClickCell","handleSaveDocument","handleDocumentFilter","table","documents_all_sort","documents_uploaded_sort","documents_missing_sort","documents_all_filter","documents_uploaded_filter","documents_missing_filter","filtered","sort","filter_name","filter_purpose","filter_files","_generatePrincipalName","currEditMemberValues","cleanFirstName","cleanMiddleName","bind","clsx","PartnerNetworkSection","groupChoices","getFilteredFacilitiesData","groups","isLoaded","constructPartnerNetworkData","lastElement","array","parentNode","node","tree_path","childrenNodes","nodesWithType","nodeWithPNList","partner_network_list","pnGroups","pnType","pnFacilities","group","pnGroup","facility_id","isAsc","faCheck","faTimes","sortFacilities","CheckUtilizationSection","dummyData","swipe","desc","sessions","dateAvailed","loaId","label1","label2","maxValue","utilization","toCommonDateString","prevState","Line","TicketInfoModal","ticketId","availmentDetails","confinementDetails","onCloseButtonClicked","renderTicketInfo","index2","getTotalAailmentProcedureCost","ReviewTicketsSection","getFilteredTicketData","channel","source","assignee","lastUpdate","urgencyColor","selectedTicketId","ticketListUpdated","sortTickets","CheckBenefitSection","getFilteredBenefitsData","benefitCategory","benefitName","benefitListUpdated","loadBenefitsData","renderBenefitsList","sortBenefits","CreateTicketPage","clientTabList","memberTabList","uploadFiles","nextAction","hasFiles","FormData","append","isSaving","postFormData","uploadResponse","snackbarMessage","submitTicket","getPostTicketPayload","post","postTicketResponse","submitTicketProcessMaker","is_availment","casesResponse","processmakerExecuteTrigger","appUID","triggerId","put","triggerResponse","processmakerVariable","variableResponse","patchCaseUID","patch","patchTicketResponse","redirectToNextPage","saveForNow","tabSelected","isIcd10CodesLoaded","loadedResources","tempIcd10Codes","parse","full_code","abbreviated_description","setItem","tempCptCodes","debug","RESOURCES_TO_LOAD","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","min","SummarySection","getTotalAccommodationCost","getTotalPhysicianCost","getTotalProcedureCost","getTotalItemCost","renderSection","scroll","pageYOffset","setTabSelected","headerName","miniText","tabIndex","totalValue","CRUDTable","handleOnChange","rowToEdit","editField","onFormat","cols","colName","onHeaderFormat","index1","renderCell","onDeleteRow","onSaveEditRow","UpdateSection","onFormatTableHeader","colIndex","onFormatCRUDTable","refreshUpdatesState","tempData","unshift","_rowIndex","currentVal","AccommodationsSection","getTotalCost","facilitiesList","refreshAccommodationsState","renderAddRoomAccommodation","renderConfinementDetails","DiagnosesSection","rowIndex","setPrimaryDiagnosisIndex","filteredIcd10","diagnosesList","getFilteredICD10Codes","refreshDiagnosisStateChange","PhysiciansSection","physiciansList","refreshPhysiciansStateChange","ProceduresSection","proceduresList","refreshProceduresStateChange","OtherDetailsSection","itemTypes","refreshItemsStateChange","DischargeDetailsSection","coverageList","onUpdateTicketStateChange","UploadedDocumentsSection","refreshFilesStateChange","UpdateInquirySection","CustomModal","Modal","isOpen","closeAfterTransition","in","footer","UpdateTicketPage","errors","loadTicketData","getTicketData","getConfinementData","getErrorList","errorDiagnosis","matched","targets","fileData","apiUpdateTicket","getPutTicketPayload","processmakerGetCase","caseId","processmakerRouteCase","tab_selected","update_state","updateState","accommodation_state","accommodationState","diagnosis_state","diagnosisState","physician_state","physicianState","procedure_state","procedureState","other_detail_state","otherDetailState","file_state","fileState","isAssessmentModalOpen","renderInpatientContent","renderInquiryContent","Utils","Components","HomePage","mapStateToProps","mapDispatchToProps","connect","default","ComplexTable","backColor","ApproveAvailmentSection","getProceduresCost","headerNameStyle","renderProcedure","SummaryAvailmentSection","APPROVED","DISAPPROVED","PENDING","loaTypes","getApprovedAvailments","getDisapprovedAvailments","loaNumber","loaDate","renderAvailment","approvedAvailments","disapprovedAvailments","canEditLOAs","renderLOAHeader","renderLOARow","canEdit","refreshLOAStates","loaToDelete","ApproveInpatientSection","getAttendingPhysicianCost","getAvailmentCost","getAllAvailmentsCost","getAllProceduresCount","renderTabs","renderSummarySection","renderDiagnosisSection","proceduresCount","renderDiagnosisInfo","procedureCost","accommodationCost","attendingPhysicianCost","renderTableSection","ApproveConsultationSection","ResolveTicketPage","onUpdateAssessment","getPutUpdateAssessmentPayload","delete","onResolve","onResolveProcessmaker","returnToTicketList","allAvailmentIsDisapproved","isSummarizing","pmId","isCloseTicketModalOpen","diagnosisData","doctorData","renderOutpatientContent","renderConsultationContent","TicketListPage","DetailedInputField","AdvanceSearch","_data","disableUnderline","ticket_options","urgency_list","Dashboard","openTicketList","confinedPatientChangesList","handleTicketTypeSelect","taskTrayPayload","isLastTicket","case_uid","hospital","calculateLengthOfStay","toLocaleLowerCase","loadTaskTray","changes","change","description","field_value","faCircle","visibility","createBrowserHistory","Containers","routes","exact","App","Helmet","titleTemplate","defaultTitle","renderRoutes","route","require","translationMessages","en","currentUser","userData","repositories","appReducer","LOAD_REPOS","LOAD_REPOS_SUCCESS","username","repos","LOAD_REPOS_ERROR","rest","MessageProvider","openSansObserver","FontFaceObserver","combineReducers","global","globalReducer","router","connectRouter","MOUNT_NODE","getElementById","ReactDOM","load","classList","add","Intl","all","err"],"mappings":"4KAIaA,EAAb,gHAE8BC,GAEtB,IADA,IAAIC,EAAWD,EAASE,cAAcC,MAAM,KACnCC,EAAI,EAAGA,EAAIH,EAASI,OAAQD,IACjCH,EAASG,GAAKH,EAASG,GAAGE,OAAO,GAAGC,cAAgBN,EAASG,GAAGI,UAAU,GAE9E,OAAOP,EAASQ,KAAK,OAP7B,mCAUwBC,EAAeC,EAAeC,GAC9C,MAAM,GAAN,OAAUF,EAAV,YAAmBX,EAAec,WAAWF,GAA7C,YAAuDC,KAX/D,mCAcwBE,GAA0C,IAA7BC,EAA4B,wDAOzD,OALIA,EACQD,EAAIE,QAAQ,GAEZF,EAAIG,YAEHC,QAAQ,0BAA2B,SArBxD,iCAyBsBC,GAGd,IAFA,IAAIC,EAAW,GACXC,EAAYF,EAAKhB,MAAM,KAClBC,EAAI,EAAGA,EAAIiB,EAAUhB,OAAQD,IAClCgB,GAAYC,EAAUjB,GAAGI,UAAU,EAAE,GAAGD,cAAgB,IAE5D,OAAOa,IA/Bf,yCAkC8BE,GACtB,IAAIC,EAA4B,kBAAdD,EAAyB,IAAIE,KAAKF,GAAaA,EACjE,GAAIC,EAAM,CACN,IAMME,EAAMF,EAAKG,UACXC,EAAaJ,EAAKK,WAClBC,EAAON,EAAKO,cAClB,MATmB,CACf,UAAW,WAAY,QACvB,QAAS,MAAO,OAAQ,OACxB,SAAU,YAAa,UACvB,WAAY,YAKGH,GAAc,IAAMF,EAAM,KAAOI,EAGxD,MAAO,KAjDf,wCAoD6BP,GACrB,IAAIC,EAA4B,kBAAdD,EAAyB,IAAIE,KAAKF,GAAaA,EACjE,GAAIC,EAAM,CACN,IAIME,EAAMF,EAAKG,UACXC,EAAaJ,EAAKK,WAClBC,EAAON,EAAKO,cAClB,MAPmB,CACf,MAAO,MAAO,MAAO,MAAO,MAAO,MACnC,MAAO,MAAO,MAAO,MAAO,MAAO,OAKpBH,GAAc,IAAMF,EAAM,KAAOI,EAGxD,MAAO,KAjEf,oCAoEyBP,GACjB,IAAIC,EAA4B,kBAAdD,EAAyB,IAAIE,KAAKF,GAAaA,EACjE,GAAIC,EAAM,CACN,IAMME,EAAMF,EAAKG,UACXC,EAAaJ,EAAKK,WAClBC,EAAON,EAAKO,cACZC,EAAQR,EAAKS,YAAcT,EAAKS,WAAa,GAAK,GAAK,GACvDC,EAAUV,EAAKW,aACfC,EAAUZ,EAAKa,aACfC,EAAYd,EAAKS,WAAa,GAAK,KAAO,KAE5CM,EAAS,IAAMH,EAGnB,OAFwC,IAApCA,EAAQI,iBAAiBlC,SAAciC,EAASH,EAAQI,kBAfzC,CACf,UAAW,WAAY,QACvB,QAAS,MAAO,OAAQ,OACxB,SAAU,YAAa,UACvB,WAAY,YAcDZ,GAAc,IACzBF,EAAM,KACNI,EAAO,MACPE,EAAQ,IACRE,EAAU,IACVK,EAAS,IACTD,EAGR,MAAO,KAlGf,wCAqG6BG,EAAgBC,GAgBrC,IAfA,IAAMN,GAAWM,EAAOC,UAAYF,EAASE,WAAa,IAOpDC,EAAY,CACdC,KAAKC,MAAMV,EAAU,OACrBS,KAAKC,MAAMV,EAAU,MAAQ,GAC7BS,KAAKC,MAAMV,EAAU,IAAM,GAC3BS,KAAKC,MAAMV,GAAW,IAGtBW,EAAQ,EACH1C,EAAI,EAAGA,EAAIuC,EAAUtC,OAAQD,IAClC,GAAIuC,EAAUvC,GAAK,EAAG,CAClB0C,EAAQ1C,EACR,MAIR,OAAI0C,EACM,GAAN,OAAUH,EAAUG,GAApB,YAtBc,CACd,CAAC,MAAO,QACR,CAAC,OAAQ,SACT,CAAC,SAAU,WACX,CAAC,SAAU,YAkB6BA,GAA2B,GAApBH,EAAUG,GAAc,EAAI,IAExE,KA/Hf,6BAkIkBC,GACV,GAAIA,EAAW,CACX,IAAIC,EAAcxB,KAAKyB,MAAQF,EAC/B,OAAOH,KAAKM,IAAI,IAAI1B,KAAKwB,GAAaG,iBAAmB,MAG7D,OAAO,OAxIf,2CA2IgCC,EAAoBC,EAAsBC,GAClE,IAWMC,EAA6B,YAAfH,EAA2B,GAA3B,UAPE,CAClB,UAAa,MACb,uBAAwB,KACxB,iBAAkB,KAClB,UAAa,MACb,aAAgB,OAEiDC,GAAjD,KACpB,MAAM,GAAN,OAZoB,CAChB,UAAa,MACb,QAAW,OAUOD,GAAtB,YAAqCG,GAArC,OAAkDD,OAxJ1D,M,kHCYaE,G,MAAb,8LAI0BC,EAAeC,GACjC,OACKC,KAAKF,MAAMG,cAAgBH,EAAMG,aACjCD,KAAKF,MAAMI,QAAUJ,EAAMI,OAC3BF,KAAKF,MAAMK,QAAUL,EAAMK,QARxC,+BAY2B,IAAD,OAEZC,EAAe,CACjBC,YAFSL,KAEUF,MAAMK,MAAQ,eAAYG,GAGjD,OACI,uBAAKC,UAAU,yBACVP,KAAKF,MAAMG,YACR,uBAAKM,UAAWP,KAAKF,MAAMU,SAAW,qBAAuB,QACxDR,KAAKF,MAAMG,aAEhB,KACJ,yBAAOQ,KAAK,OACRD,SAAUR,KAAKF,MAAMU,SACrBD,UAAWP,KAAKF,MAAMU,SAAW,iCAAmC,aACpEE,MAAON,EAEPF,MAAOF,KAAKF,MAAMI,MAClBS,SAAU,SAACC,KAEH,EAAKd,MAAMe,WACPD,EAAME,OAAOZ,MAAMxD,QAAU,EAAKoD,MAAMe,YAI5C,EAAKf,MAAMa,SAASC,EAAME,OAAOZ,UAG5CF,KAAKF,MAAMe,UACR,gCACA,uBAAKN,UAAU,SACf,uBACIA,UAAWP,KAAKF,MAAMU,SAAW,qBAAuB,OACxDE,MAAO,CAACK,UAAW,UAFvB,UAGYf,KAAKF,MAAMI,MAAMxD,OAH7B,YAGuCsD,KAAKF,MAAMe,aAGlD,UAlDpB,GAAgCG,e,wICJnBC,EAAb,YAII,WAAYnB,GAAgB,IAAD,8BACvB,4CAAMA,KAHVoB,kBAE2B,EAGvB,EAAKC,MAAQ,CACTC,qBAAqB,GAGzB,EAAKF,aAAe,GAPG,EAJ/B,iFAcyB,IAAD,OAChBG,IAAIC,IAAJ,gCAAiCtB,KAAKF,MAAMyB,UAAYvB,KAAKF,MAAM0B,SAAnE,aACI,SAACC,GACGC,QAAQC,IAAIF,GACZ,EAAKP,aAAeO,EAASG,IAAI,SAAAC,GAC7B,MAAM,qCAAN,OAA4CA,EAAQC,IAApD,oBAGJ,EAAKC,SAAS,CAACX,qBAAqB,KAExC,SAACjB,GACGuB,QAAQC,IAAIxB,OAzB5B,+BA8BQ,IAAM6B,EAAM,UAAMC,EAAQC,SAAd,wBAENC,EAAS,UAAMF,EAAQC,SAAd,uDAAqEF,GAEpF,OACI,uBAAKzB,UAAU,WACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,YAAf,kBACA,uBAAKA,UAAU,eAWH,0BACIG,MAAO,CAAC2B,MAAO,OAAQC,OAAQ,UAC/BC,IAAKJ,UAnDrC,GAA0CnB,e,+HCXtCwB,EAAaP,gDAEJZ,EAAb,sGAGQ,MAAOY,kDAHf,kEAMqBQ,EAAaC,EAAmBC,GANrD,gEAOQC,MAAMJ,EAAaC,EAAK,CACpBI,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBAE9BC,KAAK,SAAAtB,GAAQ,OAAIA,EAASuB,SAC1BD,KAAK,SAAAE,GAAI,OAAIP,EAAQO,KACrBC,MAAM,SAAA/C,GAAK,OAAIwC,EAAKxC,KAb7B,uKAgBsBsC,EACAU,EACAT,EACAC,GAnBtB,kFAoBsBS,EApBtB,+BAoB0C,CAAE,eAAgB,oBACpDR,MAAMJ,EAAaC,EAAK,CACpBI,OAAQ,OACRC,QAASM,EACTD,KAAMA,IAETJ,KAAK,SAAAtB,GAAQ,OAAIA,EAASuB,SAC1BD,KAAK,SAAAE,GAAI,OAAIP,EAAQO,KACrBC,MAAM,SAAA/C,GAAK,OAAIwC,EAAKxC,KA5B7B,iLA+B8BsC,EAAaU,EAAWT,EAAmBC,GA/BzE,gEAgCQC,MAAMJ,EAAaC,EAAK,CACpBI,OAAQ,OACRM,KAAMA,IAETJ,KAAK,SAAAtB,GAAQ,OAAIA,EAASuB,SAC1BD,KAAK,SAAAE,GAAI,OAAIP,EAAQO,KACrBC,MAAM,SAAA/C,GAAK,OAAIwC,EAAKxC,KAtC7B,wKAyCqBsC,EAAaU,EAAWT,EAAmBC,GAzChE,gEA0CQC,MAAMJ,EAAaC,EAAK,CACpBI,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BK,KAAME,KAAKC,UAAUH,KAExBJ,KAAK,SAAAtB,GAAQ,OAAIA,IACjBsB,KAAK,SAAAE,GAAI,OAAIP,EAAQO,KACrBC,MAAM,SAAA/C,GAAK,OAAIwC,EAAKxC,KAjD7B,0KAoDuBsC,EAAaU,EAAWT,EAAmBC,GApDlE,gEAqDQC,MAAMJ,EAAaC,EAAK,CACpBI,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BK,KAAME,KAAKC,UAAUH,KAExBJ,KAAK,SAAAtB,GAAQ,OAAIA,IACjBsB,KAAK,SAAAE,GAAI,OAAIP,EAAQO,KACrBC,MAAM,SAAA/C,GAAK,OAAIwC,EAAKxC,KA5D7B,2KA+DwBsC,EAAaU,EAAWT,EAAmBC,GA/DnE,gEAgEQC,MAAMJ,EAAaC,EAAK,CACpBI,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAC3BK,KAAME,KAAKC,UAAUH,KAExBJ,KAAK,SAAAtB,GAAQ,OAAIA,IACjBsB,KAAK,SAAAE,GAAI,OAAIP,EAAQO,KACrBC,MAAM,SAAA/C,GAAK,OAAIwC,EAAKxC,KAvE7B,8G,wKCkCaoD,G,MAAb,YAEI,WAAYzD,GAAgB,IAAD,8BACvB,4CAAMA,KAgBV0D,iBAAmB,SAACC,EAAiBC,GACjC,EAAK3B,SAAS,CAAC2B,KAAMA,KAlBE,EAqB3BC,wBAA0B,SAAC/C,GACvB,EAAKmB,SAAS,CACV6B,YAAaC,SAASjD,EAAME,OAAOZ,MAAO,IAC1CwD,KAAM,KAxBa,EA4B3BI,UAAY,WACR,EAAK/B,SAAS,CAAC2B,KAAM,KA7BE,EAgC3BK,cAAgB,WACZ,GAAI,EAAKjE,MAAMkE,mBAAoB,CAC/B,IAAMC,EAAe,EAAK9C,MAAMuC,KAAO,EAAKvC,MAAMyC,YAClD,OAAO,EAAK9D,MAAMoE,KAAKC,MAAMF,EAAcA,EAAe,EAAK9C,MAAMyC,aAErE,OAAO,EAAK9D,MAAMoE,MAlCtB,EAAK/C,MAAQ,CACTuC,KAAM,EACNE,YAAa,EAEbQ,WAAY,IAPO,EAF/B,iFAcYpE,KAAKF,MAAMkE,oBACXhE,KAAK+B,SAAS,CAAC6B,YAAa5D,KAAKF,MAAMkE,mBAAmB,OAftE,0CA2CwBK,EAAgBlD,GAC5BnB,KAAKmB,MAAMuC,MAAQvC,EAAMuC,MACzB1D,KAAKmB,MAAMyC,aAAezC,EAAMyC,aAC5B5D,KAAKF,MAAMwE,eACXtE,KAAKF,MAAMwE,cAAcnD,EAAMuC,KAAMvC,EAAMyC,eA/C3D,+BAoD2B,IAAD,OAClB,OACI,gCACA,uBAAKlD,MAAO,CAAC6D,SAAUvE,KAAKF,MAAM0E,YAAc,OAAS,SACrD,gBAAC,IAAD,CACIjE,UAAS,UAAMP,KAAKF,MAAMS,UAAYP,KAAKF,MAAMS,UAAY,GAApD,UACTkE,eAAczE,KAAKF,MAAM2E,cAAezE,KAAKF,MAAM2E,cACnD,gBAAC,IAAD,KACKzE,KAAKF,MAAM4E,QACR,gBAAC,IAAD,KACK1E,KAAKF,MAAM4E,QAAQ9C,IAAI,SAAA+C,GACpB,OAAO,gBAAC,IAAD,KAAYA,EAAOC,UAGlC5E,KAAKF,MAAM+E,aACX,gBAAC,IAAD,KACK7E,KAAKF,MAAM+E,gBAEhB,MAER,gBAAC,IAAD,KACK7E,KAAKF,MAAMgF,UACR9E,KAAKF,MAAMoE,KAAKxH,OAAS,EACrBsD,KAAK+D,gBAAgBnC,IAAI,SAACmD,EAAKC,GAC3B,OAAO,EAAKlF,MAAMgF,UAAUC,EAAKC,KAGrC,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAWC,QAAS,IAAKvE,MAAO,CAACK,UAAW,WACvCf,KAAKF,MAAMoF,cAAgBlF,KAAKF,MAAMoF,cAAgB,kBAInE,QAIflF,KAAKF,MAAMkE,mBACR,gBAAC,IAAD,CACIzD,UAAS,UAAMP,KAAKF,MAAMqF,gBAAkBnF,KAAKF,MAAMqF,gBAAkB,GAAhE,uCACTnB,mBAAoBhE,KAAKF,MAAMkE,mBAC/BoB,MAAOpF,KAAKF,MAAMoE,KAAKxH,OACvBkH,YAAa5D,KAAKmB,MAAMyC,YACxBF,KAAM1D,KAAKmB,MAAMuC,KACjB2B,mBAAoB,SAACC,GACjB,OACI,EAAKxF,MAAMyF,aACP,EAAKzF,MAAMyF,aAAaD,GAD5B,UAGOA,EAAKE,KAHZ,YAGoBF,EAAKG,GAHzB,eAGkCH,EAAKF,QAG/CM,iBACI1F,KAAKF,MAAM4F,iBACP1F,KAAKF,MAAM4F,iBAEX,iBAERC,aAAc,SAAClC,EAAiBC,GAC5B,EAAK3B,SAAS,CAAC2B,KAAMA,KAEzBkC,oBAAqB,SAAChF,GAClB,EAAKmB,SAAS,CACV6B,YAAaC,SAASjD,EAAME,OAAOZ,MAAO,IAC1CwD,KAAM,OAGlB,UAvHhB,GAAiC1C,mB,kICvBpB6E,EAAb,iLAE2B,IAAD,OAClB,OACI,uBAAKtF,UAAU,cAAcuF,QAAS,kBAAM,EAAKhG,MAAMgG,YAClD9F,KAAKF,MAAMiG,KAAO,gBAAC,IAAD,CAAiBA,KAAM/F,KAAKF,MAAMiG,KAAMC,KAAMhG,KAAKF,MAAMkG,OAAW,UALvG,GAAgChF,c,6OCd5BwB,EAAaP,gDAEJZ,EAAb,yIAQqBoB,EAAaC,EAAmBC,GARrD,gEAUQC,MAAMJ,EAAaC,EAAK,CACpBI,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYmD,aAAaC,QAAQ,eAGzDnD,KAAK,SAAAtB,GAAQ,OAAIA,EAASuB,SAC1BD,KAAK,SAAAE,GAAI,OAAIP,EAAQO,KACrBC,MAAM,SAAA/C,GAAK,OAAIwC,EAAKxC,KAnB7B,uKAsBsBsC,EAAaU,EAAWT,EAAmBC,GAtBjE,gEAwBQC,MAAMJ,EAAaC,EAAK,CACpBI,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYmD,aAAaC,QAAQ,aAEtD/C,KAAME,KAAKC,UAAUH,KAExBJ,KAAK,SAAAtB,GAAQ,OAAIA,EAASuB,SAC1BD,KAAK,SAAAE,GAAI,OAAIP,EAAQO,KACrBC,MAAM,SAAA/C,GAAK,OAAIwC,EAAKxC,KAlC7B,wKAqCqBsC,EAAaU,EAAWT,EAAmBC,GArChE,gEAuCQC,MAAMJ,EAAaC,EAAK,CACpBI,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYmD,aAAaC,QAAQ,aAEtD/C,KAAME,KAAKC,UAAUH,KAExBJ,KAAK,SAAAtB,GAAQ,OAAIA,IACjBsB,KAAK,SAAAE,GAAI,OAAIP,EAAQO,KACrBC,MAAM,SAAA/C,GAAK,OAAIwC,EAAKxC,KAjD7B,8G,uDCFA,6DAOMgG,EAAYC,YAAW,CAC5BC,KAAM,CACCC,SAAU,QACVjE,MAAO,OACPC,OAAQ,OACRiE,OAAQ,KACRC,MAAO,MACPC,OAAQ,MACRC,IAAK,MACLC,KAAM,MACN5F,UAAW,SACX6F,gBAAiB,sBAErBC,UAAU,CACNvE,OAAQ,OACRwE,QAAS,EACTC,WAAY,SACZC,eAAgB,SAChBC,QAAS,OACTC,cAAe,YAIVC,EAAgC,WAEzC,IAAMC,EAAUjB,IAChB,OACI,uBAAK5F,UAAW6G,EAAQf,MACpB,uBAAK9F,UAAW6G,EAAQP,WACpB,gBAAC,IAAD,CAAkBb,KAAM,SAMxCmB,EAAOE,aAAe,I,y7BCoBlB,GAEJC,OAAOC,OAAO,IACVC,GAEJF,OAAOC,OAAO,IACVE,GAEJH,OAAOC,OAAO,IAUVG,GAAcC,QAAqC,cAA7BC,OAAOC,SAASC,UACb,UAA7BF,OAAOC,SAASC,UAChBF,OAAOC,SAASC,SAASC,MAAM,2DAiC/B,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cAAcC,SAASJ,GAAOlF,KAAK,SAAUuF,GACrDA,EAAaC,cAAgB,WAC3B,IAAIC,EAAmBF,EAAaG,WAEZ,MAApBD,IAIJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBrH,QACfgH,UAAUC,cAAcO,YAI1BjH,QAAQC,IAAI,iHAERuG,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB5G,QAAQC,IAAI,sCAERuG,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,UAM1BpF,MAAM,SAAU/C,GACjBuB,QAAQvB,MAAM,4CAA6CA,KAkC/D,IAAI2I,GAEJxB,OAAOC,OAAO,CACZc,SAtGF,SAAkBH,GAChB,GAA6C,kBAAmBC,UAAW,CAIzE,GAFgB,IAAIY,IAAI,IAAwBnB,OAAOC,SAASmB,MAElDC,SAAWrB,OAAOC,SAASoB,OAIvC,OAGFrB,OAAOsB,iBAAiB,OAAQ,WAC9B,IAAIjB,EAAQ,sBAERP,KAsDV,SAAiCO,EAAOC,GAEtCtF,MAAMqF,GAAOlF,KAAK,SAAUtB,GAE1B,IAAI0H,EAAc1H,EAASqB,QAAQxB,IAAI,gBAEf,MAApBG,EAAS2H,QAAiC,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAExElB,UAAUC,cAAckB,MAAMvG,KAAK,SAAUuF,GAC3CA,EAAaiB,aAAaxG,KAAK,WAC7B6E,OAAOC,SAAS2B,aAKpBxB,GAAgBC,EAAOC,KAExBhF,MAAM,WACPxB,QAAQC,IAAI,mEAtER8H,CAAwBxB,EAAOC,GAG/BC,UAAUC,cAAckB,MAAMvG,KAAK,WACjCrB,QAAQC,IAAI,gHAIdqG,GAAgBC,EAAOC,OA8E7BqB,WAZF,WACM,kBAAmBpB,WACrBA,UAAUC,cAAckB,MAAMvG,KAAK,SAAUuF,GAC3CA,EAAaiB,kBAWfG,GAEJpC,OAAOC,OAAO,CACZoC,cAAeb,KAEbc,GAEJtC,OAAOC,OAAO,IACVsC,GAAY,OAAAC,EAAA,GAAe,CAC7BC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,aAAc,WAEhBC,UAAW,CACTF,KAAM,UACNC,aAAc,YAGlBE,WAAY,CACVC,WAAY,8CACZC,OAAQ,CACND,WAAY,8CACZE,WAAY,IACZC,SAAU,GACVC,cAAe,SAGnBC,UAAW,CACTC,UAAW,CACTtE,KAAM,CACJhE,MAAO,SAGXuI,eAAgB,CACdvE,KAAM,CACJgE,WAAY,8CACZE,WAAY,IACZC,SAAU,MACVK,MAAO,YAGXC,qBAAsB,CACpBzE,KAAM,CACJmE,SAAU,OACVK,MAAO,YAGXE,oBAAqB,CACnBnG,MAAO,CACL4F,SAAU,OACVK,MAAO,YAGXG,cAAe,CACb3E,KAAM,CACJmE,SAAU,SAGdS,UAAW,CACTC,iBAAkB,CAChBC,UAAW,wBACX,UAAW,CACTvE,gBAAiB,YAGrBwE,mBAAoB,CAClBC,OAAQ,sBACRF,UAAW,wBACX,UAAW,CACTvE,gBAAiB,cAGrB0E,kBAAmB,CACjBD,OAAQ,oBACRF,UAAW,wBACX,UAAW,CACTvE,gBAAiB,kBAuBvB2E,GAAiB,SAAuBC,EAAGC,GAW7C,OAVAF,GAAiBjE,OAAOoE,gBAAkB,CACxCC,UAAW,cACAC,OAAS,SAAUJ,EAAGC,GACjCD,EAAEG,UAAYF,IACX,SAAUD,EAAGC,GAChB,IAAK,IAAII,KAAKJ,EACRA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,MAIhBL,EAAGC,IAG3B,SAASM,GAAUP,EAAGC,GAGpB,SAASO,IACPhM,KAAKiM,YAAcT,EAHrBD,GAAeC,EAAGC,GAMlBD,EAAEU,UAAkB,OAANT,EAAanE,OAAO6E,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,GAGjF,IAAII,GAAU,WAaZ,OAZAA,GAAU9E,OAAO+E,QAAU,SAAkBC,GAC3C,IAAK,IAAIC,EAAG9P,EAAI,EAAG+P,EAAIC,UAAU/P,OAAQD,EAAI+P,EAAG/P,IAG9C,IAAK,IAAIoP,KAFTU,EAAIE,UAAUhQ,GAGR6K,OAAO4E,UAAUJ,eAAeY,KAAKH,EAAGV,KAAIS,EAAET,GAAKU,EAAEV,IAI7D,OAAOS,IAGMK,MAAM3M,KAAMyM,YAgB7B,SAASG,GAAUC,EAASC,EAAYC,EAAGC,GACzC,OAAO,IAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GACjD,SAASC,EAAUlN,GACjB,IACEmN,EAAKL,EAAUM,KAAKpN,IACpB,MAAOqN,GACPJ,EAAOI,IAIX,SAASC,EAAStN,GAChB,IACEmN,EAAKL,EAAiB,MAAE9M,IACxB,MAAOqN,GACPJ,EAAOI,IAIX,SAASF,EAAKI,GACZA,EAAOC,KAAOR,EAAQO,EAAOvN,OAAS,IAAI6M,EAAE,SAAUG,GACpDA,EAAQO,EAAOvN,SACd6C,KAAKqK,EAAWI,GAGrBH,GAAML,EAAYA,EAAUL,MAAME,EAASC,GAAc,KAAKQ,UAIlE,SAASK,GAAYd,EAAS1J,GAC5B,IASIyK,EACAC,EACAvB,EACAwB,EAZAC,EAAI,CACNnJ,MAAO,EACPoJ,KAAM,WACJ,GAAW,EAAP1B,EAAE,GAAQ,MAAMA,EAAE,GACtB,OAAOA,EAAE,IAEX2B,KAAM,GACNC,IAAK,IAMP,OAAOJ,EAAI,CACTR,KAAMa,EAAK,GACX,MAASA,EAAK,GACd,OAAUA,EAAK,IACI,oBAAXC,SAA0BN,EAAEM,OAAOC,UAAY,WACvD,OAAOrO,OACL8N,EAEJ,SAASK,EAAK3B,GACZ,OAAO,SAAU8B,GACf,OAIJ,SAAcC,GACZ,GAAIX,EAAG,MAAM,IAAIY,UAAU,mCAE3B,KAAOT,GACL,IACE,GAAIH,EAAI,EAAGC,IAAMvB,EAAY,EAARiC,EAAG,GAASV,EAAU,OAAIU,EAAG,GAAKV,EAAS,SAAOvB,EAAIuB,EAAU,SAAMvB,EAAEI,KAAKmB,GAAI,GAAKA,EAAEP,SAAWhB,EAAIA,EAAEI,KAAKmB,EAAGU,EAAG,KAAKb,KAAM,OAAOpB,EAG3J,OAFIuB,EAAI,EAAGvB,IAAGiC,EAAK,CAAS,EAARA,EAAG,GAAQjC,EAAEpM,QAEzBqO,EAAG,IACT,KAAK,EACL,KAAK,EACHjC,EAAIiC,EACJ,MAEF,KAAK,EAEH,OADAR,EAAEnJ,QACK,CACL1E,MAAOqO,EAAG,GACVb,MAAM,GAGV,KAAK,EACHK,EAAEnJ,QACFiJ,EAAIU,EAAG,GACPA,EAAK,CAAC,GACN,SAEF,KAAK,EACHA,EAAKR,EAAEG,IAAIO,MAEXV,EAAEE,KAAKQ,MAEP,SAEF,QACE,KAAkBnC,GAAZA,EAAIyB,EAAEE,MAAYvR,OAAS,GAAK4P,EAAEA,EAAE5P,OAAS,MAAkB,IAAV6R,EAAG,IAAsB,IAAVA,EAAG,IAAW,CACtFR,EAAI,EACJ,SAGF,GAAc,IAAVQ,EAAG,MAAcjC,GAAKiC,EAAG,GAAKjC,EAAE,IAAMiC,EAAG,GAAKjC,EAAE,IAAK,CACvDyB,EAAEnJ,MAAQ2J,EAAG,GACb,MAGF,GAAc,IAAVA,EAAG,IAAYR,EAAEnJ,MAAQ0H,EAAE,GAAI,CACjCyB,EAAEnJ,MAAQ0H,EAAE,GACZA,EAAIiC,EACJ,MAGF,GAAIjC,GAAKyB,EAAEnJ,MAAQ0H,EAAE,GAAI,CACvByB,EAAEnJ,MAAQ0H,EAAE,GAEZyB,EAAEG,IAAIQ,KAAKH,GAEX,MAGEjC,EAAE,IAAIyB,EAAEG,IAAIO,MAEhBV,EAAEE,KAAKQ,MAEP,SAGJF,EAAKpL,EAAKuJ,KAAKG,EAASkB,GACxB,MAAOR,GACPgB,EAAK,CAAC,EAAGhB,GACTM,EAAI,EACJ,QACAD,EAAItB,EAAI,EAIZ,GAAY,EAARiC,EAAG,GAAQ,MAAMA,EAAG,GACxB,MAAO,CACLrO,MAAOqO,EAAG,GAAKA,EAAG,QAAK,EACvBb,MAAM,GAlFCL,CAAK,CAACb,EAAG8B,MAuFtB,SAASK,KACP,IAAK,IAAIpC,EAAI,EAAG9P,EAAI,EAAGmS,EAAKnC,UAAU/P,OAAQD,EAAImS,EAAInS,IACpD8P,GAAKE,UAAUhQ,GAAGC,OAGf,IAAImS,EAAIjD,MAAMW,GAAIuC,EAAI,EAA3B,IAA8BrS,EAAI,EAAGA,EAAImS,EAAInS,IAC3C,IAAK,IAAIsS,EAAItC,UAAUhQ,GAAIuI,EAAI,EAAGgK,EAAKD,EAAErS,OAAQsI,EAAIgK,EAAIhK,IAAK8J,IAC5DD,EAAEC,GAAKC,EAAE/J,GAIb,OAAO6J,EAGT,IAGII,GAAY,CACd5O,YAHc,qBAId6O,aAAc,GAEZ/I,GAAY,OAAAC,EAAA,GAAW,SAAU+I,GACnC,OAAO,OAAAC,EAAA,GAAa,CAClB/I,KAAM,CACJhE,MAAO,QAETgN,QAAS,CACP,sBAAuB,CACrBxE,MAdS,iBAgBX,8BAA+B,CAC7ByE,kBAhBQ,sBAkBV,2BAA4B,CAC1B,aAAcL,GACd,mBAAoBA,GACpB,yBAA0B7C,GAAQA,GAAQ,GAAI6C,IAAY,CACxD5O,YArBa,yBAyBnBkP,MAAO,CACLtI,QAAS,QAEXrC,MAAO,GACP4K,OAAQ,CACNC,UAAWN,EAAMO,QAAQ,GACzB9I,gBAAiB,QACjBvE,MAAO,QAETsN,eAAgB,CACd1I,QAAS,OACT2I,SAAU,OACVC,KAAM,EACN9I,WAAY,SACZxC,SAAU,UAEZuL,iBAAkB,CAChBC,QAASZ,EAAMO,QAAQ,EAAG,IAE5BM,YAAa,CACXxF,SAAU,IAEZvK,YAAa,CACXqG,SAAU,WACVK,KAAM,EACNF,OAAQ,EACR+D,SAAU,IAEZyF,MAAO,CACL3J,SAAU,WACVC,OAAQ,IACRI,KAAM,EACNH,MAAO,OAYb,SAAS0J,GAAeC,GACtB,IAAIC,EAAWD,EAAGC,SACdtQ,EA/ON,SAAgByM,EAAGgB,GACjB,IAAIjB,EAAI,GAER,IAAK,IAAIT,KAAKU,EACRjF,OAAO4E,UAAUJ,eAAeY,KAAKH,EAAGV,IAAM0B,EAAElE,QAAQwC,GAAK,IAAGS,EAAET,GAAKU,EAAEV,IAG/E,GAAS,MAALU,GAAqD,oBAAjCjF,OAAO+I,sBAA2C,KAAI5T,EAAI,EAAb,IAAgBoP,EAAIvE,OAAO+I,sBAAsB9D,GAAI9P,EAAIoP,EAAEnP,OAAQD,IAClI8Q,EAAElE,QAAQwC,EAAEpP,IAAM,GAAK6K,OAAO4E,UAAUoE,qBAAqB5D,KAAKH,EAAGV,EAAEpP,MAAK6P,EAAET,EAAEpP,IAAM8P,EAAEV,EAAEpP,KAEhG,OAAO6P,EAqOKiE,CAAOJ,EAAI,CAAC,aAExB,OAAO,IAAeK,cAAc,MAAOpE,GAAQ,CACjDqE,IAAKL,GACJtQ,IAmEL,IAAI4Q,GAAa,CACfC,QAjEF,SAAiB7Q,GACf,IAAI8Q,EAAW9Q,EAAM8Q,SACjBC,EAAa/Q,EAAM+Q,WACnBC,EAAWhR,EAAMgR,SACjBX,EAAKrQ,EAAMiR,YACX3J,EAAU+I,EAAG/I,QACb4J,EAAiBb,EAAGa,eACxB,OAAO,IAAeR,cAAcS,EAAA,EAAW7E,GAAQ,CACrD7L,UAAW6G,EAAQiI,QACnB6B,WAAY,CACVhB,eAAgBA,GAChBiB,WAAY/E,GAAQ,CAClB7L,UAAW6G,EAAQmI,MACnBkB,IAAKK,EACLF,SAAUA,GACTC,KAEJG,EAAgB,CACjBI,QAAS,WACTC,WAAW,MA+CbC,KATF,SAAcxR,GACZ,OAAO,IAAe0Q,cAAce,EAAA,EAAOnF,GAAQ,CACjDoF,QAAQ,EACRjR,UAAWT,EAAMiR,YAAY3J,QAAQ6I,OACpCnQ,EAAM+Q,YAAa/Q,EAAM8Q,WAM5Ba,OA5CF,SAAgB3R,GACd,OAAO,IAAe0Q,cAAckB,EAAA,EAAUtF,GAAQ,CACpDqE,IAAK3Q,EAAMgR,SACXa,SAAU7R,EAAM8R,UAChBC,UAAW,MACXnR,MAAO,CACL6J,WAAYzK,EAAMgS,WAAa,IAAM,MAEtChS,EAAM+Q,YAAa/Q,EAAM8Q,WAqC5BmB,iBApFF,SAA0BjS,GACxB,OAAO,IAAe0Q,cAAcwB,EAAA,EAAY5F,GAAQ,CACtDvB,MAAO,gBACPtK,UAAWT,EAAMiR,YAAY3J,QAAQ0I,kBACpChQ,EAAM+Q,YAAa/Q,EAAM8Q,WAiF5BqB,YAnCF,SAAqBnS,GACnB,IAAIiR,EAAcjR,EAAMiR,YACpBZ,EAAKrQ,EAAM+Q,WACXA,OAAoB,IAAPV,EAAgB,GAAKA,EAClCS,EAAW9Q,EAAM8Q,SACrB,OAAO,IAAeJ,cAAcwB,EAAA,EAAY5F,GAAQ,CACtDvB,MAAO,gBACPtK,UAAWwQ,EAAY3J,QAAQnH,aAC9B4Q,GAAaD,IA4BhBsB,YAzBF,SAAqBpS,GACnB,OAAO,IAAe0Q,cAAcwB,EAAA,EAAY5F,GAAQ,CACtD7L,UAAWT,EAAMiR,YAAY3J,QAAQ4I,aACpClQ,EAAM+Q,YAAa/Q,EAAM8Q,WAuB5BuB,eApBF,SAAwBrS,GACtB,OAAO,IAAe0Q,cAAc,MAAO,CACzCjQ,UAAWT,EAAMiR,YAAY3J,QAAQuI,gBACpC7P,EAAM8Q,YAoBP,GAAoB,SAA2B9Q,GACjD,IAAIsH,EAAUjB,KAEVgK,EAAK,IAAeiC,SAAS,MAC7BC,EAASlC,EAAG,GACZmC,EAAYnC,EAAG,GAUnB,OAAO,IAAeK,cAAc+B,EAAA,EAAa,CAC/ChS,UAAW6G,EAAQf,MAClB,IAAemK,cAAcwB,EAAA,EAAY,CAC1CzR,UAAW6G,EAAQxC,MACnBiG,MAAO,eACN/K,EAAM8E,OAAQ,IAAe4L,cAAcgC,EAAA,EAAO,KAAM,IAAehC,cAAc,IAAQ,CAC9FjQ,UAAW6G,EAAQoI,OACnBpI,QAASA,EACTqL,QAAS3S,EAAM2S,QACfzB,eAAgB,CACd7Q,MAAOL,EAAMK,OAEfF,YAAa,GACbyS,QAAS5S,EAAM6S,YACfjC,WAAYA,GACZxQ,MAAOmS,EACP1R,SAxBF,SAAsBiS,GACpBN,EAAUM,GAEN9S,EAAMa,UACRb,EAAMa,SAASiS,IAqBjBC,cAAc,EACdC,aAAa,OAIjB,GAAkBzL,aAAe,CAC/BlH,OAAO,GAET,IAAI4S,GAEJzL,OAAOC,OAAO,CACZyL,kBAAmB,KAKjBC,GAAc,CAChB5S,YAHgB,qBAIhB6O,aAAc,GAEZgE,GAAc,OAAA9M,EAAA,GAAW,SAAU+I,GACrC,MAAO,CACL9I,KAAM,CACJhE,MAAO,QAETuC,MAAO,GACPuO,UAAW,CACT,sBAAuB,CACrBtI,MAfW,iBAiBb,8BAA+B,CAC7ByE,kBAjBU,sBAmBZ,2BAA4B,CAC1B,aAAc2D,GACd,mBAAoBA,GACpB,yBAA0B7G,GAAQA,GAAQ,GAAI6G,IAAc,CAC1D5S,YAtBe,wBAyBnB,IAAK,CACHoP,UAAWN,EAAMO,QAAQ,GACzB9I,gBAAiB,QACjBvE,MAAO,YAMX,GAAqB,SAA4BvC,GACnD,IAAIsH,EAAU8L,KAEV/C,EAAK,mBAASrQ,EAAMI,OAAS,IAC7BkT,EAAejD,EAAG,GAClBkD,EAAkBlD,EAAG,GAUzB,OAAO,IAAeK,cAAc+B,EAAA,EAAa,CAC/ChS,UAAW6G,EAAQf,MAClB,IAAemK,cAAcwB,EAAA,EAAY,CAC1CzR,UAAW6G,EAAQxC,MACnBiG,MAAO,eACN/K,EAAM8E,OAAQ,IAAe4L,cAAc,IAAW,CACvD8C,GAAIxT,EAAMwT,GACV/S,UAAW6G,EAAQ+L,UACnBI,aAAcH,EACdzS,SAjBa,SAAkB6S,GAC/BH,EAAgBG,GAEZ1T,EAAMa,UACRb,EAAMa,SAAS6S,IAcjBrT,MAAOL,EAAMK,MACbiR,QAAS,eAIb,GAAmB/J,aAAe,CAChCzC,MAAO,GACP1E,MAAO,GACPC,OAAO,EACPsT,WAAW,EACXvP,KAAM,EACNvD,SAAU,SAAkB6S,GAC1B9R,QAAQC,IAAI6R,KAGhB,IAAIE,GAEJpM,OAAOC,OAAO,CACZoM,mBAAoB,KAKlBC,GAAc,CAChBvT,YAHgB,qBAIhB6O,aAAc,GAEZ2E,GAAe,CACjBxN,KAAM,CACJ,sBAAuB,CACrBwE,MAVa,iBAYf,8BAA+B,CAC7ByE,kBAZY,sBAcd,2BAA4B,CAC1B,aAAcsE,GACd,mBAAoBA,GACpB,yBAA0BxH,GAAQA,GAAQ,GAAIwH,IAAc,CAC1DvT,YAjBiB,0BAsBrByT,GAAc,OAAA1N,EAAA,GAAW,SAAU+I,GACrC,MAAO,CACL9I,KAAM,CACJY,QAAS,OACT2I,SAAU,QAEZmE,YAAa,CACX1R,MAAO,QAETuC,MAAO,CACL4F,SAAU,QAEZgF,OAAQ,CACNC,UAAWN,EAAMO,QAAQ,GACzB9I,gBAAiB,SAEnBoN,YAAa,CACXvE,UAAWN,EAAMO,QAAQ,IAE3B3J,KAAM,CACJkO,YAAa9E,EAAMO,QAAQ,KAC3B7E,MA5CY,yBAiDdqJ,GAAsB,OAAAC,EAAA,GAAWN,GAAX,CAAyBO,EAAA,GAE/C,GAAc,SAAqBtU,GACrC,IAAIyT,EAAe,CACjBD,IAAK,EACLpT,MAAO,GACP0E,MAAO,IAGLyP,EAAQ1F,GAAe,CAAC4E,GAAezT,EAAMmD,MAgB7CmE,EAAU0M,KAEV3D,EAAK,mBAhBa,WACpB,GAAIrQ,EAAMI,MAAO,CACf,IAAIoU,EAASD,EAAME,KAAK,SAAUC,GAChC,OAAOA,EAAKtU,QAAUJ,EAAMI,QAG9B,GAAIoU,EACF,OAAOA,EAIX,OAAOf,EAKSkB,IACdrB,EAAejD,EAAG,GAClBuE,EAAkBvE,EAAG,GAErBwE,EAAa,IAAeC,OAAO,MACnCC,EAAa,IAAezC,SAAS,GAAG,GA4B5C,OAAO,IAAe5B,cAAc,MAAO,CACzCjQ,UAAW6G,EAAQ2M,aAClBjU,EAAM8E,MAAQ,IAAe4L,cAAcsE,EAAA,EAAY,CACxDjK,MAAO,cACPtK,UAAW6G,EAAQxC,MACnB6L,IAAKkE,EACLI,QAASjV,EAAMwT,GACfnT,MAAOL,EAAMK,OACZL,EAAM8E,OAAS,KAAM,IAAe4L,cAAc,IAAU,CAC7DjQ,UAAW6G,EAAQoI,OACnBtP,MAAOkT,EAAalT,MACpBS,SAnCa,SAAkB4M,GAC/B,IAAIyH,EAAeX,EAAME,KAAK,SAAUC,GACtC,OAAOA,EAAKtU,QAAUqN,EAAEzM,OAAOZ,SAC3BqT,EACNmB,EAAgBM,GAEZlV,EAAMa,UACRb,EAAMa,SAASqU,IA6BjBzF,MAAO,IAAeiB,cAAc0D,GAAqB,CACvDZ,GAAIxT,EAAMwT,GACV2B,KAAMnV,EAAMwT,GACZnT,MAAOL,EAAMK,MACb0U,WAAYA,EACZxD,WAAW,IAEb6D,cAAe,WACb,OAAO,IAAe1E,cAAc,IAAmB,CACrDjQ,UAAW6G,EAAQrB,SAGtBsO,EAAMzS,IAAI,SAAU4S,GACrB,OAtCsB,SAA2B1U,EAAOqV,GACxD,GAAIrV,EAAMsV,kBACR,OAAOtV,EAAMsV,kBAAkBD,GAGjC,IAAI3U,GAA8B,IAAnB2U,EAAW7B,IAAaxT,EAAMuV,SAC7C,OAAO,IAAe7E,cAAckB,EAAA,EAAU,CAC5C4D,IAAKH,EAAW7B,GAChBpT,MAAOiV,EAAWjV,MAClBM,SAAUA,GACT2U,EAAWvQ,OA4BPwQ,CAAkBtV,EAAO0U,QAIpC,GAAYnN,aAAe,CACzBnH,MAAO,GACPC,OAAO,EACPkV,UAAU,EACV1U,SAAU,SAAkBT,GAC1BwB,QAAQC,IAAIzB,KAGhB,IAAIqV,GAEJjO,OAAOC,OAAO,CACZiO,YAAa,KAKXC,GAAc,CAChBpV,YAHgB,qBAIhB6O,aAAc,GAEZwG,GAAiB,CACnBrP,KAAM,CACJ,sBAAuB,CACrBwE,MAVa,iBAYf,8BAA+B,CAC7ByE,kBAZY,sBAcd,2BAA4B,CAC1B,aAAcmG,GACd,mBAAoBA,GACpB,yBAA0BrJ,GAAQA,GAAQ,GAAIqJ,IAAc,CAC1DpV,YAjBiB,yBAqBvBkP,MAAO,CACL/E,SAAU,KAUVmL,GAAc,OAAAvP,EAAA,GAAW,SAAU+I,GACrC,MAAO,CACL9I,KAAM,CACJY,QAAS,OACT2I,SAAU,QAEZmE,YAAa,CACX1R,MAAO,QAETuC,MAAO,CACL4F,SAAU,QAEZgF,OAAQ,CACNC,UAAWN,EAAMO,QAAQ,GACzB9I,gBAAiB,SAEnBoN,YAAa,CACXvE,UAAWN,EAAMO,QAAQ,IAE3B3J,KAAM,CACJkO,YAAa9E,EAAMO,QAAQ,KAC3B7E,MAtDY,sBAwDd1K,MAAO,CACL0K,MAAO,UACPL,SAAU,QAEZoL,UAAW,CACT/K,MAAO,UACPL,SAAU,QACVqL,MAAO,YAKTC,GAAwB,OAAA3B,EAAA,GAAWuB,GAAX,CAA2BtB,EAAA,GAEnD,GAAsB,SAA6BtU,GACrD,IAAIuU,EAAQ1F,GAAe7O,EAAMmD,MAE7BmE,EAAUuO,KACVhB,EAAa,IAAeC,OAAO,MACnCC,EAAa,IAAezC,SAAS,GAAG,GA2B5C,OAAO,IAAe5B,cAAc,MAAO,CACzCjQ,UAAW6G,EAAQ2M,aAClB,IAAevD,cAAcsE,EAAA,EAAY,CAC1CjK,MAAO,cACPtK,UAAW6G,EAAQxC,MACnB6L,IAAKkE,EACLI,QAASjV,EAAMwT,IACdxT,EAAM8E,OAAQ,IAAe4L,cAAc,IAAU,CACtDjQ,UAAW6G,EAAQoI,OACnBtP,MAAOJ,EAAMI,MACbS,SAjCa,SAAkB4M,GAC/B,IAAIyH,EAAeX,EAAME,KAAK,SAAUC,GACtC,OAAOA,EAAKtU,QAAUqN,EAAEzM,OAAOZ,QAG7BJ,EAAMa,UACRb,EAAMa,SAASqU,IA4BjBxU,SAAUV,EAAMU,SAChB+O,MAAO,IAAeiB,cAAcsF,GAAuB,CACzDxC,GAAIxT,EAAMwT,GACV2B,KAAMnV,EAAMwT,GACZnT,MAAOL,EAAMK,MACb0U,WAAYA,EACZxD,WAAW,EACX7Q,SAAUV,EAAMU,WAElB0U,cAAe,WACb,OAAO,IAAe1E,cAAc,IAAmB,CACrDjQ,UAAW6G,EAAQrB,SAGtBsO,EAAMzS,IAAI,SAAU4S,GACrB,OAvCsB,SAA2B1U,EAAOqV,GACxD,GAAIrV,EAAMsV,kBACR,OAAOtV,EAAMsV,kBAAkBD,GAGjC,IAAI3U,GAA8B,IAAnB2U,EAAW7B,IAAaxT,EAAMuV,SAC7C,OAAO,IAAe7E,cAAckB,EAAA,EAAU,CAC5C4D,IAAKH,EAAW7B,GAChBpT,MAAOiV,EAAWjV,MAClBM,SAAUA,GACT2U,EAAWvQ,OA6BPwQ,CAAkBtV,EAAO0U,MAC7B1U,EAAMK,OAAS,IAAeqQ,cAAc,MAAO,CACtDjQ,UAAW6G,EAAQ2M,aAClB,IAAevD,cAAcuF,EAAA,EAAgB,CAC9CzC,GAAI,uBACJ/S,UAAW6G,EAAQjH,OAClBL,EAAMkW,aAAc,IAAexF,cAAc,IAAW,CAC7DjQ,UAAW6G,EAAQwO,gBAIvB,GAAoBvO,aAAe,CACjCzC,MAAO,GACP1E,MAAO,GACPC,OAAO,EACP6V,aAAc,GACdX,UAAU,EACV7U,UAAU,EACVG,SAAU,SAAkBT,GAC1BwB,QAAQC,IAAIzB,KAGhB,IAAI+V,GAEJ3O,OAAOC,OAAO,CACZ2O,oBAAqB,KAEnBC,GAAc,OAAA/P,EAAA,GAAW,SAAU+I,GACrC,MAAO,CACL9I,KAAM,CACJhE,MAAO,QAETuC,MAAO,CACL4F,SAAU,QAEZ2I,UAAW,CACT1D,UAAWN,EAAMO,QAAQ,GACzB9I,gBAAiB,QACjB4D,SAAU,QAEZrK,MAAO,CACL0K,MAAO,UACPL,SAAU,QAEZoL,UAAW,CACT/K,MAAO,UACPL,SAAU,QACVqL,MAAO,YAOTO,GAAc,CAChB/V,YAHgB,qBAIhB6O,aAAc,GAEZmH,GAAkB,OAAAlC,EAAA,GAAW,CAC/B9N,KAAM,CACJ,sBAAuB,CACrBwE,MAVa,iBAYf,8BAA+B,CAC7ByE,kBAZY,sBAcd,2BAA4B,CAC1B,aAAc8G,GACd,mBAAoBA,GACpB,yBAA0BhK,GAAQA,GAAQ,GAAIgK,IAAc,CAC1D/V,YAjBiB,0BAKH,CAgBnB4Q,EAAA,GAEC,GAAiB,SAAwBnR,GAC3C,IAAIsH,EAAU+O,KAUd,OAAO,IAAe3F,cAAc,MAAO,CACzCjQ,UAAW6G,EAAQf,MAClBvG,EAAM8E,MAAQ,IAAe4L,cAAcsE,EAAA,EAAY,CACxDC,QAASjV,EAAMwT,GACf/S,UAAW6G,EAAQxC,MACnBiG,MAAO,eACN/K,EAAM8E,OAAS,KAAM,IAAe4L,cAAc6F,GAAiB,CACpE/C,GAAIxT,EAAMwT,GACV/S,UAAW6G,EAAQ+L,UACnBjT,MAAOJ,EAAMI,MACbS,SAlBa,SAAkB4M,GAC/B,IAAIrN,EAAQqN,EAAEzM,OAAOZ,MAEjBJ,EAAMa,UACRb,EAAMa,SAAST,IAejBC,MAAOL,EAAMK,MACbsT,UAAW3T,EAAM2T,UACjBvP,KAAMpE,EAAMoE,KACZzD,KAAMX,EAAMW,KACZ4Q,WAAW,EACX7Q,SAAUV,EAAMU,SAChB4Q,QAAS,aACPtR,EAAMK,OAAS,IAAeqQ,cAAc,MAAO,CACrDjQ,UAAW6G,EAAQf,MAClB,IAAemK,cAAcuF,EAAA,EAAgB,CAC9CzC,GAAI,uBACJ/S,UAAW6G,EAAQjH,OAClBL,EAAMkW,aAAc,IAAexF,cAAc,IAAW,CAC7DjQ,UAAW6G,EAAQwO,gBAIvB,GAAevO,aAAe,CAC5B5G,KAAM,OACNP,MAAO,GACPC,OAAO,EACP6V,aAAc,GACdvC,WAAW,EACXjT,UAAU,EACV0D,KAAM,EACNvD,SAAU,SAAkBT,GAC1BwB,QAAQC,IAAI,wCAA0CzB,KAG1D,IAAIoW,GAEJhP,OAAOC,OAAO,CACZgP,eAAgB,KAGdC,GAAc,OAAApQ,EAAA,GAAW,SAAU+I,GACrC,MAAO,CACL9I,KAAM,CACJuJ,SAAU,QAEZ6G,YAAa,CACXC,aAAcvH,EAAMO,QAAQ,IAE9BiH,OAAQ,CACNC,MAAO,SACPC,QAAS,SACTxU,MAAO,QAETyU,cAAe,CACb1U,WAAY,OAEdyE,UAAW,CACTkQ,aAAc,OACdC,YAAa,QAEfC,YAAa,CACXxH,UAAWN,EAAMO,QAAQ,IAE3BwH,mBAAoB,GACpBC,kBAAmB,GACnBC,iBAAkB,GAClBjE,UAAW,GACXkE,SAAU,CACRL,YAAa,QAEfM,aAAc,CACZZ,aAAcvH,EAAMO,QAAQ,GAC5BD,UAAWN,EAAMO,QAAQ,GACzB1I,eAAgB,UAElBuQ,oBAAqB,CACnBb,aAAcvH,EAAMO,QAAQ,GAC5BD,UAAWN,EAAMO,QAAQ,GACzB1I,eAAgB,UAElBwQ,WAAY,CACVnV,MAAO,IACPoV,WAAY,GACZxD,YAAa,IAEfyD,YAAa,CACXrV,MAAO,IACPoV,WAAY,GACZxD,YAAa,OAIf0D,GAAiB,OAAAxD,EAAA,GAAW,CAC9B9N,KAAM,CACJwE,MAAO,UACP,YAAa,CACXA,MAAO,YAGX+M,QAAS,IAPU,CAQlBC,EAAA,GAEC,GAAc,SAAqB/X,GACrC,IAAIsH,EAAUoP,KAEVrG,EAAK,IAAeiC,SAAS,CAC/B0F,MAAO,GACPC,YAAY,EACZC,YAAY,IAEV7W,EAAQgP,EAAG,GACXpO,EAAWoO,EAAG,GAEd8H,EAAK,oBAAS,GACdzX,EAAWyX,EAAG,GACdC,EAAcD,EAAG,GAGjBE,EAAc,WAChBD,GAAY,GACZnW,EAAS,CACP+V,MAAO,GACPC,YAAY,EACZC,YAAY,IAEdlY,EAAMsY,WAIJC,EAAgB,SAAuBC,EAAWpY,GACpD6B,EAAS,SAAUZ,GACjB,IAAIgP,EAEJ,OAAO/D,GAAQA,GAAQ,GAAIjL,KAASgP,EAAK,IAAOmI,GAAapY,EAAOiQ,OAIpEoI,EAAgB,SAAuBD,EAAWnY,GACpD4B,EAAS,SAAUZ,GACjB,IAAIgP,EAEJ,OAAO/D,GAAQA,GAAQ,GAAIjL,KAASgP,EAAK,IAAOmI,GAAanY,EAAOgQ,OAiBpE0B,EAAY,IAAerB,cAAc,MAAO,MAEpD,OAAQ1Q,EAAMW,KAAKlE,eACjB,IAAK,UACHmF,QAAQC,IAAI,cACZkQ,EAAY,IAAerB,cAAc,MAAO,KAAM,IAAeA,cAAcgI,EAAA,EAAM,CACvF3R,WAAW,EACXtG,UAAW6G,EAAQP,UACnBgQ,QAAS,aACT9P,WAAY,aACZ0R,UAAW,UACV,IAAejI,cAAcgI,EAAA,EAAM,CACpChE,MAAM,EACNkE,IAAI,GACH,IAAelI,cAAcmI,EAAA,EAAa,CAC3CC,mBAAmB,EACnBtF,GAAI,eACJ/S,UAAW6G,EAAQ6P,aAClBnX,EAAMW,KAAM,YAAa,IAAe+P,cAAcgI,EAAA,EAAM,CAC7DhE,MAAM,EACNkE,IAAI,GACH,IAAelI,cAAcqI,EAAA,EAAe,CAC7CtY,UAAW6G,EAAQ0P,eAClB,IAAetG,cAAcsI,EAAA,EAAmB,CACjDvY,UAAW6G,EAAQ+P,kBACnB7D,GAAI,4BACH,+BAAgC,IAAe9C,cAAc,GAAgB,CAC9EtQ,MAAOiB,EAAM2W,MACb3X,MAAOgB,EAAM4W,WACbtE,WAAW,EACXvP,KAAM,EACNvD,SAAU,SAAkBT,GAC1BmY,EAAc,QAASnY,GACvBqY,EAAc,aAA+B,IAAjBrY,EAAMxD,YAEjC,IAAe8T,cAAcgI,EAAA,EAAM,CACtChE,MAAM,EACNkE,IAAI,GACH,IAAelI,cAAcqI,EAAA,EAAe,CAC7CtY,UAAW6G,EAAQ0P,eAClB,IAAetG,cAAcuI,EAAA,EAAkB,CAChDxY,UAAW6G,EAAQgQ,iBACnB/H,QAAS,IAAemB,cAAcmH,GAAgB,CACpD5R,KAAM,IAAeyK,cAAc,IAAiB,CAClDzK,KAAM,MAERiT,YAAa,IAAexI,cAAc,IAAiB,CACzDzK,KAAM,MAER8E,MAAO,UACP+M,QAASzW,EAAM6W,WACfrX,SAAU,SAAkBT,GAC1BmY,EAAc,aAAcnY,EAAMY,OAAO8W,SACzCM,GAAahY,EAAMY,OAAO8W,UAE5BzG,WAAY,CACV,aAAc,sBAGlBvM,MAAO,mBACPqU,eAAgB,UACZ,IAAezI,cAAc0I,EAAA,EAAe,CAChD3Y,UAAW6G,EAAQmQ,qBAClB,IAAe/G,cAAc2I,EAAA,EAAQ,CACtC5Y,UAAW6G,EAAQoQ,WACnBpG,QAAS,YACTtL,QAASqS,EACTtN,MAAO,aACN,UAAW,IAAe2F,cAAc2I,EAAA,EAAQ,CACjD5Y,UAAW6G,EAAQsQ,YACnBtG,QAAS,YACT5Q,SAAUA,EACVsF,QAAShG,EAAMsZ,SACfvO,MAAO,WACN,eACH,MAEF,IAAK,SACHnJ,QAAQC,IAAI,aACZkQ,EAAY,IAAerB,cAAc,MAAO,KAAM,IAAeA,cAAcgI,EAAA,EAAM,CACvF3R,WAAW,EACXtG,UAAW6G,EAAQP,UACnBgQ,QAAS,aACT9P,WAAY,aACZ0R,UAAW,UACV,IAAejI,cAAcgI,EAAA,EAAM,CACpChE,MAAM,EACNkE,IAAI,GACH,IAAelI,cAAcmI,EAAA,EAAa,CAC3CC,mBAAmB,EACnBtF,GAAI,eACJ/S,UAAW6G,EAAQ6P,aAClBnX,EAAMW,KAAM,YAAa,IAAe+P,cAAcgI,EAAA,EAAM,CAC7DhE,MAAM,EACNkE,IAAI,GACH,IAAelI,cAAcqI,EAAA,EAAe,CAC7CtY,UAAW6G,EAAQ0P,eAClB,IAAetG,cAAc,GAAa,CAC3C8C,GAAI,qBACJ1O,MAAO,YACP3B,KAAMnD,EAAMuZ,cACV,IAAe7I,cAAcsI,EAAA,EAAmB,MAAO,IAAetI,cAAc,GAAgB,CACtG5L,MAAO,QACP1E,MAAOiB,EAAM2W,MACb3X,MAAOgB,EAAM4W,WACbtE,WAAW,EACXvP,KAAM,EACNvD,SAAU,SAAkBT,GAC1BmY,EAAc,QAASnY,GACvBqY,EAAc,aAA+B,IAAjBrY,EAAMxD,YAEjC,IAAe8T,cAAc0I,EAAA,EAAe,CAC/C3Y,UAAW6G,EAAQkQ,cAClB,IAAe9G,cAAc2I,EAAA,EAAQ,CACtC5Y,UAAW6G,EAAQoQ,WACnBpG,QAAS,YACTtL,QAASqS,EACTtN,MAAO,aACN,UAAW,IAAe2F,cAAc2I,EAAA,EAAQ,CACjD5Y,UAAW6G,EAAQsQ,YACnBtG,QAAS,YACTtL,QAAShG,EAAMsZ,SACfvO,MAAO,WACN,cACH,MAEF,IAAK,WACHnJ,QAAQC,IAAI,eACZkQ,EAAY,IAAerB,cAAc,MAAO,KAAM,IAAeA,cAAcgI,EAAA,EAAM,CACvF3R,WAAW,EACXtG,UAAW6G,EAAQP,UACnBgQ,QAAS,aACT9P,WAAY,aACZ0R,UAAW,UACV,IAAejI,cAAcgI,EAAA,EAAM,CACpChE,MAAM,EACNkE,IAAI,GACH,IAAelI,cAAcmI,EAAA,EAAa,CAC3CC,mBAAmB,EACnBtF,GAAI,eACJ/S,UAAW6G,EAAQ6P,aAClBnX,EAAMW,KAAM,YAAa,IAAe+P,cAAcgI,EAAA,EAAM,CAC7DhE,MAAM,EACNkE,IAAI,GACH,IAAelI,cAAcqI,EAAA,EAAe,CAC7CtY,UAAW6G,EAAQ0P,eAClB,IAAetG,cAAc,GAAa,CAC3C8C,GAAI,qBACJ1O,MAAO,cACP3B,KAAMnD,EAAMuZ,cACV,IAAe7I,cAAcsI,EAAA,EAAmB,MAAO,IAAetI,cAAc,GAAgB,CACtG5L,MAAO,QACP1E,MAAOiB,EAAM2W,MACb3X,MAAOgB,EAAM4W,WACbtE,WAAW,EACXvP,KAAM,EACNvD,SAAU,SAAkBT,GAC1BmY,EAAc,QAASnY,GACvBqY,EAAc,aAA+B,IAAjBrY,EAAMxD,YAEjC,IAAe8T,cAAc0I,EAAA,EAAe,CAC/C3Y,UAAW6G,EAAQkQ,cAClB,IAAe9G,cAAc2I,EAAA,EAAQ,CACtC5Y,UAAW6G,EAAQoQ,WACnBpG,QAAS,YACTtL,QAASqS,EACTtN,MAAO,aACN,UAAW,IAAe2F,cAAc2I,EAAA,EAAQ,CACjD5Y,UAAW6G,EAAQsQ,YACnBtG,QAAS,YACTtL,QAAShG,EAAMsZ,SACfvO,MAAO,WACN,gBAIP,OAAO,IAAe2F,cAAc8I,EAAA,EAAQ,CAC1C/Y,UAAW6G,EAAQuP,OACnB4C,KAAMzZ,EAAM0Z,YACZ,kBAAmB,uBAClB3H,IAIL,GAAYxK,aAAe,CACzBmS,aAAa,EACb/Y,KAAM,UACN4Y,YAAa,CAAC,CACZ,GAAM,EACN,MAAS,GACT,MAAS,MAGb,IAAII,GAEJnS,OAAOC,OAAO,CACZmS,YAAa,KAEXC,GACO,qBADPA,GAEW,yBAFXA,GAGY,0BAKZ,GAEJ,SAAUC,GAGR,SAASC,IACP,OAAkB,OAAXD,GAAmBA,EAAOjN,MAAM3M,KAAMyM,YAAczM,KAc7D,OAjBA+L,GAAU8N,EAAqBD,GAM/BC,EAAoB3N,UAAU4N,OAAS,WACrC,IAAItc,EAAOwC,KAAKF,MAAMtC,KACtB,OAAO,IAAegT,cAAc,MAAO,CACzCjQ,UAAWoZ,IACV,IAAenJ,cAAc,OAAQ,CACtCjQ,UAAWoZ,IACVnc,GAAO,IAAegT,cAAc,OAAQ,CAC7CjQ,UAAWoZ,IACVnc,KAGEqc,EAlBT,CAmBE,IAAeE,WAEbC,GAEJ1S,OAAOC,OAAO,CACZsS,oBAAqB,KAEnBI,GAAc,OAAA7T,EAAA,GAAW,SAAU+I,GACrC,IAAIgB,EAAI8H,EAER,MAAO,CACLiC,QAAS/J,EAAK,CACZvJ,gBAAiB,UACjBiE,MAAO,WACNsF,EAAGhB,EAAMgL,YAAYC,GAAG,OAAS,CAClC/X,MAAO,qBACN8N,GACHkK,YAAapC,EAAK,CAChBhE,YAAa9E,EAAMO,QAAQ,IAC1BuI,EAAG9I,EAAMgL,YAAYC,GAAG,OAAS,CAClCnT,QAAS,QACRgR,GACHqC,KAAM,CACJhY,OAAQ,QAEViY,MAAO,CACL3T,gBAAiB,UACjBiE,MAAO,UACPN,WAAY,KAEdiQ,KAAM,CACJC,SAAU,MAKZ,GAAY,SAAmB3a,GACjC,IAAIsH,EAAU6S,KAmBd,OAAO,IAAezJ,cAAckK,EAAA,EAAQ,CAC1Cna,UAAW6G,EAAQ8S,QAClB,IAAe1J,cAAcmK,EAAA,EAAS,KAAM,IAAenK,cAAc3K,EAAA,EAAY,CACtF+U,KAAM,QACNra,UAAW6G,EAAQiT,WACnBvU,QAtBsB,WAClBhG,EAAM+a,aACR/a,EAAM+a,gBAqBP,IAAerK,cAAc,IAAU,OAAQ,IAAeA,cAAcsK,EAAA,EAAM,CACnF9R,KAAM,KACL,IAAewH,cAAc,MAAO,CACrCjO,IAAKzC,EAAMib,UACXxa,UAAW6G,EAAQkT,KACnBU,IAAK,UACF,IAAexK,cAAc,MAAO,CACvCjQ,UAAW6G,EAAQoT,OACjB,IAAehK,cAAc3K,EAAA,EAAY,CAC3C+U,KAAM,MACN9U,QAtBsB,WAClBhG,EAAMmb,aACRnb,EAAMmb,gBAqBP,IAAezK,cAAc0K,EAAA,EAAQ,CACtC3Y,IAAKzC,EAAMqb,UACXH,IAAK,eAIT,GAAU3T,aAAe,CACvB+T,WAAY,GAEd,GAAUC,UAAY,CACpBD,WAAY,IAAUE,QAExB,IAAIC,GAAc,OAAAnV,EAAA,GAAW,WAC3B,MAAO,CACLoV,QAAS,CACPnZ,MAAO,QAEToZ,SAAU,CACRvU,cAAe,SACfwP,aAAc,QAEhBgF,aAAc,CACZC,SAAU,GAEZC,OAAQ,CACNhV,gBAAiB,6BAEnBiV,eAAgB,CACdjV,gBAAiB,4BAEnBkV,aAAc,CACZtR,SAAU,EACVK,MAAO,WAETkR,qBAAsB,CACpBvR,SAAU,EACVK,MAAO,yBAET9E,KAAM,CACJ8E,MAAO,SAETmR,aAAc,CACZnR,MAAO,yBAEToR,QAAS,CACPrV,gBAAiB,cACjBtE,OAAQ,WAKd,SAAS4Z,GAAapc,GACpB,OAAO,IAAe0Q,cAAc,IAAQ,CAC1C/K,GAAI3F,EAAMqc,KAAOrc,EAAMqc,KAAO,GAC9Bzb,MAAO,CACL0b,eAAgB,SAEjB,IAAK,IAAe5L,cAAc6L,GAAA,EAAUjQ,GAAQ,GAAItM,IAAS,KAGtE,IAAI,GAAa,SAAoBA,GACnC,IAAIsH,EAAUmU,KAGVe,EAAkB,CACpBC,WAAW,EACXC,eAAe,EACfC,SAAS,EACTC,WAAW,EACXC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,WAAW,EACXC,MAAM,GAERT,EAZexc,EAAMkd,aAAeld,EAAMkd,aAAe,cAY7B,EAgD5B,IAAIC,EAAyB,SAAgCrc,EAAOsc,GAClExb,QAAQC,IAAI,+BAAgCf,GAC5Cc,QAAQC,IAAI,8BAA+Bub,IA6CzCC,EAAqB,SAA4BzZ,GAC/C5D,EAAMsd,iBACRtd,EAAMsd,gBAAgB1Z,IAK1B,OAAO,IAAe8M,cAAc,MAAO,CACzCjQ,UAAW6G,EAAQoU,SAClB,IAAehL,cAAc6M,GAAA,EAAM,KAAM,IAAe7M,cAAc0L,GAAc,CACrF3b,UAAW6G,EAAQqU,SACnBU,KAAqB,eAAfrc,EAAM4D,KAAwB,eAAgC,kBAAf5D,EAAM4D,KAA2B,kBAAoB,iBAC1GoC,QAAS,WACPqX,EAAmB,eAEpB,IAAe3M,cAAc8M,GAAA,EAAc,CAC5C/c,UAAW6G,EAAQsU,cAClB,IAAelL,cAAc0K,EAAA,EAAQ,CACtC3a,UAAW6G,EAAQwU,QAClB,IAAepL,cAAc,IAAiB,CAC/CzK,KAAM,IACNxF,UAAW+b,EAAgBC,UAAYnV,EAAQ4U,aAAe5U,EAAQrB,SAClE,IAAeyK,cAAc+M,GAAA,EAAc,CAC/CvT,QAAS,YACT4O,mBAAmB,EACnBrY,UAAW+b,EAAgBC,UAAYnV,EAAQ2U,qBAAuB3U,EAAQ0U,gBAC5D,kBAAfhc,EAAM4D,KAA2B,IAAe8M,cAAc0L,GAAc,CAC/E3b,UAAW6G,EAAQqU,SACnBU,KAAM,+BACNrW,QAAS,WACPqX,EAAmB,mBAEpB,IAAe3M,cAAc8M,GAAA,EAAc,CAC5C/c,UAAW6G,EAAQsU,cAClB,IAAelL,cAAc0K,EAAA,EAAQ,CACtC3a,UAAW6G,EAAQwU,QAClB,IAAepL,cAAc,IAAiB,CAC/CzK,KAAM,IACNxF,UAAW+b,EAAgBE,cAAgBpV,EAAQ4U,aAAe5U,EAAQrB,SACtE,IAAeyK,cAAc+M,GAAA,EAAc,CAC/CvT,QAAS,aACT4O,mBAAmB,EACnBrY,UAAW+b,EAAgBE,cAAgBpV,EAAQ2U,qBAAuB3U,EAAQ0U,gBAC9E,KAAqB,kBAAfhc,EAAM4D,KAA2B,IAAe8M,cAAc0L,GAAc,CACtF3b,UAAW6G,EAAQqU,SACnBU,KAAqB,iBAAfrc,EAAM4D,KAA0B,wBAA0B,GAChEoC,QAAS,WACPqX,EAAmB,aAEpB,IAAe3M,cAAc8M,GAAA,EAAc,CAC5C/c,UAAW6G,EAAQsU,cAClB,IAAelL,cAAc0K,EAAA,EAAQ,CACtC3a,UAAW6G,EAAQwU,QAClB,IAAepL,cAAc,IAAiB,CAC/CzK,KAAM,IACNxF,UAAW+b,EAAgBK,QAAUvV,EAAQ4U,aAAe5U,EAAQrB,SAChE,IAAeyK,cAAc+M,GAAA,EAAc,CAC/CvT,QAAS,UACT4O,mBAAmB,EACnBrY,UAAW+b,EAAgBK,QAAUvV,EAAQ2U,qBAAuB3U,EAAQ0U,gBACxE,KAAqB,kBAAfhc,EAAM4D,KAA2B,IAAe8M,cAAc0L,GAAc,CACtF3b,UAAW6G,EAAQqU,SACnBU,KAAqB,iBAAfrc,EAAM4D,KAA0B,0BAA4B,GAClEoC,QAAS,WACPqX,EAAmB,eAEpB,IAAe3M,cAAc8M,GAAA,EAAc,CAC5C/c,UAAW6G,EAAQsU,cAClB,IAAelL,cAAc0K,EAAA,EAAQ,CACtC3a,UAAW6G,EAAQwU,QAClB,IAAepL,cAAc,IAAiB,CAC/CzK,KAAM,IACNxF,UAAW+b,EAAgBI,UAAYtV,EAAQ4U,aAAe5U,EAAQrB,SAClE,IAAeyK,cAAc+M,GAAA,EAAc,CAC/CvT,QAAS,YACT4O,mBAAmB,EACnBrY,UAAW+b,EAAgBI,UAAYtV,EAAQ2U,qBAAuB3U,EAAQ0U,gBAC1E,KAAqB,eAAfhc,EAAM4D,KAAwB,IAAe8M,cAAc0L,GAAc,CACnF3b,UAAW6G,EAAQqU,SACnBU,KAAM,sBACNrW,QAAS,WACPqX,EAAmB,aAEpB,IAAe3M,cAAc8M,GAAA,EAAc,CAC5C/c,UAAW6G,EAAQsU,cAClB,IAAelL,cAAc0K,EAAA,EAAQ,CACtC3a,UAAW6G,EAAQwU,QAClB,IAAepL,cAAc,IAAiB,CAC/CzK,KAAM,IACNxF,UAAW+b,EAAgBG,QAAUrV,EAAQ4U,aAAe5U,EAAQrB,SAChE,IAAeyK,cAAc+M,GAAA,EAAc,CAC/CvT,QAAS,UACT4O,mBAAmB,EACnBrY,UAAW+b,EAAgBG,QAAUrV,EAAQ2U,qBAAuB3U,EAAQ0U,gBACxE,KAAqB,kBAAfhc,EAAM4D,KAA2B,IAAe8M,cAAc0L,GAAc,CACtF3b,UAAW6G,EAAQqU,SAEnB3V,QAAS,WACPqX,EAAmB,WACnBvV,OAAOC,SAAStK,QAAQ,wCAEzB,IAAeiT,cAAc8M,GAAA,EAAc,CAC5C/c,UAAW6G,EAAQsU,cAClB,IAAelL,cAAc0K,EAAA,EAAQ,CACtC3a,UAAW6G,EAAQwU,QAClB,IAAepL,cAAc,IAAiB,CAC/CzK,KAAM,IACNxF,UAAW+b,EAAgBG,QAAUrV,EAAQ4U,aAAe5U,EAAQrB,SAChE,IAAeyK,cAAc+M,GAAA,EAAc,CAC/CvT,QAAS,UACT4O,mBAAmB,EACnBrY,UAAW+b,EAAgBG,QAAUrV,EAAQ2U,qBAAuB3U,EAAQ0U,gBACxE,KAAqB,kBAAfhc,EAAM4D,KAA2B,IAAe8M,cAAc0L,GAAc,CACtF3b,UAAW6G,EAAQqU,SACnBU,KAAM,yBACNrW,QAAS,WACPqX,EAAmB,aAEpB,IAAe3M,cAAc8M,GAAA,EAAc,CAC5C/c,UAAW6G,EAAQsU,cAClB,IAAelL,cAAc0K,EAAA,EAAQ,CACtC3a,UAAW6G,EAAQwU,QAClB,IAAepL,cAAc,IAAiB,CAC/CzK,KAAM,IACNxF,UAAW+b,EAAgBM,QAAUxV,EAAQ4U,aAAe5U,EAAQrB,SAChE,IAAeyK,cAAc+M,GAAA,EAAc,CAC/CvT,QAAS,UACT4O,mBAAmB,EACnBrY,UAAW6G,EAAQ0U,gBACf,KAAqB,kBAAfhc,EAAM4D,KAA2B,IAAe8M,cAAc6L,GAAA,EAAU,CAClF/R,QAAQ,EACR/J,UAAW6G,EAAQqU,SACnB3V,QAAS,SAAiByH,GACxB,OAAO0P,EAAuB1P,EAAG,aAElC,IAAeiD,cAAc8M,GAAA,EAAc,CAC5C/c,UAAW6G,EAAQsU,cAClB,IAAelL,cAAc0K,EAAA,EAAQ,CACtC3a,UAAW6G,EAAQwU,QAClB,IAAepL,cAAc,IAAiB,CAC/CzK,KAAM,IACNxF,UAAW+b,EAAgBM,QAAUxV,EAAQ4U,aAAe5U,EAAQrB,SAChE,IAAeyK,cAAc+M,GAAA,EAAc,CAC/CvT,QAAS,UACT4O,mBAAmB,EACnBrY,UAAW+b,EAAgBM,QAAUxV,EAAQ2U,qBAAuB3U,EAAQ0U,gBACxE,KAAqB,kBAAfhc,EAAM4D,KAA2B,IAAe8M,cAAc6L,GAAA,EAAU,CAClF/R,QAAQ,EACR/J,UAAW6G,EAAQqU,SACnB3V,QAAS,SAAiByH,GACxB,OAAO0P,EAAuB1P,EAAG,aAElC,IAAeiD,cAAc8M,GAAA,EAAc,CAC5C/c,UAAW6G,EAAQsU,cAClB,IAAelL,cAAc0K,EAAA,EAAQ,CACtC3a,UAAW6G,EAAQwU,QAClB,IAAepL,cAAc,IAAiB,CAC/CzK,KAAM,IACNxF,UAAW+b,EAAgBO,QAAUzV,EAAQ4U,aAAe5U,EAAQrB,SAChE,IAAeyK,cAAc+M,GAAA,EAAc,CAC/CvT,QAAS,UACT4O,mBAAmB,EACnBrY,UAAW+b,EAAgBO,QAAUzV,EAAQ2U,qBAAuB3U,EAAQ0U,gBACxE,KAAqB,iBAAfhc,EAAM4D,KAA0B,IAAe8M,cAAc6L,GAAA,EAAU,CACjF/R,QAAQ,EACR/J,UAAW6G,EAAQqU,SACnB3V,QAAS,SAAiByH,GACxB,OAAO0P,EAAuB1P,EAAG,eAElC,IAAeiD,cAAc8M,GAAA,EAAc,CAC5C/c,UAAW6G,EAAQsU,cAClB,IAAelL,cAAc0K,EAAA,EAAQ,CACtC3a,UAAW6G,EAAQwU,QAClB,IAAepL,cAAc,IAAiB,CAC/CzK,KAAM,IACNxF,UAAW+b,EAAgBQ,UAAY1V,EAAQ4U,aAAe5U,EAAQrB,SAClE,IAAeyK,cAAc+M,GAAA,EAAc,CAC/CvT,QAAS,YACT4O,mBAAmB,EACnBrY,UAAW+b,EAAgBQ,UAAY1V,EAAQ2U,qBAAuB3U,EAAQ0U,gBAC1E,KAAqB,eAAfhc,EAAM4D,KAAwB,IAAe8M,cAAc6L,GAAA,EAAU,CAC/E/R,QAAQ,EACR/J,UAAW6G,EAAQqU,SACnB3V,QAAS,SAAiByH,GACxB,OAAO0P,EAAuB1P,EAAG,WAElC,IAAeiD,cAAc8M,GAAA,EAAc,CAC5C/c,UAAW6G,EAAQsU,cAClB,IAAelL,cAAc0K,EAAA,EAAQ,CACtC3a,UAAW6G,EAAQwU,QAClB,IAAepL,cAAc,IAAiB,CAC/CzK,KAAM,IACNxF,UAAW6G,EAAQrB,SACf,IAAeyK,cAAc+M,GAAA,EAAc,CAC/CvT,QAAS,QACT4O,mBAAmB,EACnBrY,UAAW6G,EAAQ0U,gBACf,KAAqB,eAAfhc,EAAM4D,KAAwB,IAAe8M,cAAc6L,GAAA,EAAU,CAC/E/R,QAAQ,EACR/J,UAAW6G,EAAQqU,SACnB3V,QAAS,SAAiByH,GACxB,OAAO0P,EAAuB1P,EAAG,cAElC,IAAeiD,cAAc8M,GAAA,EAAc,CAC5C/c,UAAW6G,EAAQsU,cAClB,IAAelL,cAAc0K,EAAA,EAAQ,CACtC3a,UAAW6G,EAAQwU,QAClB,IAAepL,cAAc,IAAiB,CAC/CzK,KAAM,IACNxF,UAAW6G,EAAQrB,SACf,IAAeyK,cAAc+M,GAAA,EAAc,CAC/CvT,QAAS,WACT4O,mBAAmB,EACnBrY,UAAW6G,EAAQ0U,gBACf,KAAM,IAAetL,cAAcgN,GAAA,EAAS,CAChDjd,UAAW6G,EAAQ6U,UACjB,IAAezL,cAAc6L,GAAA,EAAU,CACzC/R,QAAQ,EACR/J,UAAW6G,EAAQqU,SACnB3V,QAAS,SAAiByH,GACxB,OAAO0P,EAAuB1P,EAAG,UAElC,IAAeiD,cAAc8M,GAAA,EAAc,CAC5C/c,UAAW6G,EAAQsU,cAClB,IAAelL,cAAc0K,EAAA,EAAQ,CACtC3a,UAAW6G,EAAQwU,QAClB,IAAepL,cAAc,IAAiB,CAC/CzK,KAAM,IACNxF,UAAW+b,EAAgBS,KAAO3V,EAAQ4U,aAAe5U,EAAQrB,SAC7D,IAAeyK,cAAc+M,GAAA,EAAc,CAC/CvT,QAAS,OACT4O,mBAAmB,EACnBrY,UAAW+b,EAAgBS,KAAO3V,EAAQ2U,qBAAuB3U,EAAQ0U,mBAIzE2B,GAAc,OAAArX,EAAA,GAAW,SAAU+I,GACrC,IAAIgB,EAEJ,MAAO,CACL9J,KAAM,CACJY,QAAS,QAEXyW,QAASvN,EAAK,GAAIA,EAAGhB,EAAMgL,YAAYC,GAAG,OAAS,CACjD/X,MAAO,OACPsb,WAAY,GACXxN,GACHyN,YAAa,CACXhX,gBAAiB,WAEnBiX,QAAS,CACPpD,SAAU,EACV1K,QAAS,KAAOZ,EAAMO,QAAQ,GAAK,MAErCoO,QAAS3O,EAAM4O,OAAOD,WAkDtBE,GAAc,OAAA5X,EAAA,GAAW,CAC3BC,KAAM,CACJO,gBAAiB,UACjBmJ,QAAS,QAEXkO,cAAe,CACb3b,OAAQ,SAEV4b,YAAa,CACXxH,aAAc,QAEhByH,YAAa,CACX3T,SAAU,IAEZ4T,aAAc,CACZ5T,SAAU,GACVD,WAAY,IACZM,MAAO,QACPwT,OAAQ,WAEVC,YAAa,CACX9T,SAAU,GACVK,MAAO,QACPwT,OAAQ,aA+BRE,GAEJjX,OAAOC,OAAO,CACZ,QA9Be,WACf,IAAIH,EAAU4W,KACd,OAAO,wBAAc,MAAO,CAC1Bzd,UAAW6G,EAAQf,MAClB,wBAAcmS,EAAA,EAAM,CACrB3R,WAAW,EACXgQ,QAAS,gBACT9P,WAAY,SACZxG,UAAW6G,EAAQ6W,eAClB,wBAAczF,EAAA,EAAM,CACrBhE,MAAM,GACL,wBAAcgK,GAAA,EAAa,CAC5Bje,UAAW6G,EAAQ8W,aAClB,wBAAcpD,EAAA,EAAM,CACrBva,UAAW6G,EAAQgX,cAClB,WAAY,wBAActD,EAAA,EAAM,CACjCva,UAAW6G,EAAQkX,aAClB,wCAAyC,wBAActM,EAAA,EAAY,CACpEzR,UAAW6G,EAAQ+W,aAClB,wCAAyC,wBAAc3F,EAAA,EAAM,CAC9DhE,MAAM,GACL,wBAAc2E,EAAA,EAAQ,CACvB/H,QAAS,YACTvG,MAAO,WACN,qBAQD4T,GAAc,OAAArY,EAAA,GAAW,CAC3BC,KAAM,CACJ0J,QAAS,WAEXkF,KAAM,SAAcnV,GAClB,MAAO,CACL0K,SAAU1K,EAAM4e,aAChB7T,MAAO,0BAGX3K,MAAO,SAAeJ,GACpB,MAAO,CACL0K,SAAU1K,EAAM6e,cAChB9T,MAAO,sBAKT,GAAiB,SAAwB/K,GAC3C,IAAIsH,EAAUqX,GAAY3e,GAC1B,OAAO,wBAAc,MAAO,CAC1BS,UAAW6G,EAAQf,MAClB,wBAAc2L,EAAA,EAAY,CAC3BzR,UAAW6G,EAAQ6N,MAClBnV,EAAMmV,MAAO,wBAAcjD,EAAA,EAAY,CACxCzR,UAAW6G,EAAQlH,OAClBJ,EAAMI,SAGX,GAAemH,aAAe,CAC5BqX,aAAc,GACdC,cAAe,IAEjB,IAAIC,GAAc,OAAAxY,EAAA,GAAW,CAC3ByY,KAAM,SAAc/e,GAClB,MAAO,CACLwC,OAAQxC,EAAMwC,WAKhB,GAAwB,SAA+BxC,GACzD,IAAIsH,EAAUwX,GAAY9e,GAC1B,OAAO,wBAAc0Y,EAAA,EAAM,CACzBhE,MAAM,EACNkE,GAAI,GACJnY,UAAW6G,EAAQyX,QAIvB,GAAsBxX,aAAe,CACnC/E,OAAQ,QAEV,GAAsB+Y,UAAY,CAChC/Y,OAAQ,IAAUwc,QAEpB,IAAIC,GAAqB,OAAA3Y,EAAA,GAAW,SAAU+I,GAC5C,IAAI6P,EAAuB,CACzB3c,MAAO,OACPC,OAAQ,OACRgE,SAAU,WACVK,KAAM,IACND,IAAK,KAGHyI,EAAM8P,QACR3X,OAAO+E,OAAO2S,EAAsB,CAClC,UAAa,UAAY7P,EAAM8P,OAAS,SAgC5C,OATI9P,EAAM+P,OACR5X,OAAO+E,OApBmB,CAC1BwR,QAAS,GACT5W,QAAS,QACTkY,OAAQ,SACR9c,MAAO,MACPC,OAAQ,MACRsE,gBAAiB,OACjBsI,aAAc,OACd,6BAA8B,CAC5B,cAAe,CACbkQ,QAAS,GAEX,MAAO,CACLA,QAAS,IAGbC,UAAW,mDAI0B,CACnCC,eAAgBnQ,EAAM+P,MAAQ,MAO3B,CACL7Y,KAAM2Y,KAIN,GAAS,SAAgBlf,GAC3B,IAAIsH,EAAU2X,GAAmBjf,GACjC,OAAO,wBAAc,MAAO,CAC1BS,UAAW6G,EAAQf,QAInBkZ,GAAc,OAAAnZ,EAAA,GAAW,CAC3BC,KAAM,CACJ8Y,OAAQ,WACR9c,MAAO,OACPC,OAAQ,OACRgE,SAAU,cAIV,GAAU,SAAiBxG,GAC7B,IAAIsH,EAAUmY,KACd,OAAO,IAAe/O,cAAc,MAAOpE,GAAQ,CACjD7L,UAAW6G,EAAQf,MAClBvG,KAwCD0f,GAAc,OAAApZ,EAAA,GAAW,CAC3BqZ,cAAe,CACblV,WAAY,IACZ6R,eAAgB,aAElBsD,aAAc,CACZnV,WAAY,OAIZ,GAAuB,SAA8BzK,GACvD,IAAIuU,EAAQvU,EAAMuU,MACdjN,EAAUoY,KACd,OAAO,wBAAchB,GAAA,EAAa,CAChC,aAAc,cACbnK,EAAMzS,IAAI,SAAU4S,EAAM/X,GAC3B,MAAmB,IAAf+X,EAAU,IACL,wBAAcsG,EAAA,EAAM,CACzBva,UAAW6G,EAAQqY,cACnBnK,IAAK7Y,EACLoO,MAAO,UACP7B,KAAMwL,EAAK/R,KACV+R,EAAK5P,OAED,wBAAcoN,EAAA,EAAY,CAC/BzR,UAAW6G,EAAQsY,aACnBpK,IAAK7Y,EACLoO,MAAO,eACN2J,EAAK5P,WAKd,GAAqByC,aAAe,CAClCgN,MAAO,CAAC,CACNzP,MAAO,SACPnC,IAAK,MAGT,IAAIkd,GAAc,OAAAvZ,EAAA,GAAW,SAAU+I,GACrC,IAAIgB,EAEJ,MAAO,CACL+J,QAAS/J,EAAK,CACZzJ,IAAK,OACLD,OAAQ,EACR4E,OAAQ,oBACRzE,gBAAiB,0BAChBuJ,EAAGhB,EAAMgL,YAAYC,GAAG,OAAS,CAClC/X,MAAO,qBACN8N,GACHqK,KAAM,CACJC,SAAU,GAEZnQ,OAAQ,CACN6U,OAAQ,SACRS,UAAW,OACXjE,SAAU,SAEZkE,YAAa,CACXtV,WAAY,IACZC,SAAU,IAEZsV,eAAgB,CACdvV,WAAY,IACZC,SAAU,MAKZ,GAAkB,SAAyB1K,GAE7C,IAAIsH,EAAUuY,KACd,OAAO,wBAAcnH,EAAA,EAAM,CACzB3R,WAAW,GACV,wBAAc2R,EAAA,EAAM,CACrBhE,MAAM,EACNkE,GAAI,IACH,wBAAcgC,EAAA,EAAQ,CACvBna,UAAW6G,EAAQ8S,QAClB,wBAAcS,EAAA,EAAS,KAAM7a,EAAMigB,aAAc,wBAAc,MAAO,CACvExf,UAAW6G,EAAQoT,OACjB1a,EAAMkgB,iBAGZ,GAAgB3Y,aAAe,CAC7B2Y,YAAa,KACbD,aAAc,MAEhB,IAAIE,GAAc,OAAA7Z,EAAA,GAAW,SAAU+I,GACrC,IAAIgB,EAAI8H,EAER,MAAO,CACL5R,KAAM,CACJY,QAAS,QAEXyW,QAASvN,EAAK,GAAIA,EAAGhB,EAAMgL,YAAYC,GAAG,OAAS,CACjD/X,MAAO,OACPsb,WAAY,GACXxN,GACHyN,YAAa,CACXhX,gBAAiB,WAEnBiX,QAAS,CACPpD,SAAU,GAEZqD,QAAS3O,EAAM4O,OAAOD,QACtBzD,YAAapC,EAAK,CAChBhE,YAAa9E,EAAMO,QAAQ,IAC1BuI,EAAG9I,EAAMgL,YAAYC,GAAG,OAAS,CAClCnT,QAAS,QACRgR,GACHqC,KAAM,CACJhY,OAAQ,QAEViY,MAAO,CACL3T,gBAAiB,UACjBiE,MAAO,UACPN,WAAY,KAEdiQ,KAAM,CACJC,SAAU,GAEZyF,QAAS,CACPC,SAAU,QAEZC,YAAa,CACXD,SAAU,oBACVE,UAAW,wBAsIbC,GAEJhZ,OAAOC,OAAO,CACZsC,UAAWA,GACXgQ,oBAAqBG,GACrBhH,kBAAmBD,GACnBY,mBAAoBD,GACpB8B,YAAaD,GACbW,oBAAqBD,GACrBM,eAAgBD,GAChBiK,iBArTqB,WACrB,OAAO,wBAAc,GAAS,KAAM,wBAAc,GAAQ,MAAO,wBAAc,GAAQ,CACrFtB,OAAQ,GACRC,OAAQ,MACN,wBAAc,GAAQ,CACxBD,OAAQ,GACRC,OAAQ,IACN,wBAAc,GAAQ,CACxBD,OAAQ,GACRC,OAAQ,KACN,wBAAc,GAAQ,CACxBD,OAAQ,IACRC,OAAQ,KACN,wBAAc,GAAQ,CACxBD,OAAQ,IACRC,OAAQ,KACN,wBAAc,GAAQ,CACxBD,OAAQ,IACRC,OAAQ,KACN,wBAAc,GAAQ,CACxBD,OAAQ,IACRC,OAAQ,KACN,wBAAc,GAAQ,CACxBD,OAAQ,IACRC,OAAQ,KACN,wBAAc,GAAQ,CACxBD,OAAQ,IACRC,OAAQ,KACN,wBAAc,GAAQ,CACxBD,OAAQ,IACRC,OAAQ,KACN,wBAAc,GAAQ,CACxBD,OAAQ,IACRC,OAAQ,OAqRVsB,UAAW,GACXC,WAAY,GACZC,oBAhiBwB,SAA6B5gB,GACrD,IAAIsH,EAAUqW,KAEVtN,EAAK,oBAAS,GACdwQ,EAAaxQ,EAAG,GAChByQ,EAAgBzQ,EAAG,GAEnB0Q,EAAqB,WACvBD,GAAeD,IAGjB,OAAO,IAAenQ,cAAc,MAAO,CACzCjQ,UAAW6G,EAAQf,MAClB,IAAemK,cAAc,GAAW,CACzCuK,UAAW,kBACXI,UAAW,WACXC,WAAY,EACZP,YAAagG,IACX,IAAerQ,cAAc,MAAO,CACtCjQ,UAAW6G,EAAQsW,QAClB,IAAelN,cAAcsQ,GAAA,EAAQ,CACtCC,MAAM,EACNC,eAAgB,OACf,IAAexQ,cAAcyQ,GAAA,EAAQ,CACtC7Z,QAAS,CACP6I,MAAO7I,EAAQwW,aAEjBxM,QAAS,YACTmI,KAAMoH,EACNvI,QAASyI,GACR,IAAerQ,cAAc,GAAYpE,GAAQ,GAAItM,MAAW,IAAe0Q,cAAcsQ,GAAA,EAAQ,CACtGI,QAAQ,EACRF,eAAgB,OACf,IAAexQ,cAAcyQ,GAAA,EAAQ,CACtC7Z,QAAS,CACP6I,MAAO7I,EAAQwW,aAEjBxM,QAAS,YACTmI,MAAM,GACL,IAAe/I,cAAc,GAAYpE,GAAQ,GAAItM,OAAY,IAAe0Q,cAAc,OAAQ,CACvGjQ,UAAW6G,EAAQyW,SAClB,IAAerN,cAAc,MAAO,CACrCjQ,UAAW6G,EAAQ0W,UACjBhe,EAAM8Q,YAsfVuQ,WAAY5C,GACZ6C,eAAgB,GAChBC,sBAAuB,GACvB3H,YAAaD,GACb6H,qBAAsB,GACtBC,gBAAiB,GACjBC,WArJe,SAAoB1hB,GACnC,IAsBuC2hB,EAtBnCra,EAAU6Y,KAEV9P,EAAK,oBAAS,GACdwQ,EAAaxQ,EAAG,GAChByQ,EAAgBzQ,EAAG,GAEnB8H,EAAK,IAAe7F,SAAS,MAC7BsP,EAAWzJ,EAAG,GACd0J,EAAc1J,EAAG,GAEjB2J,EAAK,IAAexP,UAAS,GAC7BmH,EAAOqI,EAAG,GACVC,EAAUD,EAAG,GAEbE,EAAK,IAAe1P,WACpB2P,EAAYD,EAAG,GACfE,EAAeF,EAAG,GAgBlBG,EAAW,IAEf,OAAQniB,EAAM4D,MACZ,IAAK,aACHue,EAAW,eACX,MAEF,IAAK,eACHA,EAAW,iBAOf,OAAO,IAAezR,cAAc,MAAO,CACzCjQ,UAAW6G,EAAQf,MAClB,IAAemK,cAAc0R,GAAA,EAAQ,CACtC3I,KAAMA,EACNmI,SAAUA,EACVK,UAAWA,EACXI,YAAY,GACX,SAAUhS,GACX,IAAIiS,EAAkBjS,EAAGiS,gBACzB,OAAO,IAAe5R,cAAc6R,GAAA,EAAMjW,GAAQ,GAAIgW,EAAiB,CACrEE,QAAS,MACP,IAAe9R,cAAce,EAAA,EAAS,KAAM,IAAef,cAAc6M,GAAA,EAAQ,KAAM,IAAe7M,cAAc6L,GAAA,EAAY,CAClI/R,QAAQ,EACRxE,QAAShG,EAAMyiB,UACd,IAAe/R,cAAc8M,GAAA,EAAgB,KAAM,IAAe9M,cAAc,KAAe,OAAQ,IAAeA,cAAc+M,GAAA,EAAgB,CACrJvT,QAAS,iBAET,IAAewG,cAAcgI,EAAA,EAAM,CACrC3R,WAAW,EACX4R,UAAW,MACX5B,QAAS,cACR,IAAerG,cAAcgI,EAAA,EAAM,CACpChE,MAAM,EACNkE,GAAI,EACJnY,UAAW6G,EAAQ8Y,SAClB,IAAe1P,cAAc,MAAO,CACrCjQ,UAAW6G,EAAQsW,QAClB,IAAelN,cAAcsQ,GAAA,EAAQ,CACtCC,MAAM,EACNC,eAAgB,OACf,IAAexQ,cAAcyQ,GAAA,EAAQ,CACtC7Z,QAAS,CACP6I,MAAO7I,EAAQwW,aAEjBxM,QAAS,YACTmI,KAAMoH,EACNvI,QAjEuB,WACvBwI,GAAeD,KAiEd,IAAenQ,cAAc,GAAYpE,GAAQ,GAAItM,MAAW,IAAe0Q,cAAcsQ,GAAA,EAAQ,CACtGI,QAAQ,EACRF,eAAgB,OACf,IAAexQ,cAAcyQ,GAAA,EAAQ,CACtC7Z,QAAS,CACP6I,MAAO7I,EAAQwW,aAEjBxM,QAAS,YACTmI,MAAM,GACL,IAAe/I,cAAc,GAAYpE,GAAQ,GAAItM,QAAa,IAAe0Q,cAAcgI,EAAA,EAAM,CACtGhE,MAAM,EACNkE,GAAI,GACJnY,UAAW6G,EAAQgZ,aAClB,IAAe5P,cAAcgI,EAAA,EAAM,CACpC3R,WAAW,EACX4R,UAAW,UACK,kBAAf3Y,EAAM4D,KAA2B,IAAe8M,cAAcgI,EAAA,EAAM,CACrEhE,MAAM,EACNkE,GAAI,IACH,IAAelI,cAAcmK,EAAA,EAAS,KAAM,IAAenK,cAAc3K,EAAA,EAAY,CACtF+U,KAAM,QACNra,UAAW6G,EAAQiT,YAClB,IAAe7J,cAAc,IAAU,OAAQ,IAAeA,cAAcsK,EAAA,EAAM,CACnF9R,KAAMiZ,GACL,IAAezR,cAAc,MAAO,CACrCjO,IAAK,kBACLhC,UAAW6G,EAAQkT,KACnBU,IAAK,UACF,IAAexK,cAAc,MAAO,CACvCjQ,UAAW6G,EAAQoT,OACjB,IAAehK,cAAc3K,EAAA,EAAY,CAC3C+U,KAAM,MACN9U,SA9FqC2b,EA8FhB,aA7Fd,SAAU7gB,GACf+gB,EAAY/gB,EAAM4hB,eAClBX,EAAQ,SAAUY,GAChB,OAAOV,IAAcN,IAAiBgB,IAExCT,EAAaP,MAyFd,IAAejR,cAAc0K,EAAA,EAAQ,CACtC3Y,IAAK,WACLyY,IAAK,cACC,KAAM,IAAexK,cAAcgI,EAAA,EAAM,CAC/ChE,MAAM,EACNkE,GAAI,IACH,IAAelI,cAAc,OAAQ,CACtCjQ,UAAW6G,EAAQyW,SAClB/d,EAAM8Q,kBAyBP8R,GAEJpb,OAAOC,OAAO,CACZob,QAAS,GACTC,YAAapb,GACbqb,SAAUpb,GACVqb,SAAUpZ,GACVqZ,OAAQnZ,GACRoZ,GAAI1C,KAMN,SAAS2C,GAAWC,GAClB,IAAIC,EAAQ,CACVC,SAAU,KACVC,UAAW,KACXC,SAAU,KACVC,eAAgB,KAChBC,QAAS,KACTC,iBAAkB,KAClBC,cAAe,MAEjB,KAAU,KAAWR,EAAOC,GAAQ,0DA6CtC,IACIQ,GAAS,yBACTC,GAAoB,oCACpBC,GAEJvc,OAAOC,OAAO,CACZuc,mBANuB,qCAOvBH,OAAQA,GACRC,kBAAmBA,KAEjB,GAAU,eAEd,SAASG,GAAqBC,EAAed,EAAOe,GAMlD,YALgB,IAAZA,IACFA,GAAU,GAIL,SAAuB3O,EAAK4O,GAC5BD,GACHhB,GAAWC,GAGb,KAAU,KAAS5N,KAAS,KAAQA,IAAQ,KAAW4O,GAAU,6EAG7DC,QAAQC,IAAIlB,EAAMO,iBAAkBnO,IAAQ4N,EAAMO,iBAAiBnO,KAAS4O,IAIhFhB,EAAMO,iBAAiBnO,GAAO4O,EAC9BhB,EAAMK,eAAeS,EAAcd,EAAMO,qBAI7C,SAASY,GAAaL,EAAed,GAEnC,OADAD,GAAWC,GACJ,CACLoB,cAAeP,GAAqBC,EAAed,GAAO,IA6C9D,IASIqB,GAAe,CA5FM,qCA4FeZ,GAAQC,IAE5C,GAAW,SAAkBtO,GAC/B,OAAO,KAAU,KAASA,KAAS,KAAQA,GAAM,uEAG/C,GAAkB,SAAyBkP,GAC7C,IAAIrB,EAAQ,CACVsB,KAAM,KACNC,KAAM,SAAcC,GAClB,OAAO,KAASA,IAAUJ,GAAaK,SAASD,GAAS,MAG7D,KAAU,KAAWH,EAAYrB,GAAQ,gEAG3C,SAAS0B,GAAkB3B,EAAOe,GAMhC,YALgB,IAAZA,IACFA,GAAU,GAIL,SAAoB3O,EAAKkP,EAAYM,QACvB,IAAfN,IACFA,EAAa,IAGVP,GACHhB,GAAWC,GAGb,IAAI6B,EAAgB3Y,GAAQA,GAAQ,GAAIoY,GAAa,CACnDE,KAAMF,EAAWE,MAAQf,KAGvBc,EAAOM,EAAcN,KACrBC,EAAOK,EAAcL,KACzB,GAASpP,GACT,GAAgByP,GAChB,IAAIC,EAAUb,QAAQC,IAAIlB,EAAMQ,cAAepO,KAW1C0P,GAAWA,GAAWN,IAASf,IAAUe,IAASd,MACrDV,EAAMQ,cAAcpO,GAAOlJ,GAAQA,GAAQ,GAAI2Y,GAAgB,CAC7DE,KAAM/B,EAAMM,QAAQiB,EAAMK,OAMlC,SAASI,GAAiBhC,EAAOe,GAM/B,YALgB,IAAZA,IACFA,GAAU,GAIL,SAAmB3O,GAOxB,GANK2O,GACHhB,GAAWC,GAGb,GAAS5N,GAEL6O,QAAQC,IAAIlB,EAAMQ,cAAepO,GAAM,CACzC,IAAIkP,EAAatB,EAAMQ,cAAcpO,GAEjCkP,EAAWE,MAAQF,EAAWE,OAASf,KACzCa,EAAWS,KAAKE,SAIdjC,EAAMQ,cAAcpO,GAAO,UAOrC,SAAS8P,GAAelC,GAEtB,OADAD,GAAWC,GACJ,CACLmC,WAAYR,GAAkB3B,GAAO,GACrCoC,UAAWJ,GAAiBhC,GAAO,IA4DvC,IAiCIqC,GAEJ,SAAU3L,GAGR,SAAS2L,EAAc9jB,GACrB,IAAI+jB,EAAQ5L,EAAOlN,KAAK1M,KAAMyB,EAASgkB,aAAezlB,KAGtD,OADAwlB,EAAM/jB,SAAWA,EACV+jB,EAGT,OATAzZ,GAAUwZ,EAAe3L,GASlB2L,EAVT,CAWEG,OAUF,SAASC,GAAUlkB,GACjB,OAAOmL,GAAU5M,UAAM,OAAQ,EAAQ,WACrC,OAAO2N,GAAY3N,KAAM,SAAUmQ,GACjC,OAAwB,MAApB1O,EAAS2H,QAAsC,MAApB3H,EAAS2H,OAC/B,CAAC,EAEN,MAGG,CAAC,EAEN3H,EAASuB,YAajB,SAAS4iB,GAAYnkB,GACnB,OAAOmL,GAAU5M,UAAM,OAAQ,EAAQ,WACrC,IAAIG,EACJ,OAAOwN,GAAY3N,KAAM,SAAUmQ,GACjC,GAAI1O,EAAS2H,QAAU,KAAO3H,EAAS2H,OAAS,IAC9C,MAAO,CAAC,EAEN3H,GAKJ,MAFAtB,EAAQ,IAAIolB,GAAc9jB,IACpBA,SAAWA,EACXtB,MAwCZ,IAqFI0lB,GArFAC,GAEJxe,OAAOC,OAAO,CACZ0b,WAAYA,GACZ8C,eAhaF,SAAwB/B,EAAegC,EAAcC,QAC9B,IAAjBD,IACFA,EAAe,IAGjB,IAAIE,EAAmB,KAiBnBC,EAAiB,aAhBS,IAoB1BC,EAAc,CAACD,EAAgB,aAAiBF,IAChDI,EAAY,CAAC,KAAgB1Z,WAAM,EAAQyZ,IAC3ClD,EAAQ,aAAYc,IAAiBgC,EAAcE,EAAiBvZ,WAAM,EAAQ0Z,IAOtF,OALAnD,EAAMM,QAAU2C,EAAeG,IAC/BpD,EAAMO,iBAAmB,GAEzBP,EAAMQ,cAAgB,GAEfR,GA8XPW,UAAWA,GACXoC,QAAS,GACTM,eA3UF,SAAwBvC,EAAe7T,GACrC,IAAImF,EAAMnF,EAAGmF,IACT4O,EAAU/T,EAAG+T,QA4BjB,OA1BA,SAAcsC,GAEZ,IAAIC,EAEJ,SAAU7M,GAGR,SAAS6M,EAAgB3mB,EAAO4mB,GAC9B,IAAIlB,EAAQ5L,EAAOlN,KAAK1M,KAAMF,EAAO4mB,IAAY1mB,KAGjD,OADAqkB,GAAaL,EAAe0C,EAAQxD,OAAOoB,cAAc,GAAKhP,EAAK4O,GAC5DsB,EAST,OAfAzZ,GAAU0a,EAAiB7M,GAS3B6M,EAAgBva,UAAU4N,OAAS,WACjC,OAAO,wBAAc0M,EAAkBpa,GAAQ,GAAIpM,KAAKF,SAG1D2mB,EAAgBD,iBAAmBA,EACnCC,EAAgBE,YAAc,gBAAkBH,EAAiBG,aAAeH,EAAiBvR,MAAQ,aAAe,IACjHwR,EAhBT,CAiBE,aAEF,OAAO,KAAqBA,EAAiBD,KAiT/CI,iBA3SqB,SAA0B5C,EAAe7T,GAC9D,IAAImF,EAAMnF,EAAGmF,IACT4O,EAAU/T,EAAG+T,QACbhB,EAAQ,eACZ,oBAAU,WACRmB,GAAaL,EAAed,GAAOoB,cAAc,GAAKhP,EAAK4O,IAC1D,KAsSH2C,YAzLF,SAAqB1W,GACnB,IAAImF,EAAMnF,EAAGmF,IACTmP,EAAOtU,EAAGsU,KACVC,EAAOvU,EAAGuU,KAsCd,OApCA,SAAc8B,GAEZ,IAAIM,EAEJ,SAAUlN,GAGR,SAASkN,EAAWhnB,EAAO4mB,GACzB,IAAIlB,EAAQ5L,EAAOlN,KAAK1M,KAAMF,EAAO4mB,IAAY1mB,KASjD,OAPAwlB,EAAMuB,UAAY3B,GAAesB,EAAQxD,OAEzCsC,EAAMuB,UAAU1B,WAAW/P,EAAK,CAC9BmP,KAAMA,EACNC,KAAMA,GACLc,EAAM1lB,OAEF0lB,EAaT,OAzBAzZ,GAAU+a,EAAYlN,GAetBkN,EAAW5a,UAAU8a,qBAAuB,WAC1ChnB,KAAK+mB,UAAUzB,UAAUhQ,IAG3BwR,EAAW5a,UAAU4N,OAAS,WAC5B,OAAO,wBAAc0M,EAAkBpa,GAAQ,GAAIpM,KAAKF,SAG1DgnB,EAAWN,iBAAmBA,EAC9BM,EAAWH,YAAc,aAAeH,EAAiBG,aAAeH,EAAiBvR,MAAQ,aAAe,IACzG6R,EA1BT,CA2BE,aAEF,OAAO,KAAqBA,EAAYN,KAoJ1CS,cA9IkB,SAAuB9W,GACzC,IAAImF,EAAMnF,EAAGmF,IACTmP,EAAOtU,EAAGsU,KACVC,EAAOvU,EAAGuU,KACVxB,EAAQ,eACZ,oBAAU,WACR,IAAI6D,EAAY3B,GAAelC,GAK/B,OAJA6D,EAAU1B,WAAW,GAAK/P,EAAK,CAC7BmP,KAAMA,EACNC,KAAMA,IAED,WACLqC,EAAUzB,UAAU,GAAKhQ,KAE1B,KAiIH4R,SA9Ha,SAAkBC,EAAYhX,GAC3C,IAAI8H,QAAa,IAAP9H,EAAgB,CACxBiX,SAAU,MACRjX,GAAIiX,SACJA,OAAkB,IAAPnP,EAAgB,KAAOA,EAClCoP,EAAgB,eAAKF,GAQzB,OANgB,SAAmBrnB,GACjC,OAAO,IAAe0Q,cAAc,WAAU,CAC5C4W,SAAUA,GACT,IAAe5W,cAAc6W,EAAejb,GAAQ,GAAItM,OAqH7DikB,qBAAsBA,GACtBuD,oBAAqBjD,GACrBkD,QAxCF,SAAiB9kB,EAAKiQ,GACpB,OAAO9F,GAAU5M,UAAM,OAAQ,EAAQ,WAErC,OAAO2N,GAAY3N,KAAM,SAAUmQ,GACjC,OAAQA,EAAGvL,OACT,KAAK,EACH,MAAO,CAAC,EAENhC,MAAMH,EAAKiQ,IAEf,KAAK,EAEH,MAAO,CAAC,EAENkT,GAHczV,EAAGnC,SAKrB,KAAK,EAEH,MAAO,CAAC,EAEN2X,GAHSxV,EAAGnC,eAwBtBuX,cAAeA,GACfV,kBAAmBA,GACnBK,iBAAkBA,GAClBsC,iBAAkBpC,KAEhB,GAAQ,OAAAtb,EAAA,GAAe,CACzBC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,aAAc,WAEhBC,UAAW,CACTF,KAAM,UACNC,aAAc,YAGlBE,WAAY,CACVC,WAAY,sDACZC,OAAQ,CACND,WAAY,8CACZE,WAAY,IACZC,SAAU,GACVC,cAAe,SAGnBC,UAAW,CACTO,UAAW,CACTC,iBAAkB,CAChBC,UAAW,wBACX,UAAW,CACTvE,gBAAiB,YAGrBwE,mBAAoB,CAClBC,OAAQ,sBACRF,UAAW,wBACX,UAAW,CACTvE,gBAAiB,kBAsBvB6gB,GAEJngB,OAAOC,OAAO,CACZwS,UAlBc,SAAmBja,GACjC,IAAIia,EAAYja,EAAMia,UAClBmJ,EAAQpjB,EAAMojB,MACdwE,EAAiB5nB,EAAM4nB,eAC3B,OAAO,wBAAcC,GAAA,EAAe,CAClCxY,MAAO,IACN,wBAAc,KAAY,CAC3B+T,MAAOA,GACN,wBAAc,KAAiB,CAChC+C,QAAS,IACR,wBAAc,IAAY,CAC3B2B,SAAU,KACT,wBAAc7N,EAAW3N,GAAQ,GAAIsb,YAgB1C,SAAW7B,GACTA,EAA2B,cAAI,iCADjC,CAEGA,KAAgBA,GAAc,KAEjC,IAAIgC,GAAgBhC,GAQhB,GAAe,CACjBiC,OARmB,MA+BrB,IAAIC,GAAiB,SAAwB5mB,GAC3C,OAAOA,EAAM6mB,UAAY,IAavBC,GAAwB,EAAQ,KAKhCC,GAA4B,SAASA,EAA0BJ,EAAQK,GACzE,IAAIC,EAnDe,OAmDYN,EAA4BI,EAnDxC,KAmDkFD,IAAyB,GAS9H,OAAO3gB,OAAO+gB,KAAKF,GAAUG,OAPE,SAAkCC,EAAmBjT,GAClF,IAAInF,EAEAqY,EAAoBL,EAAS7S,IAxDhB,OAwDwBwS,EAA4DK,EAAS7S,GAAzC8S,EAAyB9S,GAC9F,OAAOlJ,GAAQA,GAAQ,GAAImc,KAAqBpY,EAAK,IAAOmF,GAAOkT,EAAkBrY,KAGzB,KAc5DsY,IAVEP,GAA0B,KAAMD,IAUlB,aAlCX,aAAeF,GAAgB,SAAUW,GAC9C,OAAOA,EAAcZ,SAiC8B,SAAUA,GAC/D,MAAO,CACLA,OAAQA,MAaRa,GAEJrhB,OAAOC,OAAO,CACZqhB,SAZa,SAAkB9oB,GAC/B,IAAIgoB,EAAS,aAAYW,IAAeX,OACxC,OAAO,IAAetX,cAAc,KAAc,CAChDsX,OAAQA,EACRxS,IAAKwS,EACLK,SAAUroB,EAAMqoB,SAASL,IACxB,IAAee,SAASC,KAAKhpB,EAAM8Q,YAOtCmY,WA7Ce,CAAC,MA8ChBb,0BAA2BA,GAC3Bc,uBApFF,SAAgC7nB,EAAO8nB,GAKrC,YAJc,IAAV9nB,IACFA,EAAQ,IAGF8nB,EAAOxoB,MACb,KAAKonB,GAAcqB,cACjB,MAAO,CACLpB,OAAQmB,EAAOE,SAGnB,QACE,OAAOhoB,MA2ET,GAAW,aAAe,CAC5BioB,OAAQ,CACN9V,GAAI+V,6CACJC,eAAgB,qBAahBC,GAEJjiB,OAAOC,OAAO,CACZiiB,SAAU/B,GACVgC,QAASd,GACTe,aATgB,WAChB,OAAO,wBAAc,UAAW,KAAM,wBAAc,KAAM,KAAM,wBAAc,KAAkBtd,GAAQ,GAAI,GAASgd,c,gFCppG1GO,I,MAAb,mMAE0B7pB,EAAeC,GACjC,OACKC,KAAKF,MAAMiG,OAASjG,EAAMiG,MAC1B/F,KAAKF,MAAM8E,QAAU9E,EAAM8E,QALxC,+BAS2B,IAAD,OAClB,OACI,gBAACkW,EAAA,EAAD,CAAMva,UAAU,cAAcuF,QAAS,kBAAM,EAAKhG,MAAMgG,YACnD9F,KAAKF,MAAMiG,KAAO,gBAAC,IAAD,CAAiBA,KAAM/F,KAAKF,MAAMiG,OAAW,KAC/D/F,KAAKF,MAAMiG,KAAO,wBAAMrF,MAAO,CAAC+W,WAAY,UAAa,KACzDzX,KAAKF,MAAM8E,WAd5B,GAAgC5D,cCJnB4oB,GAAb,8MAEIC,oBAAsB,SAACC,GACnB,OAAQA,EAAOC,OAAOrtB,OAAS,EAC3B,EAAKoD,MAAM2c,QACNqN,OAAO,SAAAE,GAAM,OAAIA,EAAOzoB,WACxBuoB,OAAO,SAAAE,GAAM,OAAIA,EAAOzoB,SAASqjB,SAASkF,KAC/C,IAPZ,0EAU2B,IAAD,OAClB,OACI,uBAAKvpB,UAAU,sBACVP,KAAK6pB,oBAAoB7pB,KAAKF,MAAMmqB,YAAYroB,IAAI,SAAAooB,GACjD,OACI,gCACC,EAAKE,wBAAwBF,GAC9B,uBAAKzpB,UAAU,sBAjBvC,8CAyB4BypB,GAAyC,IAAD,OACtD/U,EACF+U,EAAOG,UAAY,IACnB/tB,KAAec,WAAW8sB,EAAOI,YAAc,IAC/CJ,EAAOK,SAEX,OACI,uBACI9pB,UAAU,kCACVuF,QAAS,kBAAM,EAAKhG,MAAMwqB,eAAeN,EAAOzoB,YAChD,uBAAKhB,UAAU,SACf,uBAAKA,UAAU,QACX,uBAAKA,UAAU,SAASG,MAAO,CAACkG,gBAAiB,aACjD,uBAAKlG,MAAO,CAACuG,QAAS,iBAClB,uBAAK1G,UAAU,YAAYypB,EAAOzoB,YAK1C,uBAAKhB,UAAU,QAAQ0U,GACvB,uBAAK1U,UAAU,QAAQypB,EAAOO,YAC9B,uBAAKhqB,UAAU,QAAQ,YA9CvC,GAAyCS,a,mBCA5BwpB,GAAb,sLAGQ,OACI,uBACI9pB,MAAO,CACHK,UAAW,SACXqB,WAAYpC,KAAKF,MAAMwC,OAAStC,KAAKF,MAAMwC,YAAShC,IACxD,gBAACmqB,GAAA,EAAD,CACIzkB,KAAMhG,KAAKF,MAAMkG,KACjBtF,MAAO,CACHmK,MAAO7K,KAAKF,MAAM+K,MAAQ7K,KAAKF,MAAM+K,WAAQvK,UAXrE,GAA6BU,a,UCIhB0pB,GAAb,sLAE2B,IAAD,OAClB,OACI,uBAAKnqB,UAAU,wBACX,uBAAKA,UAAU,QAAQP,KAAKF,MAAMG,aAClC,uBAAKM,UAAU,eACP,gBAAC,KAAD,CACIA,UAAU,kBACVoqB,gBAAgB,kBAChBzqB,MAAOF,KAAKF,MAAMW,KAClBiS,QAAS1S,KAAKF,MAAM8qB,QACpBjqB,SAAU,SAACkqB,GACP,EAAK/qB,MAAMgrB,aAAaD,MAEpC,yBACItqB,UAAU,mBACVL,MAAOF,KAAKF,MAAMI,MAClBS,SAAU,SAACC,GACP,EAAKd,MAAMirB,cAAcnqB,EAAME,OAAOZ,gBAnBlE,GAAoCc,a,0PCE7B,IAAMgqB,GAAb,8MAEIC,iBAAmB,WACf,IAAIC,EAAwB,GAc5B,OAbA,EAAKprB,MAAMqrB,SAASC,QAAQ,SAAAvpB,GACxB,IAAIwpB,GAAoB,EACxBH,EAAOE,QAAQ,SAACE,EAAOnsB,GACf0C,EAAQ0pB,WAAaD,EAAMC,YAAc1pB,EAAQ0pB,YACjDF,EAAmBlsB,KAGvBksB,GAAoB,EACpBH,EAAOG,GAAkBC,OAASzpB,EAAQypB,MAE1CJ,EAAOxc,K,wVAAP,IAAgB7M,MAGjBqpB,EAAOpB,OAAO,SAAAjoB,GAAO,OAAIA,EAAQ0pB,aAjBhD,0EAoB2B,IAAD,OACZvB,EAAShqB,KAAKF,MAAMkqB,OAEpB/U,EAAO7Y,KAAeovB,aACxBxB,EAAOG,UACPH,EAAOI,WACPJ,EAAOK,UAELE,EAAaP,EAAOyB,OAASzB,EAAOyB,OAAOC,eAAiB,MAC5DtsB,EAAYhD,KAAeuvB,kBAAkB,IAAI9tB,KAAKmsB,EAAO5qB,YAC7DwsB,EAAMxvB,KAAeyvB,OAAO,IAAIhuB,KAAKmsB,EAAO5qB,YAC5C0sB,EAAiB9B,EAAO+B,SAAP,UAAqB/B,EAAO+B,SAAS3iB,OAArC,aAAyD,oBAEhF,OACI,uBAAK7I,UAAU,WACX,uBAAKA,UAAWypB,EAAOgC,MAAQ,MAAQ,IAClChC,EAAOgC,MACJ,uBAAKzrB,UAAU,aAAf,OACA,KACJ,uBAAKA,UAAU,SAASG,MAAO,CAACkG,gBAAiB,aACjD,uBAAKlG,MAAO,CAACuG,QAAS,iBAClB,uBAAK1G,UAAU,YAAYypB,EAAOzoB,WAEtC,uBAAKhB,UAAU,QAAQ0U,GACvB,uBAAK1U,UAAU,QAAQgqB,GACvB,uBAAKhqB,UAAU,QAAQ,OACvB,uBAAKA,UAAU,QAAQurB,IAE3B,gBAACtT,EAAA,EAAD,CAAM3R,WAAS,GACV7G,KAAKF,MAAMmsB,gBACR,gBAACzT,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,cAAcmY,GAAI,IACnC,gBAAC,GAAD,CAASpW,OAAO,UAGpBtC,KAAKirB,mBAAmBrpB,IAAI,SAAAC,GACxB,OACI,gBAAC2W,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,cAAcmY,GAAI,GACnC,uBAAKnY,UAAU,cAAf,UAAgCsB,EAAQ0pB,UAAU3uB,cAAlD,WACA,uBAAK2D,UAAU,cAAf,UAAgCnE,KAAe8vB,aAAarqB,EAAQypB,OAApE,YAA8EzpB,EAAQsqB,gBAM1G,gBAAC3T,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,cAAcmY,GAAI,GACnC,uBAAKnY,UAAU,cAAf,mBACA,uBAAKA,UAAU,cAAf,UAAgCnB,EAAhC,aAA8CwsB,EAA9C,OAEJ,gBAACpT,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,cAAcmY,GAAI,GACnC,uBAAKnY,UAAU,cAAf,mBACA,uBAAKA,UAAU,cAAf,UAAgCypB,EAAOoC,OAAvC,cAAmDpC,EAAOqC,gBAGlE,uBAAK9rB,UAAU,eACVP,KAAKF,MAAMwsB,qBACR,gBAAC,GAAD,CAAShqB,OAAO,SAEhBtC,KAAKF,MAAMysB,cACP,gCACA,uBAAKhsB,UAAU,YAAf,wBACA,gBAACgD,GAAA,EAAD,CACI4B,gBAAgB,0BAChB5E,UAAU,qBACVmF,iBAAiB,QACjBxB,KAAMlE,KAAKF,MAAMysB,cACjBvoB,mBAAoB,CAAC,EAAG,GAAI,IAC5Ba,aAAc,kBAAM,EAAK2nB,qBACzB1nB,UAAW,SAAC2nB,EAA2BttB,GAA5B,OACP,EAAKutB,eAAeD,EAASttB,OAErC,SA3F5B,0CAmGQ,OACI,gCACA,gBAACwtB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,OAAQnR,SAAU,SAA/C,aACA,gBAACmiB,GAAA,EAAD,CAAWjsB,MAAO,CAAC8J,SAAU,SAA7B,QACA,gBAACmiB,GAAA,EAAD,CAAWjsB,MAAO,CAAC8J,SAAU,SAA7B,kBAvGZ,qCA4GmBoiB,EAAgCztB,GAC3C,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,EAAiB4D,SAAU,SAC1D,gBAACmiB,GAAA,EAAD,KAAYC,EAAaE,UACzB,gBAACH,GAAA,EAAD,KAAYC,EAAaltB,cACzB,gBAACitB,GAAA,EAAD,KAAYvwB,KAAeuvB,kBAAkBiB,EAAaG,mBAlH1E,GAAuC/rB,a,6BChBnCwB,GAAaP,yCAEJ+qB,GAAb,6IAQqBvqB,EAAaC,EAAmBC,GARrD,iEAUQC,MAAMJ,GAAaC,EAAK,CACpBI,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAkB,UAAYmD,aAAaC,QAAQ,eAG1DnD,KAAK,SAAAtB,GAAQ,OAAIA,EAASuB,SAC1BD,KAAK,SAAAE,GAAI,OAAIP,EAAQO,KACrBC,MAAM,SAAA/C,GAAK,OAAIwC,EAAKxC,KAnB7B,yKAsBsBsC,EAAYU,EAAWT,EAAmBC,GAtBhE,iEAwBQC,MAAMJ,GAAaC,EAAK,CACpBI,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAkB,UAAYmD,aAAaC,QAAQ,aAEvD/C,KAAME,KAAKC,UAAUH,KAExBJ,KAAK,SAAAtB,GAAQ,OAAIA,EAASuB,SAC1BD,KAAK,SAAAE,GAAI,OAAIP,EAAQO,KACrBC,MAAM,SAAA/C,GAAK,OAAIwC,EAAKxC,KAlC7B,0KAqCqBsC,EAAaU,EAAWT,EAAmBC,GArChE,iEAuCQC,MAAMJ,GAAaC,EAAK,CACpBI,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAkB,UAAYmD,aAAaC,QAAQ,aAEvD/C,KAAME,KAAKC,UAAUH,KAExBJ,KAAK,SAAAtB,GAAQ,OAAIA,IACjBsB,KAAK,SAAAE,GAAI,OAAIP,EAAQO,KACrBC,MAAM,SAAA/C,GAAK,OAAIwC,EAAKxC,KAjD7B,6GCgBa8sB,GAAb,sLAE2B,IAAD,OACZxB,EAASzrB,KAAKF,MAAM2rB,OACpBM,EAAWN,EAAOM,SAEnB/rB,KAAKF,MAAMotB,eAAkBltB,KAAKF,MAAMqtB,sBACzCntB,KAAKF,MAAMstB,qBAAqB3B,EAAO4B,oBAG3C,IAAMC,EAAc7B,EAAO8B,kBACrB1lB,EAAWylB,EAAW,UAAMA,EAAYE,SAAlB,aAA+BF,EAAYG,KAA3C,aAAoDH,EAAYI,QAAW,GACjGC,EAAY5B,GAAYA,EAAS4B,UAAYvxB,KAAeuvB,kBAAkBI,EAAS4B,WAAa,MACpGC,EAAU7B,GAAYA,EAAS6B,QAAUxxB,KAAeuvB,kBAAkBI,EAAS6B,SAAW,MAEpG,OACI,uBAAKrtB,UAAU,WACX,uBAAKA,UAAU,SAASG,MAAO,CAACkG,gBAAiB,aACjD,uBAAKlG,MAAO,CAACuG,QAAS,iBAClB,uBAAK1G,UAAU,YAAYkrB,EAAO4B,qBAEtC,uBAAK9sB,UAAU,QAAQkrB,EAAOC,gBAC9B,gBAAClT,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,gBAAgBmY,GAAI,IACrC,uBAAKnY,UAAU,cAAf,aACA,uBAAKA,UAAU,cAAckrB,EAAOoC,WAExC,gBAACrV,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,gBAAgBmY,GAAI,GACrC,uBAAKnY,UAAU,cAAf,oBACA,uBAAKA,UAAU,cAAcotB,IAEjC,gBAACnV,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,gBAAgBmY,GAAI,GACrC,uBAAKnY,UAAU,cAAf,gBACA,uBAAKA,UAAU,cAGP,SAGZ,gBAACiY,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,gBAAgBmY,GAAI,GACrC,uBAAKnY,UAAU,cAAf,eACA,uBAAKA,UAAU,cAAcqtB,IAEjC,gBAACpV,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,gBAAgBmY,GAAI,GACrC,uBAAKnY,UAAU,cAAf,kBACA,uBAAKA,UAAU,cAGP,SAGZ,gBAACiY,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,gBAAgBmY,GAAI,IACrC,uBAAKnY,UAAU,cAAf,iBACA,uBAAKA,UAAU,cACVkrB,EAAOqC,aAAerC,EAAOqC,aAAa7Y,KAAO,QAG1D,gBAACuD,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,gBAAgBmY,GAAI,IACrC,uBAAKnY,UAAU,cAAf,YACA,uBAAKA,UAAU,cAAcsH,IAEjC,gBAAC2Q,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,gBAAgBmY,GAAI,IACrC,uBAAKnY,UAAU,cAAf,0BACA,uBAAKA,UAAU,cACVkrB,EAAO8B,mBAAqB9B,EAAO8B,kBAAkBQ,eAAerxB,OAAS,EAA7E,UACM+uB,EAAO8B,kBAAkBQ,eAAe,GAAG9Y,KADjD,aAC0DwW,EAAO8B,kBAAkBQ,eAAe,GAAGC,WAClG,SAIhB,uBAAKztB,UAAU,iBACVP,KAAKF,MAAMwsB,qBACR,gBAAC,GAAD,CAAShqB,OAAO,SAEhBtC,KAAKF,MAAMysB,cACP,gCACA,uBAAKhsB,UAAU,YAAf,kBACA,gBAACgD,GAAA,EAAD,CACI4B,gBAAgB,4BAChB5E,UAAU,uBACVmF,iBAAiB,QACjBxB,KAAMlE,KAAKF,MAAMysB,cACjBvoB,mBAAoB,CAAC,EAAG,GAAI,IAC5Ba,aAAc,kBAAM,EAAKopB,4BACzBnpB,UAAW,SAAC2nB,EAA2BttB,GAA5B,OACP,EAAK+uB,sBAAsBzB,EAASttB,OAE5C,SAvF5B,iDAmHQ,OACI,gCACA,gBAACwtB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,OAAQnR,SAAU,SAA/C,aACA,gBAACmiB,GAAA,EAAD,CAAWjsB,MAAO,CAAC8J,SAAU,SAA7B,UACA,gBAACmiB,GAAA,EAAD,CAAWjsB,MAAO,CAAC8J,SAAU,SAA7B,WACA,gBAACmiB,GAAA,EAAD,CAAWjsB,MAAO,CAAC8J,SAAU,SAA7B,cAxHZ,4CA6H0B2jB,EAA0BhvB,GAC5C,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,EAAiB4D,SAAU,SAC1D,gBAACmiB,GAAA,EAAD,KAAYwB,EAAOrB,UACnB,gBAACH,GAAA,EAAD,KAAYwB,EAAO/kB,QACnB,gBAACujB,GAAA,EAAD,KAAYvwB,KAAeuvB,kBAAkBwC,EAAOC,cACpD,gBAACzB,GAAA,EAAD,KAAYvwB,KAAeuvB,kBAAkBwC,EAAOpB,iBApIpE,kDA0IQ,OACI,gCACA,gBAACJ,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,OAAQnR,SAAU,SAA/C,aACA,gBAACmiB,GAAA,EAAD,CAAWjsB,MAAO,CAAC8J,SAAU,SAA7B,UACA,gBAACmiB,GAAA,EAAD,CAAWjsB,MAAO,CAAC8J,SAAU,SAA7B,WACA,gBAACmiB,GAAA,EAAD,CAAWjsB,MAAO,CAAC8J,SAAU,SAA7B,cA/IZ,6CAoJ2B2jB,EAA0BhvB,GAC7C,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,EAAiB4D,SAAU,SAC1D,gBAACmiB,GAAA,EAAD,KAAYwB,EAAOrB,UACnB,gBAACH,GAAA,EAAD,KAAYwB,EAAO/kB,QACnB,gBAACujB,GAAA,EAAD,KAAYvwB,KAAeuvB,kBAAkBwC,EAAOC,cACpD,gBAACzB,GAAA,EAAD,KAAYvwB,KAAeuvB,kBAAkBwC,EAAOpB,mBA3JpE,GAAuC/rB,aCT1BqtB,GAAb,8MAEIC,oBAAsB,SAACxE,GACnB,OAAQA,EAAOC,OAAOrtB,OAAS,EAC3B,EAAKoD,MAAM6c,QACNmN,OAAO,SAAA2B,GAAM,OAAIA,EAAOjqB,WACxBsoB,OAAO,SAAA2B,GAAM,OAAIA,EAAOjqB,SAASojB,SAASkF,KAC/C,IAPZ,0EAU2B,IAAD,OAClB,OACI,uBAAKvpB,UAAU,sBACVP,KAAKsuB,oBAAoBtuB,KAAKF,MAAMmqB,YAAYroB,IAAI,SAAA6pB,GACjD,OACI,gCACC,EAAKvB,wBAAwBuB,GAC9B,uBAAKlrB,UAAU,sBAjBvC,8CAyB4BkrB,GAAyC,IAAD,OAE5D,OACI,uBACIlrB,UAAU,kCACVuF,QAAS,kBAAM,EAAKhG,MAAMyuB,eAAe9C,EAAOjqB,YAChD,uBAAKjB,UAAU,SACf,uBAAKA,UAAU,QACX,uBAAKA,UAAU,SAASG,MAAO,CAACkG,gBAAiB,aACjD,uBAAKlG,MAAO,CAACuG,QAAS,iBAClB,uBAAK1G,UAAU,YAAYkrB,EAAOjqB,YAK1C,uBAAKjB,UAAU,QAAQkrB,EAAOlB,iBAxC9C,GAAyCvpB,a,UCG5BwtB,GAAb,oHAIgCL,EACAM,EACAzE,EACAyB,EACAiD,EACAC,EACAC,EACAC,GACxB,MAAO,CACHC,eAAgBX,EAAOY,cACvBC,aAAcb,EAAOc,cACrBC,cAAef,EAAOgB,aAEtBC,YAAsC,WAAxBjB,EAAOgB,aAA4BhB,EAAOkB,gBAAa/uB,EACrEgvB,iBAA2C,qBAAxBnB,EAAOgB,aAAsChB,EAAO5D,gBAAajqB,EACpFivB,OAAiC,WAAxBpB,EAAOgB,aAA4BhB,EAAOqB,gBAAalvB,EAChEmvB,cAAwC,oBAAxBtB,EAAOgB,aAAsChB,EAAOuB,SAASxvB,MAAQ,MAAQiuB,EAAOuB,SAAS9qB,WAAStE,EACtHqvB,WAAqC,oBAAxBxB,EAAOgB,aAAqChB,EAAOwB,gBAAarvB,EAE7EsvB,YAAazB,EAAO0B,WACpBC,WAAY3B,EAAOH,UACnB+B,iBAAkB5B,EAAO6B,gBACzBC,qBAAsBxB,EAAc7sB,IAAI,SAAAsuB,GACpC,MAAO,CACHjb,KAAMib,EAAKjb,KACXxU,KAAMyvB,EAAKzvB,KACXgC,IAAKytB,EAAKztB,IAAMytB,EAAKztB,IAAMytB,EAAKC,KAAOD,EAAKC,KAAO,MAI3DC,gBAAiB,CACbC,YAAalC,EAAO1uB,WACpB6wB,cAAenC,EAAOzuB,aACtB6wB,QAASpC,EAAOoC,QAChBC,UAAU,GAAD,OAAKrC,EAAOsC,MAAMnd,GAAlB,cAA0B6a,EAAOsC,MAAMxb,MAEhDyb,kBACI/B,GACsB,cAAtBR,EAAO1uB,YACiB,yBAAxB0uB,EAAOzuB,aAA0C,CACjDixB,SAAUhC,EAAUgC,SAASzwB,MAAQ,MAAQyuB,EAAUgC,SAAS/rB,MAChEgsB,gBAAiB,CAAC,CACdC,UAAWlC,EAAUmC,UAAUlvB,IAAI,SAAA+sB,GAC/B,MAAO,CACHoC,WAAYpC,EAAUqC,UAAU9wB,MAChC2wB,UAAWlC,EAAUqC,UAAUpsB,MAC/BqsB,QAAS,GACTC,YAAY,EACZC,UAAU,EAEVC,QAAS,CACL,CACItvB,IAAK,GACLmT,KAAM0Z,EAAUyC,QAAQ,GAAGnc,KAC3Boc,eAAiB1C,EAAUyC,QAAQ,GAAGC,eAAiB1C,EAAUyC,QAAQ,GAAGC,eAAiB,GAC7FC,IAAK,EACLC,aAAc,EACdN,QAAS,KAIjBO,WAAY7C,EAAU6C,WACjB1H,OAAO,SAAA2H,GACJ,OAAOA,EAAUC,QAAQxxB,QAE5B0B,IAAI,SAAA6vB,GACD,MAAO,CACHE,SAAUF,EAAUC,QAAQxxB,MAC5B0xB,eAAgBH,EAAUC,QAAQ9sB,MAClCitB,OAAQJ,EAAUI,OAClBC,OAAQ,GACRC,KAAMN,EAAUO,OAChBla,MAAO,GACPma,WAAY,IAAIp0B,KAChBq0B,gBAAiBT,EAAUU,eAC3BC,mBAAoBX,EAAUY,kBAC9BC,gBAAiBb,EAAUc,kBAInCL,gBAAiBvD,EAAUwD,eAC3BC,mBAAoBzD,EAAU0D,kBAC9BC,gBAAiB3D,EAAU4D,0BAI3CjyB,EAEJkyB,oBACI9D,GACsB,cAAtBP,EAAO1uB,YACiB,cAAxB0uB,EAAOzuB,aAA+B,CACtCixB,SAAUjC,EAAYiC,SAASzwB,MAAQ,MAAQwuB,EAAYiC,SAAS/rB,MACpE6tB,cAAe/D,EAAYgE,aAC3BC,iBAAkBjE,EAAYkE,gBAC9BC,YAAY,EACZC,QAAS,GACTC,mBAAoB,CAAC,CACjBC,UAAWtE,EAAYuE,SACvBC,WAAY,EACZrB,OAAQnD,EAAYyE,WACpBC,aAAc1E,EAAYyE,aAE9BrC,UAAW,CACP,CACIC,WAAYrC,EAAY2E,iBAAiBnzB,MACzC2wB,UAAWnC,EAAY2E,iBAAiBzuB,MACxCqsB,QAAS,GACTC,YAAY,EACZC,UAAU,EAEVC,QAAS,CACL,CACItvB,IAAK,GACLmT,KAAMyZ,EAAYoD,OAAOltB,MACzBysB,eAAiB3C,EAAYoD,OAAOwB,OAAS5E,EAAYoD,OAAOwB,OAAO,GAAK,GAC5EhC,IAAK5C,EAAYmD,OACjBN,aAAc,EACdN,QAAS,GACTxwB,KAAM,cAId+wB,WAAY,KAGpB+B,OAAQ,GACRC,SAAU,QACVC,WAAY,EACZC,kBAAmB,QAEnBpzB,EAEJqzB,qBACI9E,GACwB,iBAAxBV,EAAOzuB,aAAkC,CACzCixB,SAAS,GAAD,OAAK9B,EAAa8B,SAASzwB,MAA3B,cAAsC2uB,EAAa8B,SAAS/rB,OACpEisB,UAAU,GAAD,OAAKhC,EAAagC,UAAU3wB,MAA5B,cAAuC2uB,EAAagC,UAAUjsB,OACvEktB,OAAO,GAAD,OAAKjD,EAAaiD,OAAO5xB,MAAzB,cAAoC2uB,EAAaiD,OAAOltB,OAC9DkT,MAAO+W,EAAa/W,MACpBoa,gBAAiBrD,EAAasD,eAC9BC,mBAAoBvD,EAAawD,kBACjCC,gBAAiBzD,EAAa0D,qBAC9BjyB,EAEJszB,gBACIhF,GACsB,YAAtBT,EAAO1uB,WAA2B,CAClCo0B,aAAcjF,EAAUhtB,IAAI,SAAAkyB,GACxB,MAAO,CACHA,QAASA,EAAQA,QAAQlvB,MACzB1E,MAAO4zB,EAAQC,OACfC,gBAAiBF,EAAQG,eACzBC,OAAQJ,EAAQI,OAChBjD,QAAS6C,EAAQ7C,QACjBkD,gBAAiBL,EAAQM,eACzBC,aAAc,YAGtB/zB,GAERg0B,gBAAiB,GACjBlrB,OAAQ,OACRmrB,aAAc,IAAI12B,KAClB22B,aAAc,IAAI32B,KAElB42B,WAAY,CACR3yB,IAAKqsB,EAAOuG,UAAUphB,GACtB2B,KAAMkZ,EAAOuG,UAAUzf,MAE3B0f,IAAK,CACDC,QAAS3uB,aAAY,QACrB4uB,OAAQ,gBACR5yB,QAAS,gBACT6yB,UAAW,IAAIj3B,MAEnBk3B,UAAW/K,EAASA,EAAOzoB,SAAW,IACtCyzB,YAAahL,EAAS,CAClBloB,IAAKkoB,EAAO1W,GACZ2hB,OAAQjL,EAAOgC,MACfkJ,UAAWlL,EAAOK,SAClB8K,YAAanL,EAAOI,WACpBgL,WAAYpL,EAAOG,UACnBsB,OAAQzB,EAAOyB,OAASzB,EAAOyB,OAAOC,oBAAiBprB,QACvDA,EACJ+0B,UACI5J,EAASA,EAAO4B,mBAChBrD,GAAUA,EAAOyB,OAASzB,EAAOyB,OAAO4B,mBAAqB,IACjEiI,YACI7J,EAAS,CACL8J,gBAAiB9J,EAAOC,gBACxB1B,EAAS,CACTuL,gBAAiBvL,EAAOyB,OAASzB,EAAOyB,OAAOC,oBAAiBprB,QAC/DA,EACTk1B,YACIxL,GAAUA,EAAO+B,SAAW/B,EAAO+B,SAASzY,GAC5CmY,GAAUA,EAAOM,SAAWN,EAAOM,SAASzY,GAAK,GACrDmiB,IAAK,GACLrC,aAAc,KA1M1B,0CAuN+BjF,EACAM,EACAzE,EACAyB,EACAiD,EACAE,GACvB,MAAO,CACHE,eAAgBX,EAAOY,cACvBC,aAAcb,EAAOc,cACrBC,cAAef,EAAOgB,aAEtBC,YAAajB,EAAOkB,WACpBC,iBAAkBnB,EAAO5D,WACzBgF,OAAQpB,EAAOqB,WACfC,cAAetB,EAAOuB,SAAS9qB,MAC/B+qB,WAAYxB,EAAOwB,WAEnBC,YAAazB,EAAO0B,WACpBC,WAAY3B,EAAOH,UACnB+B,iBAAkB5B,EAAO6B,gBACzBC,qBAAsBxB,EAAc7sB,IAAI,SAAAsuB,GACpC,MAAO,CACHwF,SAAUxF,EAAKyF,QACf1gB,KAAMib,EAAKjb,KACXxU,KAAMyvB,EAAKzvB,KACXgC,IAAKytB,EAAKztB,IAAMytB,EAAKztB,IAAMytB,EAAKC,KAAOD,EAAKC,KAAO,GACnDyF,MAAO1F,EAAK0F,SAIpBxF,gBAAiB,CACbC,YAAalC,EAAO1uB,WACpB6wB,cAAenC,EAAOzuB,aACtB6wB,QAASpC,EAAOoC,QAChBC,UAAU,GAAD,OAAKrC,EAAOsC,MAAMnd,GAAlB,cAA0B6a,EAAOsC,MAAMxb,MAEhDud,oBAAsB9D,EAAc,CAChCiC,SAAS,GAAD,OAAKjC,EAAYiC,SAASzwB,MAA1B,cAAqCwuB,EAAYiC,SAAS/rB,OAClE6tB,cAAe/D,EAAYgE,aAC3BC,iBAAkBjE,EAAYkE,gBAC9BC,WAAYnE,EAAYmH,UACxB/C,QAASpE,EAAYoE,QAAQlxB,IAAI,SAAAk0B,GAC7B,MAAO,CACH7E,QAAS6E,EAAO7E,QAChBrzB,KAAMk4B,EAAOl4B,KACbm4B,cAAeD,EAAOE,aAAa14B,cAG3Cy1B,mBAAoBrE,EAAYuH,eAAer0B,IAAI,SAAAs0B,GAC/C,MAAO,CACHlD,UAAWkD,EAAcjD,SACzBC,WAAYgD,EAAcC,KAC1BtE,OAAQqE,EAAc/C,WACtBC,aAAc8C,EAAc/C,WAAa+C,EAAcC,QAG/DrF,UAAWpC,EAAYoC,UAAUlvB,IAAI,SAACivB,EAAW1xB,GAC7C,MAAO,CACH4xB,WAAYF,EAAUA,UAAU3wB,MAChC2wB,UAAWA,EAAUA,UAAUjsB,MAC/BqsB,QAASJ,EAAUI,QACnBC,WAAaxC,EAAY0H,wBAA0Bj3B,EACnDgyB,SAAUN,EAAUwF,QACpBjF,QAAS1C,EAAY4H,WAChBxM,OAAO,SAAAyM,GAAS,OAAIA,EAAU1F,UAAU3wB,QAAU2wB,EAAUA,UAAU3wB,QACtE0B,IAAI,SAAA20B,GACD,MAAO,CACHz0B,IAAK,GACLmT,KAAMshB,EAAUA,UAAU3xB,MAC1BysB,eAAgBkF,EAAUA,UAAUjD,OAASiD,EAAUA,UAAUjD,OAAO,GAAK,GAC7EhC,IAAKiF,EAAU1E,OACfN,aAAcgF,EAAUC,OACxBvF,QAASsF,EAAUtF,QACnBxwB,KAAM81B,EAAUA,UAAUjD,OAASiD,EAAUA,UAAUjD,OAAO,GAAK,MAG/E9B,WAAY9C,EAAY8C,WACnB1H,OAAO,SAAA2H,GAAS,OAAIA,EAAUZ,UAAU3wB,QAAU2wB,EAAUA,UAAU3wB,QACtE0B,IAAI,SAAA6vB,GACD,MAAO,CACHE,SAAUF,EAAUA,UAAUvxB,MAC9B0xB,eAAgBH,EAAUA,UAAU7sB,MACpCitB,OAAQJ,EAAUI,OAClBC,OAAQL,EAAU8E,UAAU3xB,MAC5BmtB,MAAM,EACNja,MAAO2Z,EAAUR,QACjBgB,WAAYR,EAAU7zB,KACtBs0B,gBAAiB,UACjBE,mBAAoB,MAGhCF,gBAAiB,UACjBE,mBAAoB,MAG5BmB,OAAQ7E,EAAYra,MAAMzS,IAAI,SAAA4S,GAC1B,MAAO,CACHqd,OAAQrd,EAAKqd,OACb4E,UAAWjiB,EAAKS,KAChBxU,KAAM+T,EAAK/T,KAAKmE,SAGxB4uB,SAAU9E,EAAY8E,SAAS5uB,MAC/B8xB,UAAWhI,EAAY5B,SACvB6J,QAASjI,EAAYkI,OACrBlD,kBAAmBhF,EAAYmI,iBAC/BpD,WAAY/E,EAAYoI,UACxBC,eAAgBrI,EAAYsI,oBAC5B12B,EAEJszB,gBAAkBhF,EAAY,CAC1BiF,aAAcjF,EAAUhtB,IAAI,SAAAkyB,GACxB,MAAO,CACHA,QAASA,EAAQA,QAAQlvB,MACzB1E,MAAO4zB,EAAQC,OACfC,gBAAiBF,EAAQG,eACzBC,OAAQJ,EAAQI,OAChBjD,QAAS6C,EAAQ7C,QACjBkD,gBAAiBL,EAAQM,eACzBC,aAAc,YAGtB/zB,GAERg0B,gBAAiBnG,EAAO8I,SACxB7tB,OAAQ+kB,EAAO/kB,OACfmrB,aAAcpG,EAAOC,YACrBoG,aAAc,IAAI32B,KAElB42B,WAAY,CACR3yB,IAAKqsB,EAAOuG,UAAUphB,GACtB2B,KAAMkZ,EAAOuG,UAAUzf,MAE3B0f,IAAK,CACDC,QAAS3uB,aAAY,QACrB4uB,OAAQ,gBACR5yB,QAAS,gBACT6yB,UAAW,IAAIj3B,MAEnBk3B,UAAW/K,EAASA,EAAOzoB,SAAW,GACtCyzB,YAAahL,EAAS,CAClBloB,IAAKkoB,EAAO1W,GACZ2hB,OAAQjL,EAAOgC,MACfkJ,UAAWlL,EAAOK,SAClB8K,YAAanL,EAAOI,WACpBgL,WAAYpL,EAAOG,UACnBsB,OAAQzB,EAAOyB,OAASzB,EAAOyB,OAAOC,oBAAiBprB,QACvDA,EACJ+0B,UACI5J,EAASA,EAAO4B,mBAChBrD,GAAUA,EAAOyB,OAASzB,EAAOyB,OAAO4B,mBAAqB,IACjEiI,YACI7J,EAAS,CACL8J,gBAAiB9J,EAAOC,gBACxB1B,EAAS,CACTuL,gBAAiBvL,EAAOyB,OAASzB,EAAOyB,OAAOC,oBAAiBprB,QAC/DA,EACTk1B,YACIxL,GAAUA,EAAO+B,SAAW/B,EAAO+B,SAASzY,GAC5CmY,GAAUA,EAAOM,SAAWN,EAAOM,SAASzY,GAAK,GACrD4jB,cAAe/I,EAAOgJ,aACtB1B,IAAK,GACLrC,aAAc,KAzX1B,oDAsYyCjF,EACAiJ,EACApN,EACAyB,EACAkD,EACAD,EACAG,GAEjC,IAAMwI,EAA4B,SAAC1I,GAC/B,IAAI2I,EAAQ,EAMZ,OALA3I,EAAUmC,UAAUlvB,IAAI,SAAAivB,GACpBA,EAAUW,WAAW5vB,IAAI,SAAA6vB,GACrB6F,GAAS7F,EAAUI,WAGpByF,GAGX,MAAO,CACHxI,eAAgBX,EAAOY,cACvBC,aAAcb,EAAOc,cACrBC,cAAef,EAAOgB,aAEtBC,YAAajB,EAAOkB,WACpBC,iBAAkBnB,EAAO5D,WACzBgF,OAAQpB,EAAOqB,WACfC,cAAetB,EAAOuB,SAAS9qB,MAC/B+qB,WAAYxB,EAAOwB,WAEnBC,YAAazB,EAAO0B,WACpBC,WAAY3B,EAAOH,UACnB+B,iBAAkB5B,EAAO6B,gBACzBC,qBAAsB,GAEtBG,gBAAiB,CACbC,YAAalC,EAAO1uB,WACpB6wB,cAAenC,EAAOzuB,aACtB6wB,QAASpC,EAAOoC,QAChBC,UAAU,GAAD,OAAKrC,EAAOsC,MAAMnd,GAAlB,cAA0B6a,EAAOsC,MAAMxb,MAEhDyb,kBAAoB/B,EAAY,CAC5BgC,SAAUhC,EAAUgC,SAASzwB,MAAQ,MAAQyuB,EAAUgC,SAAS/rB,MAChEgsB,gBAAiB,CAAC,CACdC,UAAWlC,EAAUmC,UAAUlvB,IAAI,SAAA+sB,GAC/B,MAAO,CACHoC,WAAYpC,EAAUqC,UAAU9wB,MAChC2wB,UAAWlC,EAAUqC,UAAUpsB,MAC/BqsB,QAAS,GACTC,YAAY,EACZC,UAAU,EAEVC,QAAS,CACL,CACItvB,IAAK,GACLmT,KAAM0Z,EAAUyC,QAAQ,GAAGnc,KAC3Boc,eAAgB,GAChBC,IAAK,EACLC,aAAc,EACdN,QAAS,KAIjBO,WAAY7C,EAAU6C,WACjB1H,OAAO,SAAA2H,GACJ,OAAOA,EAAUC,QAAQxxB,QAE5B0B,IAAI,SAAA6vB,GACD,MAAO,CACHE,SAAUF,EAAUC,QAAQxxB,MAC5B0xB,eAAgBH,EAAUC,QAAQ9sB,MAClCitB,OAAQJ,EAAUI,OAClBC,OAAQ,GACRC,KAAMN,EAAUO,OAChBla,MAAO,GACPma,WAAY,IAAIp0B,KAChBq0B,gBAAiBT,EAAUU,eAC3BC,mBAAoBX,EAAUY,kBAC9BC,gBAAiBb,EAAUc,6BAMnDjyB,EAEJkyB,oBAAsB9D,EAAc,CAChCiC,SAAUjC,EAAYiC,SAASzwB,MAAQ,MAAQwuB,EAAYiC,SAAS/rB,MACpE6tB,cAAe/D,EAAYgE,aAC3BC,iBAAkBjE,EAAYkE,gBAC9BC,WAAYnE,EAAYmH,UACxB/C,QAASpE,EAAYoE,QACrBC,mBAAoBrE,EAAYuH,eAAer0B,IAAI,SAAAs0B,GAC/C,MAAO,CACHlD,UAAWkD,EAAcjD,SACzBC,WAAYgD,EAAcC,KAC1BtE,OAAQqE,EAAc/C,WACtBC,aAAc8C,EAAc/C,WAAa+C,EAAcC,QAG/DrF,UAAWpC,EAAYoC,UAAUlvB,IAAI,SAAAivB,GACjC,MAAO,CACHE,WAAYF,EAAUG,UAAU9wB,MAChC2wB,UAAWA,EAAUG,UAAUpsB,MAC/BqsB,QAASJ,EAAUI,QACnBC,WAAYL,EAAU0G,UACtBpG,SAAUN,EAAUwF,QACpBjF,QAASP,EAAUO,QAAQxvB,IAAI,SAAAkwB,GAC3B,MAAO,CACHhwB,IAAKgwB,EAAOxe,GACZ2B,KAAM6c,EAAO7c,KACboc,eAAgBS,EAAOT,eACvBC,IAAKQ,EAAOR,IACZC,aAAcO,EAAO0F,WACrBvG,QAASa,EAAOb,QAChBxwB,KAAMqxB,EAAOrxB,QAGrB+wB,WAAYX,EAAUW,WAAW5vB,IAAI,SAAA6vB,GACjC,MAAO,CACHE,SAAUF,EAAUC,QAAQxxB,MAC5B0xB,eAAgBH,EAAUC,QAAQ9sB,MAClCitB,OAAQJ,EAAUI,OAClBC,OAAQL,EAAUK,OAClBC,KAAMN,EAAUO,OAChBla,MAAO2Z,EAAU3Z,MACjBma,WAAYR,EAAUgG,UACtBvF,gBAAiBT,EAAUU,eAC3BC,mBAAoBX,EAAUY,kBAC9BC,gBAAiBb,EAAUc,kBAGnCL,gBAAiBrB,EAAUsB,eAC3BC,mBAAoBvB,EAAUwB,kBAC9BC,gBAAiBzB,EAAU0B,kBAGnCgB,OAAQ7E,EAAY6E,OACpBC,SAAU9E,EAAY8E,SAAS5uB,MAC/B8uB,kBAAmBhF,EAAYmI,iBAC/BpD,WAAY/E,EAAYoI,UACxBC,eAAgBrI,EAAYsI,oBAC5B12B,EAEJqzB,qBAAuB9E,EAAe,CAClC8B,SAAS,GAAD,OAAK9B,EAAa8B,SAASzwB,MAA3B,cAAsC2uB,EAAa8B,SAAS/rB,OACpEisB,UAAU,GAAD,OAAKhC,EAAagC,UAAU3wB,MAA5B,cAAuC2uB,EAAagC,UAAUjsB,OACvEktB,OAAO,GAAD,OAAKjD,EAAaiD,OAAO5xB,MAAzB,cAAoC2uB,EAAaiD,OAAOltB,OAC9DkT,MAAO+W,EAAa/W,MACpBoa,gBAAiBrD,EAAasD,eAC9BC,mBAAoBvD,EAAawD,kBACjCC,gBAAiBzD,EAAa0D,qBAC9BjyB,GAERg0B,gBAAiBnG,EAAO8I,SACxB7tB,OAAQ+kB,EAAO/kB,OACfmrB,aAAcpG,EAAOC,YACrBoG,aAAcrG,EAAOpB,YAErB0H,WAAY,CACR3yB,IAAKqsB,EAAOuG,UAAUphB,GACtB2B,KAAMkZ,EAAOuG,UAAUzf,MAE3B0f,IAAK,CACDC,QAAS3uB,aAAY,QACrB4uB,OAAQ,gBACR5yB,QAAS,gBACT6yB,UAAW,IAAIj3B,MAEnBk3B,UAAW/K,EAASA,EAAOzoB,SAAW,GACtCyzB,YAAahL,EAAS,CAClBloB,IAAKkoB,EAAO1W,GACZ2hB,OAAQjL,EAAOgC,MACfkJ,UAAWlL,EAAOK,SAClB8K,YAAanL,EAAOI,WACpBgL,WAAYpL,EAAOG,UACnBsB,OAAQzB,EAAOyB,OAASzB,EAAOyB,OAAOC,oBAAiBprB,QACvDA,EACJ+0B,UACI5J,EAASA,EAAO4B,mBAChBrD,GAAUA,EAAOyB,OAASzB,EAAOyB,OAAO4B,mBAAqB,IACjEiI,YACI7J,EAAS,CACL8J,gBAAiB9J,EAAOC,gBACxB1B,EAAS,CACTuL,gBAAiBvL,EAAOyB,OAASzB,EAAOyB,OAAOC,oBAAiBprB,QAC/DA,EACTk1B,YACIxL,GAAUA,EAAO+B,SAAW/B,EAAO+B,SAASzY,GAC5CmY,GAAUA,EAAOM,SAAWN,EAAOM,SAASzY,GAAK,GACrD4jB,cAAe/I,EAAOgJ,aACtBO,wBAAwB,EACxBjC,IAAK2B,EAAKx1B,IAAI,SAAA6zB,GACV,MAAO,CACH3zB,IAAK2zB,EAAIniB,GACTqkB,OAAQlC,EAAImC,MACZ/F,OAAQ4D,EAAI5D,OACZj0B,KAAM63B,EAAI73B,KACVka,MAAO2d,EAAI3d,SAGnBsb,aAAczE,EACV0I,EAA0B1I,GAC1BD,EACA2I,EAA0B3I,GAE1B,KAnlBhB,oCAimByBjtB,GACjB,MAAO,CACH6R,GAAI7R,EAASK,IACbP,SAAUE,EAASszB,UACnB5K,UAAW1oB,EAAS2zB,WACpBhL,WAAY3oB,EAAS0zB,YACrB9K,SAAU5oB,EAASyzB,UACnB91B,UAAW,IAAIvB,KAAK4D,EAASo2B,eAC7BzL,OAAQ3qB,EAAS2qB,OACjBC,YAAa5qB,EAASq2B,aACtB/L,SAAUtqB,EAASs2B,gBAAkB,CACjCzkB,GAAI7R,EAASs2B,gBAAgBj2B,IAC7BmT,KAAMxT,EAASs2B,gBAAgB9iB,KAC/B7L,OAAQ3H,EAASs2B,gBAAgB3uB,OACjCukB,UAAW,IAAI9vB,KAAK4D,EAASs2B,gBAAgBC,gBAAgBC,qBAC7DrK,QAAS,IAAI/vB,KAAK4D,EAASs2B,gBAAgBC,gBAAgBE,yBAC3D53B,EACJ0rB,MAAOvqB,EAASwzB,OAChB7rB,OAAQ3H,EAAS02B,cACjB1M,OAAQ+C,EAAS4J,cAAc32B,EAASgqB,WApnBpD,oCAioByBhqB,EAAe42B,EAAmBC,GAEnD,IAAMC,EAAa,SAACC,GAChB,MAAO,CACHC,MAAOD,EAAQC,MACfC,KAAMF,EAAQE,KACdC,OAAQH,EAAQI,QAChBC,SAAUL,EAAQM,UAClBC,OAAQP,EAAQO,OAChBvL,SAAUgL,EAAQQ,KAClBvL,KAAM+K,EAAQ/K,KACdC,OAAQ8K,EAAQ9K,OAChBuL,QAAST,EAAQU,SACjBC,WAAYX,EAAQY,gBAAkBZ,EAAQY,gBAAgBx3B,IAAI,SAAAy3B,GAC9D,OAAOA,EAAQC,KACd,GACLvL,eAAgByK,EAAQe,gBAAkBf,EAAQe,gBAAgB33B,IAAI,SAAAy3B,GAClE,MAAO,CACHpkB,KAAMokB,EAAQpkB,KACd+Y,UAAWqL,EAAQvJ,WACnB0J,MAAOH,EAAQI,cACfC,YAAaL,EAAQK,eAExB,KAyBb,MAAO,CACHpmB,GAAI7R,EAASK,IACb4pB,eAAgBjqB,EAAS8zB,gBACzBoE,UAAWl4B,EAASm4B,WACpB/L,SAAUpsB,EAASo4B,aACnBxM,mBAAoB5rB,EAASq4B,qBAC7BC,MAAOt4B,EAASu4B,OAChBC,QAASx4B,EAASy4B,SAClBC,OAAQ14B,EAAS24B,QACjBC,SAAU54B,EAAS44B,SACnBC,UAAW74B,EAAS64B,UACpBC,MAAO94B,EAAS+4B,mBAChBC,gBAAiBh5B,EAASi5B,kBAC1BC,uBAAwBl5B,EAASm5B,0BAA4B,IAAI/8B,KAAK4D,EAASm5B,gCAA6Bt6B,EAC5Gu6B,kBAAmBp5B,EAASm5B,0BAA4B,IAAI/8B,KAAK4D,EAASq5B,2BAAwBx6B,EAClGy6B,SAAUt5B,EAASu5B,WACnBC,cAAex5B,EAASy5B,qBACxBC,cAAe15B,EAAS25B,gCACxBC,UAAW55B,EAAS65B,mCACpBC,gBAAiB95B,EAAS+5B,iCAC1BC,cAAeh6B,EAASi6B,iBACxB5N,aAAcrsB,EAASk6B,cAAgB,CACnCl7B,KAAMgB,EAASk6B,cAAcl7B,KAC7BwU,KAAMxT,EAASk6B,cAAcC,WAC7BC,QAASp6B,EAASk6B,cAAcG,aAChCC,YAAat6B,EAASk6B,cAAcK,eACpC11B,SAAU7E,EAASk6B,cAAcr1B,SACjC0nB,UAAWvsB,EAASk6B,cAAc7L,WAClC0J,MAAO/3B,EAASk6B,cAAclC,oBAC9Bn5B,EACJitB,kBAAmB9rB,EAASw6B,oBACxB1D,EAAW92B,EAASw6B,0BAAuB37B,EAC/C47B,SAAUz6B,EAASy6B,SACXz6B,EAASy6B,SAASt6B,IAAI,SAAAu6B,GACtB,OAAO5D,EAAW4D,KAEtB,GACJ/yB,OAAQ3H,EAAS2H,OACjB2iB,SACIsM,EA5DY,SAACA,GACjB,IAAIpjB,EAAO,GAAI0Y,OAAYrtB,EAAWstB,OAAUttB,EAYhD,OAVA+3B,EAAYjN,QAAQ,SAAA5W,GACG,IAAfA,EAAK4nB,OAAgC,QAAjB5nB,EAAK6nB,UACzBpnB,EAAOT,EAAKS,KAAOT,EAAKS,KAAO,GAC3BT,EAAKwjB,kBACLrK,EAAYnZ,EAAKwjB,gBAAgBC,qBAAuB,GACxDrK,EAAUpZ,EAAKwjB,gBAAgBE,mBAAqB,OAKzD,CACH5kB,GAAI7R,EAAS66B,WAAa76B,EAAS66B,UAAU5/B,OAAS,EAAI+E,EAAS66B,UAAU,GAAK,GAClFrnB,KAAMA,EACN0Y,UAAWA,EAAY,IAAI9vB,KAAK8vB,QAAartB,EAC7CstB,QAASA,EAAU,IAAI/vB,KAAK+vB,QAAWttB,GA4CnCi8B,CAAYlE,GACZ52B,EAASs2B,gBAAkB,CAC3BzkB,GAAI7R,EAASs2B,gBAAgBj2B,IAC7BmT,KAAMxT,EAASs2B,gBAAgB9iB,KAC/B7L,OAAQ3H,EAASs2B,gBAAgB3uB,OACjCukB,UAAW,IAAI9vB,KAAK4D,EAASs2B,gBAAgBC,gBAAgBC,qBAC7DrK,QAAS,IAAI/vB,KAAK4D,EAASs2B,gBAAgBC,gBAAgBE,yBAC3D53B,EACRk8B,YAAa/6B,EAAS+6B,YAClB/6B,EAAS+6B,YAAY56B,IAAI,SAAA66B,GACrB,MAAO,CACHh8B,KAAMg8B,EAAWh8B,KACjBgC,IAAKg6B,EAAWh6B,IAChBi6B,KAAMD,EAAWC,KACjBC,SAAUF,EAAWG,aACrBC,SAAUJ,EAAWI,SACrBC,SAAUL,EAAWM,SACrB/2B,KAAMy2B,EAAWz2B,aAG1B1F,EACH08B,MAAOv7B,EAASu7B,MAChBC,UAAWx7B,EAASy7B,WACpBC,gBAAiB17B,EAAS27B,kBAC1BC,aAAc57B,EAAS67B,mBACnB77B,EAAS67B,mBAAmB17B,IAAI,SAAAg0B,GAC5B,MAAO,CACH2H,WAAY3H,EAAM4H,YAClBllB,UAAWsd,EAAM6H,YACjBC,SAAU9H,EAAM+H,UAChBC,UAAWhI,EAAMiI,WACjBp9B,KAAMm1B,EAAMkI,mBAGrBx9B,EACHg4B,UAAWA,EAAYA,EAAU12B,IAAI,SAAAm8B,GACjC,MAAO,CACH9oB,KAAM8oB,EAASC,eACfC,KAAMF,EAASG,eACf/S,SAAU4S,EAASI,cACnBC,WAAYL,EAASM,gBACrBC,WAAYP,EAASQ,gBACrBnQ,YAAa,IAAIvwB,KAAKkgC,EAASxJ,cAC/BxH,YAAa,IAAIlvB,KAAKkgC,EAASvJ,cAC/BgK,QAAST,EAASS,gBAErBl+B,EACLm+B,sBAAuBh9B,EAASi9B,uBAAyB,CACrDC,eAAgBl9B,EAASi9B,uBAAuBE,iBAAmB,CAC/DC,YAAap9B,EAASi9B,uBAAuBE,iBAAiBE,aAC9DC,YAAat9B,EAASi9B,uBAAuBE,iBAAiBI,aAC9DC,gBAAiBx9B,EAASi9B,uBAAuBE,iBAAiBM,oBAClE5+B,EACJ6+B,gBAAiB19B,EAASi9B,uBAAuBU,kBACjDC,QAAS59B,EAASi9B,uBAAuBW,QAAU,CAC/CC,aAAc79B,EAASi9B,uBAAuBW,QAAQE,eACtDC,UAAW/9B,EAASi9B,uBAAuBW,QAAQI,YACnDC,YAAaj+B,EAASi9B,uBAAuBW,QAAQM,cACrDC,eAAgBn+B,EAASi9B,uBAAuBW,QAAQQ,iBACxDC,cAAer+B,EAASi9B,uBAAuBW,QAAQU,eACvDC,uBAAwBv+B,EAASi9B,uBAAuBW,QAAQY,wBAChEC,cAAez+B,EAASi9B,uBAAuBW,QAAQc,eACvDC,WAAY3+B,EAASi9B,uBAAuBW,QAAQgB,YACpDC,oBAAqB7+B,EAASi9B,uBAAuBW,QAAQkB,4BAC7DjgC,EACJkgC,WAAY/+B,EAASi9B,uBAAuB8B,WAAa,CACrDC,oBAAqBh/B,EAASi9B,uBAAuB8B,WAAWE,oBAChEC,qBAAsBl/B,EAASi9B,uBAAuB8B,WAAWI,qBACjEC,sBAAuBp/B,EAASi9B,uBAAuB8B,WAAWM,8BAClExgC,EACJygC,WAAYt/B,EAASi9B,uBAAuBqC,WAAa,CACrDC,sBAAuBv/B,EAASi9B,uBAAuBqC,WAAWE,2BAClEC,mBAAoBz/B,EAASi9B,uBAAuBqC,WAAWL,oBAC/DS,0BAA2B1/B,EAASi9B,uBAAuBqC,WAAWK,6BACtEC,wBAAyB5/B,EAASi9B,uBAAuBqC,WAAWO,2BACpEC,aAAc9/B,EAASi9B,uBAAuBqC,WAAWS,qBACzDlhC,EACJquB,UAAWltB,EAASi9B,uBAAuB/P,UAC3C8S,YAAahgC,EAASi9B,uBAAuB+C,YACzChgC,EAASi9B,uBAAuB+C,YAAY7/B,IAAI,SAAAqB,GAC5C,MAAO,CACHy+B,WAAYz+B,EAAK0+B,YACjBC,UAAW3+B,EAAK2+B,UAChBC,UAAW5+B,EAAK4+B,kBAGxBvhC,QACJA,KAhzBhB,sCA6zB2BmB,GACnB,OAAOA,EAASG,IAAI,SAAAmqB,GAChB,MAAO,CACHzY,GAAIyY,EAASjqB,IACbmT,KAAM8W,EAAS9W,KACf6sB,WAAY/V,EAASgW,YACrBthC,KAAMsrB,EAASiW,QACf54B,OAAQ2iB,EAAS3iB,YAp0BjC,mCAq1BwB3H,GAChB,OAAOA,EAASG,IAAI,SAAAD,GAChB,MAAO,CACHsgC,WAAYtgC,EAAIugC,YAChBC,KAAMxgC,EAAIwgC,KACVltB,KAAMtT,EAAIygC,SACVxkC,KAAM+D,EAAI/D,KACVykC,KAAM1gC,EAAI0gC,UA51B1B,mCA02BwB5gC,GAChB,OAAOA,EAASG,IAAI,SAAA0gC,GAChB,MAAO,CACH9gC,SAAU8gC,EAAIjN,UACdpgB,KAAMqtB,EAAIC,cACVC,WAAYF,EAAIG,gBAChBzF,MAAOsF,EAAItF,MACX0F,SAAUJ,EAAIK,YACdC,WAAY,IAAI/kC,KAAKykC,EAAIO,eACzBrE,QAAS8D,EAAI9D,QACbsE,WAAYR,EAAIS,YAAc,IAAIllC,KAAKykC,EAAIS,kBAAeziC,EAC1D0iC,UAAWV,EAAIW,WACfC,YAAaZ,EAAIa,cAAgB,IAAItlC,KAAKykC,EAAIa,oBAAiB7iC,EAC/DG,KAAM6hC,EAAI7hC,KACV2iC,OAAQd,EAAIc,OACZC,QAASf,EAAIe,aAz3B7B,iCAu4BsB5hC,GACd,OAAOA,EAASG,IAAI,SAAAooB,GAChB,MAAO,CACH1W,GAAI0W,EAAOloB,IACXP,SAAUyoB,EAAOsZ,eACjBnZ,UAAWH,EAAOoL,WAClBhL,WAAYJ,EAAOmL,YACnB9K,SAAUL,EAAOkL,UACjB91B,UAAW,IAAIvB,KAAKmsB,EAAO6N,eAC3BzL,OAAQpC,EAAOoC,OACfC,YAAarC,EAAO8N,aACpByL,cAAevZ,EAAOwZ,cAAcjO,gBACpCnsB,OAAQ4gB,EAAOmO,cACfsL,gBAAiBzZ,EAAO0Z,iBAAmB,IAAI7lC,KAAKmsB,EAAO0Z,uBAAoBpjC,EAC/EqjC,gBAAiB3Z,EAAO4Z,iBAAmB,IAAI/lC,KAAKmsB,EAAO4Z,uBAAoBtjC,OAr5B/F,oCAq6ByBmB,EAAe9B,GAChC,IAAMkkC,EAAiBpiC,EAAS2uB,gBAEhC,MAAO,CACH9c,GAAI7R,EAASK,IACbmtB,cAAextB,EAASutB,aACxBD,cAAettB,EAASqtB,eACxBK,aAAc1tB,EAASytB,cACvBG,WAAY5tB,EAAS2tB,YACrB7E,WAAY9oB,EAAS6tB,iBACrBE,WAAY/tB,EAAS8tB,OACrBG,SAAU,CAAExvB,MAAO,GAAI0E,MAAOnD,EAASguB,eACvCE,WAAYluB,EAASkuB,WACrBE,WAAYpuB,EAASmuB,YACrB5B,UAAWvsB,EAASquB,WACpBrwB,WAAYokC,EAAexT,YAC3B3wB,aAAcmkC,EAAevT,cAC7BC,QAASsT,EAAetT,QACxBE,MAAO,CAAEnd,GAAI,GAAI2B,KAAM4uB,EAAerT,WACtCR,gBAAiBvuB,EAASsuB,iBAC1B+T,gBAAiB,GACjBhX,SAAUntB,EACVs3B,SAAUx1B,EAAS6yB,gBACnBlrB,OAAQ3H,EAAS2H,OACjBsrB,UAAW,CAAEphB,GAAI7R,EAASgzB,WAAWnhB,GAAI2B,KAAMxT,EAASgzB,WAAWxf,MACnEmZ,YAAa,IAAIvwB,KAAK4D,EAAS8yB,cAC/BxH,YAAa,IAAIlvB,KAAK4D,EAAS+yB,cAC/BuP,cAAe,IAAIlmC,KAAK4D,EAASuiC,gBACjC7M,aAAc11B,EAASy1B,iBAj8BnC,yCA88B8BxI,EAAkBjtB,GAAwC,IAAD,IACzEwiC,EAAevV,EAAYiC,SAASn0B,MAAM,OAChD,MAAO,CACHm0B,SAAU,CAAEzwB,MAAO+jC,EAAa,GAAIr/B,MAAOq/B,EAAa,IACxDvR,aAAc,IAAI70B,KAAK6wB,EAAY+D,eACnCG,gBAAiBlE,EAAYiE,iBAC7BkD,UAAWnH,EAAYmE,WACvBW,SAAU,CAAEtzB,MAAO,GAAI0E,MAAO8pB,EAAY8E,UAC1C1G,SAAU4B,EAAYgI,UACtBE,OAAQlI,EAAYiI,QACpBE,iBAAkBnI,EAAYgF,kBAC9BoD,UAAWpI,EAAY+E,WACvBuD,cAAetI,EAAYqI,eAAiB,IAAIl5B,KAAK6wB,EAAYqI,qBAAkBz2B,EAEnF81B,sBAAuB1H,EAAYoC,UAC9BlvB,IAAI,SAAC1B,EAAOf,GACT,OAAIe,EAAMgxB,WACC/xB,GAEH,IAEX2qB,OAAO,SAAA5pB,GAAK,OAAc,GAAVA,IAAa,GAElC4yB,QAASpE,EAAYoE,QAAQlxB,IAAI,SAAA1B,GAC7B,MAAO,CACH+wB,QAAS/wB,EAAM+wB,QACfrzB,KAAM,IAAIC,KAAKqC,EAAMtC,MACrBo4B,aAAckO,WAAWhkC,EAAM61B,kBAGvCE,eAAgBvH,EAAYqE,mBAAmBnxB,IAAI,SAAA1B,GAC/C,MAAO,CACH+yB,SAAU/yB,EAAM8yB,UAChBmD,KAAMj2B,EAAMgzB,WACZC,WAAYjzB,EAAM2xB,UAG1Bf,UAAWpC,EAAYoC,UAAUlvB,IAAI,SAAA1B,GACjC,MAAO,CACH2wB,UAAW,CAAE3wB,MAAOA,EAAM6wB,WAAYnsB,MAAO1E,EAAM2wB,WACnDI,QAAS/wB,EAAM+wB,QACfoF,QAASn2B,EAAMixB,SACfoG,UAAWr3B,EAAMgxB,cAGzBoF,YAAY,MAAG6N,OAAH,qBAAazV,EAAYoC,UAAUlvB,IAAI,SAAAivB,GAC/C,OAAOA,EAAUO,QAAQxvB,IAAI,SAAAkwB,GACzB,MAAO,CACHyE,UAAW,CACPr2B,MAAO,GACP0E,MAAOktB,EAAO7c,KACdqe,OAAQ,CAACxB,EAAOT,eAAgBS,EAAOrxB,OAE3CowB,UAAW,CAAE3wB,MAAO2wB,EAAUE,WAAYnsB,MAAOisB,EAAUA,WAC3DI,QAASa,EAAOb,QAChBuF,OAAQ1E,EAAOP,aACfM,OAAQC,EAAOR,WAI3BE,YAAY,MAAG2S,OAAH,qBAAazV,EAAYoC,UAAUlvB,IAAI,SAAAivB,GAC/C,OAAOA,EAAUW,WAAW5vB,IAAI,SAAA6vB,GAC5B,MAAO,CACHA,UAAW,CAAEvxB,MAAOuxB,EAAUE,SAAU/sB,MAAO6sB,EAAUG,gBACzDf,UAAW,CAAE3wB,MAAO2wB,EAAUE,WAAYnsB,MAAOisB,EAAUA,WAC3D0F,UAAW,CAAEr2B,MAAO,GAAI0E,MAAO6sB,EAAUK,QACzCl0B,KAAM,IAAIC,KAAK4zB,EAAUQ,YACzBhB,QAASQ,EAAU3Z,MACnB+Z,OAAQhuB,SAAS4tB,EAAUI,eAIvCxd,MAAOqa,EAAY6E,OAAO3xB,IAAI,SAAA1B,GAC1B,MAAO,CACH+U,KAAM/U,EAAMu2B,UACZh2B,KAAM,CAAEP,MAAO,GAAI0E,MAAO1E,EAAMO,MAChCoxB,OAAQ3xB,EAAM2xB,UAGtBmL,MAAOv7B,EAASwuB,qBAAqBruB,IAAI,SAAA1B,GACrC,MAAO,CACHy1B,QAASz1B,EAAMw1B,SACfxF,KAAMhwB,UAhiC1B,K,6NCqCO,IAAMkkC,GAAb,YAOI,WAAYtkC,GAAgB,IAAD,+BACvB,8CAAMA,KANV6c,aAK2B,IAJ3BF,aAI2B,IAH3B0O,cAG2B,IAF3BkZ,aAE2B,IAwC3BC,cAAgB,SAAC/iC,GACbF,KAAIC,IAAJ,gCAAiCC,GAC7B,SAACE,GACGC,QAAQC,IAAIF,GACR,EAAK3B,MAAMykC,2BAA6B,EAAKzkC,MAAM0kC,4BACnD,EAAK1kC,MAAM0kC,+BAA0BlkC,GACrC,EAAKR,MAAMykC,0BAA0B/V,GAAS8V,cAAc7iC,IAC5DgjC,IACA,EAAKC,qBAAqBnjC,IAE9B,EAAKQ,SAAS,CAAC4iC,eAAe,KAElC,SAACxkC,GACGuB,QAAQC,IAAIxB,KAGpB,IAAMskC,EAAmB,WACrB,EAAK1iC,SAAS,CAACkqB,iBAAiB,IAChC5qB,KAAIC,IAAJ,gCAAiCC,EAAjC,aACI,SAACE,GACG,EAAK0pB,SACDyZ,EACInjC,EAASqoB,OAAO,SAAAjoB,GAAO,OAAqB,GAAjBA,EAAQu6B,QACnC36B,EAASqoB,OAAO,SAAAjoB,GAAO,OAAqB,GAAjBA,EAAQu6B,SAEtCx6B,IAAI,SAAAC,GACD,O,wVAAO,EACHgjC,SAAUhjC,EAAQijC,YAClB7vB,KAAMpT,EAAQoT,MACVpT,EAAQqpB,OAAOxuB,OAAS,EACxB,CACI6uB,UAAW1pB,EAAQqpB,OAAO,GAAGzqB,KAC7B6qB,MAAOzpB,EAAQqpB,OAAO,GAAGI,MACzBa,UAAWtqB,EAAQqpB,OAAO,GAAG6Z,iBAC7BzkC,KAIpB,EAAKyB,SAAS,CAACkqB,iBAAiB,KAEpC,SAAC9rB,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CAACkqB,iBAAiB,OAItC2Y,EAAe,SAACI,EAAkBC,GAkBpC,OAjBcD,EAAY1c,OAAQ,SAAC7a,EAAQy3B,GAcvC,OAbAA,EAAOt0B,SAAShP,IAAK,SAACujC,GACtB,IAAIC,EAAaH,EAAW1wB,KAAM,SAAC8wB,GAAD,OAAeF,IAAUE,EAAUvjC,MAErE,GAAIsjC,EAAY,CACZ,IAAID,EAAQ79B,OAAO+E,OAAO,GAAI+4B,GAE9BD,EAAK,YAAkBD,EAAOjwB,KAC9BkwB,EAAK,YAAkBD,EAAOjH,KAC9BkH,EAAK,UAAe,EACpB13B,EAAOiB,KAAKy2B,MAIT13B,GACR,IAAI7B,SAtGY,EA4G3BwsB,cAAgB,SAAC52B,GACbH,KAAIC,IAAJ,gCAAiCE,GAC7B,SAACC,GACGC,QAAQC,IAAIF,GACR,EAAK3B,MAAM0kC,2BAA6B,EAAK1kC,MAAMykC,4BACnD,EAAKzkC,MAAMykC,+BAA0BjkC,GACrC,EAAKR,MAAM0kC,0BAA0BhW,GAAS4J,cAAc32B,IAC5D,EAAKijC,qBAAqBljC,GAC1B,EAAK4rB,qBAAqB5rB,IAE9B,EAAKO,SAAS,CAACujC,eAAe,KAElC,SAACnlC,GACGuB,QAAQC,IAAIxB,MAzHG,EA6H3BukC,qBAAuB,SAACa,GACf,EAAKpkC,MAAMmrB,sBACZ,EAAKvqB,SAAS,CACVuqB,sBAAsB,EACtBC,cAAe,KAIvB,IAAMzC,EAAS,CACX0b,MAAO,CACH,IAAO,CACH,CAAEzQ,UAAWwQ,GACb,CAAElQ,UAAWkQ,MAKzBlkC,KAAIC,IAAJ,uCAAwC+B,KAAKC,UAAUwmB,IACnD,SAAClN,GACOA,IACAA,EAAQhb,IAAI,SAAAusB,GACRsX,EAAyBtX,KAE7B,EAAKpsB,SAAS,CAACuqB,sBAAsB,MAG7C,SAACnsB,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CAACuqB,sBAAsB,MAI7C,IAAMmZ,EAA2B,SAACtX,GAC9BnB,GAAa1rB,IAAI,qBACb,SAACokC,GACG,IAAMC,EAAcD,EAAM5b,OAAO,SAAA8b,GAAQ,OAAIA,EAASC,UAAY1X,EAAOmG,kBAAiB,GACtFqR,GAAe,EAAKxkC,MAAMorB,gBAC1B,EAAKprB,MAAMorB,cAAc7d,KAAK,CAC1Boe,SACI1wB,KAAe0pC,qBACX3X,EAAOiC,gBAAgBC,YACvBlC,EAAOiC,gBAAgBE,cACvBqV,EAAYI,YAEpBrmC,aAAuD,mBAAzCyuB,EAAOiC,gBAAgBE,cACjCnC,EAAOiC,gBAAgBE,cAEvBnC,EAAOiC,gBAAgBC,YAE3BjnB,OAAQ+kB,EAAO/kB,OACfglB,YAAa,IAAIvwB,KAAKswB,EAAOoG,cAC7BxH,YAAa,IAAIlvB,KAAKswB,EAAOqG,gBAEjC,EAAKzyB,SAAS,CAACwqB,cAAe,EAAKprB,MAAMorB,kBAGjD,SAACpsB,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CAACuqB,sBAAsB,QAvL1B,EA8L3Bc,qBAAuB,SAACmY,GACf,EAAKpkC,MAAM6kC,sBACZ,EAAKjkC,SAAS,CAACikC,sBAAsB,IAGrC,EAAK7kC,MAAM+rB,gBACX,EAAK/rB,MAAM+rB,cAAcxe,KAAK,CAC1Boe,SAAU,gBACVptB,aAAc,QACd0J,OAAQ,QACRglB,YAAa,IAAIvwB,KACjBkvB,YAAa,IAAIlvB,OAErB,EAAKkE,SAAS,CAACmrB,cAAe,EAAK/rB,MAAM+rB,gBACzCxrB,QAAQC,IAAI,gBAAiB,EAAKR,MAAM+rB,gBAE5C,EAAKnrB,SAAS,CAACikC,sBAAsB,KA9Md,EAiN3BC,gBAAkB,SAAC/lC,GAEf,IAmFMgmC,EAAehmC,EAAM3C,QAAQ,KAAM,IACnC4oC,EAA+C,cAAlC,EAAKhlC,MAAMilC,aAAaxhC,MA1ErB,SAACpH,GACnB,IAAM6oC,EAAuB,GAI7B,OAHAA,EAAW33B,KAAKlR,EAAK2G,MAAM,EAAG,IAC9BkiC,EAAW33B,KAAKlR,EAAK2G,MAAM,EAAG,IAC9BkiC,EAAW33B,KAAKlR,EAAK2G,MAAM,EAAG,IACvBkiC,EAAWvc,OAAO,SAAAtsB,GAAI,MAAa,KAATA,IAsEjC8oC,CAAcJ,GArFI,SAAC1oC,GACnB,IAAM6oC,EAAuB,GAM7B,OALAA,EAAW33B,KAAKlR,EAAK2G,MAAM,EAAG,IAC9BkiC,EAAW33B,KAAKlR,EAAK2G,MAAM,EAAG,IAC9BkiC,EAAW33B,KAAKlR,EAAK2G,MAAM,EAAG,IAC9BkiC,EAAW33B,KAAKlR,EAAK2G,MAAM,EAAG,KAC9BkiC,EAAW33B,KAAKlR,EAAK2G,MAAM,GAAI,KACxBkiC,EAAWvc,OAAO,SAAAtsB,GAAI,MAAa,KAATA,IAgFjC+oC,CAAcL,GAEZM,EAAWL,EAAaA,EAAWrpC,KAAK,KAAO,GACrD,EAAKiF,SAAS,CAAC0kC,cAAeD,IAEQ,cAAlC,EAAKrlC,MAAMilC,aAAaxhC,OApCpBshC,EAAaxpC,QAAU,IACvB,EAAKqF,SAAS,CAAC2kC,gBAAgB,IAC/BrlC,KAAIC,IAAJ,yEAA0EklC,GACtE,SAAC/kC,GACGC,QAAQC,IAAIF,GACZ,EAAKkb,QAAUlb,EAASG,IAAI,SAAA6pB,GACxB,MAAO,CACHnY,GAAImY,EAAO3pB,IACXN,SAAUiqB,EAAOqO,qBACjBvP,WAAYkB,EAAO8J,mBAG3B,EAAKxzB,SAAS,CACV4kC,iBAAiB,EACjBD,gBAAgB,KAGxB,SAACvmC,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CACV4kC,iBAAiB,EACjBD,gBAAgB,OAmBE,cAAlC,EAAKvlC,MAAMilC,aAAaxhC,OA7EpBshC,EAAaxpC,QAAU,KACvB,EAAKqF,SAAS,CAAC6kC,gBAAgB,IAC/BvlC,KAAIC,IAAI,kEAC8BklC,EAD9B,+NAOJ,SAAC/kC,GACGC,QAAQC,IAAIF,GACZ,EAAKgb,QAAUhb,EAASG,IAAI,SAAAooB,GACxB,MAAO,CACHzoB,SAAUyoB,EAAO+K,UACjB5K,UAAWH,EAAOoL,WAClBhL,WAAYJ,EAAOmL,YACnB9K,SAAUL,EAAOkL,UACjB3K,WAAYP,EAAOyB,OAAO8J,gBAC1BvJ,MAAOhC,EAAOiL,UAGtB,EAAKlzB,SAAS,CACV8kC,iBAAiB,EACjBD,gBAAgB,KAGxB,SAACzmC,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CACV8kC,iBAAiB,EACjBD,gBAAgB,QAjQpC,EAAKzlC,MAAQ,CACTslC,cAAe,GACfL,aAAc,CAAElmC,MAAO,GAAI0E,MAAO,IAClCiiC,iBAAiB,EACjBD,gBAAgB,EAChBjC,eAAe,EACf1Y,iBAAiB,EACjB0a,iBAAiB,EACjBD,gBAAgB,EAChBpB,eAAe,EACfhZ,sBAAsB,EACtB0Z,sBAAsB,GAG1B,EAAKrpB,QAAU,GACf,EAAKF,QAAU,GACf,EAAK0O,SAAW,GAEhB,EAAKkZ,QAAU,CACX,CAAEnkC,MAAO,IAAK0E,MAAO,aACrB,CAAE1E,MAAO,IAAK0E,MAAO,cAvBF,EAP/B,mFAkCwB9E,EAAeC,GAC/B,IAAKC,KAAKF,MAAM2rB,SAAWzrB,KAAKF,MAAMkqB,SAC9BlqB,EAAM2rB,QAAU3rB,EAAMkqB,SAClBhqB,KAAKF,MAAMquB,OAAQ,CACnB,IAAMoX,EACFzlC,EAAMkqB,OAASlqB,EAAMkqB,OAAOzoB,SAC5BzB,EAAM2rB,OAAS3rB,EAAM2rB,OAAO4B,mBAAqB,GACrDrtB,KAAK0kC,qBAAqBa,MAzC9C,+BAuUQ,OACI,uBAAKhlC,UAAU,eACkB,WAA5BP,KAAKF,MAAMgnC,aACR,2BACK9mC,KAAK+mC,mBACN,uBAAKxmC,UAAU,iBAES,WAA5BP,KAAKF,MAAMgnC,cACiB,YAA5B9mC,KAAKF,MAAMgnC,aACX9mC,KAAKgnC,gBACL,KACHhnC,KAAKF,MAAMkqB,OACR,gBAAC,GAAD,CACIA,OAAQhqB,KAAKF,MAAMkqB,OACnBmB,SAAUnrB,KAAKmrB,SACfoB,cAAevsB,KAAKmB,MAAMorB,cAC1BN,gBAAiBjsB,KAAKmB,MAAM8qB,gBAC5BK,qBAAsBtsB,KAAKmB,MAAMmrB,uBACrCtsB,KAAKF,MAAM2rB,OACX,gBAAC,GAAD,CACIA,OAAQzrB,KAAKF,MAAM2rB,OACnBc,cAAevsB,KAAKmB,MAAMorB,cAC1BW,cAAeltB,KAAKmB,MAAM+rB,cAC1BC,qBAAsBntB,KAAKF,MAAMqtB,qBACjCb,qBAAsBtsB,KAAKmB,MAAMmrB,qBACjC0Z,qBAAsBhmC,KAAKmB,MAAM6kC,qBACjC5Y,qBAAsBptB,KAAKotB,uBAE/B,gCACCptB,KAAKmB,MAAMwjC,eAAiB3kC,KAAKmB,MAAMmkC,cACpC,gBAAC,GAAD,CAAShjC,OAAO,SAChB,KACHtC,KAAKF,MAAMmnC,mBACR,uBAAK1mC,UAAU,UAAUG,MAAO,CAACmK,MAAO,YAAxC,8DAGA,MAIP7K,KAAKF,MAAMquB,OACRnuB,KAAKknC,iBAAiBlnC,KAAKF,MAAMquB,QAChC,KACL,uBAAK5tB,UAAU,eAlX/B,yCAyXqC,IAAD,OAC5B,OACI,uBAAKA,UAAU,WACX,gBAACie,GAAA,EAAD,CAAaje,UAAU,gBACnB,gBAACua,EAAA,EAAD,CAAM9R,KAAK,mBAAX,WACA,uBAAKzI,UAAU,gBAAf,oBAGJ,uBAAKA,UAAU,YAAf,iBAEA,uBAAKG,MAAO,CAAC4F,SAAU,aACnB,gBAAC,GAAD,CACIrG,YAAY,YACZQ,KAAMT,KAAKmB,MAAMilC,aACjBlmC,MAAOF,KAAKmB,MAAMslC,cAClB7b,QAAS5qB,KAAKqkC,QACdvZ,aAAc,SAACrqB,GACX,EAAKsB,SAAS,CAACqkC,aAAc3lC,KAEjCsqB,cAAe,SAAC7qB,GACZ,EAAK+lC,gBAAgB/lC,MAG5BF,KAAKmB,MAAMylC,gBAAmB5mC,KAAKmB,MAAMulC,eACtC,uBAAKhmC,MAAO,CAAC4F,SAAU,WAAYE,MAAO,MAAOC,OAAQ,SACrD,gBAAC,GAAD,CAASnE,OAAO,OAAO0D,KAAM,MAEjC,MAG2B,cAAlChG,KAAKmB,MAAMilC,aAAaxhC,MACrB,gBAAC,GAAD,CACIqlB,WAAYjqB,KAAKmB,MAAMslC,cACvBhqB,QAASzc,KAAKyc,QACd6N,eAAgB,SAAC/oB,GACb,EAAK+iC,cAAc/iC,GACf,EAAKzB,MAAMykC,2BACX,EAAKzkC,MAAMykC,+BAA0BjkC,GAEzC,EAAKyB,SAAS,CACV0kC,cAAe,GACf9B,eAAe,EACfpY,cAAe,QAIO,cAAlCvsB,KAAKmB,MAAMilC,aAAaxhC,MACxB,gBAAC,GAAD,CACIqlB,WAAYjqB,KAAKmB,MAAMslC,cACvB9pB,QAAS3c,KAAK2c,QACd4R,eAAgB,SAAC/sB,GACb,EAAK42B,cAAc52B,GACf,EAAK1B,MAAM0kC,2BACX,EAAK1kC,MAAM0kC,+BAA0BlkC,GAEzC,EAAKyB,SAAS,CACV0kC,cAAe,GACfnB,eAAe,EACf/Y,cAAe,GACfW,cAAe,QAI3B,KAEJ,gBAAC,GAAD,CACInnB,KAAMohC,IACNviC,MAAM,kBACNkB,QAAS,kBA7b7B,sCAscQ,OACI,uBAAKvF,UAAU,WACX,gBAACie,GAAA,EAAD,CAAaje,UAAU,gBACnB,gBAACua,EAAA,EAAD,CAAM9R,KAAK,mBAAX,WACA,gBAAC8R,EAAA,EAAD,CAAMva,UAAU,gBAAgBP,KAAKF,MAAMgnC,aAAalqC,cAAgB,YAG3EoD,KAAKF,MAAMquB,OACR,wBAAM5tB,UAAU,YAAhB,UACQP,KAAKF,MAAMgnC,aADnB,mBAC0C9mC,KAAKF,MAAMquB,OAAOrB,WAE5D,QAjdpB,uCAwdqBqB,GACb,OACI,uBAAK5tB,UAAU,WACX,uBAAKA,UAAU,eACX,uBAAKA,UAAU,cAAf,eACA,uBAAKA,UAAU,cAAc4tB,EAAO1uB,aAExC,uBAAKc,UAAU,eACX,uBAAKA,UAAU,cAAf,iBACA,uBAAKA,UAAU,cAAc4tB,EAAOzuB,eAExC,uBAAKa,UAAU,eACX,uBAAKA,UAAU,cAAf,WACA,uBAAKA,UAAU,cAAc4tB,EAAOoC,UAExC,uBAAKhwB,UAAU,eACX,uBAAKA,UAAU,cAAf,eACA,uBAAKA,UAAU,cAAc4tB,EAAOsC,MAAMxb,OAE9C,uBAAK1U,UAAU,eACX,uBAAKA,UAAU,cAAf,gBACA,uBAAKA,UAAU,cAAc4tB,EAAOgB,eAExC,uBAAK5uB,UAAU,eACX,uBAAKA,UAAU,cAAf,iBACA,uBAAKA,UAAU,cAAc4tB,EAAO0B,aAExC,uBAAKtvB,UAAU,eACX,uBAAKA,UAAU,cAAf,gBACA,uBAAKA,UAAU,cAAc4tB,EAAOH,YAExC,uBAAKztB,UAAU,eACX,uBAAKA,UAAU,cAAf,wBACA,uBAAKA,UAAU,cAAc4tB,EAAOY,gBAExC,uBAAKxuB,UAAU,eACX,uBAAKA,UAAU,cAAf,cACA,uBAAKA,UAAU,cAAc4tB,EAAOuG,UAAUzf,OAElD,uBAAK1U,UAAU,eACX,uBAAKA,UAAU,cAAf,yBACA,uBAAKA,UAAU,cAAcnE,KAAegrC,cAAcjZ,EAAOC,eAErE,uBAAK7tB,UAAU,eACX,uBAAKA,UAAU,cAAf,8BACA,uBAAKA,UAAU,cAAcnE,KAAegrC,cAAcjZ,EAAOpB,oBArgBrF,GAAsC/rB,a,SC9BzBqmC,GAAb,YAEI,WAAYvnC,GAAgB,IAAD,+BACvB,8CAAMA,KAEDqB,MAAQ,CACTjB,MAAO,IAJY,EAF/B,qFAU0BJ,EAAeC,GACjC,OACKC,KAAKF,MAAMG,cAAgBH,EAAMG,aACjCD,KAAKF,MAAMU,WAAaV,EAAMU,UAC9BR,KAAKF,MAAMI,QAAUJ,EAAMI,OAC3BF,KAAKF,MAAM8qB,UAAY9qB,EAAM8qB,SAC7B5qB,KAAKF,MAAMK,QAAUL,EAAMK,QAhBxC,+BAoB2B,IAAD,OAElB,OACI,uBAAKI,UAAU,YACVP,KAAKF,MAAMG,YACR,uBAAKM,UAAWP,KAAKF,MAAMU,SAAW,qBAAuB,QACxDR,KAAKF,MAAMG,aAEhB,KAEJ,gBAAC,KAAD,CACIM,UAAU,kBACVoqB,gBAAiB3qB,KAAKF,MAAMK,MAAQ,wBAA0B,kBAC9DmnC,aAAYtnC,KAAKF,MAAMU,UAAWR,KAAKF,MAAMU,SAC7CN,MAAOF,KAAKF,MAAMI,MAClBwS,QAAS1S,KAAKF,MAAM8qB,QACpB2c,cAAe,SAACrnC,EAAeiQ,GAC3B,EAAKpO,SAAS,CAAC7B,MAAOA,KAE1B4P,iBAAkB,WACd,OACkC,IAA9B,EAAKhQ,MAAM8qB,QAAQluB,OACf,aAEA,EAAKyE,MAAMjB,MAAMxD,OAAS,EACtB,wCAEA,cAKhB8qC,aAAc,SAACC,EAAgBC,GAC3B,IAAMC,EAAkC,IAApBD,EAAShrC,OACvBkrC,EAAmB,EAAK9nC,MAAM8qB,QAAQluB,QAAU,GAChDmrC,EAAgBH,EAAShrC,OAAS,EAClCorC,EAAgBL,EAAO7iC,MAAMrI,cAAcqoB,SAAS8iB,EAASnrC,eACnE,OAAIqrC,IACID,GAGGG,GAEFD,GACMC,GAKnBnnC,SAAU,SAACkqB,GACP,EAAK/qB,MAAMa,SAASkqB,WAtE5C,GAA8B7pB,aCEjB+mC,GAAb,YAEI,WAAYjoC,GAAgB,IAAD,+BACvB,8CAAMA,KAEDqB,MAAQ,CACTjB,MAAO,IAJY,EAF/B,qFAU0BJ,EAAeC,GACjC,OACIC,KAAKF,MAAM8qB,QAAQluB,SAAWoD,EAAM8qB,QAAQluB,QAC5CsD,KAAKF,MAAMI,MAAMA,QAAUJ,EAAMI,MAAMA,QAbnD,+BAiB2B,IAAD,OAClB,OACI,uBAAKK,UAAU,qBACVP,KAAKF,MAAMG,YACR,uBAAKM,UAAU,QAAQP,KAAKF,MAAMG,aAClC,KAEJ,uBAAKM,UAAU,gBACX,uBAAKA,UACDP,KAAKF,MAAMU,SAAW,kBACtBR,KAAKF,MAAMK,MAAQ,eAAiB,UACnCH,KAAKF,MAAMi0B,OAAS/zB,KAAKF,MAAMi0B,OAAS/zB,KAAKF,MAAMI,MAAMA,MAAQF,KAAKF,MAAMI,MAAMA,MAAQ,MAE/F,gBAAC,KAAD,CACIK,UAAU,kBACVoqB,gBAAiB3qB,KAAKF,MAAMK,MAAQ,wBAA0B,kBAC9DmnC,aAAYtnC,KAAKF,MAAMU,UAAWR,KAAKF,MAAMU,SAC7CN,MAAOF,KAAKF,MAAMI,MAClBwS,QAAS1S,KAAKF,MAAM8qB,QACpB2c,cAAe,SAACrnC,EAAeiQ,GAC3B,EAAKpO,SAAS,CAAC7B,MAAOA,KAE1B4P,iBAAkB,WACd,OACkC,IAA9B,EAAKhQ,MAAM8qB,QAAQluB,OACf,aAEA,EAAKyE,MAAMjB,MAAMxD,OAAS,EACtB,wCAEA,cAKhB8qC,aAAc,SAACC,EAAgBC,GAC3B,IAAMC,EAAkC,IAApBD,EAAShrC,OACvBkrC,EAAmB,EAAK9nC,MAAM8qB,QAAQluB,QAAU,GAChDmrC,EAAgBH,EAAShrC,OAAS,EAClCorC,EAAgBL,EAAO7iC,MAAMrI,cAAcqoB,SAAS8iB,EAASnrC,eACnE,OAAIqrC,IACID,GAGGG,GAEFD,GACMC,GAKnBnnC,SAAU,SAACkqB,GACP,EAAK/qB,MAAMa,SAASkqB,YAtEhD,GAAsC7pB,aCFzBgnC,GAAb,YAEI,WAAYloC,GAAgB,IAAD,+BACvB,8CAAMA,KAEDqB,MAAQ,CAETjB,MAAO,EAAKJ,MAAMI,MAAM5C,YALL,EAF/B,yFAW8BwC,GACtB,IAAImoC,EAAiBnoC,EAAMI,MAAQJ,EAAMI,MAAM5C,WAAWC,QAAQ,0BAA2B,OAAS,GAE7C,MAArD0qC,EAAetrC,OAAOsrC,EAAevrC,OAAS,KAC9CurC,EAAiBnoC,EAAMI,MAAM7C,QAAQ,GAAGE,QAAQ,0BAA2B,QAG3E0qC,IAAmBjoC,KAAKmB,MAAMjB,OAC9BF,KAAK+B,SAAS,CAAC7B,MACXF,KAAKF,MAAMooC,SAAoE,MAAzDloC,KAAKmB,MAAMjB,MAAMvD,OAAOqD,KAAKmB,MAAMjB,MAAMxD,OAAS,GAAxE,UACOurC,EADP,KAEIA,MAtBpB,+BA0B2B,IAAD,OACZ7nC,EAAe,CACjBC,YAAcL,KAAKF,MAAMK,MAAQ,eAAYG,GAGjD,OACI,uBAAKC,UAAU,wBACVP,KAAKF,MAAMG,YACR,uBAAKM,UAAU,QAAQP,KAAKF,MAAMG,aAClC,KACJ,uBAAKM,UAAU,eACX,yBACIA,UAAU,kBACVG,MAAON,EACPF,MAAOF,KAAKmB,MAAMjB,MAClBioC,QAAS,WACmB,GAApB,EAAKroC,MAAMI,OACX,EAAK6B,SAAS,CAAC7B,MAAO,MAG9BS,SAAU,SAACC,GACP,IAAIV,EAAQU,EAAME,OAAOZ,MACrBkoC,EAAclE,WAAWhkC,EAAM3C,QAAQ,OAAQ,KAC9C8qC,MAAMD,KACPA,EAAcA,EAAc,IAAaA,EAAc,EAAKtoC,MAAMI,OAEtE,IAKMooC,GALaD,MAAMD,GAIrB,GAHA,EAAKtoC,MAAMooC,SAA8C,MAAnChoC,EAAMvD,OAAOuD,EAAMxD,OAAS,GAAlD,UACO0rC,EADP,KAEIA,EAAY9qC,YAEeC,QAAQ,0BAA2B,OACtE,EAAKwE,SAAS,CAAC7B,MAAOooC,GAAiB,WAC/B,EAAKxoC,MAAMooC,QACX,EAAKpoC,MAAMa,SAAU0nC,MAAMD,GAA6B,EAAdA,QAM1D,uBAAK7nC,UAAS,iBAAYP,KAAKF,MAAMK,MAAQ,QAAU,GAAzC,WACTH,KAAKF,MAAMi0B,cAnEpC,GAAyC/yB,a,6BCN5BunC,GAAb,mMAE0BzoC,EAAeC,GACjC,OACKC,KAAKF,MAAMG,cAAgBH,EAAMG,aACjCD,KAAKF,MAAMI,QAAUJ,EAAMI,QALxC,+BAS2B,IAAD,OAClB,OACI,uBAAKK,UAAU,eACVP,KAAKF,MAAMG,YACR,uBAAKM,UAAU,QAAQP,KAAKF,MAAMG,aAClC,KACJ,gBAAC,KAAD,CAAyBuoC,MAAOC,MAC5B,gBAAC,KAAD,CACIloC,UAAWP,KAAKF,MAAMU,SAAW,iCAAmC,aACpEA,SAAUR,KAAKF,MAAMU,SACrB4Q,QAAQ,SACRs3B,OAAO,aACPC,QAAS3oC,KAAKF,MAAM6oC,QAAU3oC,KAAKF,MAAM6oC,QAAU,IAAI9qC,KAAK,KAAM,EAAG,GACrEqC,MAAOF,KAAKF,MAAMI,MAClBS,SAAU,SAAC/C,GACP,EAAKkC,MAAMa,SAAS/C,EAAOA,EAAKkB,SAAW,eAxBvE,GAAgCkC,aCMnB4nC,GAAb,YAII,WAAY9oC,GAAgB,IAAD,+BACvB,8CAAMA,KAHV+oC,sBAE2B,EAGvB,EAAKA,iBAAmB,CACpB,CAAE3oC,MAAO,IAAK0E,MAAO,wBACrB,CAAE1E,MAAO,IAAK0E,MAAO,8BALF,EAJ/B,wEAa2B,IAAD,OACZ8pB,EAAc1uB,KAAKF,MAAM4uB,YAC/B,OACI,uBAAKnuB,UAAU,uBACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,eACX,uBAAKA,UAAU,YAAf,uBACA,gBAAC,GAAD,CACIqqB,QAAS5qB,KAAKF,MAAMgpC,WACpB7oC,YAAY,WACZC,MAAOwuB,EAAYiC,SACnBxwB,MACIH,KAAKF,MAAMipC,oBACoB,KAA/Bra,EAAYiC,SAASzwB,MACzBS,SAAU,SAACT,GACP,EAAKJ,MAAM4uB,YAAYiC,SAAWzwB,EAClC,EAAKJ,MAAMkpC,6BAEnB,gBAACxwB,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,gBACZC,MAAOwuB,EAAYgE,aACnB/xB,SAAU,SAACT,GACP,EAAKJ,MAAM4uB,YAAYgE,aAAexyB,EACtC,EAAKJ,MAAMkpC,8BAGvB,gBAACxwB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,sBACZ2qB,QAAS5qB,KAAK6oC,iBACd3oC,MAAO,CAAEA,MAAO,GAAI0E,MAAO8pB,EAAYkE,iBACvCzyB,MACIH,KAAKF,MAAMipC,oBACqB,KAAhCra,EAAYkE,gBAChBjyB,SAAU,SAACT,GACP,EAAKJ,MAAM4uB,YAAYkE,gBAAkB1yB,EAAM0E,MAC/C,EAAK9E,MAAMkpC,8BAGvB,gBAACxwB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC7Y,GAAA,EAAD,CACII,YAAY,YACZC,MAAOwuB,EAAYuE,SACnB9yB,MACIH,KAAKF,MAAMipC,oBACc,KAAzBra,EAAYuE,SAChBtyB,SAAU,SAACT,GACP,EAAKJ,MAAM4uB,YAAYuE,SAAW/yB,EAClC,EAAKJ,MAAMkpC,8BAGvB,gBAACxwB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,eACZC,MAAOwuB,EAAYyE,WACnBY,OAAQ,MACRmU,SAAS,EACTvnC,SAAU,SAACT,GACP,EAAKJ,MAAM4uB,YAAYyE,WAAajzB,EACpC,EAAKJ,MAAMkpC,8BAGvB,gBAACxwB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,sBACZ2qB,QAAS5qB,KAAKF,MAAMsxB,QACpBlxB,MAAOwuB,EAAYoD,OACnB3xB,MACIH,KAAKF,MAAMipC,oBACkB,KAA7Bra,EAAYoD,OAAO5xB,MACvBS,SAAU,SAACT,GACP,EAAKJ,MAAM4uB,YAAYoD,OAAS5xB,EAChC,EAAKJ,MAAMkpC,8BAGvB,gBAACxwB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,oBACZ2qB,QAAS5qB,KAAKF,MAAMmpC,SACpB/oC,MAAOwuB,EAAY2E,iBACnBlzB,MACIH,KAAKF,MAAMipC,oBAC4B,KAAvCra,EAAY2E,iBAAiBnzB,MACjCS,SAAU,SAACT,GACP,EAAKJ,MAAM4uB,YAAY2E,iBAAmBnzB,EAC1C,EAAKJ,MAAMkpC,8BAGvB,gBAACxwB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,SACZC,MAAOwuB,EAAYmD,OACnBkC,OAAQ,MACRmU,SAAS,EACTvnC,SAAU,SAACT,GACP,EAAKJ,MAAM4uB,YAAYmD,OAAS3xB,EAChC,EAAKJ,MAAMkpC,gCAK/B,uBAAKzoC,UAAU,iBApH/B,GAAwCS,aCF3BkoC,GAAb,YAEI,WAAYppC,GAAgB,IAAD,+BACvB,8CAAMA,KAEDqB,MAAQ,CACTjB,MAAO,EAAKJ,MAAMI,MAAM5C,YAJL,EAF/B,yFAU8BwC,GACtB,IAAImoC,EAAiBnoC,EAAMI,MACtBF,KAAKF,MAAMqpC,iBAERrpC,EAAMI,MAAM5C,WADZwC,EAAMI,MAAM5C,WAAWC,QAAQ,0BAA2B,OAChC,GAEuB,MAArD0qC,EAAetrC,OAAOsrC,EAAevrC,OAAS,KAC9CurC,EAAiBnoC,EAAMI,MAAM7C,QAAQ,GAAGE,QAAQ,0BAA2B,QAG3E0qC,IAAmBjoC,KAAKmB,MAAMjB,OAC9BF,KAAK+B,SAAS,CAAC7B,MACXF,KAAKF,MAAMooC,SAAoE,MAAzDloC,KAAKmB,MAAMjB,MAAMvD,OAAOqD,KAAKmB,MAAMjB,MAAMxD,OAAS,GAAxE,UACOurC,EADP,KAEIA,MAxBpB,+BA4B2B,IAAD,OAEZ7nC,EAAe,CACjBC,YAFUL,KAAKF,MAEKK,MAAQ,eAAYG,GAG5C,OACI,uBAAKC,UAAU,yBACVP,KAAKF,MAAMG,YACR,uBAAKM,UAAU,QAAQP,KAAKF,MAAMG,aAClC,KACJ,yBACIM,UAAU,aACVG,MAAON,EACPF,MAAOF,KAAKmB,MAAMjB,MAClBioC,QAAS,WACmB,GAApB,EAAKroC,MAAMI,OACX,EAAK6B,SAAS,CAAC7B,MAAO,MAG9BS,SAAU,SAACC,GACP,IAAIV,EAAQU,EAAME,OAAOZ,MACrBkoC,EAAclE,WAAWhkC,EAAM3C,QAAQ,OAAQ,KAC9C8qC,MAAMD,KACPA,EAAcA,EAAc,IAAaA,EAAc,EAAKtoC,MAAMI,OAEtE,IAKMooC,GALaD,MAAMD,GAIrB,GAHA,EAAKtoC,MAAMooC,SAA8C,MAAnChoC,EAAMvD,OAAOuD,EAAMxD,OAAS,GAAlD,UACO0rC,EADP,KAEIA,EAAY9qC,YAEeC,QAAQ,0BAA2B,OACtE,EAAKwE,SAAS,CAAC7B,MAAO,EAAKJ,MAAMqpC,iBAAmBf,EAAY9qC,WAAagrC,GAAiB,WACtF,EAAKxoC,MAAMooC,QACX,EAAKpoC,MAAMa,SAAU0nC,MAAMD,GAA6B,EAAdA,aA9D1E,GAAiCpnC,aCLpBooC,GAAb,mMAE0BtpC,EAAeC,GACjC,OACKC,KAAKF,MAAMG,cAAgBH,EAAMG,aACjCD,KAAKF,MAAMI,QAAUJ,EAAMI,QALxC,+BAS2B,IAAD,OAClB,OACI,uBAAKK,UAAU,kBACVP,KAAKF,MAAMG,YACR,uBAAKM,UAAU,QAAQP,KAAKF,MAAMG,aAClC,KACJ,gBAAC4X,EAAA,EAAD,CACItX,UAAU,YACVqX,QAAS5X,KAAKF,MAAMI,MACpBM,SAAUR,KAAKF,MAAMU,SACrBG,SAAU,SAACC,GACP,EAAKd,MAAMa,SAASC,EAAME,OAAO8W,YAExC5X,KAAKF,MAAM8E,MACR,wBAAMrE,UAAU,QAAQP,KAAKF,MAAM8E,OACnC,UAxBpB,GAAoC5D,a,SCoBvBqoC,GAAb,YAEI,WAAYvpC,GAAgB,IAAD,+BACvB,8CAAMA,KAEDqB,MAAQ,CACT6vB,UAAW,CAAE9wB,MAAO,GAAI0E,MAAO,IAC/BktB,OAAQ,CAAE5xB,MAAO,GAAI0E,MAAO,IAE5B0kC,iBAAkB,EAClBC,gBAAiB,CAAErpC,MAAO,GAAI0E,MAAO,IACrC4kC,aAAc,CAAEtpC,MAAO,GAAI0E,MAAO,KATf,EAF/B,kFAiBQ,IADA,IAAI6kC,EAAkC,GAC7BhtC,EAAI,EAAGA,EAAIuD,KAAKF,MAAM4pC,WAAWhtC,OAAQD,IAAK,CAEnD,IADA,IAAIktC,GAAS,EACJ3kC,EAAI,EAAGA,EAAIhF,KAAKF,MAAM6uB,UAAUmC,UAAUp0B,OAAQsI,IACvD2kC,EACI3pC,KAAKF,MAAM6uB,UAAUmC,UAAU9rB,GAAGgsB,UAAU9wB,QAC5CF,KAAKF,MAAM4pC,WAAWjtC,GAAGyD,OAAeypC,EAE3CA,IACDF,EAAgBA,EAActF,OAAOnkC,KAAKF,MAAM4pC,WAAWjtC,KAGnE,OAAOgtC,IA5Bf,wCA+BsBjY,GACd,IAAIoY,EAAY,EAIhB,OAHApY,EAAW5vB,IAAI,SAAA6vB,GACXmY,GAAanY,EAAUI,SAEpB+X,IApCf,yCAuCuB5Y,EAA2Bc,GAC1C9xB,KAAKF,MAAM6uB,UAAUmC,UAAUpiB,KAAK,CAChCsiB,UAAWA,EACXC,QAAS,GACTsG,WAAW,EACXlB,SAAS,EACTjF,QAAS,CAAC,CACN9d,GAAI,GACJ2B,KAAM6c,EAAOltB,MACbysB,eAAgB,GAChB5wB,KAAM,YACN6wB,IAAK,EACLkG,WAAY,EACZvG,QAAS,KAEbO,WAAY,CAAC,CACTE,QAAS,CAAExxB,MAAO,GAAI0E,MAAO,IAC7BotB,QAAQ,EACRH,OAAQ,EACR/Z,MAAO,GACPqa,eAAgB,UAChBE,kBAAmB,GACnBE,eAAgB,EAChBT,OAAQ,GACR2F,UAAW,IAAI55B,OAEnBs0B,eAAgB,UAChBE,kBAAmB,GACnBE,eAAgB,MAnE5B,0CAuEwBsX,GAChB7pC,KAAKF,MAAM6uB,UAAUmC,UAAU+Y,GAAgBrY,WAAW9iB,KAAK,CAC3DgjB,QAAS,CAAExxB,MAAO,GAAI0E,MAAO,IAC7BotB,QAAQ,EACRH,OAAQ,EACR/Z,MAAO,GACPqa,eAAgB,UAChBE,kBAAmB,GACnBE,eAAgB,EAChBT,OAAQ,GACR2F,UAAW,IAAI55B,SAjF3B,+BAqF2B,IAAD,OAClB,OACI,uBAAK0C,UAAU,qBACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,eACX,uBAAKA,UAAU,YAAf,qBACA,gBAAC,GAAD,CACIqqB,QAAS5qB,KAAKF,MAAMgpC,WACpB7oC,YAAY,WACZC,MAAOF,KAAKF,MAAM6uB,UAAUgC,SAC5BxwB,MACIH,KAAKF,MAAMipC,oBAC6B,KAAxC/oC,KAAKF,MAAM6uB,UAAUgC,SAASzwB,MAClCS,SAAU,SAACT,GACP,EAAKJ,MAAM6uB,UAAUgC,SAAWzwB,EAChC,EAAKJ,MAAMgqC,4BAGvB,uBAAKvpC,UAAU,eACX,uBAAKA,UAAU,YAAf,sBACA,uBAAKA,UAAU,QAAf,iEAGA,uBAAKA,UAAU,eACX,gBAACgD,GAAA,EAAD,CACIW,KAAMlE,KAAKF,MAAM6uB,UAAUmC,UAC3BjsB,aAAc,kBAAM,EAAK2nB,qBACzB1nB,UAAW,SAAC2nB,EAActtB,GAAf,OACP,EAAKutB,eAAeD,EAASttB,OAExCa,KAAKF,MAAMipC,oBAAgE,IAA1C/oC,KAAKF,MAAM6uB,UAAUmC,UAAUp0B,OAC7D,uBAAK6D,UAAU,cAAcG,MAAO,CAACmK,MAAO,YAA5C,6CAGC,MAET,uBAAKtK,UAAU,eAzH/B,0CA8HsC,IAAD,OAC7B,OACI,gCACA,gBAACosB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,QAASwE,SAAU,UAC5C,gBAAC,GAAD,CACIyK,QAAS5qB,KAAK+pC,mBACd7pC,MAAOF,KAAKmB,MAAM6vB,UAClBrwB,SAAU,SAACT,GACP,EAAK6B,SAAS,CAACivB,UAAW9wB,QAGtC,gBAACysB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,QAASwE,SAAU,UAC5C,gBAAC,GAAD,CACIyK,QAAS5qB,KAAKF,MAAMsxB,QACpBlxB,MAAOF,KAAKmB,MAAM2wB,OAClBnxB,SAAU,SAACT,GACP,EAAK6B,SAAS,CAAC+vB,OAAQ5xB,QAGnC,gBAACysB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,WAC1B,gBAAC,GAAD,CACIgF,KAAMikC,IACNplC,MAAM,gBACNkB,QAAS,WAC2B,KAA5B,EAAK3E,MAAM2wB,OAAO5xB,OAA+C,KAA/B,EAAKiB,MAAM6vB,UAAU9wB,QACvD,EAAK+pC,mBAAmB,EAAK9oC,MAAM6vB,UAAW,EAAK7vB,MAAM2wB,QACzD,EAAKhyB,MAAMgqC,wBACX,EAAK/nC,SAAS,CACVivB,UAAW,CAAE9wB,MAAO,GAAI0E,MAAO,IAC/BktB,OAAQ,CAAE5xB,MAAO,GAAI0E,MAAO,cA3J5D,qCAoKmBisB,EAA0B1xB,GAA6B,IAAD,OAC3DyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UAGvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,CAAW1nB,QAAS,GAChB,gBAACuT,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACpB1P,KAAKmB,MAAMmoC,kBAAoBnqC,EAC5B,gCACA,gBAACqZ,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIkS,QAAS5qB,KAAK+pC,mBACd7pC,MAAOF,KAAKmB,MAAMooC,gBAClB5oC,SAAU,SAACT,GACP,EAAK6B,SAAS,CAACwnC,gBAAiBrpC,QAG5C,gBAACsY,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIkS,QAAS5qB,KAAKF,MAAMsxB,QACpBlxB,MAAOF,KAAKmB,MAAMqoC,aAClB7oC,SAAU,SAACT,GACP,EAAK6B,SAAS,CAACynC,aAActpC,QAGzC,gBAACsY,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,EAAGhY,MAAO,CAACwpC,WAAY,SAClC,uBAAKxpC,MAzBZ,CAAEuG,QAAS,eAAgB8P,aAAc,WA0B9B,gBAAC,KAAD,CACIhR,KAAMokC,IACNrkC,QAAS,WACL,EAAKhG,MAAM6uB,UAAUmC,UAAU3xB,GAAO6xB,UAAY,EAAK7vB,MAAMooC,gBAC7D,EAAKzpC,MAAM6uB,UAAUmC,UAAU3xB,GAAOiyB,QAAQ,GAAGnc,KAAO,EAAK9T,MAAMqoC,aAAa5kC,MAChF,EAAK9E,MAAMgqC,wBACX,EAAK/nC,SAAS,CAACunC,iBAAkB,QAG7C,uBAAK5oC,MAlCV,CAAEuG,QAAS,iBAmCF,gBAAC,KAAD,CACIlB,KAAMqkC,IACNtkC,QAAS,WACL,EAAK/D,SAAS,CAACunC,iBAAkB,UAMjD,gCACA,gBAAC9wB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,EAAGnY,UAAU,YACvBswB,EAAUG,UAAU9wB,MAAQ,MAAQ2wB,EAAUG,UAAUpsB,OAE7D,gBAAC4T,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,EAAGnY,UAAU,YACvBswB,EAAUO,QAAQ,GAAGnc,MAE1B,gBAACuD,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,EAAGnY,UAAU,YACvBnE,KAAe8vB,aAAalsB,KAAKqqC,kBAAkBxZ,EAAUW,aAAa,GAAQ,QAEvF,gBAAChZ,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAEP,gBAAC,KAAD,CACI3S,KAAMukC,IACNxkC,QAAS,WACL,EAAK/D,SAAS,CACVunC,gBAAiBnqC,EACjBoqC,gBAAiB1Y,EAAUG,UAC3BwY,aAAc,CACVtpC,MAAO2wB,EAAUO,QAAQ,GAAG9d,GAC5B1O,MAAOisB,EAAUO,QAAQ,GAAGnc,WAM5C,gBAAC,KAAD,CACIlP,KAAMwkC,IACNzkC,QAAS,WACL,EAAKhG,MAAM6uB,UAAUmC,UAAU0Z,OAAOrrC,EAAO,GAC7C,EAAKW,MAAMgqC,8BAOlCjZ,EAAUW,WAAW5vB,IAAI,SAAC6vB,EAAWgZ,GAClC,OAAO,EAAKC,uBAAuBjZ,EAAWtyB,EAAOsrC,SAzP7E,6CAgQ2BhZ,EAA0BoY,EAAwB1qC,GAA6B,IAAD,OAC3FwrC,EAAiB3qC,KAAKF,MAAM6uB,UAAUmC,UAAU+Y,GAAgBrY,WAAWryB,GAC3EyrC,EAAkB5qC,KAAKF,MAAM6uB,UAAUmC,UAAU+Y,GAAgBrY,WACvE,OACI,uBAAK9wB,MAAO,CAAC4F,SAAU,aACnB,uBAAK5F,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,gBACf,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,gBAACoW,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,YACZ2qB,QAAS5qB,KAAKF,MAAMmpC,SACpB/oC,MAAOuxB,EAAUC,QACjB/wB,SAAU,SAACT,GACPyqC,EAAejZ,QAAUxxB,EACrBf,IAAWyrC,EAAgBluC,OAAS,GACpC,EAAKmuC,oBAAoBhB,GAE7B,EAAK/pC,MAAMgqC,4BAGvB,gBAACtxB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,SACZC,MAAOuxB,EAAUI,OACjBlxB,SAAU,SAACT,GACPyqC,EAAe9Y,OAAS3xB,EACxB,EAAKJ,MAAMgqC,4BAGvB,gBAACtxB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,OACZC,MAAOuxB,EAAUO,OACjBrxB,SAAU,SAACT,GACPyqC,EAAe3Y,OAAS9xB,EACxB,EAAKJ,MAAMgqC,6BAI3B,uBAAKppC,MAAO,CAAC4F,SAAU,aACnB,gBAAC,GAAD,CACI1B,MAAM,gBACNmB,KAAMikC,IACNlkC,QAAS,WACL,EAAK+kC,oBAAoBhB,GACzB,EAAK/pC,MAAMgqC,4BAGvB,uBAAKppC,MAAO,CAAC0B,WAAY,eAlTzC,GAAsCpB,a,UCpBzB8pC,GAAb,mMAE0BhrC,EAAeC,GACjC,OAAQC,KAAKF,MAAMG,cAAgBH,EAAMG,cAHjD,+BAM2B,IAAD,OAClB,OACI,uBAAKM,UAAU,mBACVP,KAAKF,MAAMG,YACR,uBAAKM,UAAU,QAAQP,KAAKF,MAAMG,aACjC,KACL,uBAAKM,UAAU,cACX,gBAAC,KAAD,CACIwqC,UAAU,EACVC,OAAQ,SAAAC,GAAa,OAAI,EAAKnrC,MAAMkrC,OAAOC,IAC3CC,OAAQlrC,KAAKF,MAAMorC,QAGlB,gBAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACG,+BACI,qCAAK7qC,UAAU,eAAkB4qC,KAC7B,wBAAWC,KACX,gBAAC,IAAD,CAAiB7qC,UAAU,UAAUwF,KAAMslC,MAC3C,4DAAmC,2BAAnC,iCAxBpC,GAAoCrqC,a,UCDvBsqC,GAAb,mMAE0BxrC,EAAeC,GACjC,OACKC,KAAKF,MAAMG,cAAgBH,EAAMG,aACjCD,KAAKF,MAAMI,QAAUJ,EAAMI,OAC3BF,KAAKF,MAAMyrC,cAAgBzrC,EAAMyrC,cAN9C,+BAU2B,IAAD,OAClB,OACI,uBAAKhrC,UAAU,yBACVP,KAAKF,MAAMG,YACR,uBAAKM,UAAU,QAAQP,KAAKF,MAAMG,aAClC,KACJ,gBAACurC,GAAA,EAAD,CACIjrC,UAAU,aACV2D,KAAMlE,KAAKF,MAAMyrC,YAAcvrC,KAAKF,MAAMyrC,YAAc,EACxDrrC,MAAOF,KAAKF,MAAMI,MAClBS,SAAU,SAACC,GACP,EAAKd,MAAMa,SAASC,EAAME,OAAOZ,eArBzD,GAA+Bc,a,UCAlByqC,GAAb,sLAE2B,IAAD,OAClB,OACI,gBAACC,GAAA,EAAD,CACInrC,UAAU,OACVqE,MAAO5E,KAAKF,MAAM8E,MAClB+mC,SAAU,WAAO,EAAK7rC,MAAM6rC,SAAS,EAAK7rC,MAAMI,cAPhE,GAAgCc,aCOnB4qC,GAAb,YASI,WAAY9rC,GAAgB,IAAD,+BACvB,8CAAMA,KARV+rC,oBAO2B,IAN3BC,mBAM2B,IAL3BC,iBAK2B,IAJ3BC,mBAI2B,IAH3BC,eAG2B,IAF3BC,YAE2B,EAGvB,EAAKL,eAAiB,CAClB,CAAE3rC,MAAO,IAAK0E,MAAO,QACrB,CAAE1E,MAAO,IAAK0E,MAAO,OACrB,CAAE1E,MAAO,IAAK0E,MAAO,QACrB,CAAE1E,MAAO,IAAK0E,MAAO,SACrB,CAAE1E,MAAO,IAAK0E,MAAO,YAGzB,EAAKknC,cAAgB,CACjB,CAAE5rC,MAAO,IAAK0E,MAAO,UACrB,CAAE1E,MAAO,IAAK0E,MAAO,oBACrB,CAAE1E,MAAO,IAAK0E,MAAO,UACrB,CAAE1E,MAAO,IAAK0E,MAAO,SACrB,CAAE1E,MAAO,IAAK0E,MAAO,oBAGzB,EAAKmnC,YAAc,CACf,CAAE7rC,MAAO,IAAK0E,MAAO,aACrB,CAAE1E,MAAO,IAAK0E,MAAO,YAGzB,EAAKonC,cAAgB,CACjB,CAAE9rC,MAAO,IAAK0E,MAAO,wBACrB,CAAE1E,MAAO,IAAK0E,MAAO,aACrB,CAAE1E,MAAO,IAAK0E,MAAO,kBACrB,CAAE1E,MAAO,IAAK0E,MAAO,iBAGzB,EAAKqnC,UAAY,CACb,CAAE/rC,MAAO,IAAK0E,MAAO,OACrB,CAAE1E,MAAO,IAAK0E,MAAO,UACrB,CAAE1E,MAAO,IAAK0E,MAAO,SAGzB,EAAKsnC,OAAS,CACV,CAAEhsC,MAAO,GAAI0E,MAAO,OAtCD,EAT/B,mFAoDQ5E,KAAKksC,OAAO,GAAGhsC,MAAQ+F,aAAY,UApD3C,+BAuD2B,IAAD,OAClBvE,QAAQC,IAAI,aACZ,IAAMwsB,EAASnuB,KAAKF,MAAMquB,OAE1B,OACI,uBAAK5tB,UAAU,eACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,eACX,uBAAKA,UAAU,YAAf,sBACA,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,eACZ2qB,QAAS5qB,KAAK6rC,eACd3rC,MAAO,CAAEA,MAAO,GAAI0E,MAAOupB,EAAOc,eAClC9uB,MACIH,KAAKF,MAAMipC,oBACc,KAAzB5a,EAAOc,cACXtuB,SAAU,SAACT,GACP,EAAKJ,MAAMquB,OAAOc,cAAgB/uB,EAAM0E,MACxC,EAAK9E,MAAMqsC,yBAGvB,gBAAC3zB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC7Y,GAAA,EAAD,CACII,YAAY,kBACZC,MAAOiuB,EAAOY,cACdvuB,UAAU,EACVG,SAAU,SAACT,GACP,EAAKJ,MAAMquB,OAAOY,cAAgB7uB,EAClC,EAAKJ,MAAMqsC,0BAI3B,gBAAC,GAAD,CACIlsC,YAAY,gBACZ2qB,QAAS5qB,KAAK8rC,cACd5rC,MAAO,CAAEA,MAAO,GAAI0E,MAAOupB,EAAOgB,cAClChvB,MACIH,KAAKF,MAAMipC,oBACa,KAAxB5a,EAAOgB,aACXxuB,SAAU,SAACT,GACP,EAAKJ,MAAMquB,OAAOgB,aAAejvB,EAAM0E,MACvC,EAAK9E,MAAMqsC,wBAEnB,2BAC6B,WAAxBhe,EAAOgB,aACJ,2BACI,gBAACtvB,GAAA,EAAD,CACII,YAAY,cACZC,MAAOiuB,EAAOkB,WACdlvB,MACIH,KAAKF,MAAMipC,oBACW,KAAtB5a,EAAOkB,WACX1uB,SAAU,SAACT,GACP,EAAKJ,MAAMquB,OAAOkB,WAAanvB,EAC/B,EAAKJ,MAAMqsC,yBAIC,qBAAxBhe,EAAOgB,aACP,2BACI,gBAACtvB,GAAA,EAAD,CACII,YAAY,wBACZC,MAAOiuB,EAAO5D,WACdpqB,MACIH,KAAKF,MAAMipC,oBACW,KAAtB5a,EAAO5D,WACX5pB,SAAU,SAACT,GACP,EAAKJ,MAAMquB,OAAO5D,WAAarqB,EAC/B,EAAKJ,MAAMqsC,yBAIC,WAAxBhe,EAAOgB,aACP,2BACI,gBAACtvB,GAAA,EAAD,CACII,YAAY,cACZC,MAAOiuB,EAAOqB,WACdrvB,MACIH,KAAKF,MAAMipC,oBACkB,KAA7B5a,EAAOqB,WAAWzF,OACtBppB,SAAU,SAACT,GACP,EAAKJ,MAAMquB,OAAOqB,WAAatvB,EAC/B,EAAKJ,MAAMqsC,yBAIC,oBAAxBhe,EAAOgB,aACP,2BACI,gBAAC,GAAD,CACIlvB,YAAY,mBACZ2qB,QAAS5qB,KAAKF,MAAMgpC,WACpB5oC,MAAOiuB,EAAOuB,SACdvvB,MACIH,KAAKF,MAAMipC,oBACe,KAA1B5a,EAAOuB,SAASxvB,MACpBS,SAAU,SAACT,GACP,EAAKJ,MAAMquB,OAAOuB,SAAWxvB,EAC7B,EAAKJ,MAAMqsC,wBAEnB,gBAACtsC,GAAA,EAAD,CACII,YAAY,qBACZC,MAAOiuB,EAAOwB,WACdxvB,MACIH,KAAKF,MAAMipC,oBACkB,KAA7B5a,EAAOwB,WAAW5F,OACtBppB,SAAU,SAACT,GACP,EAAKJ,MAAMquB,OAAOwB,WAAazvB,EAC/B,EAAKJ,MAAMqsC,yBAGvB,MAER,gBAACtsC,GAAA,EAAD,CACII,YAAY,iBACZC,MAAOiuB,EAAO0B,WACd1vB,MACIH,KAAKF,MAAMipC,oBACkB,KAA7B5a,EAAO0B,WAAW9F,OACtBppB,SAAU,SAACT,GACP,EAAKJ,MAAMquB,OAAO0B,WAAa3vB,EAC/B,EAAKJ,MAAMqsC,wBAEnB,gBAACtsC,GAAA,EAAD,CACII,YAAY,cACZC,MAAOiuB,EAAOH,UACd7tB,MACIH,KAAKF,MAAMipC,oBACiB,KAA5B5a,EAAOH,UAAUjE,OACrBppB,SAAU,SAACT,IACHA,EAAM6H,MAAM,eAAiC,GAAhB7H,EAAMxD,UACnC,EAAKoD,MAAMquB,OAAOH,UAAY9tB,EAC9B,EAAKJ,MAAMqsC,0BAK3B,uBAAK5rC,UAAU,eACX,uBAAKA,UAAU,YAAf,mBACA,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,cACZ2qB,QAAS5qB,KAAK+rC,YACd7rC,MAAO,CAAEA,MAAO,GAAI0E,MAAOupB,EAAO1uB,YAClCU,MACIH,KAAKF,MAAMipC,oBACW,KAAtB5a,EAAO1uB,WACXkB,SAAU,SAACT,GACP,EAAKJ,MAAMquB,OAAO1uB,WAAaS,EAAM0E,MACjB,YAAhB1E,EAAM0E,MACN,EAAK9E,MAAMquB,OAAOzuB,aAAe,iBAEjC,EAAKI,MAAMquB,OAAOzuB,aAAe,GAErC,EAAKI,MAAMqsC,yBAGvB,gBAAC3zB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,gBACZO,SAAgC,cAAtB2tB,EAAO1uB,WACjBmrB,QAAS5qB,KAAKgsC,cACd9rC,MAAO,CAAEA,MAAO,GAAI0E,MAAOupB,EAAOzuB,cAClCS,MACIH,KAAKF,MAAMipC,oBACa,KAAxB5a,EAAOzuB,cACe,YAAtByuB,EAAO1uB,WACXkB,SAAU,SAACT,GACP,EAAKJ,MAAMquB,OAAOzuB,aAAeQ,EAAM0E,MACvC,EAAK9E,MAAMqsC,yBAGvB,gBAAC3zB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,UACZ2qB,QAAS5qB,KAAKisC,UACd/rC,MAAO,CAAEA,MAAO,GAAI0E,MAAOupB,EAAOoC,SAClCpwB,MACIH,KAAKF,MAAMipC,oBACQ,KAAnB5a,EAAOoC,QACX5vB,SAAU,SAACT,GACP,EAAKJ,MAAMquB,OAAOoC,QAAUrwB,EAAM0E,MAClC,EAAK9E,MAAMqsC,yBAGvB,gBAAC3zB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,YACZ2qB,QAAS5qB,KAAKksC,OACdhsC,MAAO,CAAEA,MAAOiuB,EAAOsC,MAAMnd,GAAI1O,MAAOupB,EAAOsC,MAAMxb,MACrD9U,MACIH,KAAKF,MAAMipC,oBACS,KAApB5a,EAAOsC,MAAMnd,GACjB3S,SAAU,SAACT,GACP,EAAKJ,MAAMquB,OAAOsC,MAAQ,CACtBnd,GAAIpT,EAAMA,MACV+U,KAAM/U,EAAM0E,OAEhB,EAAK9E,MAAMqsC,2BAM/B,uBAAK5rC,UAAU,eACX,uBAAKA,UAAU,YAAf,8BACA,gBAAC,GAAD,CACIN,YAAY,mBACZC,MAAOiuB,EAAO6B,gBACdrvB,SAAU,SAACT,GACP,EAAKJ,MAAMquB,OAAO6B,gBAAkB9vB,EACpC,EAAKJ,MAAMqsC,wBAEnB,gBAAC,GAAD,CACIjB,OAAO,UACPF,OAAQ,SAAChO,GACL7O,EAAO2V,gBAAgBp1B,KAAKsuB,EAAM,IAClC,EAAKl9B,MAAMqsC,wBAEdhe,EAAO2V,gBAAgBliC,IAAI,SAACsuB,EAAM/wB,GAC/B,OACI,gBAAC,GAAD,CACIyF,MAAOsrB,EAAKjb,KACZ/U,MAAOf,EAAM7B,WACbquC,SAAU,SAACzrC,GACPiuB,EAAO2V,gBAAgB0G,OAAO3mC,SAAS3D,GAAQ,GAC/C,EAAKJ,MAAMqsC,2BAKnC,uBAAK5rC,UAAU,iBAhS/B,GAAuCS,aCP1BorC,GAAb,sLAE2B,IAAD,OAElB,OACI,uBAAK7rC,UAAU,yBACX,uBAAKA,UAAU,QAAQP,KAAKF,MAAMG,aAClC,gBAAC,IAAD,CACIM,UAAU,aACVL,MAAOF,KAAKF,MAAMI,MAClBmsC,gBAAgB,EAChBC,MAAO,SAACC,GAAD,OAAe,EAAKzsC,MAAMwsC,MAAMC,IACvCZ,SAAU,SAACa,EAAYrtC,GAAb,OAA+B,EAAKW,MAAM6rC,SAASxsC,WAZjF,GAA+B6B,aCYlByrC,GAAb,YAII,WAAY3sC,GAAgB,IAAD,+BACvB,8CAAMA,KAHV8uB,eAE2B,EAGvB,EAAKztB,MAAQ,CACT2yB,QAAS,CAAE5zB,MAAO,GAAI0E,MAAO,KAGjC,EAAKgqB,UAAY,CACb,CAAE1uB,MAAO,IAAK0E,MAAO,gCACrB,CAAE1E,MAAO,IAAK0E,MAAO,iCACrB,CAAE1E,MAAO,IAAK0E,MAAO,iDACrB,CAAE1E,MAAO,IAAK0E,MAAO,gDACrB,CAAE1E,MAAO,IAAK0E,MAAO,gDACrB,CAAE1E,MAAO,IAAK0E,MAAO,6CACrB,CAAE1E,MAAO,IAAK0E,MAAO,gDACrB,CAAE1E,MAAO,IAAK0E,MAAO,6CACrB,CAAE1E,MAAO,IAAK0E,MAAO,8CACrB,CAAE1E,MAAO,KAAM0E,MAAO,uCACtB,CAAE1E,MAAO,KAAM0E,MAAO,8BACtB,CAAE1E,MAAO,KAAM0E,MAAO,gCACtB,CAAE1E,MAAO,KAAM0E,MAAO,iDACtB,CAAE1E,MAAO,KAAM0E,MAAO,+CACtB,CAAE1E,MAAO,KAAM0E,MAAO,gDACtB,CAAE1E,MAAO,KAAM0E,MAAO,mCACtB,CAAE1E,MAAO,KAAM0E,MAAO,kCACtB,CAAE1E,MAAO,KAAM0E,MAAO,kCACtB,CAAE1E,MAAO,KAAM0E,MAAO,+BACtB,CAAE1E,MAAO,KAAM0E,MAAO,kCACtB,CAAE1E,MAAO,KAAM0E,MAAO,iEACtB,CAAE1E,MAAO,KAAM0E,MAAO,sCACtB,CAAE1E,MAAO,KAAM0E,MAAO,gCA9BH,EAJ/B,8EAuCyC,KAA7B5E,KAAKmB,MAAM2yB,QAAQ5zB,QACnBF,KAAKF,MAAM8uB,UAAUlgB,KAAK,CACtBolB,QAAS9zB,KAAKmB,MAAM2yB,QACpBC,OAAQ,GACRE,eAAgB,GAChBC,OAAQ,GACRjD,QAAS,GACTmD,eAAgB,GAChBsY,YAAa,KAGjB1sC,KAAKF,MAAM6sC,sBACX3sC,KAAK+B,SAAS,CAAC+xB,QAAS,CAAE5zB,MAAO,GAAI0E,MAAO,SAnDxD,6CAyDQ,IADA,IAAIgoC,EAAsC,GACjCnwC,EAAI,EAAGA,EAAIuD,KAAK4uB,UAAUlyB,OAAQD,IAAK,CAE5C,IADA,IAAIktC,GAAS,EACJ3kC,EAAI,EAAGA,EAAIhF,KAAKF,MAAM8uB,UAAUlyB,OAAQsI,IAC7C2kC,EACI3pC,KAAKF,MAAM8uB,UAAU5pB,GAAG8uB,QAAQ5zB,QAChCF,KAAK4uB,UAAUnyB,GAAGyD,OAAeypC,EAEpCA,IACDiD,EAAoBA,EAAkBzI,OAAOnkC,KAAK4uB,UAAUnyB,KAGpE,OAAOmwC,IApEf,sCAuEoBztC,GACZa,KAAKF,MAAM8uB,UAAU4b,OAAOrrC,EAAO,GACnCa,KAAKF,MAAM6sC,wBAzEnB,+BA4E2B,IAAD,OAClB,OACI,uBAAKpsC,UAAU,qBACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,eACX,uBAAKA,UAAU,YAAf,WACA,uBAAKA,UAAU,QAAf,uEAGA,uBAAKA,UAAU,eACX,gBAACgD,GAAA,EAAD,CACIW,KAAMlE,KAAKF,MAAM8uB,UACjB/pB,aAAc,kBAAM,EAAK2nB,qBACzB1nB,UAAW,SAAC2nB,EAActtB,GAAf,OACP,EAAKutB,eAAeD,EAASttB,QAG7C,uBAAKoB,UAAU,eA7F/B,0CAkGsC,IAAD,OAC7B,OACI,gCACA,gBAACosB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,QAASwE,SAAU,UAC5C,gBAAC,GAAD,CACIyK,QAAS5qB,KAAK6sC,uBACd3sC,MAAOF,KAAKmB,MAAM2yB,QAClBnzB,SAAU,SAACT,GACP,EAAK6B,SAAS,CAAC+xB,QAAS5zB,QAGpC,gBAACysB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,QAASwE,SAAU,QAASpf,UAAW,WAChE,gBAAC,GAAD,CACIgF,KAAMikC,IACNplC,MAAM,cACNkB,QAAS,WACL,EAAKgnC,sBAlH7B,qCAyHmBhZ,EAAsB30B,GAA6B,IAAD,OACvDyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,CAAW1nB,QAAS,GAChB,gBAACuT,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAInY,UAAU,YACxBuzB,EAAQA,QAAQlvB,OAErB,gBAAC4T,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,EAAGhY,MAAO,CAACK,UAAW,UACjC,gBAAC,KAAD,CACIgF,KAAMukC,IACNxkC,QAAS,WACL,EAAKinC,gBAAgB5tC,MAE7B,gBAAC,KAAD,CACI4G,KAAMwkC,IACNzkC,QAAS,WACL,EAAKinC,gBAAgB5tC,QAIrC,uBAAKuB,MAAO,CAAC4F,SAAU,aACnB,uBAAK5F,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,gBACf,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,gBAACoW,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACf,gBAACF,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACX,uBAAKhY,MAAO,CAACye,OAAQ,uBACjB,gBAACtf,GAAA,EAAD,CACII,YAAY,gCACZC,MAAO4zB,EAAQC,OACfpzB,SAAU,SAACT,GACP4zB,EAAQC,OAAS7zB,EACjB,EAAKJ,MAAM6sC,yBAEf,gBAAC,GAAD,CACI1sC,YAAY,0FACZC,MAAO4zB,EAAQG,eACfqY,MAAO,SAACpsC,GACJ4zB,EAAQG,eAAevlB,KAAKxO,GAC5B,EAAKJ,MAAM6sC,uBAEfhB,SAAU,SAACxsC,GACP20B,EAAQG,eAAeuW,OAAOrrC,EAAO,GACrC,EAAKW,MAAM6sC,yBAEvB,gBAAC9sC,GAAA,EAAD,CACII,YAAY,SACZC,MAAO4zB,EAAQI,OACfvzB,SAAU,SAACT,GACP4zB,EAAQI,OAASh0B,EACjB,EAAKJ,MAAM6sC,yBAEnB,gBAAC9sC,GAAA,EAAD,CACII,YAAY,qBACZC,MAAO4zB,EAAQ7C,QACftwB,SAAU,SAACT,GACP4zB,EAAQ7C,QAAU/wB,EAClB,EAAKJ,MAAM6sC,yBAEnB,gBAAC,GAAD,CACQ1sC,YAAY,iDACZC,MAAO4zB,EAAQM,eACfkY,MAAO,SAACpsC,GACJ4zB,EAAQM,eAAe1lB,KAAKxO,GAC5B,EAAKJ,MAAM6sC,uBAEfhB,SAAU,SAACxsC,GACP20B,EAAQM,eAAeoW,OAAOrrC,EAAO,GACrC,EAAKW,MAAM6sC,yBAEvB,gBAACn0B,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIwyB,OAAO,UACPF,OAAQ,SAAChO,GACLlJ,EAAQ4Y,YAAYh+B,KAAKsuB,EAAM,IAC/B,EAAKl9B,MAAM6sC,0BAGvB,gBAACn0B,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACVob,EAAQ4Y,YAAY9qC,IAAI,SAAC0gC,EAAKnjC,GAC3B,OACI,gBAAC,GAAD,CACIyF,MAAO09B,EAAIrtB,KACX/U,MAAOf,EAAM7B,WACbquC,SAAU,SAACzrC,GACP4zB,EAAQ4Y,YAAYlC,OAAO3mC,SAAS3D,GAAQ,GAC5C,EAAKJ,MAAM6sC,uCAnNvE,GAAoC3rC,iBCRvBgsC,GAAb,YAEI,WAAYltC,GAAgB,wEAClBA,IAHd,wEAM2B,IAAD,OAClB,OACI,uBAAKS,UAAU,qBACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,eACX,uBAAKA,UAAU,YAAf,qBACA,gBAAC,GAAD,CACIqqB,QAAS5qB,KAAKF,MAAMgpC,WACpB7oC,YAAY,WACZC,MAAOF,KAAKF,MAAM+uB,aAAa8B,SAC/BxwB,MACIH,KAAKF,MAAMipC,oBACgC,KAA3C/oC,KAAKF,MAAM+uB,aAAa8B,SAASzwB,MACrCS,SAAU,SAACT,GACP,EAAKJ,MAAM+uB,aAAa8B,SAAWzwB,EACnC,EAAKJ,MAAMmtC,8BAGnB,gBAAC,GAAD,CACIriB,QAAS5qB,KAAKF,MAAM4pC,WACpBzpC,YAAY,YACZC,MAAOF,KAAKF,MAAM+uB,aAAagC,UAC/B1wB,MACIH,KAAKF,MAAMipC,oBACiC,KAA5C/oC,KAAKF,MAAM+uB,aAAagC,UAAU3wB,MACtCS,SAAU,SAACT,GACP,EAAKJ,MAAM+uB,aAAagC,UAAY3wB,EACpC,EAAKJ,MAAMmtC,8BAEnB,gBAAC,GAAD,CACIriB,QAAS5qB,KAAKF,MAAMsxB,QACpBnxB,YAAY,SACZC,MAAOF,KAAKF,MAAM+uB,aAAaiD,OAC/B3xB,MACIH,KAAKF,MAAMipC,oBAC8B,KAAzC/oC,KAAKF,MAAM+uB,aAAaiD,OAAO5xB,MACnCS,SAAU,SAACT,GACP,EAAKJ,MAAM+uB,aAAaiD,OAAS5xB,EACjC,EAAKJ,MAAMmtC,8BAEnB,gBAACptC,GAAA,EAAD,CACII,YAAY,QACZC,MAAOF,KAAKF,MAAM+uB,aAAa/W,MAC/BnX,SAAU,SAACT,GACP,EAAKJ,MAAM+uB,aAAa/W,MAAQ5X,EAChC,EAAKJ,MAAMmtC,+BAGvB,uBAAK1sC,UAAU,iBAtD/B,GAAyCS,aCoB5BksC,GAAb,YAEI,WAAYptC,GAAgB,IAAD,+BACvB,8CAAMA,KAEDqB,MAAQ,CACT6vB,UAAW,CAAE9wB,MAAO,GAAI0E,MAAO,IAC/BktB,OAAQ,CAAE5xB,MAAO,GAAI0E,MAAO,IAC5BuoC,eAAgB,GAChBlnB,QAAS,GAETqjB,iBAAkB,EAClBC,gBAAiB,CAAErpC,MAAO,GAAI0E,MAAO,IACrC4kC,aAAc,CAAEtpC,MAAO,GAAI0E,MAAO,KAXf,EAF/B,kFAmBQ,IADA,IAAI6kC,EAAkC,GAC7BhtC,EAAI,EAAGA,EAAIuD,KAAKF,MAAM4pC,WAAWhtC,OAAQD,IAAK,CAEnD,IADA,IAAIktC,GAAS,EACJ3kC,EAAI,EAAGA,EAAIhF,KAAKF,MAAM6uB,UAAUmC,UAAUp0B,OAAQsI,IACvD2kC,EACI3pC,KAAKF,MAAM6uB,UAAUmC,UAAU9rB,GAAGgsB,UAAU9wB,QAC5CF,KAAKF,MAAM4pC,WAAWjtC,GAAGyD,OAAeypC,EAE3CA,IACDF,EAAgBA,EAActF,OAAOnkC,KAAKF,MAAM4pC,WAAWjtC,KAGnE,OAAOgtC,IA9Bf,wCAiCsBjY,GACd,IAAIoY,EAAY,EAIhB,OAHApY,EAAW5vB,IAAI,SAAA6vB,GACXmY,GAAanY,EAAUI,SAEpB+X,IAtCf,yCAyCuB5Y,EAA2Bc,GAC1C9xB,KAAKF,MAAM6uB,UAAUmC,UAAUpiB,KAAK,CAChCsiB,UAAWA,EACXC,QAAS,GACTsG,WAAW,EACXlB,SAAS,EACTjF,QAAS,CAAC,CACN9d,GAAI,GACJ2B,KAAM6c,EAAOltB,MACbysB,eAAgB,GAChBC,IAAK,EACLkG,WAAY,EACZvG,QAAS,GACTxwB,KAAM,cAEV+wB,WAAY,CAAC,CACTE,QAAS,CAAExxB,MAAO,GAAI0E,MAAO,IAC7BotB,QAAQ,EACRH,OAAQ,EACR/Z,MAAO,GACPqa,eAAgB,UAChBE,kBAAmB,GACnBE,eAAgB,EAChBT,OAAQ,GACR2F,UAAW,IAAI55B,OAEnBs0B,eAAgB,UAChBE,kBAAmB,GACnBE,eAAgB,MArE5B,0CAyEwBsX,GAChB7pC,KAAKF,MAAM6uB,UAAUmC,UAAU+Y,GAAgBrY,WAAW9iB,KAAK,CAC3DgjB,QAAS,CAAExxB,MAAO,GAAI0E,MAAO,IAC7BotB,QAAQ,EACRH,OAAQ,EACR/Z,MAAO,GACPqa,eAAgB,UAChBE,kBAAmB,GACnBE,eAAgB,EAChBT,OAAQ,GACR2F,UAAW,IAAI55B,SAnF3B,+BAuF2B,IAAD,OAClB,OACI,uBAAK0C,UAAU,qBACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,eACX,uBAAKA,UAAU,YAAf,qBACA,gBAAC,GAAD,CACIqqB,QAAS5qB,KAAKF,MAAMgpC,WACpB7oC,YAAY,WACZC,MAAOF,KAAKF,MAAM6uB,UAAUgC,SAC5BxwB,MACIH,KAAKF,MAAMipC,oBAC6B,KAAxC/oC,KAAKF,MAAM6uB,UAAUgC,SAASzwB,MAClCS,SAAU,SAACT,GACP,EAAKJ,MAAM6uB,UAAUgC,SAAWzwB,EAChC,EAAKJ,MAAMgqC,2BAEnB,gBAACjqC,GAAA,EAAD,CACII,YAAY,kBACZC,MAAOF,KAAKmB,MAAMgsC,eAClBxsC,SAAU,SAACT,GACP,EAAK6B,SAAS,CAACorC,eAAgBjtC,OAEvC,gBAACL,GAAA,EAAD,CACII,YAAY,UACZC,MAAOF,KAAKmB,MAAM8kB,QAClBtlB,SAAU,SAACT,GACP,EAAK6B,SAAS,CAACkkB,QAAS/lB,QAGpC,uBAAKK,UAAU,eACX,uBAAKA,UAAU,YAAf,sBACA,uBAAKA,UAAU,QAAf,iEAGA,uBAAKA,UAAU,eACX,gBAACgD,GAAA,EAAD,CACIW,KAAMlE,KAAKF,MAAM6uB,UAAUmC,UAC3BjsB,aAAc,kBAAM,EAAK2nB,qBACzB1nB,UAAW,SAAC2nB,EAActtB,GAAf,OACP,EAAKutB,eAAeD,EAASttB,OAExCa,KAAKF,MAAMipC,oBAAgE,IAA1C/oC,KAAKF,MAAM6uB,UAAUmC,UAAUp0B,OAC7D,uBAAK6D,UAAU,cAAcG,MAAO,CAACmK,MAAO,YAA5C,6CAGC,MAET,uBAAKtK,UAAU,eAvI/B,0CA4IsC,IAAD,OAC7B,OACI,gCACA,gBAACosB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,QAASwE,SAAU,UAC5C,gBAAC,GAAD,CACIyK,QAAS5qB,KAAK+pC,mBACd7pC,MAAOF,KAAKmB,MAAM6vB,UAClBrwB,SAAU,SAACT,GACP,EAAK6B,SAAS,CAACivB,UAAW9wB,QAGtC,gBAACysB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,QAASwE,SAAU,UAC5C,gBAAC,GAAD,CACIyK,QAAS5qB,KAAKF,MAAMsxB,QACpBlxB,MAAOF,KAAKmB,MAAM2wB,OAClBnxB,SAAU,SAACT,GACP,EAAK6B,SAAS,CAAC+vB,OAAQ5xB,QAGnC,gBAACysB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,WAC1B,gBAAC,GAAD,CACIgF,KAAMikC,IACNplC,MAAM,gBACNkB,QAAS,WAC2B,KAA5B,EAAK3E,MAAM2wB,OAAO5xB,OAA+C,KAA/B,EAAKiB,MAAM6vB,UAAU9wB,QACvD,EAAK+pC,mBAAmB,EAAK9oC,MAAM6vB,UAAW,EAAK7vB,MAAM2wB,QACzD,EAAKhyB,MAAMgqC,wBACX,EAAK/nC,SAAS,CACVivB,UAAW,CAAE9wB,MAAO,GAAI0E,MAAO,IAC/BktB,OAAQ,CAAE5xB,MAAO,GAAI0E,MAAO,cAzK5D,qCAkLmBisB,EAA0B1xB,GAA6B,IAAD,OAC3DyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACjDiuC,EAAW,CAAEnmC,QAAS,eAAgB8P,aAAc,UACpDs2B,EAAa,CAAEpmC,QAAS,gBAC9B,OACI,gBAAC4lB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,CAAW1nB,QAAS,GAChB,gBAACuT,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACpB1P,KAAKmB,MAAMmoC,kBAAoBnqC,EAC5B,gCACA,gBAACqZ,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIkS,QAAS5qB,KAAK+pC,mBACd7pC,MAAOF,KAAKmB,MAAMooC,gBAClB5oC,SAAU,SAACT,GACP,EAAK6B,SAAS,CAACwnC,gBAAiBrpC,QAG5C,gBAACsY,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIkS,QAAS5qB,KAAKF,MAAMsxB,QACpBlxB,MAAOF,KAAKmB,MAAMqoC,aAClB7oC,SAAU,SAACT,GACP,EAAK6B,SAAS,CAACynC,aAActpC,QAGzC,gBAACsY,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,EAAGhY,MAAO,CAACwpC,WAAY,SAClC,uBAAKxpC,MAAO0sC,GACR,gBAAC,KAAD,CACIrnC,KAAMokC,IACNrkC,QAAS,WACL,EAAKhG,MAAM6uB,UAAUmC,UAAU3xB,GAAO6xB,UAAY,EAAK7vB,MAAMooC,gBAC7D,EAAKzpC,MAAM6uB,UAAUmC,UAAU3xB,GAAOiyB,QAAQ,GAAGnc,KAAO,EAAK9T,MAAMqoC,aAAa5kC,MAChF,EAAK9E,MAAMgqC,wBACX,EAAK/nC,SAAS,CAACunC,iBAAkB,QAG7C,uBAAK5oC,MAAO2sC,GACR,gBAAC,KAAD,CACItnC,KAAMqkC,IACNtkC,QAAS,WACL,EAAK/D,SAAS,CAACunC,iBAAkB,UAMjD,gCACA,gBAAC9wB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,EAAGnY,UAAU,YACvBswB,EAAUG,UAAU9wB,MAAQ,MAAQ2wB,EAAUG,UAAUpsB,OAE7D,gBAAC4T,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,EAAGnY,UAAU,YACvBswB,EAAUO,QAAQ,GAAGnc,MAE1B,gBAACuD,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,EAAGnY,UAAU,YACvBnE,KAAe8vB,aAAalsB,KAAKqqC,kBAAkBxZ,EAAUW,aAAa,GAAQ,QAEvF,gBAAChZ,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKhY,MAAO0sC,GACR,gBAAC,KAAD,CACIrnC,KAAMukC,IACNxkC,QAAS,WACL,EAAK/D,SAAS,CACVunC,gBAAiBnqC,EACjBoqC,gBAAiB1Y,EAAUG,UAC3BwY,aAAc,CACVtpC,MAAO2wB,EAAUO,QAAQ,GAAG9d,GAC5B1O,MAAOisB,EAAUO,QAAQ,GAAGnc,YAKhD,uBAAKvU,MAAO2sC,GACR,gBAAC,KAAD,CACItnC,KAAMwkC,IACNzkC,QAAS,WACL,EAAKhG,MAAM6uB,UAAUmC,UAAU0Z,OAAOrrC,EAAO,GAC7C,EAAKW,MAAMgqC,+BAOlCjZ,EAAUW,WAAW5vB,IAAI,SAAC6vB,EAAWgZ,GAClC,OAAO,EAAKC,uBAAuBjZ,EAAWtyB,EAAOsrC,SAvQ7E,6CA8Q2BhZ,EAA0BoY,EAAwB1qC,GAA6B,IAAD,OAC3FwrC,EAAiB3qC,KAAKF,MAAM6uB,UAAUmC,UAAU+Y,GAAgBrY,WAAWryB,GAC3EyrC,EAAkB5qC,KAAKF,MAAM6uB,UAAUmC,UAAU+Y,GAAgBrY,WACvE,OACI,uBAAK9wB,MAAO,CAAC4F,SAAU,aACnB,uBAAK5F,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,gBACf,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,gBAACoW,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,YACZ2qB,QAAS5qB,KAAKF,MAAMmpC,SACpB/oC,MAAOuxB,EAAUC,QACjB/wB,SAAU,SAACT,GACPyqC,EAAejZ,QAAUxxB,EACrBf,IAAWyrC,EAAgBluC,OAAS,GACpC,EAAKmuC,oBAAoBhB,GAE7B,EAAK/pC,MAAMgqC,4BAGvB,gBAACtxB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,SACZC,MAAOuxB,EAAUI,OACjBlxB,SAAU,SAACT,GACPyqC,EAAe9Y,OAAS3xB,EACxB,EAAKJ,MAAMgqC,4BAGvB,gBAACtxB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,OACZC,MAAOuxB,EAAUO,OACjBrxB,SAAU,SAACT,GACPyqC,EAAe3Y,OAAS9xB,EACxB,EAAKJ,MAAMgqC,6BAI3B,uBAAKppC,MAAO,CAAC4F,SAAU,aACnB,gBAAC,GAAD,CACI1B,MAAM,gBACNmB,KAAMikC,IACNlkC,QAAS,WACL,EAAK+kC,oBAAoBhB,GACzB,EAAK/pC,MAAMgqC,4BAGvB,uBAAKppC,MAAO,CAAC0B,WAAY,eAhUzC,GAA0CpB,aCV7BssC,GAAb,8MAEIC,cAFJ,uFAIyB,IAAD,OAChBvtC,KAAKutC,SAAWC,YAAY,kBAAM,EAAKzrC,SAAS,CAAEsgC,KAAMxkC,KAAKyB,SAAU,OAL/E,+BASQ,OACI,uBAAKiB,UAAU,UAEVP,KAAKF,MAAM2tC,aACR,gBAACt0B,EAAA,EAAD,CACI5Y,UAAU,qBACV6Q,QAAQ,WACRtL,QAAS9F,KAAKF,MAAM2tC,cACpB,uBAAK/sC,MAAO,CAACuG,QAAS,UAClB,uBAAK1G,UAAU,QAAf,gBACCP,KAAKF,MAAM4tC,SACR,uBAAKntC,UAAU,cAAf,qBACmBnE,KAAeuxC,kBAAkB3tC,KAAKF,MAAM4tC,SAAU,IAAI7vC,MAD7E,SAGA,OAGZ,KAEHmC,KAAKF,MAAM8tC,gBACR,gBAACz0B,EAAA,EAAD,CACI5Y,UAAU,SACVC,SAAyC,OAA/BR,KAAKF,MAAM8tC,gBACrB9nC,QAAS9F,KAAKF,MAAM8tC,iBAHxB,oBAMA,KAEH5tC,KAAKF,MAAM+tC,eACR,gBAAC10B,EAAA,EAAD,CACI5Y,UAAU,SACVC,SAAwC,OAA9BR,KAAKF,MAAM+tC,eACrB/nC,QAAS9F,KAAKF,MAAM+tC,gBAHxB,iBAMA,KAEH7tC,KAAKF,MAAMguC,SACR,gBAAC30B,EAAA,EAAD,CACI5Y,UAAU,SACVsK,MAAM,UACNrK,SAAUR,KAAKF,MAAMiuC,cACrBjoC,QAAS9F,KAAKF,MAAMguC,UAJxB,UAOA,KAEH9tC,KAAKF,MAAMkuC,WACR,gBAAC70B,EAAA,EAAD,CACI5Y,UAAU,eACVC,SAAUR,KAAKF,MAAMmuC,gBACrBnoC,QAAS9F,KAAKF,MAAMkuC,YAHxB,YAMA,KAEHhuC,KAAKF,MAAMouC,eACR,gBAAC/0B,EAAA,EAAD,CACI5Y,UAAU,SACVC,SAAwC,OAA9BR,KAAKF,MAAMouC,eACrBpoC,QAAS9F,KAAKF,MAAMouC,gBAHxB,iBAMA,KAEHluC,KAAKF,MAAMquC,kBACR,gBAACh1B,EAAA,EAAD,CACI5Y,UAAU,SACVC,SAAUR,KAAKF,MAAMsuC,uBACrBtoC,QAAS9F,KAAKF,MAAMquC,mBAHxB,iCAMA,KAEHnuC,KAAKF,MAAMuuC,sBACR,gBAACl1B,EAAA,EAAD,CACI5Y,UAAU,SACVC,SAA+C,OAArCR,KAAKF,MAAMuuC,sBACrBvoC,QAAS9F,KAAKF,MAAMuuC,uBAHxB,wBAMA,KAEHruC,KAAKF,MAAMwuC,uBACR,gBAACn1B,EAAA,EAAD,CACI5Y,UAAU,SACVC,SAAgD,OAAtCR,KAAKF,MAAMwuC,uBACrBxoC,QAAS9F,KAAKF,MAAMwuC,wBAHxB,0BAMA,KAEHtuC,KAAKF,MAAMyuC,wBACR,gBAACp1B,EAAA,EAAD,CACI5Y,UAAU,SACVC,SAAiD,OAAvCR,KAAKF,MAAMyuC,wBACrBzoC,QAAS9F,KAAKF,MAAMyuC,yBAHxB,qBAMA,KAEHvuC,KAAKF,MAAM0uC,cACR,gBAACr1B,EAAA,EAAD,CACI5Y,UAAU,SACVC,SAAUR,KAAKF,MAAM2uC,mBACrB3oC,QAAS9F,KAAKF,MAAM0uC,eAHxB,gBAMA,UArHpB,GAAkCxtC,a,8BCfrB0tC,GAAb,sLAE2B,IAAD,OAClB,OACI,gBAACC,GAAA,EAAD,CACIpuC,UAAU,OACVL,MAAOF,KAAKF,MAAM8uC,YAClBx9B,QAAQ,aACRy9B,cAAc,OACdC,eAAe,UACfnuC,SAAU,SAAC8C,EAA+BvD,GACtC,EAAKJ,MAAMivC,eAAe7uC,KAE7BF,KAAKF,MAAMkvC,QAAQptC,IAAI,SAAAqtC,GACpB,OAAO,gBAACC,GAAA,EAAD,CAAKhvC,MAAO+uC,EAAI/uC,MAAO0E,MAAOqqC,EAAIrqC,eAd7D,GAAgC5D,aCEnBmuC,GAAb,YAEI,WAAYrvC,GAAgB,IAAD,+BACvB,8CAAMA,KAEDqB,MAAQ,GAHU,EAF/B,wEAWQ,IAAMsqB,EAASzrB,KAAKF,MAAM2rB,OAEpB2jB,EAAgB3jB,EAAO8O,MAAP,WAAkB,IAAI18B,MAAO2B,iBAAmBisB,EAAO8O,MAAvD,aAAiE9O,EAAO8O,MAAxE,KAAmF,MACnG/K,EAAa/D,EAAOqC,aAAerC,EAAOqC,aAAaiO,YAAc,MACrEsT,EAAgB5jB,EAAOqC,aAAerC,EAAOqC,aAAa+N,QAAU,MAE1E,OACI,gBAACrjB,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACpB1P,KAAKsvC,WAAW,wBAAyB7jB,EAAO4B,mBAAoB,GAAI,YACxErtB,KAAKsvC,WAAW,0BAA2B7jB,EAAOC,gBAClD1rB,KAAKsvC,WAAW,qBAAsB7jB,EAAOkO,WAC7C35B,KAAKsvC,WAAW,WAAY7jB,EAAO4O,UAAY,OAC/Cr6B,KAAKsvC,WAAW,YAAa7jB,EAAO6O,WAAa,OACjDt6B,KAAKsvC,WAAW,gBAAiB7jB,EAAOsO,OAAS,OACjD/5B,KAAKsvC,WAAW,uBAAwB7jB,EAAOsP,UAAY,OAC3D/6B,KAAKsvC,WAAW,YAAa7jB,EAAO0O,QAAU,OAC9Cn6B,KAAKsvC,WAAW,sBAAuBF,GACvCpvC,KAAKsvC,WAAW,uBAAwB7jB,EAAOwP,eAC/Cj7B,KAAKsvC,WAAW,aAAc9f,GAC9BxvB,KAAKsvC,WAAW,iBAAkBD,GAClCrvC,KAAKsvC,WAAW,eAAgB7jB,EAAOgP,oBA/BxD,iCAoCe71B,EAAe1E,EAAyBwY,EAAUnY,GACzD,OACI,gBAACiY,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,cAAcmY,GAAIA,GAAU,EAAGhY,MAAO,CAACqP,QAAS,aAChEnL,EAAMlI,OAAS,EACZ,uBAAK6D,UAAU,cAAcqE,GAC7B,KACH1E,EACG,uBAAKK,UAAWA,GAAwB,YAAaL,GACrD,UA5CpB,GAA6Cc,a,wjBCAtC,IAAMuuC,GAAb,YAEI,WAAYzvC,GAAgB,IAAD,+BACvB,8CAAMA,KAEDqB,MAAQ,GAHU,EAF/B,wEAU4B,IAAD,OACbsqB,EAASzrB,KAAKF,MAAM2rB,OACpB6B,EAAc7B,EAAO8B,kBACrB2O,EAAWzQ,EAAOyQ,SAExB,OACI,2BACK5O,EACGttB,KAAKwvC,cAAcliB,EAAa,eAChC,KACJ,uBAAK5sB,MAAO,CAAC+uC,cAAe,aAC3BvT,EACGA,EAASt6B,IAAI,SAACu6B,EAAQh9B,GAClB,OACI,gCACC,EAAKqwC,cAAcrT,EAAnB,iBAAqCh9B,EAAQ,IAC9C,uBAAKuB,MAAO,CAAC+uC,cAAe,gBAIpC,QA9BpB,oCAmCkBjX,EAAsBkX,GAAkC,IAAD,OAEjE,OACQ,gBAACn+B,EAAA,EAAD,CAAOhR,UAAU,WACb,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACpB1P,KAAKsvC,WAAW,eAAgBI,EAAY,GAAI,WAAY,CACzDC,aAAc,sBACd5/B,QAAS,QAEZ/P,KAAKsvC,WAAW,eAAhB,UAAmC9W,EAAQC,MAA3C,cAAsDD,EAAQE,OAC9D14B,KAAKsvC,WAAW,WAAY9W,EAAQK,UACpC74B,KAAKsvC,WAAW,SAAU9W,EAAQO,QAClC/4B,KAAKsvC,WAAW,WAAY9W,EAAQhL,UACpCxtB,KAAKsvC,WAAW,cAAe9W,EAAQ/K,MACvCztB,KAAKsvC,WAAW,oBAAhB,UAAwC9W,EAAQ9K,OAAhD,cAA4D8K,EAAQS,UACpEj5B,KAAKsvC,WAAW,uBAAwB,GAAI,GAE5C9W,EAAQzK,eAAerxB,OAAS,EAC7B,gCACCsD,KAAKsvC,WAAW,sBAAkBhvC,EAAW,EAAG,WAAY,CAACyP,QAAS,mBACtE/P,KAAKsvC,WAAW,gBAAYhvC,EAAW,EAAG,WAAY,CAACyP,QAAS,mBAChE/P,KAAKsvC,WAAW,mBAAehvC,EAAW,EAAG,WAAY,CAACyP,QAAS,mBACnE/P,KAAKsvC,WAAW,qBAAiBhvC,EAAW,EAAG,WAAY,CAACyP,QAAS,oBAEtE,KAEHyoB,EAAQzK,eAAensB,IAAI,SAAAy3B,GACxB,OACI,gCACC,EAAKiW,WAAW,GAAIjW,EAAQpkB,KAAM,EAAG,WAAY,CAAClF,QAAS,UAC3D,EAAKu/B,WAAW,GAAIjW,EAAQK,YAAa,EAAG,WAAY,CAAC3pB,QAAS,UAClE,EAAKu/B,WAAW,GAAIjW,EAAQrL,UAAW,EAAG,WAAY,CAACje,QAAS,UAChE,EAAKu/B,WAAW,GAAIjW,EAAQG,MAAO,EAAG,WAAY,CAACzpB,QAAS,iBAnE7F,iCA4EenL,EAAe1E,EAAyBwY,EAAUnY,EAAoBG,GAC7E,OACI,gBAAC8X,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,cAAcmY,GAAIA,GAAU,EAAGhY,MAAK,IAAGqP,QAAS,YAAerP,IAC/EkE,EAAMlI,OAAS,EACZ,uBAAK6D,UAAU,cAAcqE,GAC7B,KACH1E,EACG,uBAAKK,UAAWA,GAAwB,YAAaL,GACrD,UApFpB,GAAgDc,aCCnC4uC,GAAb,sLAE2B,IAAD,OAClB,OACI,gBAACjB,GAAA,EAAD,CACIpuC,UAAU,YACVL,MAAOF,KAAKF,MAAM8uC,YAClBiB,YAAa7vC,KAAKF,MAAM+vC,YACxBz+B,QAAQ,aACRy9B,cAAc,OACdC,eAAe,UACfnuC,SAAU,SAAC8C,EAA+BvD,GACtC,EAAKJ,MAAMivC,eAAe7uC,KAE7BF,KAAKF,MAAMkvC,QAAQptC,IAAI,SAACqtC,EAAK9vC,GAC1B,OACI,gBAAC+vC,GAAA,EAAD,CACIxuC,MAAO,EAAKZ,MAAMgwC,SAAW,EAAKhwC,MAAMgwC,SAAS3wC,QAASmB,EAC1DsE,MAAO,EAAK9E,MAAMiwC,SAAW,EAAKjwC,MAAMiwC,SAAS5wC,GAAS8vC,EAAIrqC,MAC9D1E,MAAO+uC,EAAI/uC,eAnBvC,GAA6Bc,a,UCFhBgvC,GAAb,sLAE2B,IAAD,OAClB,OACI,uBAAKzvC,UAAU,kBACX,gBAAC0vC,GAAA,EAAD,CACIzvC,SAAUR,KAAKF,MAAMU,SACrBD,UAAU,YACVqX,QAAS5X,KAAKF,MAAMowC,iBACpBvvC,SAAU,SAAC8C,GACP,EAAK3D,MAAMa,cAElBX,KAAKF,MAAM8E,MACR,wBAAMrE,UAAU,OAAOG,MAAO,CAACsW,YAAa,SAAUhX,KAAKF,MAAM8E,OACjE,UAdpB,GAAiC5D,aCDpBmvC,GAAb,sLAGQ,IAAMxR,EAAiB3+B,KAAKF,MAAM2rB,OAAOgT,sBAClBz+B,KAAKF,MAAM2rB,OAAOgT,sBAAsBE,oBACxCr+B,EAEvB,OACI,uBAAKC,UAAU,eACX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,QAAf,gBACCo+B,GAAkBA,EAAeE,YAC9B,uBAAKn+B,MAAO,CAACyK,UAAW,0BACnBwzB,EAAeE,YAAYj9B,IAAI,SAACnF,EAAG0C,GAChC,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OAAO,uBAAKuB,MAAO,CAACkG,gBAAiBA,EAAiBmJ,QAAS,QAAStT,MAGhF,MAER,gBAAC+b,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,eACX,uBAAKA,UAAU,QAAf,gBACA,gBAAC,GAAD,CACIqE,MAAM,WACNpE,UAAQ,EACR0vC,oBACIvR,IACAA,EAAeI,aACgB,aAA/BJ,EAAeI,aACnBp+B,SAAU,eACd,gBAAC,GAAD,CACIiE,MAAM,UACNpE,UAAQ,EACR0vC,oBACIvR,IACAA,EAAeI,aACgB,YAA/BJ,EAAeI,aACnBp+B,SAAU,eACd,gBAAC,GAAD,CACIiE,MAAM,aACNpE,UAAQ,EACR0vC,oBACIvR,IACAA,EAAeI,aACgB,eAA/BJ,EAAeI,aACnBp+B,SAAU,gBAElB,uBAAKJ,UAAU,eACX,uBAAKA,UAAU,QAAf,qBACA,gBAAC,GAAD,CACIqE,MAAM,cACNpE,UAAQ,EACRN,SACIy+B,GACAA,EAAeM,iBACfN,EAAeM,gBAAgBra,SAAS,gBAC5CjkB,SAAU,SAACyvC,OACd,gBAAC,GAAD,CACGxrC,MAAM,SACNpE,UAAQ,EACRN,SACIy+B,GACAA,EAAeM,iBACfN,EAAeM,gBAAgBra,SAAS,WAC5CjkB,SAAU,SAACyvC,eAlE3C,GAAwCpvC,aCD3BqvC,GAAb,sLAGQ,IAAMlR,EAAkBn/B,KAAKF,MAAM2rB,OAAOgT,sBAClBz+B,KAAKF,MAAM2rB,OAAOgT,sBAAsBU,qBACxC7+B,EAExB,OACI,uBAAKC,UAAU,eACX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACI9T,MAAM,kBACNpE,UAAQ,EACRN,SAAOi/B,IAAmBA,EAAgBva,SAAS,iBACnDjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,gBACNpE,UAAQ,EACRN,SAAOi/B,IAAmBA,EAAgBva,SAAS,eACnDjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,mEACNpE,UAAQ,EACRN,SAAOi/B,IAAmBA,EAAgBva,SAAS,cACnDjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,kBACNpE,UAAQ,EACRN,SAAOi/B,IAAmBA,EAAgBva,SAAS,iBACnDjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,wBACNpE,UAAQ,EACRN,SAAOi/B,IAAmBA,EAAgBva,SAAS,sBACnDjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,iBACNpE,UAAQ,EACRN,SAAOi/B,IAAmBA,EAAgBva,SAAS,YACnDjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,qCACNpE,UAAQ,EACRN,SAAOi/B,IAAmBA,EAAgBva,SAAS,aACnDjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,SACNpE,UAAQ,EACRN,SAAOi/B,IAAmBA,EAAgBva,SAAS,QACnDjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,iFACNpE,UAAQ,EACRN,SAAOi/B,IAAmBA,EAAgBva,SAAS,oBACnDjkB,SAAU,SAACyvC,QAEnB,gBAAC53B,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBACInW,IAAI,qBACJhC,UAAU,OACVya,IAAI,iCA7DhC,GAAyCha,aCC5BsvC,GAAb,sLAGQ,IAAMjR,EAAUr/B,KAAKF,MAAM2rB,OAAOgT,sBAClBz+B,KAAKF,MAAM2rB,OAAOgT,sBAAsBY,aACxC/+B,EAEViwC,EAAWlR,GACAA,EAAQO,eACRP,EAAQO,eAAerrB,KAAK,SAAA9X,GAAC,MAAiB,cAAbA,EAAEisC,cACnCpoC,EAEjB,OACI,uBAAKC,UAAU,eACX,uBAAKA,UAAU,eACX,uBAAKA,UAAU,QAAf,sDACA,gBAAC,GAAD,CACIqE,MAAM,OACNpE,UAAQ,EACRN,SAAOm/B,IAAWA,EAAQiB,oBAAoB1b,SAAS,SACvDjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,cACNpE,UAAQ,EACRN,SAAOm/B,IAAWA,EAAQiB,oBAAoB1b,SAAS,gBACvDjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,cACNpE,UAAQ,EACRN,SAAOm/B,IAAWA,EAAQiB,oBAAoB1b,SAAS,gBACvDjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,6BACNpE,UAAQ,EACRN,SAAOm/B,IAAWA,EAAQiB,oBAAoB1b,SAAS,aACvDjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,6BACNpE,UAAQ,EACRN,SAAOm/B,IAAWA,EAAQiB,oBAAoB1b,SAAS,gBACvDjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,8BACNpE,UAAQ,EACRN,SAAOm/B,IAAWA,EAAQiB,oBAAoB1b,SAAS,iBACvDjkB,SAAU,SAACyvC,QAEnB,uBAAK7vC,UAAU,eACX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,QAAf,mBACC8+B,GAAWA,EAAQa,cAChB,uBAAKx/B,MAAO,CAACyK,UAAW,0BACnBk0B,EAAQa,cAAct+B,IAAI,SAACnF,EAAG0C,GAC3B,IAAM3B,EACI,SAANf,EAAe,OACT,gBAANA,EAAsB,cAChB,gBAANA,EAAsB,cAChB,aAANA,EAAmB,6BACb,gBAANA,EAAsB,6BAChB,iBAANA,EAAuB,eACjB,qBAANA,EAA2B,mBACrB,4BAANA,EAAkC,0BAC5B,6BAANA,EAAmC,2BAC7B,wBAANA,EAA8B,wBACxB,qBAANA,EAA2B,mBAAqB,GAC9CmK,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,uBAAKuB,MAAO,CAACkG,gBAAiBA,EAAiBmJ,QAAS,QACnDvS,MAKjB,MAER,gBAACgb,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACf,uBAAKnY,UAAU,QAAf,gBACK8+B,GAAWA,EAAQa,cAChB,uBAAKx/B,MAAO,CAACyK,UAAW,0BACnBk0B,EAAQe,WAAWx+B,IAAI,SAACnF,EAAG0C,GACxB,IAAM3B,EACI,SAANf,EAAe,OACT,gBAANA,EAAsB,cAChB,gBAANA,EAAsB,cAChB,aAANA,EAAmB,6BACb,gBAANA,EAAsB,6BAChB,iBAANA,EAAuB,eACjB,qBAANA,EAA2B,mBACrB,4BAANA,EAAkC,0BAC5B,6BAANA,EAAmC,2BAC7B,wBAANA,EAA8B,wBACxB,qBAANA,EAA2B,mBAAqB,GAC9CmK,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,uBAAKuB,MAAO,CAACkG,gBAAiBA,EAAiBmJ,QAAS,QACnDvS,MAKjB,QAIhB,uBAAK+C,UAAU,eACX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC7Y,GAAA,EAAD,CACII,YAAY,sBACZO,UAAQ,EACRN,MAAOm/B,GAAWA,EAAQC,aAAeD,EAAQC,aAAe,GAChE3+B,SAAU,SAACyvC,OACf,gBAACvwC,GAAA,EAAD,CACII,YAAY,cACZO,UAAQ,EACRN,MAAOm/B,GAAWA,EAAQG,UAAYH,EAAQG,UAAY,GAC1D7+B,SAAU,SAACyvC,UAI3B,uBAAK7vC,UAAU,eACX,uBAAKA,UAAU,QAAf,kCACA,gBAAC,GAAD,CACIqE,MAAM,SACNpE,UAAQ,EACRN,SACIm/B,GACAA,EAAQK,aACRL,EAAQK,YAAY9a,SAAS,WACjCjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,UACNpE,UAAQ,EACRN,SACIm/B,GACAA,EAAQK,aACRL,EAAQK,YAAY9a,SAAS,YACjCjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,YACNpE,UAAQ,EACRN,SACIm/B,GACAA,EAAQK,aACRL,EAAQK,YAAY9a,SAAS,cACjCjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,WACNpE,UAAQ,EACRN,SACIm/B,GACAA,EAAQK,aACRL,EAAQK,YAAY9a,SAAS,aACjCjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,SACNpE,UAAQ,EACRN,SACIm/B,GACAA,EAAQK,aACRL,EAAQK,YAAY9a,SAAS,WACjCjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,WACNpE,UAAQ,EACRN,SACIm/B,GACAA,EAAQK,aACRL,EAAQK,YAAY9a,SAAS,aACjCjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,SACNpE,UAAQ,EACRN,SACIm/B,GACAA,EAAQK,aACRL,EAAQK,YAAY9a,SAAS,WACjCjkB,SAAU,SAACyvC,QAEnB,uBAAK7vC,UAAU,eACX,uBAAKA,UAAU,QAAf,qCACA,gBAAC,GAAD,CACIqE,MAAM,YACNpE,UAAQ,EACRN,SACIm/B,GACAA,EAAQO,gBACRP,EAAQO,eAAerrB,KAAK,SAAA9X,GAAC,MAAiB,cAAbA,EAAEisC,UACvC/nC,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,YACNpE,UAAQ,EACRN,SACIm/B,GACAA,EAAQO,gBACRP,EAAQO,eAAerrB,KAAK,SAAA9X,GAAC,MAAiB,cAAbA,EAAEisC,UACvC/nC,SAAU,SAACyvC,OACf,gBAAC53B,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACf,gBAACF,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACI9T,MAAM,QACNpE,UAAQ,EACRN,SACIqwC,GACAA,EAAS79B,SACT69B,EAAS79B,QAAQkS,SAAS,UAC9BjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,gBACNpE,UAAQ,EACRN,SACIqwC,GACAA,EAAS79B,SACT69B,EAAS79B,QAAQkS,SAAS,kBAC9BjkB,SAAU,SAACyvC,UAI3B,uBAAK7vC,UAAU,eACX,uBAAKA,UAAU,QAAf,kBACA,gBAAC,GAAD,CACIqE,MAAM,sBACNpE,UAAQ,EACRN,SACIm/B,GACAA,EAAQS,eACRT,EAAQS,cAAclb,SAAS,wBACnCjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,sDACNpE,UAAQ,EACRN,SACIm/B,GACAA,EAAQS,eACRT,EAAQS,cAAclb,SAAS,0BACnCjkB,SAAU,SAACyvC,QAEnB,uBAAK7vC,UAAU,eACX,uBAAKA,UAAU,QAAf,2BACA,gBAAC,GAAD,CACIqE,MAAM,yDACNpE,UAAQ,EACRN,SACIm/B,GACAA,EAAQW,wBACRX,EAAQW,uBAAuBpb,SAAS,uBAC5CjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,kEACNpE,UAAQ,EACRN,SACIm/B,GACAA,EAAQW,wBACRX,EAAQW,uBAAuBpb,SAAS,mBAC5CjkB,SAAU,SAACyvC,aAhQnC,GAAoCpvC,aCDvBwvC,GAAb,sLAGQ,IAAMhQ,EAAaxgC,KAAKF,MAAM2rB,OAAOgT,sBAClBz+B,KAAKF,MAAM2rB,OAAOgT,sBAAsB+B,gBACxClgC,EAEbmwC,EAAuBjQ,GACAA,EAAWG,qBACXH,EAAWG,qBAAqBpsB,KAAK,SAAA9X,GAAC,MAAqB,2BAAjBA,EAAE+jC,kBAC5ClgC,EAE7B,OACI,uBAAKC,UAAU,eACX,uBAAKA,UAAU,eACX,uBAAKA,UAAU,QAAf,uBACA,gBAAC,GAAD,CACIqE,MAAM,sBACNpE,UAAQ,EACRN,SACIsgC,IACAA,EAAWC,sBACXD,EAAWC,oBAAoB7b,SAAS,uBAC5CjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,qBACNpE,UAAQ,EACRN,SACIsgC,IACAA,EAAWC,sBACXD,EAAWC,oBAAoB7b,SAAS,sBAC5CjkB,SAAU,SAACyvC,QAEnB,uBAAK7vC,UAAU,eACX,uBAAKA,UAAU,QAAf,wBACA,gBAAC,GAAD,CACIqE,MAAM,sBACNpE,UAAQ,EACRN,SACIsgC,IACAA,EAAWG,yBACXH,EAAWG,qBAAqBpsB,KAAK,SAAA9X,GAAC,MAAqB,wBAAjBA,EAAE+jC,aAChD7/B,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,qBACNpE,UAAQ,EACRN,SACIsgC,IACAA,EAAWG,yBACXH,EAAWG,qBAAqBpsB,KAAK,SAAA9X,GAAC,MAAqB,uBAAjBA,EAAE+jC,aAChD7/B,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,yBACNpE,UAAQ,EACRN,SACIsgC,IACAA,EAAWG,yBACXH,EAAWG,qBAAqBpsB,KAAK,SAAA9X,GAAC,MAAqB,2BAAjBA,EAAE+jC,aAChD7/B,SAAU,SAACyvC,OACf,gBAAC53B,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACf,gBAACF,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACX,gBAAC,GAAD,CACI9T,MAAM,uCACNpE,UAAQ,EACRN,SACIuwC,IACAA,EAAqB/9B,UACrB+9B,EAAqB/9B,QAAQkS,SAAS,qBAC1CjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,uDACNpE,UAAQ,EACRN,SACIuwC,IACAA,EAAqB/9B,UACrB+9B,EAAqB/9B,QAAQkS,SAAS,0BAC1CjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,mDACNpE,UAAQ,EACRN,SACIuwC,IACAA,EAAqB/9B,UACrB+9B,EAAqB/9B,QAAQkS,SAAS,kBAC1CjkB,SAAU,SAACyvC,UAI3B,uBAAK7vC,UAAU,eACX,uBAAKA,UAAU,QAAf,2BACA,gBAAC,GAAD,CACIqE,MAAM,QACNpE,UAAQ,EACRN,SACIsgC,IACAA,EAAWK,wBACXL,EAAWK,sBAAsBjc,SAAS,SAC9CjkB,SAAU,SAACyvC,OACf,gBAAC,GAAD,CACIxrC,MAAM,qBACNpE,UAAQ,EACRN,SACIsgC,IACAA,EAAWK,wBACXL,EAAWK,sBAAsBjc,SAAS,sBAC9CjkB,SAAU,SAACyvC,aA1GnC,GAAuCpvC,aCC1B0vC,GAAb,sLAGQ,IAAM3P,EAAa/gC,KAAKF,MAAM2rB,OAAOgT,sBAClBz+B,KAAKF,MAAM2rB,OAAOgT,sBAAsBsC,gBACxCzgC,EAEnB,OACI,uBAAKC,UAAU,eACX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC7Y,GAAA,EAAD,CACII,YAAY,sBACZO,UAAQ,EACRN,MACI6gC,GAAcA,EAAWG,mBACzBH,EAAWG,mBAAqB,GACpCvgC,SAAU,SAACyvC,QAEnB,gBAAC53B,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACf,gBAAC7Y,GAAA,EAAD,CACQI,YAAY,gCACZO,UAAQ,EACRN,MACI6gC,GAAcA,EAAWI,0BACzBJ,EAAWI,0BAA4B,GAC3CxgC,SAAU,SAACyvC,QAEnB,gBAAC53B,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,QAAf,8BACA,gBAAC,GAAD,CACIqE,MAAM,eACNpE,UAAQ,EACR0vC,oBAAkBnP,GAAmD,iBAArCA,EAAWC,uBAC3CrgC,SAAU,eACd,gBAAC6X,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACf,gBAACF,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC7Y,GAAA,EAAD,CACII,YAAY,iBACZO,UAAQ,EACRN,MACI6gC,GAAcA,EAAWQ,aACzBR,EAAWQ,aAAe,GAC9B5gC,SAAU,SAACyvC,SAIvB,gBAAC,GAAD,CACIxrC,MAAM,gBACNpE,UAAQ,EACR0vC,oBAAkBnP,GAAmD,kBAArCA,EAAWC,uBAC3CrgC,SAAU,eACd,gBAAC,GAAD,CACIiE,MAAM,gBACNpE,UAAQ,EACR0vC,oBAAkBnP,GAAmD,kBAArCA,EAAWC,uBAC3CrgC,SAAU,eACd,gBAAC,GAAD,CACIiE,MAAM,eACNpE,UAAQ,EACR0vC,oBAAkBnP,GAAmD,iBAArCA,EAAWC,uBAC3CrgC,SAAU,eACd,gBAAC,GAAD,CACIiE,MAAM,eACNpE,UAAQ,EACR0vC,oBAAkBnP,GAAmD,iBAArCA,EAAWC,uBAC3CrgC,SAAU,eACd,gBAAC,GAAD,CACIiE,MAAM,cACNpE,UAAQ,EACR0vC,oBAAkBnP,GAAmD,gBAArCA,EAAWC,uBAC3CrgC,SAAU,eACd,gBAAC,GAAD,CACIiE,MAAM,gBACNpE,UAAQ,EACR0vC,oBAAkBnP,GAAmD,kBAArCA,EAAWC,uBAC3CrgC,SAAU,gBAElB,gBAAC6X,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC7Y,GAAA,EAAD,CACII,YAAY,8BACZO,UAAQ,EACRN,MACI6gC,GAAcA,EAAWM,wBACzBN,EAAWM,wBAA0B,GACzC1gC,SAAU,SAACyvC,cAtFvC,GAAuCpvC,aCF1BqoC,GAAb,sLAGQ,IAAM1a,EAAY3uB,KAAKF,MAAM2rB,OAAOgT,sBAClBz+B,KAAKF,MAAM2rB,OAAOgT,sBAAsB9P,eACxCruB,EAElB,OACI,uBAAKC,UAAU,eACX,gBAAC,GAAD,CACIqE,MAAM,iDACNpE,UAAQ,EACRN,SAAOyuB,IAAaA,EAAU/J,SAAS,+BACvCjkB,SAAU,SAACyvC,YAb/B,GAAsCpvC,aCMzB2vC,GAAb,YAwBI,WAAY7wC,GAAgB,IAAD,+BACvB,8CAAMA,KAvBV8wC,gBAAqC,CACjC,CAAE/O,WAAW,EAAOD,UAAW,SAAUF,WAAY,qBACrD,CAAEG,WAAW,EAAOD,UAAW,SAAUF,WAAY,kBACrD,CAAEG,WAAW,EAAOD,UAAW,SAAUF,WAAY,iBACrD,CAAEG,WAAW,EAAOD,UAAW,SAAUF,WAAY,wBACrD,CAAEG,WAAW,EAAOD,UAAW,SAAUF,WAAY,0CACrD,CAAEG,WAAW,EAAOD,UAAW,SAAUF,WAAY,4CACrD,CAAEG,WAAW,EAAOD,UAAW,SAAUF,WAAY,uCACrD,CAAEG,WAAW,EAAOD,UAAW,SAAUF,WAAY,2CACrD,CAAEG,WAAW,EAAOD,UAAW,SAAUF,WAAY,uBACrD,CAAEG,WAAW,EAAOD,UAAW,SAAUF,WAAY,cACrD,CAAEG,WAAW,EAAOD,UAAW,SAAUF,WAAY,uBACrD,CAAEG,WAAW,EAAOD,UAAW,SAAUF,WAAY,2BACrD,CAAEG,WAAW,EAAOD,UAAW,SAAUF,WAAY,8BACrD,CAAEG,WAAW,EAAOD,UAAW,SAAUF,WAAY,4BACrD,CAAEG,WAAW,EAAOD,UAAW,SAAUF,WAAY,0BACrD,CAAEG,WAAW,EAAOD,UAAW,SAAUF,WAAY,+BACrD,CAAEG,WAAW,EAAOD,UAAW,SAAUF,WAAY,iCACrD,CAAEG,WAAW,EAAOD,UAAW,SAAUF,WAAY,2BACrD,CAAEG,WAAW,EAAOD,UAAW,SAAUF,WAAY,0CAMrD,EAAKvgC,MAAQ,CACT0vC,sBAAsB,GAJH,EAxB/B,mFAiCQ,IAAMpP,EAAczhC,KAAKF,MAAM2rB,OAAOgT,sBACnBz+B,KAAKF,MAAM2rB,OAAOgT,sBAAsBgD,iBACxCnhC,EACnBN,KAAK4wC,gBAAkB5wC,KAAK4wC,gBAAgBhvC,IAAI,SAAAqB,GAC5C,GAAIw+B,EAAa,CACb,IAAMmP,EAAkBnP,EAAYltB,KAAK,SAAA9X,GAAC,OAAIA,EAAEilC,aAAez+B,EAAKy+B,aAEpE,GADAhgC,QAAQC,IAAIivC,GACRA,EACA,MAAO,CACHlP,WAAYz+B,EAAKy+B,WACjBE,UAAWgP,EAAgBhP,UAC3BC,UAAW+O,EAAgB/O,WAIvC,OAAO5+B,IAGXjD,KAAK+B,SAAS,CAAC8uC,sBAAsB,MAnD7C,+BAsD4B,IAAD,OAEnB,OACI,uBAAKtwC,UAAU,eACX,gBAACgD,GAAA,EAAD,CACIhD,UAAU,eACV2D,KAAMlE,KAAK4wC,gBACX/rC,aAAc,kBAAM,EAAK2nB,qBACzB1nB,UAAW,SAAC2nB,EAA0BttB,GAA3B,OACP,EAAKutB,eAAeD,EAASttB,SA/DrD,0CAsEQ,OACI,gCACA,gBAACwtB,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,kBACA,gBAACA,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,WAA9B,iBA1EZ,qCA+EmB60B,EAAwBz2B,GACnC,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UAEvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,KAAYvwB,KAAe00C,mBAAmBlb,EAAM8L,aACpD,gBAAC/U,GAAA,EAAD,KAAYvwB,KAAe00C,mBAAmBlb,EAAMgM,YACpD,gBAACjV,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,WAAY60B,EAAMiM,UAAY,MAAQ,WAtFpF,GAAwC7gC,aCK3B+vC,GAAb,YAYI,WAAYjxC,GAAgB,IAAD,+BACvB,8CAAMA,KAXVkvC,QAAU,CACN,CAAE9uC,MAAO,EAAG0E,MAAO,oBACnB,CAAE1E,MAAO,EAAG0E,MAAO,qBACnB,CAAE1E,MAAO,EAAG0E,MAAO,WACnB,CAAE1E,MAAO,EAAG0E,MAAO,cACnB,CAAE1E,MAAO,EAAG0E,MAAO,cACnB,CAAE1E,MAAO,EAAG0E,MAAO,aACnB,CAAE1E,MAAO,EAAG0E,MAAO,gBAMnB,EAAKzD,MAAQ,CACTytC,YAAa,GAJM,EAZ/B,wEAoB4B,IAAD,OAEnB,OACI,2BACI,uBAAKruC,UAAU,eACX,gBAAC,GAAD,CACIyuC,QAAShvC,KAAKgvC,QACdJ,YAAa5uC,KAAKmB,MAAMytC,YACxBkB,SAAU,SAACkB,GACP,MAAO,CAAEjhC,QAAS,WAEtBggC,SAAU,SAAC5wC,GACP,OACI,uBAAKuB,MAAO,CAAC2B,MAAO,SAChB,uBAAK9B,UAAU,WAAWG,MAAO,CAACye,OAAQ,UACrC,EAAK6vB,QAAQ7vC,GAAOyF,SAKrCmqC,eAAgB,SAAC7uC,GACb,EAAK6B,SAAS,CAAC6sC,YAAa1uC,QAGZ,IAA3BF,KAAKmB,MAAMytC,YACR,gBAAC,GAAD,CAAoBnjB,OAAQzrB,KAAKF,MAAM2rB,SACZ,IAA3BzrB,KAAKmB,MAAMytC,YACX,gBAAC,GAAD,CAAqBnjB,OAAQzrB,KAAKF,MAAM2rB,SACb,IAA3BzrB,KAAKmB,MAAMytC,YACX,gBAAC,GAAD,CAAgBnjB,OAAQzrB,KAAKF,MAAM2rB,SACR,IAA3BzrB,KAAKmB,MAAMytC,YACX,gBAAC,GAAD,CAAmBnjB,OAAQzrB,KAAKF,MAAM2rB,SACX,IAA3BzrB,KAAKmB,MAAMytC,YACX,gBAAC,GAAD,CAAmBnjB,OAAQzrB,KAAKF,MAAM2rB,SACX,IAA3BzrB,KAAKmB,MAAMytC,YACX,gBAAC,GAAD,CAAkBnjB,OAAQzrB,KAAKF,MAAM2rB,SACV,IAA3BzrB,KAAKmB,MAAMytC,YACX,gBAAC,GAAD,CAAoBnjB,OAAQzrB,KAAKF,MAAM2rB,SACvC,UA1DpB,GAAkDzqB,aCMrCiwC,GAAb,YAEI,WAAYnxC,GAAgB,IAAD,+BACvB,8CAAMA,KAEDqB,MAAQ,CACT+vC,WAAY,GACZC,eAAgB,GAChBC,iBAAkB,GAClBC,iBAAkB,GAClBC,kBAAmB,GACnBC,kBAAmB,GACnBC,cAAe,IAVI,EAF/B,wEAgB4B,IAAD,OACb/lB,EAASzrB,KAAKF,MAAM2rB,OACpBM,EAAWN,EAAOM,SAClBuM,EAAY7M,EAAO6M,UAEnB3K,EAAY5B,GAAYA,EAAS4B,UAAYvxB,KAAeuvB,kBAAkBI,EAAS4B,WAAa,MACpGC,EAAU7B,GAAYA,EAAS6B,QAAUxxB,KAAeuvB,kBAAkBI,EAAS6B,SAAW,MAC9F4B,EAAa/D,EAAOqC,aAAerC,EAAOqC,aAAaiO,YAAc,MACrEsT,EAAgB5jB,EAAOqC,aAAerC,EAAOqC,aAAa+N,QAAU,MAE1E,OACI,gBAACrjB,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACpB1P,KAAKsvC,WAAW,wBAAyB7jB,EAAO4B,oBAChDtB,EACG,gCACC/rB,KAAKsvC,WAAW,WAAYvjB,EAAS9W,KAAM,EACxC,WACI,EAAKnV,MAAMmmB,QAAQvX,KAAnB,uCAAwDqd,EAASzY,KACjE1L,OAAOC,SAAS2B,WAEvBxJ,KAAKsvC,WAAW,mBAAoB3hB,GACpC3tB,KAAKsvC,WAAW,cAAe1hB,GAC/B5tB,KAAKsvC,WAAW,0BAA2B7jB,EAAOC,eAAgB,GAClE1rB,KAAKsvC,WAAW,uBAAwB7jB,EAAOwP,eAAiB,OAChEj7B,KAAKsvC,WAAW,aAAc9f,GAC9BxvB,KAAKsvC,WAAW,iBAAkBD,EAAe,IAElD,KACJ,gBAAC72B,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAIhY,MAAO,CAAC+wC,UAAW,SACjCnZ,EACG,gBAAC/0B,GAAA,EAAD,CACIW,KAAMo0B,EACNzzB,aAAc,kBAAM,EAAK2nB,qBACzB1nB,UAAW,SAAC2nB,EAActtB,GAAf,OACP,EAAKutB,eAAeD,EAASttB,MACrC,SAnDxB,iCAyDeyF,EAAe1E,EAAewY,EAAU5S,GAC/C,OACI,gBAAC0S,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,cAAcmY,GAAIA,GAAU,EAAGhY,MAAO,CAACqP,QAAS,aACjE,uBAAKxP,UAAU,cAAcqE,GAC5BkB,EACG,gBAAC,GAAD,CAAYlB,MAAO1E,EAAO4F,QAASA,IAEnC,uBAAKvF,UAAU,YAAYL,MAhE/C,0CAwEQ,OACI,gCACCF,KAAK0xC,mBAAmB,YAAa,aACrC1xC,KAAK0xC,mBAAmB,iBAAkB,YAC1C1xC,KAAK0xC,mBAAmB,mBAAoB,cAC5C1xC,KAAK0xC,mBAAmB,mBAAoB,cAC5C1xC,KAAK0xC,mBAAmB,oBAAqB,gBAC7C1xC,KAAK0xC,mBAAmB,oBAAqB,iBAC7C1xC,KAAK0xC,mBAAmB,gBAAiB,uBAhFtD,qCAqFmB3T,EAAwB5+B,GACnC,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UAEvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,KAAYoR,EAAS9oB,MACrB,gBAAC0X,GAAA,EAAD,KAAYoR,EAAS5S,UACrB,gBAACwB,GAAA,EAAD,KAAYoR,EAASK,YACrB,gBAACzR,GAAA,EAAD,KAAYoR,EAASO,YACrB,gBAAC3R,GAAA,EAAD,KAAYvwB,KAAeuvB,kBAAkBoS,EAAS3P,cACtD,gBAACzB,GAAA,EAAD,KAAYvwB,KAAeuvB,kBAAkBoS,EAAShR,cACtD,gBAACJ,GAAA,EAAD,KAAYoR,EAASS,YAhGrC,yCAqGuBmT,EAAkBC,EAAoBvvC,GAA8B,IAAD,OAClF,OACI,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAUtZ,GAAgB,UACzC,wBAAM9B,UAAU,YAAYqxC,GAC5B,uBAAKlxC,MAAO,CAACmV,MAAO,UAChB,gBAAC,KAAD,CACI9P,KAAM8rC,IACN/rC,QAAS,gBAIjB,gBAACjG,GAAA,EAAD,CACIK,MAAOF,KAAKmB,MAAMwwC,GAClBhxC,SAAU,SAACT,GAEP,EAAK6B,SAAL,gBAAgB4vC,EAAWzxC,YApHnD,GAA2Cc,aCL9B8wC,GAAb,YAEI,WAAYhyC,GAAgB,IAAD,+BACvB,8CAAMA,KAEDqB,MAAQ,GAHU,EAF/B,mFAUyB,IAAD,OACV2oB,EAAS,CACX0b,MAAO,CACHnQ,UAAWr1B,KAAKF,MAAM2rB,OAAOnY,KAGrCjS,KAAIC,IAAJ,yBAA0B+B,KAAKC,UAAUwmB,IACrC,SAACroB,GACGC,QAAQC,IAAIF,GACZ,EAAKM,SAAS,CAAC0a,QAAS+R,GAASujB,WAAWtwC,MAEhD,SAACtB,GACGuB,QAAQC,IAAIxB,OAtB5B,+BA0B4B,IAAD,OAEnB,OACI,uBAAKI,UAAU,cAAcG,MAAO,CAAC+wC,UAAW,SAC3CzxC,KAAKmB,MAAMsb,QACR,gBAAClZ,GAAA,EAAD,CACIW,KAAMlE,KAAKmB,MAAMsb,QACjB5X,aAAc,kBAAM,EAAK2nB,qBACzBxoB,mBAAoB,CAAC,GAAI,GAAI,IAC7Bc,UAAW,SAAC2nB,EAActtB,GAAf,OACP,EAAKutB,eAAeD,EAASttB,MAErC,gBAAC,GAAD,CAASmD,OAAO,aAtCpC,0CA6CQ,OACI,gCACCtC,KAAK0xC,mBAAmB,WAAY,aACpC1xC,KAAK0xC,mBAAmB,iBAAkB,QAC1C1xC,KAAK0xC,mBAAmB,mBAAoB,eAC5C1xC,KAAK0xC,mBAAmB,mBAAoB,oBAC5C1xC,KAAK0xC,mBAAmB,oBAAqB,oBAC7C1xC,KAAK0xC,mBAAmB,gBAAiB,aApDtD,qCAyDmB1nB,EAAoB7qB,GAC/B,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACjDskC,EAAkBzZ,EAAOyZ,gBAAkBrnC,KAAeuvB,kBAAkB3B,EAAOyZ,iBAAmB,MACtGE,EAAkB3Z,EAAO2Z,gBAAkBvnC,KAAeuvB,kBAAkB3B,EAAO2Z,iBAAmB,MACtG1uB,EAAO7Y,KAAeovB,aACxBxB,EAAOG,UACPH,EAAOI,WACPJ,EAAOK,UAGX,OACI,gBAACwC,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,KAAY3C,EAAOzoB,UACnB,gBAACorB,GAAA,EAAD,KAAY1X,GACZ,gBAAC0X,GAAA,EAAD,KAAY3C,EAAOuZ,eAAiB,OACpC,gBAAC5W,GAAA,EAAD,KAAY8W,GAAmB,OAC/B,gBAAC9W,GAAA,EAAD,KAAYgX,GACZ,gBAAChX,GAAA,EAAD,KAAY3C,EAAO5gB,QAAU,UA1E7C,yCA+EuBuoC,EAAkBC,EAAoBvvC,GAA8B,IAAD,OAClF,OACI,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAUtZ,GAAgB,UACzC,wBAAM9B,UAAU,YAAYqxC,GAC5B,uBAAKlxC,MAAO,CAACmV,MAAO,UAChB,gBAAC,KAAD,CACI9P,KAAM8rC,IACN/rC,QAAS,gBAIjB,gBAACjG,GAAA,EAAD,CACIK,MAAOF,KAAKmB,MAAMwwC,GAClBhxC,SAAU,SAACT,GAEP,EAAK6B,SAAL,gBAAgB4vC,EAAWzxC,YA9FnD,GAAoCc,a,UCGvBgxC,GAAb,YAOI,WAAYlyC,GAAgB,IAAD,+BACvB,8CAAMA,KANVkvC,QAAU,CACN,CAAE9uC,MAAO,EAAG0E,MAAO,aACnB,CAAE1E,MAAO,EAAG0E,MAAO,cAGI,EAkB3BqtC,SAAW,SAACxxC,GACRY,KAAIC,IAAJ,kBAAmB,EAAKxB,MAAM2rB,OAAOnY,GAArC,iBAAgD7S,GAC5C,SAACgB,GACGC,QAAQC,IAAIF,GACC,cAAThB,EACA,EAAKsB,SAAS,CAACu6B,UAAW9N,GAAS0jB,gBAAgBzwC,EAASwB,QAC5C,cAATxC,GACP,EAAKsB,SAAS,CAAC2a,UAAW8R,GAAS0jB,gBAAgBzwC,EAASwB,SAGpE,SAAC9C,GACGuB,QAAQC,IAAIxB,MA1BpB,EAAKgB,MAAQ,CACTytC,YAAa,GAJM,EAP/B,mFAgBO5uC,KAAKiyC,SAAS,eAhBrB,0CAmBwB5tC,EAAgBlD,GAC5BnB,KAAKmB,MAAMytC,aAAeztC,EAAMytC,aAChC5uC,KAAKiyC,SAA+B,IAAtB9wC,EAAMytC,YAAoB,YAAc,eArBlE,+BAwC4B,IAAD,OAEnB,OACI,2BACI,2BACI,gBAAC,GAAD,CACII,QAAShvC,KAAKgvC,QACdJ,YAAa5uC,KAAKmB,MAAMytC,YACxBkB,SAAU,SAACkB,GACP,MAAO,CAAEjhC,QAAS,WAEtBggC,SAAU,SAAC5wC,GACP,OACI,uBAAKuB,MAAO,CAAC2B,MAAO,SAChB,uBAAK9B,UAAU,WAAWG,MAAO,CAACye,OAAQ,UACrC,EAAK6vB,QAAQ7vC,GAAOyF,SAKrCmqC,eAAgB,SAAC7uC,GACb,EAAK6B,SAAS,CAAC6sC,YAAa1uC,QAGxC,uBAAKK,UAAU,cAAcG,MAAO,CAAC+wC,UAAW,SAChB,IAA3BzxC,KAAKmB,MAAMytC,aAAqB5uC,KAAKmB,MAAMm7B,UACxCt8B,KAAKmyC,oBAAoBnyC,KAAKmB,MAAMm7B,WACT,IAA3Bt8B,KAAKmB,MAAMytC,aAAqB5uC,KAAKmB,MAAMub,UAC3C1c,KAAKmyC,oBAAoBnyC,KAAKmB,MAAMub,WAEpC,gBAAC,GAAD,CAASpa,OAAO,cAtExC,0CA6EwBW,GAAoC,IAAD,OACnD,OACI,gBAACM,GAAA,EAAD,CACIW,KAAMjB,EACN4B,aAAc,kBAAM,EAAK2nB,qBACzB1nB,UAAW,SAAC2nB,EAActtB,GAAf,OACP,EAAKutB,eAAeD,EAASttB,QAnFjD,0CAwFQ,OACI,gCACCa,KAAK0xC,mBAAmB,YAAa,YACrC1xC,KAAK0xC,mBAAmB,iBAAkB,gBAC1C1xC,KAAK0xC,mBAAmB,mBAAoB,4BAA6B,SACzE1xC,KAAK0xC,mBAAmB,mBAAoB,iBAC5C1xC,KAAK0xC,mBAAmB,oBAAqB,WAC7C1xC,KAAK0xC,mBAAmB,oBAAqB,iBAC7C1xC,KAAK0xC,mBAAmB,gBAAiB,aAhGtD,qCAqGmB3lB,EAAwB5sB,GACnC,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACjDwuB,EAAY5B,EAAS4B,UAAYvxB,KAAeuvB,kBAAkBI,EAAS4B,WAAa,MACxFykB,EAAarmB,EAASqmB,WAAah2C,KAAeuvB,kBAAkBI,EAASqmB,YAAc,MAEjG,OACI,gBAACvlB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,KAAYZ,EAAS9W,MACrB,gBAAC0X,GAAA,EAAD,KAAYZ,EAAS+V,YAAc,OACnC,gBAACnV,GAAA,EAAD,KAAYgB,GACZ,gBAAChB,GAAA,EAAD,KAAYZ,EAAStrB,MAAQ,OAC7B,gBAACksB,GAAA,EAAD,KAAYZ,EAASyS,SAAW,OAChC,gBAAC7R,GAAA,EAAD,KAAYylB,GACZ,gBAACzlB,GAAA,EAAD,KAAYZ,EAAS3iB,QAAU,UAlH/C,yCAuHuBuoC,EAAkBC,EAAoBvvC,GAA8B,IAAD,OAClF,OACI,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAUtZ,GAAgB,UACzC,wBAAM9B,UAAU,YAAYqxC,GAC5B,uBAAKlxC,MAAO,CAACmV,MAAO,UAChB,gBAAC,KAAD,CACI9P,KAAM8rC,IACN/rC,QAAS,gBAIjB,gBAACjG,GAAA,EAAD,CACIK,MAAOF,KAAKmB,MAAMwwC,GAClBhxC,SAAU,SAACT,GAEP,EAAK6B,SAAL,gBAAgB4vC,EAAWzxC,YAtInD,GAAoCc,aCDvBqxC,GAAb,YAmEI,WAAYvyC,GAAgB,IAAD,+BACvB,8CAAMA,KAlEVkvC,QAAU,CACN,CAAE9uC,MAAO,EAAG0E,MAAO,oBACnB,CAAE1E,MAAO,EAAG0E,MAAO,oBACnB,CAAE1E,MAAO,EAAG0E,MAAO,eACnB,CAAE1E,MAAO,EAAG0E,MAAO,oBACnB,CAAE1E,MAAO,EAAG0E,MAAO,wBACnB,CAAE1E,MAAO,EAAG0E,MAAO,wBA2DI,EAxD3B0tC,sBAAwB,CACpB,CAAE1tC,MAAO,gBAAmBzD,MAAO,QACnC,CAAEyD,MAAO,UAAmBzD,MAAO,WACnC,CAAEyD,MAAO,cAAmBzD,MAAO,cACnC,CAAEyD,MAAO,QAAmBzD,MAAO,SACnC,CAAEyD,MAAO,gBAAmBzD,MAAO,cACnC,CAAEyD,MAAO,cAAmBzD,MAAO,YACnC,CAAEyD,MAAO,SAAmBzD,MAAO,WAiDZ,EA9C3BoxC,sBAAwB,CACpB,CAAE3tC,MAAO,kBAAmBzD,MAAO,cACnC,CAAEyD,MAAO,UAAmBzD,MAAO,WACnC,CAAEyD,MAAO,cAAmBzD,MAAO,cACnC,CAAEyD,MAAO,QAAmBzD,MAAO,SACnC,CAAEyD,MAAO,gBAAmBzD,MAAO,cACnC,CAAEyD,MAAO,cAAmBzD,MAAO,YACnC,CAAEyD,MAAO,SAAmBzD,MAAO,WAuCZ,EApC3BqxC,kBAAoB,CAChB,CAAE5tC,MAAO,gBAAmBzD,MAAO,QACnC,CAAEyD,MAAO,aAAmBzD,MAAO,aACnC,CAAEyD,MAAO,QAAmBzD,MAAO,SACnC,CAAEyD,MAAO,gBAAmBzD,MAAO,cACnC,CAAEyD,MAAO,cAAmBzD,MAAO,YACnC,CAAEyD,MAAO,SAAmBzD,MAAO,WA8BZ,EA3B3BsxC,sBAAwB,CACpB,CAAE7tC,MAAO,gBAAmBzD,MAAO,QACnC,CAAEyD,MAAO,OAAmBzD,MAAO,QACnC,CAAEyD,MAAO,gBAAmBzD,MAAO,eACnC,CAAEyD,MAAO,QAAmBzD,MAAO,SACnC,CAAEyD,MAAO,gBAAmBzD,MAAO,cACnC,CAAEyD,MAAO,cAAmBzD,MAAO,YACnC,CAAEyD,MAAO,SAAmBzD,MAAO,WAoBZ,EAjB3BuxC,0BAA4B,CACxB,CAAE9tC,MAAO,gBAAmBzD,MAAO,QACnC,CAAEyD,MAAO,SAAmBzD,MAAO,UACnC,CAAEyD,MAAO,QAAmBzD,MAAO,SACnC,CAAEyD,MAAO,gBAAmBzD,MAAO,cACnC,CAAEyD,MAAO,cAAmBzD,MAAO,YACnC,CAAEyD,MAAO,SAAmBzD,MAAO,WAWZ,EAR3BwxC,yBAA2B,CACvB,CAAE/tC,MAAO,gBAAmBzD,MAAO,QACnC,CAAEyD,MAAO,QAAmBzD,MAAO,SACnC,CAAEyD,MAAO,gBAAmBzD,MAAO,cACnC,CAAEyD,MAAO,cAAmBzD,MAAO,YACnC,CAAEyD,MAAO,SAAmBzD,MAAO,WAGZ,EA8B3B8wC,SAAW,SAACxxC,GAMR,IAAMqpB,EAAS,CACX0b,MAAO,CACHnC,QAAS5iC,EACT40B,UAAW,EAAKv1B,MAAM2rB,OAAOnY,KAIrCjS,KAAIC,IAAJ,2BAA4B+B,KAAKC,UAAUwmB,IACvC,SAACroB,GACGC,QAAQC,IAAIF,GACZ,EAAKM,SAAS,CAAC6wC,UAAWpkB,GAASqkB,aAAapxC,EAASmxC,cAE7D,SAACzyC,GACGuB,QAAQC,IAAIxB,MA9CpB,EAAKgB,MAAQ,CACTytC,YAAa,GAJM,EAnE/B,mFA4EQ5uC,KAAKiyC,SAAS,sBA5EtB,0CA+EwB5tC,EAAgBlD,GAC5BnB,KAAKmB,MAAMytC,aAAeztC,EAAMytC,cACN,IAAtBztC,EAAMytC,YACN5uC,KAAKiyC,SAAS,oBACe,IAAtB9wC,EAAMytC,YACb5uC,KAAKiyC,SAAS,oBACe,IAAtB9wC,EAAMytC,YACb5uC,KAAKiyC,SAAS,eACe,IAAtB9wC,EAAMytC,YACb5uC,KAAKiyC,SAAS,oBACe,IAAtB9wC,EAAMytC,YACb5uC,KAAKiyC,SAAS,wBACe,IAAtB9wC,EAAMytC,aACb5uC,KAAKiyC,SAAS,2BA5F9B,+BAwH4B,IAAD,OAEnB,OACI,gBAACz5B,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,2BACI,gBAAC,GAAD,CACIs/B,QAAShvC,KAAKgvC,QACdJ,YAAa5uC,KAAKmB,MAAMytC,YACxBkB,SAAU,SAACkB,GACP,MAAO,CAAEjhC,QAAS,WAEtBggC,SAAU,SAAC5wC,GACP,OACI,uBAAKuB,MAAO,CAAC2B,MAAO,SAChB,uBAAK9B,UAAU,WAAWG,MAAO,CAACye,OAAQ,UACrC,EAAK6vB,QAAQ7vC,GAAOyF,SAKrCmqC,eAAgB,SAAC7uC,GACb,EAAK6B,SAAS,CAAC6sC,YAAa1uC,QAGxC,uBAAKK,UAAU,cAAcG,MAAO,CAAC+wC,UAAW,SAC3CzxC,KAAKmB,MAAMyxC,UACmB,IAA3B5yC,KAAKmB,MAAMytC,YACP,gBAACrrC,GAAA,EAAD,CACIW,KAAMlE,KAAKmB,MAAMyxC,UACjB/tC,aAAc,WACV,OAAO,EAAK2nB,kBAAkB,EAAK8lB,wBAEvCxtC,UAAW,SAAC2nB,EAActtB,GACtB,OAAO,EAAKutB,eAAeD,EAASttB,EAAO,EAAKmzC,0BAE7B,IAA3BtyC,KAAKmB,MAAMytC,YACX,gBAACrrC,GAAA,EAAD,CACIW,KAAMlE,KAAKmB,MAAMyxC,UACjB/tC,aAAc,WACV,OAAO,EAAK2nB,kBAAkB,EAAK+lB,wBAEvCztC,UAAW,SAAC2nB,EAActtB,GACtB,OAAO,EAAKutB,eAAeD,EAASttB,EAAO,EAAKozC,0BAE7B,IAA3BvyC,KAAKmB,MAAMytC,YACX,gBAACrrC,GAAA,EAAD,CACIW,KAAMlE,KAAKmB,MAAMyxC,UACjB/tC,aAAc,WACV,OAAO,EAAK2nB,kBAAkB,EAAKgmB,oBAEvC1tC,UAAW,SAAC2nB,EAActtB,GACtB,OAAO,EAAKutB,eAAeD,EAASttB,EAAO,EAAKqzC,sBAE7B,IAA3BxyC,KAAKmB,MAAMytC,YACX,gBAACrrC,GAAA,EAAD,CACIW,KAAMlE,KAAKmB,MAAMyxC,UACjB/tC,aAAc,WACV,OAAO,EAAK2nB,kBAAkB,EAAKimB,wBAEvC3tC,UAAW,SAAC2nB,EAActtB,GACtB,OAAO,EAAKutB,eAAeD,EAASttB,EAAO,EAAKszC,0BAE7B,IAA3BzyC,KAAKmB,MAAMytC,YACX,gBAACrrC,GAAA,EAAD,CACIW,KAAMlE,KAAKmB,MAAMyxC,UACjB/tC,aAAc,WACV,OAAO,EAAK2nB,kBAAkB,EAAKkmB,4BAEvC5tC,UAAW,SAAC2nB,EAActtB,GACtB,OAAO,EAAKutB,eAAeD,EAASttB,EAAO,EAAKuzC,8BAE7B,IAA3B1yC,KAAKmB,MAAMytC,YACX,gBAACrrC,GAAA,EAAD,CACIW,KAAMlE,KAAKmB,MAAMyxC,UACjB/tC,aAAc,WACV,OAAO,EAAK2nB,kBAAkB,EAAKmmB,2BAEvC7tC,UAAW,SAAC2nB,EAActtB,GACtB,OAAO,EAAKutB,eAAeD,EAASttB,EAAO,EAAKwzC,6BAExD,KAEJ,gBAAC,GAAD,CAASrwC,OAAO,cA1MxC,wCAiNsBQ,GAA2D,IAAD,OACxE,OACI,gCACCA,EAAQlB,IAAI,SAAAwnB,GACT,OAAO,EAAKsoB,mBAAmBtoB,EAAOjoB,MAAOioB,EAAOxkB,YArNpE,qCA2NmBkuC,EAAwB3zC,EAAe2D,GAClD,IAAM8D,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACjD2jC,EAAagQ,EAAShQ,WAAa1mC,KAAeuvB,kBAAkBmnB,EAAShQ,YAAc,MAC3FI,EAAc4P,EAAS5P,YAAc9mC,KAAeuvB,kBAAkBmnB,EAAS5P,aAAe,MAC9FN,EAAaxmC,KAAeuvB,kBAAkBmnB,EAASlQ,YAC7D,OACI,gBAAC/V,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC9B5G,KAAK+yC,gBAAgBD,EAAS79B,MAAQ,MAAa,OAAQnS,GAC3D9C,KAAK+yC,gBAAgBD,EAAStQ,YAAc,MAAO,aAAc1/B,GACjE9C,KAAK+yC,gBAAgBD,EAAStU,SAAW,MAAU,UAAW17B,GAC9D9C,KAAK+yC,gBAAgBD,EAAS9P,WAAa,MAAQ,YAAalgC,GAChE9C,KAAK+yC,gBAAgBD,EAASryC,MAAQ,MAAa,OAAQqC,GAC3D9C,KAAK+yC,gBAAgBD,EAAS1P,QAAU,MAAW,SAAUtgC,GAC7D9C,KAAK+yC,gBAAgBjQ,EAA8B,aAAchgC,GACjE9C,KAAK+yC,gBAAgB7P,EAA8B,cAAepgC,GAClE9C,KAAK+yC,gBAAgB,MAA8B,QAASjwC,GAC5D9C,KAAK+yC,gBAAgBnQ,EAA8B,aAAc9/B,GACjE9C,KAAK+yC,gBAAgBD,EAASpQ,SAAqB,WAAY5/B,GAC/D9C,KAAK+yC,gBAAgB,MAA8B,SAAUjwC,MA7O9E,sCAkPoB5C,EAAe8yC,EAAwBlwC,GACnD,OACIA,EAAQyR,KAAK,SAAA6U,GAAM,OAAIA,EAAOjoB,QAAU6xC,IACpC,gBAACrmB,GAAA,EAAD,KAAYzsB,GACZ,OAtPhB,yCA0PuByxC,EAAkBC,EAAoBvvC,GAA8B,IAAD,OAClF,OACI,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAUtZ,GAAgB,UACzC,wBAAM9B,UAAU,YAAYqxC,GAC5B,uBAAKlxC,MAAO,CAACmV,MAAO,UAChB,gBAAC,KAAD,CACI9P,KAAM8rC,IACN/rC,QAAS,gBAIjB,gBAACjG,GAAA,EAAD,CACIK,MAAOF,KAAKmB,MAAMwwC,GAClBhxC,SAAU,SAACT,GAEP,EAAK6B,SAAL,gBAAgB4vC,EAAWzxC,YAzQnD,GAAsCc,aCHzBiyC,GAAb,YAEI,WAAYnzC,GAAgB,IAAD,+BACvB,8CAAMA,KAWVozC,aAAe,WACX,IAAMppB,EAAS,CACX0b,MAAO,CACHnQ,UAAW,EAAKv1B,MAAM2rB,OAAOnY,KAGrCjS,KAAIC,IAAJ,4BAA6B+B,KAAKC,UAAUwmB,IACxC,SAACroB,GACGC,QAAQC,IAAIF,GACZ,EAAKM,SAAS,CAACoxC,KAAM3kB,GAAS0kB,aAAazxC,EAAS2xC,eAExD,SAACjzC,GACGuB,QAAQC,IAAIxB,MArBpB,EAAKgB,MAAQ,GAHU,EAF/B,mFAWQnB,KAAKkzC,iBAXb,+BA8B4B,IAAD,OAEnB,OACI,uBAAK3yC,UAAU,eACVP,KAAKmB,MAAMgyC,KACR,uBAAKzyC,MAAO,CAAC+wC,UAAW,SACpB,gBAACluC,GAAA,EAAD,CACIW,KAAMlE,KAAKmB,MAAMgyC,KACjBtuC,aAAc,kBAAM,EAAK2nB,qBACzBxoB,mBAAoB,CAAC,GAAI,GAAI,IAC7Bc,UAAW,SAAC2nB,EAActtB,GAAf,OACP,EAAKutB,eAAeD,EAASttB,OAGzC,gBAAC,GAAD,CAASmD,OAAO,aA5CpC,0CAoDQ,OACI,gCACCtC,KAAK0xC,mBAAmB,YAAa,eACrC1xC,KAAK0xC,mBAAmB,iBAAkB,YAC1C1xC,KAAK0xC,mBAAmB,mBAAoB,QAC5C1xC,KAAK0xC,mBAAmB,mBAAoB,QAC5C1xC,KAAK0xC,mBAAmB,oBAAqB,WA1D1D,qCA+DmB/vC,EAAcxC,GACzB,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UAEvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,KAAYhrB,EAAIsgC,YAChB,gBAACtV,GAAA,EAAD,KAAYhrB,EAAIsT,MAChB,gBAAC0X,GAAA,EAAD,KAAYhrB,EAAIwgC,MAChB,gBAACxV,GAAA,EAAD,KAAYhrB,EAAI/D,MAChB,gBAAC+uB,GAAA,EAAD,KAAYhrB,EAAI0gC,SAxEhC,yCA6EuBsP,EAAkBC,EAAoBvvC,GAA8B,IAAD,OAClF,OACI,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAUtZ,GAAgB,UACzC,wBAAM9B,UAAU,YAAYqxC,GAC5B,uBAAKlxC,MAAO,CAACmV,MAAO,UAChB,gBAAC,KAAD,CACI9P,KAAM8rC,IACN/rC,QAAS,gBAIjB,gBAACjG,GAAA,EAAD,CACIK,MAAOF,KAAKmB,MAAMwwC,GAClBhxC,SAAU,SAACT,GAEP,EAAK6B,SAAL,gBAAgB4vC,EAAWzxC,YA5FnD,GAAsCc,aCLzBqyC,GAAb,YAOI,WAAYvzC,GAAgB,IAAD,+BACvB,8CAAMA,KANVkvC,QAAU,CACN,CAAE9uC,MAAO,EAAG0E,MAAO,mBACnB,CAAE1E,MAAO,EAAG0E,MAAO,cAGI,EAQ3B0uC,aAAe,SAACC,EAAmBlW,GAC/B,OAAOA,EAAavT,OAAO,SAAA8L,GAAK,OAAIA,EAAMn1B,OAAS8yC,KANnD,EAAKpyC,MAAQ,CACTytC,YAAa,GAJM,EAP/B,wEAmB4B,IAAD,OACbvR,EAAer9B,KAAKF,MAAM2rB,OAAO4R,aACjCuR,EAAc5uC,KAAKmB,MAAMytC,YAE/B,OACI,2BACI,2BACI,gBAAC,GAAD,CACII,QAAShvC,KAAKgvC,QACdJ,YAAa5uC,KAAKmB,MAAMytC,YACxBkB,SAAU,SAACkB,GACP,MAAO,CAAEjhC,QAAS,WAEtBggC,SAAU,SAAC5wC,GACP,OACI,uBAAKuB,MAAO,CAAC2B,MAAO,SAChB,uBAAK9B,UAAU,WAAWG,MAAO,CAACye,OAAQ,UACrC,EAAK6vB,QAAQ7vC,GAAOyF,SAKrCmqC,eAAgB,SAAC7uC,GACb,EAAK6B,SAAS,CAAC6sC,YAAa1uC,QAGxC,uBAAKK,UAAU,eACV88B,EACG,gBAAC95B,GAAA,EAAD,CACIhD,UAAU,eACV2D,KAAMlE,KAAKszC,aAAatzC,KAAKgvC,QAAQJ,EAAc,GAAGhqC,MAAOy4B,GAC7Dx4B,aAAc,kBAAM,EAAK2nB,qBACzB1nB,UAAW,SAAC2nB,EAA0BttB,GAA3B,OACP,EAAKutB,eAAeD,EAASttB,MACrC,SArDxB,0CA6DQ,OACI,gCACA,gBAACwtB,GAAA,EAAD,kBACA,gBAACA,GAAA,EAAD,cACA,gBAACA,GAAA,EAAD,mBACA,gBAACA,GAAA,EAAD,qBAlEZ,qCAuEmBiJ,EAAwBz2B,GACnC,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UAEvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,KAAYiJ,EAAM2H,WAAa,MAAQ,MACvC,gBAAC5Q,GAAA,EAAD,KAAYiJ,EAAMtd,WAClB,gBAACqU,GAAA,EAAD,KAAYiJ,EAAMgI,WAClB,gBAACjR,GAAA,EAAD,KAAYiJ,EAAM8H,eA/ElC,GAAyC18B,aCa5BwyC,GAAb,YAoBI,WAAY1zC,GAAgB,IAAD,+BACvB,8CAAMA,KAnBV2zC,gBAAkB,CACd,CAAEvzC,MAAO,EAAG0E,MAAO,qBACnB,CAAE1E,MAAO,EAAG0E,MAAO,sBACnB,CAAE1E,MAAO,EAAG0E,MAAO,iBACnB,CAAE1E,MAAO,EAAG0E,MAAO,2BAcI,EAX3B8uC,YAAc,CACV,CAAExzC,MAAO,EAAG0E,MAAO,mBACnB,CAAE1E,MAAO,EAAG0E,MAAO,WACnB,CAAE1E,MAAO,EAAG0E,MAAO,WACnB,CAAE1E,MAAO,EAAG0E,MAAO,cAOI,EAJ3B+uC,eAAiB,CACb,CAAEzzC,MAAO,EAAG0E,MAAO,eAMnB,EAAKzD,MAAQ,CACTytC,YAAa,GAJM,EApB/B,mFA4ByB,IAAD,OAChBvtC,KAAIC,IAAJ,mCAAoCtB,KAAKF,MAAM0B,UAC3C,SAACC,GACGC,QAAQC,IAAIF,GACZ,EAAKM,SAAS,CAAC0pB,OACX+C,GAAS4J,cACL32B,EAASgqB,OACThqB,EAASmyC,kBACTnyC,EAASoyC,eAErB,SAAC1zC,GACGuB,QAAQC,IAAIxB,OAvC5B,+BA4CQ,OACI,uBAAKI,UAAU,UAAUG,MAAO,CAAC2B,MAAO,SACpC,uBAAK3B,MAAO,CAAC0B,WAAY,YACzB,gBAACoW,EAAA,EAAD,CAAM3R,WAAS,EAACtG,UAAU,eACrBP,KAAK8zC,gBACL9zC,KAAK+zC,qBAEV,uBAAKxzC,UAAU,eAnD/B,sCA4DQ,OACI,gBAACiY,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,EAAGhY,MAJG,CACrBszC,YAAa,uBAG8BtkC,QAAS,GAC/C1P,KAAKi0C,eAAe,cAAej0C,KAAKyzC,iBACxCzzC,KAAKi0C,eAAe,UAAWj0C,KAAK0zC,aACpC1zC,KAAKi0C,eAAe,aAAcj0C,KAAK2zC,mBAhExD,qCAqEmB/uC,EAAeoqC,GAA8B,IAAD,OACvD,OACI,uBAAKzuC,UAAU,eACX,uBAAKA,UAAU,cAAcqE,GAC7B,gBAAC,GAAD,CACIoqC,QAASA,EACTJ,YAAa5uC,KAAKmB,MAAMytC,YACxBiB,YAAY,WACZE,SAAU,SAAC5wC,GACP,OACI,uBAAKuB,MAAO,CAAC2B,MAAO,SAChB,uBAAK9B,UAAU,WAAWG,MAAO,CAACye,OAAQ,UACrC6vB,EAAQ7vC,GAAOyF,SAKhCmqC,eAAgB,SAAC7uC,GACb,EAAK6B,SAAS,CAAC6sC,YAAa1uC,UAvFpD,0CA8FQ,OACI,gBAACsY,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAInY,UAAU,iBACxBP,KAAKmB,MAAMsqB,OACkB,GAA1BzrB,KAAKmB,MAAMytC,YACP,gBAAC,GAAD,CAAyBnjB,OAAQzrB,KAAKmB,MAAMsqB,SAClB,GAA1BzrB,KAAKmB,MAAMytC,YACX,gBAAC,GAAD,CAA4BnjB,OAAQzrB,KAAKmB,MAAMsqB,SACrB,GAA1BzrB,KAAKmB,MAAMytC,YACX,gBAAC,GAAD,CAAqBnjB,OAAQzrB,KAAKmB,MAAMsqB,SACd,GAA1BzrB,KAAKmB,MAAMytC,YACX,gBAAC,GAAD,CAA8BnjB,OAAQzrB,KAAKmB,MAAMsqB,SACvB,GAA1BzrB,KAAKmB,MAAMytC,YACX,gBAAC,GAAD,CAAuBnjB,OAAQzrB,KAAKmB,MAAMsqB,OAAQxF,QAASjmB,KAAKF,MAAMmmB,UAC5C,GAA1BjmB,KAAKmB,MAAMytC,YACX,gBAAC,GAAD,CAAgBnjB,OAAQzrB,KAAKmB,MAAMsqB,SACT,GAA1BzrB,KAAKmB,MAAMytC,YACX,gBAAC,GAAD,CAAgBnjB,OAAQzrB,KAAKmB,MAAMsqB,SACT,GAA1BzrB,KAAKmB,MAAMytC,YACX,gBAAC,GAAD,CAAkBnjB,OAAQzrB,KAAKmB,MAAMsqB,SACX,GAA1BzrB,KAAKmB,MAAMytC,YACX,gBAAC,GAAD,CAAkBnjB,OAAQzrB,KAAKmB,MAAMsqB,SACrC,KAEJ,gBAAC,GAAD,CAASnpB,OAAO,eArHpC,GAA0CtB,a,4BC3B7B5E,GAAb,4GAEwBe,GAChB,OAAOA,EAAIG,WAAWC,QAAQ,0BAA2B,SAHjE,iCAOsBC,GAGd,IAFA,IAAIC,EAAW,GACXC,EAAYF,EAAKhB,MAAM,KAClBC,EAAI,EAAGA,EAAIiB,EAAUhB,OAAQD,IAClCgB,GAAYC,EAAUjB,GAAGI,UAAU,EAAE,GAAGD,cAAgB,IAE5D,OAAOa,IAbf,yCAgB8BG,GACtB,GAAIA,EAAM,CACN,IAMME,EAAMF,EAAKG,UACXC,EAAaJ,EAAKK,WAClBC,EAAON,EAAKO,cAClB,MATmB,CACf,UAAW,WAAY,QACvB,QAAS,MAAO,OAAQ,OACxB,SAAU,YAAa,UACvB,WAAY,YAKGH,GAAc,IAAMF,EAAM,KAAOI,EAGxD,MAAO,KA9Bf,6BAiCkBkB,GACV,GAAIA,EAAW,CACX,IAAIC,EAAcxB,KAAKyB,MAAQF,EAC/B,OAAOH,KAAKM,IAAI,IAAI1B,KAAKwB,GAAaG,iBAAmB,MAG7D,OAAO,OAvCf,uCA2CQ,OAAOP,KAAKi1C,SAAS52C,SAAS,IAAI62C,OAAO,EAAG,OA3CpD,K,kDCgBMC,GAAgBhuC,YAAW,CAC/BiuC,QAAS,CACP7pC,SAAU,OACVD,WAAY,IACZM,MAAO,wBACPJ,cAAe,YACfsM,aAAc,IAEhBu9B,SAAU,CACR9pC,SAAU,UACVD,WAAY,IACZM,MAAO,mBAET0pC,aAAc,CACZ/pC,SAAU,UACVD,WAAY,IACZM,MAAO,kBACPuR,eAAgB,YAChB8tB,WAAY,QAUVsK,GAAkC,SAAC10C,GACvC,IAAMsH,EAAUgtC,GAAct0C,GAE9B,OACE,gBAAC0Y,EAAA,EAAD,CACE3R,WAAS,EACTE,WAAW,SACXrG,MAAO,CAAE0B,WAAY,EAAGqtC,cAAe,IAEvC,gBAACj3B,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACb,gBAAC1G,EAAA,EAAD,CAAYzR,UAAW6G,EAAQitC,SAAUv0C,EAAMmV,OAEjD,gBAACuD,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACZ5Y,EAAMqc,KACL,gBAAC,IAAD,CAAM1W,GAAI3F,EAAMqc,KAAM5b,UAAW6G,EAAQmtC,cACtCz0C,EAAMI,OAGT,gBAAC8R,EAAA,EAAD,CAAYzR,UAAW6G,EAAQktC,UAAWx0C,EAAMI,UAkBpDu0C,GAAgBruC,YAAW,SAAA+I,GAAK,MAAK,CACzCulC,SAAU,CACRlqC,SAAU,WACVD,WAAY,KAEdoqC,iBAAkB,CAChBnqC,SAAU,UACVK,MAAO,mBAET+pC,iBAAkB,CAChBpqC,SAAU,UACVC,cAAe,YACfI,MAAO,uBACP6L,aAAc,IAEhBm+B,iBAAkB,CAChBvyC,OAAQ,IACR4M,aAAc,EACd3K,SAAU,OACV4G,UAAW,wBACX4E,QAAS,GAEX+kC,cAAe,CACbxyC,OAAQ,IACR4M,aAAc,EACdtI,gBAAiB,UACjBrC,SAAU,SACV8G,OAAQ,uBAEV0pC,sBAAuB,CACrBlqC,MAAO,mBAETmqC,mBAAoB,CAClBnqC,MAAO,UACPwT,OAAQ,UACR7T,SAAU,OACV4R,eAAgB,aAElB64B,MAAO,CACLpqC,MAAO,UACPwT,OAAQ,UACR7T,SAAU,QAEZ0qC,OAAQ,CACNxuC,IAAK,MACL,kCAAmC,CACjCA,IAAK,EACLC,KAAM,EACN8I,UAAW,SACXpN,MAAO,MACPC,OAAQ,MACR,YAAa,CACX6yC,YAAa,gBACb90C,YAAY,2BAAD,OAA6B8O,EAAMpF,QAAQqrC,WAAWnlC,MAAtD,kBAGf,+BAAgC,CAC9BxJ,OAAQ,EACRE,KAAM,EACN+P,aAAc,SACdrU,MAAO,MACPC,OAAQ,MACR,YAAa,CACX6yC,YAAa,gBACb90C,YAAY,GAAD,OAAK8O,EAAMpF,QAAQqrC,WAAWnlC,MAA9B,0CAGf,iCAAkC,CAChCtJ,KAAM,EACN8Q,WAAY,SACZnV,OAAQ,MACRD,MAAO,MACP,YAAa,CACX8yC,YAAa,gBACb90C,YAAY,eAAD,OAAiB8O,EAAMpF,QAAQqrC,WAAWnlC,MAA1C,8BAGf,gCAAiC,CAC/BzJ,MAAO,EACPyN,YAAa,SACb3R,OAAQ,MACRD,MAAO,MACP,YAAa,CACX8yC,YAAa,gBACb90C,YAAY,uCAAD,OAAyC8O,EAAMpF,QAAQqrC,WAAWnlC,UAInFolC,MAAO,CACL/uC,SAAU,WACVkE,SAAU,EACVnI,MAAO,MACPC,OAAQ,MACR,YAAa,CACXub,QAAS,KACTsB,OAAQ,OACRlY,QAAS,QACT5E,MAAO,EACPC,OAAQ,EACRgzC,YAAa,UAGjBrlC,MAAO,CACLF,QAAS,OACT1N,MAAO,KAET+G,OAAQ,CACN2G,QAAS,MACTsO,OAAQ,cAICk3B,GAAgD,SAC3Dz1C,GAEA,IAAMsH,EAAUqtC,GAAc30C,GACtB01C,EAAsF11C,EAAtF01C,WAAYC,EAA0E31C,EAA1E21C,iBAAkBC,EAAwD51C,EAAxD41C,WAAYC,EAA4C71C,EAA5C61C,WAAYC,EAAgC91C,EAAhC81C,aAAeC,EAAiB/1C,EAAjB+1C,IAAKC,EAAYh2C,EAAZg2C,IAAKC,EAAOj2C,EAAPi2C,IAEvF,SAASC,EAAYp4C,GACnB,IAAM4N,EAAI,IAAI3N,KAAKD,GACnB,OAAO4N,aAAa3N,OAASwqC,MAAM78B,EAAEzM,WAGvC,OACE,gBAACyZ,EAAA,EAAD,CAAM3R,WAAS,GACb,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAIu9B,GAAI,EAAGv1C,MAAO,CAAE0B,WAAY,EAAGqtC,cAAe,IAC/D,gBAAC,GAAD,CAASx6B,KAAK,qBAAqB/U,MAAM,MACzC,gBAAC,GAAD,CACE+U,KAAK,YACL/U,MAAOs1C,GAAcA,EAAWzgB,UAAYygB,EAAWzgB,UAAY,MAErE,gBAAC,GAAD,CACE9f,KAAK,WACL/U,MAAO01C,GAA8B,IACrCz5B,KAAMw5B,EAAa,+BAAiCA,EAAa,MAEnE,gBAAC,GAAD,CACE1gC,KAAK,mBACL/U,MACEs1C,GAAcQ,EAAYR,EAAW9R,kBACjCwS,KAAOV,EAAW9R,kBAAkBgF,OAAO,gBAC3C,MAGR,gBAAC,GAAD,CAASzzB,KAAK,wBAAwB/U,MAAM,MAC5C,gBAAC,GAAD,CACE+U,KAAK,2BACL/U,MACEs1C,GAAcQ,EAAYR,EAAW5R,kBACjCsS,KAAOV,EAAW5R,kBAAkB8E,OAAO,gBAC3C,MAGR,gBAAC,GAAD,CACEzzB,KAAK,aACL/U,MAAOs1C,EAAcA,EAAWvgB,OAAS,MAAQ,KAAQ,OAG7D,gBAACzc,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAIu9B,GAAI,EAAGv1C,MAAO,CAAE0B,WAAY,EAAGqtC,cAAe,IAC/D,gBAAC,GAAD,CACEx6B,KAAK,OACL/U,MAAOs1C,GAAcA,EAAWW,YAAcX,EAAWW,YAAc,MAEzE,gBAAC,GAAD,CACElhC,KAAK,YACL/U,MAAOs1C,GAAcA,EAAWY,UAAYZ,EAAWY,UAAY,MAErE,gBAAC,GAAD,CAASnhC,KAAK,MAAM/U,MAAO21C,GAAY,MACvC,gBAAC,GAAD,CAAS5gC,KAAK,MAAM/U,MAAO41C,GAAY,MACvC,gBAAC,GAAD,CAAS7gC,KAAK,MAAM/U,MAAO61C,GAAY,MACvC,gBAAC,GAAD,CACE9gC,KAAK,mBACL/U,MAAOs1C,EAAcA,EAAWa,oBAAsB,MAAQ,KAAQ,MAExE,gBAAC,GAAD,CAASphC,KAAK,oBAAoB/U,MAAM,OAE1C,gBAACsY,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAIu9B,GAAI,EAAGv1C,MAAO,CAAE0B,WAAY,EAAGqtC,cAAe,IAC/D,gBAAC,GAAD,CACEx6B,KAAK,gBACL/U,MACEs1C,GAAcQ,EAAYR,EAAW3d,eACjCqe,KAAOV,EAAW3d,eAAe6Q,OAAO,gBACxC,MAGR,gBAAC,GAAD,CACEzzB,KAAK,MACL/U,MACEs1C,GAAcQ,EAAYR,EAAW3d,eACjC,GAAKqe,OAASI,KAAKd,EAAW3d,cAAe,SAAS,GACtD,MAGR,gBAAC,GAAD,CAAS5iB,KAAK,SAAS/U,MAAOs1C,EAAaA,EAAWppB,OAAS,OAEjE,gBAAC5T,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAIu9B,GAAI,EAAGv1C,MAAO,CAAE0B,WAAY,EAAGqtC,cAAe,IAC/D,gBAAC,GAAD,CAASx6B,KAAK,eAAe/U,MAAOs1C,EAAaA,EAAW1d,aAAe,MAC3E,gBAAC,GAAD,CACE7iB,KAAK,eACL/U,MAAOs1C,GAAcA,EAAWe,MAAQf,EAAWe,MAAQ,MAE7D,gBAAC,GAAD,CACEthC,KAAK,SACL/U,MAAOs1C,GAAcA,EAAWgB,OAAShB,EAAWgB,OAAS,OAGjE,gBAACh+B,EAAA,EAAD,CACEhE,MAAI,EACJkE,GAAI,GACJu9B,GAAI,EACJv1C,MAAO,CAAE0B,WAAY,GAAIqtC,cAAe,GAAI14B,aAAc,KAE1D,gBAAC/E,EAAA,EAAD,CAAYzR,UAAW6G,EAAQwtC,kBAA/B,uBAGA,gBAACrjC,EAAA,EAAD,CAAOhR,UAAW6G,EAAQytC,kBACxB,gBAAC4B,GAAA,EAAD,CAAOzwC,KAAK,SACV,gBAAC0wC,GAAA,EAAD,KACE,gBAAC7pB,GAAA,EAAD,KACE,gBAACF,GAAA,EAAD,uBACA,gBAACA,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,iBAGJ,gBAACgqB,GAAA,EAAD,KACGlB,GAAoBA,EAAiB/4C,OAAS,EAC7C+4C,EAAiB7zC,IAAI,SAACmD,EAAK5F,GAAN,OACnB,gBAAC0tB,GAAA,EAAD,CAAUvX,IAAKnW,GACb,gBAACwtB,GAAA,EAAD,CAAW9a,UAAU,KAAKwX,MAAM,OAC9B,gBAAC,IAAD,CAAM5jB,GAAI,IAAKlF,UAAW6G,EAAQ2tC,uBAC/BhwC,EAAG,WACF,KACCA,EAAG,YACAA,EAAG,YAAgBpI,OAAO,GAAK,KAC/B,IACJoI,EAAG,YAGT,gBAAC4nB,GAAA,EAAD,KAAY5nB,EAAG,2BACf,gBAAC4nB,GAAA,EAAD,KAAY5nB,EAAG,kBAInB,gBAAC8nB,GAAA,EAAD,KACE,gBAACF,GAAA,EAAD,CACE9a,UAAU,KACVwX,MAAM,MACN3oB,MAAO,CAAEK,UAAW,UACpBkE,QAAS,GAJX,+BAcZ,gBAACuT,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAIu9B,GAAI,EAAGv1C,MAAO,CAAE0B,WAAY,GAAIqtC,cAAe,KAChE,gBAACz9B,EAAA,EAAD,CAAYzR,UAAW6G,EAAQwtC,kBAA/B,WACA,gBAACgC,GAAA,EAAD,CAAKr2C,UAAW6G,EAAQ0tC,iBAE1B,gBAACt8B,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAIu9B,GAAI,EAAGv1C,MAAO,CAAE0B,WAAY,EAAGqtC,cAAe,IAC/D,gBAAC,GAAD,CAASx6B,KAAK,uBAAuB/U,MAAOw1C,GAAcA,EAAU,gBAAsBA,EAAU,gBAAsB,MAC1H,gBAAC,GAAD,CAASzgC,KAAK,YAAY/U,MAAOw1C,GAAcA,EAAU,aAAmBA,EAAU,aAAmB,MACzG,gBAAC,GAAD,CAASzgC,KAAK,cAAc/U,MAAOs1C,GAAcA,EAAWqB,YAAcrB,EAAWqB,YAAc,MACnG,gBAAC,GAAD,CAAS5hC,KAAK,iBAAiB/U,MAAOs1C,GAAcA,EAAWsB,eAAiBtB,EAAWsB,eAAiB,MAC5G,gBAAC,GAAD,CAAS7hC,KAAK,gBAAgB/U,MAAOs1C,GAAcA,EAAWuB,KAAOvB,EAAWuB,KAAO,MACvF,gBAAC,GAAD,CAAS9hC,KAAK,QAAQ/U,MAAOs1C,GAAcA,EAAW/c,MAAQ+c,EAAW/c,MAAQ,MACjF,gBAAC,GAAD,CAASxjB,KAAK,eAAe/U,MAAOs1C,GAAcA,EAAWwB,aAAexB,EAAWwB,aAAe,OAExG,gBAACx+B,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAIu9B,GAAI,EAAGv1C,MAAO,CAAE0B,WAAY,EAAGqtC,cAAe,IAC/D,gBAAC,GAAD,CAASx6B,KAAK,cAAc/U,MAAOs1C,GAAcA,EAAW9b,YAAc8b,EAAW9b,YAAc,MACnG,gBAAC,GAAD,CAASzkB,KAAK,kBAAkB/U,MAAOs1C,GAAcA,EAAWyB,QAAUzB,EAAWyB,QAAU,MAC/F,gBAAC,GAAD,CAAShiC,KAAK,aAAa/U,MAAOs1C,GAAcA,EAAW0B,WAAa1B,EAAW0B,WAAa,MAChG,gBAAC,GAAD,CACEjiC,KAAK,eACL/U,MACEs1C,GAAcQ,EAAYR,EAAW2B,WACjCjB,KAAOV,EAAW2B,WAAWzO,OAAO,gBACpC,MAGR,gBAAC,GAAD,CAASzzB,KAAK,QAAQ/U,MAAM,SAMpCq1C,GAAeluC,aAAe,CAC5BmuC,WAAY,GACZC,iBAAkB,GAClBC,WAAY,GACZC,WAAY,GACZC,aAAc,GACdC,IAAK,GACNC,IAAK,GACLC,IAAK,I,mFC9UFqB,IAAgB,EAChBC,GAAgB,GAChBC,IAAY,EACZC,GAAa,GAEXC,GAAmBpxC,aAAW,CAClCoJ,OAAQ,CACN5I,gBAAiB,iBAIf6wC,GAAkBrxC,aAAW,CACjCC,KAAM,CACJ,0BAA2B,CACzBO,gBAAiB,kBAKjB8wC,GAAiBtxC,aAAW,CAChCC,KAAM,CACJ,gBAAiB,CACfwE,MAAO,cAKP8sC,GAAS,SAAC,GAA+B,IAA7BrkC,EAA4B,EAA5BA,GAAIpT,EAAwB,EAAxBA,MAAOmU,EAAiB,EAAjBA,MACrBujC,EAAoBJ,KAC1B,OACE,gBAAC,IAAD,CACElkC,GAAIA,EACJlM,QAASwwC,EACT13C,MAAOA,EACPQ,MAAO,CAAE2B,MAAO,OAAQuE,gBAAiB,eACzCixC,YAAa,SAAClmC,GACZ,GAAiB,OAAbA,EAAmB,CACrB,IAAMzR,EAAamU,EAAME,KAAK,SAACC,GAC7B,OAAOA,EAAKtU,QAAUyR,IAExB,OAAIzR,EACKA,EAAM+U,KAEN,SAGX,MAAO,WAGRZ,EAAMzS,IAAI,SAAC4S,GAAD,OACT,gBAAC,IAAD,CAAqBc,IAAKd,EAAKtU,MAAOA,MAAOsU,EAAKtU,OAC/CsU,EAAKS,UAOV6iC,GAAkB,SAAC,GAKb,IAJVhuB,EAIS,EAJTA,OACAiuB,EAGS,EAHTA,SACAC,EAES,EAFTA,iBACA5wC,EACS,EADTA,QAEA,OAAI4wC,EAEA,gBAAC,KAAD,CACEt3C,MAAO,CAAEqP,QAAS,qBAClB3I,QAASA,GAET,gBAAC,IAAD,CACEA,QAASA,EACT1G,MAAO,CAAE2B,MAAO,QAChBnC,MAAO4pB,EAASA,EAAO5pB,MAAQ,GAC/B2U,WAAY,EACZlU,SAAU,SAAA4M,GAAC,OACTwqC,EAASxqC,EAAEzM,OAAOZ,MAAQ,CAAEA,MAAOqN,EAAEzM,OAAOZ,OAAU,OAExDD,YAAY,MAOhB,gBAAC,KAAD,CACES,MAAO,CAAEqP,QAAS,qBAClB3I,QAASA,KAMX6wC,GAAa,SAAC,GAMR,IALVv3C,EAKS,EALTA,MACAiR,EAIS,EAJTA,SACAumC,EAGS,EAHTA,SACA9wC,EAES,EAFTA,QACG+wC,EACM,0DACT,OACE,gBAAC,KAAD,eACEpoC,QAAQ,WACRrP,MAAOA,EACP0G,QAASA,GACL+wC,GAEJ,gBAAC,KAAD,CACE/wC,QAASA,EACTwQ,QAASjG,EACT7L,QAAS,SAAAyH,GACPA,EAAE6qC,kBACFF,SAOJG,GAAgB,SAAC,GAMX,IALV33C,EAKS,EALTA,MACAiR,EAIS,EAJTA,SACAumC,EAGS,EAHTA,SACA9wC,EAES,EAFTA,QACG+wC,EACM,0DACT,OACE,gBAAC,KAAD,eACEpoC,QAAQ,WACRrP,MAAOA,EACP0G,QAASA,GACL+wC,GAEJ,gBAAC,IAAD,CACEpyC,KAAM,gBAAC,IAAD,CAAiBA,KAAMuyC,MAC7Bt/B,YAAa,gBAAC,IAAD,CAAiBjT,KAAMuyC,MACpClxC,QAASA,EACTwQ,QAASjG,EACT7L,QAAS,SAAAyH,GACPA,EAAE6qC,kBACFF,SAOJK,GAAmB,SAAC,GAAmC,IAAjCr4C,EAAgC,EAAhCA,MAAOs4C,EAAyB,EAAzBA,cACjC,OACE,gBAAC,IAAD,CACEt4C,MAAOA,GAAgB,GACvB2U,WAAY,EACZlU,SAAU,SAAA4M,GAAC,OAAIirC,EAAcjrC,EAAEzM,OAAOZ,MAAQqN,EAAEzM,OAAOZ,MAAQ,OAC/DD,YAAY,uCACZoR,WAAS,EACTonC,eACE,gBAAC,KAAD,CAA2BnyC,SAAS,SAClC,gBAAC,IAAD,CAAiBP,KAAMohC,UAO3BuR,GAAsB,SAAC,GAAuB,IAArB9nC,EAAoB,EAApBA,SAC7B,OAAO,gBAAC,IAAD,CAAoB+nC,gBAAgB,EAAM/nC,SAAUA,KAGvDgoC,GAAc,SAAC,GAAD,MACJ,QADI,EAAGngC,UAEnB,gBAAC,IAAD,CAAiB/X,MAAO,CAAE+W,WAAY,QAAU1R,KAAM8yC,MAEtD,gBAAC,IAAD,CAAiBn4C,MAAO,CAAE+W,WAAY,QAAU1R,KAAM+yC,OAGpDC,GAAiB,SAAC,GAAkD,IAAhDp0C,EAA+C,EAA/CA,OAAQq0C,EAAuC,EAAvCA,OAAQpoC,EAA+B,EAA/BA,SAAU6H,EAAqB,EAArBA,UAClD,YAC4BnY,IAA1BqE,EAAOs0C,gBACmB,OAA1Bt0C,EAAOs0C,iBACmB,IAA1Bt0C,EAAOs0C,eAEA,4BAAOt0C,EAAO4xC,OAGnB,gBAAC,KAAD,CAA2B2C,cAAc,EAAMpzC,QAASkzC,GACrDpoC,EACA6H,EACC,gBAAC,GAAD,CAAaA,UAAWA,IAExB,gBAAC,IAAD,CAAiB/X,MAAO,CAAE+W,WAAY,QAAU1R,KAAM8rC,QAO1DsH,GAAqB,SAAC,GAAoB,IAAlBj5C,EAAiB,EAAjBA,MAC5B,MAAc,KAAVA,QAA0BI,IAAVJ,GAAiC,OAAVA,EAEvC,gBAAC,IAAD,CACEQ,MAAO,CAAEmK,MAAO,UAAWL,SAAU,QACrCzE,KAAMqzC,MAIHl5C,GAILm5C,GAA4B,SAACv5C,GAAD,OAChC,gBAAC,KAAD,eAAkBw5C,mBAAoBH,IAAwBr5C,KAG1Dy5C,GAAoB,SAAC,GAAyB,IAAvBx0C,EAAsB,EAAtBA,IAAK7E,EAAiB,EAAjBA,MAChC,OACsB,IAApB6E,EAAG,UACQ,KAAV7E,QAA0BI,IAAVJ,GAAiC,OAAVA,GASpB,IAApB6E,EAAG,UACQ,KAAV7E,QAA0BI,IAAVJ,GAAiC,OAAVA,EAIjCA,EAFA,MATL,gBAAC,IAAD,CACEQ,MAAO,CAAEmK,MAAO,UAAWL,SAAU,QACrCzE,KAAMqzC,OAaRI,GAA2B,SAAC15C,GAAD,OAC/B,gBAAC,KAAD,eAAkBw5C,mBAAoBC,IAAuBz5C,KAGzD25C,GAA4B,SAAC,GAAiC,IAA/B90C,EAA8B,EAA9BA,OAAQI,EAAsB,EAAtBA,IAAK7E,EAAiB,EAAjBA,MAC1CkH,EAAUswC,KAChB,OACE,2BACE,gBAAC,IAAD,CACEroC,QACE,gBAAC,IAAD,CACEuI,SAAmB,IAAV1X,GAA4B,SAAVA,EAC3BA,MAAOA,EACPQ,MAAO,CAAEqP,QAAS,OAClBxP,UAAW6G,EAAQf,KACnBwE,MAAM,UACNlK,SAAU,SAAA4M,GACR+pC,IAAY,EACZC,GAAa,CACXr3C,MAAOqN,EAAEzM,OAAO8W,QAChB3C,KAAMtQ,EAAM,KACZ2O,GAAIvO,EAAG,OAKfH,MAAM,OAMR80C,GAAmC,SAAC55C,GAAD,OACvC,gBAAC,KAAD,eAAkBw5C,mBAAoBG,IAA+B35C,KAGjE65C,GAA4B,SAAC,GAAoB,IAAlBz5C,EAAiB,EAAjBA,MAC7BkH,EAAUswC,KAChB,OACE,2BACE,gBAAC,IAAD,CACEroC,QACE,gBAAC,IAAD,CACEuI,SAAmB,IAAV1X,GAA4B,SAAVA,EAC3BA,MAAOA,EACPM,UAAU,EACVE,MAAO,CAAEqP,QAAS,OAClBxP,UAAW6G,EAAQf,KACnBwE,MAAM,UACNlK,SAAU,eAIdiE,MAAM,OAMRg1C,GAAmC,SAAC95C,GAAD,OACvC,gBAAC,KAAD,eAAkBw5C,mBAAoBK,IAA+B75C,KAGjE+5C,GAAsB,SAAC,GAA0B,IAAxBl1C,EAAuB,EAAvBA,OAAQI,EAAe,EAAfA,IAC/BuO,EAAa3O,EAAM,KAAW,IAAMI,EAAG,GAC7C,OACE,uBACEuO,GAAIA,EACJxN,QAAS,SAAAyH,GAEP7L,QAAQC,IAAI,KAAM4L,KAGpB,gBAAC,IAAD,CAAuB1C,MAAM,cAAcnK,MAAO,CAAE0B,WAAY,QAC9D,4BACE,wBAAM1B,MAAO,CAAEqW,aAAc,OAAQvM,SAAU,SAC7C,gBAAC,IAAD,CAAiBzE,KAAMslC,IAAc3qC,MAAO,CAAEmK,MAAO,cAEvD,wBAAMnK,MAAO,CAAE0b,eAAgB,YAAavR,MAAO,YAAnD,mBASJivC,GAA6B,SAACh6C,GAAD,OACjC,gBAAC,KAAD,eAAkBw5C,mBAAoBO,IAAyB/5C,KAG3Di6C,GAA2B,SAAC,GAAoB,IAAlB75C,EAAiB,EAAjBA,MAKlC,OACE,2BACE,gBAAC,KAAD,CACE85C,aAAW,WACX/kC,KAAK,WACL/U,MAAOA,EACPS,SAAU,SAAA4M,GACRA,EAAE6qC,kBACFhB,IAAgB,EAChBC,GAAgB9pC,EAAEzM,OAAOZ,OAE3B6E,KAAG,GAfK,CACZ,CAAE7E,MAAO,UAAW0E,MAAO,WAC3B,CAAE1E,MAAO,mBAAoB0E,MAAO,qBAezBhD,IAAI,SAAC4S,EAAWylC,GAAZ,OACT,gBAAC,IAAD,CACE3kC,IAAK2kC,EACL/5C,MAAOsU,EAAKtU,MACZmP,QAAS,gBAAC,KAAD,CAAkBxE,MAAM,YACjCjG,MAAO4P,EAAK5P,MACZqU,eAAe,aAQrBihC,GAAkC,SAACp6C,GAAD,OACtC,gBAAC,KAAD,eAAkBw5C,mBAAoBS,IAA8Bj6C,KAGhEq6C,GAA2B,SAAC,GAAoB,IAAlBj6C,EAAiB,EAAjBA,MAMlC,OACE,2BACE,gBAAC,KAAD,CACE85C,aAAW,WACX/kC,KAAK,WACL/U,MAAOA,EACPS,SAAU,SAAA4M,GACRA,EAAE6qC,kBACFhB,IAAgB,EAChBC,GAAgB9pC,EAAEzM,OAAOZ,OAE3B6E,KAAG,GAhBK,CACZ,CAAE7E,MAAO,UAAW0E,MAAO,WAC3B,CAAE1E,MAAO,aAAc0E,MAAO,cAC9B,CAAE1E,MAAO,mBAAoB0E,MAAO,qBAezBhD,IAAI,SAAC4S,EAAWylC,GAAZ,OACT,gBAAC,IAAD,CACE3kC,IAAK2kC,EACL/5C,MAAOsU,EAAKtU,MACZmP,QAAS,gBAAC,KAAD,CAAkBxE,MAAM,YACjCjG,MAAO4P,EAAK5P,MACZqU,eAAe,MACfnT,QAAS,SAAAyH,GACP6pC,IAAgB,EAChB11C,QAAQC,IAAI,6BAA8B4L,IAE5C5M,SAAU,SAAA4M,GACR6pC,IAAgB,EAEhB11C,QAAQC,IAAI,8BAA+B4L,WASnD6sC,GAAkC,SAACt6C,GAAD,OACtC,gBAAC,KAAD,eAAkBw5C,mBAAoBa,IAA8Br6C,KAGhEu6C,GAAqB,SAAC,GAAoB,IAAlBn6C,EAAiB,EAAjBA,MAO5B,OADAwB,QAAQC,IAAI,sBAAuBzB,GAEjC,2BACE,gBAAC,KAAD,CACE85C,aAAW,WACX/kC,KAAK,WACL/U,MAAOA,EACPS,SAAU,SAAA4M,GACRA,EAAE6qC,kBACFhB,IAAgB,EAChBC,GAAgB9pC,EAAEzM,OAAOZ,OAE3B6E,KAAG,GAjBK,CACZ,CAAE7E,MAAO,QAAS0E,MAAO,SACzB,CAAE1E,MAAO,MAAO0E,MAAO,aACvB,CAAE1E,MAAO,eAAgB0E,MAAO,qBAgBrBhD,IAAI,SAAC4S,EAAWylC,GAAZ,OACT,gBAAC,IAAD,CACE3kC,IAAK2kC,EACL/5C,MAAOsU,EAAKtU,MACZmP,QAAS,gBAAC,KAAD,CAAkBxE,MAAM,YACjCjG,MAAO4P,EAAK5P,MACZqU,eAAe,MACfnT,QAAS,SAAAyH,GACP6pC,IAAgB,EAChB11C,QAAQC,IAAI,6BAA8B4L,IAE5C5M,SAAU,SAAA4M,GACR6pC,IAAgB,EAEhB11C,QAAQC,IAAI,8BAA+B4L,WASnD+sC,GAAwB,SAACx6C,GAAD,OAC5B,gBAAC,KAAD,eAAkBw5C,mBAAoBe,IAAwBv6C,KAG1Dy6C,GAAsB,SAAC,GAAoB,IAAlBr6C,EAAiB,EAAjBA,MAQ7B,OAAO,gBAAC,GAAD,CAAQmU,MAPD,CACZ,CAAEY,KAAM,GAAI/U,MAAO,IACnB,CAAE+U,KAAM,UAAW/U,MAAO,WAC1B,CAAE+U,KAAM,SAAU/U,MAAO,UACzB,CAAE+U,KAAM,UAAW/U,MAAO,WAC1B,CAAE+U,KAAM,WAAY/U,MAAO,aAEAA,MAAOA,KAGhCs6C,GAA6B,SAAC16C,GAAD,OACjC,gBAAC,KAAD,eAAkBw5C,mBAAoBiB,IAAyBz6C,KAG3D26C,GAAsB,SAAC,GAAoB,IAAlBv6C,EAAiB,EAAjBA,MAY7B,OAAO,gBAAC,GAAD,CAAQmU,MAXD,CACZ,CAAEY,KAAM,aAAc/U,MAAO,cAC7B,CAAE+U,KAAM,cAAe/U,MAAO,eAC9B,CAAE+U,KAAM,YAAa/U,MAAO,aAC5B,CAAE+U,KAAM,WAAY/U,MAAO,YAC3B,CAAE+U,KAAM,eAAgB/U,MAAO,gBAC/B,CAAE+U,KAAM,SAAU/U,MAAO,UACzB,CAAE+U,KAAM,YAAa/U,MAAO,aAC5B,CAAE+U,KAAM,OAAQ/U,MAAO,SAGIA,MAAOA,KAGhCw6C,GAA6B,SAAC56C,GAAD,OACjC,gBAAC,KAAD,eAAkBw5C,mBAAoBmB,IAAyB36C,KAG3D66C,GAAgB,SAAC,GAAoB,IAAlBz6C,EAAiB,EAAjBA,MAKvB,OAAO,gBAAC,GAAD,CAAQmU,MAJD,CACZ,CAAEY,KAAM,eAAgB/U,MAAO,gBAC/B,CAAE+U,KAAM,SAAU/U,MAAO,WAEEA,MAAOA,KAGhC06C,GAAuB,SAAC96C,GAAD,OAC3B,gBAAC,KAAD,eAAkBw5C,mBAAoBqB,IAAmB76C,KAGrD+6C,GAAkB,SAAC,GAAoB,IAAlB36C,EAAiB,EAAjBA,MACnB46C,EAAmBrD,KACzB,OACE,gBAAC,IAAD,CACEv3C,MAAOA,EACPO,KAAM,SACN2G,QAAS0zC,KAKTC,GAAyB,SAACj7C,GAAD,OAC7B,gBAAC,KAAD,eAAkBw5C,mBAAoBuB,IAAqB/6C,KAGvDk7C,GAAgB,SAAC,GAAoB,IAAlB96C,EAAiB,EAAjBA,MACjB46C,EAAmBrD,KACzB,OAAO,gBAAC,IAAD,CAAsBv3C,MAAOA,EAAOkH,QAAS0zC,KAGhDG,GAAuB,SAACn7C,GAAD,OAC3B,gBAAC,KAAD,eAAkBw5C,mBAAoB0B,IAAmBl7C,KAGrDo7C,GAAgB,SAAC,GAAoB,IAAlBh7C,EAAiB,EAAjBA,MACnB1C,EAAO0C,EACX,GAAI1C,EACF,IACEA,EAAO04C,KAAOh2C,GAAOwoC,OAAO,gBAC5B,MAAOvoC,GACP3C,EAAO0C,OAGT1C,EAAO,GAGT,OAAOA,GAGH29C,GAA2B,SAACr7C,GAAD,OAC/B,gBAAC,KAAD,eAAkBw5C,mBAAoB4B,IAAmBp7C,KAGrDs7C,GAAgB,SAAC,GAAoB,IAAlBl7C,EAAiB,EAAjBA,MACnB1C,EAAO0C,EACX,GAAI1C,EACF,IACEA,EAAO04C,KAAOh2C,GAAOwoC,OAAO,cAC5B,MAAOvoC,GACP3C,EAAO0C,OAGT1C,EAAO,GAGT,OAAOA,GAGH69C,GAA2B,SAACv7C,GAAD,OAC/B,gBAAC,KAAD,eAAkBw5C,mBAAoB8B,IAAmBt7C,KA+B9Cw7C,GAAgD,SAC3Dx7C,GACiB,IAEf4E,EAcE5E,EAdF4E,QACA62C,EAaEz7C,EAbFy7C,iBACAC,EAYE17C,EAZF07C,aACAC,EAWE37C,EAXF27C,cACAC,EAUE57C,EAVF47C,cACAC,EASE77C,EATF67C,cACAC,EAQE97C,EARF87C,YACAC,EAOE/7C,EAPF+7C,cACAC,EAMEh8C,EANFg8C,YACAC,EAKEj8C,EALFi8C,iBACAC,EAIEl8C,EAJFk8C,YACA1oC,EAGExT,EAHFwT,GACA2oC,EAEEn8C,EAFFm8C,oBACAC,EACEp8C,EADFo8C,MAfc,EAiBkB9pC,mBAAmB,IAjBrC,oBAiBT+pC,EAjBS,KAiBEC,EAjBF,OAkBsBhqC,mBAAS,GAlB/B,oBAkBTiqC,EAlBS,KAkBIC,EAlBJ,OAmBgBlqC,mBAAS,GAnBzB,oBAmBTmqC,EAnBS,KAmBCC,EAnBD,OAoBIpqC,mBAAS,CAAC,EAAG,GAAI,GAAI,IAAlCqqC,EApBS,uBAqBQrqC,mBAAStS,EAAMoE,MArBvB,oBAqBTA,EArBS,KAqBHw4C,EArBG,KAsBhBC,oBAAU,WACRD,EAAQ58C,EAAMoE,OACb,CAACpE,EAAMoE,OAEV,IAAM04C,EAA2B,QAoCVt8C,IAArBi7C,GACAj0C,OAAO+gB,KAAKkzB,GAAkB7+C,OAAS,SAEJ4D,IAA/Bi7C,EAAgB,QAClBqB,EAAkBluC,KAChB,gBAAC,GAAD,CAAwBmuC,IAAKtB,EAAiBjgC,eAGjBhb,IAA7Bi7C,EAAgB,MAClBqB,EAAkBluC,KAChB,gBAAC,GAAD,CAAsBmuC,IAAKtB,EAAiB/9C,aAGR8C,IAApCi7C,EAAgB,aAClBqB,EAAkBluC,KAChB,gBAAC,GAAD,CAA4BmuC,IAAKtB,EAAiB9d,oBAGhBn9B,IAAlCi7C,EAAgB,WAClBqB,EAAkBluC,KAChB,gBAAC,GAAD,CAAsBmuC,IAAKtB,EAAiBuB,kBAGTx8C,IAAnCi7C,EAAgB,YAClBqB,EAAkBluC,KAChB,gBAAC,GAAD,CAA4BmuC,IAAKtB,EAAiBwB,mBAGTz8C,IAAzCi7C,EAAgB,kBAClBqB,EAAkBluC,KAChB,gBAAC,GAAD,CAA2BmuC,IAAKtB,EAAiByB,yBAGnB18C,IAA9Bi7C,EAAgB,OAClBqB,EAAkBluC,KAChB,gBAAC,GAAD,CAAuBmuC,IAAKtB,EAAiB0B,cAGJ38C,IAAzCi7C,EAAgB,kBAClBqB,EAAkBluC,KAChB,gBAAC,GAAD,CACEmuC,IAAKtB,EAAiB2B,yBAIkB58C,IAA1Ci7C,EAAgB,mBAClBqB,EAAkBluC,KAChB,gBAAC,GAAD,CACEmuC,IAAKtB,EAAiB4B,0BAIkB78C,IAA1Ci7C,EAAgB,mBAClBqB,EAAkBluC,KAChB,gBAAC,GAAD,CACEmuC,IAAKtB,EAAiB6B,0BAIkB98C,IAA1Ci7C,EAAgB,mBAClBqB,EAAkBluC,KAChB,gBAAC,GAAD,CACEmuC,IAAKtB,EAAiB8B,0BAIY/8C,IAApCi7C,EAAgB,aAClBqB,EAAkBluC,KAChB,gBAAC,GAAD,eACEmuC,IAAKtB,EAAiB+B,aAClBx9C,UAIgCQ,IAAtCi7C,EAAgB,eAClBqB,EAAkBluC,KAChB,gBAAC,GAAD,eACEmuC,IAAKtB,EAAiBgC,eAClBz9C,UAIuBQ,IAA7Bi7C,EAAgB,MAClBqB,EAAkBluC,KAChB,gBAAC,GAAD,CAA0BmuC,IAAKtB,EAAiB39C,aAGnB0C,IAA7Bi7C,EAAgB,MAClBqB,EAAkBluC,KAChB,gBAAC,GAAD,CAA0BmuC,IAAKtB,EAAiBlZ,SAKtD,IAAIvkB,EAAU46B,GAEd,OACE,gBAACnnC,EAAA,EAAD,CAAO+B,GAAIA,GACT,gBAAC,KAAD,CAAMpP,KAAMA,EAAMQ,QAASA,GACxBk4C,EAECnB,EAOE,KANF,gBAAC,KAAD,CACEY,YAAaA,EACbmB,oBAAqBlB,EACrBC,SAAUA,EACVkB,iBAAkBjB,IAIpBf,EAAuC,KAAvB,gBAAC,KAAD,OAEhBC,GAAiBQ,EAAQ,gBAAC,KAAD,CAAah8C,MAAOg8C,IAAY,KAEzDN,QAAqCt7C,IAAtBR,EAAM49C,YAclB9B,EAaD,gBAAC,KAAD,MAZF,gBAAC,KAAD,CACE+B,eAAgB,GAChBC,gBAAiB,SAAArwC,GACf7L,QAAQC,IAAI,mBACR7B,EAAM89C,iBACR99C,EAAM89C,gBAAgBrwC,GAEpBzN,EAAM+9C,gBACR/9C,EAAM+9C,eAAe/9C,EAAMg+C,kBAtBjC,gBAAC,KAAD,CACEH,eAAgB,GAChBI,aAA+Bz9C,IAAtBR,EAAM49C,YAA4B59C,EAAM49C,YAAc,GAC/DE,gBAAiB,SAAArwC,GACf7L,QAAQC,IAAI,mBACR7B,EAAM89C,iBACR99C,EAAM89C,gBAAgBrwC,GAEpBzN,EAAM+9C,gBACR/9C,EAAM+9C,eAAe/9C,EAAMg+C,kBAmBjClC,EAAsC,KAAxB,gBAAC,KAAD,MAEdD,GAAkBM,EAKhB,KAJF,gBAAC,KAAD,CACEE,UAAWA,EACX6B,kBAtLV,SAA+BC,GAE7B,GADAv8C,QAAQC,IAAI,kBACR7B,EAAMo+C,WAEH9G,IAAkBE,GAGZF,IACT11C,QAAQC,IAAI,gBAAiBs8C,GACzBn+C,EAAMq+C,iBACRr+C,EAAMq+C,gBAAgBF,EAAa,GAAI5G,IACzCD,IAAgB,GACPE,KACT51C,QAAQC,IAAI,gBAAiB7B,EAAMs+C,aAC/Bt+C,EAAMs+C,aAAat+C,EAAMs+C,YAAY7G,IACzCD,IAAY,EACZC,GAAa,KAXb71C,QAAQC,IAAI,cACZ7B,EAAMo+C,WAAWD,SAanB,GAAIzC,EAAc,CAChB,IAAM6C,EAAeJ,EAAa1pC,KAChC,SAAC5C,GAAD,OAAuD,IAAjCwqC,EAAU9yC,QAAQsI,KAG1CjQ,QAAQC,IAAIs8C,EAAc9B,EAAWkC,QAChB/9C,IAAjB+9C,GACFjC,EAAa,CAACiC,SAGhBjC,EAAa6B,MA4JXtC,EAA0C,KAA1B,gBAAC,KAAD,MAEhBE,EAUE,KATF,gBAAC,KAAD,CACEyC,eAAgB,GAChBC,aAC0Bj+C,IAAxBR,EAAMg+C,cAA8Bh+C,EAAMg+C,cAAgB,GAE5DU,uBAAwB1+C,EAAM0+C,uBAC9BzC,iBAAkBj8C,EAAM2+C,iBACxBC,gBAAiB5+C,EAAM+9C,iBAIzBhC,EAA0C,KAA1B,gBAAC,KAAD,MAElB,gBAAC,KAAD,CACEE,iBAAkBA,EAClB5zB,SAAU,CAAEw2B,OAAQ7+C,EAAM8+C,WAG1BjD,GAAkBM,EAMfA,EAOD,KANF,gBAAC,KAAD,CACE4C,kBAAgB,EAChB5C,qBAAqB,EACrB6C,cAAgBtD,EAA+BvD,GAAhBI,GAC/B0G,oBAAqB1G,KAVvB,gBAAC,KAAD,CACE2G,eAAgBxD,EAChBsD,cAAgBtD,EAA+BvD,GAAhBI,GAC/B0G,oBAAqB1G,KAUzB,gBAAC,KAAD,CACE4G,qBAAsBrD,EACtBsD,mBAAoBnG,KAEpB8C,EAEE,KADF,gBAAC,KAAD,CAAgBiD,cAAehH,KAEhCkE,EAAc,gBAAC,KAAD,CAAiBA,YAAaA,IAAkB,MAE7DN,GAAiBI,EACjB,gBAAC,KAAD,CAASqD,cAAerhC,IACtB,KACF49B,EAEE,KADF,gBAAC,KAAD,CAAaxrC,eAAgBqoC,KAG7BkD,EAAwD,KAAxC,gBAAC,KAAD,CAAagB,UAAWA,OAMlDnB,GAAej0C,aAAe,CAC5BnD,KAAM,GACNQ,QAAS,GACTq3C,iBAAkB,GAClB0C,iBAAkB,GAClBzC,YAAa,KACbT,iBAAkB,GAClBC,cAAc,EACdE,eAAe,EACfD,eAAe,EACfE,eAAe,EACfE,eAAe,EACfD,aAAa,EACbE,YAAa,KACbgC,cAAe,GACf7B,qBAAqB,EACrBuC,wBAAwB,EACxBlrC,GAAI,UACJsrC,QAAS,oBACT1C,MAAO,ICv4BF,IAAMkD,GAAsC,SACjDt/C,GACiB,IAAD,EACsBsS,mBAAS,GAD/B,oBACTw8B,EADS,KACIG,EADJ,KAGhB,SAASsQ,KAIT,SAASC,EAAax1B,GACpBhqB,EAAMy/C,gBAAgBz1B,EAAQ8kB,EAAa,UAG7C,SAAS4Q,EAAWzB,GAClBj+C,EAAMy/C,gBAAgBxB,EAASnP,EAAa,QAG9C,OACE,gBAACp2B,EAAA,EAAD,CAAM3R,WAAS,GACb,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACb,gBAACi2B,GAAA,EAAD,CACEzuC,MAAO0uC,EACPjuC,SAAU,SAAC8C,EAA+BvD,GACxC6uC,EAAe7uC,IAEjB85C,aAAW,iBAEVl6C,EAAM2/C,cAAc79C,IAAI,SAAAqB,GAAI,OAC3B,gBAACisC,GAAA,EAAD,CACEtqC,MAAO3B,EAAK2B,MAAQ,KAAO3B,EAAKmC,MAAQ,IACxCkO,GAAI,6BAA+BrQ,EAAKmC,MACxCs6C,gBAAe,0BAA4Bz8C,EAAKmC,YAKxD,gBAACoT,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAIhY,MAAO,CAAEsW,YAAa,QACtB,IAAhB43B,EACC,gBAAC,GAAD,CACEt7B,GAAG,qBACHpP,KACEoD,OAAO+gB,KAAKvoB,EAAM6/C,qBAAqBjjD,OAAS,EAC5CoD,EAAM6/C,oBAAN,KACA,GAENj7C,QACE4C,OAAO+gB,KAAKvoB,EAAM6/C,qBAAqBjjD,OAAS,EAC5CoD,EAAM6/C,oBAAN,QACA,GAENf,QAAQ,oBACRV,WAAYmB,EACZ1D,eAAa,EACbD,eAAa,EACb8C,wBAAwB,EACxBjD,iBACEj0C,OAAO+gB,KAAKvoB,EAAM6/C,qBAAqBjjD,OAAS,EAC5CoD,EAAM6/C,oBAAN,iBACA,GAEN5D,iBACEz0C,OAAO+gB,KAAKvoB,EAAM6/C,qBAAqBjjD,OAAS,EAC5CoD,EAAM6/C,oBAAN,iBACA,GAENlB,iBACEn3C,OAAO+gB,KAAKvoB,EAAM6/C,qBAAqBjjD,OAAS,EAC5CoD,EAAM6/C,oBAAN,iBACA,GAEN9B,eAAgByB,EAChB1B,gBAAiB4B,EACjB1B,cAAeh+C,EAAM8/C,WACrBlC,YAAa59C,EAAM+/C,WAEH,IAAhBjR,EACF,gBAAC,GAAD,CACEt7B,GAAG,0BACHpP,KACEoD,OAAO+gB,KAAKvoB,EAAMggD,0BAA0BpjD,OAAS,EACjDoD,EAAMggD,yBAAN,KACA,GAENp7C,QACE4C,OAAO+gB,KAAKvoB,EAAMggD,0BAA0BpjD,OAAS,EACjDoD,EAAMggD,yBAAN,QACA,GAENlB,QAAQ,oBACRV,WAAYmB,EACZ1D,eAAa,EACbD,eAAa,EACb8C,wBAAwB,EACxBjD,iBACEj0C,OAAO+gB,KAAKvoB,EAAMggD,0BAA0BpjD,OAAS,EACjDoD,EAAMggD,yBAAN,iBACA,GAEN/D,iBACEz0C,OAAO+gB,KAAKvoB,EAAMggD,0BAA0BpjD,OAAS,EACjDoD,EAAMggD,yBAAN,iBACA,GAENrB,iBACEn3C,OAAO+gB,KAAKvoB,EAAMggD,0BAA0BpjD,OAAS,EACjDoD,EAAMggD,yBAAN,iBACA,GAENjC,eAAgByB,EAChB1B,gBAAiB4B,EACjB1B,cAAeh+C,EAAMigD,gBACrBrC,YAAa59C,EAAMkgD,gBAEH,IAAhBpR,EACF,gBAAC,GAAD,CACEt7B,GAAG,yBACHpP,KACEoD,OAAO+gB,KAAKvoB,EAAMmgD,yBAAyBvjD,OAAS,EAChDoD,EAAMmgD,wBAAN,KACA,GAENv7C,QACE4C,OAAO+gB,KAAKvoB,EAAMmgD,yBAAyBvjD,OAAS,EAChDoD,EAAMmgD,wBAAN,QACA,GAENrB,QAAQ,oBACRV,WAAYmB,EACZ1D,eAAa,EACbD,eAAa,EACb8C,wBAAwB,EACxBjD,iBACEj0C,OAAO+gB,KAAKvoB,EAAMmgD,yBAAyBvjD,OAAS,EAChDoD,EAAMmgD,wBAAN,iBACA,GAENlE,iBACEz0C,OAAO+gB,KAAKvoB,EAAMmgD,yBAAyBvjD,OAAS,EAChDoD,EAAMmgD,wBAAN,iBACA,GAENxB,iBACEn3C,OAAO+gB,KAAKvoB,EAAMmgD,yBAAyBvjD,OAAS,EAChDoD,EAAMmgD,wBAAN,iBACA,GAENpC,eAAgByB,EAChB1B,gBAAiB4B,EACjB1B,cAAeh+C,EAAMogD,eACrBxC,YAAa59C,EAAMqgD,eAEnB,QAMZf,GAAU/3C,aAAe,CACvB+4C,SAAU,GACVT,oBAAqB,GACrBG,yBAA0B,GAC1BG,wBAAyB,GACzBR,cAAe,GACfG,WAAY,GACZG,gBAAiB,GACjBG,eAAgB,GAChBL,SAAU,GACVG,cAAe,GACfG,aAAc,I,oOC1IT,IAAME,GAAb,YAQI,WAAYvgD,GAAgB,IAAD,wBACvB,8CAAMA,KAPVwgD,WAAa,CACT,CAAEpgD,MAAO,EAAG0E,MAAO,mBACnB,CAAE1E,MAAO,EAAG0E,MAAO,aACnB,CAAE1E,MAAO,EAAG0E,MAAO,YAGI,EAkD3B27C,MAAQ,WACJ,EAAKx+C,SAAS,CACVy+C,SAAS,EACT5R,YAAa,KArDM,EAyD3B6R,eAAiB,SAACxR,GACd,EAAKltC,SAAS,CACV6sC,YAAaK,KA3DM,EA+D3ByR,WAAa,SAACC,GAA8C,IAA1BC,EAAyB,uDAAT,KAC3CA,EACC,EAAK7+C,SAAS,CACVy+C,QAASG,GACVC,GAGH,EAAK7+C,SAAS,CACVy+C,QAASG,KAvEM,EA4E3BE,sBAAwB,SAACC,EAAgB13C,EAAgBw3C,GACrD,IAAIG,EAAG,gBAEP,GAAID,GAAqB,KAAXA,GAA4B,WAAX13C,EAAqB,CAChD,IAAM0gB,EAASzmB,KAAKC,UAAU,CAC1BkiC,MAAO,CACHwb,kBAAmBF,EACnB3oB,cAAe,YAIjB8oB,EAAkB,yBAAqBn3B,GAE7CzoB,KAAIC,IAAI2/C,EACR,SAACx/C,GACMA,GAAYA,EAAS/E,OAAS,GAC7BqkD,EAAIh/C,SAAS,CACT0zC,iBAAkBh0C,IAG1Bm/C,KAEJ,SAACzgD,GACGuB,QAAQC,IAAI,gCAAiCxB,GAC7CygD,WAGJA,KAvGmB,EA2G3BM,eAAiB,WACb,IAAIH,EAAG,gBAEPA,EAAIL,YAAW,EAAM,WACjBr/C,KAAIC,IAAJ,2CAA4Cy/C,EAAIjhD,MAAMqhD,cACtD,SAACC,GACG,GAAGA,QAA2C9gD,IAAzB8gD,EAAejhD,OAAuBihD,EAAe1kD,OAAS,EAAE,CACjF,IAAI84C,EAAa4L,EAAe,GAChCL,EAAIM,mBAAmB7L,EAAW5C,WAF+C,IAGzEvd,EAAsCmgB,EAAtCngB,UAAWisB,EAA2B9L,EAA3B8L,QAASnpB,EAAkBqd,EAAlBrd,cAC5B4oB,EAAIh/C,SAAS,CACTyzC,WAAYA,IAEhBuL,EAAIF,sBAAsBS,EAASnpB,EAAe,WAC9C92B,KAAIC,IAAJ,mCAAoC+zB,GACpC,SAACksB,GACG,GAAGA,QAAyCjhD,IAAxBihD,EAAcphD,MAAoB,CAAC,IAC3CsrB,EAA8B81B,EAA9B91B,OAAQmoB,EAAsB2N,EAAtB3N,kBACZpe,EAAc/J,GAAUA,EAAO6Q,WAAa7Q,EAAO6Q,UAAU,GAAK7Q,EAAO6Q,UAAU,GAAK,GACxFklB,EAAgB,GAChBC,EAAM,GACNC,EAAM,GACNC,EAAM,GACP/N,GAAqBA,EAAkBl3C,OAAS,GAC/Ck3C,EAAkBxoB,QAAQ,SAAA5W,GAKtB,GAJoB,QAAjBA,EAAK6nB,UACJmlB,EAAgBhtC,EAAKS,KAAOT,EAAKS,KAAO,IAGxB,WAAjBT,EAAK6nB,QAAqB,CACzB,IAAIulB,EAASptC,EAAI,OACdotC,EAAOllD,OAAO,GACbklD,EAAOx2B,QAAQ,SAACy2B,GACZ,OAAOA,EAAO,MACd,IAAK,MACDJ,EAASI,EAAO,WAAe,IAAIzlD,GAAe8vB,aAAa21B,EAAO,OACtE,MACJ,IAAK,MACDH,EAASG,EAAO,WAAe,IAAIzlD,GAAe8vB,aAAa21B,EAAO,OACtE,MACJ,IAAK,MACDF,EAASE,EAAO,WAAe,IAAIzlD,GAAe8vB,aAAa21B,EAAO,aAW9Fd,EAAIh/C,SAAS,CACT2zC,WAAYjqB,EACZkqB,WAAYngB,EACZogB,aAAc4L,EACd1L,IAAK2L,EACL5L,IAAK6L,EACL3L,IAAK4L,GACN,WACCtgD,KAAIC,IAAJ,4BAA6Bk0C,EAAW1zC,KAAO,SAACggD,GACzCA,QAAqCxhD,IAAtBwhD,EAAY3hD,OAC1B4gD,EAAIgB,qBAAqBD,GACzBf,EAAIL,YAAW,KAGfh/C,QAAQC,IAAI,+BAAgCmgD,GAC5Cf,EAAIL,YAAW,KAEpB,SAACsB,GACAtgD,QAAQC,IAAI,+BAAgCqgD,GAC5CjB,EAAIL,YAAW,YAKvBh/C,QAAQC,IAAI,8BAA+B4/C,GAC3CR,EAAIL,YAAW,IAGvB,SAACuB,GACGvgD,QAAQC,IAAI,8BAA+BsgD,GAC3ClB,EAAIL,YAAW,YAKvBh/C,QAAQC,IAAI,qBAAsBy/C,GAClCL,EAAIL,YAAW,IAGvB,SAACvgD,GACGuB,QAAQC,IAAI,qBAAsBxB,GAClC4gD,EAAIL,YAAW,QAxMA,EA+M3BwB,kBAAoB,WAChB,EAAKhB,kBAhNkB,EAmN3BG,mBAAqB,SAACzO,GAClB,IAAMuP,EAA4B,CAClC,CACIrgD,IAAK,oBACLmT,KAAM,oBACNmtC,QAAS,GACTplB,MAAO,GACP3nB,UAAU,EACVgtC,UAAU,GAEd,CACIvgD,IAAK,wBACLmT,KAAM,wBACNmtC,QAAS,GACTplB,MAAO,GACP3nB,UAAU,EACVgtC,UAAU,GAEd,CACIvgD,IAAK,uBACLmT,KAAM,uBACNmtC,QAAS,GACTplB,MAAO,GACP3nB,UAAU,EACVgtC,UAAU,GAEd,CACIvgD,IAAK,iBACLmT,KAAM,iBACNmtC,QAAS,GACTplB,MAAO,GACP3nB,UAAU,EACVgtC,UAAU,GAEd,CACIvgD,IAAK,qBACLmT,KAAM,2BACNmtC,QAAS,GACTplB,MAAO,GACP3nB,UAAU,EACVgtC,UAAU,GAEd,CACIvgD,IAAK,0BACLmT,KAAM,6BACNmtC,QAAS,GACTplB,MAAO,GACP3nB,UAAU,EACVgtC,UAAU,GAEd,CACIvgD,IAAK,mBACLmT,KAAM,mBACNmtC,QAAS,GACTplB,MAAO,GACP3nB,UAAU,EACVgtC,UAAU,GAEd,CACIvgD,IAAK,WACLmT,KAAM,WACNmtC,QAAS,GACTplB,MAAO,GACP3nB,UAAU,EACVgtC,UAAU,GAEd,CACIvgD,IAAK,mBACLmT,KAAM,mBACNmtC,QAAS,GACTplB,MAAO,GACP3nB,UAAU,EACVgtC,UAAU,GAEd,CACIvgD,IAAK,oBACLmT,KAAM,oBACNmtC,QAAS,GACTplB,MAAO,GACP3nB,UAAU,EACVgtC,UAAU,GAEd,CACIvgD,IAAK,cACLmT,KAAM,cACNmtC,QAAS,GACTplB,MAAO,GACP3nB,UAAU,EACVgtC,UAAU,GAEd,CACIvgD,IAAK,4BACLmT,KAAM,+BACNmtC,QAAS,GACTplB,MAAO,GACP3nB,UAAU,EACVgtC,UAAU,GAEd,CACIvgD,IAAK,SACLmT,KAAM,SACNmtC,QAAS,GACTplB,MAAO,GACP3nB,UAAU,EACVgtC,UAAU,SAGG/hD,IAAdsyC,GAA2BA,EAAUl2C,OAAS,GACjDk2C,EAAUxnB,QAAQ,SAAC0nB,GACf,IACI79B,EADO69B,EAASryC,KACJlD,QAAQ,IAAK,KAE7B4kD,EAAqB5tC,KAAK,SAAAhH,GAC1BA,EAAE0H,KAAK1Y,eAAiB0Y,GAAQ1H,EAAEyvB,MAAMtuB,KAAKokC,OAIjD,EAAKiP,qBAAqBI,IAxUH,EA2U3BJ,qBAAuB,SAAC9+C,GACpB,IAAMq/C,EAAiB,CACvB/G,iBAAkB,CACd8B,kBAAmB,CAAC,YACpBC,YAAa,CAAC,UACdC,cAAe,CAAC,UAEpBxB,iBAAkB,CACd,CACAwG,WAAY,WACZlgD,MAAO,KAEP,CACAkgD,WAAY,OACZlgD,MAAO,KAEP,CACAkgD,WAAY,UACZlgD,MAAO,KAEP,CACAkgD,WAAY,QACZlgD,MAAO,MAGXo8C,iBAAkB,CACd,CACA8D,WAAY,WACZvK,kBAAkB,GAElB,CACAuK,WAAY,OACZvK,kBAAkB,GAElB,CACAuK,WAAY,UACZvK,kBAAkB,GAElB,CACAuK,WAAY,QACZvK,kBAAkB,IAItBtzC,QAAS,CACL,CACAuQ,KAAM,WACNshC,MAAO,YACPyB,kBAAkB,EAClBiB,gBAAgB,GAEhB,CACAhkC,KAAM,OACNshC,MAAO,YACPyB,kBAAkB,EAClBiB,gBAAgB,GAEhB,CACAhkC,KAAM,UACNshC,MAAO,sBACPyB,kBAAkB,EAClBiB,gBAAgB,GAEhB,CACAhkC,KAAM,QACNshC,MAAO,SACPyB,kBAAkB,EAClBiB,gBAAgB,IAGpB/0C,KAAM,IAEAs+C,EAAsB,CAC5BjH,iBAAkB,CACd8B,kBAAmB,CAAC,YACpBE,cAAe,CAAC,UAEpBxB,iBAAkB,CACd,CACAwG,WAAY,WACZlgD,MAAO,KAEP,CACAkgD,WAAY,OACZlgD,MAAO,KAEP,CACAkgD,WAAY,UACZlgD,MAAO,KAEP,CACAkgD,WAAY,QACZlgD,MAAO,MAGXo8C,iBAAkB,CACd,CACA8D,WAAY,WACZvK,kBAAkB,GAElB,CACAuK,WAAY,OACZvK,kBAAkB,GAElB,CACAuK,WAAY,UACZvK,kBAAkB,GAElB,CACAuK,WAAY,QACZvK,kBAAkB,IAGtBtzC,QAAS,CACL,CACAuQ,KAAM,WACNshC,MAAO,YACPyB,kBAAkB,EAClBiB,gBAAgB,GAEhB,CACAhkC,KAAM,OACNshC,MAAO,YACPyB,kBAAkB,EAClBiB,gBAAgB,GAEhB,CACAhkC,KAAM,UACNshC,MAAO,sBACPyB,kBAAkB,EAClBiB,gBAAgB,GAEhB,CACAhkC,KAAM,QACNshC,MAAO,SACPyB,kBAAkB,EAClBiB,gBAAgB,IAGpB/0C,KAAM,IAEAu+C,EAAqB,CAC3BlH,iBAAkB,CACd8B,kBAAmB,CAAC,YACpBC,YAAa,CAAC,UACdC,cAAe,CAAC,UAEpBxB,iBAAkB,CACd,CACAwG,WAAY,WACZlgD,MAAO,KAEP,CACAkgD,WAAY,OACZlgD,MAAO,KAEP,CACAkgD,WAAY,UACZlgD,MAAO,KAEP,CACAkgD,WAAY,QACZlgD,MAAO,MAGXo8C,iBAAkB,CACd,CACA8D,WAAY,WACZvK,kBAAkB,GAElB,CACAuK,WAAY,OACZvK,kBAAkB,GAElB,CACAuK,WAAY,UACZvK,kBAAkB,GAElB,CACAuK,WAAY,QACZvK,kBAAkB,IAGtBtzC,QAAS,CACL,CACAuQ,KAAM,WACNshC,MAAO,YACPyB,kBAAkB,EAClBiB,gBAAgB,GAEhB,CACAhkC,KAAM,OACNshC,MAAO,YACPyB,kBAAkB,EAClBiB,gBAAgB,GAEhB,CACAhkC,KAAM,UACNshC,MAAO,sBACPyB,kBAAkB,EAClBiB,gBAAgB,GAEhB,CACAhkC,KAAM,QACNshC,MAAO,SACPyB,kBAAkB,EAClBiB,gBAAgB,IAGpB/0C,KAAM,IAEN,IAAK,IAAM+1C,KAAOh3C,EAAM,CACxB,IAAMq/B,EAAWr/B,EAAKg3C,GAChByI,EAAgB,CAClBpvC,GAAIgvB,EAAG,IACPjtB,SAAUitB,EAAG,SACbrtB,KAAMqtB,EAAG,KACT8f,QAAS9f,EAAG,QACZtF,MAAO,IAGPsF,EAAG,YACchiC,IAAjBgiC,EAAG,OACc,OAAjBA,EAAG,OACHA,EAAG,MAAU5lC,OAAS,EACvB,WACC,IAAIimD,EAAkB,GAClBC,EAAqB,GACzBtgB,EAAG,MAAUlX,QAAQ,SAAA5W,GAEjBA,EAAKquC,eACaviD,IAAlBkU,EAAKquC,UACa,OAAlBruC,EAAKquC,WAELF,EAAWj0C,KAAK8F,EAAKquC,UACjBruC,EAAI,WAAqC,IAArBA,EAAI,UAC5BouC,EAAcl0C,KAAK8F,EAAKquC,aAI5BH,EAAQ,MAAYC,EAAW7lD,KAAK,MAChC8lD,EAAclmD,OAAS,GAC3B8lD,EAAc,KAAS9zC,KAAKg0C,GAjB7B,GAoBCpgB,EAAG,eACiBhiC,IAApBgiC,EAAG,UACiB,OAApBA,EAAG,WACiB,IAApBA,EAAG,UAEHmgB,EAAa,KAAS/zC,KAAKg0C,GAE/BJ,EAAS,KAAS5zC,KAAKg0C,GAEvB,IAAMjD,EAAqB,CAC3B,CACI76C,MAAO,MACPQ,MAAOk9C,EAAS,KAAS5lD,QAE7B,CACIkI,MAAO,qBACPQ,MAAOo9C,EAAc,KAAS9lD,QAElC,CACIkI,MAAO,oBACPQ,MAAOq9C,EAAa,KAAS/lD,SAGjC,EAAKqF,SAAS,CACd+gD,mBAAoB7/C,EACpB8/C,oBAAqBT,EACrBU,yBAA0BR,EAC1BS,wBAAyBR,EACzBhD,cAAeA,KA5lBQ,EAgmB3ByD,gBAAkB,SAACjgD,GACf,GAAIqE,OAAO+gB,KAAKplB,GAAMvG,OAAS,EAAG,CAClC,EAAKgkD,YAAW,GADkB,IAE1BoC,EAAuB,EAAK3hD,MAA5B2hD,mBACR,IAAK,IAAM7I,KAAO6I,EAAoB,CAElC,GADuBA,EAAmB7I,GAC7B,MAAYh3C,EAAI,GAAQ,CAChB,aAAjBA,EAAI,KACJ6/C,EAAmB7I,GAAnB,SACkB,SAAlBh3C,EAAI,QAA0C,IAAlBA,EAAI,MACR,WAAjBA,EAAI,OAEX6/C,EAAmB7I,GAAnB,YACqC35C,IAArCwiD,EAAmB7I,GAAnB,OACqC,OAArC6I,EAAmB7I,GAAnB,MAEA6I,EAAmB7I,GAAnB,MAAiCvrC,KAAKzL,EAAI,QAE1C6/C,EAAmB7I,GAAnB,MAAmC,GACnC6I,EAAmB7I,GAAnB,MAAiCvrC,KAAKzL,EAAI,SAG9C,OAGJ,EAAK8+C,qBAAqBe,GAC1B,EAAKpC,YAAW,KA1nBO,EA8nB3ByC,mBAAqB,aA9nBM,EA8pB3B9qC,cAAgB,SAACC,EAAmBpY,GAChC,EAAK6B,SAAS,SAAAZ,GAAK,O,wVAAA,IAChBA,EADgB,gBAElBmX,EAAYpY,OAjqBU,EAqqB3BkjD,qBAAuB,SAAC9vB,EAAa2b,EAAaxuC,GAAkB,IACxDqiD,EAAuB,EAAK3hD,MAA5B2hD,mBACJO,EAAa,CACjB9H,iBAAkB,CACd8B,kBAAmB,CAAC,YACpBE,cAAe,CAAC,UAEpBxB,iBAAkB,CACd,CACAwG,WAAY,WACZlgD,MAAO,KAEP,CACAkgD,WAAY,OACZlgD,MAAO,KAEP,CACAkgD,WAAY,UACZlgD,MAAO,KAEP,CACAkgD,WAAY,QACZlgD,MAAO,MAGXo8C,iBAAkB,CACd,CACA8D,WAAY,WACZvK,kBAAkB,GAElB,CACAuK,WAAY,OACZvK,kBAAkB,GAElB,CACAuK,WAAY,UACZvK,kBAAkB,GAElB,CACAuK,WAAY,QACZvK,kBAAkB,GAElB,CACAuK,WAAY,SACZvK,kBAAkB,IAGtBtzC,QAAS,CACL,CACAuQ,KAAM,WACNshC,MAAO,YACPyB,kBAAkB,EAClBiB,gBAAgB,GAEhB,CACAhkC,KAAM,OACNshC,MAAO,YACPyB,kBAAkB,EAClBiB,gBAAgB,GAEhB,CACAhkC,KAAM,UACNshC,MAAO,sBACPyB,kBAAkB,EAClBiB,gBAAgB,GAEhB,CACAhkC,KAAM,QACNshC,MAAO,SACPyB,kBAAkB,EAClBiB,gBAAgB,IAGpB/0C,KAAM,IAEN,IAAK,IAAM+1C,KAAO6I,EAAoB,CACtC,IAAMxgB,EAAWwgB,EAAmB7I,GAC9ByI,EAAgB,CAClBpvC,GAAIgvB,EAAG,IACPjtB,SAAUitB,EAAG,SACbrtB,KAAMqtB,EAAG,KACT8f,QAAS9f,EAAG,QACZtF,MAAO,IAGPsF,EAAG,YACchiC,IAAjBgiC,EAAG,OACc,OAAjBA,EAAG,OACHA,EAAG,MAAU5lC,OAAS,EACvB,WACC,IAAIimD,EAAkB,GAClBC,EAAqB,GACzBtgB,EAAG,MAAUlX,QAAQ,SAAA5W,GAEjBA,EAAKquC,eACaviD,IAAlBkU,EAAKquC,UACa,OAAlBruC,EAAKquC,WAELF,EAAWj0C,KAAK8F,EAAKquC,UACjBruC,EAAI,WAAqC,IAArBA,EAAI,UAC5BouC,EAAcl0C,KAAK8F,EAAKquC,aAI5BH,EAAQ,MAAYC,EAAW7lD,KAAK,MAChC8lD,EAAclmD,OAAS,GAAa,IAARuyC,GAChCoU,EAAK,KAAS30C,KAAKg0C,GAjBpB,GAoBCpgB,EAAG,eACiBhiC,IAApBgiC,EAAG,UACiB,OAApBA,EAAG,WACiB,IAApBA,EAAG,UACK,IAAR2M,GAEAoU,EAAK,KAAS30C,KAAKg0C,GAEX,IAARzT,GACAoU,EAAK,KAAS30C,KAAKg0C,GAtHwC,MAgI3D,EAAKvhD,MANTmiD,EA1H+D,EA0H/DA,mBACAC,EA3H+D,EA2H/DA,wBACAC,EA5H+D,EA4H/DA,uBACAC,EA7H+D,EA6H/DA,qBACAC,EA9H+D,EA8H/DA,0BACAC,EA/H+D,EA+H/DA,yBAEA,OAAQ1U,GACR,KAAK,EACY,WAATxuC,GACJ4iD,EAAQ,EAAK9D,gBAAgB8D,EAAOC,EAAoBhwB,GACxD,EAAKvxB,SAAS,CACV0hD,qBAAsBnwB,EACtByvB,oBAAqBM,MAGzBA,EAAQ,EAAK9D,gBAAgB8D,EAAO/vB,EAAQmwB,GAC5C,EAAK1hD,SAAS,CACVuhD,mBAAoBhwB,EACpByvB,oBAAqBM,KAGzB,MACJ,KAAK,EACY,WAAT5iD,GACJ4iD,EAAQ,EAAK9D,gBAAgB8D,EAAOE,EAAyBjwB,GAC7D,EAAKvxB,SAAS,CACV2hD,0BAA2BpwB,EAC3B0vB,yBAA0BK,MAG9BA,EAAQ,EAAK9D,gBACT8D,EACA/vB,EACAowB,GAEJ,EAAK3hD,SAAS,CACVwhD,wBAAyBjwB,EACzB0vB,yBAA0BK,KAG9B,MACJ,KAAK,EACY,WAAT5iD,GACJ4iD,EAAQ,EAAK9D,gBAAgB8D,EAAOG,EAAwBlwB,GAC5D,EAAKvxB,SAAS,CACV4hD,yBAA0BrwB,EAC1B2vB,wBAAyBI,MAG7BA,EAAQ,EAAK9D,gBAAgB8D,EAAO/vB,EAAQqwB,GAC5C,EAAK5hD,SAAS,CACVyhD,uBAAwBlwB,EACxB2vB,wBAAyBI,OAp1BV,EA21B3B9D,gBAAkB,SAACt8C,EAAW86C,EAAcj0B,GACxC,IAAI85B,EAAkB,GACtB,GAAI7F,GAAWA,EAAQ,IAAMA,EAAQ,GAAR,WAC7B,OAAQA,EAAQ,GAAR,YACJ,IAAK,OAC2B,QAA5BA,EAAQ,GAAR,UACA96C,EAAKiB,KAAK2/C,KAAK,SAAC90C,EAAGtD,GAAJ,OAAWsD,EAAEkG,KAAOxJ,EAAEwJ,KAAO,GAAK,IAEjDhS,EAAKiB,KAAK2/C,KAAK,SAAC90C,EAAGtD,GAAJ,OAAWsD,EAAEkG,KAAOxJ,EAAEwJ,MAAQ,EAAI,IAErD,MACA,IAAK,UAC2B,QAA5B8oC,EAAQ,GAAR,UACA96C,EAAKiB,KAAK2/C,KAAK,SAAC90C,EAAGtD,GAAJ,OAAWsD,EAAEqzC,QAAU32C,EAAE22C,QAAU,GAAK,IAEvDn/C,EAAKiB,KAAK2/C,KAAK,SAAC90C,EAAGtD,GAAJ,OAAWsD,EAAEqzC,QAAU32C,EAAE22C,SAAW,EAAI,IAE3D,MACA,IAAK,QAC2B,QAA5BrE,EAAQ,GAAR,UACA96C,EAAKiB,KAAK2/C,KAAK,SAAC90C,EAAGtD,GAAJ,OAAWsD,EAAEiuB,MAAQvxB,EAAEuxB,MAAQ,GAAK,IAEnD/5B,EAAKiB,KAAK2/C,KAAK,SAAC90C,EAAGtD,GAAJ,OAAWsD,EAAEiuB,MAAQvxB,EAAEuxB,OAAS,EAAI,IAK3D,IAAI8mB,EAAsB,GACtBC,EAAyB,GACzBC,EAAuB,GAyB3B,OAvBAl6B,EAAOsB,QAAQ,SAAA5W,GACS,SAApBA,EAAK+tC,aAAuBuB,EAActvC,EAAKtU,MAAM3D,eACjC,YAApBiY,EAAK+tC,aACLwB,EAAiBvvC,EAAKtU,MAAM3D,eACR,UAApBiY,EAAK+tC,aAAwByB,EAAexvC,EAAKtU,MAAM3D,iBAEvDutB,EAAOptB,OAAS,IACpBuG,EAAKiB,KAAKknB,QAAQ,SAAA5W,QAEAlU,IAAdkU,EAAKS,MACS,OAAdT,EAAKS,MACLT,EAAKS,KAAK1Y,cAAcqoB,SAASk/B,SACfxjD,IAAjBkU,EAAK4tC,SACe,OAAjB5tC,EAAK4tC,SACL5tC,EAAK4tC,QAAQ7lD,cAAcqoB,SAASm/B,SACxBzjD,IAAfkU,EAAKwoB,OACa,OAAfxoB,EAAKwoB,OACLxoB,EAAKwoB,MAAMzgC,cAAcqoB,SAASo/B,IAEtCJ,EAASl1C,KAAK8F,KAElBvR,EAAKiB,KAAO0/C,GAEL3gD,GAj5BgB,EAo5B3BghD,uBAAyB,SAACC,GACtB,GAAGA,EAAqB,CACxB,IAAIC,EAAiBD,EAAoB,WAAiBA,EAAoB,WAAen6B,OAAS,GAClGq6B,EAAkBF,EAAoB,YAAkBA,EAAoB,YAAgBn6B,OAAS,GAGzG,OAFoBm6B,EAAoB,UAAgBA,EAAoB,UAAcn6B,OAAS,IAE9E,KAAKo6B,EAAe,KAAKC,EAAgB,MAD5CF,EAAoB,OAAaA,EAAoB,OAAWn6B,OAAS,IAI3F,MAAO,IA75BgB,OAkBvB,EAAK5oB,MAAQ,CACTq/C,SAAS,EACT5R,YAAa,EACb8G,WAAY,KACZC,WAAY,GACZC,aAAc,GACdJ,WAAY,KACZC,iBAAkB,GAClBqN,mBAAoB,GACpBrD,cAxBuB,CAC3B,CACI76C,MAAO,MACPQ,MAAO,KAEX,CACIR,MAAO,qBACPQ,MAAO,GAEX,CACIR,MAAO,oBACPQ,MAAO,IAcP29C,oBAAqB,GACrBC,yBAA0B,GAC1BC,wBAAyB,GACzBQ,qBAAsB,GACtBC,0BAA2B,GAC3BC,yBAA0B,GAC1BL,mBAAoB,GACpBC,wBAAyB,GACzBC,uBAAwB,GACxB3N,IAAK,GACLC,IAAK,GACLC,IAAK,IAGT,EAAK2K,WAAa,EAAKA,WAAW2D,KAAhB,iBAClB,EAAKtC,qBAAuB,EAAKA,qBAAqBsC,KAA1B,iBAC5B,EAAKnB,gBAAkB,EAAKA,gBAAgBmB,KAArB,iBACvB,EAAKlB,mBAAqB,EAAKA,mBAAmBkB,KAAxB,iBAC1B,EAAKhsC,cAAgB,EAAKA,cAAcgsC,KAAnB,iBACrB,EAAKjB,qBAAuB,EAAKA,qBAAqBiB,KAA1B,iBA/CL,EAR/B,wEAy6BkC,IAAD,SAuBrBrkD,KAAKmB,MApBLq/C,EAHqB,EAGrBA,QACA5R,EAJqB,EAIrBA,YACA6Q,EALqB,EAKrBA,cACAqD,EANqB,EAMrBA,mBACAC,EAPqB,EAOrBA,oBACAU,EARqB,EAQrBA,qBACAH,EATqB,EASrBA,mBACAN,EAVqB,EAUrBA,yBACAU,EAXqB,EAWrBA,0BACAH,EAZqB,EAYrBA,wBACAN,EAbqB,EAarBA,wBACAU,EAdqB,EAcrBA,yBACAH,EAfqB,EAerBA,uBACAhO,EAhBqB,EAgBrBA,WACAE,EAjBqB,EAiBrBA,WACAC,EAlBqB,EAkBrBA,WACAC,EAnBqB,EAmBrBA,aACAC,EApBqB,EAoBrBA,IACAC,EArBqB,EAqBrBA,IACAC,EAtBqB,EAsBrBA,IAGA9gB,KAASugB,IAAcA,EAAWvgB,SAASugB,EAAWvgB,OAW1D,OACI,uBAAK10B,UAAU,UAAUG,MAAO,CAAC2B,MAAO,SACpC,uBAAK3B,MAAO,CAAC0B,WAAY,YACzB,gBAACoW,EAAA,EAAD,CAAM3R,WAAS,EAACtG,UAAU,eACtB,gBAACiY,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAIu9B,GAAI,EAAGv1C,MAAO,CAACszC,YAAa,uBAAwBtkC,QAAS,GAC5E,gBAACknC,GAAA,EAAD,KACI,gBAAC17B,EAAA,EAAD,CACI3Y,IAAI,wBACJyY,IAAI,SACJza,UAAW+jD,mBACPrvB,EACE,6BACA,6BAId,uBAAK10B,UAAU,eACX,gBAAC,GAAD,CACIyuC,QAAShvC,KAAKsgD,WACd1R,YAAa5uC,KAAKmB,MAAMytC,YACxBiB,YAAY,WACZE,SAAU,SAAC5wC,GACP,OACI,uBAAKuB,MAAO,CAAC2B,MAAO,SAChB,uBAAK9B,UAAU,WAAWG,MAAO,CAACye,OAAQ,UACrC,EAAKmhC,WAAWnhD,GAAOyF,SAKxCmqC,eAAgB,SAAC7uC,GACb,EAAK6B,SAAS,CACV6sC,YAAa1uC,SAKjC,gBAACsY,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAInY,UAAU,iBAErBigD,EACI,gBAAC,GAAD,CAASl+C,OAAO,UACF,IAAhBssC,EACE,gBAAC,GAAD,CACI4G,WAAYx1C,KAAKmB,MAAMq0C,WACvBC,iBAAkBz1C,KAAKmB,MAAMs0C,iBAC7BC,WAAYA,EACZC,WAAYA,EACZC,aAAcA,EACdE,IAAKA,EACLD,IAAKA,EACLE,IAAKA,IACO,IAAhBnH,EACA,gBAAC,GAAD,CACIwR,SAAU0C,EACVrD,cAAeA,EACfE,oBAAqBoD,EACrBnD,WAAY6D,EACZ5D,SAAUyD,EACVxD,yBAA0BkD,EAC1BjD,gBAAiB2D,EACjB1D,cAAeuD,EACftD,wBAAyBgD,EACzB/C,eAAgByD,EAChBxD,aAAcqD,EACdjE,gBAAiBv/C,KAAKojD,uBAE1B,gBA3EF,WAClB,OACI,gBAAC5qC,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,OAwEH,QAMhB,uBAAKnY,UAAU,iBArhC/B,GAA0CS,aCZ7BujD,GAAb,YASI,WAAYzkD,GAAgB,IAAD,+BACvB,8CAAMA,KARV0kD,aAAsC,CAClC,CAAE5sC,SAAS,EAAO3C,KAAM,kBAAmBrQ,MAAO,mBAClD,CAAEgT,SAAS,EAAO3C,KAAM,kBAAmBrQ,MAAO,mBAClD,CAAEgT,SAAS,EAAO3C,KAAM,oBAAqBrQ,MAAO,qBACpD,CAAEgT,SAAS,EAAO3C,KAAM,uBAAwBrQ,MAAO,yBAGhC,EA2F3B6/C,0BAA4B,WACxB,IAAM7/B,EAAW,SAACpf,EAAcC,GAC5B,OAAOD,EAAKjJ,cAAcqoB,SAASnf,EAAGlJ,gBAFZ,EAIG,EAAK4E,MAA9B88B,EAJsB,EAItBA,KAAMhpB,EAJgB,EAIhBA,KAAMpN,EAJU,EAIVA,SAOpB,OAL2B,EAAK1G,MAAM2nC,WACjChf,OAAO,SAAA4F,GAAQ,MAAa,KAATuO,GAAerZ,EAAS8K,EAASuO,KAAMA,KAC1DnU,OAAO,SAAA4F,GAAQ,MAAa,KAATza,GAAe2P,EAAS8K,EAASza,KAAMA,KAC1D6U,OAAO,SAAA4F,GAAQ,MAAiB,KAAb7nB,GAAmB+c,EAAS8K,EAAS7nB,SAAUA,MAjGvE,EAAK1G,MAAQ,CACT88B,KAAM,GACNhpB,KAAM,GACNpN,SAAU,GAEV68C,OAAQ,GACR5b,WAAY,GACZ6b,UAAU,GAVS,EAT/B,mFAuByB,IAAD,OAChBtjD,KAAIC,IAAJ,mCAAoCtB,KAAKF,MAAM0B,UAC3C,SAACC,GACGmjD,EAA4BnjD,EAASmyC,mBACrC,EAAK7xC,SAAS,CAAC4iD,UAAU,KAE7B,SAACxkD,GACGuB,QAAQC,IAAIxB,KAGpB,IAAMykD,EAA8B,SAACnjD,GAEjC,IAAMojD,EAAc,SAACC,GACjB,OAAOA,EAAMA,EAAMpoD,OAAS,IAG1BqoD,EAAatjD,EAAS8S,KAAK,SAAAywC,GAAI,OAAkB,GAAdA,EAAK5oB,OAA8C,OAAhCyoB,EAAYG,EAAKC,aAEvEC,EAAgBzjD,EAASqoB,OAAO,SAAAk7B,GAClC,OAAOD,EAAWn0C,SAASgU,SAASogC,EAAKljD,OAGvCqjD,EAAgBD,EAAcp7B,OAAO,SAAAk7B,GACvC,MACoC,OAAhCH,EAAYG,EAAKC,YACe,OAAhCJ,EAAYG,EAAKC,aAInBG,EAAiBD,EAAc5wC,KAAK,SAAAywC,GACtC,OAAOA,EAAKhtB,gBAAgBqtB,uBAGhC3jD,QAAQC,IAAI,gBAAiBujD,GAC7BxjD,QAAQC,IAAI,gBAAiBwjD,GAC7BzjD,QAAQC,IAAI,iBAAkByjD,GAE9B,IAAME,EAAWP,EAAW/sB,gBAAgB0sB,OACxCa,OAASjlD,EACTklD,OAAellD,EAEf8kD,IACAG,EAASH,EAAenwC,KACxBuwC,EAAeJ,EAAeptB,gBAAgBqtB,sBAGlD3jD,QAAQC,IAAI,SAAU4jD,GACtB7jD,QAAQC,IAAI,WAAY2jD,GACxB5jD,QAAQC,IAAI,eAAgB6jD,GAI5B,EAAKzjD,SAAS,CAACtB,KAAM8kD,IAGjBD,IACA,EAAKvjD,SAAS,CAAC2iD,OAAQ,EAAKF,aAAa5iD,IAAI,SAAAnF,GAAC,OAAIA,MAClD,EAAK0E,MAAMujD,OAAOt5B,QAAQ,SAAAq6B,GACtBA,EAAM7tC,QAAU0tC,EAAS/wC,KAAK,SAAAmxC,GAAO,OAAID,EAAM7gD,QAAU8gD,MAE7D,EAAK3jD,SAAS,CAAC2iD,OAAQ,EAAKvjD,MAAMujD,UAIlCc,GAEA,EAAKzjD,SAAS,CAAC+mC,WAAY0c,EAAa5jD,IAAI,SAAA8tB,GACxC,MAAO,CACHuO,KAAMvO,EAASi2B,YACf1wC,KAAMya,EAASza,KACfpN,SAAU,cA7FlC,qCAkHmB8pC,EAAkBiU,GAC7B5lD,KAAKmB,MAAM2nC,WAAW+a,KAAK,SAAC90C,EAAQtD,GAAT,OACtBsD,EAAE4iC,GAAUr0C,WAAWf,cAAgBkP,EAAEkmC,GAAUr0C,WAAWf,cAAkBqpD,EAAQ,GAAK,EAAMA,GAAS,EAAI,IAGrH5lD,KAAK+B,SAAS,CAAC+mC,WAAY9oC,KAAKmB,MAAM2nC,eAvH9C,+BA2HQ,OACI,uBAAKvoC,UAAU,WACTP,KAAKmB,MAAMwjD,SAGT3kD,KAAK+zC,oBAFL,gBAAC,GAAD,CAASzxC,OAAO,aA9HpC,0CAsIsC,IAAD,OAC7B,OACI,gCACA,uBAAK5B,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,YAAf,yBACA,uBAAKA,UAAU,eACX,uBAAKA,UAAU,YAAf,QACA,uBAAKA,UAAU,cAAcP,KAAKmB,MAAMV,KAAOT,KAAKmB,MAAMV,KAAO,QAErE,uBAAKF,UAAU,eACX,uBAAKA,UAAU,YAAf,SACA,gBAACiY,EAAA,EAAD,CAAMjY,UAAU,cAAcsG,WAAS,EAAC6I,QAAS,EAAGhP,MAAO,CAAC2B,MAAO,QAC9DrC,KAAKwkD,aAAa5iD,IAAI,SAAA6jD,GACnB,OACI,gBAACjtC,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,4BACK+sC,EAAM7tC,QACH,gBAAC,IAAD,CAAiB7R,KAAM8/C,IAASnlD,MAAO,CAACmK,MAAO,aAE/C,gBAAC,IAAD,CAAiB9E,KAAM+/C,IAASplD,MAAO,CAACmK,MAAO,cAGvD,wBAAMnK,MAAO,CAACsW,YAAa,SAAUyuC,EAAMxwC,WAM/D,uBAAK1U,UAAU,eACX,gBAACiY,EAAA,EAAD,CAAMjY,UAAU,cAAcsG,WAAS,EAAC6I,QAAS,GAC7C,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CAAY9T,MAAM,qBAAqBkB,QAAS,gBAEpD,gBAAC0S,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CAAY9T,MAAM,qBAAqBkB,QAAS,iBAGxD,gBAACvC,GAAA,EAAD,CACIW,KAAMlE,KAAKykD,4BACX5/C,aAAc,kBAAM,EAAK2nB,qBACzB1nB,UAAW,SAAC2nB,EAActtB,GAAf,OACP,EAAKutB,eAAeD,EAASttB,OAEzC,uBAAKoB,UAAU,eAjL3B,0CAwLQ,OACI,gCACCP,KAAK0xC,mBAAmB,OAAQ,iBAChC1xC,KAAK0xC,mBAAmB,OAAQ,QAChC1xC,KAAK0xC,mBAAmB,WAAY,eA5LjD,qCAiMmBhiB,EAAevwB,GAC1B,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UAEvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,KAAY+C,EAASuO,MACrB,gBAACtR,GAAA,EAAD,KAAY+C,EAASza,MACrB,gBAAC0X,GAAA,EAAD,KAAY+C,EAAS7nB,aAxMrC,yCA6MuB8pC,EAAkBC,GAAkC,IAAD,OAClE,OACI,gBAACjlB,GAAA,EAAD,KACI,wBAAMpsB,UAAU,YAAYqxC,GAC5B,uBAAKlxC,MAAO,CAACmV,MAAO,UAChB,gBAAC,KAAD,CACI9P,KAAM8rC,IACN/rC,QAAS,WACL,EAAKigD,eAAepU,GAAU,OAG1C,gBAAC9xC,GAAA,EAAD,CACIK,MAAOF,KAAKmB,MAAMwwC,GAClBhxC,SAAU,SAACT,GAEP,EAAK6B,SAAL,gBAAgB4vC,EAAWzxC,YA5NnD,GAA2Cc,a,6NCjBpC,IAAMglD,GAAb,YAiBI,WAAYlmD,GAAa,IAAD,+BACpB,8CAAMA,KAhBVmmD,UAAY,CACR,CACIxwB,IAAK,CAAEniB,GAAI,aAAc4yC,OAAO,GAChC/uB,aAAc,WACdtG,UAAW,CAAEoN,KAAM,SAAUhpB,KAAM,aAAckxC,KAAM,gBACvD10B,UAAW,CAAEwM,KAAM,SAAUhpB,KAAM,WAAYkxC,KAAM,gBACrDx1B,SAAU,CAAE1b,KAAM,2CAClB4c,OAAQ,EACRu0B,SAAU,EACVC,YAAa,IAAIxoD,KACjB4C,KAAM,OACN2I,OAAQ,aAOZ,EAAKjI,MAAQ,CACTmlD,MAAO,GACPnvB,aAAc,GACdtG,UAAW,GACXY,UAAW,GACXd,SAAU,GACVkB,OAAQ,GACRu0B,SAAU,GACVC,YAAa,GACb5lD,KAAM,GACN2I,OAAQ,IAbQ,EAjB5B,wEAmC2B,IAAD,OAClB,OACI,uBAAK7I,UAAU,WACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,YAAf,qBACA,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAACtG,UAAU,cAAcmP,QAAS,GAC7C,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,cAAf,wBACA,uBAAKA,UAAU,YAAY,aAE/B,gBAACiY,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIrE,MAAO,CACH,CAAEnU,MAAO,GAAI2K,MAAO,UAAW07C,OAAQ,WAAYC,OAAQ,iBAC3D,CAAEtmD,MAAO,EAAG2K,MAAO,UAAW07C,OAAQ,OAAQC,OAAQ,iBACtD,CAAEtmD,MAAO,GAAI2K,MAAO,UAAW07C,OAAQ,YAAaC,OAAQ,eAEhEC,SAAU,QAGtB,uBAAKlmD,UAAU,cAAcG,MAAO,CAAC+wC,UAAW,SAC5C,gBAACluC,GAAA,EAAD,CACIhD,UAAU,0BACV2D,KAAMlE,KAAKimD,UACXphD,aAAc,kBAAM,EAAK2nB,qBACzB1nB,UAAW,SAAC2nB,EAActtB,GAAf,OACP,EAAKutB,eAAeD,EAASttB,IACjC6E,mBAAoB,CAAC,GAAI,GAAI,OAErC,uBAAKzD,UAAU,eAhE/B,0CAsEQ,OACI,gCACCP,KAAK0xC,mBAAmB,QAAS,SAAU,SAC3C1xC,KAAK0xC,mBAAmB,eAAgB,gBAAiB,SACzD1xC,KAAK0xC,mBAAmB,YAAa,YAAa,SAClD1xC,KAAK0xC,mBAAmB,YAAa,YAAa,SAClD1xC,KAAK0xC,mBAAmB,WAAY,WAAY,SAChD1xC,KAAK0xC,mBAAmB,SAAU,SAAU,SAC5C1xC,KAAK0xC,mBAAmB,WAAY,WAAY,QAChD1xC,KAAK0xC,mBAAmB,cAAe,eAAgB,SACvD1xC,KAAK0xC,mBAAmB,OAAQ,OAAQ,QACxC1xC,KAAK0xC,mBAAmB,SAAU,SAAU,WAjFzD,qCAsFmBgV,EAAkBvnD,GAC7B,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UAEvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,KAAY+5B,EAAYjxB,IAAIniB,IAC5B,gBAACqZ,GAAA,EAAD,KAAY+5B,EAAYvvB,cACxB,gBAACxK,GAAA,EAAD,KAAY+5B,EAAY71B,UAAU5b,MAClC,gBAAC0X,GAAA,EAAD,KAAY+5B,EAAYj1B,UAAUxc,MAClC,gBAAC0X,GAAA,EAAD,KAAY+5B,EAAY/1B,SAAS1b,MACjC,gBAAC0X,GAAA,EAAD,KAAY+5B,EAAY70B,QACxB,gBAAClF,GAAA,EAAD,KAAY+5B,EAAYN,UACxB,gBAACz5B,GAAA,EAAD,KAAYvwB,KAAeuqD,mBAAmBD,EAAYL,cAC1D,gBAAC15B,GAAA,EAAD,KAAY+5B,EAAYjmD,MACxB,gBAACksB,GAAA,EAAD,KAAY+5B,EAAYt9C,WApGxC,yCA0GuBuoC,EAAkBC,EAAoBvvC,GAA6B,IAAD,OACjF,OACI,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAUtZ,EAAO8d,SAAU9d,IAC1C,wBAAM9B,UAAU,YAAYqxC,GAC5B,uBAAKlxC,MAAO,CAACmV,MAAO,UAChB,gBAAC,KAAD,CACI9P,KAAM8rC,IACN/rC,QAAS,gBAKjB,gBAACjG,GAAA,EAAD,CACIK,MAAOF,KAAKmB,MAAMwwC,GAClBhxC,SAAU,SAACT,GACP,EAAK6B,SAAS,SAAA6kD,GAAS,O,wVAAA,IAASA,EAAT,gBAAqBjV,EAAWzxC,cAzH/E,GAA6Cc,aA2IhC6lD,GAAb,sLAE2B,IAAD,OAClB,OACI,uBAAKnmD,MAAO,CAAC2B,MAAO,MAAOC,OAAQ,IAC9BtC,KAAKF,MAAMuU,MAAMzS,IAAI,SAAA4S,GAClB,OACI,uBACI9T,MAAO,CACH2B,MAAQmS,EAAKtU,MAAQ,EAAKJ,MAAM2mD,SAAW,IAAO,IAClDnkD,OAAQ,MACR2E,QAAS,eACTL,gBAAiB4N,EAAK3J,WAItC,uBAAKnK,MAAO,CAACqP,QAAS,aACrB/P,KAAKF,MAAMuU,MAAMzS,IAAI,SAAA4S,GAClB,OACI,uBACI9T,MAAO,CACH2B,MAAQ,EAAI,EAAKvC,MAAMuU,MAAM3X,OAAS,IAAO,IAC7C4F,OAAQ,MACR2E,QAAS,iBAEb,2BACI,uBACIvG,MAAO,CACH2B,MAAO,OACPC,OAAQ,OACRsE,gBAAiB4N,EAAK3J,MACtB5D,QAAS,eACTgN,YAAa,UAErB,uBACI1T,UAAU,aACVG,MAAO,CACHuG,QAAS,iBAEZuN,EAAK+xC,QAEV,uBACIhmD,UAAU,WACVG,MAAO,CACHmK,MAAO2J,EAAK3J,QAEf2J,EAAKgyC,kBA9C1C,GAA0BxlD,aC5Ib8lD,GAAb,YAEI,WAAYhnD,GAAgB,IAAD,+BACvB,8CAAMA,KAEDqB,MAAQ,GAHU,EAF/B,mFAUyB,IAAD,OAChBO,QAAQC,IAAI3B,KAAKF,MAAMinD,UAEvB1lD,KAAIC,IAAI,yBAA2BtB,KAAKF,MAAMinD,SAC1C,SAACtlD,GACG,IAAMoiC,EAAiBpiC,EAAS2uB,gBAC1B42B,EAAmBnjB,EAAenT,kBAClCu2B,EAAqBpjB,EAAerR,oBA2B1C,GA1BA,EAAKzwB,SAAS,CAACosB,OAAQ,CACnBc,cAAextB,EAASutB,aACxBD,cAAettB,EAASqtB,eACxBK,aAAc1tB,EAASytB,cACvBG,WAAY5tB,EAAS2tB,YACrB7E,WAAY9oB,EAAS6tB,iBACrBE,WAAY/tB,EAAS8tB,OACrBG,SAAU,CAAExvB,MAAO,GAAI0E,MAAOnD,EAASguB,eACvCE,WAAYluB,EAASkuB,WACrBE,WAAYpuB,EAASmuB,YACrB5B,UAAWvsB,EAASquB,WACpBrwB,WAAYokC,EAAexT,YAC3B3wB,aAAcmkC,EAAevT,cAC7BC,QAASsT,EAAetT,QACxBE,MAAO,CAAEnd,GAAI,GAAI2B,KAAM4uB,EAAerT,WACtCR,gBAAiBvuB,EAASsuB,iBAC1B+T,gBAAiB,GACjBhX,SAAUrrB,EAASi1B,UACnBO,SAAUx1B,EAAS6yB,gBACnBlrB,OAAQ3H,EAAS2H,OACjBsrB,UAAW,CAAEphB,GAAI7R,EAASgzB,WAAWnhB,GAAI2B,KAAMxT,EAASgzB,WAAWxf,MACnEmZ,YAAa,IAAIvwB,KAAK4D,EAAS8yB,cAC/BxH,YAAa,IAAIlvB,KAAK4D,EAAS+yB,cAC/BuP,cAAe,IAAIlmC,KAAK4D,EAASuiC,mBAGjCgjB,EAAkB,CAClB,IAAM/iB,EAAe+iB,EAAiBr2B,SAASn0B,MAAM,OACrD,EAAKuF,SAAS,CAAC4sB,UAAW,CACtBgC,SAAU,CAAEzwB,MAAO+jC,EAAa,GAAIr/B,MAAOq/B,EAAa,IACxDnT,UAAWk2B,EAAiBp2B,gBAAgBhvB,IAAI,SAAAivB,GAC5C,MAAO,CACHG,UAAW,CAAE9wB,MAAO2wB,EAAUoN,KAAMr5B,MAAOisB,EAAU5b,MACrDgc,QAASJ,EAAUI,QACnBsG,UAAW1G,EAAUK,WACrBmF,QAASxF,EAAUM,SACnBC,QAASP,EAAUO,QAAQxvB,IAAI,SAAAkwB,GAC3B,MAAO,CACHxe,GAAIwe,EAAOxe,GACX2B,KAAM6c,EAAO7c,KACboc,eAAgBS,EAAOT,eACvBC,IAAKQ,EAAOR,IACZkG,WAAY1F,EAAOP,aACnBN,QAASa,EAAOb,WAGxBO,WAAYX,EAAUW,WAAW5vB,IAAI,SAAA6vB,GACjC,MAAO,CACHC,QAAS,CAAExxB,MAAOuxB,EAAUwM,KAAMr5B,MAAO6sB,EAAUxc,MACnD+c,OAAQP,EAAUM,KAClBF,OAAQhuB,SAAS4tB,EAAUI,QAC3B/Z,MAAO2Z,EAAU3Z,MACjBqa,eAAgBV,EAAUS,gBAC1BG,kBAAmBZ,EAAUW,4BAQrD,GAAI60B,EAAoB,CACpB,IAAMhjB,EAAe+iB,EAAiBr2B,SAASn0B,MAAM,OACrD,EAAKuF,SAAS,CAAC4sB,UAAW,CACtBgC,SAAU,CAAEzwB,MAAO+jC,EAAa,GAAIr/B,MAAOq/B,EAAa,IACxDnT,UAAWk2B,EAAiBp2B,gBAAgBhvB,IAAI,SAAAivB,GAC5C,MAAO,CACHG,UAAW,CAAE9wB,MAAO2wB,EAAUoN,KAAMr5B,MAAOisB,EAAU5b,MACrDgc,QAASJ,EAAUI,QACnBsG,UAAW1G,EAAUK,WACrBmF,QAASxF,EAAUM,SACnBC,QAASP,EAAUO,QAAQxvB,IAAI,SAAAkwB,GAC3B,MAAO,CACHxe,GAAIwe,EAAOxe,GACX2B,KAAM6c,EAAO7c,KACboc,eAAgBS,EAAOT,eACvBC,IAAKQ,EAAOR,IACZkG,WAAY1F,EAAOP,aACnBN,QAASa,EAAOb,WAGxBO,WAAYX,EAAUW,WAAW5vB,IAAI,SAAA6vB,GACjC,MAAO,CACHC,QAAS,CAAExxB,MAAOuxB,EAAUwM,KAAMr5B,MAAO6sB,EAAUxc,MACnD+c,OAAQP,EAAUM,KAClBF,OAAQhuB,SAAS4tB,EAAUI,QAC3B/Z,MAAO2Z,EAAU3Z,MACjBqa,eAAgBV,EAAUS,gBAC1BG,kBAAmBZ,EAAUW,8BAQzD,SAACjyB,GACGuB,QAAQC,IAAIxB,OAnH5B,sDAwHQ,IAAIm3B,EAAQ,EAUZ,OARIt3B,KAAKmB,MAAMwtB,WACX3uB,KAAKmB,MAAMwtB,UAAUmC,UAAUlvB,IAAI,SAAAivB,GAAS,OACxCA,EAAUW,WAAW5vB,IAAI,SAAA6vB,GAAS,OAC9B6F,GAAS7F,EAAUI,WAKxByF,IAlIf,+BAqI2B,IAAD,OAClB,OACI,uBAAK/2B,UAAU,wBACX,uBAAKG,MAAO,CAACmV,MAAO,QAASpG,UAAW,QAASjF,SAAU,SACvD,gBAAC,KAAD,CACIzE,KAAM+/C,IACNhgD,QAAS,WACL,EAAKhG,MAAMonD,2BAGtBlnD,KAAKmB,MAAMgtB,OACRnuB,KAAKmnD,iBAAiBnnD,KAAKmB,MAAMgtB,QACjC,QAjJpB,uCAsJqBA,GACb,OACI,gCACA,uBAAK5tB,UAAU,gBACX,uBAAKA,UAAU,YAAY,kBAC3B,uBAAKA,UAAU,QAAQ4tB,EAAO/kB,OAAS,MAAQ+kB,EAAOoC,QAAU,2BAEpE,uBAAKhwB,UAAU,eAIX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,cAAcmY,GAAI,GACnC,uBAAKnY,UAAU,cAAf,eACA,uBAAKA,UAAU,cAAc4tB,EAAO1uB,aAExC,gBAAC+Y,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,cAAcmY,GAAI,GACnC,uBAAKnY,UAAU,cAAf,iBACA,uBAAKA,UAAU,cAAc4tB,EAAOzuB,eAExC,gBAAC8Y,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,cAAcmY,GAAI,GACnC,uBAAKnY,UAAU,cAAf,gBACA,uBAAKA,UAAU,cAAc4tB,EAAOc,gBAExC,gBAACzW,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,cAAcmY,GAAI,GACnC,uBAAKnY,UAAU,cAAf,wBACA,uBAAKA,UAAU,cAAc4tB,EAAOY,gBAExC,gBAACvW,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,cAAcmY,GAAI,GACnC,uBAAKnY,UAAU,cAAf,iBACA,uBAAKA,UAAU,cAAc,QAAe4tB,EAAOgB,aAAe,MAEtE,gBAAC3W,EAAA,EAAD,CAAMhE,MAAI,EAACjU,UAAU,cAAcmY,GAAI,GACnC,uBAAKnY,UAAU,cAAf,kBACA,uBAAKA,UAAU,cAAc4tB,EAAOH,aAG5C,uBAAKztB,UAAU,eACX,uBAAKA,UAAU,cAAf,eACA,uBAAKA,UAAU,cAAc4tB,EAAOsC,MAAMxb,OAE9C,uBAAK1U,UAAU,eACX,uBAAKA,UAAU,cAAf,+BACCP,KAAKmB,MAAMwtB,UACR,gBAACnW,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,EAAGnP,UAAU,eACjCP,KAAKmB,MAAMwtB,UAAUmC,UAAUlvB,IAAI,SAACivB,EAAW1xB,GAC5C,OACI,gCACA,gBAACqZ,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAInY,UAAU,YACvBpB,EAAQ,EAAK,KACd0xB,EAAUG,UAAU9wB,MAAQ,MAC5B2wB,EAAUG,UAAUpsB,OAExBisB,EAAUW,WAAW5vB,IAAI,SAAC6vB,EAAW21B,GAClC,OACI,gCACA,gBAAC5uC,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACf,gBAACF,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAInY,UAAU,eACvB6mD,EAAS,IAAI9pD,SAAS,IAAM,KAAOm0B,EAAUC,QAAQ9sB,cAS/E,KAEJ,uBAAKlE,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,YAAY,cAAgBnE,KAAe8vB,aAAalsB,KAAKqnD,iCAAiC,KAIjH,uBAAK9mD,UAAU,eACX,uBAAKA,UAAU,cAAf,cACA,uBAAKA,UAAU,cAAc4tB,EAAOuG,UAAUzf,OAElD,uBAAK1U,UAAU,eACX,uBAAKA,UAAU,cAAf,yBACA,uBAAKA,UAAU,cAAcnE,KAAegrC,cAAcjZ,EAAOC,eAErE,uBAAK7tB,UAAU,eACX,uBAAKA,UAAU,cAAf,8BACA,uBAAKA,UAAU,cAAcnE,KAAegrC,cAAcjZ,EAAOpB,eAErE,uBAAKxsB,UAAU,eACX,uBAAKA,UAAU,cAAf,gCACA,uBAAKA,UAAU,cAAc,sCAMrC,gBAAC,GAAD,CACYqE,MAAM,YACNkB,QAAS,oBAtPjC,GAAqC9E,a,6NCa9B,IAAMsmD,GAAb,YAOI,WAAYxnD,GAAa,IAAD,+BACpB,8CAAMA,KANV+rC,oBAKwB,IAJxBE,iBAIwB,IAHxBC,mBAGwB,IAFxBpvB,aAEwB,IA4GxB2qC,sBAAwB,WACpB,OACI,EAAK3qC,QACAkN,OAAO,SAAAqE,GAAM,OACa,IAAvB,EAAKhtB,MAAMovB,SACX8X,MAAM,EAAKlnC,MAAMovB,UACjBpC,EAAOoC,UAAY,EAAKpvB,MAAMovB,UACjCzG,OAAO,SAAAqE,GAAM,MACY,KAAtB,EAAKhtB,MAAMiI,QACX+kB,EAAO/kB,OACF7M,cACAqoB,SAAS,EAAKzjB,MAAMiI,OAAO7M,iBACnCutB,OAAO,SAAAqE,GAAM,MACc,KAAxB,EAAKhtB,MAAM2rB,UACXqB,EAAOrB,SACFvwB,cACAqoB,SAAS,EAAKzjB,MAAM2rB,SAASvwB,iBACrCutB,OAAO,SAAAqE,GAAM,MACa,KAAvB,EAAKhtB,MAAMqmD,SACXr5B,EAAOq5B,QACFjrD,cACAqoB,SAAS,EAAKzjB,MAAMqmD,QAAQjrD,iBACpCutB,OAAO,SAAAqE,GAAM,MACU,KAApB,EAAKhtB,MAAMV,MACX0tB,EAAO1tB,KACFlE,cACAqoB,SAAS,EAAKzjB,MAAMV,KAAKlE,iBACjCutB,OAAO,SAAAqE,GAAM,MACkB,KAA5B,EAAKhtB,MAAMzB,cACXyuB,EAAOzuB,aACFnD,cACAqoB,SAAS,EAAKzjB,MAAMzB,aAAanD,iBACzCutB,OAAO,SAAAqE,GAAM,MACY,KAAtB,EAAKhtB,MAAMsmD,QACXt5B,EAAOs5B,OAAO7iD,MACTrI,cACAqoB,SAAS,EAAKzjB,MAAMsmD,OAAOlrD,gBAChC4xB,EAAOs5B,OAAOvnD,MACT3D,cACAqoB,SAAS,EAAKzjB,MAAMsmD,OAAOlrD,iBACnCutB,OAAO,SAAAqE,GAAM,MACc,KAAxB,EAAKhtB,MAAMumD,UACXv5B,EAAOu5B,SACFnrD,cACAqoB,SAAS,EAAKzjB,MAAMumD,SAASnrD,iBACrCutB,OAAO,SAAAqE,GAAM,MACgB,KAA1B,EAAKhtB,MAAMwmD,YACXvrD,KAAeuvB,kBAAkBwC,EAAOw5B,YACnCprD,cACAqoB,SAAS,EAAKzjB,MAAMwmD,WAAWprD,kBA7J5B,EAmOxBmwB,eAAiB,SAACyB,EAA2BhvB,GACzC,IAAMyH,EAAmBzH,EAAQ,IAAM,EACZ,IAAnBgvB,EAAOoC,QAAgB,UAAY,UAEhB,IAAnBpC,EAAOoC,QAAgB,UAAY,UAGrCq3B,EACiB,IAAnBz5B,EAAOoC,QAAgB,UACJ,IAAnBpC,EAAOoC,QAAgB,UACJ,IAAnBpC,EAAOoC,QAAgB,UAAY,GAEvC,OACI,gBAAC1D,GAAA,EAAD,CACInsB,MAAO,CAACkG,gBAAiBA,GACzBd,QAAS,WACL,EAAK/D,SAAS,CAAC8lD,iBAAkB15B,EAAO7a,OAE5C,gBAACqZ,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,SAAUiW,YAAa,IACjD,uBACIzW,UAAU,cACVG,MAAO,CAACuG,QAAS,eAAgBL,gBAAiBghD,IACjDz5B,EAAOoC,UAGhB,gBAAC5D,GAAA,EAAD,KAAYwB,EAAO/kB,QACnB,gBAACujB,GAAA,EAAD,KAAYwB,EAAOrB,UACnB,gBAACH,GAAA,EAAD,KAAYwB,EAAOq5B,SACnB,gBAAC76B,GAAA,EAAD,KAAYwB,EAAO1tB,MACnB,gBAACksB,GAAA,EAAD,KAAYwB,EAAOzuB,cACnB,gBAACitB,GAAA,EAAD,KACI,uBAAKpsB,UAAU,QAAQ4tB,EAAOs5B,OAAO7iD,OACrC,uBAAKrE,UAAU,aAAaG,MAAO,CAAC8J,SAAU,QACzC2jB,EAAOs5B,OAAOvnD,QAGvB,gBAACysB,GAAA,EAAD,KAAYwB,EAAOu5B,UACnB,gBAAC/6B,GAAA,EAAD,KAAYvwB,KAAegrC,cAAcjZ,EAAOw5B,eArQxD,EAAK9b,eAAiB,CAClB,CAAE3rC,MAAO,IAAK0E,MAAO,IACrB,CAAE1E,MAAO,IAAK0E,MAAO,QACrB,CAAE1E,MAAO,IAAK0E,MAAO,OACrB,CAAE1E,MAAO,IAAK0E,MAAO,QACrB,CAAE1E,MAAO,IAAK0E,MAAO,UAGzB,EAAKmnC,YAAc,CACf,CAAE7rC,MAAO,IAAK0E,MAAO,IACrB,CAAE1E,MAAO,IAAK0E,MAAO,aACrB,CAAE1E,MAAO,IAAK0E,MAAO,YAGzB,EAAKonC,cAAgB,CACjB,CAAE9rC,MAAO,IAAK0E,MAAO,IACrB,CAAE1E,MAAO,IAAK0E,MAAO,wBACrB,CAAE1E,MAAO,IAAK0E,MAAO,aACrB,CAAE1E,MAAO,IAAK0E,MAAO,kBACrB,CAAE1E,MAAO,IAAK0E,MAAO,iBAGzB,EAAKzD,MAAQ,CACTovB,QAAS,EACTnnB,OAAQ,GACR0jB,SAAU,GACV06B,QAAS,GACT/mD,KAAM,GACNf,aAAc,GACd+nD,OAAQ,GACRC,SAAU,GACVC,WAAY,GACZG,mBAAmB,EACnBD,sBAAkBvnD,GAGtB,EAAKsc,QAAU,GAvCK,EAP5B,mFAiDyB,IAAD,OACV2oB,EAAWvlC,KAAKF,MAAM0B,UAAYxB,KAAKF,MAAMyB,SAEnDF,KAAIC,IAAI,wBACJ,SAACsb,GACG,IAAM2P,EAAgB3P,EAAQkN,OAAO,SAAAqE,GACjC,OACIA,EAAO4G,WAAa5G,EAAO4G,UAAUr4B,OAAS,EAAIyxB,EAAO4G,YAAcwQ,KACvEpX,EAAOkH,WAAalH,EAAOkH,UAAU34B,OAAS,IAAIyxB,EAAOkH,YAAckQ,IAG3EhZ,IACAA,EAAc3qB,IAAI,SAAAgrB,GACd6Y,EAAyB7Y,KAE7B,EAAK7qB,SAAS,CAAC+lD,mBAAmB,MAG1C,SAAC3nD,GACGuB,QAAQC,IAAIxB,KAGhB,IAAMslC,EAA2B,SAACtX,GAC9BnB,GAAa1rB,IAAI,qBACb,SAACokC,GACG,IAAMC,EAAcD,EAAMnxB,KAAK,SAAAqxB,GAAQ,OAAIA,EAASC,UAAY1X,EAAOmG,kBACnEqR,IACA,EAAK/oB,QAAQlO,KAAK,CACd4E,GAAI6a,EAAOrsB,IACXgrB,SACI1wB,KAAe0pC,qBACX3X,EAAOiC,gBAAgBC,YACvBlC,EAAOiC,gBAAgBE,cACvBqV,EAAYI,YAEpBxV,QACuC,QAAnCpC,EAAOiC,gBAAgBG,QAAoB,EACR,WAAnCpC,EAAOiC,gBAAgBG,QAAuB,EACX,SAAnCpC,EAAOiC,gBAAgBG,QAAqB,EAAI,EACpDnnB,OAAQ+kB,EAAO/kB,OACfo+C,QAASr5B,EAAOa,aAChBvuB,KAAM0tB,EAAOiC,gBAAgBC,YAC7B3wB,aAAcyuB,EAAOiC,gBAAgBE,cACrCm3B,OAAQ,CACJvnD,MAAOiuB,EAAOe,cAActyB,cAC5BgI,MACIupB,EAAOiB,YAAcjB,EAAOiB,YAC5BjB,EAAOmB,iBAAmBnB,EAAOmB,iBACjCnB,EAAOoB,OAASpB,EAAOoB,OACvBpB,EAAOsB,cAAgBtB,EAAOsB,cAAgB,IAGtDi4B,SAAUv5B,EAAOiC,gBAAgBI,UACjCm3B,WAAY,IAAI9pD,KAAKswB,EAAOqG,gBAEhC,EAAKzyB,SAAS,CAAC+lD,mBAAmB,MAG1C,SAAC3nD,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CAAC+lD,mBAAmB,SA7G1D,kCAwKgBnW,EAAkBiU,GAC1B5lD,KAAK4c,QAAQinC,KAAK,SAAC90C,EAAsBtD,GAAvB,OACbsD,EAAE4iC,GAAUr0C,WAAWf,cAAgBkP,EAAEkmC,GAAUr0C,WAAWf,cAC1DqpD,EAAQ,GAAK,EAAMA,GAAS,EAAI,MA3KjD,+BA+K2B,IAAD,OAClB,OACI,uBAAKrlD,UAAU,WACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,YAAf,kBACA,uBAAKA,UAAU,cAAcG,MAAO,CAAC+wC,UAAW,SAC3CzxC,KAAKmB,MAAM2mD,kBACR,gBAACvkD,GAAA,EAAD,CACIhD,UAAU,0BACV2D,KAAMlE,KAAKunD,wBACX1iD,aAAc,kBAAM,EAAK2nB,qBACzB1nB,UAAW,SAAC2nB,EAActtB,GAAf,OACP,EAAKutB,eAAeD,EAASttB,IACjCoG,aAAc,SAACD,GAAD,gBACPA,EAAKE,KADE,YACMF,EAAKG,GADX,mBACwBH,EAAKF,MAD7B,aAEdM,iBAAiB,OACjB1B,mBAAoB,CAAC,GAAI,GAAI,MAEjC,gBAAC,GAAD,CAAS1B,OAAO,WAKvBtC,KAAKmB,MAAM0mD,iBACR,gBAAC,GAAD,CACId,SAAU/mD,KAAKmB,MAAM0mD,iBACrBX,qBAAsB,WAClB,EAAKnlD,SAAS,CAAC8lD,sBAAkBvnD,OAEzC,KACJ,uBAAKC,UAAU,eA7M/B,0CAuNQ,OACI,gCACCP,KAAK0xC,mBAAmB,UAAW,WACnC1xC,KAAK0xC,mBAAmB,SAAU,UAClC1xC,KAAK0xC,mBAAmB,WAAY,aACpC1xC,KAAK0xC,mBAAmB,UAAW,WACnC1xC,KAAK0xC,mBAAmB,OAAQ,QAChC1xC,KAAK0xC,mBAAmB,eAAgB,iBACxC1xC,KAAK0xC,mBAAmB,SAAU,UAClC1xC,KAAK0xC,mBAAmB,WAAY,YACpC1xC,KAAK0xC,mBAAmB,aAAc,kBAjOnD,yCAsRuBC,EAAkBC,GAAkC,IAAD,OAClE,OACI,gBAACjlB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,UACzB,wBAAMpb,UAAU,YAAYqxC,GAC5B,uBAAKlxC,MAAO,CAACmV,MAAO,UAChB,gBAAC,KAAD,CACI9P,KAAM8rC,IACN/rC,QAAS,WACL,EAAKiiD,YAAYpW,GAAU,GAC3B,EAAK5vC,SAAS,CAAC+lD,mBAAmB,QAG9C,gBAACjoD,GAAA,EAAD,CACIK,MAAOF,KAAKmB,MAAMwwC,GAClBhxC,SAAU,SAACT,GACP,EAAK6B,SAAS,SAAA6kD,GAAS,O,wVAAA,IAASA,EAAT,gBAAqBjV,EAAWzxC,cArS/E,GAA0Cc,a,uOCRnC,IAAMgnD,GAAb,YAII,WAAYloD,GAAgB,IAAD,+BACvB,8CAAMA,KAHVqrB,cAE2B,IAkD3ByZ,aAAe,SAACI,EAAaC,GAkBzB,OAjBcD,EAAY1c,OAAQ,SAAC7a,EAAQy3B,GAcvC,OAbAA,EAAOt0B,SAAShP,IAAK,SAACujC,GACtB,IAAIC,EAAaH,EAAW1wB,KAAM,SAAC8wB,GAAD,OAAeF,IAAUE,EAAUvjC,MAErE,GAAIsjC,EAAY,CACZ,IAAID,EAAQ79B,OAAO+E,OAAO,GAAI+4B,GAE9BD,EAAK,YAAkBD,EAAOjwB,KAC9BkwB,EAAK,YAAkBD,EAAOjH,KAC9BkH,EAAK,UAAe,EACpB13B,EAAOiB,KAAKy2B,MAIT13B,GACR,IAAI7B,QAlEgB,EAuE3Bq8C,wBAA0B,WACtB,OACI,EAAK98B,SACArB,OAAO,SAAAjoB,GAAO,MACoB,KAA/B,EAAKV,MAAM+mD,iBACXrmD,EAAQgjC,SAAStoC,cAAcqoB,SAAS,EAAKzjB,MAAM+mD,gBAAgB3rD,iBACtEutB,OAAO,SAAAjoB,GAAO,MACgB,KAA3B,EAAKV,MAAMgnD,aACXtmD,EAAQoT,KAAK1Y,cAAcqoB,SAAS,EAAKzjB,MAAMgnD,YAAY5rD,iBAC9DutB,OAAO,SAAAjoB,GAAO,MACc,KAAzB,EAAKV,MAAMoqB,WACX1pB,EAAQ0pB,UAAUhvB,cAAcqoB,SAAS,EAAKzjB,MAAMoqB,UAAUhvB,iBACjEutB,OAAO,SAAAjoB,GAAO,MACU,KAArB,EAAKV,MAAMmqB,OACXzpB,EAAQypB,MAAM/uB,cAAcqoB,SAAS,EAAKzjB,MAAMmqB,MAAM/uB,kBAlFlE,EAAK4E,MAAQ,CACT+mD,gBAAiB,GACjBC,YAAa,GACb58B,UAAW,GACXD,MAAO,GACP88B,oBAAoB,GAGxB,EAAKj9B,SAAW,GAXO,EAJ/B,mFAmBQnrB,KAAKqoD,qBAnBb,yCAsB8B,IAAD,OACrBhnD,KAAIC,IAAJ,gCAAiCtB,KAAKF,MAAMyB,SAA5C,aACI,SAACE,GACGC,QAAQC,IAAIF,GACZ,EAAK0pB,SAAW,EAAKyZ,aACbnjC,EAASqoB,OAAO,SAAAjoB,GAAO,OAAqB,GAAjBA,EAAQu6B,QACnC36B,EAASqoB,OAAO,SAAAjoB,GAAO,OAAqB,GAAjBA,EAAQu6B,SACrCx6B,IAAI,SAAAC,GACF,MAAO,CACHgjC,SAAUhjC,EAAQijC,YAClB7vB,KAAMpT,EAAQoT,KACdsW,UAAY1pB,EAAQqpB,OAAOxuB,OAAS,EAAImF,EAAQqpB,OAAO,GAAGzqB,KAAO,OACjE6qB,MAAQzpB,EAAQqpB,OAAOxuB,OAAS,EAC5BmF,EAAQqpB,OAAO,GAAGI,MAAQ,IAAMzpB,EAAQqpB,OAAO,GAAG6Z,WAClD,SAGhB,EAAKhjC,SAAS,CAACqmD,oBAAoB,IAGnC1mD,QAAQC,IACJ,EAAKijC,aACDnjC,EAASqoB,OAAO,SAAAjoB,GAAO,OAAqB,GAAjBA,EAAQu6B,QACnC36B,EAASqoB,OAAO,SAAAjoB,GAAO,OAAqB,GAAjBA,EAAQu6B,WAI/C,SAACj8B,GACGuB,QAAQC,IAAIxB,OAlD5B,mCA6FiBwxC,EAAkBiU,GAC3B5lD,KAAKmrB,SAAS04B,KAAK,SAAC90C,EAAuBtD,GAAxB,OACdsD,EAAE4iC,IAAalmC,EAAEkmC,IAAa5iC,EAAE4iC,GAAUr0C,WAAWf,cAAgBkP,EAAEkmC,GAAUr0C,WAAWf,cACxFqpD,EAAQ,GAAK,EAAMA,GAAS,EAAI,MAhGjD,+BAqGQ,OACI,uBAAKrlD,UAAU,WAEX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,YAAf,kBACA,uBAAKA,UAAU,gBACf,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAACtG,UAAU,cAAcmP,QAAS,GAC5C1P,KAAK8zC,gBAEL9zC,KAAKmB,MAAMinD,mBACRpoD,KAAKsoD,qBAEL,gBAAC9vC,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACX,gBAAC,GAAD,CAASpW,OAAO,YAK5B,uBAAK/B,UAAU,eAvH/B,sCA4HkC,IAAD,OAIzB,OACI,gBAACiY,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,EAAGhY,MAJG,CACrBszC,YAAa,wBAIL,uBAAKzzC,UAAU,cAAf,eACA,uBAAKA,UAAU,YAAY,cAC/B,uBAAKA,UAAU,eACX,uBAAKA,UAAU,cAAf,mBAEJ,uBAAKA,UAAU,eACX,uBAAKA,UAAU,cAAf,YACA,uBAAKA,UAAU,eACX,gBAAC,GAAD,CACIqE,MAAM,MACNkB,QAAS,WACL,EAAK/D,SAAS,CAACqmD,oBAAoB,IACnC,EAAKC,uBAGjB,uBAAK9nD,UAAU,eACX,gBAAC,GAAD,CACIqE,MAAM,MACNkB,QAAS,WACL,EAAK/D,SAAS,CAACqmD,oBAAoB,IACnC,EAAKC,uBAGjB,uBAAK9nD,UAAU,eACX,gBAAC,GAAD,CACIqE,MAAM,YACNkB,QAAS,WACL,EAAK/D,SAAS,CAACqmD,oBAAoB,IACnC,EAAKC,uBAGjB,uBAAK9nD,UAAU,eACX,gBAAC,GAAD,CACIqE,MAAM,aACNkB,QAAS,WACL,EAAK/D,SAAS,CAACqmD,oBAAoB,IACnC,EAAKC,uBAGjB,uBAAK9nD,UAAU,eACX,gBAAC,GAAD,CACIqE,MAAM,YACNkB,QAAS,WACL,EAAK/D,SAAS,CAACqmD,oBAAoB,IACnC,EAAKC,wBAKrB,uBAAK9nD,UAAU,eACX,uBAAKA,UAAU,uBAAf,cApLpB,2CA2LuC,IAAD,OAE9B,OACI,gBAACiY,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACX,uBAAKnY,UAAU,eACX,gBAACgD,GAAA,EAAD,CACIW,KAAMlE,KAAKioD,0BACXpjD,aAAc,kBAAM,EAAK2nB,qBACzB1nB,UAAW,SAAC2nB,EAActtB,GAAf,OACP,EAAKutB,eAAeD,EAASttB,IACjCoG,aAAc,SAACD,GAAD,gBACPA,EAAKE,KADE,YACMF,EAAKG,GADX,mBACwBH,EAAKF,MAD7B,cAEdM,iBAAiB,OACjB1B,mBAAoB,CAAC,GAAI,GAAI,UAxMrD,0CAiNQ,OACI,gCACChE,KAAK0xC,mBAAmB,kBAAmB,mBAAoB,SAC/D1xC,KAAK0xC,mBAAmB,cAAe,UAAW,SAClD1xC,KAAK0xC,mBAAmB,YAAa,aAAc,SACnD1xC,KAAK0xC,mBAAmB,QAAS,QAAS,YAtNvD,qCA2NmB7vC,EAA6B1C,GACxC,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,KAAY9qB,EAAQgjC,UACpB,gBAAClY,GAAA,EAAD,KAAY9qB,EAAQoT,MACpB,gBAAC0X,GAAA,EAAD,KAAY9qB,EAAQ0pB,WACpB,gBAACoB,GAAA,EAAD,KAAY9qB,EAAQypB,UAlOpC,yCAuOuBqmB,EAAkBC,EAAoBvvC,GAA6B,IAAD,OACjF,OACI,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAAC2B,MAAOA,IACtB,wBAAM9B,UAAU,YAAYqxC,GAC5B,uBAAKlxC,MAAO,CAACmV,MAAO,UAChB,gBAAC,KAAD,CACI9P,KAAM8rC,IACN/rC,QAAS,WACL,EAAKyiD,aAAa5W,GAAU,GAC5B,EAAK5vC,SAAS,CAACqmD,oBAAoB,QAG/C,gBAACvoD,GAAA,EAAD,CACIK,MAAOF,KAAKmB,MAAMwwC,GAClBhxC,SAAU,SAACT,GACP,EAAK6B,SAAS,SAAA6kD,GAAS,O,wVAAA,IAASA,EAAT,gBAAqBjV,EAAWzxC,cAtP/E,GAAyCc,a,wjBC0BlC,IAAMwnD,GAAb,YAiCI,WAAY1oD,GAAgB,IAAD,+BACvB,8CAAMA,KA9BV2oD,cAAgB,CACZ,CAAEvoD,MAAO,EAAG0E,MAAO,kBACnB,CAAE1E,MAAO,EAAG0E,MAAO,kBACnB,CAAE1E,MAAO,EAAG0E,MAAO,YACnB,CAAE1E,MAAO,EAAG0E,MAAO,mBAEnB,CAAE1E,MAAO,EAAG0E,MAAO,eACnB,CAAE1E,MAAO,EAAG0E,MAAO,WACnB,CAAE1E,MAAO,EAAG0E,MAAO,aAqBI,EAlB3B8jD,cAAgB,CACZ,CAAExoD,MAAO,EAAG0E,MAAO,kBACnB,CAAE1E,MAAO,EAAG0E,MAAO,mBAgBI,EAN3B8kC,gBAM2B,IAL3BT,cAK2B,IAJ3BH,gBAI2B,IAH3B1X,aAG2B,IAF3B8a,YAE2B,IA0K3Byc,YAAc,SAACC,GACX,IAAIC,GAAW,EAET7rB,EAAQ,IAAI8rB,SAClB,EAAK3nD,MAAMgtB,OAAO2V,gBAAgB1Y,QAAQ,SAAA8E,GACjCA,EAAI,QACL8M,EAAM+rB,OAAN,sBAAoC74B,GACpC24B,GAAW,KAInB,EAAK9mD,SAAS,CAACinD,UAAU,IAErBH,EACAxnD,KAAI4nD,aAAa,gCAAiCjsB,EAC9C,SAACksB,GACGN,EAAWM,IAEf,SAAC/oD,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CACVinD,UAAU,EACVG,gBAAiB,8BAI7BP,EAAW,KApMQ,EAwM3BQ,aAAe,WAEX,EAAKrnD,SAAS,CAACgnC,oBAAoB,IACnC,IAAM5a,EAAS,EAAKhtB,MAAMgtB,OACpBO,EAAc,EAAKvtB,MAAMutB,YACzBC,EAAY,EAAKxtB,MAAMwtB,UACvBE,EAAe,EAAK1tB,MAAM0tB,aAC1BD,EAAY,EAAKztB,MAAMytB,WAExB,EAAKztB,MAAM6oB,QAAW,EAAK7oB,MAAMsqB,UAGZ,cAAtB0C,EAAO1uB,YAAsD,cAAxB0uB,EAAOzuB,cACT,KAA/BgvB,EAAYiC,SAASzwB,OACW,KAAhCwuB,EAAYkE,iBACe,IAA3BlE,EAAYyE,YACiB,KAA7BzE,EAAYoD,OAAO5xB,OACoB,KAAvCwuB,EAAY2E,iBAAiBnzB,OACJ,KAAzBwuB,EAAYuE,YAKpB,EAAKlxB,SAAS,CAACinD,UAAU,IAEzB,EAAKL,YAAY,SAACO,GACd,IAAM//B,EAAUqF,GAAS66B,qBACrBl7B,GAEC+6B,EAAe/oD,OAAS+oD,EAAexsD,OAAS,EAC7C,EAAKyE,MAAMgtB,OAAO2V,gBACbha,OAAO,SAAAoG,GAAI,OAAIA,EAAI,QACnBiU,OAAO+kB,GAEZ,EAAK/nD,MAAMgtB,OAAO2V,gBAEtB,EAAK3iC,MAAM6oB,OACX,EAAK7oB,MAAMsqB,OACXiD,EACAC,EACAC,EACAC,GACJxtB,KAAIioD,KAAK,wBAAyBjmD,KAAKC,UAAU6lB,GAC7C,SAACogC,GACG7nD,QAAQC,IAAI4nD,GACRA,EAAkB,KAClB7nD,QAAQC,IAAI,cAAc4nD,EAAkB,IAC5C,EAAKC,yBAAyBD,EAAkB,IAAS,EAAKpoD,MAAMgtB,SAEpE,EAAKpsB,SAAS,CACVinD,UAAU,EACVG,gBAAiB,8BAI7B,SAAChpD,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CACVinD,UAAU,EACVG,gBAAiB,mCAnQV,EAyQ3BK,yBAA2B,SAACzC,EAAkB54B,GAC1C,IAAIs7B,GAAe,EACO,cAAtBt7B,EAAO1uB,aACPgqD,GAAa,GAEjB,IACItmD,EAAO,CACP,QAAY,mCACZ,QAAU,mCACV,UAAa4jD,EACb,oBAAuB,EACvB,aAAe0C,GAEnB/nD,QAAQC,IAAI,QAASwB,GAErB6pB,GAAas8B,KAAK,QAASnmD,EACvB,SAACumD,GACOA,EAAa,SACbC,EACID,EAAa,QACbA,EAAa,WAfZ,qCAoBb,SAACvpD,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CACVinD,UAAU,EACVG,gBAAiB,+BAK7B,IAAMQ,EAA6B,SAACC,EAAgBjqD,EAAekqD,GAC/D78B,GAAa88B,IAAb,gBAA0BF,EAA1B,4BAAoDC,GAAa1mD,EAC7D,SAAC4mD,GACGroD,QAAQC,IAAI,qBAAsBooD,GAClCC,EAAqBJ,EAAQjqD,IAEjC,SAACQ,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CACVinD,UAAU,EACVG,gBAAiB,gCAK3Ba,EAAuB,SAACJ,EAAgBjqD,GAC1CqtB,GAAa88B,IAAb,gBAA0BF,EAA1B,aAA6CzmD,EACzC,SAAC8mD,GACGvoD,QAAQC,IAAI,0BAA2BsoD,GACvCC,EAAaN,EAAQjqD,IAEzB,SAACQ,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CACVinD,UAAU,EACVG,gBAAiB,gCAK3Be,EAAe,SAACN,EAAgBjqD,GAClC0B,KAAI8oD,MAAJ,gCAAmCpD,GAAY,CAAEzyB,gBAAiBs1B,GAC9D,SAACQ,GACG1oD,QAAQC,IAAI,mBAAoByoD,GAChCC,EAAmBT,EAAQjqD,IAE/B,SAACQ,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CACVinD,UAAU,EACVG,gBAAiB,gCAK3BkB,EAAqB,SAACT,EAAgBjqD,GACxC,IAAMmtB,EAAW1wB,KAAe0pC,qBAAqB3X,EAAO1uB,WAAY0uB,EAAOzuB,aAAcC,GACvF8C,EACoB,YAAtB0rB,EAAO1uB,YAAoD,cAAxB0uB,EAAOzuB,aAA1C,wCACqCkqD,EADrC,YAC+C98B,EAD/C,YAC2Di6B,GAD3D,yCAGsC6C,EAHtC,YAGgD98B,EAHhD,YAG4Di6B,GAEhE,EAAKjnD,MAAMmmB,QAAQvX,KAAKjM,GACxBmF,OAAOC,SAAS2B,SAChB,EAAKzH,SAAS,CAACinD,UAAU,MAlWN,EAsW3BsB,WAAa,WACT,EAAK3B,YAAY,SAACO,GACdxnD,QAAQC,IAAIunD,GACZ,IAAM//B,EAAU,CACZyL,QAAS3uB,aAAY,QACrB4uB,OAAQ,gBACR5yB,QAAS,gBACT6yB,UAAW,IAAIj3B,KACfoF,KAAM,CACF+mB,OAAQ,EAAK7oB,MAAM6oB,OACnBmE,OAAO,MACA,EAAKhtB,MAAMgtB,OADZ,CAEF2V,iBAAkBolB,EAAe/oD,OAAS+oD,EAAexsD,OAAS,EAC9D,EAAKyE,MAAMgtB,OAAO2V,gBACbha,OAAO,SAAAoG,GAAI,OAAIA,EAAI,QACnBiU,OAAO+kB,GAEZ,EAAK/nD,MAAMgtB,OAAO2V,kBAG1BnV,UAAW,EAAKxtB,MAAMwtB,UACtBD,YAAa,EAAKvtB,MAAMutB,YACxBG,aAAc,EAAK1tB,MAAMutB,YACzBE,UAAW,EAAKztB,MAAMytB,YAG9BltB,QAAQC,IAAI,gBAAiBwnB,GAC7B9nB,KAAIioD,KAAK,MAAOjmD,KAAKC,UAAU6lB,GAC3B,SAAC1nB,GACGC,QAAQC,IAAIF,GACRA,EAASK,IACT,EAAKC,SAAS,CACVinD,UAAU,EACVG,gBAAiB,kBACjBzb,SAAU,IAAI7vC,OAGlB,EAAKkE,SAAS,CACVinD,UAAU,EACVG,gBAAiB,8BAI7B,SAAChpD,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CACVinD,UAAU,EACVG,gBAAiB,kCAlZjC,EAAKhoD,MAAQ,CACTopD,YAAa,EACbxhB,oBAAoB,EACpByhB,oBAAoB,EACpBxB,UAAU,EACVG,gBAAiB,KACjBsB,gBAAiB,EAEjBt8B,OAAQ,CACJc,cAAe,OACfF,cAAe,YACfI,aAAc,GACdE,WAAY,GACZ9E,WAAY,GACZiF,WAAY,GACZE,SAAU,CAAExvB,MAAO,GAAI0E,MAAO,IAC9B+qB,WAAY,GACZE,WAAY,GACZ7B,UAAW,GACXvuB,WAAY,GACZC,aAAc,GACd6wB,QAAS,OACTE,MAAO,CAAEnd,GAAI,GAAI2B,KAAM,IACvB+a,gBAAiB,GACjB8T,gBAAiB,GACjBhX,SAAU,GACVmK,SAAU,GACV7tB,OAAQ,OACRsrB,UAAW,CACPphB,GAAIrN,aAAY,QAChBgP,KAAK,GAAD,OAAKhP,aAAY,WAAjB,YAAmCA,aAAY,YAEvDmoB,YAAa,IAAIvwB,KACjBkvB,YAAa,IAAIlvB,KACjBkmC,cAAe,MAEnBpV,UAAW,CACPgC,SAAU,CAAEzwB,MAAO,GAAI0E,MAAO,IAC9BksB,UAAW,IAEfpC,YAAa,CACTiC,SAAU,CAAEzwB,MAAO,GAAI0E,MAAO,IAC9B8tB,aAAc,IAAI70B,KAClB+0B,gBAAiB,GACjBK,SAAU,GACVE,WAAY,EACZrB,OAAQ,CAAE5xB,MAAO,GAAI0E,MAAO,IAC5ByuB,iBAAkB,CAAEnzB,MAAO,GAAI0E,MAAO,IACtCitB,OAAQ,GAEZhD,aAAc,CACV8B,SAAU,CAAEzwB,MAAO,GAAI0E,MAAO,IAC9BisB,UAAW,CAAE3wB,MAAO,GAAI0E,MAAO,IAC/BktB,OAAQ,CAAE5xB,MAAO,GAAI0E,MAAO,IAC5BkT,MAAO,GACPua,kBAAmB,GACnBF,eAAgB,UAChBI,eAAgB,GAEpB3D,UAAW,IAGf,EAAKka,WAAa,GAClB,EAAKoD,OAAS,GACd,EAAK9a,QAAU,GACf,EAAK6X,SAAW,GAChB,EAAKS,WAAa,GArEK,EAjC/B,mFAyGyB,IAAD,OAChBroC,KAAIC,IAAI,aACJ,SAACG,GACG,EAAKqnC,WAAarnC,EAASG,IAAI,SAAA8tB,GAC3B,MAAO,CACHxvB,MAAOwvB,EAASi2B,YAChB/gD,MAAO8qB,EAASza,SAI5B,SAAC9U,GACGuB,QAAQC,IAAIxB,KAKpB,IAAMuqD,EAAiBzkD,aAAaC,QAAQ,eACvCwkD,GAgBD1qD,KAAK0pC,WAAarmC,KAAKsnD,MAAMD,GAC7BhpD,QAAQC,IAAI,wCAhBZN,KAAIC,IAAI,iCACJ,SAACG,GACG,EAAKioC,WAAajoC,EAASG,IAAI,SAAAovB,GAC3B,MAAO,CACH9wB,MAAO8wB,EAAU45B,UACjBhmD,MAAOosB,EAAU65B,2BAGzB5kD,aAAa6kD,QAAQ,cAAeznD,KAAKC,UAAU,EAAKomC,aACxD,EAAK3nC,SAAS,CAACyoD,oBAAoB,KAEvC,SAACrqD,GACGuB,QAAQC,IAAIxB,KASxB,IAAM4qD,EAAe9kD,aAAaC,QAAQ,aACrC6kD,GAeD/qD,KAAKipC,SAAW5lC,KAAKsnD,MAAMI,GAC3BrpD,QAAQC,IAAI,sCAfZN,KAAIC,IAAI,OACJ,SAACG,GACG,EAAKwnC,SAAWxnC,EAASG,IAAI,SAAA8vB,GACzB,MAAO,CACHxxB,MAAOwxB,EAAQuM,KAAK3gC,WACpBsH,MAAO8sB,EAAQ9sB,SAGvBqB,aAAa6kD,QAAQ,YAAaznD,KAAKC,UAAU,EAAK2lC,YAE1D,SAAC9oC,GACGuB,QAAQC,IAAIxB,KASxBkB,KAAIC,IAAI,UACJ,SAACG,GACG,EAAK2vB,QAAU3vB,EAASG,IAAI,SAAAkwB,GACxB,MAAO,CACH5xB,MAAO4xB,EAAOhwB,IACd8C,MAAQ,OAASktB,EAAOsD,WAAc,IAAMtD,EAAOoD,UACnD5B,OAAQ,CAACxB,EAAOrxB,UAI5B,SAACN,GACGuB,QAAQC,IAAIxB,KAGpBkB,KAAIC,IAAJ,6CAA8C2E,aAAY,QAA1D,kDACI,SAACxE,GACGC,QAAQspD,MAAMvpD,IACdA,EAAWA,EAASqoB,OAAO,SAAAtV,GAAI,MAAqB,kBAAjBA,EAAKvS,WAC3BvF,OAAS,GAClB,EAAKqF,SAAS,CACV2rC,SAAU,IAAI7vC,KAAK4D,EAAS,GAAGqzB,WAC/B9K,OAAQvoB,EAAS,GAAGwB,KAAK+mB,OACzBmE,OAAQ1sB,EAAS,GAAGwB,KAAKkrB,OACzBQ,UAAWltB,EAAS,GAAGwB,KAAK0rB,UAC5BD,YAAajtB,EAAS,GAAGwB,KAAKyrB,YAC9BG,aAAcptB,EAAS,GAAGwB,KAAKyrB,YAC/BE,UAAWntB,EAAS,GAAGwB,KAAK2rB,YAGpC,EAAK7sB,SAAS,CAAC0oD,gBAAiB,EAAKtpD,MAAMspD,gBAAkB,KAEjE,SAACtqD,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CAAC0oD,gBAAiB,EAAKtpD,MAAMspD,gBAAkB,QAvM7E,+BA4b2B,IAAD,OAElB,OACI,gCACA,gBAACjyC,EAAA,EAAD,CAAM3R,WAAS,EAACtG,UAAU,sBAErBP,KAAKmB,MAAMspD,kBAAoBjC,EAAiByC,mBAAqBjrD,KAAKmB,MAAM6nD,SAC7E,uBACItoD,MAAO,CACHkG,gBAAiB,YACjBL,OAAQ,IACRD,SAAU,QACVjE,MAAO,OACPC,OAAQ,SACZ,gBAAC,GAAD,CAASA,OAAO,QAAQ0D,KAAM,OAGjC,KAEL,gBAACklD,GAAA,EAAD,CACLC,aAAc,CAACC,SAAU,MAAMC,WAAY,SAC3C9xC,OAAMvZ,KAAKmB,MAAMgoD,gBACjBmC,iBAAkB,IAClBlzC,QAAS,WACI,EAAKrW,SAAS,CAAConD,gBAAiB,QAEpCvK,QAAS5+C,KAAKmB,MAAMgoD,kBAExB,gBAAC,GAAD,CACI19B,OAAQzrB,KAAKmB,MAAMsqB,OACnBzB,OAAQhqB,KAAKmB,MAAM6oB,OACnB8c,aAAa,SACbG,mBAAoBjnC,KAAKmB,MAAM4nC,mBAC/BxE,0BAA2B,SAACva,GACpBA,IAEIA,EAAO+B,UACoB,WAA3B/B,EAAO+B,SAAS3iB,QAEuC,cAAjC,EAAKjI,MAAMgtB,OAAO1uB,aACxC,EAAK0B,MAAMgtB,OAAO1uB,WAAa,GAC/B,EAAKsC,SAAS,CAACosB,OAAQ7mB,OAAO+E,OAAO,GAAI,EAAKlL,MAAMgtB,YAI5D,EAAKpsB,SAAS,CAACioB,OAAQA,KAE3Bwa,0BAA2B,SAAC/Y,GACxB,EAAK1pB,SAAS,CAAC0pB,OAAQA,OAG9BzrB,KAAKmB,MAAMsqB,OACR,gCACA,gBAAC,GAAD,CACIujB,QAAShvC,KAAKyoD,cACd7Z,YAAa5uC,KAAKmB,MAAMopD,YACxBxb,eAAgB,SAAC5vC,GACb,EAAK4C,SAAS,CAACwoD,YAAaprD,OAEpC,uBAAKoB,UAAS,sBAA4C,IAA3BP,KAAKmB,MAAMopD,YAAoB,QAAU,KACxC,IAA3BvqD,KAAKmB,MAAMopD,YACRvqD,KAAK+zC,oBACsB,IAA3B/zC,KAAKmB,MAAMopD,YACX,gBAAC,GAAD,CAAsB/oD,SAAUxB,KAAKmB,MAAMsqB,OAAOnY,GAAI2S,QAASjmB,KAAKF,MAAMmmB,UAC/C,IAA3BjmB,KAAKmB,MAAMopD,YACX,gBAAC,GAAD,CAAqBhpD,SAAUvB,KAAKmB,MAAMsqB,OAAOnY,KACtB,IAA3BtT,KAAKmB,MAAMopD,YACX,gBAAC,GAAD,CAAuB/oD,SAAUxB,KAAKmB,MAAMsqB,OAAOnY,KACxB,IAA3BtT,KAAKmB,MAAMopD,YACX,uBAAKhqD,UAAU,UAAf,SAC2B,IAA3BP,KAAKmB,MAAMopD,YACX,gBAAC,GAAD,MAC2B,IAA3BvqD,KAAKmB,MAAMopD,YACX,gBAAC,GAAD,CAAsB/oD,SAAUxB,KAAKmB,MAAMsqB,OAAO4B,qBACvB,IAA3BrtB,KAAKmB,MAAMopD,YACX,gBAACtpD,GAAA,EAAD,CAAsBO,SAAUxB,KAAKmB,MAAMsqB,OAAO4B,qBAClD,OAGRrtB,KAAKmB,MAAM6oB,OACX,gCACA,gBAAC,GAAD,CACIglB,QAAShvC,KAAK0oD,cACd9Z,YAAa5uC,KAAKmB,MAAMopD,YACxBxb,eAAgB,SAAC5vC,GACb,EAAK4C,SAAS,CAACwoD,YAAatrD,KAAKssD,IAAIpsD,EAAO,QAEpD,uBAAKoB,UAAS,sBAA4C,IAA3BP,KAAKmB,MAAMopD,YAAoB,QAAU,KACxC,IAA3BvqD,KAAKmB,MAAMopD,YACRvqD,KAAK+zC,oBACsB,IAA3B/zC,KAAKmB,MAAMopD,YACX,gBAAC,GAAD,CAAsBpJ,aAAcnhD,KAAKmB,MAAM6oB,OAAOzoB,SAAU0kB,QAASjmB,KAAKF,MAAMmmB,UACzD,IAA3BjmB,KAAKmB,MAAMopD,YACX,gBAAC,GAAD,CAAuB/oD,SAAWxB,KAAKmB,MAAM6oB,OAAOyB,QAAUzrB,KAAKmB,MAAM6oB,OAAOyB,OAAOnY,GAAKtT,KAAKmB,MAAM6oB,OAAOyB,OAAOnY,GAAK,KAC/F,IAA3BtT,KAAKmB,MAAMopD,YACX,uBAAKhqD,UAAU,UAAf,SAC2B,IAA3BP,KAAKmB,MAAMopD,YACX,gBAAC,GAAD,MAC2B,IAA3BvqD,KAAKmB,MAAMopD,YACX,uBAAKhqD,UAAU,UAAf,SAC2B,IAA3BP,KAAKmB,MAAMopD,YACX,uBAAKhqD,UAAU,UAAf,SACA,OAIR,uBAAKA,UAAU,qBACVP,KAAK+zC,sBAKlB,gBAAC,GAAD,CACIrG,SAAU1tC,KAAKmB,MAAMusC,SACrBD,aAAc,WACV,EAAK6c,cAETzc,eAAgB,WACZ,EAAKub,qBAljBzB,0CAwjBsC,IAAD,OAC7B,OACI,gCACA,gBAAC,GAAD,CACIp/B,OAAQhqB,KAAKmB,MAAM6oB,OACnByB,OAAQzrB,KAAKmB,MAAMsqB,OACnB0C,OAAQnuB,KAAKmB,MAAMgtB,OACnB2a,WAAY9oC,KAAK8oC,WACjBoD,OAAQlsC,KAAKksC,OACbnD,mBAAoB/oC,KAAKmB,MAAM4nC,mBAC/BoD,mBAAoB,WAChB,EAAKpqC,SAAS,CAACosB,OAAQ7mB,OAAO+E,OAAO,GAAI,EAAKlL,MAAMgtB,aAG1B,cAAjCnuB,KAAKmB,MAAMgtB,OAAO1uB,WAEoB,yBAAnCO,KAAKmB,MAAMgtB,OAAOzuB,aACd,gBAAC,GAAD,CACIivB,UAAW3uB,KAAKmB,MAAMwtB,UACtBma,WAAY9oC,KAAK8oC,WACjB1X,QAASpxB,KAAKoxB,QACdsY,WAAY1pC,KAAK0pC,WACjBT,SAAUjpC,KAAKipC,SACfF,mBAAoB/oC,KAAKmB,MAAM4nC,mBAC/Be,sBAAuB,WACnB,EAAK/nC,SAAS,CAAC4sB,UAAWrnB,OAAO+E,OAAO,GAAI,EAAKlL,MAAMwtB,gBAG5B,cAAnC3uB,KAAKmB,MAAMgtB,OAAOzuB,aAClB,gBAAC,GAAD,CACIgvB,YAAa1uB,KAAKmB,MAAMutB,YACxBoa,WAAY9oC,KAAK8oC,WACjB1X,QAASpxB,KAAKoxB,QACd6X,SAAUjpC,KAAK0pC,WACfX,mBAAoB/oC,KAAKmB,MAAM4nC,mBAC/BC,wBAAyB,WACrB,EAAKjnC,SAAS,CAAC2sB,YAAa,EAAKvtB,MAAMutB,iBAEZ,mBAAnC1uB,KAAKmB,MAAMgtB,OAAOzuB,aAClB,gBAAC,GAAD,CACIivB,UAAW3uB,KAAKmB,MAAMwtB,UACtBma,WAAY9oC,KAAK8oC,WACjB1X,QAASpxB,KAAKoxB,QACdsY,WAAY1pC,KAAK0pC,WACjBT,SAAUjpC,KAAKipC,SACfF,mBAAoB/oC,KAAKmB,MAAM4nC,mBAC/Be,sBAAuB,WACnB,EAAK/nC,SAAS,CAAC4sB,UAAW,EAAKxtB,MAAMwtB,eAGV,iBAAnC3uB,KAAKmB,MAAMgtB,OAAOzuB,aAClB,gBAAC,GAAD,CACImvB,aAAc7uB,KAAKmB,MAAM0tB,aACzBia,WAAY9oC,KAAK8oC,WACjB1X,QAASpxB,KAAKoxB,QACdsY,WAAY1pC,KAAK0pC,WACjBX,mBAAoB/oC,KAAKmB,MAAM4nC,mBAC/BkE,yBAA0B,WACtB,EAAKlrC,SAAS,CAAC8sB,aAAc,EAAK1tB,MAAM0tB,kBAEhD,KAE6B,YAAjC7uB,KAAKmB,MAAMgtB,OAAO1uB,WAClB,gBAAC,GAAD,CACImvB,UAAW5uB,KAAKmB,MAAMytB,UACtB+d,oBAAqB,WACjB,EAAK5qC,SAAS,CAAC6sB,UAAW,EAAKztB,MAAMytB,eAE7C,UA5nBhB,GAAsC5tB,aAAzBwnD,GAEFyC,kBAAoB,ECxBxB,IAAMO,GAAb,8MAEIC,0BAA4B,WACxB,IAAI7hB,EAAY,EAIhB,OAHA,EAAK9pC,MAAMm2B,eAAer0B,IAAI,SAAAs0B,GAC1B0T,GAAa1T,EAAc/C,WAAa+C,EAAcC,OAEnDyT,GAPf,EAUI8hB,sBAAwB,WACpB,IAAI9hB,EAAY,EAIhB,OAHA,EAAK9pC,MAAMw2B,WAAW10B,IAAI,SAAA20B,GACtBqT,GAAarT,EAAU1E,SAEpB+X,GAff,EAkBI+hB,sBAAwB,WACpB,IAAI/hB,EAAY,EAIhB,OAHA,EAAK9pC,MAAM0xB,WAAW5vB,IAAI,SAAA6vB,GACtBmY,GAAanY,EAAUI,SAEpB+X,GAvBf,EA0BIgiB,iBAAmB,WACf,IAAIhiB,EAAY,EAIhB,OAHA,EAAK9pC,MAAMuU,MAAMzS,IAAI,SAAA4S,GACjBo1B,GAAap1B,EAAKqd,SAEf+X,GA/Bf,0EAkC2B,IAAD,OAClB,OACI,uBAAKrpC,UAAU,WACX,uBAAKA,UAAU,YAAf,kBACCP,KAAK6rD,cAAc,UAAW,SAAU,EACrC,gBAACtoD,GAAA,EAAD,CACIhD,UAAU,eACV2D,KAAMlE,KAAKF,MAAMgzB,QACjBjuB,aAAc,WACV,OACI,gCACA,gBAAC8nB,GAAA,EAAD,gBACA,gBAACA,GAAA,EAAD,CAAWjsB,MAAO,CAAC2B,MAAO,UAA1B,cACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAASsB,MAAO,UAA9C,2BAIRyC,UAAW,SAACgxB,EAAoB32B,GAC5B,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,KAAYmJ,EAAO7E,SACnB,gBAACtE,GAAA,EAAD,KAAYvwB,KAAeuqD,mBAAmB7wB,EAAOl4B,OACrD,gBAAC+uB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,UAA9B,UAA4C3E,KAAe8vB,aAAa4J,EAAOE,cAAc,GAA7F,cAMnBh2B,KAAK6rD,cAAc,sBAAuB,OAAQ,EAC/C,gBAACtoD,GAAA,EAAD,CACIhD,UAAU,eACV2D,KAAMlE,KAAKF,MAAMm2B,eACjBpxB,aAAc,WACV,OACI,gCACA,gBAAC8nB,GAAA,EAAD,kBACA,gBAACA,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAASsB,MAAO,UAA9C,eACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAASsB,MAAO,UAA9C,kBAIRyC,UAAW,SAACoxB,EAAkC/2B,GAC1C,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,KAAYuJ,EAAcjD,UAC1B,gBAACtG,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,UAAWm1B,EAAcC,MACvD,gBAACxJ,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,UAA9B,UAA4C3E,KAAe8vB,aAAagK,EAAc/C,YAAY,GAAlG,aAIZnzB,KAAKyrD,6BAGZzrD,KAAK6rD,cAAc,YAAa,YAAa,EAC1C,gBAACtoD,GAAA,EAAD,CACIhD,UAAU,eACV2D,KAAMlE,KAAKF,MAAMgxB,UACjBjsB,aAAc,WACV,OACI,gCACA,gBAAC8nB,GAAA,EAAD,CAAWjsB,MAAO,CAAC2B,MAAO,UAA1B,aACA,gBAACsqB,GAAA,EAAD,gBACA,gBAACA,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,SAAUsB,MAAO,UAA/C,QACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,SAAUsB,MAAO,UAA/C,wBAIRyC,UAAW,SAAC+rB,EAA0B1xB,GAClC,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,eAAekE,EAAUA,UAAU3wB,MAAnC,cAA8C2wB,EAAUA,UAAUjsB,QAClE,gBAAC+nB,GAAA,EAAD,KAAYkE,EAAUI,SACtB,gBAACtE,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,WAAY8vB,EAAUwF,QAAU,QAAU,WACxE,gBAAC1J,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,WAAY8vB,EAAU0G,UAAY,MAAQ,WAM3Fv3B,KAAK6rD,cAAc,aAAc,aAAc,EAC5C,gBAACtoD,GAAA,EAAD,CACIhD,UAAU,eACV2D,KAAMlE,KAAKF,MAAMw2B,WACjBzxB,aAAc,WACV,OACI,gCACA,gBAAC8nB,GAAA,EAAD,CAAWjsB,MAAO,CAAC2B,MAAO,UAA1B,gCACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAAC2B,MAAO,UAA1B,aACA,gBAACsqB,GAAA,EAAD,gBACA,gBAACA,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAASsB,MAAO,UAA9C,iBACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAASsB,MAAO,UAA9C,YAIRyC,UAAW,SAACyxB,EAA0Bp3B,GAClC,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC9B2vB,EAAUA,UAAUjD,OACjB,gBAAC3G,GAAA,EAAD,KACI,uBAAKpsB,UAAU,QAAf,UAA0Bg2B,EAAUA,UAAUjD,OAAO,GAArD,cAA6DiD,EAAUA,UAAU3xB,QACjF,uBAAKrE,UAAU,cAAf,UAAgCg2B,EAAUA,UAAUjD,OAAO,GAA3D,gBAEJ,GACJ,gBAAC3G,GAAA,EAAD,KAAY4J,EAAU1F,UAAU3wB,OAChC,gBAACysB,GAAA,EAAD,KAAY4J,EAAUtF,SACtB,gBAACtE,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,UAAWw1B,EAAUC,QACnD,gBAAC7J,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,UAA9B,UAA4C3E,KAAe8vB,aAAaqK,EAAU1E,QAAQ,GAA1F,aAIZ7xB,KAAK0rD,yBAGZ1rD,KAAK6rD,cAAc,aAAc,aAAc,EAC5C,gBAACtoD,GAAA,EAAD,CACIhD,UAAU,eACV2D,KAAMlE,KAAKF,MAAM0xB,WACjB3sB,aAAc,WACV,OACI,gCACA,gBAAC8nB,GAAA,EAAD,CAAWjsB,MAAO,CAAC2B,MAAO,UAA1B,aACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAAC2B,MAAO,UAA1B,aACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAAC2B,MAAO,UAA1B,UACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAAC2B,MAAO,UAA1B,QACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,UAA7B,WACA,gBAACgR,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAASsB,MAAO,UAA9C,YAIRyC,UAAW,SAAC2sB,EAA0BtyB,GAClC,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,eAAe8E,EAAUA,UAAUvxB,MAAnC,cAA8CuxB,EAAUA,UAAU7sB,QAClE,gBAAC+nB,GAAA,EAAD,KAAY8E,EAAUZ,UAAU3wB,OAChC,gBAACysB,GAAA,EAAD,KAAY8E,EAAU8E,UAAU3xB,OAChC,gBAAC+nB,GAAA,EAAD,KAAYvwB,KAAeuqD,mBAAmBl1B,EAAU7zB,OACxD,gBAAC+uB,GAAA,EAAD,KAAY8E,EAAUR,SACtB,gBAACtE,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,UAA9B,UAA4C3E,KAAe8vB,aAAauF,EAAUI,QAAQ,GAA1F,aAIZ7xB,KAAK2rD,yBAGZ3rD,KAAK6rD,cAAc,gBAAiB,OAAQ,EACzC,gBAACtoD,GAAA,EAAD,CACIhD,UAAU,eACV2D,KAAMlE,KAAKF,MAAMuU,MACjBxP,aAAc,WACV,OACI,gCACA,gBAAC8nB,GAAA,EAAD,aACA,gBAACA,GAAA,EAAD,CAAWjsB,MAAO,CAAC2B,MAAO,UAA1B,QACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAASsB,MAAO,UAA9C,YAIRyC,UAAW,SAAC0P,EAAgBrV,GACxB,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,KAAYnY,EAAKS,MACjB,gBAAC0X,GAAA,EAAD,KAAYnY,EAAK/T,KAAKmE,OACtB,gBAAC+nB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,UAA9B,UAA4C3E,KAAe8vB,aAAa1X,EAAKqd,QAAQ,GAArF,aAIZ7xB,KAAK4rD,oBAGb,uBAAKrrD,UAAU,eACX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,YAAf,cACA,uBAAKA,UAAU,eACX,uBAAKA,UAAU,cAAf,YACA,uBAAKA,UAAU,cAAcP,KAAKF,MAAM0zB,SAAS5uB,QAErD,uBAAKrE,UAAU,eACX,uBAAKA,UAAU,cAAf,UACA,uBAAKA,UAAU,cAAcnE,KAAe8vB,aAAalsB,KAAKF,MAAM+2B,kBAAkB,GAAQ,SAElG,uBAAKt2B,UAAU,eACX,uBAAKA,UAAU,cAAf,iBACA,uBAAKA,UAAU,cAAcP,KAAKF,MAAMgtB,YAGhD,gBAACtU,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,YAAf,eACA,uBAAKA,UAAU,eACX,uBAAKA,UAAU,cAAf,YACA,uBAAKA,UAAU,cAAcP,KAAKF,MAAM6wB,SAASzwB,MAAQ,MAAQF,KAAKF,MAAM6wB,SAAS/rB,QAEzF,uBAAKrE,UAAU,eACX,uBAAKA,UAAU,cAAf,iBACA,uBAAKA,UAAU,cAAcnE,KAAeuqD,mBAAmB3mD,KAAKF,MAAM4yB,gBAE9E,uBAAKnyB,UAAU,eACX,uBAAKA,UAAU,cAAf,uBACA,uBAAKA,UAAU,cAAcP,KAAKF,MAAM8yB,mBAGhD,gBAACpa,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,YAAf,qBACA,uBAAKA,UAAU,eACX,uBAAKA,UAAU,cAAf,8BACA,uBAAKA,UAAU,cAAcnE,KAAe8vB,aAAalsB,KAAKF,MAAMg3B,WAAW,GAAQ,SAE3F,uBAAKv2B,UAAU,eACX,uBAAKA,UAAU,cAAf,kBACA,uBAAKA,UAAU,cACVP,KAAKF,MAAMk3B,cACR56B,KAAeuqD,mBAAmB3mD,KAAKF,MAAMk3B,eAC7C,SAIhB,gBAACxe,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACI9T,MAAM,kBACNkB,QAAS,WACL8B,OAAOkkD,OAAO,GAAIlkD,OAAOmkD,aACzB,EAAKjsD,MAAMksD,eAAe,OAGtC,gBAACxzC,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACI9T,MAAM,2BACNkB,QAAS,WACL8B,OAAOkkD,OAAO,GAAIlkD,OAAOmkD,aACzB,EAAKjsD,MAAMksD,eAAe,OAGtC,gBAACxzC,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACI9T,MAAM,yBACNkB,QAAS,WACL8B,OAAOkkD,OAAO,GAAIlkD,OAAOmkD,aACzB,EAAKjsD,MAAMksD,eAAe,SAK9C,uBAAKzrD,UAAU,eA1R/B,oCA+RkB0rD,EAAoBC,EAAkBC,EAAkB9I,EAAoB+I,GAAmC,IAAD,OACxH,OACI,uBAAK7rD,UAAU,eACX,uBAAKG,MAAO,CAACmV,MAAO,UAChB,gBAAC,GAAD,CACIjR,MAAK,qBAAgBsnD,GACrBpmD,QAAS,WACL8B,OAAOkkD,OAAO,GAAIlkD,OAAOmkD,aACzB,EAAKjsD,MAAMksD,eAAeG,OAGtC,uBAAK5rD,UAAU,YAAY0rD,GAC1B5I,EACA+I,EACG,uBAAK7rD,UAAU,eACX,uBAAKG,MAAO,CAACmV,MAAO,UAChB,wBAAMtV,UAAU,cAAhB,gBACA,wBAAMG,MAAO,CAAC+W,WAAY,UAC1B,wBAAMlX,UAAU,YACXnE,KAAe8vB,aAAakgC,GAAY,GAAQ,UAI7D,UAtTpB,GAAoCprD,a,wjBCiB7B,IAAMqrD,GAAb,YAEI,WAAYvsD,GAAgB,IAAD,+BACvB,8CAAMA,KASVwsD,eAAiB,SAAC3a,GAAD,OAAsB,SAACzxC,GACpC,EAAK6B,SAAS,SAAA6kD,GAAS,MAAK,CACxB3jD,KAAK,MACE2jD,EAAU3jD,KADb,gBAEC0uC,EAAWzxC,SAXpB,EAAKiB,MAAQ,CACTorD,WAAY,EAEZtpD,KAAM,IANa,EAF/B,0EAqBe8B,EAAaJ,EAAgBgtC,EAAkBzxC,GACtD,OACI,gBAACysB,GAAA,EAAD,CAAWrX,IAAK3Q,GACX3E,KAAKmB,MAAMorD,YAAcxnD,EACtB/E,KAAKF,MAAM0sD,UAAYxsD,KAAKF,MAAM0sD,UAAU7nD,EAAQ3E,KAAKmB,MAAM8B,KAAK0uC,GAAW3xC,KAAKssD,eAAe3a,IAAazxC,EAEhHF,KAAKF,MAAM2sD,SAAWzsD,KAAKF,MAAM2sD,SAAS1nD,EAAKJ,EAAQzE,GAASA,KA3BpF,+BAiC2B,IAAD,OAClB,OACI,gCACA,uBAAKK,UAAU,YAAYP,KAAKF,MAAMG,aACtC,gBAACw2C,GAAA,EAAD,CAAOl2C,WAAYP,KAAKF,MAAMS,UAAYP,KAAKF,MAAMS,UAAY,IAAM,UACnE,gBAACm2C,GAAA,EAAD,KACI,gBAAC7pB,GAAA,EAAD,KACK7sB,KAAKF,MAAM4sD,KAAK9qD,IAAI,SAAC+qD,EAASxtD,GAC3B,OACI,EAAKW,MAAM8sD,eACP,EAAK9sD,MAAM8sD,eAAeztD,EAAOwtD,GAEjC,gBAAChgC,GAAA,EAAD,CAAWrX,IAAKnW,GAAQwtD,KAIpC,gBAAChgC,GAAA,EAAD,CAAWpsB,UAAU,kBAI7B,gBAACo2C,GAAA,EAAD,KACK32C,KAAKF,MAAMoE,KAAKxH,OAAS,EACtBsD,KAAKF,MAAMoE,KAAKtC,IAAI,SAACmD,EAAK8nD,GACtB,IAAMjmD,EAAmBimD,EAAS,IAAM,EAAI,UAAY,UACxD,OACI,gBAAChgC,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,GAAkB0O,IAAKu3C,GACrDvlD,OAAO+gB,KAAKtjB,GAAKnD,IAAI,SAAC+vC,EAAUyV,GAC7B,OAAQ,EAAK0F,WAAWD,EAAQzF,EAAQzV,EAAU5sC,EAAI4sC,MAE1D,gBAAChlB,GAAA,EAAD,CAAWpsB,UAAU,eAChB,EAAKY,MAAMorD,YAAcM,EACtB,gCACA,uBAAKnsD,MAAO,CAACuG,QAAS,eAAgB8P,aAAc,WAChD,gBAAC,KAAD,CAAYhR,KAAMukC,IAAOxkC,QAAS,WAC9B,EAAK/D,SAAS,CAACwqD,UAAWM,IAC1B,EAAK9qD,SAAS,CAACkB,KAAM8B,QAG7B,uBAAKrE,MAAO,CAACuG,QAAS,iBAClB,gBAAC,KAAD,CAAYlB,KAAMwkC,IAAezkC,QAAS,WACtC,EAAKhG,MAAMitD,YAAYF,QAK/B,gCACA,uBAAKnsD,MAAO,CAACuG,QAAS,eAAgB8P,aAAc,WAChD,gBAAC,KAAD,CAAYhR,KAAMokC,IAAerkC,QAAS,WACtC,EAAKhG,MAAMktD,cAAcH,EAAQ,EAAK1rD,MAAM8B,MAC5C,EAAKlB,SAAS,CAACwqD,WAAY,QAGnC,uBAAK7rD,MAAO,CAACuG,QAAS,iBAClB,gBAAC,KAAD,CAAYlB,KAAMqkC,IAAetkC,QAAS,WACtC,EAAK/D,SAAS,CAACwqD,WAAY,aAUvD,gBAAC1/B,GAAA,EAAD,KACI,gBAACF,GAAA,EAAD,CAAW1nB,QAAS,IAAKvE,MAAO,CAACK,UAAW,WACvCf,KAAKF,MAAMoF,cAAgBlF,KAAKF,MAAMoF,cAAgB,yBAnGvF,GAA+BlE,aCzBlBisD,GAAb,YAEI,WAAYntD,GAAgB,IAAD,+BACvB,8CAAMA,KAGVotD,oBAAsB,SAACC,EAAkBjtD,GACrC,OACiB,IAAbitD,EACI,gBAACxgC,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAAS4a,SAAU,UAAWzb,GAE5D,gBAACysB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,UAAWzb,IATzB,EAc3BktD,kBAAoB,SAACD,EAAkBjtD,GACnC,OACiB,IAAbitD,EACI,2BAAM/wD,KAAeuqD,mBAAmBzmD,IAC3B,IAAbitD,EACA,uBAAKzsD,MAAO,CAACK,UAAW,UACnB3E,KAAe8vB,aAAahsB,GAAO,GAAQ,QAE/CA,GAtBc,EAF/B,wEA4B2B,IAAD,OAClB,OACI,uBAAKK,UAAU,WACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,YAAf,cACA,uBAAKA,UAAU,eACX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC7Y,GAAA,EAAD,CACII,YAAY,UACZC,MAAOF,KAAKF,MAAMqB,MAAM8vB,QAExBpwB,UAAW,IACXF,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAM8vB,QAAU/wB,EAC3B,EAAKJ,MAAMutD,0BAGvB,gBAAC70C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,aACZC,MAAOF,KAAKF,MAAMqB,MAAMvD,KACxB+C,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAMvD,KAAOsC,EACxB,EAAKJ,MAAMutD,0BAGvB,gBAAC70C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,wBACZ8zB,OAAO,MACPmU,SAAS,EACThoC,MAAOF,KAAKF,MAAMqB,MAAM60B,aAExBr1B,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAM60B,aAAe91B,EAChC,EAAKJ,MAAMutD,2BAI3B,uBAAK3sD,MAAO,CAAC0B,WAAY,SACK,KAA7BpC,KAAKF,MAAMqB,MAAM8vB,SACQ,OAA1BjxB,KAAKF,MAAMqB,MAAMvD,MACiB,IAAlCoC,KAAKF,MAAMqB,MAAM60B,aACb,gBAAC,GAAD,CACIpxB,MAAM,aACNmB,KAAMikC,IACNlkC,QAAS,WACL,IAAI3E,EAAQ,EAAKrB,MAAMqB,MACjBmsD,EAAW,CACbr8B,QAAS9vB,EAAM8vB,QACfrzB,KAAMuD,EAAMvD,KACZo4B,aAAc70B,EAAM60B,cAExB,EAAKl2B,MAAMgzB,QAAQy6B,QAAQD,GAC3B,EAAKxtD,MAAMqB,MAAM8vB,QAAU,GAC3B,EAAKnxB,MAAMqB,MAAMvD,KAAO,IAAIC,KAC5B,EAAKiC,MAAMqB,MAAM60B,aAAe,EAChC,EAAKl2B,MAAMutD,yBAEnB,MAGR,uBAAK9sD,UAAU,cAAcG,MAAO,CAAC+wC,UAAW,SAC5C,gBAAC,GAAD,CACIlxC,UAAU,eACVN,YAAY,UACZysD,KAAM,CAAC,UAAW,aAAc,yBAChCxoD,KAAMlE,KAAKF,MAAMgzB,QACjBk6B,cAAe,SAAC7tD,EAAe8D,GAC3B,EAAKnD,MAAMgzB,QAAQ3zB,GAAS8D,EAC5B,EAAKnD,MAAMutD,uBAEfN,YAAa,SAAC5tD,GACV,EAAKW,MAAMgzB,QAAQ0X,OAAOrrC,EAAO,GACjC,EAAKW,MAAMutD,uBAEfT,eAAgB,SAACO,EAAkBR,GAC/B,OAAO,EAAKO,oBAAoBC,EAAUR,IAE9CF,SAAU,SAACe,EAAmBL,EAAkBjtD,GAC5C,OAAO,EAAKktD,kBAAkBD,EAAUjtD,IAE5CssD,UAAW,SAACW,EAAkBM,EAAiB9sD,GAC3C,OAAiB,IAAbwsD,EAEI,gBAACttD,GAAA,EAAD,CACIK,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAAmBS,EAAST,MAE1B,IAAbitD,EAEH,gBAAC,GAAD,CACIjtD,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAAiBS,EAAST,MAIxC,gBAAC,GAAD,CACI6zB,OAAO,MACPmU,SAAS,EACThoC,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAAmBS,EAAST,UAK9D,uBAAKK,UAAU,eACX,uBAAKA,UAAU,YAAf,iBACA,gBAAC,GAAD,CACIqE,MAAM,cACN1E,MAAOF,KAAKF,MAAM4uB,YAAYmH,UAC9Bl1B,SAAU,SAACT,GACP,EAAKJ,MAAM4uB,YAAYmH,UAAY31B,EACnC,EAAKJ,MAAMutD,0BAGvB,uBAAK9sD,UAAU,iBAjJ/B,GAAmCS,aCItB0sD,GAAb,YAII,WAAY5tD,GAAgB,IAAD,+BACvB,8CAAMA,KAHV+oC,sBAE2B,IAS3BqkB,oBAAsB,SAACC,EAAkBjtD,GACrC,OACiB,IAAbitD,GAA+B,IAAbA,EACd,gBAACxgC,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAAS4a,SAAU,UAAWzb,GAE5D,gBAACysB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,UAAWzb,IAdzB,EAmB3BktD,kBAAoB,SAACD,EAAkBjtD,GACnC,IAAMa,EAA0B,IAAbosD,EAAiB,QAAU,OAC9C,OACI,uBAAKzsD,MAAO,CAACK,UAAWA,IACN,IAAbosD,EACG/wD,KAAe8vB,aAAahsB,GAAO,GAAQ,OAC3CA,IAzBW,EA8B3BytD,aAAe,WACX,IAAI/jB,EAAY,EAKhB,OAJA,EAAK9pC,MAAMm2B,eAAer0B,IAAI,SAAAs0B,GAC1B0T,GAAa1T,EAAc/C,WAAa+C,EAAcC,OAGnDyT,GAjCP,EAAKf,iBAAmB,CACpB,CAAE3oC,MAAO,IAAK0E,MAAO,wBACrB,CAAE1E,MAAO,IAAK0E,MAAO,8BALF,EAJ/B,0FA4CQ,OACI,uBAAKrE,UAAU,eACX,uBAAKA,UAAU,YAAf,uBACA,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,WACZC,MAAOF,KAAKF,MAAM6wB,SAClB/F,QAAS5qB,KAAKF,MAAM8tD,eACpBptD,UAAU,EACVG,SAAU,SAACyvC,GAAD,OAA4B,SAE9C,gBAAC53B,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,gBACZC,MAAOF,KAAKF,MAAM4yB,aAClBlyB,UAAU,EACVG,SAAU,SAACyvC,GAAD,OAAkB,SAEpC,gBAAC53B,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,sBACZC,MAAO,CAAEA,MAAO,GAAI0E,MAAO5E,KAAKF,MAAM8yB,iBACtChI,QAAS5qB,KAAK6oC,iBACdroC,UAAU,EACVG,SAAU,SAACyvC,GAAD,OAA4B,aArElE,mDA4E+C,IAAD,OACtC,OACI,uBAAK7vC,UAAU,eACX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC7Y,GAAA,EAAD,CACII,YAAY,YACZC,MAAOF,KAAKF,MAAMqB,MAAM8xB,SACxBtyB,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAM8xB,SAAW/yB,EAC5B,EAAKJ,MAAM+tD,iCAGvB,gBAACr1C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,cACZC,MAAOF,KAAKF,MAAMqB,MAAMg1B,KAExBx1B,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAMg1B,KAAOj2B,EACxB,EAAKJ,MAAM+tD,iCAGvB,gBAACr1C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,eACZ8zB,OAAO,MACPmU,SAAS,EACThoC,MAAOF,KAAKF,MAAMqB,MAAMgyB,WACxBxyB,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAMgyB,WAAajzB,EAC9B,EAAKJ,MAAM+tD,kCAI3B,uBAAKntD,MAAO,CAAC0B,WAAY,SACxBpC,KAAKF,MAAMqB,MAAMg1B,KAAO,EACrB,gBAAC,GAAD,CACIvxB,MAAM,WACNmB,KAAMikC,IACNlkC,QAAS,WACL,IAAI3E,EAAQ,EAAKrB,MAAMqB,MACjBmsD,EAAW,CACbr6B,SAAU9xB,EAAM8xB,SAChBkD,KAAMh1B,EAAMg1B,KACZhD,WAAYhyB,EAAMgyB,YAEtB,EAAKrzB,MAAMm2B,eAAes3B,QAAQD,GAClC,EAAKxtD,MAAMqB,MAAM8xB,SAAW,GAC5B,EAAKnzB,MAAMqB,MAAMg1B,KAAO,EACxB,EAAKr2B,MAAMqB,MAAMgyB,WAAa,EAC9B,EAAKrzB,MAAM+tD,gCAEnB,QAjIpB,+BAsI2B,IAAD,OAElB,OACI,uBAAKttD,UAAU,WACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,YAAf,0BACCP,KAAK8tD,6BACN,uBAAKvtD,UAAU,gBACdP,KAAK+tD,2BACN,uBAAKxtD,UAAU,cAAcG,MAAO,CAAC+wC,UAAW,SAC5C,gBAAC,GAAD,CACIlxC,UAAU,eACVN,YAAY,sBACZysD,KAAM,CAAC,YAAa,cAAe,gBACnCxoD,KAAMlE,KAAKF,MAAMm2B,eACjB+2B,cAAe,SAAC7tD,EAAe8D,GAC3B,EAAKnD,MAAMm2B,eAAe92B,GAAS8D,EACnC,EAAKnD,MAAM+tD,8BAEfd,YAAa,SAAC5tD,GACV,EAAKW,MAAMm2B,eAAeuU,OAAOrrC,EAAO,GACxC,EAAKW,MAAM+tD,8BAEfjB,eAAgB,SAACO,EAAkBR,GAC/B,OAAO,EAAKO,oBAAoBC,EAAUR,IAE9CF,SAAU,SAACe,EAAmBL,EAAkBjtD,GAC5C,OAAO,EAAKktD,kBAAkBD,EAAUjtD,IAE5CssD,UAAW,SAACW,EAAkBM,EAAiB9sD,GAC3C,OAAiB,IAAbwsD,EAEI,gBAACttD,GAAA,EAAD,CACIK,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAAmBS,EAAST,MAE1B,IAAbitD,EAEH,gBAAC,GAAD,CACIjtD,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAAmBS,EAAST,EAAQ,EAAI,EAAIA,MAI1D,gBAAC,GAAD,CACI6zB,OAAO,MACPmU,SAAS,EACThoC,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAAmBS,EAAST,SAI1D,uBAAKK,UAAU,eACX,uBAAKG,MAAO,CAACmV,MAAO,UAChB,wBAAMtV,UAAU,cAAhB,gBACA,wBAAMG,MAAO,CAAC+W,WAAY,UAC1B,wBAAMlX,UAAU,YAAYnE,KAAe8vB,aAAalsB,KAAK2tD,gBAAgB,GAAQ,WAIjG,uBAAKptD,UAAU,iBAlM/B,GAA2CS,aCF9BgtD,GAAb,8MAkBId,oBAAsB,SAACC,EAAkBjtD,GACrC,OACiB,IAAbitD,GAA+B,IAAbA,EACd,gBAACxgC,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,QAASwE,SAAU,UAAWjgB,GAC9C,IAAbitD,EACA,gBAACxgC,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,QAASwE,SAAU,QAASpf,UAAW,WAAYb,GAEhF,gBAACysB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,QAASwE,SAAU,UAAWjgB,IAzB3E,EA8BIktD,kBAAoB,SAACa,EAAkBd,EAAkBjtD,GACrD,OACiB,IAAbitD,EACI,uBAAKzsD,MAAO,CAACib,SAAU,QAASwE,SAAU,UACrCjgB,EAAMA,MAAQ,MAAQA,EAAM0E,OAEpB,IAAbuoD,EACJ,2BAAMjtD,EAAQ,QAAU,WACP,IAAbitD,EACA,uBAAKzsD,MAAO,CAACK,UAAW,WACpB,gBAAC,GAAD,CACIP,UAAW,EAAKV,MAAMgxB,UAAUm9B,GAAU53B,QAC1C6Z,iBAAkB,EAAKpwC,MAAMs2B,wBAA0B63B,EACvDttD,SAAU,WACN,EAAKb,MAAMouD,yBAAyBD,OAG/C/tD,GA/CjB,yFAIQ,IADA,IAAIiuD,EAAkC,GAC7B1xD,EAAI,EAAGA,EAAIuD,KAAKF,MAAMsuD,cAAc1xD,OAAQD,IAAK,CAEtD,IADA,IAAIktC,GAAS,EACJ3kC,EAAI,EAAGA,EAAIhF,KAAKF,MAAMgxB,UAAUp0B,OAAQsI,IAC7C2kC,EACI3pC,KAAKF,MAAMgxB,UAAU9rB,GAAG6rB,UAAU3wB,QAClCF,KAAKF,MAAMsuD,cAAc3xD,GAAGyD,OAAeypC,EAE9CA,IACDwkB,EAAgBA,EAAchqB,OAAOnkC,KAAKF,MAAMsuD,cAAc3xD,KAGtE,OAAO0xD,IAff,+BAmD2B,IAAD,OAClB,OACI,uBAAK5tD,UAAU,WACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,YAAf,iBACA,uBAAKA,UAAU,eACX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,YACZC,MAAOF,KAAKF,MAAMqB,MAAM0vB,UAExBjG,QAAS5qB,KAAKquD,wBACd1tD,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAM0vB,UAAY3wB,EAC7B,EAAKJ,MAAMwuD,kCAGvB,gBAAC91C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC7Y,GAAA,EAAD,CACII,YAAY,UACZC,MAAOF,KAAKF,MAAMqB,MAAM8vB,QACxBpwB,UAAW,IACXF,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAM8vB,QAAU/wB,EAC3B,EAAKJ,MAAMwuD,kCAGvB,gBAAC91C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACI9T,MAAM,mBACN1E,MAAOF,KAAKF,MAAMqB,MAAMk1B,QACxB11B,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAMk1B,QAAUn2B,EAC3B,EAAKJ,MAAMwuD,mCAK3B,uBAAK5tD,MAAO,CAAC0B,WAAY,SACa,KAArCpC,KAAKF,MAAMqB,MAAM0vB,UAAU3wB,MACxB,gBAAC,GAAD,CACI0E,MAAM,gBACNmB,KAAMikC,IACNlkC,QAAS,WACL,IAAI7C,EAAO,EAAKnD,MAAMqB,MAChBmsD,EAAW,CACbz8B,UAAW5tB,EAAK4tB,UAChBI,QAAShuB,EAAKguB,QACdoF,QAASpzB,EAAKozB,QACdkB,WAAW,GAEf,EAAKz3B,MAAMgxB,UAAUy8B,QAAQD,GAC7B,EAAKxtD,MAAMqB,MAAM0vB,UAAY,CAAE3wB,MAAO,GAAI0E,MAAO,IACjD,EAAK9E,MAAMqB,MAAM8vB,QAAU,GAC3B,EAAKnxB,MAAMqB,MAAMk1B,SAAU,EAC3B,EAAKv2B,MAAMwuD,8BACX,EAAKxuD,MAAMouD,yBAAyB,EAAKpuD,MAAMs2B,sBAAwB,MAE/E,MAER,uBAAK71B,UAAU,cAAcG,MAAO,CAAC+wC,UAAW,SAC5C,gBAAC,GAAD,CACIlxC,UAAU,eACVN,YAAY,YAEZysD,KAAM,CAAC,YAAa,UAAW,OAAQ,sBACvCxoD,KAAMlE,KAAKF,MAAMgxB,UACjBk8B,cAAe,SAAC7tD,EAAe8D,GAC3B,EAAKnD,MAAMgxB,UAAU3xB,GAAS8D,EAC9B,EAAKnD,MAAMwuD,+BAEfvB,YAAa,SAAC5tD,GACV,EAAKW,MAAMw2B,WAAWxM,OAAO,SAAAyM,GAAS,OAClCA,EAAU1F,UAAUjsB,QACpB,EAAK9E,MAAMgxB,UAAU3xB,GAAO0xB,UAAUjsB,QAC1C,EAAK9E,MAAMgxB,UAAU0Z,OAAOrrC,EAAO,GACnC,EAAKW,MAAMwuD,8BACX,EAAKxuD,MAAMouD,yBACP,EAAKpuD,MAAMs2B,uBAAyBj3B,EACpC,EAAKW,MAAMs2B,sBAAwB,GAAK,IAEhDw2B,eAAgB,SAACO,EAAkBR,GAC/B,OAAO,EAAKO,oBAAoBC,EAAUR,IAE9CF,SAAU,SAACwB,EAAkBd,EAAkBjtD,GAC3C,OAAO,EAAKktD,kBAAkBa,EAAUd,EAAUjtD,IAEtDssD,UAAW,SAACW,EAAkBM,EAAiB9sD,GAC3C,OAAiB,IAAbwsD,EAEI,gBAAC,GAAD,CACIviC,QAAS,EAAKyjC,wBACdnuD,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAA2BS,EAAST,MAElC,IAAbitD,EAEH,gBAACttD,GAAA,EAAD,CACIK,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAAmBS,EAAST,MAE1B,IAAbitD,EAEH,gBAAC,GAAD,CACIvoD,MAAM,YACN1E,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAAoBS,EAAST,MAI3C,gCAKpB,uBAAKK,UAAU,iBAvK/B,GAAsCS,a,6NCH/B,IAAMutD,GAAb,8MAEIrB,oBAAsB,SAACC,EAAkBjtD,GACrC,OACiB,IAAbitD,EACI,gBAACxgC,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,UAAWzb,GAC3B,IAAbitD,EACA,gBAACxgC,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,UAAWzb,GAC3B,IAAbitD,GAA+B,IAAbA,EAClB,gBAACxgC,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,QAAS5a,UAAW,UAAWb,GAE5D,gBAACysB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,UAAWzb,IAXxD,EAgBIktD,kBAAoB,SAACD,EAAkBjtD,GACnC,OACiB,IAAbitD,EACI,2BACI,2BAAMjtD,EAAMozB,OAAO,GAAK,MAAQpzB,EAAM0E,OACtC,uBAAKrE,UAAU,cAAcL,EAAMozB,OAAO,GAAK,eAEtC,IAAb65B,EACA,2BAAMjtD,EAAMA,OACC,IAAbitD,GAA+B,IAAbA,EAClB,uBAAKzsD,MAAO,CAACK,UAAW,UACN,IAAbosD,EAAiB/wD,KAAe8vB,aAAahsB,GAAO,GAAQ,OAASA,GAEzEA,GA7BjB,0EAiC2B,IAAD,OAClB,OACI,uBAAKK,UAAU,WACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,YAAf,iBACA,uBAAKA,UAAU,eACX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,SACZ8zB,OAAQ/zB,KAAKF,MAAMqB,MAAMo1B,UAAUjD,OAAStzB,KAAKF,MAAMqB,MAAMo1B,UAAUjD,OAAO,GAAK,GACnFpzB,MAAOF,KAAKF,MAAMqB,MAAMo1B,UAExB3L,QAAS5qB,KAAKF,MAAM0uD,eACpB7tD,SAAU,SAACT,GACHA,EAAMozB,QAAU,EAAKxzB,MAAMqB,MAAMo1B,UAAUjD,SAC3C,EAAKxzB,MAAMqB,MAAMo1B,U,wVAAjB,IACOr2B,EADP,CAEIozB,OAAQ,CAACpzB,EAAMozB,OAAO,GAAI,EAAKxzB,MAAMqB,MAAMo1B,UAAUjD,OAAO,MAEhE,EAAKxzB,MAAM2uD,oCAI3B,gBAACj2C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,YACZC,MAAOF,KAAKF,MAAMqB,MAAM0vB,UAExBjG,QAAS5qB,KAAKF,MAAMsuD,cAAcxsD,IAAI,SAAA1B,GAAK,OAAIA,EAAM2wB,YACrDlwB,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAM0vB,UAAY3wB,EAC7B,EAAKJ,MAAM2uD,mCAGvB,gBAACj2C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC7Y,GAAA,EAAD,CACII,YAAY,UACZC,MAAOF,KAAKF,MAAMqB,MAAM8vB,QACxBpwB,UAAW,IACXF,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAM8vB,QAAU/wB,EAC3B,EAAKJ,MAAM2uD,mCAGvB,gBAACj2C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,SACZC,MAAOF,KAAKF,MAAMqB,MAAMq1B,OACxB71B,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAMq1B,OAASt2B,EAC1B,EAAKJ,MAAM2uD,mCAGvB,gBAACj2C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,SACZ8zB,OAAO,MACPmU,SAAS,EACThoC,MAAOF,KAAKF,MAAMqB,MAAM0wB,OACxBlxB,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAM0wB,OAAS3xB,EAC1B,EAAKJ,MAAM2uD,mCAGtBzuD,KAAKF,MAAMqB,MAAMo1B,UAAUjD,OACxB,gBAAC9a,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,2BACA,gBAACF,EAAA,EAAD,CAAM3R,WAAS,EAACnG,MAAO,CAAC0B,WAAY,SAChC,gBAACoW,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAACu3B,GAAA,EAAD,CACI1vC,UAAU,YACVG,MAAO,CAAC4B,OAAQ,OAAQD,MAAO,GAC/BuV,QAAkD,cAAzC5X,KAAKF,MAAMqB,MAAMo1B,UAAUjD,OAAO,GAC3CpzB,MAAO,YACPS,SAAU,SAACC,GACH,EAAKd,MAAMqB,MAAMo1B,UAAUjD,SAC3B,EAAKxzB,MAAMqB,MAAMo1B,UAAUjD,OAAO,GAAK1yB,EAAME,OAAOZ,OAExD,EAAKJ,MAAM2uD,kCAVvB,cAaA,gBAACj2C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAACu3B,GAAA,EAAD,CACI1vC,UAAU,YACVG,MAAO,CAAC4B,OAAQ,OAAQD,MAAO,GAC/BuV,QAAkD,cAAzC5X,KAAKF,MAAMqB,MAAMo1B,UAAUjD,OAAO,GAC3CpzB,MAAO,YACPS,SAAU,SAACC,GACH,EAAKd,MAAMqB,MAAMo1B,UAAUjD,SAC3B,EAAKxzB,MAAMqB,MAAMo1B,UAAUjD,OAAO,GAAK1yB,EAAME,OAAOZ,OAExD,EAAKJ,MAAM2uD,kCAVvB,iBAgBR,MAER,uBAAK/tD,MAAO,CAAC0B,WAAY,SACa,KAArCpC,KAAKF,MAAMqB,MAAMo1B,UAAUr2B,OACS,KAArCF,KAAKF,MAAMqB,MAAM0vB,UAAU3wB,MACvB,gBAAC,GAAD,CACI0E,MAAM,gBACNmB,KAAMikC,IACNlkC,QAAS,WACL,IAAI7C,EAAO,EAAKnD,MAAMqB,MAChBmsD,EAAW,CACb/2B,UAAW,CACPr2B,MAAO+C,EAAKszB,UAAUr2B,MACtB0E,MAAO3B,EAAKszB,UAAU3xB,MACtB0uB,OAAQrwB,EAAKszB,UAAUjD,OAASrwB,EAAKszB,UAAUjD,YAAShzB,GAE5DuwB,UAAW5tB,EAAK4tB,UAChBI,QAAShuB,EAAKguB,QACduF,OAAQvzB,EAAKuzB,OACb3E,OAAQ5uB,EAAK4uB,QAEjB,EAAK/xB,MAAMw2B,WAAWi3B,QAAQD,GAC9B,EAAKxtD,MAAMqB,MAAMo1B,UAAY,CAAEr2B,MAAO,GAAI0E,MAAO,GAAI0uB,OAAQ,CAAC,GAAI,cAClE,EAAKxzB,MAAMqB,MAAM0vB,UAAY,CAAE3wB,MAAO,GAAI0E,MAAO,IACjD,EAAK9E,MAAMqB,MAAM8vB,QAAU,GAC3B,EAAKnxB,MAAMqB,MAAMq1B,OAAS,EAC1B,EAAK12B,MAAMqB,MAAM0wB,OAAS,EAC1B,EAAK/xB,MAAM2uD,kCAElB,MAET,uBAAKluD,UAAU,cAAcG,MAAO,CAAC+wC,UAAW,SAC5C,gBAAC,GAAD,CACIlxC,UAAU,eACVN,YAAY,aACZysD,KAAM,CAAC,+BAAgC,YAAa,UAAW,gBAAiB,UAChFxoD,KAAMlE,KAAKF,MAAMw2B,WACjB02B,cAAe,SAAC7tD,EAAe8D,GAE3B,EAAKnD,MAAMw2B,WAAWn3B,GAAS8D,EAC/B,EAAKnD,MAAM2uD,gCAEf1B,YAAa,SAAC5tD,GAEV,EAAKW,MAAMw2B,WAAWkU,OAAOrrC,EAAO,GACpC,EAAKW,MAAM2uD,gCAEf7B,eAAgB,SAACO,EAAkBR,GAC/B,OAAO,EAAKO,oBAAoBC,EAAUR,IAE9CF,SAAU,SAACe,EAAmBL,EAAkBjtD,GAC5C,OAAO,EAAKktD,kBAAkBD,EAAUjtD,IAE5CssD,UAAW,SAACW,EAAkBM,EAAiB9sD,GAC3C,OAAiB,IAAbwsD,EAEI,gBAAC,GAAD,CACIp5B,OAAQ05B,EAAWn6B,OAAO,GAC1B1I,QAAS,EAAK9qB,MAAM0uD,eACpBtuD,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAA2BS,EAAS,CAC1CT,MAAOA,EAAMA,MACb0E,MAAO1E,EAAM0E,MACb0uB,OAAQ,CAACpzB,EAAMozB,OAASpzB,EAAMozB,OAAO,GAAK,GAAIm6B,EAAWn6B,OAAO,SAGxD,IAAb65B,EAEP,2BAAMM,EAAWvtD,OAQG,IAAbitD,EAEH,gBAACttD,GAAA,EAAD,CACIK,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAAmBS,EAAST,MAG1B,IAAbitD,EAEH,gBAAC,GAAD,CACIjtD,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAAmBS,EAAST,MAK1C,gBAAC,GAAD,CACI6zB,OAAO,MACPmU,SAAS,EACThoC,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAAmBS,EAAST,UAK9D,uBAAKK,UAAU,iBAxO/B,GAAuCS,aCC1B0tD,GAAb,8MAEIxB,oBAAsB,SAACC,EAAkBjtD,GACrC,OACiB,IAAbitD,EACI,gBAACxgC,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,UAAWzb,GAC3B,IAAbitD,EACA,gBAACxgC,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,UAAWzb,GAC3B,IAAbitD,GAA+B,IAAbA,EAClB,gBAACxgC,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,UAAWzb,GAC3B,IAAbitD,EACA,gBAACxgC,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAAS4a,SAAU,UAAWzb,GAE5D,gBAACysB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,UAAWzb,IAbxD,EAkBIktD,kBAAoB,SAACD,EAAkBjtD,GACnC,OACiB,IAAbitD,EACI,2BAAMjtD,EAAMA,MAAQ,MAAQA,EAAM0E,OACrB,IAAbuoD,EACA,2BAAMjtD,EAAMA,OACC,IAAbitD,EACA,2BAAMjtD,EAAM0E,OACC,IAAbuoD,EACA,2BAAM/wD,KAAeuqD,mBAAmBzmD,IAC3B,IAAbitD,EACA,uBAAKzsD,MAAO,CAACK,UAAW,UACnB3E,KAAe8vB,aAAahsB,GAAO,GAAQ,QAE/CA,GAhCjB,0EAoC2B,IAAD,OAElB,OACI,uBAAKK,UAAU,WACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,YAAf,iBACA,uBAAKA,UAAU,eACX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,YACZC,MAAOF,KAAKF,MAAMqB,MAAMswB,UAExB7G,QAAS5qB,KAAKF,MAAM6uD,eACpBhuD,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAMswB,UAAYvxB,EAC7B,EAAKJ,MAAM8uD,mCAGvB,gBAACp2C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,YACZC,MAAOF,KAAKF,MAAMqB,MAAM0vB,UAExBjG,QAAS5qB,KAAKF,MAAMsuD,cAAcxsD,IAAI,SAAA1B,GAAK,OAAIA,EAAM2wB,YACrDlwB,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAM0vB,UAAY3wB,EAC7B,EAAKJ,MAAM8uD,mCAGvB,gBAACp2C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,SACZ8zB,OAAQ/zB,KAAKF,MAAMqB,MAAMo1B,UAAUjD,OAAStzB,KAAKF,MAAMqB,MAAMo1B,UAAUjD,OAAO,QAAKhzB,EACnFJ,MAAOF,KAAKF,MAAMqB,MAAMo1B,UAExB3L,QAAS5qB,KAAKF,MAAM0uD,eACpB7tD,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAMo1B,UAAYr2B,EAC7B,EAAKJ,MAAM8uD,mCAGvB,gBAACp2C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC7Y,GAAA,EAAD,CACII,YAAY,UACZC,MAAOF,KAAKF,MAAMqB,MAAM8vB,QACxBpwB,UAAW,IACXF,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAM8vB,QAAU/wB,EAC3B,EAAKJ,MAAM8uD,mCAGvB,gBAACp2C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,OACZC,MAAOF,KAAKF,MAAMqB,MAAMvD,KACxB+C,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAMvD,KAAOsC,EACxB,EAAKJ,MAAM8uD,mCAGvB,gBAACp2C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,SACZ8zB,OAAO,MACPmU,SAAS,EACThoC,MAAOF,KAAKF,MAAMqB,MAAM0wB,OACxBlxB,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAM0wB,OAAS3xB,EAC1B,EAAKJ,MAAM8uD,oCAI3B,uBAAKluD,MAAO,CAAC0B,WAAY,SACa,KAArCpC,KAAKF,MAAMqB,MAAMo1B,UAAUr2B,OACS,KAArCF,KAAKF,MAAMqB,MAAM0vB,UAAU3wB,OACU,KAArCF,KAAKF,MAAMqB,MAAMswB,UAAUvxB,MACvB,gBAAC,GAAD,CACI0E,MAAM,gBACNmB,KAAMikC,IACNlkC,QAAS,WACL,IAAI7C,EAAO,EAAKnD,MAAMqB,MAChBmsD,EAAW,CACb77B,UAAWxuB,EAAKwuB,UAChBZ,UAAW5tB,EAAK4tB,UAChB0F,UAAWtzB,EAAKszB,UAChB34B,KAAMqF,EAAKrF,KACXqzB,QAAShuB,EAAKguB,QACdY,OAAQ5uB,EAAK4uB,QAEjB,EAAK/xB,MAAM0xB,WAAW+7B,QAAQD,GAC9B,EAAKxtD,MAAMqB,MAAMswB,UAAY,CAAEvxB,MAAO,GAAI0E,MAAO,IACjD,EAAK9E,MAAMqB,MAAM0vB,UAAY,CAAE3wB,MAAO,GAAI0E,MAAO,IACjD,EAAK9E,MAAMqB,MAAMo1B,UAAY,CAAEr2B,MAAO,GAAI0E,MAAO,IACjD,EAAK9E,MAAMqB,MAAM8vB,QAAU,GAC3B,EAAKnxB,MAAMqB,MAAMvD,KAAO,IAAIC,KAC5B,EAAKiC,MAAMqB,MAAM0wB,OAAS,EAC1B,EAAK/xB,MAAM8uD,kCAEnB,MAER,uBAAKruD,UAAU,cAAcG,MAAO,CAAC+wC,UAAW,SAC5C,gBAAC,GAAD,CACIlxC,UAAU,eACVN,YAAY,aAEZysD,KAAM,CAAC,YAAa,YAAa,SAAU,OAAQ,UAAW,UAC9DxoD,KAAMlE,KAAKF,MAAM0xB,WACjBw7B,cAAe,SAAC7tD,EAAe8D,GAE3B,EAAKnD,MAAM0xB,WAAWryB,GAAS8D,EAC/B,EAAKnD,MAAM8uD,gCAEf7B,YAAa,SAAC5tD,GAEV,EAAKW,MAAM0xB,WAAWgZ,OAAOrrC,EAAO,GACpC,EAAKW,MAAM8uD,gCAEfhC,eAAgB,SAACO,EAAkBR,GAC/B,OAAO,EAAKO,oBAAoBC,EAAUR,IAE9CF,SAAU,SAACe,EAAmBL,EAAkBjtD,GAC5C,OAAO,EAAKktD,kBAAkBD,EAAUjtD,IAE5CssD,UAAW,SAACW,EAAkBM,EAAiB9sD,GAC3C,OAAiB,IAAbwsD,EAEI,gBAAC,GAAD,CACIviC,QAAS,EAAK9qB,MAAM6uD,eACpBzuD,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAA2BS,EAAST,MAElC,IAAbitD,EAEH,gBAAC,GAAD,CACIviC,QAAS,EAAK9qB,MAAMsuD,cAAcxsD,IAAI,SAAA1B,GAClC,OAAOA,EAAM2wB,YAEjB3wB,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAA2BS,EAAST,MAElC,IAAbitD,EAEH,gBAAC,GAAD,CACIp5B,OAAQ05B,EAAWn6B,OAASm6B,EAAWn6B,OAAO,GAAK,GACnD1I,QAAS,EAAK9qB,MAAM0uD,eACpBtuD,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAA2BS,EAAST,MAElC,IAAbitD,EAEH,gBAAC,GAAD,CACIjtD,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAAiBS,EAAST,MAExB,IAAbitD,EAEH,gBAACttD,GAAA,EAAD,CACIK,MAAOutD,EACP5sD,UAAW,IACXF,SAAU,SAACT,GAAD,OAAmBS,EAAST,MAK1C,gBAAC,GAAD,CACI6zB,OAAO,MACPmU,SAAS,EACThoC,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAAmBS,EAAST,UAK9D,uBAAKK,UAAU,iBAlN/B,GAAuCS,aCJ1B6tD,GAAb,YAII,WAAY/uD,GAAgB,IAAD,+BACvB,8CAAMA,KAHVgvD,eAE2B,IAW3B5B,oBAAsB,SAACC,EAAkBjtD,GACrC,OACiB,IAAbitD,EACI,gBAACxgC,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAAS4a,SAAU,UAAWzb,GAE5D,gBAACysB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,UAAWzb,IAhBzB,EAqB3BktD,kBAAoB,SAACD,EAAkBjtD,GACnC,OACiB,IAAbitD,EACIjtD,EAAM0E,MACO,IAAbuoD,EACA,uBAAKzsD,MAAO,CAACK,UAAW,UACnB3E,KAAe8vB,aAAahsB,GAAO,GAAQ,QAE/CA,GA1BT,EAAK4uD,UAAY,CACb,CAAE5uD,MAAO,IAAK0E,MAAO,YACrB,CAAE1E,MAAO,IAAK0E,MAAO,iBACrB,CAAE1E,MAAO,IAAK0E,MAAO,SACrB,CAAE1E,MAAO,IAAK0E,MAAO,kBAPF,EAJ/B,wEAqC2B,IAAD,OAElB,OADAlD,QAAQC,IAAI3B,KAAKF,MAAMuU,OAEnB,uBAAK9T,UAAU,WACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,YAAf,qBACA,uBAAKA,UAAU,eACX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC7Y,GAAA,EAAD,CACII,YAAY,OACZC,MAAOF,KAAKF,MAAMqB,MAAM8T,KAExBtU,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAM8T,KAAO/U,EACxB,EAAKJ,MAAMivD,8BAGvB,gBAACv2C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,OACZC,MAAOF,KAAKF,MAAMqB,MAAMV,KACxBmqB,QAAS5qB,KAAK8uD,UAEdnuD,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAMV,KAAOP,EACxB,EAAKJ,MAAMivD,8BAGvB,gBAACv2C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,SACZ8zB,OAAO,MACPmU,SAAS,EACThoC,MAAOF,KAAKF,MAAMqB,MAAM0wB,OAExBlxB,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAM0wB,OAAS3xB,EAC1B,EAAKJ,MAAMivD,+BAI3B,uBAAKruD,MAAO,CAAC0B,WAAY,SACe,GAAvCpC,KAAKF,MAAMqB,MAAM8T,KAAK8U,OAAOrtB,QACG,KAAhCsD,KAAKF,MAAMqB,MAAMV,KAAKP,OACK,GAA3BF,KAAKF,MAAMqB,MAAM0wB,OACd,gBAAC,GAAD,CACIjtB,MAAM,WACNmB,KAAMikC,IACNlkC,QAAS,WACL,IAAI3E,EAAQ,EAAKrB,MAAMqB,MACjBmsD,EAAW,CACbr4C,KAAM9T,EAAM8T,KACZxU,KAAM,CAAEP,MAAOiB,EAAMV,KAAKP,MAAO0E,MAAOzD,EAAMV,KAAKmE,OACnDitB,OAAQ1wB,EAAM0wB,QAElB,EAAK/xB,MAAMuU,MAAMk5C,QAAQD,GACzB,EAAKxtD,MAAMqB,MAAM8T,KAAO,GACxB,EAAKnV,MAAMqB,MAAMV,KAAO,CAAEP,MAAO,GAAI0E,MAAO,IAC5C,EAAK9E,MAAMqB,MAAM0wB,OAAS,EAC1B,EAAK/xB,MAAMivD,6BAEnB,MAER,uBAAKxuD,UAAU,cAAcG,MAAO,CAAC+wC,UAAW,SAC5C,gBAAC,GAAD,CACIlxC,UAAU,eACVN,YAAY,gBAEZysD,KAAM,CAAC,OAAQ,OAAQ,UACvBxoD,KAAMlE,KAAKF,MAAMuU,MACjB24C,cAAe,SAAC7tD,EAAe8D,GAE3B,EAAKnD,MAAMuU,MAAMlV,GAAS8D,EAC1B,EAAKnD,MAAMivD,2BAEfhC,YAAa,SAAC5tD,GAEV,EAAKW,MAAMuU,MAAMm2B,OAAOrrC,EAAO,GAC/B,EAAKW,MAAMivD,2BAEfnC,eAAgB,SAACO,EAAkBR,GAC/B,OAAO,EAAKO,oBAAoBC,EAAUR,IAE9CF,SAAU,SAACe,EAAmBL,EAAkBjtD,GAC5C,OAAO,EAAKktD,kBAAkBD,EAAUjtD,IAE5CssD,UAAW,SAACW,EAAkBM,EAAiB9sD,GAC3C,OAAiB,IAAbwsD,EAEI,gBAACttD,GAAA,EAAD,CACIK,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAAmBS,EAAST,MAE1B,IAAbitD,EAEH,gBAAC,GAAD,CACIviC,QAAS,EAAKkkC,UACd5uD,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAA2BS,EAAST,MAIlD,gBAAC,GAAD,CACI6zB,OAAO,MACPmU,SAAS,EACThoC,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAAmBS,EAAST,UAK9D,uBAAKK,UAAU,iBArJ/B,GAAyCS,aCC5BguD,GAAb,YAII,WAAYlvD,GAAa,IAAD,+BACpB,8CAAMA,KAHVmvD,kBAEwB,EAGpB,EAAKA,aAAe,CAChB,CAAE/uD,MAAO,IAAK0E,MAAO,SACrB,CAAE1E,MAAO,IAAK0E,MAAO,uBACrB,CAAE1E,MAAO,IAAK0E,MAAO,mBACrB,CAAE1E,MAAO,IAAK0E,MAAO,sBACrB,CAAE1E,MAAO,IAAK0E,MAAO,QACrB,CAAE1E,MAAO,IAAK0E,MAAO,YACrB,CAAE1E,MAAO,IAAK0E,MAAO,aAVL,EAJ5B,wEAmB2B,IAAD,OAElB,OACI,uBAAKrE,UAAU,WACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,YAAf,kBACA,uBAAKA,UAAU,eACX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,WACZ2qB,QAAS5qB,KAAKivD,aACd/uD,MAAOF,KAAKF,MAAM0zB,SAClB7yB,SAAU,SAACT,GACP,EAAKJ,MAAMovD,0BAA0B,WAAYhvD,OAG9B,wBAA9BF,KAAKF,MAAM0zB,SAAS5uB,MACjB,gBAAC4T,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC7Y,GAAA,EAAD,CACII,YAAY,gBACZC,MAAOF,KAAKF,MAAMgtB,SAClBnsB,SAAU,SAACT,GACP,EAAKJ,MAAMovD,0BAA0B,WAAYhvD,OAG7D,KAC2B,SAA9BF,KAAKF,MAAM0zB,SAAS5uB,MACrB,gBAAC4T,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC7Y,GAAA,EAAD,CACII,YAAY,UACZC,MAAOF,KAAKF,MAAM82B,OAClBj2B,SAAU,SAACT,GACP,EAAKJ,MAAMovD,0BAA0B,SAAUhvD,OAGvD,KAC2B,UAA9BF,KAAKF,MAAM0zB,SAAS5uB,OACa,wBAA9B5E,KAAKF,MAAM0zB,SAAS5uB,OACU,SAA9B5E,KAAKF,MAAM0zB,SAAS5uB,MACpB,gBAAC4T,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,SACZ8zB,OAAO,MACPmU,SAAS,EACThoC,MAAOF,KAAKF,MAAM+2B,iBAClBl2B,SAAU,SAACT,GACP,EAAKJ,MAAMovD,0BAA0B,mBAAoBhvD,OAGrE,OAMZ,uBAAKK,UAAU,YAAf,yBACA,uBAAKA,UAAU,eACX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,6BACZ8zB,OAAO,MACPmU,SAAS,EACThoC,MAAOF,KAAKF,MAAMg3B,UAClBn2B,SAAU,SAACT,GACP,EAAKJ,MAAMovD,0BAA0B,YAAahvD,OAG9D,gBAACsY,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,iBACZC,MAAOF,KAAKF,MAAMk3B,eAAiB,KACnC2R,QAAS3oC,KAAKF,MAAM4yB,aACpB/xB,SAAU,SAACT,GACP,EAAKJ,MAAMovD,0BAA0B,gBAAiBhvD,SAK1E,uBAAKK,UAAU,iBAnG/B,GAA6CS,aCJhCmuD,GAAb,sLAE2B,IAAD,OAClB,OADmBztD,QAAQC,IAAI3B,KAAKF,MAAMk9B,OAEtC,uBAAKz8B,UAAU,WACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,YAAf,oBACA,uBAAKA,UAAU,eACX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIwyB,OAAO,UACPF,OAAQ,SAAChO,GACL,EAAKl9B,MAAMqB,MAAM+uB,KAAO8M,EAAM,GAC9B,EAAKl9B,MAAMsvD,6BAEnB,2BAAMpvD,KAAKF,MAAMqB,MAAM+uB,KAAOlwB,KAAKF,MAAMqB,MAAM+uB,KAAKjb,KAAO,MAC3D,uBAAK1U,UAAU,gBACf,gBAACV,GAAA,EAAD,CACII,YAAY,gBACZC,MAAOF,KAAKF,MAAMqB,MAAMw0B,QACxBh1B,SAAU,SAACT,GACP,EAAKJ,MAAMqB,MAAMw0B,QAAUz1B,EAC3B,EAAKJ,MAAMsvD,8BAGvB,gBAAC52C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,KAEnB,uBAAKhY,MAAO,CAAC0B,WAAY,SACzB,gBAAC,GAAD,CACIwC,MAAM,eACNmB,KAAMikC,IACNlkC,QAAS,WACL,IAAI3E,EAAQ,EAAKrB,MAAMqB,MACvB,GAAmB,OAAfA,EAAM+uB,KAAe,CACrB,IAAMo9B,EAAW,CACb33B,QAASx0B,EAAMw0B,QACfzF,KAAM/uB,EAAM+uB,MAEhB,EAAKpwB,MAAMk9B,MAAMuwB,QAAQD,GACzB,EAAKxtD,MAAMqB,MAAMw0B,QAAU,GAC3B,EAAK71B,MAAMqB,MAAM+uB,KAAO,KACxB,EAAKpwB,MAAMsvD,+BAK3B,uBAAK7uD,UAAU,eACX,gBAAC,GAAD,CACIA,UAAU,eACVN,YAAY,qBAEZysD,KAAM,CAAC,gBAAiB,YACxBxoD,KAAMlE,KAAKF,MAAMk9B,MACjBgwB,cAAe,SAAC7tD,EAAe8D,GAG3B,EAAKnD,MAAMk9B,MAAM79B,GAAS8D,EAC1B,EAAKnD,MAAMsvD,2BAEfrC,YAAa,SAAC5tD,GAEV,EAAKW,MAAMk9B,MAAMwN,OAAOrrC,EAAO,GAC/B,EAAKW,MAAMsvD,2BAEf3C,SAAU,SAACe,EAAmBL,EAAkBjtD,GAC5C,OAAqB,IAAbitD,EAAkBjtD,EAAM+U,KAAS/U,GAE7CssD,UAAW,SAACW,EAAkBM,EAAiB9sD,GAC3C,OAAiB,IAAbwsD,EAEI,gBAACttD,GAAA,EAAD,CACIK,MAAOutD,EACP9sD,SAAU,SAACT,GAAD,OAAmBS,EAAST,MAG3CutD,EAAWx4C,SAI9B,uBAAK1U,UAAU,iBAhF/B,GAA8CS,aCQjCquD,GAAb,YAII,WAAYvvD,GAAgB,IAAD,+BACvB,8CAAMA,KAHV8uB,eAE2B,EAGvB,EAAKztB,MAAQ,CACT2yB,QAAS,CAAE5zB,MAAO,GAAI0E,MAAO,KAGjC,EAAKgqB,UAAY,CACb,CAAE1uB,MAAO,IAAK0E,MAAO,gCACrB,CAAE1E,MAAO,IAAK0E,MAAO,iCACrB,CAAE1E,MAAO,IAAK0E,MAAO,iDACrB,CAAE1E,MAAO,IAAK0E,MAAO,gDACrB,CAAE1E,MAAO,IAAK0E,MAAO,gDACrB,CAAE1E,MAAO,IAAK0E,MAAO,6CACrB,CAAE1E,MAAO,IAAK0E,MAAO,gDACrB,CAAE1E,MAAO,IAAK0E,MAAO,6CACrB,CAAE1E,MAAO,IAAK0E,MAAO,8CACrB,CAAE1E,MAAO,KAAM0E,MAAO,uCACtB,CAAE1E,MAAO,KAAM0E,MAAO,8BACtB,CAAE1E,MAAO,KAAM0E,MAAO,gCACtB,CAAE1E,MAAO,KAAM0E,MAAO,iDACtB,CAAE1E,MAAO,KAAM0E,MAAO,+CACtB,CAAE1E,MAAO,KAAM0E,MAAO,gDACtB,CAAE1E,MAAO,KAAM0E,MAAO,mCACtB,CAAE1E,MAAO,KAAM0E,MAAO,kCACtB,CAAE1E,MAAO,KAAM0E,MAAO,kCACtB,CAAE1E,MAAO,KAAM0E,MAAO,+BACtB,CAAE1E,MAAO,KAAM0E,MAAO,kCACtB,CAAE1E,MAAO,KAAM0E,MAAO,iEACtB,CAAE1E,MAAO,KAAM0E,MAAO,sCACtB,CAAE1E,MAAO,KAAM0E,MAAO,gCA9BH,EAJ/B,sFAwCQ,IADA,IAAIgoC,EAAsC,GACjCnwC,EAAI,EAAGA,EAAIuD,KAAK4uB,UAAUlyB,OAAQD,IAAK,CAE5C,IADA,IAAIktC,GAAS,EACJ3kC,EAAI,EAAGA,EAAIhF,KAAKF,MAAM8uB,UAAUlyB,OAAQsI,IAC7C2kC,EACI3pC,KAAKF,MAAM8uB,UAAU5pB,GAAG8uB,QAAQ5zB,QAChCF,KAAK4uB,UAAUnyB,GAAGyD,OAAeypC,EAEpCA,IACDiD,EAAoBA,EAAkBzI,OAAOnkC,KAAK4uB,UAAUnyB,KAGpE,OAAOmwC,IAnDf,qCAuDyC,KAA7B5sC,KAAKmB,MAAM2yB,QAAQ5zB,QACnBF,KAAKF,MAAM8uB,UAAUlgB,KAAK,CACtBolB,QAAS9zB,KAAKmB,MAAM2yB,QACpBC,OAAQ,GACRE,eAAgB,GAChBC,OAAQ,GACRjD,QAAS,GACTmD,eAAgB,GAChBsY,YAAa,KAGjB1sC,KAAKF,MAAM6sC,sBACX3sC,KAAK+B,SAAS,CAAC+xB,QAAS,CAAE5zB,MAAO,GAAI0E,MAAO,SAnExD,sCAuEoBzF,GACZa,KAAKF,MAAM8uB,UAAU4b,OAAOrrC,EAAO,GACnCa,KAAKF,MAAM6sC,wBAzEnB,+BA6E2B,IAAD,OAClB,OACI,uBAAKpsC,UAAU,gBACX,uBAAKA,UAAU,UAAUG,MAAO,CAACqW,aAAc,WAC3C,uBAAKxW,UAAU,YAAf,kBACA,uBAAKA,UAAU,QAAf,uEAGA,uBAAKA,UAAU,eAEP,gBAACgD,GAAA,EAAD,CACIW,KAAMlE,KAAKF,MAAM8uB,UACjB/pB,aAAc,kBAAM,EAAK2nB,qBACzB1nB,UAAW,SAAC2nB,EAActtB,GAAf,OACP,EAAKutB,eAAeD,EAASttB,WA3FjE,0CAmGsC,IAAD,OAC7B,OACI,gCACA,gBAACwtB,GAAA,EAAD,KACI,gBAAC,GAAD,CACI/B,QAAS5qB,KAAK6sC,uBACd3sC,MAAOF,KAAKmB,MAAM2yB,QAClBnzB,SAAU,SAACT,GACP,EAAK6B,SAAS,CAAC+xB,QAAS5zB,QAGpC,gBAACysB,GAAA,EAAD,CAAWjsB,MAAO,CAAC2B,MAAO,QAAStB,UAAW,WAC1C,gBAAC,GAAD,CACIgF,KAAMikC,IACNplC,MAAM,cACNkB,QAAS,WACL,EAAKgnC,sBAnH7B,qCA0HmBhZ,EAAsB30B,GAA6B,IAAD,OACvDyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,CAAW1nB,QAAS,GAChB,gBAACuT,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAInY,UAAU,YACxBuzB,EAAQA,QAAQlvB,OAErB,gBAAC4T,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,EAAGhY,MAAO,CAACK,UAAW,UACjC,gBAAC,KAAD,CACIgF,KAAMukC,IACNxkC,QAAS,WACL,EAAKinC,gBAAgB5tC,MAE7B,gBAAC,KAAD,CACI4G,KAAMwkC,IACNzkC,QAAS,WACL,EAAKinC,gBAAgB5tC,QAIrC,uBAAKuB,MAAO,CAAC4F,SAAU,aACnB,uBAAK5F,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,gBACf,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,gBAACoW,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC7Y,GAAA,EAAD,CACII,YAAY,gCACZC,MAAO4zB,EAAQC,OACfpzB,SAAU,SAACT,GACP4zB,EAAQC,OAAS7zB,EACjB,EAAKJ,MAAM6sC,0BAGvB,gBAACn0B,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,0FACZC,MAAO4zB,EAAQG,eACfqY,MAAO,SAACpsC,GACJ4zB,EAAQG,eAAevlB,KAAKxO,GAC5B,EAAKJ,MAAM6sC,uBAEfhB,SAAU,SAACxsC,GACP20B,EAAQG,eAAeuW,OAAOrrC,EAAO,GACrC,EAAKW,MAAM6sC,2BAI3B,gBAAC9sC,GAAA,EAAD,CACII,YAAY,SACZC,MAAO4zB,EAAQI,OACfvzB,SAAU,SAACT,GACP4zB,EAAQI,OAASh0B,EACjB,EAAKJ,MAAM6sC,yBAEnB,gBAAC9sC,GAAA,EAAD,CACII,YAAY,qBACZC,MAAO4zB,EAAQ7C,QACftwB,SAAU,SAACT,GACP4zB,EAAQ7C,QAAU/wB,EAClB,EAAKJ,MAAM6sC,yBAEnB,gBAACn0B,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIzY,YAAY,iDACZC,MAAO4zB,EAAQM,eACfkY,MAAO,SAACpsC,GACJ4zB,EAAQM,eAAe1lB,KAAKxO,GAC5B,EAAKJ,MAAM6sC,uBAEfhB,SAAU,SAACxsC,GACP20B,EAAQM,eAAeoW,OAAOrrC,EAAO,GACrC,EAAKW,MAAM6sC,0BAGvB,gBAACn0B,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,GAAD,CACIwyB,OAAO,UACPF,OAAQ,SAAChO,GACLlJ,EAAQ4Y,YAAYh+B,KAAKsuB,EAAM,IAC/B,EAAKl9B,MAAM6sC,0BAGvB,gBAACn0B,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACVob,EAAQ4Y,YAAY9qC,IAAI,SAAC0gC,EAAKnjC,GAC3B,OACI,gBAAC,GAAD,CACIyF,MAAO09B,EAAIrtB,KACX/U,MAAOf,EAAM7B,WACbquC,SAAU,SAACzrC,GACP4zB,EAAQ4Y,YAAYlC,OAAO3mC,SAAS3D,GAAQ,GAC5C,EAAKJ,MAAM6sC,oCAxN3D,GAA0C3rC,a,UCR7BsuD,GAAb,sLAGQ,OACI,2BACI,gBAACC,GAAA,EAAD,CACIhvD,UAAS,UAAKP,KAAKF,MAAMS,UAAYP,KAAKF,MAAMS,UAAY,GAAnD,iBACTgZ,KAAMvZ,KAAKF,MAAM0vD,OACjBp3C,QAASpY,KAAKF,MAAMqY,YACpBs3C,sBAAoB,GACpB,gBAACptC,GAAA,EAAD,CAAMqtC,GAAI1vD,KAAKF,MAAM0vD,QACjB,uBAAKjvD,UAAU,SACVP,KAAKF,MAAMqY,YACR,uBAAKzX,MAAO,CAACK,UAAW,UACpB,gBAAC,KAAD,CACIgF,KAAM+/C,IACN9/C,KAAK,KACLF,QAAS9F,KAAKF,MAAMqY,eAG5B,KACJ,uBAAK5X,UAAU,UACVP,KAAKF,MAAMspB,QAEhB,uBAAK7oB,UAAU,WACVP,KAAKF,MAAM+d,SAEhB,uBAAKtd,UAAU,UACVP,KAAKF,MAAM6vD,gBA5B5C,GAAiC3uD,a,wjBC8E1B,IAAM4uD,GAAb,YAaI,WAAY9vD,GAAgB,IAAD,+BACvB,8CAAMA,KAVVkvC,aAS2B,IAR3BtF,gBAQ2B,IAP3BT,cAO2B,IAN3BH,gBAM2B,IAL3B1X,aAK2B,IAJ3B8a,YAI2B,IAF3B2jB,YAE2B,IA4L3BC,eAAiB,SAACrtD,GACdpB,KAAIC,IAAImB,EACJ,SAAChB,GACGC,QAAQC,IAAIF,GACZ,EAAKM,SAAS,CAAC0oD,gBAAiB,EAAKtpD,MAAMspD,gBAAkB,IAC7D,IAAM5mB,EAAiBpiC,EAAS2uB,gBAC1B1B,EAAcmV,EAAerR,oBAC7BsB,EAAU+P,EAAejQ,gBAE/B,EAAK7xB,SAAS,CAACosB,OAAQK,GAASuhC,cAActuD,EAAU,EAAK3B,MAAMiI,MAAMurB,OAAjB,SAEpD5E,GACA,EAAK3sB,SAAS,CAAC2sB,YAAaF,GAASwhC,mBAAmBthC,EAAajtB,KAGrEqyB,GACA,EAAK/xB,SAAS,CAAC6sB,UAAWkF,EAAQD,aAAajyB,IAAI,SAAA1B,GAC/C,MAAO,CACH4zB,QAAS,CAAE5zB,MAAO,GAAI0E,MAAO1E,EAAM4zB,SACnCC,OAAQ7zB,EAAMA,MACd+zB,eAAgB/zB,EAAM8zB,gBACtBE,OAAQh0B,EAAMg0B,OACdjD,QAAS/wB,EAAM+wB,QACfmD,eAAgBl0B,EAAMi0B,gBACtBuY,YAAaxsC,EAAMm0B,kBAK3B5yB,EAASszB,UAAUr4B,OAAS,GAC5B2E,KAAIC,IAAJ,gCAAiCG,EAASszB,WACtC,SAACtzB,GACG,EAAKM,SAAS,CAACioB,OAAQwE,GAAS8V,cAAc7iC,KAC9CJ,KAAIC,IAAJ,gCAAiCG,EAASszB,UAA1C,aACI,SAACtzB,GACGC,QAAQC,IAAIF,IAEhB,SAACtB,GACGuB,QAAQC,IAAIxB,MAGxB,SAACA,GACGuB,QAAQC,IAAIxB,KAIpBsB,EAAS4zB,UAAU34B,OAAS,GAC5B2E,KAAIC,IAAJ,gCAAiCG,EAAS4zB,WACtC,SAAC5zB,GACG,EAAKM,SAAS,CAAC0pB,OAAQ+C,GAAS4J,cAAc32B,MAElD,SAACtB,GACGuB,QAAQC,IAAIxB,MAK5B,SAACA,GACGuB,QAAQC,IAAIxB,MAtPG,EA0P3B8vD,aAAe,WACX,IAAIJ,EAA+B,GAE7BnhC,EAAc,EAAKvtB,MAAMutB,YAE/B,GAAIA,EAAa,CAGb,IAAIwhC,EAAiBxhC,EAAYoC,UAAUhH,OAAO,SAAA+G,GAC9C,IAAIs/B,GAAU,EAId,OAHAzhC,EAAY4H,WAAW10B,IAAI,SAAA20B,GACvB45B,EAAU55B,EAAU1F,UAAU3wB,QAAU2wB,EAAUA,UAAU3wB,OAAeiwD,KAEvEA,IAGRD,EAAexzD,OAAS,IACxBmzD,EAAOnhD,KAAK,CACRkwC,QAAS,0EACTwR,QAASF,EAAetuD,IAAI,SAAAivB,GACxB,MAAM,GAAN,OAAUA,EAAUA,UAAU3wB,MAA9B,YAAuC2wB,EAAUA,UAAUjsB,WAGnE,EAAK7C,SAAS,CAACwoD,YAAa,KAGpC,OAAOsF,GApRgB,EAuR3BlH,YAAc,SAAC0H,EAAsBzH,GACjC,IAAIC,GAAW,EAET7rB,EAAQ,IAAI8rB,SAClBuH,EAASjlC,QAAQ,SAAA8E,GACTA,EAAKA,MAAQA,EAAKA,KAAL,OAAsBA,EAAKA,KAAL,QACnC8M,EAAM+rB,OAAN,sBAAoC74B,EAAKA,MACzC24B,GAAW,KAInB,EAAK9mD,SAAS,CAACinD,UAAU,IAErBH,EACAxnD,KAAI4nD,aAAa,gCAAiCjsB,EAC9C,SAACksB,GACGN,EAAWM,IAEf,SAAC/oD,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CACVinD,UAAU,EACVG,gBAAiB,8BAI7BP,EAAW,KAjTQ,EAqT3B0H,gBAAkB,SAACznD,GACf,IAAM6lB,EAAc,EAAKvtB,MAAMutB,YACzBE,EAAY,EAAKztB,MAAMytB,UAE7B,IAAM,EAAKztB,MAAM6oB,QAAW,EAAK7oB,MAAMsqB,UAAaiD,GAAgBE,GAApE,CAEA,IAAMyhC,EAAW,EAAKlvD,MAAMutB,YACxB,EAAKvtB,MAAMutB,YAAYsO,MAAMlT,OAAO,SAAAoG,GAAI,QAAIA,EAAKA,OAAQA,EAAKA,KAAL,QACzD,GAEJ,EAAKy4B,YAAY0H,EAAU,SAACnH,GACxB,IAAM//B,EAAUqF,GAAS+hC,oBACrB,EAAKpvD,MAAMgtB,QACV+6B,EAAe/oD,OAAS+oD,EAAexsD,OAAS,EAC7CgyB,EACIA,EAAYsO,MACPp7B,IAAI,SAAAsuB,GACD,OAAO,MACAA,EAAKA,KADZ,CAEIyF,QAASzF,EAAKyF,YAGrB7L,OAAO,SAAAoG,GAAI,QAAIA,GAAOA,EAAI,QAC1BiU,OACG+kB,EAAetnD,IAAI,SAACH,EAAUtC,GAC1B,OAAO,MACAsC,EADP,CAEIk0B,QAAS06B,EAASlxD,GAAOw2B,aAIzC,GAEJjH,EACIA,EAAYsO,MAAMp7B,IAAI,SAAAsuB,GAClB,OAAO,MACAA,EAAKA,KADZ,CAEIyF,QAASzF,EAAKyF,YAGtB,GAER,EAAKx0B,MAAM6oB,OACX,EAAK7oB,MAAMsqB,OACX,EAAKtqB,MAAMutB,YACX,EAAKvtB,MAAMytB,WAGfltB,QAAQC,IAAIwnB,GACZ9nB,KAAIyoD,IAAJ,gCAAiC,EAAKhqD,MAAMiI,MAAMurB,OAAjB,UAAuCnK,EACpE,SAAC1nB,GACGC,QAAQC,IAAIF,GACZ+uD,EAAoB,EAAK1wD,MAAMiI,MAAMurB,OAAjB,SAExB,SAACnzB,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CACVinD,UAAU,EACVG,gBAAiB,+BAK7B,IAAMqH,EAAsB,SAACC,GACzBzjC,GAAa1rB,IAAb,gBAA0BmvD,GACtB,SAAChvD,GACGC,QAAQC,IAAIF,GACqC,kBAA7CA,EAAQ,aAAiB,GAAzB,UACAivD,EAAsBD,GAEtB5nD,KAGR,SAAC1I,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CACVinD,UAAU,EACVG,gBAAiB,gCAM3BuH,EAAwB,SAACD,GAC3BzjC,GAAa88B,IAAb,gBAA0B2G,EAA1B,eAA+C,GAC3C,SAAChvD,GACGC,QAAQC,IAAIF,GACZoH,KAEJ,SAAC1I,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CACVinD,UAAU,EACVG,gBAAiB,oCAlZd,EA0Z3BmB,WAAa,WACT,IAAMtgC,EAAS,EAAK7oB,MAAM6oB,OACpB0E,EAAc,EAAKvtB,MAAMutB,YACzBE,EAAY,EAAKztB,MAAMytB,UAE7B,GAAK5E,IAAY0E,GAAgBE,GAAjC,CAEA,IAAMyhC,EAAW,EAAKlvD,MAAMutB,YAAc,EAAKvtB,MAAMutB,YAAYsO,MAAQ,GAEzE,EAAK2rB,YAAY0H,EAAU,SAACnH,GACxB,GAAK,EAAK/nD,MAAM6oB,OAAhB,CAIA,IAAMb,EAAU,CACZyL,QAAS3uB,aAAY,QACrBywB,UAAW,EAAKv1B,MAAMgtB,OAAO7a,GAC7BuhB,OAAQ,gBACR5yB,QAAS,gBACT6yB,UAAW,IAAIj3B,KACfoF,KAAM,CACF0tD,aAAc,EAAKxvD,MAAMopD,YACzBvgC,OAAQ,EAAK7oB,MAAM6oB,OACnBmE,OAAQ,EAAKhtB,MAAMgtB,OACnBO,YAAaA,EAAW,MACjBA,EADiB,CAEpBsO,MAAOtO,EAAYsO,MACdlT,OAAO,SAAAoG,GAAI,OAAIA,EAAKA,KAAOA,EAAKA,KAAL,MAAqB,KAChDiU,OACG+kB,EAAetnD,IAAI,SAAAsuB,GACf,MAAO,CACHyF,QAASzF,EAAKjb,KACdib,KAAMA,aAItB5vB,EACJsuB,UAAW,EAAKztB,MAAMytB,UACtBgiC,aAAc,EAAKzvD,MAAM0vD,YACzBC,oBAAqB,EAAK3vD,MAAM4vD,mBAChCC,gBAAiB,EAAK7vD,MAAM8vD,eAC5BC,gBAAiB,EAAK/vD,MAAMgwD,eAC5BC,gBAAiB,EAAKjwD,MAAMkwD,eAC5BC,mBAAoB,EAAKnwD,MAAMowD,iBAC/BC,WAAY,EAAKrwD,MAAMswD,YAI/BpwD,KAAIioD,KAAK,MAAOjmD,KAAKC,UAAU6lB,GAC3B,SAAC1nB,GACGC,QAAQC,IAAIF,GACRA,EAASK,IACT,EAAKC,SAAS,CACVinD,UAAU,EACVG,gBAAiB,kBACjBzb,SAAU,IAAI7vC,OAGlB,EAAKkE,SAAS,CACVinD,UAAU,EACVG,gBAAiB,8BAI7B,SAAChpD,GACGuB,QAAQC,IAAIxB,GACZ,EAAK4B,SAAS,CACVinD,UAAU,EACVG,gBAAiB,oCA3djC,EAAKhoD,MAAQ,CACTopD,YAAa,EACbE,gBAAiB,EACjBiH,uBAAuB,EACvB1I,UAAU,EACVG,gBAAiB,KACjBh7B,OAAQ,CACJc,cAAe,GACfF,cAAe,GACfI,aAAc,GACdE,WAAY,GACZ9E,WAAY,GACZiF,WAAY,GACZE,SAAU,CAAExvB,MAAO,GAAI0E,MAAO,IAC9B+qB,WAAY,GACZE,WAAY,GACZ7B,UAAW,GACXvuB,WAAY,GACZC,aAAc,GACd6wB,QAAS,GACTE,MAAO,CAAEnd,GAAI,GAAI2B,KAAM,IACvB+a,gBAAiB,GACjB8T,gBAAiB,GACjBhX,SAAU,GACVmK,SAAU,GACV7tB,OAAQ,OACRsrB,UAAW,CAAEphB,GAAI,IAAK2B,KAAM,2BAC5BmZ,YAAa,IAAIvwB,KACjBkvB,YAAa,IAAIlvB,KACjBkmC,cAAe,MAEnB8sB,YAAa,CACT5/B,QAAS,GACTrzB,KAAM,IAAIC,KACVm4B,aAAc,GAElB+6B,mBAAoB,CAChB99B,SAAU,GACVkD,KAAM,EACNhD,WAAY,GAEhB89B,eAAgB,CACZpgC,UAAW,CAAE3wB,MAAO,GAAI0E,MAAO,IAC/BqsB,QAAS,GACToF,SAAS,EACTkB,WAAW,GAEf45B,eAAgB,CACZ56B,UAAW,CAAEr2B,MAAO,GAAI0E,MAAO,GAAI0uB,OAAQ,CAAC,GAAI,cAChDzC,UAAW,CAAE3wB,MAAO,GAAI0E,MAAO,IAC/BqsB,QAAS,GACTuF,OAAQ,EACR3E,OAAQ,GAEZw/B,eAAgB,CACZ5/B,UAAW,CAAEvxB,MAAO,GAAI0E,MAAO,IAC/BisB,UAAW,CAAE3wB,MAAO,GAAI0E,MAAO,IAC/B2xB,UAAW,CAAEr2B,MAAO,GAAI0E,MAAO,IAC/BqsB,QAAS,GACTrzB,KAAM,IAAIC,KACVg0B,OAAQ,GAEZ0/B,iBAAkB,CACdt8C,KAAM,GACNxU,KAAM,CAAEP,MAAO,GAAI0E,MAAO,IAC1BitB,OAAQ,GAEZ4/B,UAAW,CACP97B,QAAS,GACTzF,KAAM,OAId,EAAK8e,QAAU,CACX,CAAE9uC,MAAO,EAAG0E,MAAO,WACnB,CAAE1E,MAAO,EAAG0E,MAAO,WACnB,CAAE1E,MAAO,EAAG0E,MAAO,uBACnB,CAAE1E,MAAO,EAAG0E,MAAO,aACnB,CAAE1E,MAAO,EAAG0E,MAAO,cACnB,CAAE1E,MAAO,EAAG0E,MAAO,cACnB,CAAE1E,MAAO,EAAG0E,MAAO,kCACnB,CAAE1E,MAAO,EAAG0E,MAAO,iBACnB,CAAE1E,MAAO,EAAG0E,MAAO,uBAGvB,EAAKkkC,WAAa,GAClB,EAAKoD,OAAS,GACd,EAAK9a,QAAU,GACf,EAAK6X,SAAW,GAChB,EAAKS,WAAa,GAClB,EAAKmmB,OAAS,GA7FS,EAb/B,mFA6GyB,IAAD,OAEhBxuD,KAAIC,IAAI,gDAC8B2E,aAAY,QAD1C,iGAGgCjG,KAAKF,MAAMiI,MAAMurB,OAAjB,UACpC,SAAC7xB,GACOA,EAAS/E,OAAS,EAClB,EAAKqF,SAAS,CACV2rC,SAAU,IAAI7vC,KAAK4D,EAAS,GAAGqzB,WAC/B21B,gBAAiB,EAAKtpD,MAAMspD,gBAAkB,EAC9CF,YAAa9oD,EAAS,GAAGwB,KAAK0tD,aAC9B3mC,OAAQvoB,EAAS,GAAGwB,KAAK+mB,OACzBmE,OAAQ1sB,EAAS,GAAGwB,KAAKkrB,OACzBO,YAAajtB,EAAS,GAAGwB,KAAKyrB,YAC9BE,UAAWntB,EAAS,GAAGwB,KAAK2rB,UAC5BiiC,YAAapvD,EAAS,GAAGwB,KAAK2tD,aAC9BG,mBAAoBtvD,EAAS,GAAGwB,KAAK6tD,oBACrCG,eAAgBxvD,EAAS,GAAGwB,KAAK+tD,gBACjCG,eAAgB1vD,EAAS,GAAGwB,KAAKiuD,gBACjCG,eAAgB5vD,EAAS,GAAGwB,KAAKmuD,gBACjCG,iBAAkB9vD,EAAS,GAAGwB,KAAKquD,mBACnCG,UAAWhwD,EAAS,GAAGwB,KAAKuuD,aAGhC,EAAK1B,eAAL,gCAA6C,EAAKhwD,MAAMiI,MAAMurB,OAAjB,YAGrD,SAACnzB,GACGuB,QAAQC,IAAIxB,GACZ,EAAK2vD,eAAL,gCAA6C,EAAKhwD,MAAMiI,MAAMurB,OAAjB,aAGrDjyB,KAAIC,IAAI,aACJ,SAACG,GACG,EAAKM,SAAS,CAAC0oD,gBAAiB,EAAKtpD,MAAMspD,gBAAkB,IAC7D,EAAK3hB,WAAarnC,EAASG,IAAI,SAAA8tB,GAC3B,MAAO,CACHxvB,MAAOwvB,EAASi2B,YAChB/gD,MAAO8qB,EAASza,SAI5B,SAAC9U,GACGuB,QAAQC,IAAIxB,KAGpBkB,KAAIC,IAAI,iCACJ,SAACG,GACGC,QAAQC,IAAIF,GACZ,EAAKM,SAAS,CAAC0oD,gBAAiB,EAAKtpD,MAAMspD,gBAAkB,IAC7D,EAAK/gB,WAAajoC,EAASG,IAAI,SAAAovB,GAC3B,MAAO,CACH9wB,MAAO8wB,EAAU45B,UACjBhmD,MAAOosB,EAAU65B,4BAI7B,SAAC1qD,GACGuB,QAAQC,IAAIxB,KAGpBkB,KAAIC,IAAI,0BACJ,SAACG,GACG,EAAKM,SAAS,CAAC0oD,gBAAiB,EAAKtpD,MAAMspD,gBAAkB,IAC7D,EAAKxhB,SAAWxnC,EAASG,IAAI,SAAA8vB,GACzB,MAAO,CACHxxB,MAAOwxB,EAAQuM,KACfr5B,MAAO8sB,EAAQ9sB,UAI3B,SAACzE,GACGuB,QAAQC,IAAIxB,KAGpBkB,KAAIC,IAAI,UACJ,SAACG,GACG,EAAKM,SAAS,CAAC0oD,gBAAiB,EAAKtpD,MAAMspD,gBAAkB,IAC7D,EAAKr5B,QAAU3vB,EAASG,IAAI,SAAAkwB,GACxB,MAAO,CACH5xB,MAAO4xB,EAAOhwB,IACd8C,MAAQ,OAASktB,EAAOsD,WAAc,IAAMtD,EAAOoD,UACnD5B,OAAQ,CAACxB,EAAOrxB,UAI5B,SAACN,GACGuB,QAAQC,IAAIxB,OArM5B,+BAif2B,IAAD,OAClB,OACI,gBAACqY,EAAA,EAAD,CAAM3R,WAAS,EAACtG,UAAU,sBACrBP,KAAKmB,MAAMspD,kBAAoBmF,EAAiB3E,mBAAqBjrD,KAAKmB,MAAM6nD,SAC7E,uBACItoD,MAAO,CACHkG,gBAAiB,YACjBL,OAAQ,IACRD,SAAU,QACVjE,MAAO,OACPC,OAAQ,SACZ,gBAAC,GAAD,CAASA,OAAO,WAGnB,KAEL,gBAAC4oD,GAAA,EAAD,CACLC,aAAc,CACZC,SAAU,MACVC,WAAY,SAEd9xC,OAAMvZ,KAAKmB,MAAMgoD,gBACjBmC,iBAAkB,IAClBlzC,QAAS,WACI,EAAKrW,SAAS,CAAConD,gBAAiB,QAEpCvK,QAAS5+C,KAAKmB,MAAMgoD,kBAExB,gBAAC,GAAD,CACI5oD,UAAU,QACVivD,OAAQxvD,KAAKmB,MAAMuwD,sBACnBv5C,YAAa,kBAAM,EAAKpW,SAAS,CAAC2vD,uBAAuB,KACzDtoC,OAAO,sBACPvL,QACI,uBAAKtd,UAAU,YACVP,KAAK6vD,OAAOjuD,IAAI,SAAAzB,GACb,OACI,gCACA,yBAAIA,EAAMy+C,SACV,yBACKz+C,EAAMiwD,QAAQxuD,IAAI,SAAAd,GACf,OAAO,uCAAWA,WAQ1C6uD,OACI,gBAACx2C,EAAA,EAAD,CAAQ/H,QAAQ,WAAWvG,MAAM,UAC7B/E,QAAS,WACL,EAAK/D,SAAS,CAAC2vD,uBAAuB,MAF9C,UAQP1xD,KAAKmB,MAAMgtB,OACR,gBAAC,GAAD,CACInE,OAAQhqB,KAAKmB,MAAM6oB,OACnByB,OAAQzrB,KAAKmB,MAAMsqB,OACnB0C,OAAQnuB,KAAKmB,MAAMgtB,OACnB2Y,aAAa,SACb3Z,sBAAoB,IACxB,KAEHntB,KAAKmB,MAAMutB,YACR1uB,KAAK2xD,uBAAuB3xD,KAAKmB,MAAMutB,aACvC1uB,KAAKmB,MAAMytB,UACX5uB,KAAK4xD,qBAAqB5xD,KAAKmB,MAAMytB,WACrC,KAEJ,gBAAC,GAAD,CACIwf,uBAAyD,YAAjCpuC,KAAKmB,MAAMgtB,OAAO1uB,WAC1CsuC,eAAa,EACbE,iBAAe,EACfP,SAAU1tC,KAAKmB,MAAMusC,SACrBD,aAAc,WACV,EAAK6c,cAETxc,SAAW,kBAAM,MACjBE,WAAY,kBAAM,MAClBG,kBAAoB,WAChB,EAAK0hB,OAAS,EAAKI,eACO,GAAtB,EAAKJ,OAAOnzD,OACZ,EAAK4zD,gBAAgB,WACjB,EAAKxwD,MAAMmmB,QAAQvX,KACf,kCACA,EAAK5O,MAAMiI,MAAMurB,OAAjB,OAAoC,IACpC,EAAKxzB,MAAMiI,MAAMurB,OAAjB,MAAmC,IACnC,EAAKxzB,MAAMiI,MAAMurB,OAAjB,UACJ1rB,OAAOC,SAAS2B,WAGpB,EAAKzH,SAAS,CAAC2vD,uBAAuB,KAG9CxjB,eAAgB,WACZ,EAAKoiB,gBAAgB,WACjB,EAAKxwD,MAAMmmB,QAAQvX,KAAK,2BACxB9G,OAAOC,SAAS2B,iBAtlB5C,6CA6lB2BklB,GAA+C,IAAD,OACjE,OACI,uBAAKnuB,UAAU,gBACX,gBAAC,GAAD,CACIyuC,QAAShvC,KAAKgvC,QACdJ,YAAa5uC,KAAKmB,MAAMopD,YACxBxb,eAAgB,SAAC5vC,GACb,EAAK4C,SAAS,CAACwoD,YAAaprD,OAGR,IAA3Ba,KAAKmB,MAAMopD,YACR,gBAAC,GAAD,CACIz9B,SAAU9sB,KAAKmB,MAAMgtB,OAAOrB,SAC5BgG,QAASpE,EAAYoE,QACrBmD,eAAgBvH,EAAYuH,eAC5BnF,UAAWpC,EAAYoC,UACvBwF,WAAY5H,EAAY4H,WACxB9E,WAAY9C,EAAY8C,WACxBnd,MAAOqa,EAAYra,MACnBsc,SAAUjC,EAAYiC,SACtB+B,aAAchE,EAAYgE,aAC1BE,gBAAiBlE,EAAYkE,gBAC7BY,SAAU9E,EAAY8E,SACtBqD,iBAAkBnI,EAAYmI,iBAC9BC,UAAWpI,EAAYoI,UACvBE,cAAetI,EAAYsI,cAC3Bg1B,eAAgB,SAAC9rD,GAAD,OAAmB,EAAK6B,SAAS,CAACwoD,YAAarqD,OAGxC,IAA3BF,KAAKmB,MAAMopD,YACX,gBAAC,GAAD,CACI77B,YAAaA,EACboE,QAASpE,EAAYoE,QACrB3xB,MAAOnB,KAAKmB,MAAM0vD,YAClBxD,oBAAqB,WACjB,EAAKtrD,SAAS,CAAC2sB,YAAaA,OAGT,IAA3B1uB,KAAKmB,MAAMopD,YACXvqD,KAAKmB,MAAMgtB,OACP,gBAAC,GAAD,CACI8H,eAAgBvH,EAAYuH,eAC5B90B,MAAOnB,KAAKmB,MAAM4vD,mBAClBnD,eAAgB5tD,KAAK8oC,WACrBnY,SAAUjC,EAAYiC,SACtB+B,aAAchE,EAAYgE,aAC1BE,gBAAiBlE,EAAYkE,gBAC7Bi7B,2BAA4B,WACxB,EAAK9rD,SAAS,CAAC2sB,YAAaA,OAEpC,KAEuB,IAA3B1uB,KAAKmB,MAAMopD,YACXvqD,KAAKmB,MAAMgtB,OACP,gBAAC,GAAD,CACI2C,UAAWpC,EAAYoC,UACvB3vB,MAAOnB,KAAKmB,MAAM8vD,eAClB36B,WAAY5H,EAAY4H,WACxB9E,WAAY9C,EAAY8C,WACxB48B,cAAepuD,KAAK0pC,WACpBtT,sBAAuB1H,EAAY0H,sBACnCk4B,4BAA6B,WACzB,EAAKvsD,SAAS,CAAC2sB,YAAaA,KAEhCw/B,yBAA0B,SAAC/uD,GACvB,EAAK4C,SAAS,SAAA6kD,GAAS,aAChBA,EADgB,CAEnBl4B,YAAY,MACLA,EADI,CAEP0H,sBAAuBj3B,WAIvC,KAEuB,IAA3Ba,KAAKmB,MAAMopD,YACX,gBAAC,GAAD,CACIj0B,WAAY5H,EAAY4H,WACxBn1B,MAAOnB,KAAKmB,MAAMgwD,eAClB3C,eAAgBxuD,KAAKoxB,QACrBg9B,cAAe1/B,EAAYoC,UAC3B29B,6BAA8B,WAC1B,EAAK1sD,SAAS,CAAC2sB,YAAaA,OAGT,IAA3B1uB,KAAKmB,MAAMopD,YACX,gBAAC,GAAD,CACI/4B,WAAY9C,EAAY8C,WACxBrwB,MAAOnB,KAAKmB,MAAMkwD,eAClB1C,eAAgB3uD,KAAKipC,SACrBmlB,cAAe1/B,EAAYoC,UAC3B09B,eAAgBxuD,KAAKoxB,QACrBw9B,6BAA8B,WAC1B,EAAK7sD,SAAS,CAAC2sB,YAAaA,OAGT,IAA3B1uB,KAAKmB,MAAMopD,YACX,gBAAC,GAAD,CACI73B,aAAchE,EAAYgE,aAC1Bc,SAAU9E,EAAY8E,SACtB1G,SAAU4B,EAAY5B,SACtB8J,OAAQlI,EAAYkI,OACpBC,iBAAkBnI,EAAYmI,iBAC9BC,UAAWpI,EAAYoI,UACvBE,cAAetI,EAAYsI,cAC3Bk4B,0BAA2B,SAACvd,EAAkBzxC,GAC1C,EAAK6B,SAAS,SAAA6kD,GAAS,aAChBA,EADgB,CAEnBl4B,YAAY,MACLA,EADI,gBAENijB,EAAWzxC,WAKD,IAA3BF,KAAKmB,MAAMopD,YACX,gBAAC,GAAD,CACIl2C,MAAOqa,EAAYra,MACnBlT,MAAOnB,KAAKmB,MAAMowD,iBAClBxC,wBAAyB,WACrB,EAAKhtD,SAAS,CAAC2sB,YAAaA,OAGT,IAA3B1uB,KAAKmB,MAAMopD,YACX,gBAAC,GAAD,CACIvtB,MAAOtO,EAAYsO,MACnB77B,MAAOnB,KAAKmB,MAAMswD,UAClBrC,wBAAyB,WACrB,EAAKrtD,SAAS,CAAC2sB,YAAaA,OAKpC,QAluBpB,2CAuuByBE,GAAwC,IAAD,OACxD,OACI,gBAAC,GAAD,CACIA,UAAWA,EACX+d,oBAAqB,WACjB,EAAK5qC,SAAS,CAAC6sB,UAAWA,WA5uB9C,GAAsC5tB,aAAzB4uD,GAEF3E,kBAAoB,E,ICzFvB/jC,GAAa2qC,GAAb3qC,SACA3G,GAAqBuxC,GAAW9uC,GAAhCzC,iBAGO2G,MAAQ,uBAAC,qCAAAnY,EAAA,qEACuC,+BADvC,uBACjBgjD,EADiB,EACjBA,SAAWC,EADM,EACNA,gBAAiBC,EADX,EACWA,mBAC3Bl4C,EAAYm4C,aAChBF,EACAC,EAFgBC,CAGhBH,GALoB,kBAMf,CAACI,QAASp4C,IANK,yCAOrB,CACDqN,SAAU,gBAAC,GAAD,QCTCgrC,GAAb,sLAE2B,IAAD,OAClB,OACI,uBAAK7xD,UAAU,iBACX,gBAACiY,EAAA,EAAD,CAAMjY,UAAU,SAASsG,WAAS,EAAC6I,QAAS,GACvC1P,KAAKF,MAAM+E,gBAGf7E,KAAKF,MAAMmD,KAAKrB,IAAI,SAAC6qB,EAASttB,GAC3B,IAAMkzD,EAAalzD,EAAQ,IAAM,EAAI,UAAY,UACjD,OACI,uBAAKoB,UAAU,OAAOG,MAAO,CAACkG,gBAAiByrD,IAC1C,EAAKvyD,MAAMgF,UAAU2nB,EAASttB,WAb3D,GAAkC6B,a,wjBCM3B,IAAMsxD,GAAb,YAEI,WAAYxyD,GAAgB,IAAD,+BACvB,8CAAMA,KAGVyyD,kBAAoB,SAAC1hC,GACjB,IAAIyG,EAAQ,EAIZ,OAHAzG,EAAUW,WAAW5vB,IAAI,SAAA6vB,GACrB6F,GAAS7F,EAAUI,SAEhByF,GATgB,EAY3BD,0BAA4B,WACxB,IAAIC,EAAQ,EAMZ,OALA,EAAKx3B,MAAM6uB,UAAUmC,UAAUlvB,IAAI,SAAAivB,GAC/BA,EAAUW,WAAW5vB,IAAI,SAAA6vB,GACrB6F,GAAuC,aAA7B7F,EAAUU,eAAgCV,EAAUI,OAAS,MAGxEyF,GAnBgB,EAF/B,wEAwB2B,IAAD,OAClB,OACI,uBAAK/2B,UAAU,WACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,YAAf,oCACA,uBAAKA,UAAU,eACX,uBAAKA,UAAU,cAAf,YACA,uBAAKA,UAAU,cACVP,KAAKF,MAAM6uB,UAAUgC,SAASzwB,MAAQ,MAAQF,KAAKF,MAAM6uB,UAAUgC,SAAS/rB,OAEjF,uBAAKlE,MAAO,CAACmV,MAAO,UAChB,wBAAMtV,UAAU,cAAhB,gBACA,wBAAMG,MAAO,CAAC+W,WAAY,UAC1B,wBAAMlX,UAAU,YACX,OAASnE,KAAe8vB,aAAalsB,KAAKq3B,6BAA6B,MAIpF,uBAAK92B,UAAU,eACX,gBAAC,GAAD,CACI0C,KAAMjD,KAAKF,MAAM6uB,UAAUmC,UAC3BjsB,aAAc,kBAAM,EAAKA,gBACzBC,UAAW,SAAC2nB,EAActtB,GAAf,OACP,EAAK2F,UAAU2nB,EAASttB,OAEpC,uBAAKoB,UAAU,eAjD/B,qCAuDQ,IAAMiyD,EAAkB,CACpBrzC,OAAQ,EACRpP,QAAS,iBAGb,OACI,gCACI,gBAACyI,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,WAAWG,MAAO8xD,GAAjC,cAEJ,gBAACh6C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,WAAWG,MAAO8xD,GAAjC,WAEJ,gBAACh6C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,WAAWG,MAAO8xD,GAAjC,qBAEJ,gBAACh6C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,WAAWG,MAAK,MAAM8xD,EAAN,CAAuBzxD,UAAW,WAAjE,gCAxEpB,gCAgFc8vB,EAA0BmgB,GAA8B,IAAD,OAC7D,OACI,gCACI,gBAACx4B,EAAA,EAAD,CAAMjY,UAAU,gBAAgBsG,WAAS,GACrC,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACVmY,EAAUG,UAAU9wB,MAAQ,MAAQ2wB,EAAUG,UAAUpsB,OAE7D,gBAAC4T,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACVmY,EAAUO,QAAQ,GAAGnc,MAE1B,gBAACuD,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACV,OAAStc,KAAe8vB,aAAa2E,EAAUO,QAAQ,GAAGE,KAAK,IAEpE,gBAAC9Y,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,EAAGhY,MAAO,CAAC6J,WAAY,OAAQxJ,UAAW,UACpD,OAAS3E,KAAe8vB,aAAalsB,KAAKuyD,kBAAkB1hC,IAAY,KAGjF,uBAAKtwB,UAAU,gBACdswB,EAAUW,WAAW5vB,IAAI,SAAC6vB,EAAWtyB,GAClC,OAAO,EAAKszD,gBAAgBhhC,EAAWtyB,QAnG3D,sCAyGoBsyB,EAA0BtyB,GAA6B,IAAD,OAClE,OACI,gCACA,uBAAKoB,UAAU,gBACf,uBAAKA,UAAU,WAEX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,2BACI,gBAACF,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,EAAGhY,MAAO,CAACqP,QAAS,WAAYN,UAAW,SACtD,uBAAKlP,UAAU,eAAepB,EAAQ,IAE1C,gBAACqZ,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAInY,UAAU,YACxBkxB,EAAUC,QAAQxxB,MAAQ,MAAQuxB,EAAUC,QAAQ9sB,WAOzE,gBAAC4T,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,2BACI,gBAACF,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACf,gBAACF,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACX,uBAAKnY,UAAU,eACX,uBAAKA,UAAU,cAAf,UACA,uBAAKA,UAAU,cAAc,OAASnE,KAAe8vB,aAAauF,EAAUI,QAAQ,KAExF,uBAAKtxB,UAAU,eACX,uBAAKA,UAAU,cAAf,wBACA,uBAAKA,UAAU,cAAckxB,EAAUO,OAAS,MAAQ,OAE5D,uBAAKzxB,UAAU,eACX,uBAAKA,UAAU,cAAf,qBACA,uBAAKA,UAAU,cAAcnE,KAAeuqD,mBAAmBl1B,EAAUgG,iBAM7F,gBAACjf,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,eACX,uBAAKA,UAAU,cAAf,qBACA,uBAAKA,UAAU,cAAc,cAEjC,uBAAKA,UAAU,eACX,uBAAKA,UAAU,cAAf,qBACA,uBAAKA,UAAU,cAAc,eAEjC,uBAAKA,UAAU,eACX,uBAAKA,UAAU,cAAf,UACA,uBAAKA,UAAU,cAAc,0GAGrC,gBAACiY,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,eACX,uBAAKA,UAAU,cAAf,qBACA,gBAAC,GAAD,CACIqE,MAAM,UACNsrC,iBAA+C,aAA7Bze,EAAUU,eAC5BxxB,SAAU,WACN8wB,EAAUU,eAAiB,WAC3B,EAAKryB,MAAMgqC,2BAEW,aAA7BrY,EAAUU,eACP,gBAAC,GAAD,CACIjyB,MAAOuxB,EAAUc,eACjBtyB,YAAY,qBACZioC,SAAO,EACPvnC,SAAU,SAACT,GACPuxB,EAAUc,eAAiBryB,EAC3B,EAAKJ,MAAMgqC,2BAEnB,KACJ,gBAAC,GAAD,CACIllC,MAAM,aACNsrC,iBAA+C,gBAA7Bze,EAAUU,eAC5BxxB,SAAU,WACN8wB,EAAUU,eAAiB,cAC3B,EAAKryB,MAAMgqC,2BAEnB,gBAAC,GAAD,CACIllC,MAAM,UACNsrC,iBAA+C,YAA7Bze,EAAUU,eAC5BxxB,SAAU,WACN8wB,EAAUU,eAAiB,UAC3B,EAAKryB,MAAMgqC,6BAI3B,gBAACtxB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,eACX,uBAAKA,UAAU,cAAf,WACA,gBAAC,GAAD,CACIL,MAAOuxB,EAAUY,kBACjBkZ,YAAa,EACb5qC,SAAU,SAACT,GACPuxB,EAAUY,kBAAoBnyB,EAC9B,EAAKJ,MAAMgqC,oCA9M/C,GAA6C9oC,a,wjBCetC,IAAM0xD,GAAb,YAQI,WAAY5yD,GAAgB,IAAD,+BACvB,8CAAMA,KAPV6yD,SAAW,WAMgB,EAL3BC,YAAc,cAKa,EAJ3BC,QAAU,UAIiB,EAF3BC,cAE2B,IAkB3BP,kBAAoB,SAAC1hC,GACjB,IAAIyG,EAAQ,EAIZ,OAHAzG,EAAUW,WAAW5vB,IAAI,SAAA6vB,GACrB6F,GAAS7F,EAAUI,SAEhByF,GAvBgB,EA0B3By7B,sBAAwB,SAACpkC,GASrB,OAR2BA,EAAUmC,UAAUlvB,IAAI,SAAAivB,GAC/C,OAAO,MACAA,EADP,CAEIW,WAAYX,EAAUW,WACjB1H,OAAO,SAAA2H,GAAS,OAAIA,EAAUU,iBAAmB,EAAKwgC,WACtD/wD,IAAI,SAAA6vB,GAAc,OAAOA,QAGZ3H,OAAO,SAAA6E,GAAS,OAAIA,EAAU6C,WAAW90B,OAAS,KAnCrD,EAsC3Bs2D,yBAA2B,SAACrkC,GASxB,OAR8BA,EAAUmC,UAAUlvB,IAAI,SAAAivB,GAClD,OAAO,MACAA,EADP,CAEIW,WAAYX,EAAUW,WACjB1H,OAAO,SAAA2H,GAAS,OAAIA,EAAUU,iBAAmB,EAAKygC,cACtDhxD,IAAI,SAAA6vB,GAAc,OAAOA,QAGT3H,OAAO,SAAA6E,GAAS,OAAIA,EAAU6C,WAAW90B,OAAS,KA/CxD,EAkD3B26B,0BAA4B,SAAC1I,GACzB,IAAI2I,EAAQ,EAMZ,OALA3I,EAAUmC,UAAUlvB,IAAI,SAAAivB,GACpBA,EAAUW,WAAW5vB,IAAI,SAAA6vB,GACrB6F,GAAU7F,EAAUU,iBAAmB,EAAKwgC,SAAWlhC,EAAUI,OAAS,MAG3EyF,GAtDP,EAAKn2B,MAAQ,CACT8xD,UAAW,EACX7pD,OAAQ,CAAElJ,MAAO,GAAI0E,MAAO,IAC5BitB,OAAQ,EACRqhC,QAAS,IAAIr1D,KACbia,MAAO,IAGX,EAAKg7C,SAAW,CACZ,CAAE5yD,MAAO,IAAK0E,MAAO,WACrB,CAAE1E,MAAO,IAAK0E,MAAO,WACrB,CAAE1E,MAAO,IAAK0E,MAAO,gBAdF,EAR/B,wEAqEQ,OAAI5E,KAAKF,MAAM6uB,UACJ3uB,KAAKmzD,gBAAgBnzD,KAAKF,MAAM6uB,WAEhC,iDAxEnB,sCA4EoBA,GAAgE,IAAD,OACrEykC,EAAqBpzD,KAAK+yD,sBAAsBpkC,GAChD0kC,EAAwBrzD,KAAKgzD,yBAAyBrkC,GAC5D,OACI,uBAAKpuB,UAAU,WACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,YAAf,kCACA,uBAAKA,UAAU,eACX,uBAAKA,UAAU,cAAf,YACA,uBAAKA,UAAU,cACVouB,EAAUgC,SAASzwB,MAAQ,MAAQyuB,EAAUgC,SAAS/rB,OAE3D,uBAAKlE,MAAO,CAACmV,MAAO,UAChB,wBAAMtV,UAAU,cAAhB,gBACA,wBAAMG,MAAO,CAAC+W,WAAY,UAC1B,wBAAMlX,UAAU,YACX,OAASnE,KAAe8vB,aAAalsB,KAAKq3B,0BAA0B1I,IAAY,MAI5FykC,EAAmB12D,OAAS,EACzB,uBAAK6D,UAAU,eACX,gBAAC,GAAD,CACI0C,KAAMjD,KAAK+yD,sBAAsBpkC,GACjC9pB,aAAc,kBAAM,EAAKA,gBACzBC,UAAW,SAAC2nB,EAActtB,GAAf,OACP,EAAK2F,UAAU2nB,EAASttB,OAEpC,KACJ,uBAAKoB,UAAU,eACX,gBAACgD,GAAA,EAAD,CACIhD,UAAYP,KAAKF,MAAMwzD,iBAA+BhzD,EAAjB,eACrC4D,KAAMlE,KAAKF,MAAMs3B,KACjBvyB,aAAc,kBAAM,EAAK0uD,gBAAgB,EAAKzzD,MAAMwzD,cACpDxuD,UAAW,SAAC2nB,EAActtB,GAAf,OACP,EAAKq0D,aAAa/mC,EAASttB,OAEvC,uBAAKoB,UAAU,gBACd8yD,EAAsB32D,OAAS,EAC5B,gCACA,uBAAK6D,UAAU,WAAWG,MAAO,CAACmK,MAAO,YAAzC,0BACA,uBAAKtK,UAAU,eACX,gBAAC,GAAD,CACI0C,KAAMjD,KAAKgzD,yBAAyBrkC,GACpC9pB,aAAc,kBAAM,EAAKA,gBACzBC,UAAW,SAAC2nB,EAActtB,GAAf,OACP,EAAK2F,UAAU2nB,EAASttB,QAGpC,KACJ,uBAAKoB,UAAU,eA9H/B,qCAoIQ,IAAMiyD,EAAkB,CACpBrzC,OAAQ,EACRpP,QAAS,iBAGb,OACI,gCACI,gBAACyI,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,WAAWG,MAAO8xD,GAAjC,cAEJ,gBAACh6C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,WAAWG,MAAO8xD,GAAjC,WAEJ,gBAACh6C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,WAAWG,MAAO8xD,GAAjC,qBAEJ,gBAACh6C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,WAAWG,MAAK,MAAM8xD,EAAN,CAAuBzxD,UAAW,WAAjE,gCArJpB,gCA6Jc8vB,EAA0BmgB,GAA8B,IAAD,OAC7D,OACI,gCACI,gBAACx4B,EAAA,EAAD,CAAMjY,UAAU,gBAAgBsG,WAAS,GACrC,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACVmY,EAAUG,UAAU9wB,MAAQ,MAAQ2wB,EAAUG,UAAUpsB,OAE7D,gBAAC4T,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACVmY,EAAUO,QAAQ,GAAG9d,GAAK,MAAQud,EAAUO,QAAQ,GAAGnc,MAE5D,gBAACuD,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACV,OAAStc,KAAe8vB,aAAa2E,EAAUO,QAAQ,GAAGE,KAAK,IAEpE,gBAAC9Y,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,EAAGhY,MAAO,CAAC6J,WAAY,OAAQxJ,UAAW,UACpD,OAAS3E,KAAe8vB,aAAalsB,KAAKuyD,kBAAkB1hC,IAAY,KAGjF,uBAAKtwB,UAAU,gBACdswB,EAAUW,WAAW5vB,IAAI,SAAC6vB,EAAWtyB,GAClC,OAAO,EAAKszD,gBAAgBhhC,EAAWtyB,QAhL3D,sCAsLoBsyB,EAA0BtyB,GAEtC,OACI,gCACA,uBAAKoB,UAAU,gBACf,uBAAKA,UAAU,WACX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,2BACI,gBAACF,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,EAAGhY,MAAO,CAACqP,QAAS,WAAYN,UAAW,SACtD,uBAAKlP,UAAU,eACdpB,EAAQ,IAGb,gBAACqZ,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAInY,UAAU,YACxBkxB,EAAUC,QAAQxxB,MAAQ,MAAQuxB,EAAUC,QAAQ9sB,WAMzE,gBAAC4T,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,2BACI,gBAACF,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACf,gBAACF,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACX,uBAAKnY,UAAU,eACX,uBAAKA,UAAU,cAAf,UACA,uBAAKA,UAAU,cAAc,OAASnE,KAAe8vB,aAAauF,EAAUI,QAAQ,KAExF,uBAAKtxB,UAAU,eACX,uBAAKA,UAAU,cAAf,wBACA,uBAAKA,UAAU,cAAckxB,EAAUO,OAAS,MAAQ,OAE5D,uBAAKzxB,UAAU,eACX,uBAAKA,UAAU,cAAf,qBACA,uBAAKA,UAAU,cAAcnE,KAAeuqD,mBAAmBl1B,EAAUgG,iBAM7F,gBAACjf,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,eACX,uBAAKA,UAAU,cAAf,qBACA,uBAAKA,UAAU,cAAc,cAEjC,uBAAKA,UAAU,eACX,uBAAKA,UAAU,cAAf,qBACA,uBAAKA,UAAU,cAAc,eAEjC,uBAAKA,UAAU,eACX,uBAAKA,UAAU,cAAf,UACA,uBAAKA,UAAU,cAAc,0GAGrC,gBAACiY,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,eACX,uBAAKA,UAAU,cAAf,cACA,uBAAKA,UAAU,YAAYkxB,EAAUU,iBAEzC,uBAAK5xB,UAAU,eACX,uBAAKA,UAAU,cAAf,WACA,uBAAKA,UAAU,cACVkxB,EAAUY,kBAAoBZ,EAAUY,kBAAoB,eAxP7F,sCAkQoBohC,GAAgC,IAAD,OAC3C,OAAIA,EAEI,gCACA,gBAAC9mC,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,QAASwE,SAAU,UAC5C,uBAAK5f,UAAU,YAAf,cACA,gBAAC,GAAD,CACIL,MAAOF,KAAKmB,MAAM8xD,UAClB9pB,kBAAkB,EAClBxoC,SAAU,SAACT,GAAD,OAAmB,EAAK6B,SAAS,CAACkxD,UAAW/yD,QAG/D,gBAACysB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,QAASwE,SAAU,UAC5C,uBAAK5f,UAAU,YAAf,UACA,gBAAC,GAAD,CACIL,MAAOF,KAAKmB,MAAM0wB,OAClBlxB,SAAU,SAACT,GAAD,OAAmB,EAAK6B,SAAS,CAAC8vB,OAAQ3xB,QAE5D,gBAACysB,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,QAASwE,SAAU,UAC5C,uBAAK5f,UAAU,YAAf,QACA,gBAAC,GAAD,CACIL,MAAOF,KAAKmB,MAAM+xD,QAClBvyD,SAAU,SAACT,GAAD,OAAiB,EAAK6B,SAAS,CAACmxD,QAAShzD,QAE3D,gBAACysB,GAAA,EAAD,KACI,uBAAKpsB,UAAU,YAAf,SACA,gBAACV,GAAA,EAAD,CACIK,MAAOF,KAAKmB,MAAM2W,MAClBnX,SAAU,SAACT,GAAD,OAAmB,EAAK6B,SAAS,CAAC+V,MAAO5X,QAE3D,gBAACysB,GAAA,EAAD,CAAWjsB,MAAO,CAAC2B,MAAO,QAAStB,UAAW,WAC1C,gBAAC,GAAD,CACI6D,MAAM,UACNmB,KAAMikC,IACNlkC,QAAS,WACL,EAAKhG,MAAMs3B,KAAK1oB,KAAK,CACjBkpB,MAAO,EAAKz2B,MAAM8xD,UAClBphC,OAAQ,EAAK1wB,MAAM0wB,OACnBj0B,KAAM,EAAKuD,MAAM+xD,QACjBp7C,MAAO,EAAK3W,MAAM2W,QAEtB,EAAKhY,MAAM4zD,mBACX,EAAK3xD,SAAS,CACVkxD,UAAW,EACX7pD,OAAQ,CAAElJ,MAAO,GAAI0E,MAAO,IAC5BitB,OAAQ,EACRqhC,QAAS,IAAIr1D,KACbia,MAAO,UAS3B,gCACA,gBAAC6U,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,QAASwE,SAAU,UAAhD,cACA,gBAACwM,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,QAASwE,SAAU,UAAhD,UACA,gBAACwM,GAAA,EAAD,CAAWjsB,MAAO,CAACib,SAAU,QAASwE,SAAU,UAAhD,QACA,gBAACwM,GAAA,EAAD,iBA9TZ,mCAmUiB8I,EAAct2B,GAA6B,IAAD,OAC7CyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,KAAY8I,EAAImC,OAChB,gBAACjL,GAAA,EAAD,eAAevwB,KAAe8vB,aAAauJ,EAAI5D,QAA/C,SACA,gBAAClF,GAAA,EAAD,KAAYvwB,KAAeuvB,kBAAkB8J,EAAI73B,OACjD,gBAAC+uB,GAAA,EAAD,KAAY8I,EAAI3d,OACf9X,KAAKF,MAAMwzD,YACR,gBAAC3mC,GAAA,EAAD,KACI,gBAACnU,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACf,gBAACF,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,gBAAC,KAAD,CACI3S,KAAMwkC,IACNzkC,QAAS,WACD2vB,EAAIniB,IACJ,EAAKxT,MAAM6zD,YAAYjlD,KAAK+mB,EAAIniB,IAEpC,EAAKxT,MAAMs3B,KAAKoT,OAAOrrC,EAAO,GAC9B,EAAKW,MAAM4zD,yBAK/B,UA5VpB,GAA6C1yD,aCRhC4yD,GAAb,YAEI,WAAY9zD,GAAgB,IAAD,+BACvB,8CAAMA,KAOV2rD,0BAA4B,SAAC56B,GACzB,IAAI+Y,EAAY,EAMhB,OALI/Y,EAAU0G,WACV,EAAKz3B,MAAM4uB,YAAYuH,eAAer0B,IAAI,SAAAs0B,GACtC0T,GAAa1T,EAAc/C,WAAa+C,EAAcC,OAGvDyT,GAfgB,EAkB3B2oB,kBAAoB,SAAC1hC,GAA8BnvB,QAAQC,IAAIkvB,GAC3D,IAAIyG,EAAQ,EAIZ,OAHAzG,EAAUW,WAAW5vB,IAAI,SAAA6vB,GACrB6F,GAAS7F,EAAUI,SAEhByF,GAvBgB,EA0B3Bu8B,0BAA4B,SAAChjC,GACzB,IAAIyG,EAAQ,EAMZ,OALAzG,EAAUO,QACLtH,OAAO,SAAAgI,GAAM,MAAoB,cAAhBA,EAAOrxB,OACxBmB,IAAI,SAAAkwB,GACDwF,GAASxF,EAAOR,MAEjBgG,GAjCgB,EAoC3Bw8B,iBAAmB,SAACjjC,GAChB,OACI,EAAK0hC,kBAAkB1hC,GACvB,EAAKgjC,0BAA0BhjC,GAC/B,EAAK46B,0BAA0B56B,IAxCZ,EA4C3BkjC,qBAAuB,WACnB,IAAIz8B,EAAQ,EAIZ,OAHA,EAAKx3B,MAAM4uB,YAAYoC,UAAUlvB,IAAI,SAAAivB,GACjCyG,GAAS,EAAKw8B,iBAAiBjjC,KAE5ByG,GAjDgB,EAoD3B08B,sBAAwB,WACpB,IAAI18B,EAAQ,EAIZ,OAHA,EAAKx3B,MAAM4uB,YAAYoC,UAAUlvB,IAAI,SAAAivB,GACjCyG,GAASzG,EAAUW,WAAW90B,SAE3B46B,GAtDP,EAAKn2B,MAAQ,CACTytC,YAAa,GAJM,EAF/B,wEA8D2B,IAAD,OACZlgB,EAAc1uB,KAAKF,MAAM4uB,YAC/B,OACI,uBAAKnuB,UAAU,WACX,uBAAKG,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,YAAf,mCACA,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,iBACX,uBAAKA,UAAU,cAAf,YACA,uBAAKA,UAAU,cAAf,UACQmuB,EAAYiC,SAASzwB,MAD7B,cACwCwuB,EAAYiC,SAAS/rB,SAGjE,uBAAKrE,UAAU,iBACX,uBAAKA,UAAU,cAAf,uBACA,uBAAKA,UAAU,cAAcmuB,EAAYkE,mBAGjD,gBAACpa,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,iBACX,uBAAKA,UAAU,cAAf,iBACA,uBAAKA,UAAU,cACVnE,KAAeuqD,mBAAmBj4B,EAAYgE,gBAGvD,uBAAKnyB,UAAU,iBACX,uBAAKA,UAAU,cAAf,cACA,uBAAKA,UAAU,cAAcmuB,EAAY8E,SAAS5uB,SAG1D,gBAAC4T,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,iBACX,uBAAKA,UAAU,cAAf,kBACA,uBAAKA,UAAU,cAAc,SAEjC,uBAAKA,UAAU,iBACX,uBAAKA,UAAU,cAAf,cACA,uBAAKA,UAAU,cAAcmuB,EAAYmH,UAAY,MAAQ,SAIxE71B,KAAKi0D,aACsB,IAA3Bj0D,KAAKmB,MAAMytC,YACR5uC,KAAKk0D,qBAAqBxlC,GAE1B1uB,KAAKm0D,uBACDzlC,EAAYoC,UAAUhH,OAAO,SAAA+G,GAAS,OAClCA,EAAUG,UAAU9wB,QAAU,EAAKiB,MAAMytC,cAC3C,IAIV,uBAAKruC,UAAU,eAnH/B,mCAwH+B,IAAD,OACtB,OACI,uBAAKA,UAAU,eACX,gBAACouC,GAAA,EAAD,CACIpuC,UAAU,cACVL,MAAOF,KAAKmB,MAAMytC,YAClBx9B,QAAQ,aACRy9B,cAAc,OACdC,eAAe,UACfnuC,SAAU,SAAC8C,EAA+BvD,GACtC,EAAK6B,SAAS,CAAC6sC,YAAa1uC,MAE5B,gBAACgvC,GAAA,EAAD,CACIhvC,MAAO,EACP0E,MACI,2BACI,uBAAKrE,UAAU,YAAf,wBACA,uBAAKA,UAAU,gBAAf,UACQnE,KAAe8vB,aAAalsB,KAAK+zD,wBAAwB,GADjE,2DAEO/zD,KAAKg0D,wBAFZ,oBAMXh0D,KAAKF,MAAM4uB,YAAYoC,UACnBhH,OAAO,SAAA+G,GAAS,OAAIA,EAAU0G,YAC9B31B,IAAI,SAAAivB,GACD,IAAM+Y,EAAY,EAAKkqB,iBAAiBjjC,GAClCujC,EAAkBvjC,EAAUW,WAAW90B,OAC7C,OACI,gBAACwyC,GAAA,EAAD,CACIhvC,MAAO2wB,EAAUG,UAAU9wB,MAC3B0E,MACI,2BACI,uBAAKrE,UAAU,YAAf,qBACA,uBAAKA,UAAU,gBAAf,UACQnE,KAAe8vB,aAAa0d,GAAW,GAD/C,uEAEOwqB,EAFP,qBAEmCA,EAAkB,EAAI,IAAM,GAF/D,WAQvBp0D,KAAKF,MAAM4uB,YAAYoC,UACnBhH,OAAO,SAAA+G,GAAS,OAAKA,EAAU0G,YAC/B31B,IAAI,SAACivB,EAAW1xB,GACb,IAAMyqC,EAAY,EAAKkqB,iBAAiBjjC,GAClCujC,EAAkBvjC,EAAUW,WAAW90B,OAC7C,OACI,gBAACwyC,GAAA,EAAD,CACIhvC,MAAO2wB,EAAUG,UAAU9wB,MAC3B0E,MACI,2BACA,uBAAKrE,UAAU,YAAf,oBAAwCpB,EAAQ,IAChD,uBAAKoB,UAAU,gBAAf,UACQnE,KAAe8vB,aAAa0d,GAAW,GAD/C,mEAEOwqB,EAFP,qBAEmCA,EAAkB,EAAI,IAAM,GAF/D,YAS5B,uBAAK1zD,MAAO,CAACivC,aAAc,0BAtL3C,2CA2LyBjhB,GAA+C,IAAD,OAC/D,OACI,2BACKA,EAAYoC,UACRhH,OAAO,SAAA+G,GAAS,OAAIA,EAAU0G,YAC9B31B,IAAI,SAAAivB,GACD,OAAO,EAAKwjC,oBAAoBxjC,EAAW,KAElDnC,EAAYoC,UACRhH,OAAO,SAAA+G,GAAS,OAAKA,EAAU0G,YAC/B31B,IAAI,SAACivB,EAAW1xB,GACb,OAAO,EAAKk1D,oBAAoBxjC,EAAW1xB,EAAQ,QAtM3E,0CA4MwB0xB,EAA0B1xB,GAA6B,IAAD,OAChEm1D,EAAgBt0D,KAAKuyD,kBAAkB1hC,GACvC0jC,EAAoBv0D,KAAKyrD,0BAA0B56B,GACnD2jC,EAAyBx0D,KAAK6zD,0BAA0BhjC,GAC9D,OACI,gBAACrY,EAAA,EAAD,CAAM3R,WAAS,EAACtG,UAAU,eACtB,uBAAKG,MAAO,CAAC2B,MAAO,SAChB,uBAAK9B,UAAU,eAAepB,EAAQ,IAE1C,uBAAKuB,MAAO,CAAC2B,MAAO,sBAChB,uBAAK3B,MAAO,CAACgW,aAAc,SACvB,uBAAKnW,UAAU,QAAf,UACQswB,EAAUG,UAAU9wB,MAD5B,mBACuC2wB,EAAUG,UAAUpsB,OACtDisB,EAAU0G,UACP,wBAAMh3B,UAAU,YAAY,cAC5B,MAEPswB,EAAUO,QAAQtH,OAAO,SAAAgI,GAAM,MAAoB,cAAhBA,EAAOrxB,OACtCmB,IAAI,SAAAkwB,GACD,OACI,gCACA,uBAAKvxB,UAAU,cAAf,UAAgCuxB,EAAOxe,GAAvC,cAA+Cwe,EAAO7c,OACtD,uBAAK1U,UAAU,cAAf,cACYnE,KAAe8vB,aAAa4F,EAAOR,KAAK,QAOhE,uBAAK/wB,UAAU,cAAf,mBACiBswB,EAAUI,QAAUJ,EAAUI,QAAU,SAEzD,uBAAK1wB,UAAU,cAAf,aAGA,uBAAKA,UAAU,YAAf,wBACsBnE,KAAe8vB,aAC7BooC,EAAgBC,EAAoBC,GAAwB,GAFpE,SAKA,gBAAC,GAAD,CACI5vD,MAAM,+BACNkB,QAAS,WACL8B,OAAOkkD,OAAO,GAAIlkD,OAAOmkD,aACzB,EAAKhqD,SAAS,CAAC6sC,YAAa/d,EAAUG,UAAU9wB,YAI3DF,KAAKy0D,mBAAmB,aACrB,gBAAClxD,GAAA,EAAD,CACIhD,UAAU,eACV2D,KAAM2sB,EAAUW,WAChB3sB,aAAc,WACV,OACI,gCACA,gBAAC8nB,GAAA,EAAD,kBACA,gBAACA,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAASsB,MAAO,UAA9C,UACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAAC2B,MAAO,UAA1B,QACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAAC2B,MAAO,UAA1B,UACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAASsB,MAAO,UAA9C,oBAIRyC,UAAW,SAAC2sB,EAA0BtyB,GAClC,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,eAAe8E,EAAUC,QAAQxxB,MAAjC,mBAA4CuxB,EAAUC,QAAQ9sB,QAC9D,gBAAC+nB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,UAA9B,UACQ3E,KAAe8vB,aAAauF,EAAUI,QAAQ,GADtD,SAGA,gBAAClF,GAAA,EAAD,KAAYvwB,KAAeuvB,kBAAkB8F,EAAUgG,YACvD,gBAAC9K,GAAA,EAAD,4BACA,gBAACA,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,UAA9B,UAA4C3E,KAAe8vB,aAAa,MAAM,GAA9E,cAIZooC,GAGPzjC,EAAU0G,UACPv3B,KAAKy0D,mBAAmB,sBACpB,gBAAClxD,GAAA,EAAD,CACIhD,UAAU,eACV2D,KAAMlE,KAAKF,MAAM4uB,YAAYuH,eAC7BpxB,aAAc,WACV,OACI,gCACA,gBAAC8nB,GAAA,EAAD,kBACA,gBAACA,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAASsB,MAAO,UAA9C,eACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAASsB,MAAO,UAA9C,gBACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,SAAUsB,MAAO,UAA/C,qBAIRyC,UAAW,SAACmxB,EAAmC92B,GAC3C,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,KAAYsJ,EAAehD,UAC3B,gBAACtG,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,UAAWk1B,EAAeE,MACxD,gBAACxJ,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,UAA9B,UAA4C3E,KAAe8vB,aAAa+J,EAAe9C,YAAY,GAAnG,SACA,gBAACxG,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,WAA9B,gBAIZwzD,GAER,KAEHv0D,KAAKy0D,mBAAmB,uBACrB,gBAAClxD,GAAA,EAAD,CACIhD,UAAU,eACV2D,KAAM2sB,EAAUO,QAAQtH,OAAO,SAAAgI,GAAM,MAAoB,cAAhBA,EAAOrxB,OAChDoE,aAAc,WACV,OACI,gCACA,gBAAC8nB,GAAA,EAAD,uBACA,gBAACA,GAAA,EAAD,CAAWjsB,MAAO,CAAC2B,MAAO,UAA1B,kBACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAASsB,MAAO,UAA9C,iBACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAASsB,MAAO,UAA9C,YAIRyC,UAAW,SAACgtB,EAAoB3yB,GAC5B,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,KAAYmF,EAAO7c,MACnB,gBAAC0X,GAAA,EAAD,KAAYmF,EAAOT,gBACnB,gBAAC1E,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,UAAW+wB,EAAO0F,YAChD,gBAAC7K,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,UAA9B,UAA4C3E,KAAe8vB,aAAa4F,EAAOR,KAAK,GAApF,aAIZkjC,OApV5B,yCA2VuBvI,EAAoB5I,EAAoB+I,GACvD,OACI,uBAAK7rD,UAAU,eACX,uBAAKA,UAAU,YAAY0rD,GAC1B5I,EACA+I,EACG,uBAAK7rD,UAAU,eACX,uBAAKG,MAAO,CAACmV,MAAO,UAChB,wBAAMtV,UAAU,cAAhB,gBACA,wBAAMG,MAAO,CAAC+W,WAAY,UAC1B,wBAAMlX,UAAU,YACXnE,KAAe8vB,aAAakgC,GAAY,GAAQ,UAI7D,QA1WpB,6CA+W2Bv7B,GAAwC,IAAD,OACpDyjC,EAAgBt0D,KAAKuyD,kBAAkB1hC,GACvC0jC,EAAoBv0D,KAAKyrD,0BAA0B56B,GACnD2jC,EAAyBx0D,KAAK6zD,0BAA0BhjC,GAC9D,OACI,uBAAKtwB,UAAU,cAAcG,MAAO,CAAC+W,WAAY,SAC7C,gBAACe,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,GACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,QAAf,UACQswB,EAAUG,UAAU9wB,MAD5B,mBACuC2wB,EAAUG,UAAUpsB,OACtDisB,EAAU0G,UACP,wBAAMh3B,UAAU,YAAY,cAC5B,MAEPswB,EAAUO,QAAQtH,OAAO,SAAAgI,GAAM,MAAoB,cAAhBA,EAAOrxB,OACtCmB,IAAI,SAAAkwB,GACD,OACI,gCACA,uBAAKvxB,UAAU,cAAf,UAAgCuxB,EAAOxe,GAAvC,cAA+Cwe,EAAO7c,OACtD,uBAAK1U,UAAU,cAAf,cACYnE,KAAe8vB,aAAa4F,EAAOR,KAAK,QAOhE,uBAAK/wB,UAAU,cAAf,mBACiBswB,EAAUI,QAAUJ,EAAUI,QAAU,SAEzD,uBAAK1wB,UAAU,cAAf,aAGA,uBAAKA,UAAU,YAAf,wBACsBnE,KAAe8vB,aAC7BooC,EAAgBC,EAAoBC,GAAwB,GAFpE,UAMJ,gBAACh8C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,cAAf,qBACA,gBAAC,GAAD,CACIqE,MAAM,UACNsrC,iBAA+C,aAA7Brf,EAAUsB,eAC5BxxB,SAAU,WACNkwB,EAAUsB,eAAiB,WAC3B,EAAKryB,MAAMkpC,6BAEnB,gBAAC,GAAD,CACIpkC,MAAM,aACNsrC,iBAA+C,gBAA7Brf,EAAUsB,eAC5BxxB,SAAU,WACNkwB,EAAUsB,eAAiB,cAC3B,EAAKryB,MAAMkpC,8BAGvB,gBAACxwB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,cAAf,WACA,gBAAC,GAAD,CACIL,MAAO2wB,EAAUwB,kBACjB1xB,SAAU,SAACT,GACP2wB,EAAUwB,kBAAoBnyB,EAC9B,EAAKJ,MAAMkpC,+BAK3B,uBAAKzoC,UAAU,eACX,gBAAC,GAAD,CACI0C,KAAM4tB,EAAUW,WAChB3sB,aAAc,kBAAM,EAAKA,gBACzBC,UAAW,SAAC2nB,EAActtB,GAAf,OACP,EAAK2F,UAAU2nB,EAASttB,OAGnC0xB,EAAU0G,UACPv3B,KAAKy0D,mBAAmB,sBACpB,gBAAClxD,GAAA,EAAD,CACIhD,UAAU,eACV2D,KAAMlE,KAAKF,MAAM4uB,YAAYuH,eAC7BpxB,aAAc,WACV,OACI,gCACA,gBAAC8nB,GAAA,EAAD,kBACA,gBAACA,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAASsB,MAAO,UAA9C,eACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAASsB,MAAO,UAA9C,gBACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,SAAUsB,MAAO,UAA/C,qBAIRyC,UAAW,SAACmxB,EAAmC92B,GAC3C,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,KAAYsJ,EAAehD,UAC3B,gBAACtG,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,UAAWk1B,EAAeE,MACxD,gBAACxJ,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,UAA9B,UAA4C3E,KAAe8vB,aAAa+J,EAAe9C,YAAY,GAAnG,SACA,gBAACxG,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,WAA9B,gBAIZwzD,GAER,KAEHv0D,KAAKy0D,mBAAmB,uBACrB,gBAAClxD,GAAA,EAAD,CACIhD,UAAU,eACV2D,KAAM2sB,EAAUO,QAAQtH,OAAO,SAAAgI,GAAM,MAAoB,cAAhBA,EAAOrxB,OAChDoE,aAAc,WACV,OACI,gCACA,gBAAC8nB,GAAA,EAAD,uBACA,gBAACA,GAAA,EAAD,CAAWjsB,MAAO,CAAC2B,MAAO,UAA1B,kBACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAASsB,MAAO,UAA9C,iBACA,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,QAASsB,MAAO,UAA9C,YAIRyC,UAAW,SAACgtB,EAAoB3yB,GAC5B,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UACvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,KAAYmF,EAAO7c,MACnB,gBAAC0X,GAAA,EAAD,KAAYmF,EAAOT,gBACnB,gBAAC1E,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,UAAW+wB,EAAO0F,YAChD,gBAAC7K,GAAA,EAAD,CAAWjsB,MAAO,CAACK,UAAW,UAA9B,UAA4C3E,KAAe8vB,aAAa4F,EAAOR,KAAK,GAApF,aAIZkjC,GAER,uBAAKj0D,UAAU,eAnf/B,qCAqgBQ,IAAMiyD,EAAkB,CACpBrzC,OAAQ,EACRpP,QAAS,iBAGb,OACI,gCACI,gBAACyI,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,WAAWG,MAAO8xD,GAAjC,sBAEJ,gBAACh6C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,WAAWG,MAAO8xD,GAAjC,mBAEJ,gBAACh6C,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,WAAWG,MAAO8xD,GAAjC,kBAnhBpB,gCAyhBc/gC,EAA0BtyB,GAA6B,IAAD,OAC5D,OACI,uBAAKoB,UAAU,WAEX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,2BACI,gBAACF,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,EAAGhY,MAAO,CAACqP,QAAS,WAAYN,UAAW,SACtD,uBAAKlP,UAAU,eAAepB,EAAQ,IAE1C,gBAACqZ,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAInY,UAAU,YACxBkxB,EAAUC,QAAQxxB,MAAQ,MAAQuxB,EAAUC,QAAQ9sB,WAOzE,gBAAC4T,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,2BACI,gBAACF,EAAA,EAAD,CAAM3R,WAAS,GACX,gBAAC2R,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACf,gBAACF,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACX,uBAAKnY,UAAU,iBACX,uBAAKA,UAAU,cAAf,UACA,uBAAKA,UAAU,cAAc,OAASnE,KAAe8vB,aAAauF,EAAUI,QAAQ,KAExF,uBAAKtxB,UAAU,iBACX,uBAAKA,UAAU,cAAf,wBACA,uBAAKA,UAAU,cAAckxB,EAAUO,OAAS,MAAQ,OAE5D,uBAAKzxB,UAAU,iBACX,uBAAKA,UAAU,cAAf,qBACA,uBAAKA,UAAU,cAAcnE,KAAeuqD,mBAAmBl1B,EAAUgG,iBAM7F,gBAACjf,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,iBACX,uBAAKA,UAAU,cAAf,qBACA,uBAAKA,UAAU,cAAc,cAEjC,uBAAKA,UAAU,iBACX,uBAAKA,UAAU,cAAf,qBACA,uBAAKA,UAAU,cAAc,eAEjC,uBAAKA,UAAU,iBACX,uBAAKA,UAAU,cAAf,UACA,uBAAKA,UAAU,cAAc,0GAGrC,gBAACiY,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,iBACX,uBAAKA,UAAU,cAAf,qBACA,gBAAC,GAAD,CACIqE,MAAM,UACNsrC,iBAA+C,aAA7Bze,EAAUU,eAC5BxxB,SAAU,WACN8wB,EAAUU,eAAiB,WAC3B,EAAKryB,MAAMkpC,6BAEnB,gBAAC,GAAD,CACIpkC,MAAM,aACNsrC,iBAA+C,gBAA7Bze,EAAUU,eAC5BxxB,SAAU,WACN8wB,EAAUU,eAAiB,cAC3B,EAAKryB,MAAMkpC,+BAI3B,gBAACxwB,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,iBACX,uBAAKA,UAAU,cAAf,WACA,gBAAC,GAAD,CACIL,MAAOuxB,EAAUY,kBACjB1xB,SAAU,SAACT,GACPuxB,EAAUY,kBAAoBnyB,EAC9B,EAAKJ,MAAMkpC,qCA1mB/C,GAA6ChoC,aCPhC0zD,GAAb,YAEI,WAAY50D,GAAgB,IAAD,+BACvB,8CAAMA,KAEDqB,MAAQ,CACTytC,YAAa,GAJM,EAF/B,wEAU2B,IAAD,OAClBltC,QAAQC,IAAI3B,KAAKF,MAAM+uB,cACvB,IAAMA,EAAe7uB,KAAKF,MAAM+uB,aAChC,OACI,gBAACrW,EAAA,EAAD,CAAM3R,WAAS,EAACtG,UAAU,WACtB,gBAACiY,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKhY,MAAO,CAAC0B,WAAY,YACzB,uBAAK7B,UAAU,YAAf,wBACA,uBAAKA,UAAU,iBACX,uBAAKA,UAAU,cAAf,YACA,uBAAKA,UAAU,cAAf,UACQsuB,EAAa8B,SAASzwB,MAD9B,cACyC2uB,EAAa8B,SAAS/rB,SAGnE,uBAAKrE,UAAU,iBACX,uBAAKA,UAAU,cAAf,aACA,uBAAKA,UAAU,cAAf,UACQsuB,EAAagC,UAAU3wB,MAD/B,cAC0C2uB,EAAagC,UAAUjsB,SAGrE,uBAAKrE,UAAU,iBACX,uBAAKA,UAAU,cAAf,UACA,uBAAKA,UAAU,cACVsuB,EAAaiD,OAAOltB,QAG7B,uBAAKrE,UAAU,iBACX,uBAAKA,UAAU,cAAf,SACA,uBAAKA,UAAU,cAAcsuB,EAAa/W,MAAQ+W,EAAa/W,MAAQ,SAE3E,uBAAKvX,UAAU,eACf,uBAAKA,UAAU,YAAf,cACI,gBAAC,GAAD,CACIqE,MAAM,UACNsrC,iBAAkD,aAAhCrhB,EAAasD,eAC/BxxB,SAAU,WACNkuB,EAAasD,eAAiB,WAC9B,EAAKryB,MAAMmtC,8BAEnB,gBAAC,GAAD,CACIroC,MAAM,aACNsrC,iBAAkD,gBAAhCrhB,EAAasD,eAC/BxxB,SAAU,WACNkuB,EAAasD,eAAiB,cAC9B,EAAKryB,MAAMmtC,8BAEnB,gBAAC,GAAD,CACIroC,MAAM,UACNsrC,iBAAkD,YAAhCrhB,EAAasD,eAC/BxxB,SAAU,WACNkuB,EAAasD,eAAiB,UAC9B,EAAKryB,MAAMmtC,8BAEnB,gBAACptC,GAAA,EAAD,CACII,YAAY,SACZC,MAAO2uB,EAAawD,kBACpB1xB,SAAU,SAACT,GACP2uB,EAAawD,kBAAoBnyB,EACjC,EAAKJ,MAAMmtC,+BAGvB,uBAAK1sC,UAAU,kBAvEnC,GAAgDS,aCsDnC2zD,GAAb,YAYI,WAAY70D,GAAgB,IAAD,+BACvB,8CAAMA,KAXVkvC,QAAU,CACN,CAAE9uC,MAAO,EAAG0E,MAAO,cACnB,CAAE1E,MAAO,EAAG0E,MAAO,YACnB,CAAE1E,MAAO,EAAG0E,MAAO,mBACnB,CAAE1E,MAAO,EAAG0E,MAAO,aACnB,CAAE1E,MAAO,EAAG0E,MAAO,eACnB,CAAE1E,MAAO,EAAG0E,MAAO,WACnB,CAAE1E,MAAO,EAAG0E,MAAO,aAGI,EAqL3BgwD,mBAAqB,WAEjB,IAAM,EAAKzzD,MAAM6oB,QAAW,EAAK7oB,MAAMsqB,SAAY,EAAKtqB,MAAMgtB,OAA9D,CAIA,IAAMA,EAAS,EAAKhtB,MAAMgtB,OAEpBhF,EAAUqF,GAASqmC,8BACrB,EAAK1zD,MAAMgtB,OACX,EAAKhtB,MAAMi2B,KACX,EAAKj2B,MAAM6oB,OACX,EAAK7oB,MAAMsqB,OACX,EAAKtqB,MAAMwtB,UACX,EAAKxtB,MAAMutB,YACX,EAAKvtB,MAAM0tB,cAGfntB,QAAQC,IAAI0B,KAAKC,UAAU6lB,IAC3B9nB,KAAIyzD,OAAO,4BAA6B,EAAK3zD,MAAMwyD,YAC/C,SAAClyD,GACGC,QAAQC,IAAIF,GACZJ,KAAIyoD,IAAJ,gCAAiC,EAAKhqD,MAAMiI,MAAMurB,OAAjB,UAAuCnK,EACpE,SAAC1nB,GACGC,QAAQC,IAAIF,GACZ0sB,EAAOgJ,aAAe11B,EAASy1B,cAC/B,EAAKn1B,SAAS,CAACosB,OAAQA,IACvBvmB,OAAOC,SAAS2B,UAEpB,SAACrJ,GACGuB,QAAQC,IAAIxB,MAGxB,SAACA,GACGuB,QAAQC,IAAIxB,OAvNG,EA2N3B40D,UAAY,WACR1zD,KAAI8oD,MAAJ,gCAAmC,EAAKrqD,MAAMiI,MAAMurB,OAAjB,UAAuC,CAAElqB,OAAQ,YAC5E,SAACghD,GACG1oD,QAAQC,IAAI,mBAAoByoD,GAChC4K,KAEJ,SAAC70D,GACGuB,QAAQC,IAAIxB,KAGxB,IAAM60D,EAAwB,WAC1BhoC,GAAa1rB,IAAb,gBAA0B,EAAKxB,MAAMiI,MAAMurB,OAAjB,QACtB,SAAC7xB,GACO,EAAKN,MAAMwtB,WAAa,EAAKxtB,MAAMutB,aAAe,EAAKvtB,MAAM0tB,aACZ,mCAA7CptB,EAAQ,aAAiB,GAAzB,UACAivD,EAAsB,WAClBuE,MAEgD,2BAA7CxzD,EAAQ,aAAiB,GAAzB,UACPivD,EAAsB,WAClBA,EAAsB,WAClBuE,QAG4C,kBAA7CxzD,EAAQ,aAAiB,GAAzB,WACPivD,EAAsB,WAClBA,EAAsB,WAClBA,EAAsB,WAClBuE,UAMhBA,KAGR,SAAC90D,GACGuB,QAAQC,IAAIxB,MAKlBuwD,EAAwB,SAAC7nD,GAC3BmkB,GAAa88B,IAAb,gBAA0B,EAAKhqD,MAAMiI,MAAMurB,OAAjB,OAA1B,eAA0E,GACtE,SAAC7xB,GACGC,QAAQC,IAAIF,GACZoH,KAEJ,SAAC1I,GACGuB,QAAQC,IAAIxB,MAKlB80D,EAAqB,WACvB,EAAKn1D,MAAMmmB,QAAQvX,KAAK,2BACxB9G,OAAOC,SAAS2B,WApRG,EAwR3B0rD,0BAA4B,WACxB,GAAI,EAAK/zD,MAAMwtB,UAAW,CAAC,IAAD,uBACtB,YAAwB,EAAKxtB,MAAMwtB,UAAUmC,UAA7C,+CAAwD,CAAC,IAA9CD,EAA6C,+BACpD,YAAwBA,EAAUW,WAAlC,+CAA8C,CAC1C,GAAiC,gBADS,QAC5BW,eACV,OAAO,GAHqC,oFADlC,mFAS1B,GAAI,EAAKhxB,MAAMutB,YAAa,CAAC,IAAD,uBACxB,YAAwB,EAAKvtB,MAAMutB,YAAYoC,UAA/C,+CAA0D,CAAC,IAAhDD,EAA+C,+BACtD,YAAwBA,EAAUW,WAAlC,+CAA8C,CAC1C,GAAiC,gBADS,QAC5BW,eACV,OAAO,GAHuC,oFADlC,mFAS5B,OAAI,EAAKhxB,MAAM0tB,cACP,EAAK1tB,MAAM0tB,aAAasD,gBACjB,GA1Sf,EAAKhxB,MAAQ,CACTopD,YAAa,EACb4K,eAAe,EACfC,KAAM,GACNh+B,KAAM,GACNu8B,YAAa,GACb0B,wBAAwB,GATL,EAZ/B,mFAyByB,IAAD,OAChBh0D,KAAIC,IAAI,yBAA2BtB,KAAKF,MAAMiI,MAAMurB,OAAjB,SAC/B,SAAC7xB,GAEG,IAAMoiC,EAAiBpiC,EAAS2uB,gBAC1BzB,EAAYkV,EAAenT,kBAC3BhC,EAAcmV,EAAerR,oBAC7B3D,EAAegV,EAAelQ,qBAKpC,GAFA,EAAK5xB,SAAS,CAACosB,OAAQK,GAASuhC,cAActuD,EAAU,EAAK3B,MAAMiI,MAAMurB,OAAjB,SAEpD3E,EAAW,CACX,IAAMsV,EAAetV,EAAUgC,SAASn0B,MAAM,OAC9C,EAAKuF,SAAS,CAAC4sB,UAAW,CACtBgC,SAAU,CAAEzwB,MAAO+jC,EAAa,GAAIr/B,MAAOq/B,EAAa,IACxDnT,UAAWnC,EAAUiC,gBAAgB,GAAGC,UAAUjvB,IAAI,SAAAivB,GAClD,MAAO,CACHG,UAAW,CAAE9wB,MAAO2wB,EAAUE,WAAYnsB,MAAOisB,EAAUA,WAC3DI,QAASJ,EAAUI,QACnBsG,UAAW1G,EAAUK,WACrBmF,QAASxF,EAAUM,SACnBC,QAASP,EAAUO,QAAQxvB,IAAI,SAAAkwB,GAC3B,MAAO,CACHxe,GAAIwe,EAAOxe,GACX2B,KAAM6c,EAAO7c,KACboc,eAAgBS,EAAOT,eACvBC,IAAKQ,EAAOR,IACZkG,WAAY1F,EAAOP,aACnBN,QAASa,EAAOb,WAGxBO,WAAYX,EAAUW,WAAW5vB,IAAI,SAAA6vB,GACjC,MAAO,CACHC,QAAS,CAAExxB,MAAOuxB,EAAUE,SAAU/sB,MAAO6sB,EAAUG,gBACvDI,OAAQP,EAAUM,KAClBF,OAAQhuB,SAAS4tB,EAAUI,QAC3B/Z,MAAO2Z,EAAU3Z,MACjBga,OAAQ,CAAE5xB,MAAO,GAAI0E,MAAO6sB,EAAUK,QACtC2F,UAAW,IAAI55B,KAAK4zB,EAAUQ,YAC9BE,eAAgBV,EAAUS,gBAC1BG,kBAAmBZ,EAAUW,mBAC7BG,eAAgBd,EAAUa,yBAQlD,GAAI5D,EAAa,CACb,IAAMuV,EAAevV,EAAYiC,SAASn0B,MAAM,OAChD,EAAKuF,SAAS,CAAC2sB,YAAa,CACxBiC,SAAU,CAAEzwB,MAAO+jC,EAAa,GAAIr/B,MAAOq/B,EAAa,IACxDvR,aAAc,IAAI70B,KAAK6wB,EAAY+D,eACnCG,gBAAiBlE,EAAYiE,iBAC7BkD,UAAWnH,EAAYmE,WACvBW,SAAU,CAAEtzB,MAAO,GAAI0E,MAAO8pB,EAAY8E,UAC1CqD,iBAAkBnI,EAAYgF,kBAC9BoD,UAAWpI,EAAY+E,WACvBuD,cAAetI,EAAYqI,eAAiB,IAAIl5B,KAAK6wB,EAAYqI,qBAAkBz2B,EACnFwwB,UAAWpC,EAAYoC,UAAUlvB,IAAI,SAAAivB,GACjC,MAAO,CACHG,UAAW,CAAE9wB,MAAO2wB,EAAUE,WAAYnsB,MAAOisB,EAAUA,WAC3DI,QAASJ,EAAUI,QACnBsG,UAAW1G,EAAUK,WACrBmF,QAASxF,EAAUM,SACnBgB,eAAgBtB,EAAUqB,gBAC1BG,kBAAmBxB,EAAUuB,mBAC7BG,eAAgB1B,EAAUyB,gBAC1BlB,QAASP,EAAUO,QAAQxvB,IAAI,SAAAkwB,GAC3B,MAAO,CACHxe,GAAIwe,EAAOxe,GACX2B,KAAM6c,EAAO7c,KACboc,eAAgBS,EAAOT,eACvB5wB,KAAMqxB,EAAOrxB,KACb6wB,IAAKQ,EAAOR,IACZkG,WAAY1F,EAAOP,aACnBN,QAASa,EAAOb,WAGxBO,WAAYX,EAAUW,WAAW5vB,IAAI,SAAA6vB,GACjC,MAAO,CACHC,QAAS,CAAExxB,MAAOuxB,EAAUE,SAAU/sB,MAAO6sB,EAAUG,gBACvDI,OAAQP,EAAUM,KAClBF,OAAQhuB,SAAS4tB,EAAUI,QAC3B/Z,MAAO2Z,EAAU3Z,MACjBga,OAAQL,EAAUK,OAClB2F,UAAW,IAAI55B,KAAK4zB,EAAUQ,YAC9BE,eAAgBV,EAAUS,gBAC1BG,kBAAmBZ,EAAUW,mBAC7BG,eAAgBd,EAAUa,sBAK1C2D,eAAgBvH,EAAYqE,mBAAmBnxB,IAAI,SAAAs0B,GAC/C,MAAO,CACHjD,SAAUiD,EAAclD,UACxBmD,KAAMtyB,SAASqyB,EAAchD,YAC7BC,WAAY+C,EAAcrE,UAGlCiB,QAASpE,EAAYoE,QACrBS,OAAQ7E,EAAY6E,UAGxB,EAAKyb,QAAQ,GAAGpqC,MAAQ,YAG5B,GAAIiqB,EAAc,CACd,IAAMoV,EAAepV,EAAa8B,SAASn0B,MAAM,OAC3C84D,EAAgBzmC,EAAagC,UAAUr0B,MAAM,OAC7C+4D,EAAa1mC,EAAaiD,OAAOt1B,MAAM,OAC7C,EAAKuF,SAAS,CAAC8sB,aAAc,CACzB8B,SAAU,CAAEzwB,MAAO+jC,EAAa,GAAIr/B,MAAOq/B,EAAa,IACxDpT,UAAW,CAAE3wB,MAAOo1D,EAAc,GAAI1wD,MAAO0wD,EAAc,IAC3DxjC,OAAQ,CAAE5xB,MAAOq1D,EAAW,GAAI3wD,MAAO2wD,EAAW,IAClDz9C,MAAO+W,EAAa/W,MACpBqa,eAAgBtD,EAAaqD,gBAC7BG,kBAAmBxD,EAAauD,mBAChCG,eAAgB1D,EAAayD,mBAEjC,EAAK0c,QAAQ,GAAGpqC,MAAQ,uBAG5B,EAAK7C,SAAS,CAACq1B,KAAM31B,EAASg0B,IAAI7zB,IAAI,SAAA6zB,GAClC,MAAO,CACHniB,GAAImiB,EAAI3zB,IACR81B,MAAOnC,EAAIkC,OACX9F,OAAQ4D,EAAI5D,OACZj0B,KAAM,IAAIC,KAAK43B,EAAI73B,MACnBka,MAAO2d,EAAI3d,WAIfrW,EAASszB,UAAUr4B,OAAS,GAC5B2E,KAAIC,IAAJ,gCAAiCG,EAASszB,WACtC,SAACtzB,GACG,EAAKM,SAAS,CAACioB,OAAQwE,GAAS8V,cAAc7iC,KAC9CJ,KAAIC,IAAJ,gCAAiCG,EAASszB,UAA1C,aACI,SAACtzB,GACGC,QAAQC,IAAIF,IAEhB,SAACtB,GACGuB,QAAQC,IAAIxB,MAGxB,SAACA,GACGuB,QAAQC,IAAIxB,KAIpBsB,EAAS4zB,UAAU34B,OAAS,GAC5B2E,KAAIC,IAAJ,gCAAiCG,EAAS4zB,WACtC,SAAC5zB,GACG,EAAKM,SAAS,CAAC0pB,OAAQ+C,GAAS4J,cAAc32B,MAElD,SAACtB,GACGuB,QAAQC,IAAIxB,MAI5B,SAACA,GACGuB,QAAQC,IAAIxB,OA7L5B,+BAiU2B,IAAD,OAClB,OACI,gBAACqY,EAAA,EAAD,CAAM3R,WAAS,EAACtG,UAAU,sBACpBP,KAAKmB,MAAMgtB,SAAYnuB,KAAKmB,MAAM6oB,QAAWhqB,KAAKmB,MAAMsqB,QAWrD,KAVD,uBACI/qB,MAAO,CACHkG,gBAAiB,YACjBL,OAAQ,IACRD,SAAU,QACVjE,MAAO,OACPC,OAAQ,SACZ,gBAAC,GAAD,CAASA,OAAO,WAKxB,gBAAC,GAAD,CACI/B,UAAU,QACVivD,OAAQxvD,KAAKmB,MAAMk0D,uBACnBl9C,YAAa,WACT,EAAKpW,SAAS,CAACszD,wBAAwB,KAE3CjsC,OAAO,2BACPvL,QACI,iJAGJ8xC,OACI,gCACA,gBAACx2C,EAAA,EAAD,CAAQ/H,QAAQ,WAAWvG,MAAM,UAC7B/E,QAAS,WACL,EAAK/D,SAAS,CAACszD,wBAAwB,MAF/C,UAMA,wBAAM30D,MAAO,CAACqP,QAAS,UACvB,gBAACoJ,EAAA,EAAD,CAAQ/H,QAAQ,YAAYvG,MAAM,UAC9B/E,QAAS,WACL,EAAK/D,SAAS,CAACszD,wBAAwB,IACvC,EAAKN,cAHb,wBAUR,gBAAC,GAAD,CACI/qC,OAAQhqB,KAAKmB,MAAM6oB,OACnByB,OAAQzrB,KAAKmB,MAAMsqB,OACnB0C,OAAQnuB,KAAKmB,MAAMgtB,OACnB2Y,aAAa,UACb3Z,sBAAoB,IAExB,gBAAC,GAAD,CACI6hB,QAAShvC,KAAKgvC,QACdJ,YAAa5uC,KAAKmB,MAAMopD,YACxBxb,eAAgB,SAAC5vC,GACb,EAAK4C,SAAS,CAACwoD,YAAaprD,OAGpC,uBAAKoB,UAAU,gBACiB,IAA3BP,KAAKmB,MAAMopD,aAAqBvqD,KAAKmB,MAAMgtB,OAExCnuB,KAAKmB,MAAMwtB,UACP3uB,KAAKw1D,wBAAwBx1D,KAAKmB,MAAMwtB,UAAW3uB,KAAKmB,MAAMgtB,QAE9DnuB,KAAKmB,MAAMutB,YACX1uB,KAAK2xD,uBAAuB3xD,KAAKmB,MAAMutB,YAAa1uB,KAAKmB,MAAMgtB,QAE/DnuB,KAAKmB,MAAM0tB,aACX7uB,KAAKy1D,0BAA0Bz1D,KAAKmB,MAAM0tB,cAE1C,KAEuB,IAA3B7uB,KAAKmB,MAAMopD,aAAqBvqD,KAAKmB,MAAM6oB,OAC3C,gBAAC,GAAD,CACIzoB,SAAUvB,KAAKmB,MAAM6oB,OAAOzoB,WACL,IAA3BvB,KAAKmB,MAAMopD,cAAsBvqD,KAAKmB,MAAM6oB,QAAUhqB,KAAKmB,MAAMsqB,QACjE,gBAAC,GAAD,CACIjqB,SACIxB,KAAKmB,MAAM6oB,QAAUhqB,KAAKmB,MAAM6oB,OAAOyB,OAASzrB,KAAKmB,MAAM6oB,OAAOyB,OAAOnY,GACzEtT,KAAKmB,MAAMsqB,OAASzrB,KAAKmB,MAAMsqB,OAAOnY,GAAK,KACxB,IAA3BtT,KAAKmB,MAAMopD,YACX,gBAAC,GAAD,MAC2B,IAA3BvqD,KAAKmB,MAAMopD,aAAqBvqD,KAAKmB,MAAM6oB,OAC3C,gBAAC,GAAD,CAAsBzoB,SAAUvB,KAAKmB,MAAM6oB,OAAOzoB,WACvB,IAA3BvB,KAAKmB,MAAMopD,aAAqBvqD,KAAKmB,MAAM6oB,OAC3C,gBAAC/oB,GAAA,EAAD,CACIM,SAAUvB,KAAKmB,MAAM6oB,OAAOzoB,WAChC,MAGPvB,KAAKmB,MAAMgtB,OACR,gBAAC,GAAD,CACI4f,eAAa,EACbE,iBAAe,EACfH,SAAU,aACVE,WAAY,aACZK,sBACKruC,KAAKmB,MAAMgtB,OAAOgJ,cAClBn3B,KAAKmB,MAAM0tB,cACX7uB,KAAKmB,MAAMg0D,eACiB,aAA7Bn1D,KAAKmB,MAAMgtB,OAAO/kB,YAEd9I,EAFsC,WACtC,EAAKyB,SAAS,CAACozD,eAAe,KAEtC7mB,uBACKtuC,KAAKmB,MAAMgtB,OAAOgJ,eAClBn3B,KAAKmB,MAAM0tB,eAAgB7uB,KAAKmB,MAAMg0D,eACtCn1D,KAAKk1D,iCAEF50D,EAFgC,WAChC,EAAKs0D,sBAEbrmB,wBACiC,aAA7BvuC,KAAKmB,MAAMgtB,OAAO/kB,SACjBpJ,KAAKmB,MAAMgtB,OAAOgJ,cACnBn3B,KAAKk1D,6BAA+B,WAChC,EAAKnzD,SAAS,CAACszD,wBAAwB,UACvC/0D,IACZ,QAtbpB,8CA2b4BquB,EAA6BR,GAAkC,IAAD,OAClF,OACKnuB,KAAKmB,MAAMg0D,eACXhnC,EAAOgJ,cACU,aAAlBhJ,EAAO/kB,OAOH,gBAAC,GAAD,CACIulB,UAAWA,EACXyI,KAAMp3B,KAAKmB,MAAMi2B,KACjBu8B,YAAa3zD,KAAKmB,MAAMwyD,YACxBL,aAAcnlC,EAAOgJ,cAAkC,aAAlBhJ,EAAO/kB,OAC5CsqD,iBAAkB,WACd,EAAK3xD,SAAS,CACVq1B,KAAM,EAAKj2B,MAAMi2B,KACjBu8B,YAAa,EAAKxyD,MAAMwyD,iBAdpC,gBAAC,GAAD,CACIhlC,UAAWA,EACXmb,sBAAuB,WACnB,EAAK/nC,SAAS,CAAC4sB,UAAW,EAAKxtB,MAAMwtB,iBAnc7D,6CAqd2BD,EAAiCP,GAAkC,IAAD,OAMrF,OALAzsB,QAAQC,IACJ,6BAA8B3B,KAAKmB,MAAMg0D,cACzC,wBAAyBhnC,EAAOgJ,aAChC,+BAAkD,aAAlBhJ,EAAO/kB,QAGtCpJ,KAAKmB,MAAMg0D,eACXhnC,EAAOgJ,cACU,aAAlBhJ,EAAO/kB,OAQH,gBAAC,GAAD,CACIulB,UAAWD,EACX0I,KAAMp3B,KAAKmB,MAAMi2B,KACjBu8B,YAAa3zD,KAAKmB,MAAMwyD,YACxBL,aAAcnlC,EAAOgJ,aACrBu8B,iBAAkB,WACd,EAAK3xD,SAAS,CACVq1B,KAAM,EAAKj2B,MAAMi2B,KACjBu8B,YAAa,EAAKxyD,MAAMwyD,iBAfpC,gBAAC,GAAD,CACIjlC,YAAaA,EACbsa,wBAAyB,WACrB,EAAKjnC,SAAS,CAAC2sB,YAAa,EAAKvtB,MAAMutB,mBAle/D,gDAqf8BG,GAAiD,IAAD,OACtE,OACI,2BACI,gBAAC,GAAD,CACIA,aAAcA,EACdoe,yBAA0B,WACtB,EAAKlrC,SAAS,CAAC8sB,aAAc,EAAK1tB,MAAM0tB,uBA3fhE,GAAuC7tB,aC/D/BkmB,GAAa2qC,GAAb3qC,SACA3G,GAAqBuxC,GAAW9uC,GAAhCzC,iBAEO2G,MAAQ,uBACrB,qCAAAnY,EAAA,qEAKY,qDALZ,uBAEI2mD,EAFJ,EAEIA,eACA1D,EAHJ,EAGIA,gBACAC,EAJJ,EAIIA,mBAGIl4C,EAAYm4C,aAChBF,EACAC,EAFgBC,CAGhBwD,GAVJ,kBAWS,CAAEvD,QAASp4C,IAXpB,yCAaA,CACEqN,SAAU,gBAAC,GAAD,QCdDuuC,GAAb,mMAE0B71D,EAAeC,GACjC,OACKC,KAAKF,MAAMG,cAAgBH,EAAMG,aACjCD,KAAKF,MAAMI,QAAUJ,EAAMI,OAC3BF,KAAKF,MAAMi0B,SAAWj0B,EAAMi0B,SANzC,+BAU2B,IAAD,OAClB,OACI,uBAAKxzB,UAAU,wBACX,uBAAKA,UAAU,QAAQP,KAAKF,MAAMG,aAClC,uBAAKM,UAAU,eACX,yBACIA,UAAU,kBACVL,MAAOF,KAAKF,MAAMI,MAClBS,SAAU,SAACC,GACP,EAAKd,MAAMa,SAASC,EAAME,OAAOZ,UAEzC,uBAAKK,UAAU,gBAAgBP,KAAKF,MAAMi0B,cArB9D,GAAwC/yB,aCY3B40D,GAAb,YAEI,WAAY91D,GAAgB,IAAD,+BACvB,8CAAMA,KAqHV4sB,eAAiB,SAACmpC,EAAY12D,GAC1B,IAAMyH,EAAmBzH,EAAQ,IAAM,EAAI,UAAY,UAEvD,OACI,gBAAC0tB,GAAA,EAAD,CAAUnsB,MAAO,CAACkG,gBAAiBA,IAC/B,gBAAC+lB,GAAA,EAAD,KAAY,iBACZ,gBAACA,GAAA,EAAD,KAAY,mBACZ,gBAACA,GAAA,EAAD,KAAY,kBACZ,gBAACA,GAAA,EAAD,KAAY,eACZ,gBAACA,GAAA,EAAD,QA5HR,EAAKxrB,MAAQ,GAHU,EAF/B,wEAU2B,IAAD,OAClB,OACI,gBAACqX,EAAA,EAAD,CAAM3R,WAAS,EAACtG,UAAU,sBACtB,uBAAKA,UAAU,WACX,uBAAKA,UAAU,UAAf,mBAEA,uBAAKA,UAAU,oBACX,gBAACiY,EAAA,EAAD,CAAM3R,WAAS,EAAC6I,QAAS,IACrB,gBAAC8I,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,YAAf,gBACA,gBAAC,GAAD,CACIL,MAAO,CAACA,MAAM,2BAA4B0E,MAAO,IACjDgmB,QAAS,CAAC,CAAC1qB,MAAM,GAAI0E,MAAO,KAC5BjE,SAAU,SAACyvC,OAGf,gBAAC,GAAD,CACInwC,YAAY,GACZC,MAAM,GACN6zB,OAAO,eACPpzB,SAAU,SAACyvC,OAIf,gBAAC,GAAD,CACIxrC,MAAM,SACNsrC,kBAAkB,EAClBvvC,SAAU,eACd,gBAAC,GAAD,CACIiE,MAAM,mBACNsrC,kBAAkB,EAClBvvC,SAAU,gBAElB,gBAAC6X,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,YAAf,qBACA,gBAAC,GAAD,CACIN,YAAY,cACZC,MAAO,CAACA,MAAM,GAAI0E,MAAO,IACzBgmB,QAAS,CAAC,CAAC1qB,MAAM,GAAI0E,MAAO,KAC5BjE,SAAU,SAACyvC,OAGf,gBAAC,GAAD,CACInwC,YAAY,gBACZC,MAAO,CAACA,MAAM,GAAI0E,MAAO,IACzBgmB,QAAS,CAAC,CAAC1qB,MAAM,GAAI0E,MAAO,KAC5BjE,SAAU,SAACyvC,QAInB,gBAAC53B,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GACX,uBAAKnY,UAAU,YAAf,6BAEJ,gBAACiY,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,MAOvB,uBAAKnY,UAAU,eACX,uBAAKA,UAAU,YAAf,0BAA8C,KAA9C,MACA,gBAACgD,GAAA,EAAD,CACIhD,UAAU,0BACV2D,KAAM,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,IACxBW,aAAc,kBAAM,EAAK2nB,qBACzB1nB,UAAW,SAAC2nB,EAActtB,GAAf,OACP,EAAKutB,eAAeD,EAASttB,IACjCoG,aAAc,SAACD,GAAD,gBACPA,EAAKE,KADE,YACMF,EAAKG,GADX,mBACwBH,EAAKF,MAD7B,aAEdM,iBAAiB,OACjB1B,mBAAoB,CAAC,GAAI,GAAI,WAjFzD,0CAyGQ,OACI,gCACChE,KAAK0xC,mBAAmB,SAAU,aAClC1xC,KAAK0xC,mBAAmB,OAAQ,QAChC1xC,KAAK0xC,mBAAmB,aAAc,eACtC1xC,KAAK0xC,mBAAmB,WAAY,aACpC1xC,KAAK0xC,mBAAmB,GAAI,SAAU,WA/GnD,yCAwIuBC,EAAkBC,EAAoBvvC,GACrD,OACI,gBAACsqB,GAAA,EAAD,CAAWjsB,MAAO,CAAC2B,MAAOA,IACtB,wBAAM9B,UAAU,YAAYqxC,GAEd,KAAbD,EACG,gCACA,uBAAKjxC,MAAO,CAACmV,MAAO,UAChB,gBAAC,KAAD,CACI9P,KAAM8rC,IACN/rC,QAAS,gBAKjB,gBAACjG,GAAA,EAAD,CACIK,MAAOF,KAAKmB,MAAMwwC,GAClBhxC,SAAU,SAACyvC,QAIf,UA7JpB,GAAmCpvC,a,UCa7Bw2C,I,OAAmBpxC,YAAW,CACnCoJ,OAAQ,CACL5I,gBAAiB,kBAKf+wC,GAAS,SAAC,GAAyC,IAAvCrkC,EAAsC,EAAtCA,GAAIpT,EAAkC,EAAlCA,MAAOmU,EAA2B,EAA3BA,MAAO1T,EAAoB,EAApBA,SAC7Bi3C,EAAoBJ,KAC1B,OACC,gBAAC,IAAD,CACClkC,GAAIA,EACJlM,QAASwwC,EACT13C,MAAOA,EACJS,SAAUA,EACVm1D,kBAAgB,EACnBp1D,MAAO,CACFkG,gBAAiB,cACjBiE,MAAO,UACPL,SAAU,WACVa,OAAQ,oBACR0E,QAAS,UACTb,aAAc,IAEnB2oC,YAAa,SAAClmC,GACb,GAAgB,MAAZA,EAAkB,CACrB,IAAMzR,EAAamU,EAAME,KAAK,SAACC,GAC9B,OAAOA,EAAKtU,QAAUyR,IAEvB,OAAIzR,EACIA,EAAM+U,KAEN,SAGT,MAAO,WAGPZ,EAAMzS,IAAI,SAAC4S,GAAD,OACV,gBAAC,IAAD,CAAqB9T,MAAO,CAACmK,MAAO,UAAWL,SAAU,YAAa8K,IAAKd,EAAKtU,MAAOA,MAAOsU,EAAKtU,OACjGsU,EAAKS,UAOL8gD,GAAiB,CACrB,CACE9gD,KAAM,iBACN/U,MAAO,kBAET,CACE+U,KAAM,kBACN/U,MAAO,oBAIL81D,GAAe,CACnB,KAAQ,EACR,OAAU,EACV,IAAO,GAyEIC,GAAb,YAEE,WAAYn2D,GAA2B,IAAD,+BACpC,8CAAMA,KAURygD,MAAQ,WACN,EAAKx+C,SAAS,CACZy+C,SAAS,EACT0V,eAAgB,GAChBC,2BAA4B,GAC5B9lC,YAAa0lC,GAAe,GAAG71D,SAhBG,EAoBtCk2D,uBAAyB,SACvBx1D,GAEA,EAAKmB,SAAS,CACZsuB,YAAazvB,EAAME,OAAOZ,SArB5B,EAAKiB,MAAQ,CACXq/C,SAAS,EACT0V,eAAgB,GAChBC,2BAA4B,GAC5B9lC,YAAa0lC,GAAe,GAAG71D,OAPG,EAFxC,mFA8BuB,IAAD,OAClB+F,aAAa6kD,QAAQ,UAAW,aAEhC,IAAMuL,EAAuB,CAC3BrsC,OAAQ,IAYV3oB,KAAIC,IAAJ,uCAAwC+B,KAAKC,UARxB,CACnBkiC,MAAO,CACLp8B,OAAQ,OACR,gCAAiC,YACjCisB,UAAW,OAKb,SAAC5zB,GACCC,QAAQC,IAAIF,GACZA,EAASG,IAAI,SAACusB,EAAQhvB,GACpBsmC,EAAyBtX,EAAShvB,EAAQ,IAAOsC,EAAS/E,QAC1D,EAAKqF,SAAS,CAACm0D,eAAgB,EAAK/0D,MAAM+0D,oBAG9C,SAAC/1D,GACCuB,QAAQC,IAAIxB,KAIhB,IAAMslC,EAA2B,SAACtX,EAAamoC,GAC7CtpC,GAAa1rB,IAAI,qBACf,SAACokC,GACC,IAAMC,EAAcD,EAAM5b,OAAO,SAAA8b,GAAQ,OAAIA,EAASC,UAAY1X,EAAOmG,kBAAiB,GAC1F,GAAIqR,EAAa,CACf,IAAMjT,EAAe,IAAI70B,KAAKswB,EAAOiC,gBAAgBoC,oBAAoBC,eAEzE,EAAKtxB,MAAM+0D,eAAe3I,QAAQ,CAChCj6C,GAAI6a,EAAOrsB,IACX40B,UAAWt6B,KAAe0pC,qBACxB3X,EAAOiC,gBAAgBC,YACvBlC,EAAOiC,gBAAgBE,cACvBqV,EAAYI,YAEdwwB,SAAUpoC,EAAOmG,gBACjBrf,KAAMkZ,EAAO6G,YACX54B,KAAeovB,aACb2C,EAAO6G,YAAYE,UACnB/G,EAAO6G,YAAYG,YACnBhH,EAAO6G,YAAYI,YACjB,MACN3C,cAAeC,EACf8jC,SAAUroC,EAAOiC,gBAAgBoC,oBAAoB7B,SAASn0B,MAAM,OAAO,GAC3E02B,WAAYujC,EAAsB/jC,GAClCtpB,OAAQ+kB,EAAO/kB,OAAOstD,oBACtBnmC,QAASpC,EAAOiC,gBAAgBG,QAAQmmC,sBAGtCvoC,EAAO6G,YAAYlzB,KACrBu0D,EAAgBrsC,OAAOtb,KAAK,CAC1BqmB,UAAW5G,EAAO6G,YAAYlzB,IAC9B2wB,cAAeC,IAKnB,EAAK3wB,SAAS,CAACm0D,eAAgB,EAAK/0D,MAAM+0D,iBAEtCI,GACFK,MAIN,SAACx2D,GACGuB,QAAQC,IAAIxB,MAKds2D,EAAwB,SAAC/jC,GAC7B,IAAMpzB,EAAM,IAAIzB,KAEhB,OAAOoB,KAAKw5B,OAAOn5B,EAAIP,UAAY2zB,EAAa3zB,WAD1B,QAKlB43D,EAAe,WACnBt1D,KAAIioD,KAAK,0BAA2BjmD,KAAKC,UAAU+yD,GACnD,SAAC50D,GACCC,QAAQC,IAAIF,GACZA,EAASG,IAAI,SAAAooB,GACXA,EAAO4sC,QAAQh1D,IAAI,SAAAi1D,GACjB,EAAK11D,MAAMg1D,2BAA2BznD,KAAK,CACzC4E,GAAIujD,EAAO/0D,IACXmT,KAAM+U,EAAOoF,YACb0nC,YACE16D,KAAe00C,mBACb+lB,EAAOC,YAAYlyC,SAAS,WAC5BiyC,EAAOC,YAAYlyC,SAAS,UAC5BiyC,EAAOE,YACPF,EAAOC,aAEX1tD,OAAQytD,EAAOE,YAAYx6D,cAC3Bw6D,YAAaF,EAAOE,kBAW1B,EAAKh1D,SAAS,CAACo0D,2BAA4B,EAAKh1D,MAAMg1D,8BAExD,SAACh2D,GACCuB,QAAQC,IAAIxB,QAlJpB,+BAyJgC,IAAD,EAKvBH,KAAKmB,MAHPq/C,EAFyB,EAEzBA,QACA0V,EAHyB,EAGzBA,eACAC,EAJyB,EAIzBA,2BAGF,OACE,uBAAK51D,UAAW+jD,mBAAK,cAClB9D,EAAU,gBAAC,KAAD,MAAa,KACxB,gBAAChoC,EAAA,EAAD,CACE3R,WAAS,EACT6I,QAAS,EACTmH,QAAQ,gBACR9P,WAAW,cACX,gBAACyR,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACb,gBAACF,EAAA,EAAD,CAAM3R,WAAS,EAACgQ,QAAQ,aAAa9P,WAAW,cAC9C,gBAACyR,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,IACb,gBAAC1G,EAAA,EAAD,CAAYzR,UAAW+jD,mBAAK,UAA5B,gBAIN,gBAAC9rC,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAIu9B,GAAI,IACrB,gBAACz9B,EAAA,EAAD,CACE3R,WAAS,EACTgQ,QAAQ,gBACRnH,QAAS,EACT3I,WAAW,cAEX,gBAACyR,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAIu9B,GAAI,GACrB,gBAACjkC,EAAA,EAAD,CAAYzR,UAAW+jD,mBAAK,cAA5B,oBAGA,gBAAC/yC,EAAA,EAAD,CAAOhR,UAAW+jD,mBAAK,YACrB,gBAAC1N,GAAA,EAAD,CACEr2C,UAAW+jD,mBAAK,eAChBr9C,QAAQ,OACRC,cAAc,MACdF,eAAe,iBAEf,gBAAC4vC,GAAA,EAAD,KACE,gBAAC5kC,EAAA,EAAD,CACEzR,UAAW+jD,mBAAK,mBAChB5jD,MAAO,CAAEmK,MAAO,YACdqrD,EAAex5D,QAEnB,gBAACsV,EAAA,EAAD,CACEzR,UAAW+jD,mBAAK,gCADlB,6BAKF,gBAAC1N,GAAA,EAAD,KACE,gBAAC,GAAD,CAAQviC,MAAO0hD,GAAgB71D,MAAOF,KAAKmB,MAAMkvB,YAAa1vB,SAAUX,KAAKo2D,2BAGjF,gBAACxf,GAAA,EAAD,CAAKr2C,UAAW+jD,mBAAK,iBACnB,gBAAC7N,GAAA,EAAD,CAAOzwC,KAAK,QAAQzF,UAAW+jD,mBAAK,oBAClC,gBAAC5N,GAAA,EAAD,KACE,gBAAC7pB,GAAA,EAAD,KACE,gBAACF,GAAA,EAAD,CACEpsB,UAAW+jD,mBAAK,gCADlB,eAKA,gBAAC33B,GAAA,EAAD,CACEpsB,UAAW+jD,mBAAK,gCADlB,iBAKA,gBAAC33B,GAAA,EAAD,CACEpsB,UAAW+jD,mBAAK,gCADlB,YAKA,gBAAC33B,GAAA,EAAD,CACEpsB,UAAW+jD,mBAAK,gCADlB,oBAOJ,gBAAC3N,GAAA,EAAD,KACGuf,EAAet0D,IAAI,SAACmD,EAAK5F,GACxB,OACE,gBAAC0tB,GAAA,EAAD,CACEnsB,MAAO,CAAE2d,OAAQ,WACjB/I,IAAKnW,EACLoB,UAAW+jD,mBACTnlD,EAAQ,IAAM,EACM,SAAhB4F,EAAIwrB,QACF,8BACA,2BACc,SAAhBxrB,EAAIwrB,QACJ,6BACA,2BAENzqB,QAAS,WACP8B,OAAOC,SAAStK,QAAhB,wCAAyDwH,EAAIwxD,SAA7D,YAAyExxD,EAAI2xB,UAA7E,YAA0F3xB,EAAIuO,OAGhG,gBAACqZ,GAAA,EAAD,CACEpsB,UAAW+jD,mBACT,gCAEFzyC,UAAU,KACVwX,MAAM,OAEN,gBAACutB,GAAA,EAAD,CAAK3vC,QAAQ,OAAOC,cAAc,MAAMH,WAAW,UACjD,gBAACiL,EAAA,EAAD,CACEtR,MAAO,CAACuT,YAAa,GACrB1T,UAAW+jD,mBAAK,oBAAD,kBAAiC0R,GAAajxD,EAAIwrB,WACjE3Z,MAAM,UACLo/C,GAAajxD,EAAIwrB,UAEpB,gBAAC,IAAD,CACE7vB,MAAO,CACLuT,YAAa,GAEf1T,UAAW+jD,mBAAK,gBAAD,wBAAmCv/C,EAAIqE,OAASrE,EAAIqE,OAAO7M,cAAgB,YAC1Fg6C,MAAOxxC,EAAIqE,OACXrD,KAAMixD,MACR,gBAAC,IAAD,CAAMz2D,UAAW+jD,mBAAK,kCAAmC7+C,GAAI,KAC1DV,EAAIkQ,QAIX,gBAAC0X,GAAA,EAAD,CACEpsB,UAAW+jD,mBACT,8BAGDpO,KAAOnxC,EAAI0tB,eAAeiW,OAAO,gBAEpC,gBAAC/b,GAAA,EAAD,CACEpsB,UAAW+jD,mBACT,iCAGDv/C,EAAIyxD,UAEP,gBAAC7pC,GAAA,EAAD,CACEpsB,UAAW+jD,mBACT,iCAGDv/C,EAAImuB,oBAcvB,gBAAC1a,EAAA,EAAD,CAAMhE,MAAI,EAACkE,GAAI,GAAIu9B,GAAI,GACrB,gBAACjkC,EAAA,EAAD,CAAYzR,UAAW+jD,mBAAK,cAA5B,kBAGA,gBAAC/yC,EAAA,EAAD,CAAOhR,UAAW+jD,mBAAK,YACrB,gBAAC1N,GAAA,EAAD,CAAKr2C,UAAW+jD,mBAAK,gBACnB,gBAACtyC,EAAA,EAAD,CACEzR,UAAW+jD,mBAAK,mBAChB5jD,MAAO,CAAEmK,MAAO,YAEfsrD,EAA2Bz5D,QAE9B,gBAACsV,EAAA,EAAD,CACEzR,UAAW+jD,mBAAK,gCADlB,iCAGgC,2BAHhC,yBAMF,gBAAC1N,GAAA,EAAD,CACEr2C,UAAW+jD,mBAAK,gBAChBv9C,WAAW,cACX,gBAAC0vC,GAAA,EAAD,CAAOzwC,KAAK,QAAQzF,UAAW+jD,mBAAK,oBAClC,gBAAC5N,GAAA,EAAD,KACE,gBAAC7pB,GAAA,EAAD,KACE,gBAACF,GAAA,EAAD,CACEpsB,UAAW+jD,mBAAK,gCADlB,QAKA,gBAAC33B,GAAA,EAAD,CACEpsB,UAAW+jD,mBAAK,gCADlB,aAOJ,gBAAC3N,GAAA,EAAD,KACGwf,EAA2Bv0D,IAAI,SAACmD,EAAK5F,GACpC,OACE,gBAAC0tB,GAAA,EAAD,CACEnsB,MAAO,CAAE2d,OAAQ,WACjB/I,IAAKnW,EACLoB,UAAW+jD,mBACTnlD,EAAQ,IAAM,EACV,2BACA,4BAGN,gBAACwtB,GAAA,EAAD,CACEpsB,UAAW+jD,mBACT,gCAEFzyC,UAAU,KACVwX,MAAM,OAEN,gBAACutB,GAAA,EAAD,CAAK3vC,QAAQ,OAAOC,cAAc,MAAMH,WAAW,UACjD,gBAAC,IAAD,CAAiBrG,MAAO,CAACu2D,WAA4B,eAAflyD,EAAIqE,OAA0B,UAAY,SAAWyB,MAAO,UAAWoJ,YAAa,OAASlO,KAAMqzC,MACzI,gBAAC,IAAD,CAAM74C,UAAW+jD,mBAAK,kCAAmC7+C,GAAI,KAC1DV,EAAIkQ,QAIX,gBAAC0X,GAAA,EAAD,CACEpsB,UAAW+jD,mBACT,iCAGDv/C,EAAI+xD,6BA3XrC,GAA+B91D,aC7IzBilB,GAAUixC,eACVxtC,GAAeytC,GAAWztC,aAG5B0tC,GAAS,CACX,CACEjnC,KAAM,QACNte,UAAWkgD,IAEb,CACE5hC,KAAM,aACNte,UAAWokD,IAEb,CACE9lC,KAAM,IACNte,UAAWokD,GACXoB,OAAO,GAET,CACElnC,KAAM,WACNte,UAAW6jD,IAMb,CACEvlC,KAAM,iBACNte,UAAW22C,IAEb,CACEr4B,KAAM,UACNte,UAAW+jD,IAEb,CACEzlC,KAAM,0CACNte,UAAW+9C,IAEb,CACEz/B,KAAM,2CACNte,UAAW8iD,KAMA,SAAS2C,KAEtB,OACE,2BAEE,gBAACC,EAAA,OAAD,CACEC,cAAc,WACdC,aAAa,OAEb,wBAAMxiD,KAAK,cAAc4I,QAAQ,qBAGnC,uBAAKtd,UAAU,YACb,gBAAC,GAAWyiB,GAAGxB,WAAf,CAA0ByE,QAASA,GAASviB,KAAM,mBAEpD,uBAAKnD,UAAU,QACb,gBAAC,IAAD,KACGm3D,YAAaN,IACd,gBAAC,IAAD,CAAOjnC,KAAK,GAAGte,UAAW6X,QApBpC0tC,GAAOx1D,IAAI,SAAA+1D,GAAK,OAAKA,EAAMxnC,KAAN,UADN,kBACM,OAAyBwnC,EAAMxnC,QC5DpD,ICHKtK,GDGCoC,GAAwB2vC,EAAQ,KAEzBC,GAAsB,CACjCC,GAAIX,GAAW1tC,QAAQvB,0BAA0B,KAAMD,M,SCNpDpC,K,wCAAAA,E,wDAAAA,E,qDAAAA,Q,KAOUA,U,6NCZR,IAAMG,GAA+B,CAC1Cw6B,SAAS,EACTrgD,OAAO,EACP43D,YAAa,GACbC,SAAU,CACRC,aAAc,KAwCHC,OAnCf,WAGmB,IAFjB/2D,EAEgB,uDAFQ6kB,GACxBiD,EACgB,uCAChB,OAAQA,EAAOxoB,MACb,KAAKolB,GAAYsyC,WACf,MAAO,CACLJ,YAAa52D,EAAM42D,YACnBvX,SAAS,EACTrgD,OAAO,EACP63D,SAAU,CACRC,aAAc,KAGpB,KAAKpyC,GAAYuyC,mBACf,MAAO,CACLL,YAAa9uC,EAAOE,QAAQkvC,SAC5B7X,SAAS,EACTrgD,MAAOgB,EAAMhB,MACb63D,SAAU,CACRC,aAAchvC,EAAOE,QAAQmvC,QAGnC,KAAKzyC,GAAY0yC,iBACqBp3D,EAA5BhB,MAA4BgB,EAArBq/C,QADjB,IAC6BgY,EAD7B,aACsCr3D,EADtC,qBAEE,O,wVAAO,EACLhB,MAAO8oB,EAAOE,QACdq3B,SAAS,GACNgY,GAEP,QACE,OAAOr3D,I,iOCZL4kB,GAA4B8rC,GAA5B9rC,eAAgBE,GAAY4rC,GAAZ5rC,QAClBwyC,GAAkBtB,GAAW1tC,QAAQb,SACnCjf,GAAkBmoD,GAAWhvC,SAA7BnZ,cAMF+uD,GAAmB,IAAIC,IAAiB,YAAa,IAIrDz1C,GAAQ6C,GChCC,WAA+C,IAAxBtC,EAAuB,uDAAJ,GAC/CwC,EAAY4rC,GAAZ5rC,QAQR,OAPoB2yC,a,wVAAgB,EAClCC,OAAQC,GACR9wC,SAAUmvC,GAAW1tC,QAAQT,uBAC7B+vC,OAAQC,aAAc/yC,IACnBxC,KDyBc,GACqCwC,IACpDgzC,GAAanmB,SAASomB,eAAe,OAErCp/C,GAAS,SAACqO,GAAoC,IAArBpO,EAAoB,uDAARu9C,GACnC9tC,EAAsE2tC,GAAW3tC,SAASzP,UAChGo/C,SAEI,gBAAC3vC,EAAD,CAAUzP,UAAWA,EAAWmJ,MAAOA,GAAOwE,eAAgB,IAC5D,gBAAC+wC,GAAD,CAAiBtwC,SAAUA,GACzB,gBAACpO,EAAD,QAINk/C,KAQFP,GAAiBU,UAAK94D,EAAW,KAAOyC,KAAK,WAC3C+vC,SAAS3vC,KAAKk2D,UAAUC,IAAI,gBAiBxB1xD,OAAe2xD,KAenBz/C,GAAO+9C,IAdP,IAAI5qD,QAAQ,SAAAC,GACVA,EAAQ,4DAEPnK,KAAK,kBACJkK,QAAQusD,IAAI,CACV,mCACA,uCAGHz2D,KAAK,kBAAM+W,GAAO+9C,MAClB30D,MAAM,SAAAu2D,GACL,MAAMA,IAgBZ9vD,GAActB,a","file":"static/js/main.354e1572.chunk.js","sourcesContent":["\n\n\n\nexport class GlobalFunction {\n\n    static capitalizeEachWord(sentence: string) {\n        var splitStr = sentence.toLowerCase().split(' ');\n        for (var i = 0; i < splitStr.length; i++) {\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     \n        }\n        return splitStr.join(' '); \n    }\n\n    static toNameFormat(fname: string, mname: string, lname: string) {\n        return `${fname} ${GlobalFunction.getIntials(mname)} ${lname}`;\n    }\n\n    static formatNumber(num: number, isDecimal: boolean = false) {\n        let value = '';\n        if (isDecimal) {\n            value = num.toFixed(2);\n        } else {\n            value = num.toString();\n        }\n        return value.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n    }\n\n\n    static getIntials(text: string) {\n        var initials = '';\n        var wordArray = text.split(' ');\n        for (var i = 0; i < wordArray.length; i++) {\n            initials += wordArray[i].substring(0,1).toUpperCase() + '.';\n        }\n        return initials;\n    }\n\n    static toCommonDateString(paramDate: Date | string) {\n        let date = typeof paramDate === 'string' ? new Date(paramDate) : paramDate;\n        if (date) {\n            const monthNames = [\n                \"January\", \"February\", \"March\",\n                \"April\", \"May\", \"June\", \"July\",\n                \"August\", \"September\", \"October\",\n                \"November\", \"December\"\n            ];\n            const day = date.getDate();\n            const monthIndex = date.getMonth();\n            const year = date.getFullYear();\n            return (monthNames[monthIndex] + \" \" + day + \", \" + year);\n        }\n\n        return '';\n    }\n\n    static toShortDateString(paramDate: Date | string) {\n        let date = typeof paramDate === 'string' ? new Date(paramDate) : paramDate;\n        if (date) {\n            const monthNames = [\n                \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \n                \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n            ];\n            const day = date.getDate();\n            const monthIndex = date.getMonth();\n            const year = date.getFullYear();\n            return (monthNames[monthIndex] + \" \" + day + \", \" + year);\n        }\n\n        return '';\n    }\n\n    static toDateAndTime(paramDate: Date | string) {\n        let date = typeof paramDate === 'string' ? new Date(paramDate) : paramDate;\n        if (date) {\n            const monthNames = [\n                \"January\", \"February\", \"March\",\n                \"April\", \"May\", \"June\", \"July\",\n                \"August\", \"September\", \"October\",\n                \"November\", \"December\"\n            ];\n            const day = date.getDate();\n            const monthIndex = date.getMonth();\n            const year = date.getFullYear();\n            const hours = date.getHours() - (date.getHours() > 12 ? 12 : 0);\n            const minutes = date.getMinutes();\n            const seconds = date.getSeconds();\n            const meridian = (date.getHours() > 12 ? \"PM\" : \"AM\");\n            \n            var newSec = '0' + seconds;\n            if (seconds.toLocaleString().length !== 1) newSec = seconds.toLocaleString()\n\n            return (\n                monthNames[monthIndex] + \" \" + \n                day + \", \" + \n                year + \" - \" + \n                hours + \":\" + \n                minutes + \":\" + \n                newSec + \" \" + \n                meridian);\n        }\n\n        return '';\n    }\n\n    static getTimeDeffirence(fromDate: Date, toDate: Date) {\n        const seconds = (toDate.getTime() - fromDate.getTime()) / 1000;\n        const scaleList = [ \n            ['day', 'days'], \n            ['hour', 'hours'], \n            ['minute', 'minutes'], \n            ['second', 'seconds'] \n        ];\n        const valueList = [\n            Math.round(seconds / 86400),\n            Math.round(seconds / 3600) % 24,\n            Math.round(seconds / 60) % 60,\n            Math.round(seconds) % 60\n        ];\n        \n        let index = 0;\n        for (let i = 0; i < valueList.length; i++) {\n            if (valueList[i] > 0) {\n                index = i;\n                break;\n            }\n        }\n\n        if (index) {\n            return `${valueList[index]} ${scaleList[index][valueList[index] == 1 ? 0 : 1]}`\n        }\n        return '';\n    }\n\n    static getAge(birthDate: any) {\n        if (birthDate) {\n            var ageInMillis = Date.now() - birthDate;\n            return Math.abs(new Date(ageInMillis).getUTCFullYear() - 1970);\n        }\n\n        return null;\n    }\n\n    static generateTicketNumber(ticketType: string, specificType: string, appNo: string) {\n        const ticketTypes = {\n            \"Availment\": \"AVL\",\n            \"Inquiry\": \"INQ\"\n        };\n        const specificTypes = {\n            \"Inpatient\": \"INP\",\n            \"Outpatient Procedure\": \"OP\",\n            \"Emergency Room\": \"ER\",\n            \"Maternity\": \"MAT\",\n            \"Consultation\": \"CON\"\n        }\n        const tempString = (ticketType === 'Inquiry' ? '' : `${specificTypes[specificType]}-`);\n        return `${ticketTypes[ticketType]}-${tempString}${appNo}`;\n    }\n}","import * as React from 'react';\n// import { InputBase } from '@material-ui/core';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport './component-style.scss';\n\ninterface IProps {\n    value: string;\n    onChange: (value: string) => void;\n\n    placeholder?: string;\n    error?: boolean;\n    icon?: IconProp;\n    disabled?: boolean;\n    charLimit?: number;\n}\n\nexport class InputField extends React.Component<IProps> {\n\n    \n\n    shouldComponentUpdate(props: IProps, _state: any) {\n        return (\n            (this.props.placeholder !== props.placeholder) ||\n            (this.props.value !== props.value) ||\n            (this.props.error !== props.error)\n        );\n    }\n\n    render(): JSX.Element {\n        const self = this;\n        const dynamicStyle = {\n            borderColor: (self.props.error ? '#E53935' : undefined)\n        };\n\n        return (\n            <div className='input-field-container'>\n                {this.props.placeholder ? (\n                    <div className={this.props.disabled ? 'text-disabled text' : 'text'}>\n                        {this.props.placeholder}\n                    </div>\n                ) : null}\n                <input type='text' \n                    disabled={this.props.disabled}\n                    className={this.props.disabled ? 'text-field-disabled text-field' : 'text-field'}\n                    style={dynamicStyle}\n                    // fullWidth \n                    value={this.props.value}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                        const condition = \n                            this.props.charLimit ? (\n                                event.target.value.length <= this.props.charLimit \n                            ) : (true) ;\n                            \n                        if (condition) {\n                            this.props.onChange(event.target.value);\n                        }\n                    }} />\n                {this.props.charLimit ? (\n                    <>\n                    <div className='text' />\n                    <div \n                        className={this.props.disabled ? 'text-disabled text' : 'text'}\n                        style={{textAlign: 'right'}}>\n                            {`${this.props.value.length}/${this.props.charLimit}`}\n                    </div>\n                    </>\n                ) : null}\n                \n            \n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { API } from 'Pages/CustomerCarePage/API';\n\ninterface IProps {\n    memberId?: string;\n    clientId?: string;\n}\n\ninterface IStates {\n    contractListUpdated: boolean;\n}\n\nexport class CheckContractSection extends React.Component<IProps, IStates> {\n\n    contractUrls: string[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            contractListUpdated: false\n        }\n\n        this.contractUrls = [];\n    }\n\n    componentDidMount() {\n        API.get(`customer-care/members/${this.props.memberId || this.props.clientId}/benefits`,\n            (response) => {\n                console.log(response);\n                this.contractUrls = response.map(benefit => {\n                    return `/customer-care/benefits/io/pdf?id=${benefit._id}&type=contract`\n                });\n\n                this.setState({contractListUpdated: true});\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n    \n    render(): JSX.Element {\n        const pdfUrl = `${process.execPath}/../../../sample.pdf`;\n        // const viewerUrl = `https://mozilla.github.io/pdf.js/web/viewer.html?file=${pdfUrl}`;\n        const viewerUrl = `${process.execPath}/../pdfjs-2.2.228-dist/web/viewer.html?file=${pdfUrl}`;\n\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Check Contract</div>\n                <div className='sub-section'>\n                    {/*this.contractUrls.map((url, index) => {\n                        return (\n                            index === 0 ?\n                            <iframe \n                                style={{width: '100%', height: '1280px'}}\n                                src={API.getUrl() + url}  />\n\n                            : null\n                        );\n                    })*/}\n                            <iframe \n                                style={{width: '100%', height: '1280px'}}\n                                src={viewerUrl}  />\n                </div>\n                \n            </div>\n        );\n    }\n}","\nlet backendUrl = process.env.REACT_APP_BASE_URL;\n\nexport class API {\n\n    static getUrl() {\n        return process.env.REACT_APP_BASE_URL;\n    }\n\n    static async get(url: string, success: Function, fail: Function) {\n        fetch(backendUrl + url, {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n        .then(response => response.json())\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async post(url: string, \n                      body: any,\n                      success: Function, \n                      fail: Function,\n                      customHeader: any = { 'Content-Type': 'application/json' }) {\n        fetch(backendUrl + url, {\n            method: 'POST',\n            headers: customHeader,\n            body: body\n        })\n        .then(response => response.json())\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async postFormData(url: string, body: any, success: Function, fail: Function) {\n        fetch(backendUrl + url, {\n            method: 'POST',\n            body: body\n        })\n        .then(response => response.json())\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async put(url: string, body: any, success: Function, fail: Function) {\n        fetch(backendUrl + url, {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        })\n        .then(response => response)\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async patch(url: string, body: any, success: Function, fail: Function) {\n        fetch(backendUrl + url, {\n            method: 'PATCH',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        })\n        .then(response => response)\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async delete(url: string, body: any, success: Function, fail: Function) {\n        fetch(backendUrl + url, {\n            method: 'DELETE',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        })\n        .then(response => response)\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n}","import * as React from 'react';\nimport { Table, TableBody, TableHead, TableRow, TablePagination, TableCell } from '@material-ui/core';\nimport './component-style.scss';\nimport { LabelDisplayedRowsArgs } from '@material-ui/core/TablePagination';\nimport { DropdownChoice } from '../Models';\n\ninterface IProps {\n    className?: string;\n    paginationClass?: string;\n\n    /* Normal Mode */\n    rows: any[];\n    renderHeader: () => JSX.Element;\n    renderRow: (rowData: any, index: number) => JSX.Element;\n    noRowsMessage?: string | JSX.Element;\n\n    /* Simple Mode - Automatically handles styling, so you can focus on data. */\n    columns?: DropdownChoice[]; // value: attribute, label: the title appearing on the header\n    canFilter?: boolean;\n    canSort?: boolean;\n\n    stickyHeader?: boolean;\n    canOverflow?: boolean;\n    rowsPerPageOptions?: number[];\n    labelRowsPerPage?: string;\n    onChangeInfo?: (info: LabelDisplayedRowsArgs) => string;\n\n    onChangeState?: (page: number, rowsPerPage: number) => void;\n}\n\ninterface IStates {\n    page: number;\n    rowsPerPage: number;\n    \n    filterData: any;\n}\n\nexport class CustomTable extends React.PureComponent<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            page: 0,\n            rowsPerPage: 0,\n\n            filterData: {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.rowsPerPageOptions) {\n            this.setState({rowsPerPage: this.props.rowsPerPageOptions[0]});\n        }\n    }\n\n    handleChangePage = (_event: unknown, page: number) => {\n        this.setState({page: page});\n    }\n    \n    handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({\n            rowsPerPage: parseInt(event.target.value, 10),\n            page: 0\n        });\n    }\n\n    resetPage = () => {\n        this.setState({page: 0});\n    }\n\n    getSlicedData = () => {\n        if (this.props.rowsPerPageOptions) {\n            const startingItem = this.state.page * this.state.rowsPerPage;\n            return this.props.rows.slice(startingItem, startingItem + this.state.rowsPerPage);\n        } else {\n            return this.props.rows;\n        }\n    }\n\n    componentWillUpdate(_props: IProps, state: IStates) {\n        if (this.state.page != state.page ||\n            this.state.rowsPerPage != state.rowsPerPage) {\n            if (this.props.onChangeState) {\n                this.props.onChangeState(state.page, state.rowsPerPage);\n            }\n        }\n    }\n\n    render(): JSX.Element {\n        return (\n            <>\n            <div style={{overflow: this.props.canOverflow ? 'auto' : 'none'}}>\n                <Table \n                    className={`${(this.props.className ? this.props.className : '')} table`} \n                    stickyHeader={this.props.stickyHeader ? this.props.stickyHeader : false}>\n                    <TableHead>\n                        {this.props.columns ? (\n                            <TableRow>\n                                {this.props.columns.map(column => {\n                                    return <TableCell>{column.label}</TableCell>\n                                })}\n                            </TableRow>\n                        ) : this.props.renderHeader ? (\n                            <TableRow>\n                                {this.props.renderHeader()}\n                            </TableRow>\n                        ) : null}\n                    </TableHead>\n                    <TableBody>\n                        {this.props.renderRow ? (\n                            this.props.rows.length > 0 ? (\n                                this.getSlicedData().map((row, j) => {\n                                    return this.props.renderRow(row, j)\n                                })  \n                            ) : (\n                                <TableRow>\n                                    <TableCell colSpan={999} style={{textAlign: 'center'}}>\n                                        {this.props.noRowsMessage ? this.props.noRowsMessage : 'No data found'}\n                                    </TableCell>\n                                </TableRow>\n                            )\n                        ) : null}\n                    </TableBody>\n                </Table>\n            </div>\n            {this.props.rowsPerPageOptions ? (\n                <TablePagination\n                    className={`${(this.props.paginationClass ? this.props.paginationClass : '')} pagination MuiTablePagination-root`}\n                    rowsPerPageOptions={this.props.rowsPerPageOptions}\n                    count={this.props.rows.length}\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    labelDisplayedRows={(info: LabelDisplayedRowsArgs) => {\n                        return (\n                            this.props.onChangeInfo ? (\n                                this.props.onChangeInfo(info)\n                            ) : (\n                                `${info.from}-${info.to} of ${info.count}`\n                            ));\n                    }}\n                    labelRowsPerPage={\n                        this.props.labelRowsPerPage ? (\n                            this.props.labelRowsPerPage\n                        ) : (\n                            'Rows per page:'\n                        )}\n                    onChangePage={(_event: unknown, page: number) => {\n                        this.setState({page: page});\n                    }}\n                    onChangeRowsPerPage={(event: React.ChangeEvent<HTMLInputElement>) => {\n                        this.setState({\n                            rowsPerPage: parseInt(event.target.value, 10),\n                            page: 0\n                        });\n                    }} />\n            ) : null}\n            </>\n        );\n    }\n}","\n\nimport * as React from 'react';\n// import { Link } from '@material-ui/core';\nimport './component-style.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconProp, SizeProp } from '@fortawesome/fontawesome-svg-core';\n\ninterface IProps {\n    icon: IconProp;\n    onClick: () => void;\n    size?: SizeProp;\n}\n\nexport class IconButton extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <div className='icon-button' onClick={() => this.props.onClick()}>\n                {this.props.icon ? <FontAwesomeIcon icon={this.props.icon} size={this.props.size} /> : null}\n            </div>\n        );\n    }\n}","let backendUrl = process.env.REACT_APP_BASE_URL;\n\nexport class API {\n\n    // //local\n    // static localUrl = 'https://neo-local.seerlabs.com/api';\n    \n    // //stg\n    // static stgUrl = 'http://18.138.94.224:4101/api';\n    \n    static async get(url: string, success: Function, fail: Function) {\n        // const backendUrl = (process.env.NODE_ENV === 'development' ? this.localUrl : this.stgUrl);\n        fetch(backendUrl + url, {\n            method: 'GET',\n            headers: { \n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('pm_token'),\n            }\n        })\n        .then(response => response.json())\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n    \n    static async post(url: string, body: any, success: Function, fail: Function) {\n        // const backendUrl = (process.env.NODE_ENV === 'development' ? this.localUrl : this.stgUrl);\n        fetch(backendUrl + url, {\n            method: 'POST',\n            headers: { \n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('pm_token'),\n            },\n            body: JSON.stringify(body)\n        })\n        .then(response => response.json())\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async put(url: string, body: any, success: Function, fail: Function) {\n        // const backendUrl = (process.env.NODE_ENV === 'development' ? this.localUrl : this.stgUrl);\n        fetch(backendUrl + url, {\n            method: 'PUT',\n            headers: { \n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('pm_token'),\n            },\n            body: JSON.stringify(body)\n        })\n        .then(response => response)\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n}","import * as React from 'react';\nimport { CircularProgress } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface LoaderProps {\n}\n\nconst useStyles = makeStyles({\n\troot: {\n        position: 'fixed',\n        width: '100%',\n        height: '100%',\n        zIndex: 9999,\n        right: '0px',\n        bottom: '0px',\n        top: '0px',\n        left: '0px',\n        textAlign: \"center\",\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    },\n    container:{\n        height: '100%',\n        outline: 0,\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        flexDirection: 'column'\n    }\n});\n\nexport const Loader: React.FC<LoaderProps> = (): JSX.Element => {\n    // const buttonclasses = ButtonStyle();\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <div className={classes.container}>\n                <CircularProgress size={150}/>\n            </div>\n        </div>\n    )\n}\n\nLoader.defaultProps = {}","import { createMuiTheme, makeStyles, createStyles, withStyles } from '@material-ui/core/styles';\nimport React__default, { useState, createElement, useEffect, Component as Component$2, lazy, Suspense } from 'react';\nimport Select from 'react-select';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ChipInput from 'material-ui-chip-input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Select$1 from '@material-ui/core/Select';\nimport ExpandMoreRounded from '@material-ui/icons/ExpandMoreRounded';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckSquare, faHome, faPlusCircle, faUsers, faFileSignature, faIdCardAlt, faTasks, faTable, faFolderOpen, faUserFriends, faScrewdriver, faBookOpen } from '@fortawesome/free-solid-svg-icons';\nimport { faSquare } from '@fortawesome/free-regular-svg-icons';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport Avatar from '@material-ui/core/Avatar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link as Link$1, HashRouter } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport Drawer from '@material-ui/core/Drawer';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Popper from '@material-ui/core/Popper';\nimport { Fade, Paper as Paper$1, List as List$1, ListItem as ListItem$1, ListItemIcon as ListItemIcon$1, ListItemText as ListItemText$1 } from '@material-ui/core';\nimport { useStore, Provider as Provider$1, useSelector } from 'react-redux';\nimport { routerMiddleware, ConnectedRouter } from 'connected-react-router';\nimport { ThemeProvider } from '@material-ui/styles';\nimport invariant from 'invariant';\nimport conformsTo from 'lodash/conformsTo';\nimport isFunction from 'lodash/isFunction';\nimport isObject from 'lodash/isObject';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createBrowserHistory } from 'history';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport isEmpty from 'lodash/isEmpty';\nimport isString from 'lodash/isString';\nimport { createSelector } from 'reselect';\nimport { IntlProvider, defineMessages, FormattedMessage } from 'react-intl';\nvar index =\n/*#__PURE__*/\nObject.freeze({});\nvar index$1 =\n/*#__PURE__*/\nObject.freeze({});\nvar index$2 =\n/*#__PURE__*/\nObject.freeze({}); // This optional code is used to register a service worker.\n// register() is not called by default.\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nvar isLocalhost = Boolean(window.location.hostname === 'localhost' || // [::1] is the IPv6 localhost address.\nwindow.location.hostname === '[::1]' || // 127.0.0.1/8 is considered localhost for IPv4.\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nfunction register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    var publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', function () {\n      var swUrl = process.env.PUBLIC_URL + \"/service-worker.js\";\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config); // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n\n        navigator.serviceWorker.ready.then(function () {\n          console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker.register(swUrl).then(function (registration) {\n    registration.onupdatefound = function () {\n      var installingWorker = registration.installing;\n\n      if (installingWorker == null) {\n        return;\n      }\n\n      installingWorker.onstatechange = function () {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            // At this point, the updated precached content has been fetched,\n            // but the previous service worker will still serve the older\n            // content until all client tabs are closed.\n            console.log('New content is available and will be used when all ' + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'); // Execute callback\n\n            if (config && config.onUpdate) {\n              config.onUpdate(registration);\n            }\n          } else {\n            // At this point, everything has been precached.\n            // It's the perfect time to display a\n            // \"Content is cached for offline use.\" message.\n            console.log('Content is cached for offline use.'); // Execute callback\n\n            if (config && config.onSuccess) {\n              config.onSuccess(registration);\n            }\n          }\n        }\n      };\n    };\n  }).catch(function (error) {\n    console.error('Error during service worker registration:', error);\n  });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl).then(function (response) {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    var contentType = response.headers.get('content-type');\n\n    if (response.status === 404 || contentType != null && contentType.indexOf('javascript') === -1) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then(function (registration) {\n        registration.unregister().then(function () {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  }).catch(function () {\n    console.log('No internet connection found. App is running in offline mode.');\n  });\n}\n\nfunction unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function (registration) {\n      registration.unregister();\n    });\n  }\n}\n\nvar service_worker =\n/*#__PURE__*/\nObject.freeze({\n  register: register,\n  unregister: unregister\n});\nvar index$3 =\n/*#__PURE__*/\nObject.freeze({\n  ServiceWorker: service_worker\n});\nvar index$4 =\n/*#__PURE__*/\nObject.freeze({});\nvar BaseTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#3ab77d',\n      contrastText: '#ffffff'\n    },\n    secondary: {\n      main: '#ffffff',\n      contrastText: '#3ab77d'\n    }\n  },\n  typography: {\n    fontFamily: 'Usual, Roboto, Helvetica, Arial, sans-serif',\n    button: {\n      fontFamily: 'Usual, Roboto, Helvetica, Arial, sans-serif',\n      fontWeight: 700,\n      fontSize: 13,\n      textTransform: 'none'\n    }\n  },\n  overrides: {\n    MuiDialog: {\n      root: {\n        width: '100%'\n      }\n    },\n    MuiDialogTitle: {\n      root: {\n        fontFamily: 'Usual, Roboto, Helvetica, Arial, sans-serif',\n        fontWeight: 550,\n        fontSize: '1em',\n        color: '#272E4C'\n      }\n    },\n    MuiDialogContentText: {\n      root: {\n        fontSize: '.8em',\n        color: '#272E4C'\n      }\n    },\n    MuiFormControlLabel: {\n      label: {\n        fontSize: '.8em',\n        color: '#272E4C'\n      }\n    },\n    MuiIconButton: {\n      root: {\n        fontSize: '.9em'\n      }\n    },\n    MuiButton: {\n      containedPrimary: {\n        boxShadow: '0px 3px 6px #1e207129',\n        '&:hover': {\n          backgroundColor: '#008650'\n        }\n      },\n      containedSecondary: {\n        border: '1px solid #0000001A',\n        boxShadow: '0px 1px 3px #00000033',\n        '&:hover': {\n          backgroundColor: '#3ab77d1a'\n        }\n      },\n      outlinedSecondary: {\n        border: '1px solid #3ab77d',\n        boxShadow: '0px 1px 3px #00000033',\n        '&:hover': {\n          backgroundColor: '#3ab77d1a'\n        }\n      }\n    }\n  }\n});\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\n\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n}\n\nvar labelColor = 'rgb(21,28,28)';\nvar grayColor = 'rgba(39,52,76,0.3)';\nvar grayColorFocused = 'rgba(39,52,76,0.5)';\nvar borderCss = {\n  borderColor: grayColor,\n  borderRadius: 5\n};\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      width: '100%'\n    },\n    control: {\n      '& label.Mui-focused': {\n        color: labelColor\n      },\n      '& .MuiInput-underline:after': {\n        borderBottomColor: grayColor\n      },\n      '& .MuiOutlinedInput-root': {\n        '& fieldset': borderCss,\n        '&:hover fieldset': borderCss,\n        '&.Mui-focused fieldset': _assign(_assign({}, borderCss), {\n          borderColor: grayColorFocused\n        })\n      }\n    },\n    input: {\n      display: 'flex'\n    },\n    label: {},\n    select: {\n      marginTop: theme.spacing(1),\n      backgroundColor: 'white',\n      width: '100%'\n    },\n    valueContainer: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      flex: 1,\n      alignItems: 'center',\n      overflow: 'hidden'\n    },\n    noOptionsMessage: {\n      padding: theme.spacing(1, 2)\n    },\n    singleValue: {\n      fontSize: 16\n    },\n    placeholder: {\n      position: 'absolute',\n      left: 2,\n      bottom: 6,\n      fontSize: 16\n    },\n    paper: {\n      position: 'absolute',\n      zIndex: 999,\n      left: 0,\n      right: 0\n    }\n  });\n});\n\nfunction NoOptionsMessage(props) {\n  return React__default.createElement(Typography, _assign({\n    color: \"textSecondary\",\n    className: props.selectProps.classes.noOptionsMessage\n  }, props.innerProps), props.children);\n}\n\nfunction inputComponent(_a) {\n  var inputRef = _a.inputRef,\n      props = __rest(_a, [\"inputRef\"]);\n\n  return React__default.createElement(\"div\", _assign({\n    ref: inputRef\n  }, props));\n}\n\nfunction Control(props) {\n  var children = props.children,\n      innerProps = props.innerProps,\n      innerRef = props.innerRef,\n      _a = props.selectProps,\n      classes = _a.classes,\n      TextFieldProps = _a.TextFieldProps;\n  return React__default.createElement(TextField, _assign({\n    className: classes.control,\n    InputProps: {\n      inputComponent: inputComponent,\n      inputProps: _assign({\n        className: classes.input,\n        ref: innerRef,\n        children: children\n      }, innerProps)\n    }\n  }, TextFieldProps, {\n    variant: \"outlined\",\n    fullWidth: true\n  }));\n}\n\nfunction Option(props) {\n  return React__default.createElement(MenuItem, _assign({\n    ref: props.innerRef,\n    selected: props.isFocused,\n    component: \"div\",\n    style: {\n      fontWeight: props.isSelected ? 500 : 400\n    }\n  }, props.innerProps), props.children);\n}\n\nfunction Placeholder(props) {\n  var selectProps = props.selectProps,\n      _a = props.innerProps,\n      innerProps = _a === void 0 ? {} : _a,\n      children = props.children;\n  return React__default.createElement(Typography, _assign({\n    color: \"textSecondary\",\n    className: selectProps.classes.placeholder\n  }, innerProps), children);\n}\n\nfunction SingleValue(props) {\n  return React__default.createElement(Typography, _assign({\n    className: props.selectProps.classes.singleValue\n  }, props.innerProps), props.children);\n}\n\nfunction ValueContainer(props) {\n  return React__default.createElement(\"div\", {\n    className: props.selectProps.classes.valueContainer\n  }, props.children);\n}\n\nfunction Menu(props) {\n  return React__default.createElement(Paper, _assign({\n    square: true,\n    className: props.selectProps.classes.paper\n  }, props.innerProps), props.children);\n}\n\nvar components = {\n  Control: Control,\n  Menu: Menu,\n  Option: Option,\n  NoOptionsMessage: NoOptionsMessage,\n  Placeholder: Placeholder,\n  SingleValue: SingleValue,\n  ValueContainer: ValueContainer\n};\n\nvar InputAutocomplete = function InputAutocomplete(props) {\n  var classes = useStyles();\n\n  var _a = React__default.useState(null),\n      single = _a[0],\n      setSingle = _a[1];\n\n  function handleChange(optionItem) {\n    setSingle(optionItem);\n\n    if (props.onChange) {\n      props.onChange(optionItem);\n    }\n  }\n\n  return React__default.createElement(FormControl, {\n    className: classes.root\n  }, React__default.createElement(Typography, {\n    className: classes.label,\n    color: \"textPrimary\"\n  }, props.label), React__default.createElement(NoSsr, null, React__default.createElement(Select, {\n    className: classes.select,\n    classes: classes,\n    inputId: props.inputId,\n    TextFieldProps: {\n      error: props.error\n    },\n    placeholder: \"\",\n    options: props.suggestions,\n    components: components,\n    value: single,\n    onChange: handleChange,\n    isSearchable: true,\n    isClearable: true\n  })));\n};\n\nInputAutocomplete.defaultProps = {\n  error: false\n};\nvar index$5 =\n/*#__PURE__*/\nObject.freeze({\n  InputAutocomplete: InputAutocomplete\n});\nvar labelColor$1 = 'rgb(21,28,28)';\nvar grayColor$1 = 'rgba(39,52,76,0.3)';\nvar grayColorFocused$1 = 'rgba(39,52,76,0.5)';\nvar borderCss$1 = {\n  borderColor: grayColor$1,\n  borderRadius: 5\n};\nvar useStyles$1 = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    label: {},\n    textField: {\n      '& label.Mui-focused': {\n        color: labelColor$1\n      },\n      '& .MuiInput-underline:after': {\n        borderBottomColor: grayColor$1\n      },\n      '& .MuiOutlinedInput-root': {\n        '& fieldset': borderCss$1,\n        '&:hover fieldset': borderCss$1,\n        '&.Mui-focused fieldset': _assign(_assign({}, borderCss$1), {\n          borderColor: grayColorFocused$1\n        })\n      },\n      '&': {\n        marginTop: theme.spacing(1),\n        backgroundColor: 'white',\n        width: '100%'\n      }\n    }\n  };\n});\n\nvar InputChipTextField = function InputChipTextField(props) {\n  var classes = useStyles$1();\n\n  var _a = useState(props.value || []),\n      currentValue = _a[0],\n      setcurrentValue = _a[1];\n\n  var onChange = function onChange(chips) {\n    setcurrentValue(chips);\n\n    if (props.onChange) {\n      props.onChange(chips);\n    }\n  };\n\n  return React__default.createElement(FormControl, {\n    className: classes.root\n  }, React__default.createElement(Typography, {\n    className: classes.label,\n    color: \"textPrimary\"\n  }, props.label), React__default.createElement(ChipInput, {\n    id: props.id,\n    className: classes.textField,\n    defaultValue: currentValue,\n    onChange: onChange,\n    error: props.error,\n    variant: \"outlined\"\n  }));\n};\n\nInputChipTextField.defaultProps = {\n  label: '',\n  value: [],\n  error: false,\n  multiline: false,\n  rows: 1,\n  onChange: function onChange(chips) {\n    console.log(chips);\n  }\n};\nvar index$6 =\n/*#__PURE__*/\nObject.freeze({\n  InputChipTextField: InputChipTextField\n});\nvar labelColor$2 = 'rgb(21,28,28)';\nvar grayColor$2 = 'rgba(39,52,76,0.3)';\nvar grayColorFocused$2 = 'rgba(39,52,76,0.5)';\nvar borderCss$2 = {\n  borderColor: grayColor$2,\n  borderRadius: 5\n};\nvar borderStyles = {\n  root: {\n    '& label.Mui-focused': {\n      color: labelColor$2\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: grayColor$2\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': borderCss$2,\n      '&:hover fieldset': borderCss$2,\n      '&.Mui-focused fieldset': _assign(_assign({}, borderCss$2), {\n        borderColor: grayColorFocused$2\n      })\n    }\n  }\n};\nvar useStyles$2 = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    formControl: {\n      width: '100%'\n    },\n    label: {\n      fontSize: '.8em'\n    },\n    select: {\n      marginTop: theme.spacing(1),\n      backgroundColor: 'white'\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    },\n    icon: {\n      marginRight: theme.spacing(2.5),\n      color: grayColor$2\n    }\n  };\n}); // const StyledFormControl = withStyles(borderStyles)(FormControl);\n\nvar StyledOutlinedInput = withStyles(borderStyles)(OutlinedInput);\n\nvar InputSelect = function InputSelect(props) {\n  var defaultValue = {\n    id: -1,\n    value: '',\n    label: ''\n  };\n\n  var items = __spreadArrays([defaultValue], props.data);\n\n  var getDefaultValue = function getDefaultValue() {\n    if (props.value) {\n      var defVal = items.find(function (item) {\n        return item.value === props.value;\n      });\n\n      if (defVal) {\n        return defVal;\n      }\n    }\n\n    return defaultValue;\n  };\n\n  var classes = useStyles$2();\n\n  var _a = useState(getDefaultValue()),\n      currentValue = _a[0],\n      setCurrentValue = _a[1];\n\n  var inputLabel = React__default.useRef(null);\n  var labelWidth = React__default.useState(0)[0]; // React.useEffect(() => {\n  //   setLabelWidth(inputLabel.current!.offsetWidth);\n  // }, []);\n\n  var onChange = function onChange(e) {\n    var selectedItem = items.find(function (item) {\n      return item.value === e.target.value;\n    }) || defaultValue;\n    setCurrentValue(selectedItem);\n\n    if (props.onChange) {\n      props.onChange(selectedItem);\n    }\n  };\n\n  var displaySelectItem = function displaySelectItem(props, selectItem) {\n    if (props.displaySelectItem) {\n      return props.displaySelectItem(selectItem);\n    }\n\n    var disabled = selectItem.id === -1 && props.required;\n    return React__default.createElement(MenuItem, {\n      key: selectItem.id,\n      value: selectItem.value,\n      disabled: disabled\n    }, selectItem.label);\n  };\n\n  return React__default.createElement(\"div\", {\n    className: classes.formControl\n  }, props.label ? React__default.createElement(InputLabel, {\n    color: \"textPrimary\",\n    className: classes.label,\n    ref: inputLabel,\n    htmlFor: props.id,\n    error: props.error\n  }, props.label) : null, React__default.createElement(Select$1, {\n    className: classes.select,\n    value: currentValue.value,\n    onChange: onChange,\n    input: React__default.createElement(StyledOutlinedInput, {\n      id: props.id,\n      name: props.id,\n      error: props.error,\n      labelWidth: labelWidth,\n      fullWidth: true\n    }),\n    IconComponent: function IconComponent() {\n      return React__default.createElement(ExpandMoreRounded, {\n        className: classes.icon\n      });\n    }\n  }, items.map(function (item) {\n    return displaySelectItem(props, item);\n  })));\n};\n\nInputSelect.defaultProps = {\n  value: '',\n  error: false,\n  required: false,\n  onChange: function onChange(value) {\n    console.log(value);\n  }\n};\nvar index$7 =\n/*#__PURE__*/\nObject.freeze({\n  InputSelect: InputSelect\n});\nvar labelColor$3 = 'rgb(21,28,28)';\nvar grayColor$3 = 'rgba(39,52,76,0.3)';\nvar grayColorFocused$3 = 'rgba(39,52,76,0.5)';\nvar borderCss$3 = {\n  borderColor: grayColor$3,\n  borderRadius: 5\n};\nvar borderStyles$1 = {\n  root: {\n    '& label.Mui-focused': {\n      color: labelColor$3\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: grayColor$3\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': borderCss$3,\n      '&:hover fieldset': borderCss$3,\n      '&.Mui-focused fieldset': _assign(_assign({}, borderCss$3), {\n        borderColor: grayColorFocused$3\n      })\n    }\n  },\n  input: {\n    fontSize: 14 // input: {\n    //   '&:focus': {\n    //     borderRadius: 4,\n    //     borderColor: '#80bdff',\n    //     boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    //   }\n    // }\n\n  }\n};\nvar useStyles$3 = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    formControl: {\n      width: '100%'\n    },\n    label: {\n      fontSize: '.8em'\n    },\n    select: {\n      marginTop: theme.spacing(1),\n      backgroundColor: 'white'\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    },\n    icon: {\n      marginRight: theme.spacing(2.5),\n      color: grayColor$3\n    },\n    error: {\n      color: '#E53935',\n      fontSize: '12px'\n    },\n    errorIcon: {\n      color: '#E53935',\n      fontSize: 'small',\n      float: 'right'\n    }\n  };\n}); // const StyledFormControl = withStyles(borderStyles)(FormControl);\n\nvar StyledOutlinedInput$1 = withStyles(borderStyles$1)(OutlinedInput);\n\nvar InputSelectSetValue = function InputSelectSetValue(props) {\n  var items = __spreadArrays(props.data);\n\n  var classes = useStyles$3();\n  var inputLabel = React__default.useRef(null);\n  var labelWidth = React__default.useState(0)[0]; // React.useEffect(() => {\n  //   setLabelWidth(inputLabel.current!.offsetWidth);\n  // }, []);\n\n  var onChange = function onChange(e) {\n    var selectedItem = items.find(function (item) {\n      return item.value === e.target.value;\n    });\n\n    if (props.onChange) {\n      props.onChange(selectedItem);\n    }\n  };\n\n  var displaySelectItem = function displaySelectItem(props, selectItem) {\n    if (props.displaySelectItem) {\n      return props.displaySelectItem(selectItem);\n    }\n\n    var disabled = selectItem.id === -1 && props.required;\n    return React__default.createElement(MenuItem, {\n      key: selectItem.id,\n      value: selectItem.value,\n      disabled: disabled\n    }, selectItem.label);\n  };\n\n  return React__default.createElement(\"div\", {\n    className: classes.formControl\n  }, React__default.createElement(InputLabel, {\n    color: \"textPrimary\",\n    className: classes.label,\n    ref: inputLabel,\n    htmlFor: props.id\n  }, props.label), React__default.createElement(Select$1, {\n    className: classes.select,\n    value: props.value,\n    onChange: onChange,\n    disabled: props.disabled,\n    input: React__default.createElement(StyledOutlinedInput$1, {\n      id: props.id,\n      name: props.id,\n      error: props.error,\n      labelWidth: labelWidth,\n      fullWidth: true,\n      disabled: props.disabled\n    }),\n    IconComponent: function IconComponent() {\n      return React__default.createElement(ExpandMoreRounded, {\n        className: classes.icon\n      });\n    }\n  }, items.map(function (item) {\n    return displaySelectItem(props, item);\n  })), props.error && React__default.createElement(\"div\", {\n    className: classes.formControl\n  }, React__default.createElement(FormHelperText, {\n    id: \"component-error-text\",\n    className: classes.error\n  }, props.errorMessage, React__default.createElement(ErrorIcon, {\n    className: classes.errorIcon\n  }))));\n};\n\nInputSelectSetValue.defaultProps = {\n  label: '',\n  value: '',\n  error: false,\n  errorMessage: '',\n  required: false,\n  disabled: false,\n  onChange: function onChange(value) {\n    console.log(value);\n  }\n};\nvar index$8 =\n/*#__PURE__*/\nObject.freeze({\n  InputSelectSetValue: InputSelectSetValue\n});\nvar useStyles$4 = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    label: {\n      fontSize: '.8em'\n    },\n    textField: {\n      marginTop: theme.spacing(1),\n      backgroundColor: 'white',\n      fontSize: '14px'\n    },\n    error: {\n      color: '#E53935',\n      fontSize: '12px'\n    },\n    errorIcon: {\n      color: '#E53935',\n      fontSize: 'small',\n      float: 'right'\n    }\n  };\n});\nvar labelColor$4 = 'rgb(21,28,28)';\nvar grayColor$4 = 'rgba(39,52,76,0.3)';\nvar grayColorFocused$4 = 'rgba(39,52,76,0.5)';\nvar borderCss$4 = {\n  borderColor: grayColor$4,\n  borderRadius: 5\n};\nvar StyledTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: labelColor$4\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: grayColor$4\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': borderCss$4,\n      '&:hover fieldset': borderCss$4,\n      '&.Mui-focused fieldset': _assign(_assign({}, borderCss$4), {\n        borderColor: grayColorFocused$4\n      })\n    }\n  }\n})(TextField);\n\nvar InputTextField = function InputTextField(props) {\n  var classes = useStyles$4();\n\n  var onChange = function onChange(e) {\n    var value = e.target.value;\n\n    if (props.onChange) {\n      props.onChange(value);\n    }\n  };\n\n  return React__default.createElement(\"div\", {\n    className: classes.root\n  }, props.label ? React__default.createElement(InputLabel, {\n    htmlFor: props.id,\n    className: classes.label,\n    color: \"textPrimary\"\n  }, props.label) : null, React__default.createElement(StyledTextField, {\n    id: props.id,\n    className: classes.textField,\n    value: props.value,\n    onChange: onChange,\n    error: props.error,\n    multiline: props.multiline,\n    rows: props.rows,\n    type: props.type,\n    fullWidth: true,\n    disabled: props.disabled,\n    variant: \"outlined\"\n  }), props.error && React__default.createElement(\"div\", {\n    className: classes.root\n  }, React__default.createElement(FormHelperText, {\n    id: \"component-error-text\",\n    className: classes.error\n  }, props.errorMessage, React__default.createElement(ErrorIcon, {\n    className: classes.errorIcon\n  }))));\n};\n\nInputTextField.defaultProps = {\n  type: 'text',\n  value: '',\n  error: false,\n  errorMessage: '',\n  multiline: false,\n  disabled: false,\n  rows: 1,\n  onChange: function onChange(value) {\n    console.log(\"InputTextField.defaultProps - Value: \" + value);\n  }\n};\nvar index$9 =\n/*#__PURE__*/\nObject.freeze({\n  InputTextField: InputTextField\n}); //declare class to style components\n\nvar useStyles$5 = makeStyles(function (theme) {\n  return {\n    root: {\n      flexWrap: 'wrap'\n    },\n    inputSelect: {\n      marginBottom: theme.spacing(1)\n    },\n    dialog: {\n      align: 'center',\n      justify: 'center',\n      width: '100%'\n    },\n    dialogContent: {\n      paddingTop: '0px'\n    },\n    container: {\n      paddingRight: '15px',\n      paddingLeft: '15px'\n    },\n    dialogTitle: {\n      marginTop: theme.spacing(2)\n    },\n    dialogContentTitle: {},\n    dialogContentText: {},\n    formControlLabel: {},\n    textField: {},\n    checkBox: {\n      paddingLeft: '10px'\n    },\n    dialogAction: {\n      marginBottom: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      justifyContent: 'center'\n    },\n    resolveDialogAction: {\n      marginBottom: theme.spacing(2),\n      marginTop: theme.spacing(4),\n      justifyContent: 'center'\n    },\n    leftButton: {\n      width: 115,\n      marginLeft: 15,\n      marginRight: 10\n    },\n    rightButton: {\n      width: 115,\n      marginLeft: 10,\n      marginRight: 15\n    }\n  };\n});\nvar StyledCheckbox = withStyles({\n  root: {\n    color: '#9EA3AC',\n    '&$checked': {\n      color: '#1E2071'\n    }\n  },\n  checked: {}\n})(Checkbox);\n\nvar TicketModal = function TicketModal(props) {\n  var classes = useStyles$5();\n\n  var _a = React__default.useState({\n    notes: '',\n    notesError: false,\n    isResolved: false\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  var _b = useState(true),\n      disabled = _b[0],\n      setDisabled = _b[1]; //reset values and close dialog\n\n\n  var handleClose = function handleClose() {\n    setDisabled(true);\n    setState({\n      notes: '',\n      notesError: false,\n      isResolved: false\n    });\n    props.onClose();\n  }; //changes state of the changed values\n\n\n  var setFieldValue = function setFieldValue(fieldName, value) {\n    setState(function (state) {\n      var _a;\n\n      return _assign(_assign({}, state), (_a = {}, _a[fieldName] = value, _a));\n    });\n  };\n\n  var setFieldError = function setFieldError(fieldName, error) {\n    setState(function (state) {\n      var _a;\n\n      return _assign(_assign({}, state), (_a = {}, _a[fieldName] = error, _a));\n    });\n  };\n  /* render ticket management modal in 3 different types (Resolve, Assign, Escalate)\r\n      Sample usage :\r\n      import { Components } from '@hims/core';\r\n      const Modal = Components.UI.TicketModal.TicketModal;\r\n         <Modal\r\n                    type=\"Escalate\" (Resolve/Assign/Escalate) - is not case sensitive but will render title as is\r\n                    onClose={this.onAddDataFieldModalClose}\r\n                    isModalOpen={ticketModal}\r\n                    selectItems={[{\"id\":0,\"value\":'Jae',\"label\":'Jae'},{\"id\":1,\"value\":'Lambert',\"label\":'Lambert'},{\"id\":2,\"value\":'Bau',\"label\":'Bau'}]}\r\n                    onSubmit={this.onAddDataFieldModalClose}\r\n          />\r\n  */\n\n\n  var component = React__default.createElement(\"div\", null);\n\n  switch (props.type.toLowerCase()) {\n    case 'resolve':\n      console.log('in resolve');\n      component = React__default.createElement(\"div\", null, React__default.createElement(Grid, {\n        container: true,\n        className: classes.container,\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        direction: \"column\"\n      }, React__default.createElement(Grid, {\n        item: true,\n        xs: true\n      }, React__default.createElement(DialogTitle, {\n        disableTypography: true,\n        id: \"dialog-title\",\n        className: classes.dialogTitle\n      }, props.type, \" Ticket\")), React__default.createElement(Grid, {\n        item: true,\n        xs: true\n      }, React__default.createElement(DialogContent, {\n        className: classes.dialogContent\n      }, React__default.createElement(DialogContentText, {\n        className: classes.dialogContentText,\n        id: \"alert-dialog-description\"\n      }, \"How was the issue resolved?\"), React__default.createElement(InputTextField, {\n        value: state.notes,\n        error: state.notesError,\n        multiline: true,\n        rows: 4,\n        onChange: function onChange(value) {\n          setFieldValue('notes', value);\n          setFieldError('notesError', value.length === 0);\n        }\n      })), React__default.createElement(Grid, {\n        item: true,\n        xs: true\n      }, React__default.createElement(DialogContent, {\n        className: classes.dialogContent\n      }, React__default.createElement(FormControlLabel, {\n        className: classes.formControlLabel,\n        control: React__default.createElement(StyledCheckbox, {\n          icon: React__default.createElement(FontAwesomeIcon, {\n            icon: faSquare\n          }),\n          checkedIcon: React__default.createElement(FontAwesomeIcon, {\n            icon: faCheckSquare\n          }),\n          color: \"primary\",\n          checked: state.isResolved,\n          onChange: function onChange(value) {\n            setFieldValue('isResolved', value.target.checked);\n            setDisabled(!value.target.checked);\n          },\n          inputProps: {\n            'aria-label': 'primary checkbox'\n          }\n        }),\n        label: \"Mark as resolved\",\n        labelPlacement: \"end\"\n      }))), React__default.createElement(DialogActions, {\n        className: classes.resolveDialogAction\n      }, React__default.createElement(Button, {\n        className: classes.leftButton,\n        variant: \"contained\",\n        onClick: handleClose,\n        color: \"secondary\"\n      }, \"Cancel\"), React__default.createElement(Button, {\n        className: classes.rightButton,\n        variant: \"contained\",\n        disabled: disabled,\n        onClick: props.onSubmit,\n        color: \"primary\"\n      }, \"Resolve\")))));\n      break;\n\n    case 'assign':\n      console.log('in assign');\n      component = React__default.createElement(\"div\", null, React__default.createElement(Grid, {\n        container: true,\n        className: classes.container,\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        direction: \"column\"\n      }, React__default.createElement(Grid, {\n        item: true,\n        xs: true\n      }, React__default.createElement(DialogTitle, {\n        disableTypography: true,\n        id: \"dialog-title\",\n        className: classes.dialogTitle\n      }, props.type, \" Ticket\")), React__default.createElement(Grid, {\n        item: true,\n        xs: true\n      }, React__default.createElement(DialogContent, {\n        className: classes.dialogContent\n      }, React__default.createElement(InputSelect, {\n        id: 'modal-input-select',\n        label: 'Assign To',\n        data: props.selectItems\n      }), React__default.createElement(DialogContentText, null), React__default.createElement(InputTextField, {\n        label: 'Notes',\n        value: state.notes,\n        error: state.notesError,\n        multiline: true,\n        rows: 4,\n        onChange: function onChange(value) {\n          setFieldValue('notes', value);\n          setFieldError('notesError', value.length === 0);\n        }\n      })), React__default.createElement(DialogActions, {\n        className: classes.dialogAction\n      }, React__default.createElement(Button, {\n        className: classes.leftButton,\n        variant: \"contained\",\n        onClick: handleClose,\n        color: \"secondary\"\n      }, \"Cancel\"), React__default.createElement(Button, {\n        className: classes.rightButton,\n        variant: \"contained\",\n        onClick: props.onSubmit,\n        color: \"primary\"\n      }, \"Assign\")))));\n      break;\n\n    case 'escalate':\n      console.log('in escalate');\n      component = React__default.createElement(\"div\", null, React__default.createElement(Grid, {\n        container: true,\n        className: classes.container,\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        direction: \"column\"\n      }, React__default.createElement(Grid, {\n        item: true,\n        xs: true\n      }, React__default.createElement(DialogTitle, {\n        disableTypography: true,\n        id: \"dialog-title\",\n        className: classes.dialogTitle\n      }, props.type, \" Ticket\")), React__default.createElement(Grid, {\n        item: true,\n        xs: true\n      }, React__default.createElement(DialogContent, {\n        className: classes.dialogContent\n      }, React__default.createElement(InputSelect, {\n        id: 'modal-input-select',\n        label: 'Escalate To',\n        data: props.selectItems\n      }), React__default.createElement(DialogContentText, null), React__default.createElement(InputTextField, {\n        label: 'Notes',\n        value: state.notes,\n        error: state.notesError,\n        multiline: true,\n        rows: 4,\n        onChange: function onChange(value) {\n          setFieldValue('notes', value);\n          setFieldError('notesError', value.length === 0);\n        }\n      })), React__default.createElement(DialogActions, {\n        className: classes.dialogAction\n      }, React__default.createElement(Button, {\n        className: classes.leftButton,\n        variant: \"contained\",\n        onClick: handleClose,\n        color: \"secondary\"\n      }, \"Cancel\"), React__default.createElement(Button, {\n        className: classes.rightButton,\n        variant: \"contained\",\n        onClick: props.onSubmit,\n        color: \"primary\"\n      }, \"Escalate\")))));\n      break;\n  }\n\n  return React__default.createElement(Dialog, {\n    className: classes.dialog,\n    open: props.isModalOpen,\n    \"aria-labelledby\": \"simple-dialog-title\"\n  }, component);\n}; //declare defaults\n\n\nTicketModal.defaultProps = {\n  isModalOpen: false,\n  type: 'Resolve',\n  selectItems: [{\n    \"id\": 0,\n    \"value\": '',\n    \"label\": ''\n  }]\n};\nvar index$a =\n/*#__PURE__*/\nObject.freeze({\n  TicketModal: TicketModal\n});\nvar styles = {\n  \"title\": \"index_title__3_oz-\",\n  \"titleBack\": \"index_titleBack__ghwZN\",\n  \"titleFront\": \"index_titleFront__23_8b\",\n  \"titleContact\": \"index_titleContact__2ETaU\",\n  \"titleRecruitmentTitle\": \"index_titleRecruitmentTitle__eDJJH\"\n}; // #endregion Interface Imports\n\nvar SampleCoreComponent =\n/** @class */\nfunction (_super) {\n  __extends(SampleCoreComponent, _super);\n\n  function SampleCoreComponent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SampleCoreComponent.prototype.render = function () {\n    var text = this.props.text;\n    return React__default.createElement(\"div\", {\n      className: styles.title\n    }, React__default.createElement(\"span\", {\n      className: styles.titleBack\n    }, text), React__default.createElement(\"span\", {\n      className: styles.titleFront\n    }, text));\n  };\n\n  return SampleCoreComponent;\n}(React__default.Component);\n\nvar index$b =\n/*#__PURE__*/\nObject.freeze({\n  SampleCoreComponent: SampleCoreComponent\n});\nvar useStyles$6 = makeStyles(function (theme) {\n  var _a, _b;\n\n  return {\n    appBar: (_a = {\n      backgroundColor: '#ffffff',\n      color: '#808080'\n    }, _a[theme.breakpoints.up('sm')] = {\n      width: 'calc(100% - 85px)'\n    }, _a),\n    menuButton: (_b = {\n      marginRight: theme.spacing(2)\n    }, _b[theme.breakpoints.up('sm')] = {\n      display: 'none'\n    }, _b),\n    logo: {\n      height: '40px'\n    },\n    badge: {\n      backgroundColor: '#ff6969',\n      color: '#ffffff',\n      fontWeight: 700\n    },\n    grow: {\n      flexGrow: 1\n    }\n  };\n});\n\nvar AppHeader = function AppHeader(props) {\n  var classes = useStyles$6();\n\n  var handleMenuOnClick = function handleMenuOnClick() {\n    if (props.menuOnClick) {\n      props.menuOnClick();\n    }\n  }; // const handleNotificationOnClick = () => {\n  //   if (props.notificationOnClick) {\n  //     props.notificationOnClick();\n  //   }\n  // };\n\n\n  var handleUserOnClick = function handleUserOnClick() {\n    if (props.userOnClick) {\n      props.userOnClick();\n    }\n  };\n\n  return React__default.createElement(AppBar, {\n    className: classes.appBar\n  }, React__default.createElement(Toolbar, null, React__default.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    onClick: handleMenuOnClick\n  }, React__default.createElement(MenuIcon, null)), React__default.createElement(Link, {\n    href: \"/\"\n  }, React__default.createElement(\"img\", {\n    src: props.logoImage,\n    className: classes.logo,\n    alt: \"logo\"\n  })), React__default.createElement(\"div\", {\n    className: classes.grow\n  }), React__default.createElement(IconButton, {\n    edge: \"end\",\n    onClick: handleUserOnClick\n  }, React__default.createElement(Avatar, {\n    src: props.userImage,\n    alt: \"avatar\"\n  }))));\n};\n\nAppHeader.defaultProps = {\n  badgeCount: 0\n};\nAppHeader.propTypes = {\n  badgeCount: PropTypes.number\n};\nvar useStyles$7 = makeStyles(function () {\n  return {\n    sideBar: {\n      width: '85px'\n    },\n    listItem: {\n      flexDirection: 'column',\n      marginBottom: '10px'\n    },\n    listItemIcon: {\n      minWidth: 0\n    },\n    avatar: {\n      backgroundColor: 'rgba(158, 164, 172, 0.18)'\n    },\n    avatarSelected: {\n      backgroundColor: 'rgba(98, 255, 183, 0.18)'\n    },\n    listItemText: {\n      fontSize: 9,\n      color: '#ffffff'\n    },\n    listItemTextSelected: {\n      fontSize: 9,\n      color: 'rgba(98, 255, 183, 1)'\n    },\n    icon: {\n      color: 'white'\n    },\n    iconSelected: {\n      color: 'rgba(98, 255, 183, 1)'\n    },\n    divider: {\n      backgroundColor: 'transparent',\n      height: '50px'\n    }\n  };\n});\n\nfunction ListItemLink(props) {\n  return React__default.createElement(Link$1, {\n    to: props.link ? props.link : '',\n    style: {\n      textDecoration: 'none'\n    }\n  }, \" \", React__default.createElement(ListItem, _assign({}, props)), \" \");\n}\n\nvar AppSidebar = function AppSidebar(props) {\n  var classes = useStyles$7(); // const [selectedItem, setSelectedItem] = useState(\"dashboard\");\n\n  var selected = props.selectedMenu ? props.selectedMenu : 'dashboard';\n  var sidebarSelected = {\n    dashboard: false,\n    create_ticket: false,\n    members: false,\n    proposals: false,\n    clients: false,\n    tickets: false,\n    reports: false,\n    templates: false,\n    help: false\n  };\n  sidebarSelected[selected] = true; // const isSelectedSidebar = (sidebarItem: string) => {\n  //   const selectedSidebar = localStorage.getItem('sidebar');\n  //   const isSelected =\n  //     (selectedSidebar && selectedSidebar === sidebarItem) || false;\n  //   return isSelected;\n  // };\n  // const [sidebarChanged, setSidebarChanged] = React.useState(true);\n  // const [sidebarSelected, setSidebarSelected] = React.useState({\n  //   dashboard: true,\n  //   members: false,\n  //   proposals: false,\n  //   clients: false,\n  //   tickets: false,\n  //   reports: false,\n  //   templates: false,\n  //   help: false,\n  // });\n  // const getSidebarSelected = () => {\n  //   setSidebarSelected({\n  //     dashboard: isSelectedSidebar('dashboard'),\n  //     members: isSelectedSidebar('members'),\n  //     proposals: isSelectedSidebar('proposals'),\n  //     clients: isSelectedSidebar('clients'),\n  //     tickets: isSelectedSidebar('tickets'),\n  //     reports: isSelectedSidebar('reports'),\n  //     templates: isSelectedSidebar('templates'),\n  //     help: isSelectedSidebar('help'),\n  //   });\n  // };\n  // const onStorageChange = () => {\n  //   setSidebarChanged(true);\n  // }\n  // React.useEffect(() => {\n  //   if (sidebarChanged) {\n  //     getSidebarSelected();\n  //     setSidebarChanged(false);\n  //   }\n  // }, [sidebarChanged]);\n  // React.useEffect(() => {\n  //   if (typeof window !== 'undefined') {\n  //     window.addEventListener('storage', onStorageChange);\n  //     return () => {\n  //       window.removeEventListener('storage', onStorageChange);\n  //     };\n  //   }\n  //   return undefined;\n  // }, []);\n\n  var handleDashboardOnClick = function handleDashboardOnClick(event, attr) {\n    console.log('handleDashboardOnClick event', event);\n    console.log('handleDashboardOnClick attr', attr); // switch (attr) {\n    //   case 'dashboard':\n    //     if (props.page === 'membership') {\n    //       props.history.push('#/membership/', { state: 'dashboard' });\n    //       window.location.reload();\n    //     } else if (props.page === 'underwriting') {\n    //       props.history.push('#/underwriting/', { state: 'dashboard' });\n    //       window.location.reload();\n    //     } else if (props.page === 'customer care') {\n    //       props.history.push('#/customer-care', { state: 'dashboard' });\n    //       window.location.reload();\n    //     }\n    //     break;\n    //   case 'members':\n    //     if (props.page === 'membership') {\n    //       props.history.push('#/membership/members', { state: 'members' });\n    //       window.location.reload();\n    //     }\n    //     break;\n    //   case 'clients':\n    //     if (props.page === 'underwriting') {\n    //       props.history.push('#/underwriting/clients', { state: 'clients' });\n    //       window.location.reload();\n    //     }\n    //     break;\n    //   case 'proposals':\n    //     if (props.page === 'underwriting') {\n    //       props.history.push('#/underwriting/proposals', { state: 'proposals' });\n    //       window.location.reload();\n    //     }\n    //     break;\n    //   case 'create ticket':\n    //     if (props.page === 'customer care') {\n    //       props.history.push('#/customer-care/create-ticket', {\n    //         state: 'create ticket',\n    //       });\n    //       window.location.reload();\n    //     }\n    //     break;\n    // }\n    // localStorage.setItem('sidebar', attr);\n    // setSidebarChanged(true);\n    // setSelectedItem(attr);\n  };\n\n  var handleSidebarClick = function handleSidebarClick(page) {\n    if (props.setSelectedMenu) {\n      props.setSelectedMenu(page);\n    } // setSidebarChanged(true);\n\n  };\n\n  return React__default.createElement(\"div\", {\n    className: classes.sideBar\n  }, React__default.createElement(List, null, React__default.createElement(ListItemLink, {\n    className: classes.listItem,\n    link: props.page === 'membership' ? '/membership/' : props.page === 'customer care' ? '/customer-care/' : '/underwriting/',\n    onClick: function onClick() {\n      handleSidebarClick('dashboard');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faHome,\n    className: sidebarSelected.dashboard ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Dashboard\",\n    disableTypography: true,\n    className: sidebarSelected.dashboard ? classes.listItemTextSelected : classes.listItemText\n  })), props.page === 'customer care' ? React__default.createElement(ListItemLink, {\n    className: classes.listItem,\n    link: '/customer-care/create-ticket',\n    onClick: function onClick() {\n      handleSidebarClick('create_ticket');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faPlusCircle,\n    className: sidebarSelected.create_ticket ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Create New\",\n    disableTypography: true,\n    className: sidebarSelected.create_ticket ? classes.listItemTextSelected : classes.listItemText\n  })) : null, props.page !== 'customer care' ? React__default.createElement(ListItemLink, {\n    className: classes.listItem,\n    link: props.page === 'underwriting' ? '/underwriting/clients' : '',\n    onClick: function onClick() {\n      handleSidebarClick('clients');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faUsers,\n    className: sidebarSelected.clients ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Clients\",\n    disableTypography: true,\n    className: sidebarSelected.clients ? classes.listItemTextSelected : classes.listItemText\n  })) : null, props.page !== 'customer care' ? React__default.createElement(ListItemLink, {\n    className: classes.listItem,\n    link: props.page === 'underwriting' ? '/underwriting/proposals' : '',\n    onClick: function onClick() {\n      handleSidebarClick('proposals');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faFileSignature,\n    className: sidebarSelected.proposals ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Proposals\",\n    disableTypography: true,\n    className: sidebarSelected.proposals ? classes.listItemTextSelected : classes.listItemText\n  })) : null, props.page === 'membership' ? React__default.createElement(ListItemLink, {\n    className: classes.listItem,\n    link: '/membership/members',\n    onClick: function onClick() {\n      handleSidebarClick('members');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faIdCardAlt,\n    className: sidebarSelected.members ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Members\",\n    disableTypography: true,\n    className: sidebarSelected.members ? classes.listItemTextSelected : classes.listItemText\n  })) : null, props.page === 'customer care' ? React__default.createElement(ListItemLink, {\n    className: classes.listItem,\n    // href={'membership/index.html#/membership/'}\n    onClick: function onClick() {\n      handleSidebarClick('members');\n      window.location.replace('membership/index.html#/membership/');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faIdCardAlt,\n    className: sidebarSelected.members ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Members\",\n    disableTypography: true,\n    className: sidebarSelected.members ? classes.listItemTextSelected : classes.listItemText\n  })) : null, props.page === 'customer care' ? React__default.createElement(ListItemLink, {\n    className: classes.listItem,\n    link: '/customer-care/tickets',\n    onClick: function onClick() {\n      handleSidebarClick('tickets');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faTasks,\n    className: sidebarSelected.tickets ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Tickets\",\n    disableTypography: true,\n    className: classes.listItemText\n  })) : null, props.page !== 'customer care' ? React__default.createElement(ListItem, {\n    button: true,\n    className: classes.listItem,\n    onClick: function onClick(e) {\n      return handleDashboardOnClick(e, 'tickets');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faTasks,\n    className: sidebarSelected.tickets ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Tickets\",\n    disableTypography: true,\n    className: sidebarSelected.tickets ? classes.listItemTextSelected : classes.listItemText\n  })) : null, props.page !== 'customer care' ? React__default.createElement(ListItem, {\n    button: true,\n    className: classes.listItem,\n    onClick: function onClick(e) {\n      return handleDashboardOnClick(e, 'reports');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faTable,\n    className: sidebarSelected.reports ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Reports\",\n    disableTypography: true,\n    className: sidebarSelected.reports ? classes.listItemTextSelected : classes.listItemText\n  })) : null, props.page === 'underwriting' ? React__default.createElement(ListItem, {\n    button: true,\n    className: classes.listItem,\n    onClick: function onClick(e) {\n      return handleDashboardOnClick(e, 'templates');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faFolderOpen,\n    className: sidebarSelected.templates ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Templates\",\n    disableTypography: true,\n    className: sidebarSelected.templates ? classes.listItemTextSelected : classes.listItemText\n  })) : null, props.page === 'membership' ? React__default.createElement(ListItem, {\n    button: true,\n    className: classes.listItem,\n    onClick: function onClick(e) {\n      return handleDashboardOnClick(e, 'users');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faUserFriends,\n    className: classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Users\",\n    disableTypography: true,\n    className: classes.listItemText\n  })) : null, props.page === 'membership' ? React__default.createElement(ListItem, {\n    button: true,\n    className: classes.listItem,\n    onClick: function onClick(e) {\n      return handleDashboardOnClick(e, 'settings');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faScrewdriver,\n    className: classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"settings\",\n    disableTypography: true,\n    className: classes.listItemText\n  })) : null, React__default.createElement(Divider, {\n    className: classes.divider\n  }), React__default.createElement(ListItem, {\n    button: true,\n    className: classes.listItem,\n    onClick: function onClick(e) {\n      return handleDashboardOnClick(e, 'help');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faBookOpen,\n    className: sidebarSelected.help ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Help\",\n    disableTypography: true,\n    className: sidebarSelected.help ? classes.listItemTextSelected : classes.listItemText\n  }))));\n};\n\nvar useStyles$8 = makeStyles(function (theme) {\n  var _a;\n\n  return {\n    root: {\n      display: 'flex'\n    },\n    drawer: (_a = {}, _a[theme.breakpoints.up('sm')] = {\n      width: '72px',\n      flexShrink: 0\n    }, _a),\n    drawerPaper: {\n      backgroundColor: '#1e2071'\n    },\n    content: {\n      flexGrow: 1,\n      padding: \"0 \" + theme.spacing(5) + \"px\"\n    },\n    toolbar: theme.mixins.toolbar\n  };\n});\n\nvar AuthenticatedLayout = function AuthenticatedLayout(props) {\n  var classes = useStyles$8();\n\n  var _a = useState(false),\n      mobileOpen = _a[0],\n      setMobileOpen = _a[1];\n\n  var handleDrawerToggle = function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return React__default.createElement(\"div\", {\n    className: classes.root\n  }, React__default.createElement(AppHeader, {\n    logoImage: \"intellicare.png\",\n    userImage: \"user.jpg\",\n    badgeCount: 8,\n    menuOnClick: handleDrawerToggle\n  }), React__default.createElement(\"nav\", {\n    className: classes.drawer\n  }, React__default.createElement(Hidden, {\n    smUp: true,\n    implementation: \"css\"\n  }, React__default.createElement(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    variant: \"temporary\",\n    open: mobileOpen,\n    onClose: handleDrawerToggle\n  }, React__default.createElement(AppSidebar, _assign({}, props)))), React__default.createElement(Hidden, {\n    xsDown: true,\n    implementation: \"css\"\n  }, React__default.createElement(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    variant: \"permanent\",\n    open: true\n  }, React__default.createElement(AppSidebar, _assign({}, props))))), React__default.createElement(\"main\", {\n    className: classes.content\n  }, React__default.createElement(\"div\", {\n    className: classes.toolbar\n  }), props.children));\n};\n\nvar useStyles$9 = makeStyles({\n  root: {\n    backgroundColor: '#ffffff',\n    padding: '10px'\n  },\n  gridContainer: {\n    height: '100px'\n  },\n  breadCrumbs: {\n    marginBottom: '10px'\n  },\n  headerTitle: {\n    fontSize: 25\n  },\n  linkPrevious: {\n    fontSize: 12,\n    fontWeight: 300,\n    color: 'black',\n    cursor: 'pointer'\n  },\n  linkCurrent: {\n    fontSize: 12,\n    color: 'black',\n    cursor: 'pointer'\n  }\n});\n\nvar PageHeader = function PageHeader() {\n  var classes = useStyles$9();\n  return createElement(\"div\", {\n    className: classes.root\n  }, createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"center\",\n    className: classes.gridContainer\n  }, createElement(Grid, {\n    item: true\n  }, createElement(Breadcrumbs, {\n    className: classes.breadCrumbs\n  }, createElement(Link, {\n    className: classes.linkPrevious\n  }, \"CLIENTS\"), createElement(Link, {\n    className: classes.linkCurrent\n  }, \"HAPPY INNOVATIVE TECHNOLOGIES, INC.\")), createElement(Typography, {\n    className: classes.headerTitle\n  }, \"Happy Innovative Technologies, Inc.\")), createElement(Grid, {\n    item: true\n  }, createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\"\n  }, \"Edit Client\"))));\n};\n\nvar index$c =\n/*#__PURE__*/\nObject.freeze({\n  'default': PageHeader\n});\nvar useStyles$a = makeStyles({\n  root: {\n    padding: '5px 5px'\n  },\n  name: function name(props) {\n    return {\n      fontSize: props.nameFontSize,\n      color: 'rgba(39, 46, 76, 0.6)'\n    };\n  },\n  value: function value(props) {\n    return {\n      fontSize: props.valueFontSize,\n      color: 'rgb(39, 46, 76)'\n    };\n  }\n});\n\nvar ClientInfoItem = function ClientInfoItem(props) {\n  var classes = useStyles$a(props);\n  return createElement(\"div\", {\n    className: classes.root\n  }, createElement(Typography, {\n    className: classes.name\n  }, props.name), createElement(Typography, {\n    className: classes.value\n  }, props.value));\n};\n\nClientInfoItem.defaultProps = {\n  nameFontSize: 12,\n  valueFontSize: 16\n};\nvar useStyles$b = makeStyles({\n  grid: function grid(props) {\n    return {\n      height: props.height\n    };\n  }\n});\n\nvar GridHorizontalDivider = function GridHorizontalDivider(props) {\n  var classes = useStyles$b(props);\n  return createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.grid\n  });\n};\n\nGridHorizontalDivider.defaultProps = {\n  height: '10px'\n};\nGridHorizontalDivider.propTypes = {\n  height: PropTypes.string\n};\nvar useCirclePrimitive = makeStyles(function (theme) {\n  var circlePrimitiveStyle = {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    left: '0',\n    top: '0'\n  };\n\n  if (theme.rotate) {\n    Object.assign(circlePrimitiveStyle, {\n      'transform': \"rotate(\" + theme.rotate + \"deg)\"\n    });\n  }\n\n  var circlePrimBeforeStyle = {\n    content: '',\n    display: 'block',\n    margin: '0 auto',\n    width: '15%',\n    height: '15%',\n    backgroundColor: '#999',\n    borderRadius: '100%',\n    '@keyframes circleFadeDelay': {\n      '0%,39%,100%': {\n        opacity: 0\n      },\n      '40%': {\n        opacity: 1\n      }\n    },\n    animation: \"$circleFadeDelay 1.2s infinite ease-in-out both\"\n  };\n\n  if (theme.delay) {\n    Object.assign(circlePrimBeforeStyle, {\n      animationDelay: theme.delay + \"s\"\n    });\n  } // Object.assign(circlePrimitiveStyle, {\n  //   '&:before': circlePrimBeforeStyle,\n  // });\n\n\n  return {\n    root: circlePrimitiveStyle\n  };\n});\n\nvar Circle = function Circle(props) {\n  var classes = useCirclePrimitive(props);\n  return createElement(\"div\", {\n    className: classes.root\n  });\n};\n\nvar useStyles$c = makeStyles({\n  root: {\n    margin: '2em auto',\n    width: '40px',\n    height: '40px',\n    position: 'relative'\n  }\n});\n\nvar Wrapper = function Wrapper(props) {\n  var classes = useStyles$c();\n  return React__default.createElement(\"div\", _assign({\n    className: classes.root\n  }, props));\n};\n\nvar LoadingIndicator = function LoadingIndicator() {\n  return createElement(Wrapper, null, createElement(Circle, null), createElement(Circle, {\n    rotate: 30,\n    delay: -1.1\n  }), createElement(Circle, {\n    rotate: 60,\n    delay: -1\n  }), createElement(Circle, {\n    rotate: 90,\n    delay: -0.9\n  }), createElement(Circle, {\n    rotate: 120,\n    delay: -0.8\n  }), createElement(Circle, {\n    rotate: 150,\n    delay: -0.7\n  }), createElement(Circle, {\n    rotate: 180,\n    delay: -0.6\n  }), createElement(Circle, {\n    rotate: 210,\n    delay: -0.5\n  }), createElement(Circle, {\n    rotate: 240,\n    delay: -0.4\n  }), createElement(Circle, {\n    rotate: 270,\n    delay: -0.3\n  }), createElement(Circle, {\n    rotate: 300,\n    delay: -0.2\n  }), createElement(Circle, {\n    rotate: 330,\n    delay: -0.1\n  }));\n};\n\nvar useStyles$d = makeStyles({\n  previous_page: {\n    fontWeight: 300,\n    textDecoration: 'underline'\n  },\n  current_page: {\n    fontWeight: 600\n  }\n});\n\nvar BreadcrumbsComponent = function BreadcrumbsComponent(props) {\n  var items = props.items;\n  var classes = useStyles$d();\n  return createElement(Breadcrumbs, {\n    \"aria-label\": \"breadcrumb\"\n  }, items.map(function (item, i) {\n    if (item['url'] != \"\") {\n      return createElement(Link, {\n        className: classes.previous_page,\n        key: i,\n        color: \"inherit\",\n        href: item.url\n      }, item.label);\n    } else {\n      return createElement(Typography, {\n        className: classes.current_page,\n        key: i,\n        color: \"textPrimary\"\n      }, item.label);\n    }\n  }));\n};\n\nBreadcrumbsComponent.defaultProps = {\n  items: [{\n    label: \"SAMPLE\",\n    url: \"\"\n  }]\n};\nvar useStyles$e = makeStyles(function (theme) {\n  var _a;\n\n  return {\n    appBar: (_a = {\n      top: 'auto',\n      bottom: 0,\n      border: '1px solid #707070',\n      backgroundColor: 'rgba(54, 54, 54, 0.64)'\n    }, _a[theme.breakpoints.up('sm')] = {\n      width: 'calc(100% - 72px)'\n    }, _a),\n    grow: {\n      flexGrow: 1\n    },\n    button: {\n      margin: '0 10px',\n      minHeight: '42px',\n      minWidth: '150px'\n    },\n    buttonTitle: {\n      fontWeight: 700,\n      fontSize: 13\n    },\n    buttonSubTitle: {\n      fontWeight: 400,\n      fontSize: 7\n    }\n  };\n});\n\nvar FloatingButtons = function FloatingButtons(props) {\n  // const buttonclasses = ButtonStyle();\n  var classes = useStyles$e();\n  return createElement(Grid, {\n    container: true\n  }, createElement(Grid, {\n    item: true,\n    xs: 12\n  }, createElement(AppBar, {\n    className: classes.appBar\n  }, createElement(Toolbar, null, props.rightButtons, createElement(\"div\", {\n    className: classes.grow\n  }), props.leftButtons))));\n};\n\nFloatingButtons.defaultProps = {\n  leftButtons: null,\n  rightButtons: null\n};\nvar useStyles$f = makeStyles(function (theme) {\n  var _a, _b;\n\n  return {\n    root: {\n      display: 'flex'\n    },\n    drawer: (_a = {}, _a[theme.breakpoints.up('sm')] = {\n      width: '72px',\n      flexShrink: 0\n    }, _a),\n    drawerPaper: {\n      backgroundColor: '#1e2071'\n    },\n    content: {\n      flexGrow: 1\n    },\n    toolbar: theme.mixins.toolbar,\n    menuButton: (_b = {\n      marginRight: theme.spacing(2)\n    }, _b[theme.breakpoints.up('sm')] = {\n      display: 'none'\n    }, _b),\n    logo: {\n      height: '40px'\n    },\n    badge: {\n      backgroundColor: '#ff6969',\n      color: '#ffffff',\n      fontWeight: 700\n    },\n    grow: {\n      flexGrow: 1\n    },\n    sidebar: {\n      maxWidth: '85px'\n    },\n    contentgrid: {\n      maxWidth: 'calc(100% - 85px)',\n      flexBasis: 'calc(100% - 85px)'\n    }\n  };\n});\n\nvar PageLayout = function PageLayout(props) {\n  var classes = useStyles$f();\n\n  var _a = useState(false),\n      mobileOpen = _a[0],\n      setMobileOpen = _a[1];\n\n  var _b = React__default.useState(null),\n      anchorEl = _b[0],\n      setAnchorEl = _b[1];\n\n  var _c = React__default.useState(false),\n      open = _c[0],\n      setOpen = _c[1];\n\n  var _d = React__default.useState(),\n      placement = _d[0],\n      setPlacement = _d[1];\n\n  var handleDrawerToggle = function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  };\n\n  var handleClick = function handleClick(newPlacement) {\n    return function (event) {\n      setAnchorEl(event.currentTarget);\n      setOpen(function (prev) {\n        return placement !== newPlacement || !prev;\n      });\n      setPlacement(newPlacement);\n    };\n  };\n\n  var logolink = '/';\n\n  switch (props.page) {\n    case 'membership':\n      logolink = '#/membership';\n      break;\n\n    case 'underwriting':\n      logolink = '#/underwriting';\n      break;\n\n    default:\n      break;\n  }\n\n  return React__default.createElement(\"div\", {\n    className: classes.root\n  }, React__default.createElement(Popper, {\n    open: open,\n    anchorEl: anchorEl,\n    placement: placement,\n    transition: true\n  }, function (_a) {\n    var TransitionProps = _a.TransitionProps;\n    return React__default.createElement(Fade, _assign({}, TransitionProps, {\n      timeout: 350\n    }), React__default.createElement(Paper$1, null, React__default.createElement(List$1, null, React__default.createElement(ListItem$1, {\n      button: true,\n      onClick: props.onLogout\n    }, React__default.createElement(ListItemIcon$1, null, React__default.createElement(ExitToAppIcon, null)), React__default.createElement(ListItemText$1, {\n      primary: \"Logout\"\n    })))));\n  }), React__default.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\"\n  }, React__default.createElement(Grid, {\n    item: true,\n    xs: 1,\n    className: classes.sidebar\n  }, React__default.createElement(\"nav\", {\n    className: classes.drawer\n  }, React__default.createElement(Hidden, {\n    smUp: true,\n    implementation: \"css\"\n  }, React__default.createElement(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    variant: \"temporary\",\n    open: mobileOpen,\n    onClose: handleDrawerToggle\n  }, React__default.createElement(AppSidebar, _assign({}, props)))), React__default.createElement(Hidden, {\n    xsDown: true,\n    implementation: \"css\"\n  }, React__default.createElement(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    variant: \"permanent\",\n    open: true\n  }, React__default.createElement(AppSidebar, _assign({}, props)))))), React__default.createElement(Grid, {\n    item: true,\n    xs: 11,\n    className: classes.contentgrid\n  }, React__default.createElement(Grid, {\n    container: true,\n    direction: \"column\"\n  }, props.page !== 'customer care' ? React__default.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, React__default.createElement(Toolbar, null, React__default.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton\n  }, React__default.createElement(MenuIcon, null)), React__default.createElement(Link, {\n    href: logolink\n  }, React__default.createElement(\"img\", {\n    src: 'intellicare.png',\n    className: classes.logo,\n    alt: \"logo\"\n  })), React__default.createElement(\"div\", {\n    className: classes.grow\n  }), React__default.createElement(IconButton, {\n    edge: \"end\",\n    onClick: handleClick('bottom-end')\n  }, React__default.createElement(Avatar, {\n    src: 'user.jpg',\n    alt: \"avatar\"\n  })))) : null, React__default.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, React__default.createElement(\"main\", {\n    className: classes.content\n  }, props.children))))));\n};\n\nvar index$d =\n/*#__PURE__*/\nObject.freeze({\n  BaseTheme: BaseTheme,\n  SampleCoreComponent: index$b,\n  InputAutocomplete: index$5,\n  InputChipTextField: index$6,\n  InputSelect: index$7,\n  InputSelectSetValue: index$8,\n  InputTextField: index$9,\n  LoadingIndicator: LoadingIndicator,\n  AppHeader: AppHeader,\n  AppSidebar: AppSidebar,\n  AuthenticatedLayout: AuthenticatedLayout,\n  PageHeader: index$c,\n  ClientInfoItem: ClientInfoItem,\n  GridHorizontalDivider: GridHorizontalDivider,\n  TicketModal: index$a,\n  BreadcrumbsComponent: BreadcrumbsComponent,\n  FloatingButtons: FloatingButtons,\n  PageLayout: PageLayout\n});\nvar index$e =\n/*#__PURE__*/\nObject.freeze({\n  Actions: index,\n  Definitions: index$1,\n  Reducers: index$2,\n  Services: index$3,\n  Stores: index$4,\n  UI: index$d\n});\n/**\r\n * Validate the shape of redux store\r\n */\n\nfunction checkStore(store) {\n  var shape = {\n    dispatch: isFunction,\n    subscribe: isFunction,\n    getState: isFunction,\n    replaceReducer: isFunction,\n    runSaga: isFunction,\n    injectedReducers: isObject,\n    injectedSagas: isObject\n  };\n  invariant(conformsTo(store, shape), '(src/Utils...) injectors: Expected a valid redux store');\n}\n/**\r\n * Create the store with dynamic reducers\r\n */\n\n\nfunction configureStore(createReducer, initialState, history) {\n  if (initialState === void 0) {\n    initialState = {};\n  }\n\n  var composeEnhancers = compose;\n  var reduxSagaMonitorOptions = {}; // If Redux Dev Tools and Saga Dev Tools Extensions are installed, enable them\n\n  /* istanbul ignore next */\n\n  if (process.env.NODE_ENV !== 'production' && typeof window === 'object') {\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({});\n    } // NOTE: Uncomment the code below to restore support for Redux Saga\n    // Dev Tools once it supports redux-saga version 1.x.x\n    // if (window.__SAGA_MONITOR_EXTENSION__)\n    //   reduxSagaMonitorOptions = {\n    //     sagaMonitor: window.__SAGA_MONITOR_EXTENSION__,\n    //   };\n\n  }\n\n  var sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions); // Create the store with two middlewares\n  // 1. sagaMiddleware: Makes redux-sagas work\n  // 2. routerMiddleware: Syncs the location/URL path to the state\n\n  var middlewares = [sagaMiddleware, routerMiddleware(history)];\n  var enhancers = [applyMiddleware.apply(void 0, middlewares)];\n  var store = createStore(createReducer(), initialState, composeEnhancers.apply(void 0, enhancers)); // Extensions\n\n  store.runSaga = sagaMiddleware.run;\n  store.injectedReducers = {}; // Reducer registry\n\n  store.injectedSagas = {}; // Saga registry\n\n  return store;\n}\n\nvar RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount';\nvar DAEMON = '@@saga-injector/daemon';\nvar ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount';\nvar constants =\n/*#__PURE__*/\nObject.freeze({\n  RESTART_ON_REMOUNT: RESTART_ON_REMOUNT,\n  DAEMON: DAEMON,\n  ONCE_TILL_UNMOUNT: ONCE_TILL_UNMOUNT\n});\nvar history = createBrowserHistory();\n\nfunction injectReducerFactory(createReducer, store, isValid) {\n  if (isValid === void 0) {\n    isValid = false;\n  } // tslint:disable-next-line: only-arrow-functions\n\n\n  return function injectReducer(key, reducer) {\n    if (!isValid) {\n      checkStore(store);\n    }\n\n    invariant(isString(key) && !isEmpty(key) && isFunction(reducer), '(src/Utils...) injectReducer: Expected `reducer` to be a reducer function'); // tslint:disable-next-line:max-line-length\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) {\n      return;\n    }\n\n    store.injectedReducers[key] = reducer;\n    store.replaceReducer(createReducer(store.injectedReducers));\n  };\n}\n\nfunction getInjectors(createReducer, store) {\n  checkStore(store);\n  return {\n    injectReducer: injectReducerFactory(createReducer, store, true)\n  };\n}\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\n\n\nfunction hocWithReducer(createReducer, _a) {\n  var key = _a.key,\n      reducer = _a.reducer;\n\n  function wrap(WrappedComponent) {\n    // dont wanna give access to HOC. Child only\n    var ReducerInjector =\n    /** @class */\n    function (_super) {\n      __extends(ReducerInjector, _super);\n\n      function ReducerInjector(props, context) {\n        var _this = _super.call(this, props, context) || this;\n\n        getInjectors(createReducer, context.store).injectReducer(\"\" + key, reducer);\n        return _this;\n      }\n\n      ReducerInjector.prototype.render = function () {\n        return createElement(WrappedComponent, _assign({}, this.props));\n      };\n\n      ReducerInjector.WrappedComponent = WrappedComponent;\n      ReducerInjector.displayName = \"withReducer(\" + (WrappedComponent.displayName || WrappedComponent.name || 'Component') + \")\";\n      return ReducerInjector;\n    }(Component$2);\n\n    return hoistNonReactStatics(ReducerInjector, WrappedComponent);\n  }\n\n  return wrap;\n}\n\nvar useInjectReducer = function useInjectReducer(createReducer, _a) {\n  var key = _a.key,\n      reducer = _a.reducer;\n  var store = useStore();\n  useEffect(function () {\n    getInjectors(createReducer, store).injectReducer(\"\" + key, reducer);\n  }, []);\n};\n\nvar allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\n\nvar checkKey = function checkKey(key) {\n  return invariant(isString(key) && !isEmpty(key), '(src/Utils...) injectSaga: Expected `key` to be a non empty string');\n};\n\nvar checkDescriptor = function checkDescriptor(descriptor) {\n  var shape = {\n    saga: isFunction,\n    mode: function mode(_mode) {\n      return isString(_mode) && allowedModes.includes(_mode || '');\n    }\n  };\n  invariant(conformsTo(descriptor, shape), '(src/Utils...) injectSaga: Expected a valid saga descriptor');\n};\n\nfunction injectSagaFactory(store, isValid) {\n  if (isValid === void 0) {\n    isValid = false;\n  } // tslint:disable-next-line: only-arrow-functions\n\n\n  return function injectSaga(key, descriptor, args) {\n    if (descriptor === void 0) {\n      descriptor = {};\n    }\n\n    if (!isValid) {\n      checkStore(store);\n    }\n\n    var newDescriptor = _assign(_assign({}, descriptor), {\n      mode: descriptor.mode || DAEMON\n    });\n\n    var saga = newDescriptor.saga,\n        mode = newDescriptor.mode;\n    checkKey(key);\n    checkDescriptor(newDescriptor);\n    var hasSaga = Reflect.has(store.injectedSagas, key);\n\n    if (process.env.NODE_ENV !== 'production') {\n      var oldDescriptor = store.injectedSagas[key]; // enable hot reloading of daemon and once-till-unmount sagas\n\n      if (hasSaga && oldDescriptor.saga !== saga) {\n        oldDescriptor.task.cancel();\n        hasSaga = false;\n      }\n    }\n\n    if (!hasSaga || hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT) {\n      store.injectedSagas[key] = _assign(_assign({}, newDescriptor), {\n        task: store.runSaga(saga, args)\n      });\n    }\n  };\n}\n\nfunction ejectSagaFactory(store, isValid) {\n  if (isValid === void 0) {\n    isValid = false;\n  } // tslint:disable-next-line: only-arrow-functions\n\n\n  return function ejectSaga(key) {\n    if (!isValid) {\n      checkStore(store);\n    }\n\n    checkKey(key);\n\n    if (Reflect.has(store.injectedSagas, key)) {\n      var descriptor = store.injectedSagas[key];\n\n      if (descriptor.mode && descriptor.mode !== DAEMON) {\n        descriptor.task.cancel(); // Clean up in production; in development we need `descriptor.saga` for hot reloading\n\n        if (process.env.NODE_ENV === 'production') {\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\n          store.injectedSagas[key] = 'done';\n        }\n      }\n    }\n  };\n}\n\nfunction getInjectors$1(store) {\n  checkStore(store);\n  return {\n    injectSaga: injectSagaFactory(store, true),\n    ejectSaga: ejectSagaFactory(store, true)\n  };\n}\n/**\r\n * Dynamically injects a saga, passes component's props as saga arguments\r\n *\r\n * @param {string} key A key of the saga\r\n * @param {function} saga A root saga that will be injected\r\n * @param {string} [mode] By default (constants.RESTART_ON_REMOUNT) the saga will be started on component mount and\r\n * cancelled with `task.cancel()` on component un-mount for improved performance. Another two options:\r\n *   - constants.DAEMON—starts the saga on component mount and never cancels it or starts again,\r\n *   - constants.ONCE_TILL_UNMOUNT—behaves like 'RESTART_ON_REMOUNT' but never runs it again.\r\n *\r\n */\n\n\nfunction hocWithSaga(_a) {\n  var key = _a.key,\n      saga = _a.saga,\n      mode = _a.mode;\n\n  function wrap(WrappedComponent) {\n    // dont wanna give access to HOC. Child only\n    var InjectSaga =\n    /** @class */\n    function (_super) {\n      __extends(InjectSaga, _super);\n\n      function InjectSaga(props, context) {\n        var _this = _super.call(this, props, context) || this;\n\n        _this.injectors = getInjectors$1(context.store);\n\n        _this.injectors.injectSaga(key, {\n          saga: saga,\n          mode: mode\n        }, _this.props);\n\n        return _this;\n      }\n\n      InjectSaga.prototype.componentWillUnmount = function () {\n        this.injectors.ejectSaga(key);\n      };\n\n      InjectSaga.prototype.render = function () {\n        return createElement(WrappedComponent, _assign({}, this.props));\n      };\n\n      InjectSaga.WrappedComponent = WrappedComponent;\n      InjectSaga.displayName = \"withSaga(\" + (WrappedComponent.displayName || WrappedComponent.name || 'Component') + \")\";\n      return InjectSaga;\n    }(Component$2);\n\n    return hoistNonReactStatics(InjectSaga, WrappedComponent);\n  }\n\n  return wrap;\n}\n\nvar useInjectSaga = function useInjectSaga(_a) {\n  var key = _a.key,\n      saga = _a.saga,\n      mode = _a.mode;\n  var store = useStore();\n  useEffect(function () {\n    var injectors = getInjectors$1(store);\n    injectors.injectSaga(\"\" + key, {\n      saga: saga,\n      mode: mode\n    });\n    return function () {\n      injectors.ejectSaga(\"\" + key);\n    };\n  }, []);\n};\n\nvar loadable = function loadable(importFunc, _a) {\n  var _b = (_a === void 0 ? {\n    fallback: null\n  } : _a).fallback,\n      fallback = _b === void 0 ? null : _b;\n  var LazyComponent = lazy(importFunc);\n\n  var Component = function Component(props) {\n    return React__default.createElement(Suspense, {\n      fallback: fallback\n    }, React__default.createElement(LazyComponent, _assign({}, props)));\n  };\n\n  return Component;\n};\n\nvar ResponseError =\n/** @class */\nfunction (_super) {\n  __extends(ResponseError, _super);\n\n  function ResponseError(response) {\n    var _this = _super.call(this, response.statusText) || this;\n\n    _this.response = response;\n    return _this;\n  }\n\n  return ResponseError;\n}(Error);\n/**\r\n * Parses the JSON returned by a network request\r\n *\r\n * @param  {object} response A response from a network request\r\n *\r\n * @return {object}          The parsed JSON from the request\r\n */\n\n\nfunction parseJSON(response) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      if (response.status === 204 || response.status === 205) {\n        return [2\n        /*return*/\n        , null];\n      }\n\n      return [2\n      /*return*/\n      , response.json()];\n    });\n  });\n}\n/**\r\n * Checks if a network request came back fine, and throws an error if not\r\n *\r\n * @param  {object} response   A response from a network request\r\n *\r\n * @return {object|undefined} Returns either the response, or throws an error\r\n */\n\n\nfunction checkStatus(response) {\n  return __awaiter(this, void 0, void 0, function () {\n    var error;\n    return __generator(this, function (_a) {\n      if (response.status >= 200 && response.status < 300) {\n        return [2\n        /*return*/\n        , response];\n      }\n\n      error = new ResponseError(response);\n      error.response = response;\n      throw error;\n    });\n  });\n}\n/**\r\n * Requests a URL, returning a promise\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param  {object} [options] The options we want to pass to \"fetch\"\r\n *\r\n * @return {object}           The response data\r\n */\n\n\nfunction request(url, options) {\n  return __awaiter(this, void 0, void 0, function () {\n    var fetchResponse, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , fetch(url, options)];\n\n        case 1:\n          fetchResponse = _a.sent();\n          return [4\n          /*yield*/\n          , checkStatus(fetchResponse)];\n\n        case 2:\n          response = _a.sent();\n          return [2\n          /*return*/\n          , parseJSON(response)];\n      }\n    });\n  });\n}\n\nvar index$f =\n/*#__PURE__*/\nObject.freeze({\n  checkStore: checkStore,\n  configureStore: configureStore,\n  constants: constants,\n  history: history,\n  hocWithReducer: hocWithReducer,\n  useInjectReducer: useInjectReducer,\n  hocWithSaga: hocWithSaga,\n  useInjectSaga: useInjectSaga,\n  loadable: loadable,\n  injectReducerFactory: injectReducerFactory,\n  getReducerInjectors: getInjectors,\n  request: request,\n  ResponseError: ResponseError,\n  injectSagaFactory: injectSagaFactory,\n  ejectSagaFactory: ejectSagaFactory,\n  getSagaInjectors: getInjectors$1\n});\nvar theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#3ab77d',\n      contrastText: '#ffffff'\n    },\n    secondary: {\n      main: '#ffffff',\n      contrastText: '#3ab77d'\n    }\n  },\n  typography: {\n    fontFamily: '\"Usual\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    button: {\n      fontFamily: 'Usual, Roboto, Helvetica, Arial, sans-serif',\n      fontWeight: 700,\n      fontSize: 13,\n      textTransform: 'none'\n    }\n  },\n  overrides: {\n    MuiButton: {\n      containedPrimary: {\n        boxShadow: '0px 3px 6px #1e207129',\n        '&:hover': {\n          backgroundColor: '#008650'\n        }\n      },\n      containedSecondary: {\n        border: '1px solid #0000001A',\n        boxShadow: '0px 1px 3px #00000033',\n        '&:hover': {\n          backgroundColor: '#3ab77d1a'\n        }\n      }\n    }\n  }\n});\n\nvar Component = function Component(props) {\n  var Component = props.Component,\n      store = props.store,\n      componentProps = props.componentProps;\n  return createElement(ThemeProvider, {\n    theme: theme\n  }, createElement(Provider$1, {\n    store: store\n  }, createElement(ConnectedRouter, {\n    history: history\n  }, createElement(HashRouter, {\n    basename: \"/\"\n  }, createElement(Component, _assign({}, componentProps))))));\n};\n\nvar index$g =\n/*#__PURE__*/\nObject.freeze({\n  Component: Component\n});\n/*\r\n *\r\n * MessageProvider constants\r\n *\r\n */\n\nvar ActionTypes;\n\n(function (ActionTypes) {\n  ActionTypes[\"CHANGE_LOCALE\"] = \"hims/MsgProvider/CHANGE_LOCALE\";\n})(ActionTypes || (ActionTypes = {}));\n\nvar ActionTypes$1 = ActionTypes;\nvar DEFAULT_LOCALE = 'en';\n/*\r\n *\r\n * MessageProvider reducer\r\n *\r\n */\n\nvar initialState = {\n  locale: DEFAULT_LOCALE\n};\n\nfunction messageProviderReducer(state, action) {\n  if (state === void 0) {\n    state = initialState;\n  }\n\n  switch (action.type) {\n    case ActionTypes$1.CHANGE_LOCALE:\n      return {\n        locale: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n/**\r\n * Direct selector to the languageToggle state domain\r\n */\n\n\nvar selectLanguage = function selectLanguage(state) {\n  return state.language || initialState;\n};\n/**\r\n * Select the language locale\r\n */\n\n\nvar makeSelectLocale = function makeSelectLocale() {\n  return createSelector(selectLanguage, function (languageState) {\n    return languageState.locale;\n  });\n};\n\nvar enTranslationMessages = require('Messages/en.json'); // prettier-ignore\n\n\nvar appLocales = ['en'];\n\nvar formatTranslationMessages = function formatTranslationMessages(locale, messages) {\n  var defaultFormattedMessages = locale !== DEFAULT_LOCALE ? formatTranslationMessages(DEFAULT_LOCALE, enTranslationMessages) : {};\n\n  var flattenFormattedMessages = function flattenFormattedMessages(formattedMessages, key) {\n    var _a;\n\n    var formattedMessage = !messages[key] && locale !== DEFAULT_LOCALE ? defaultFormattedMessages[key] : messages[key];\n    return _assign(_assign({}, formattedMessages), (_a = {}, _a[key] = formattedMessage, _a));\n  };\n\n  return Object.keys(messages).reduce(flattenFormattedMessages, {});\n};\n\nvar translationMessages = {\n  en: formatTranslationMessages('en', enTranslationMessages)\n};\n/*\r\n *\r\n * MessageProvider\r\n *\r\n * this component connects the redux state message locale to the\r\n * IntlProvider component and i18n messages (loaded from `src/Translations`)\r\n */\n\nvar stateSelector = createSelector(makeSelectLocale(), function (locale) {\n  return {\n    locale: locale\n  };\n});\n\nvar Provider = function Provider(props) {\n  var locale = useSelector(stateSelector).locale;\n  return React__default.createElement(IntlProvider, {\n    locale: locale,\n    key: locale,\n    messages: props.messages[locale]\n  }, React__default.Children.only(props.children));\n};\n\nvar index$h =\n/*#__PURE__*/\nObject.freeze({\n  Provider: Provider,\n  appLocales: appLocales,\n  formatTranslationMessages: formatTranslationMessages,\n  messageProviderReducer: messageProviderReducer\n});\nvar scope = 'boilerplate.containers.NotFoundPage';\nvar messages = defineMessages({\n  header: {\n    id: scope + \".header\",\n    defaultMessage: 'Page not found.'\n  }\n});\n/**\r\n * NotFoundPage\r\n *\r\n * This is the page shown when the user visits a url that doesn't have a route\r\n */\n\nvar Component$1 = function Component$1() {\n  return createElement(\"article\", null, createElement(\"h1\", null, createElement(FormattedMessage, _assign({}, messages.header))));\n};\n\nvar index$i =\n/*#__PURE__*/\nObject.freeze({\n  Document: index$g,\n  Message: index$h,\n  NotFoundPage: Component$1\n});\nvar index$j =\n/*#__PURE__*/\nObject.freeze({});\nexport { index$e as Components, index$i as Containers, index$j as Pages, index$f as Utils };","\n\nimport * as React from 'react';\nimport { Link } from '@material-ui/core';\nimport './component-style.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\n\ninterface IProps {\n    icon?: IconProp;\n    label?: string;\n    onClick: () => void;\n}\n\nexport class TextButton extends React.Component<IProps> {\n\n    shouldComponentUpdate(props: IProps, _state: any) {\n        return (\n            (this.props.icon !== props.icon) ||\n            (this.props.label !== props.label)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <Link className='text-button' onClick={() => this.props.onClick()}>\n                {this.props.icon ? <FontAwesomeIcon icon={this.props.icon} /> : null}\n                {this.props.icon ? <span style={{marginLeft: '10px'}}/> : null}\n                {this.props.label}\n            </Link>\n        );\n    }\n}","import * as React from 'react';\nimport { PartialMemberData } from 'Pages/CustomerCarePage/Models';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\n\ninterface IProps {\n    members: PartialMemberData[];\n    searchText: string;\n    onSelectMember: (memberId: string) => void;\n}\n\nexport class SearchedMembersList extends React.Component<IProps> {\n\n    getExtractedMembers = (filter: string) => {\n        return (filter.trim().length > 0 ? (\n            this.props.members\n                .filter(member => member.memberId)\n                .filter(member => member.memberId.includes(filter))\n        ) : []);\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='mini-ticket-modals'>\n                {this.getExtractedMembers(this.props.searchText).map(member => {\n                    return (\n                        <>\n                        {this.renderMemberShortDetail(member)}\n                        <div className='line-border' />\n                        </>\n                    );\n                })}\n            </div>\n        );\n    }\n\n    renderMemberShortDetail(member: PartialMemberData): JSX.Element {\n        const name = \n            member.firstName + ' ' + \n            GlobalFunction.getIntials(member.middleName) + ' ' +\n            member.lastName;\n\n        return (\n            <div \n                className='small-section mini-ticket-modal'\n                onClick={() => this.props.onSelectMember(member.memberId)}>\n                <div className='text' />\n                <div className='text'>\n                    <div className='circle' style={{backgroundColor: '#3AB77D'}} />\n                    <div style={{display: 'inline-block'}}>\n                        <div className='header-2'>{member.memberId}</div>\n                    </div>\n\n                </div>\n                \n                <div className='text'>{name}</div>\n                <div className='text'>{member.clientName}</div>\n                <div className='text'>{'---'}</div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\nimport { CircularProgress } from \"@material-ui/core\";\n\ninterface IProps {\n    height?: string;\n    color?: string;\n    size?: number;\n}\n\nexport class Loading extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <div \n                style={{\n                    textAlign: 'center', \n                    paddingTop: this.props.height ? this.props.height : undefined}}>\n                <CircularProgress \n                    size={this.props.size}\n                    style={{\n                        color: this.props.color ? this.props.color : undefined}} />\n            </div>\n            \n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\nimport { DropdownChoice } from '../Models';\nimport Select from 'react-select';\n\ninterface IProps {\n    placeholder: string;\n    choices: DropdownChoice[];\n    type: DropdownChoice;\n    value: string;\n    onChangeType: (type: DropdownChoice) => void;\n    onChangeValue: (value: string) => void;\n}\n\nexport class TypeValueField extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <div className='detailed-input-field'>\n                <div className='text'>{this.props.placeholder}</div>\n                <div className='input-field'>\n                        <Select\n                            className='actual-dropdown'\n                            classNamePrefix='actual-dropdown'\n                            value={this.props.type}\n                            options={this.props.choices} \n                            onChange={(choice: DropdownChoice) => {\n                                this.props.onChangeType(choice);\n                            }} />\n                    <input \n                        className='text-field right' \n                        value={this.props.value}\n                        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                            this.props.onChangeValue(event.target.value);\n                        }} />\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid, TableCell, TableRow } from '@material-ui/core';\nimport { Loading } from '../Components/Loading';\nimport { GlobalFunction } from '../GlobalFunction';\nimport { CustomTable } from '../Components/CustomTable';\nimport { MemberData, SimpleTicketData, BenefitData } from '../Models';\n\ninterface IProps {\n    member: MemberData;\n    benefits: BenefitData[];\n    recentTickets?: SimpleTicketData[];\n\n    loadingBenefits: boolean;\n    loadingRecentTickets: boolean;\n}\n\nexport class MemberDataSection extends React.Component <IProps> {\n\n    getBenefitsLimit = () => {\n        let limits: BenefitData[] = [];\n        this.props.benefits.forEach(benefit => {\n            let targetLimitIndex = -1;\n            limits.forEach((limit, index) => {\n                if (benefit.limitType && limit.limitType === benefit.limitType) {\n                    targetLimitIndex = index;\n                }\n            })\n            if (targetLimitIndex > -1) {\n                limits[targetLimitIndex].limit += benefit.limit;\n            } else {\n                limits.push({...benefit});\n            }\n        });\n        return limits.filter(benefit => benefit.limitType);\n    }\n\n    render(): JSX.Element {\n        const member = this.props.member;\n\n        const name = GlobalFunction.toNameFormat(\n            member.firstName,\n            member.middleName,\n            member.lastName\n        );\n        const clientName = member.client ? member.client.registeredName : '---';\n        const birthDate = GlobalFunction.toShortDateString(new Date(member.birthDate));\n        const age = GlobalFunction.getAge(new Date(member.birthDate));\n        const contractStatus = member.contract ? `${member.contract.status} Contract` : 'No Contract Found';\n        \n        return (\n            <div className='section'>\n                <div className={member.isVip ? 'tag' : ''}>\n                    {member.isVip ? (\n                        <div className='tag-label'>VIP</div>\n                    ) : null}\n                    <div className='circle' style={{backgroundColor: '#3AB77D'}} />\n                    <div style={{display: 'inline-block'}}>\n                        <div className='header-2'>{member.memberId}</div>\n                    </div>\n                    <div className='text'>{name}</div>\n                    <div className='text'>{clientName}</div>\n                    <div className='text'>{'---'}</div>\n                    <div className='text'>{contractStatus}</div>\n                </div>\n                <Grid container>\n                    {this.props.loadingBenefits ? (\n                        <Grid item className='sub-section' xs={12}>\n                            <Loading height='2rem' />\n                        </Grid>\n                    ) : (\n                        this.getBenefitsLimit().map(benefit => {\n                            return (\n                                <Grid item className='sub-section' xs={6}>\n                                    <div className='light-text'>{`${benefit.limitType.toUpperCase()} LIMIT`}</div>\n                                    <div className='small-text'>{`${GlobalFunction.formatNumber(benefit.limit)} ${benefit.limitUnit}`}</div>\n                                </Grid>\n                            );\n                        })\n                    )}\n                </Grid>\n                <Grid container>\n                    <Grid item className='sub-section' xs={6}>\n                        <div className='light-text'>BIRTHDATE (AGE)</div>\n                        <div className='small-text'>{`${birthDate} (${age})`}</div>\n                    </Grid>\n                    <Grid item className='sub-section' xs={6}>\n                        <div className='light-text'>GENDER / STATUS</div>\n                        <div className='small-text'>{`${member.gender} / ${member.civilStatus}`}</div>\n                    </Grid>\n                </Grid>\n                <div className='sub-section'>\n                    {this.props.loadingRecentTickets ? (\n                        <Loading height='2rem' />\n                    ) : (\n                        this.props.recentTickets ? (\n                            <>\n                            <div className='header-2'>OPEN/PENDING TICKETS</div>\n                            <CustomTable\n                                paginationClass='custom-pagination-small'\n                                className='custom-table-small'\n                                labelRowsPerPage='Rows:'\n                                rows={this.props.recentTickets}\n                                rowsPerPageOptions={[5, 10, 25]}\n                                renderHeader={() => this.renderTableHeader()}\n                                renderRow={(rowData: SimpleTicketData, index: number) =>\n                                    this.renderTableRow(rowData, index)} />\n                            </>\n                        ) : null\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            <TableCell style={{minWidth: '70px', fontSize: '10px'}}>Ticket ID</TableCell>\n            <TableCell style={{fontSize: '10px'}}>Type</TableCell>\n            <TableCell style={{fontSize: '10px'}}>Last Update</TableCell>\n            </>\n        );\n    }\n\n    renderTableRow(recentTicket: SimpleTicketData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        return (\n            <TableRow style={{backgroundColor: backgroundColor, fontSize: '10px'}}>\n                <TableCell>{recentTicket.ticketNo}</TableCell>\n                <TableCell>{recentTicket.specificType}</TableCell>\n                <TableCell>{GlobalFunction.toShortDateString(recentTicket.dateUpdated)}</TableCell>\n            </TableRow>\n        );\n    }\n}","let backendUrl = process.env.REACT_APP_PMAKER_BASE_URL;\n\nexport class Processmaker {\n\n    // //local\n    // static localUrl = 'http://18.140.39.215/api/1.0/workflow';//'localhost:32766/api/1.0/workflow';\n\n    // //stg\n    // static stgUrl = 'http://18.140.39.215/api/1.0/workflow';\n\n    static async get(url: string, success: Function, fail: Function) {\n        // const backendUrl = (process.env.NODE_ENV === 'development' ? this.localUrl : this.stgUrl);\n        fetch(backendUrl + url, {\n            method: 'GET',\n            headers: { \n                'Content-Type': 'application/json',\n                'Authorization' : 'Bearer ' + localStorage.getItem('pm_token')\n            },\n        })\n        .then(response => response.json())\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async post(url:string, body: any, success: Function, fail: Function) {\n        // const backendUrl = (process.env.NODE_ENV === 'development' ? this.localUrl : this.stgUrl);\n        fetch(backendUrl + url, {\n            method: 'POST',\n            headers: { \n                'Content-Type': 'application/json',\n                'Authorization' : 'Bearer ' + localStorage.getItem('pm_token')\n            },\n            body: JSON.stringify(body)\n        })\n        .then(response => response.json())\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async put(url: string, body: any, success: Function, fail: Function) {\n        // const backendUrl = (process.env.NODE_ENV === 'development' ? this.localUrl : this.stgUrl);\n        fetch(backendUrl + url, {\n            method: 'PUT',\n            headers: { \n                'Content-Type': 'application/json',\n                'Authorization' : 'Bearer ' + localStorage.getItem('pm_token')\n            },\n            body: JSON.stringify(body)\n        })\n        .then(response => response)\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n}","import * as React from 'react';\nimport { ClientData, SimpleTicketData } from '../Models';\nimport { Grid, TableCell, TableRow } from '@material-ui/core';\nimport { Loading } from '../Components/Loading';\nimport { CustomTable } from '../Components/CustomTable';\nimport { GlobalFunction } from '../GlobalFunction';\n\ninterface IProps {\n    client: ClientData;\n    recentTickets?: SimpleTicketData[];\n    linkedTickets?: SimpleTicketData[];\n    getLinkedTicketsData: (clientId: string) => void;\n\n    disableLinkedTickets?: boolean;\n    loadingRecentTickets: boolean;\n    loadingLinkedTickets: boolean;\n}\n\nexport class ClientDataSection extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        const client = this.props.client;\n        const contract = client.contract;\n\n        if (!this.props.linkedTickets && !this.props.disableLinkedTickets) {\n            this.props.getLinkedTicketsData(client.corporateAccountNo);\n        }\n\n        const mainAddress = client.mainOfficeAddress;\n        const location = mainAddress ? `${mainAddress.barangay}, ${mainAddress.city}, ${mainAddress.region}` : '';\n        const startDate = contract && contract.startDate ? GlobalFunction.toShortDateString(contract.startDate) : '---';\n        const endDate = contract && contract.endDate ? GlobalFunction.toShortDateString(contract.endDate) : '---';\n        \n        return (\n            <div className='section'>\n                <div className='circle' style={{backgroundColor: '#3AB77D'}} />\n                <div style={{display: 'inline-block'}}>\n                    <div className='header-2'>{client.corporateAccountNo}</div>\n                </div>\n                <div className='text'>{client.registeredName}</div>\n                <Grid container>\n                    <Grid item className='sub-section-2' xs={12}>\n                        <div className='light-text'>CARD NAME</div>\n                        <div className='small-text'>{client.cardName}</div>\n                    </Grid>\n                    <Grid item className='sub-section-2' xs={6}>\n                        <div className='light-text'>EFFECTIVITY DATE</div>\n                        <div className='small-text'>{startDate}</div>\n                    </Grid>\n                    <Grid item className='sub-section-2' xs={6}>\n                        <div className='light-text'>RENEWAL DATE</div>\n                        <div className='small-text'>\n                            {false ? ( // Renewal Date\n                                GlobalFunction.toShortDateString('')\n                            ) : '---*'}\n                        </div>\n                    </Grid>\n                    <Grid item className='sub-section-2' xs={6}>\n                        <div className='light-text'>EXPIRY DATE</div>\n                        <div className='small-text'>{endDate}</div>\n                    </Grid>\n                    <Grid item className='sub-section-2' xs={6}>\n                        <div className='light-text'>EXTENSION DATE</div>\n                        <div className='small-text'>\n                            {false ? ( // Extension Date\n                                GlobalFunction.toShortDateString('')\n                            ) : '---*'}\n                        </div>\n                    </Grid>\n                    <Grid item className='sub-section-2' xs={12}>\n                        <div className='light-text'>SALES CHANNEL</div>\n                        <div className='small-text'>\n                            {client.salesChannel ? client.salesChannel.name : '---'}\n                        </div>\n                    </Grid>\n                    <Grid item className='sub-section-2' xs={12}>\n                        <div className='light-text'>LOCATION</div>\n                        <div className='small-text'>{location}</div>\n                    </Grid>\n                    <Grid item className='sub-section-2' xs={12}>\n                        <div className='light-text'>CONTACT PERSON AND NO.</div>\n                        <div className='small-text'>\n                            {client.mainOfficeAddress && client.mainOfficeAddress.contactPersons.length > 0 ? (\n                                `${client.mainOfficeAddress.contactPersons[0].name}: ${client.mainOfficeAddress.contactPersons[0].contactNo}`\n                            ) : '---'}\n                        </div>\n                    </Grid>\n                </Grid>\n                <div className='sub-section-2'>\n                    {this.props.loadingRecentTickets ? (\n                        <Loading height='2rem' />\n                    ) : (\n                        this.props.recentTickets ? (\n                            <>\n                            <div className='header-2'>RECENT TICKETS</div>\n                            <CustomTable\n                                paginationClass='custom-pagination-smaller'\n                                className='custom-table-smaller'\n                                labelRowsPerPage='Rows:'\n                                rows={this.props.recentTickets}\n                                rowsPerPageOptions={[5, 10, 25]}\n                                renderHeader={() => this.renderRecentTicketHeader()}\n                                renderRow={(rowData: SimpleTicketData, index: number) =>\n                                    this.renderRecentTicketRow(rowData, index)} />\n                            </>\n                        ) : null\n                    )}\n                </div>\n                {/* <div className='sub-section-2'>\n                    {this.props.loadingLinkedTickets ? (\n                        <Loading height='2rem' />\n                    ) : (\n                        this.props.linkedTickets ? (\n                            <>\n                            <div className='header-2'>LINKED TICKETS</div>\n                            <CustomTable\n                                paginationClass='custom-pagination-smaller'\n                                className='custom-table-smaller'\n                                labelRowsPerPage='Rows:'\n                                rows={this.props.linkedTickets}\n                                rowsPerPageOptions={[5, 10, 25]}\n                                renderHeader={() => this.renderLinkedTicketsHeader()}\n                                renderRow={(rowData: SimpleTicketData, index: number) =>\n                                    this.renderLinkedTicketsRow(rowData, index)} />\n                            </>\n                        ) : null\n                    )}\n                </div> */}\n            </div>\n        );\n    }\n\n    renderRecentTicketHeader(): JSX.Element {\n        return (\n            <>\n            <TableCell style={{minWidth: '70px', fontSize: '10px'}}>Ticket ID</TableCell>\n            <TableCell style={{fontSize: '10px'}}>Status</TableCell>\n            <TableCell style={{fontSize: '10px'}}>Created</TableCell>\n            <TableCell style={{fontSize: '10px'}}>Updated</TableCell>\n            </>\n        );\n    }\n\n    renderRecentTicketRow(ticket: SimpleTicketData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        return (\n            <TableRow style={{backgroundColor: backgroundColor, fontSize: '10px'}}>\n                <TableCell>{ticket.ticketNo}</TableCell>\n                <TableCell>{ticket.status}</TableCell>\n                <TableCell>{GlobalFunction.toShortDateString(ticket.dateCreated)}</TableCell>\n                <TableCell>{GlobalFunction.toShortDateString(ticket.dateUpdated)}</TableCell>\n            </TableRow>\n        );\n    }\n\n    renderLinkedTicketsHeader(): JSX.Element {\n        return (\n            <>\n            <TableCell style={{minWidth: '70px', fontSize: '10px'}}>Ticket ID</TableCell>\n            <TableCell style={{fontSize: '10px'}}>Status</TableCell>\n            <TableCell style={{fontSize: '10px'}}>Created</TableCell>\n            <TableCell style={{fontSize: '10px'}}>Updated</TableCell>\n            </>\n        );\n    }\n\n    renderLinkedTicketsRow(ticket: SimpleTicketData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        return (\n            <TableRow style={{backgroundColor: backgroundColor, fontSize: '10px'}}>\n                <TableCell>{ticket.ticketNo}</TableCell>\n                <TableCell>{ticket.status}</TableCell>\n                <TableCell>{GlobalFunction.toShortDateString(ticket.dateCreated)}</TableCell>\n                <TableCell>{GlobalFunction.toShortDateString(ticket.dateUpdated)}</TableCell>\n            </TableRow>\n        );\n    }\n}","import * as React from 'react';\nimport { PartialClientData } from 'Pages/CustomerCarePage/Models';\n\ninterface IProps {\n    clients: PartialClientData[];\n    searchText: string;\n    onSelectClient: (clientMongoId: string) => void;\n}\n\nexport class SearchedClientsList extends React.Component<IProps> {\n\n    getExtractedClients = (filter: string) => {\n        return (filter.trim().length > 0 ? (\n            this.props.clients\n                .filter(client => client.clientId)\n                .filter(client => client.clientId.includes(filter))\n        ) : []);\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='mini-ticket-modals'>\n                {this.getExtractedClients(this.props.searchText).map(client => {\n                    return (\n                        <>\n                        {this.renderMemberShortDetail(client)}\n                        <div className='line-border' />\n                        </>\n                    );\n                })}\n            </div>\n        );\n    }\n\n    renderMemberShortDetail(client: PartialClientData): JSX.Element {\n\n        return (\n            <div \n                className='small-section mini-ticket-modal'\n                onClick={() => this.props.onSelectClient(client.clientId)}>\n                <div className='text' />\n                <div className='text'>\n                    <div className='circle' style={{backgroundColor: '#3AB77D'}} />\n                    <div style={{display: 'inline-block'}}>\n                        <div className='header-2'>{client.clientId}</div>\n                    </div>\n\n                </div>\n                \n                <div className='text'>{client.clientName}</div>\n            </div>\n        );\n    }\n}","import { TicketData, ConfinementDetails, InquiryData, AvailmentDetails, LOAData, ConsultationDetails, MemberData, ClientData, AddressData, ContractData, LogData, DocumentData } from \"./Models\";\nimport { ConfinementDetails as UpdateInpatientDetails } from \"./UpdateTicketPage/UpdateTicketPage\";\nimport { ConfinementDetails as ResolveInpatientDetails } from \"./ResolveTicketPage/ResolveTicketPage\";\n\n/* \n * Ensures that all data coming from / sending to backend is in order.\n * All GET, POST, PUT, etc., long payloads must be put here to organize the code\n * Thank you.\n * \n * Note: Add long blank lines between function (pref: 10 lines).\n */\n\nexport class Payloads {\n\n    \n\n    static getPostTicketPayload(ticket: TicketData,\n                                uploadedFiles: any[],\n                                member?: MemberData,\n                                client?: ClientData,\n                                confinement?: ConfinementDetails, \n                                availment?: AvailmentDetails, \n                                inquiries?: InquiryData[],\n                                consultation?: ConsultationDetails): any  {\n        return {\n            transaction_no: ticket.transactionNo,\n            received_via: ticket.ticketChannel,\n            received_from: ticket.ticketSource,\n\n            member_name: (ticket.ticketSource === 'Member' ? ticket.memberName : undefined),\n            corporate_client: (ticket.ticketSource === 'Corporate Client' ? ticket.clientName : undefined),\n            broker: (ticket.ticketSource === 'Broker' ? ticket.brokerName : undefined),\n            hospital_name: (ticket.ticketSource === 'Clinic/Hospital' ? (ticket.facility.value + ' - ' + ticket.facility.label) : undefined),\n            department: (ticket.ticketSource === 'Clinic/Hospital' ? ticket.department : undefined),\n\n            caller_name: ticket.callerName,\n            contact_no: ticket.contactNo,\n            additional_notes: ticket.additionalNotes,\n            supporting_documents: uploadedFiles.map(file => {\n                return {\n                    name: file.name,\n                    type: file.type,\n                    url: file.url ? file.url : file.path ? file.path : '',\n                }\n            }),\n\n            ticket_category: {\n                ticket_type: ticket.ticketType,\n                specific_type: ticket.specificType,\n                urgency: ticket.urgency,\n                assign_to: `${ticket.agent.id} - ${ticket.agent.name}`,\n\n                availment_details: (\n                    availment &&\n                    ticket.ticketType === 'Availment' &&\n                    ticket.specificType === 'Outpatient Procedure' ? {\n                    provider: availment.provider.value + ' - ' + availment.provider.label,\n                    availments_list: [{\n                        diagnosis: availment.diagnoses.map(availment => {\n                            return {\n                                icd10_code: availment.icd10Code.value,\n                                diagnosis: availment.icd10Code.label,\n                                remarks: '',\n                                is_primary: false,\n                                is_final: false,\n                                \n                                doctors: [\n                                    {\n                                        _id: '',\n                                        name: availment.doctors[0].name,\n                                        specialization: (availment.doctors[0].specialization ? availment.doctors[0].specialization : ''),\n                                        fee: 0,\n                                        no_of_visits: 0,\n                                        remarks: ''\n                                    }\n                                ],\n\n                                procedures: availment.procedures\n                                    .filter(procedure => {\n                                        return procedure.cptCode.value;\n                                    })\n                                    .map(procedure => {\n                                        return {\n                                            cpt_code: procedure.cptCode.value,\n                                            procedure_name: procedure.cptCode.label,\n                                            amount: procedure.amount,\n                                            doctor: '',\n                                            phic: procedure.isPHIC,\n                                            notes: '',\n                                            date_added: new Date(),\n                                            assessment_type: procedure.assessmentType,\n                                            assessment_remarks: procedure.assessmentRemarks,\n                                            approved_amount: procedure.approvedAmount\n                                        }\n                                    }),\n                                \n                                    assessment_type: availment.assessmentType,\n                                    assessment_remarks: availment.assessmentRemarks,\n                                    approved_amount: availment.approvedAmount\n                            }\n                        })\n                    }]\n                } : undefined),\n\n                confinement_details: (\n                    confinement &&\n                    ticket.ticketType === 'Availment' &&\n                    ticket.specificType === 'Inpatient' ? {\n                    provider: confinement.provider.value + ' - ' + confinement.provider.label,\n                    date_admitted: confinement.dateAdmitted,\n                    confinement_kind: confinement.confinementKind,\n                    gift_given: false,\n                    updates: [],\n                    room_accommodation: [{\n                        room_type: confinement.roomType,\n                        no_of_days: 1,\n                        amount: confinement.costPerDay,\n                        total_amount: confinement.costPerDay\n                    }],\n                    diagnoses: [\n                        {\n                            icd10_code: confinement.initialDiagnosis.value,\n                            diagnosis: confinement.initialDiagnosis.label,\n                            remarks: '',\n                            is_primary: false,\n                            is_final: false,\n                            \n                            doctors: [\n                                {\n                                    _id: '',\n                                    name: confinement.doctor.label,\n                                    specialization: (confinement.doctor.params ? confinement.doctor.params[0] : ''),\n                                    fee: confinement.amount,\n                                    no_of_visits: 0,\n                                    remarks: '',\n                                    type: 'Admitting'\n                                }\n                            ],\n\n                            procedures: []\n                        }\n                    ],\n                    others: [],\n                    coverage: 'Filed',\n                    final_bill: 0,\n                    philhealth_amount: 0,\n                    // discharge_date: ''\n                } : undefined),\n\n                consultation_details: (\n                    consultation &&\n                    ticket.specificType === 'Consultation' ? {\n                    provider: `${consultation.provider.value} - ${consultation.provider.label}`,\n                    diagnosis: `${consultation.diagnosis.value} - ${consultation.diagnosis.label}`,\n                    doctor: `${consultation.doctor.value} - ${consultation.doctor.label}`,\n                    notes: consultation.notes,\n                    assessment_type: consultation.assessmentType,\n                    assessment_remarks: consultation.assessmentRemarks,\n                    approved_amount: consultation.approvedAmount\n                } : undefined),\n\n                inquiry_details: (\n                    inquiries &&\n                    ticket.ticketType === 'Inquiry' ? {\n                    inquiry_list: inquiries.map(inquiry => {\n                        return {\n                            inquiry: inquiry.inquiry.label,\n                            value: inquiry.detail,\n                            specific_detail: inquiry.specificDetail,\n                            answer: inquiry.answer,\n                            remarks: inquiry.remarks, \n                            related_tickets: inquiry.relatedTickets, \n                            support_docs: []\n                        }\n                    })\n                } : undefined)\n            },\n            pmaker_case_uid: '',\n            status: 'Open',\n            date_created: new Date(),\n            date_updated: new Date(),\n            // date_escalated: '',\n            created_by: {\n                _id: ticket.createdBy.id,\n                name: ticket.createdBy.name\n            },\n            tmp: {\n                user_id: localStorage['user_id'],\n                module: 'Customer Care',\n                process: 'Create Ticket',\n                timestamp: new Date()\n            },\n            member_id: member ? member.memberId : ' ',\n            member_data: member ? {\n                _id: member.id,\n                is_vip: member.isVip,\n                last_name: member.lastName,\n                middle_name: member.middleName,\n                first_name: member.firstName,\n                client: member.client ? member.client.registeredName : undefined\n            } : undefined,\n            client_id: \n                client ? client.corporateAccountNo : \n                member && member.client ? member.client.corporateAccountNo : ' ',\n            client_data: \n                client ? {\n                    registered_name: client.registeredName\n                } : member ? {\n                    registered_name: member.client ? member.client.registeredName : undefined\n                 } : undefined,\n            contract_id: \n                member && member.contract ? member.contract.id : \n                client && client.contract ? client.contract.id : '',\n            loa: [],\n            total_amount: 0\n        };\n    }\n\n\n\n\n\n\n\n\n\n\n    static getPutTicketPayload(ticket: TicketData, \n                               uploadedFiles: any[],\n                               member?: MemberData,\n                               client?: ClientData,\n                               confinement?: UpdateInpatientDetails,\n                               inquiries?: InquiryData[]): any {\n        return {\n            transaction_no: ticket.transactionNo,\n            received_via: ticket.ticketChannel,\n            received_from: ticket.ticketSource,\n\n            member_name: ticket.memberName,\n            corporate_client: ticket.clientName,\n            broker: ticket.brokerName,\n            hospital_name: ticket.facility.label,\n            department: ticket.department,\n\n            caller_name: ticket.callerName,\n            contact_no: ticket.contactNo,\n            additional_notes: ticket.additionalNotes,\n            supporting_documents: uploadedFiles.map(file => {\n                return {\n                    doc_name: file.docName,\n                    name: file.name,\n                    type: file.type,\n                    url: file.url ? file.url : file.path ? file.path : '',\n                    field: file.field\n                }\n            }),\n\n            ticket_category: {\n                ticket_type: ticket.ticketType,\n                specific_type: ticket.specificType,\n                urgency: ticket.urgency,\n                assign_to: `${ticket.agent.id} - ${ticket.agent.name}`,\n\n                confinement_details: (confinement ? {\n                    provider: `${confinement.provider.value} - ${confinement.provider.label}`,\n                    date_admitted: confinement.dateAdmitted,\n                    confinement_kind: confinement.confinementKind,\n                    gift_given: confinement.giftGiven,\n                    updates: confinement.updates.map(update => {\n                        return {\n                            remarks: update.remarks,\n                            date: update.date,\n                            hospital_bill: update.hospitalBill.toString()\n                        }\n                    }),\n                    room_accommodation: confinement.accommodations.map(accommodation => {\n                        return {\n                            room_type: accommodation.roomType,\n                            no_of_days: accommodation.days,\n                            amount: accommodation.costPerDay,\n                            total_amount: accommodation.costPerDay * accommodation.days\n                        }\n                    }),\n                    diagnoses: confinement.diagnoses.map((diagnosis, index) => {\n                        return {\n                            icd10_code: diagnosis.diagnosis.value,\n                            diagnosis: diagnosis.diagnosis.label,\n                            remarks: diagnosis.remarks,\n                            is_primary: (confinement.primaryDiagnosisIndex === index),\n                            is_final: diagnosis.isFinal,\n                            doctors: confinement.physicians\n                                .filter(physician => physician.diagnosis.value === diagnosis.diagnosis.value)\n                                .map(physician => {\n                                    return {\n                                        _id: '',\n                                        name: physician.physician.label,\n                                        specialization: physician.physician.params ? physician.physician.params[0] : '',\n                                        fee: physician.amount,\n                                        no_of_visits: physician.visits,\n                                        remarks: physician.remarks,\n                                        type: physician.physician.params ? physician.physician.params[1] : ''\n                                    }\n                                }),\n                            procedures: confinement.procedures\n                                .filter(procedure => procedure.diagnosis.value === diagnosis.diagnosis.value)\n                                .map(procedure => {\n                                    return {\n                                        cpt_code: procedure.procedure.value,\n                                        procedure_name: procedure.procedure.label,\n                                        amount: procedure.amount,\n                                        doctor: procedure.physician.label,\n                                        phic: false,\n                                        notes: procedure.remarks,\n                                        date_added: procedure.date,\n                                        assessment_type: 'Pending',\n                                        assessment_remarks: ''\n                                    }\n                                }),\n                            assessment_type: 'Pending',\n                            assessment_remarks: ''\n                        }\n                    }),\n                    others: confinement.items.map(item => {\n                        return {\n                            amount: item.amount,\n                            item_name: item.name,\n                            type: item.type.label\n                        }\n                    }),\n                    coverage: confinement.coverage.label,\n                    ticket_no: confinement.ticketNo,\n                    paid_by: confinement.paidBy,\n                    philhealth_amount: confinement.philhealthAmount,\n                    final_bill: confinement.finalBill,\n                    discharge_date: confinement.dischargeDate\n                } : undefined),\n\n                inquiry_details: (inquiries ? {\n                    inquiry_list: inquiries.map(inquiry => {\n                        return {\n                            inquiry: inquiry.inquiry.label,\n                            value: inquiry.detail,\n                            specific_detail: inquiry.specificDetail,\n                            answer: inquiry.answer,\n                            remarks: inquiry.remarks, \n                            related_tickets: inquiry.relatedTickets, \n                            support_docs: []\n                        }\n                    })\n                } : undefined)\n            },\n            pmaker_case_uid: ticket.pmCaseId,\n            status: ticket.status,\n            date_created: ticket.dateCreated,\n            date_updated: new Date(),\n            // date_escalated: '',\n            created_by: {\n                _id: ticket.createdBy.id,\n                name: ticket.createdBy.name\n            },\n            tmp: {\n                user_id: localStorage['user_id'],\n                module: 'Customer Care',\n                process: 'Update Ticket',\n                timestamp: new Date()\n            },\n            member_id: member ? member.memberId : '',\n            member_data: member ? {\n                _id: member.id,\n                is_vip: member.isVip,\n                last_name: member.lastName,\n                middle_name: member.middleName,\n                first_name: member.firstName,\n                client: member.client ? member.client.registeredName : undefined\n            } : undefined,\n            client_id: \n                client ? client.corporateAccountNo : \n                member && member.client ? member.client.corporateAccountNo : ' ',\n            client_data: \n                client ? {\n                    registered_name: client.registeredName\n                } : member ? {\n                    registered_name: member.client ? member.client.registeredName : undefined\n                 } : undefined,\n            contract_id: \n                member && member.contract ? member.contract.id : \n                client && client.contract ? client.contract.id : '',\n            approval_code: ticket.approvalCode,\n            loa: [],\n            total_amount: 0\n        };\n    }\n\n\n\n\n\n\n\n\n\n\n    static getPutUpdateAssessmentPayload(ticket: TicketData, \n                                         loas: LOAData[],\n                                         member?: MemberData,\n                                         client?: ClientData,\n                                         availment?: AvailmentDetails,\n                                         confinement?: ResolveInpatientDetails,\n                                         consultation?: ConsultationDetails): any {\n        \n        const getApprovedAvailmentsCost = (availment: AvailmentDetails | ResolveInpatientDetails) => {\n            let total = 0;\n            availment.diagnoses.map(diagnosis => {\n                diagnosis.procedures.map(procedure => {\n                    total += procedure.amount;\n                });\n            });\n            return total;\n        }\n        \n        return {\n            transaction_no: ticket.transactionNo,\n            received_via: ticket.ticketChannel,\n            received_from: ticket.ticketSource,\n\n            member_name: ticket.memberName,\n            corporate_client: ticket.clientName,\n            broker: ticket.brokerName,\n            hospital_name: ticket.facility.label,\n            department: ticket.department,\n\n            caller_name: ticket.callerName,\n            contact_no: ticket.contactNo,\n            additional_notes: ticket.additionalNotes,\n            supporting_documents: [],\n\n            ticket_category: {\n                ticket_type: ticket.ticketType,\n                specific_type: ticket.specificType,\n                urgency: ticket.urgency,\n                assign_to: `${ticket.agent.id} - ${ticket.agent.name}`,\n\n                availment_details: (availment ? {\n                    provider: availment.provider.value + ' - ' + availment.provider.label,\n                    availments_list: [{\n                        diagnosis: availment.diagnoses.map(availment => {\n                            return {\n                                icd10_code: availment.icd10Code.value,\n                                diagnosis: availment.icd10Code.label,\n                                remarks: '',\n                                is_primary: false,\n                                is_final: false,\n                                \n                                doctors: [\n                                    {\n                                        _id: '',\n                                        name: availment.doctors[0].name,\n                                        specialization: '',\n                                        fee: 0,\n                                        no_of_visits: 0,\n                                        remarks: ''\n                                    }\n                                ],\n\n                                procedures: availment.procedures\n                                    .filter(procedure => {\n                                        return procedure.cptCode.value;\n                                    })\n                                    .map(procedure => {\n                                        return {\n                                            cpt_code: procedure.cptCode.value,\n                                            procedure_name: procedure.cptCode.label,\n                                            amount: procedure.amount,\n                                            doctor: '',\n                                            phic: procedure.isPHIC,\n                                            notes: '',\n                                            date_added: new Date(),\n                                            assessment_type: procedure.assessmentType,\n                                            assessment_remarks: procedure.assessmentRemarks,\n                                            approved_amount: procedure.approvedAmount\n                                        }\n                                    })\n                            }\n                        })\n                    }]\n                } : undefined),\n\n                confinement_details: (confinement ? {\n                    provider: confinement.provider.value + ' - ' + confinement.provider.label,\n                    date_admitted: confinement.dateAdmitted,\n                    confinement_kind: confinement.confinementKind,\n                    gift_given: confinement.giftGiven,\n                    updates: confinement.updates,\n                    room_accommodation: confinement.accommodations.map(accommodation => {\n                        return {\n                            room_type: accommodation.roomType,\n                            no_of_days: accommodation.days,\n                            amount: accommodation.costPerDay,\n                            total_amount: accommodation.costPerDay * accommodation.days\n                        }\n                    }),\n                    diagnoses: confinement.diagnoses.map(diagnosis => {\n                        return {\n                            icd10_code: diagnosis.icd10Code.value,\n                            diagnosis: diagnosis.icd10Code.label,\n                            remarks: diagnosis.remarks,\n                            is_primary: diagnosis.isPrimary,\n                            is_final: diagnosis.isFinal,\n                            doctors: diagnosis.doctors.map(doctor => {\n                                return {\n                                    _id: doctor.id,\n                                    name: doctor.name,\n                                    specialization: doctor.specialization,\n                                    fee: doctor.fee,\n                                    no_of_visits: doctor.noOfVisits,\n                                    remarks: doctor.remarks,\n                                    type: doctor.type\n                                }\n                            }),\n                            procedures: diagnosis.procedures.map(procedure => {\n                                return {\n                                    cpt_code: procedure.cptCode.value,\n                                    procedure_name: procedure.cptCode.label,\n                                    amount: procedure.amount,\n                                    doctor: procedure.doctor,\n                                    phic: procedure.isPHIC,\n                                    notes: procedure.notes,\n                                    date_added: procedure.dateAdded,\n                                    assessment_type: procedure.assessmentType,\n                                    assessment_remarks: procedure.assessmentRemarks,\n                                    approved_amount: procedure.approvedAmount\n                                }\n                            }),\n                            assessment_type: diagnosis.assessmentType,\n                            assessment_remarks: diagnosis.assessmentRemarks,\n                            approved_amount: diagnosis.approvedAmount\n                        }\n                    }),\n                    others: confinement.others,\n                    coverage: confinement.coverage.label,\n                    philhealth_amount: confinement.philhealthAmount,\n                    final_bill: confinement.finalBill,\n                    discharge_date: confinement.dischargeDate\n                } : undefined),\n\n                consultation_details: (consultation ? {\n                    provider: `${consultation.provider.value} - ${consultation.provider.label}`,\n                    diagnosis: `${consultation.diagnosis.value} - ${consultation.diagnosis.label}`,\n                    doctor: `${consultation.doctor.value} - ${consultation.doctor.label}`,\n                    notes: consultation.notes,\n                    assessment_type: consultation.assessmentType,\n                    assessment_remarks: consultation.assessmentRemarks,\n                    approved_amount: consultation.approvedAmount\n                } : undefined)\n            },\n            pmaker_case_uid: ticket.pmCaseId,\n            status: ticket.status,\n            date_created: ticket.dateCreated,\n            date_updated: ticket.dateUpdated,\n            // date_escalated: '',\n            created_by: {\n                _id: ticket.createdBy.id,\n                name: ticket.createdBy.name\n            },\n            tmp: {\n                user_id: localStorage['user_id'],\n                module: 'Customer Care',\n                process: 'Create Ticket',\n                timestamp: new Date()\n            },\n            member_id: member ? member.memberId : '',\n            member_data: member ? {\n                _id: member.id,\n                is_vip: member.isVip,\n                last_name: member.lastName,\n                middle_name: member.middleName,\n                first_name: member.firstName,\n                client: member.client ? member.client.registeredName : undefined\n            } : undefined,\n            client_id: \n                client ? client.corporateAccountNo : \n                member && member.client ? member.client.corporateAccountNo : ' ',\n            client_data: \n                client ? {\n                    registered_name: client.registeredName\n                } : member ? {\n                    registered_name: member.client ? member.client.registeredName : undefined\n                 } : undefined,\n            contract_id: \n                member && member.contract ? member.contract.id : \n                client && client.contract ? client.contract.id : '',\n            approval_code: ticket.approvalCode,\n            generate_approval_code: true,\n            loa: loas.map(loa => {\n                return {\n                    _id: loa.id,\n                    loa_no: loa.loaNo,\n                    amount: loa.amount,\n                    date: loa.date,\n                    notes: loa.notes\n                }\n            }),\n            total_amount: availment ? (\n                getApprovedAvailmentsCost(availment)\n            ) : confinement ? (\n                getApprovedAvailmentsCost(confinement)\n            ) : (\n                0\n            )\n        };\n    }\n\n\n\n\n\n\n\n\n\n\n    static getMemberData(response: any): MemberData {\n        return {\n            id: response._id,\n            memberId: response.member_id,\n            firstName: response.first_name,\n            middleName: response.middle_name,\n            lastName: response.last_name,\n            birthDate: new Date(response.date_of_birth),\n            gender: response.gender,\n            civilStatus: response.civil_status,\n            contract: response.latest_contract ? {\n                id: response.latest_contract._id,\n                name: response.latest_contract.name,\n                status: response.latest_contract.status,\n                startDate: new Date(response.latest_contract.custom_metadata.coverage_start_date),\n                endDate: new Date(response.latest_contract.custom_metadata.coverage_end_date)\n            } : undefined,\n            isVip: response.is_vip,\n            status: response.member_status,\n            client: Payloads.getClientData(response.client)\n        }\n    }\n\n\n\n\n\n\n\n\n\n    \n    static getClientData(response: any, benefitTree?: any, planTypes?: any): ClientData {\n\n        const getAddress = (address: any): AddressData => {\n            return {\n                floor: address.floor,\n                unit: address.unit,\n                bldgNo: address.bldg_no,\n                bldgName: address.bldg_name,\n                street: address.street,\n                barangay: address.brgy,\n                city: address.city,\n                region: address.region,\n                zipCode: address.zip_code,\n                contactNos: address.contact_numbers ? address.contact_numbers.map(contact => {\n                    return contact.no;\n                }) : [],\n                contactPersons: address.contact_persons ? address.contact_persons.map(contact => {\n                    return {\n                        name: contact.name,\n                        contactNo: contact.contact_no,\n                        email: contact.email_address,\n                        designation: contact.designation,\n                    }\n                }) : []\n            }\n        }\n\n        const getContract = (benefitTree: any[]): ContractData => {\n            let name = '', startDate = undefined, endDate = undefined;\n\n            benefitTree.forEach(item => {\n                if (item.level === 2 && item.tree_id === 'MCT') {\n                    name = item.name ? item.name : '';\n                    if (item.custom_metadata) {\n                        startDate = item.custom_metadata.coverage_start_date || '';\n                        endDate = item.custom_metadata.coverage_end_date || '';\n                    }\n                }\n            });\n\n            return {\n                id: response.contracts && response.contracts.length > 0 ? response.contracts[0] : '',\n                name: name,\n                startDate: startDate ? new Date(startDate) : undefined,\n                endDate: endDate ? new Date(endDate) : undefined\n            }\n        }\n\n        return {\n            id: response._id,\n            registeredName: response.registered_name,\n            brandName: response.brand_name,\n            cardName: response.name_on_card,\n            corporateAccountNo: response.corporate_account_no,\n            tinNo: response.tin_no,\n            vatType: response.vat_type,\n            evatNo: response.evat_no,\n            industry: response.industry,\n            ownership: response.ownership,\n            years: response.years_of_existence,\n            prevHMOProvider: response.prev_hmo_provider,\n            prevHMOEffectivityDate: response.prev_hmo_effectivity_date ? new Date(response.prev_hmo_effectivity_date) : undefined,\n            prevHMOExpiryDate: response.prev_hmo_effectivity_date ? new Date(response.prev_hmo_expiry_date) : undefined,\n            secRegNo: response.sec_reg_no,\n            authSignatory: response.authorized_signatory,\n            authContactNo: response.authorized_signatory_contact_no,\n            authEmail: response.authorized_signatory_email_address,\n            authDesignation: response.authorized_signatory_designation,\n            sourceOfFunds: response.sources_of_funds,\n            salesChannel: response.sales_channel ? {\n                type: response.sales_channel.type,\n                name: response.sales_channel.agent_name,\n                company: response.sales_channel.company_name,\n                contactName: response.sales_channel.contact_person,\n                position: response.sales_channel.position,\n                contactNo: response.sales_channel.contact_no,\n                email: response.sales_channel.email_address,\n            } : undefined,\n            mainOfficeAddress: response.main_office_address ? \n                getAddress(response.main_office_address) : undefined,\n            branches: response.branches ? (\n                    response.branches.map(branch => {\n                    return getAddress(branch);\n                })\n            ) : [],\n            status: response.status,\n            contract: \n                benefitTree ? (\n                    getContract(benefitTree)\n                ) : response.latest_contract ? {\n                    id: response.latest_contract._id,\n                    name: response.latest_contract.name,\n                    status: response.latest_contract.status,\n                    startDate: new Date(response.latest_contract.custom_metadata.coverage_start_date),\n                    endDate: new Date(response.latest_contract.custom_metadata.coverage_end_date)\n                } : undefined,\n            attachments: response.attachments ? (\n                response.attachments.map(attachment => {\n                    return {\n                        type: attachment.type,\n                        url: attachment.url,\n                        tags: attachment.tags,\n                        origName: attachment.originalname,\n                        encoding: attachment.encoding,\n                        mimeType: attachment.mimetype,\n                        size: attachment.size,\n                    }\n                })\n            ): undefined,\n            files: response.files,\n            groupName: response.group_name,\n            headCompanyName: response.head_company_name,\n            memberFields: response.member_data_fields ? (\n                response.member_data_fields.map(field => {\n                    return {\n                        isRequired: field.is_required,\n                        fieldName: field.system_name,\n                        dataType: field.data_type,\n                        inputType: field.input_type,\n                        type: field.field_type\n                    }\n                })\n            ): undefined,\n            planTypes: planTypes ? planTypes.map(planType => {\n                return {\n                    name: planType.plan_type_name,\n                    code: planType.plan_type_code,\n                    benefits: planType.benefit_count,\n                    principals: planType.principal_count,\n                    dependents: planType.dependent_count,\n                    dateCreated: new Date(planType.date_created),\n                    dateUpdated: new Date(planType.date_updated),\n                    version: planType.version\n                }\n            }) : undefined,\n            servicingInstructions: response.servicing_instructions ? {\n                sortingOfCards: response.servicing_instructions.sorting_of_cards ? {\n                    cardSorting: response.servicing_instructions.sorting_of_cards.card_sorting,\n                    cardPacking: response.servicing_instructions.sorting_of_cards.card_packing,\n                    packAccordingTo: response.servicing_instructions.sorting_of_cards.pack_accdg_to\n                } : undefined,\n                printingOfCards: response.servicing_instructions.printing_of_cards,\n                billing: response.servicing_instructions.billing ? {\n                    addressSoaTo: response.servicing_instructions.billing.address_soa_to,\n                    sendSoaTo: response.servicing_instructions.billing.send_soa_to,\n                    sendSoaDays: response.servicing_instructions.billing.send_soa_days,\n                    sendSoaFormats: response.servicing_instructions.billing.send_soa_formats,\n                    cmApplication: response.servicing_instructions.billing.cm_application,\n                    additionalRequirements: response.servicing_instructions.billing.additional_requirements,\n                    soaGeneration: response.servicing_instructions.billing.soa_generation,\n                    soaSorting: response.servicing_instructions.billing.soa_sorting,\n                    additionalFieldsSoa: response.servicing_instructions.billing.additional_fields_soa\n                } : undefined,\n                enrollment: response.servicing_instructions.enrollment ? {\n                    employeeEntrollment: response.servicing_instructions.enrollment.employee_enrollment,\n                    dependentEntrollment: response.servicing_instructions.enrollment.dependent_enrollment,\n                    enrollmentDoneThrough: response.servicing_instructions.enrollment.enrollment_done_through\n                } : undefined,\n                collection: response.servicing_instructions.collection ? {\n                    prefredMeansOfPayment: response.servicing_instructions.collection.preferred_means_of_payment,\n                    employeeEnrollment: response.servicing_instructions.collection.employee_enrollment,\n                    contactPersonForFollowups: response.servicing_instructions.collection.contact_person_for_followups,\n                    detialsForPaymentPickup: response.servicing_instructions.collection.details_for_payment_pickup,\n                    preferedBank: response.servicing_instructions.collection.preferred_bank\n                } : undefined,\n                availment: response.servicing_instructions.availment,\n                reportorial: response.servicing_instructions.reportorial ? (\n                    response.servicing_instructions.reportorial.map(data => {\n                        return {\n                            reportType: data.report_type,\n                            frequency: data.frequency,\n                            available: data.available\n                        }\n                    })\n                ) : undefined,\n            } : undefined,\n        }\n    }\n\n\n\n\n\n\n\n\n\n\n    static getContractData(response: any): ContractData[] {\n        return response.map(contract => {\n            return {\n                id: contract._id,\n                name: contract.name,\n                contractNo: contract.contract_no,\n                type: contract.handler,\n                status: contract.status,\n                // startDate: contract.name,\n                // endDate: contract.name,\n                // version: contract.name\n            }\n        })\n    }\n\n\n\n\n\n\n\n\n\n\n    static getAuditLogs(response: any[]): LogData[] {\n        return response.map(log => {\n            return {\n                activityId: log.activity_id,\n                user: log.user,\n                name: log.activity,\n                date: log.date,\n                time: log.time\n            }\n        })\n    }\n\n\n\n\n\n\n\n\n\n\n    static getDocuments(response: any[]): DocumentData[] {\n        return response.map(doc => {\n            return {\n                clientId: doc.client_id,\n                name: doc.document_name,\n                proposalNo: doc.proposal_number,\n                files: doc.files,\n                uploader: doc.uploaded_by,\n                uploadDate: new Date(doc.uploaded_date),\n                version: doc.version,\n                signedDate: doc.date_signed ? new Date(doc.date_signed) : undefined,\n                batchName: doc.batch_name,\n                endorseDate: doc.date_endorsed ? new Date(doc.date_endorsed) : undefined,\n                type: doc.type,\n                sender: doc.sender,\n                section: doc.section\n            }\n        })\n    }\n\n\n\n\n\n\n\n\n\n\n    static getMembers(response: any[]): MemberData[] {\n        return response.map(member => {\n            return {\n                id: member._id,\n                memberId: member.member_card_no,\n                firstName: member.first_name,\n                middleName: member.middle_name,\n                lastName: member.last_name,\n                birthDate: new Date(member.date_of_birth),\n                gender: member.gender,\n                civilStatus: member.civil_status,\n                corporateName: member.client_object.registered_name,\n                status: member.member_status,\n                effectivityDate: member.effectivity_date ? new Date(member.effectivity_date) : undefined,\n                terminationDate: member.termination_date ? new Date(member.termination_date) : undefined\n                // isVip: member.is_vip,\n                // client: Payloads.getClientData(member.client)\n            }\n        })\n    }\n\n\n\n\n\n\n\n\n\n\n    static getTicketData(response: any, appNo: string): TicketData {\n        const ticketCategory = response.ticket_category;\n\n        return {\n            id: response._id,\n            ticketChannel: response.received_via,\n            transactionNo: response.transaction_no,\n            ticketSource: response.received_from,\n            memberName: response.member_name,\n            clientName: response.corporate_client,\n            brokerName: response.broker,\n            facility: { value: '', label: response.hospital_name },\n            department: response.department,\n            callerName: response.caller_name,\n            contactNo: response.contact_no,\n            ticketType: ticketCategory.ticket_type,\n            specificType: ticketCategory.specific_type,\n            urgency: ticketCategory.urgency,\n            agent: { id: '', name: ticketCategory.assign_to },\n            additionalNotes: response.additional_notes,\n            additionalFiles: [],\n            ticketNo: appNo,\n            pmCaseId: response.pmaker_case_uid,\n            status: response.status,\n            createdBy: { id: response.created_by.id, name: response.created_by.name },\n            dateCreated: new Date(response.date_created),\n            dateUpdated: new Date(response.date_updated),\n            dateEscalated: new Date(response.date_escalated),\n            approvalCode: response.approval_code\n        }\n    }\n\n\n\n\n\n\n\n\n\n\n    static getConfinementData(confinement: any, response: any): UpdateInpatientDetails {\n        const providerData = confinement.provider.split(' - ');\n        return {\n            provider: { value: providerData[0], label: providerData[1] },\n            dateAdmitted: new Date(confinement.date_admitted),\n            confinementKind: confinement.confinement_kind,\n            giftGiven: confinement.gift_given,\n            coverage: { value: '', label: confinement.coverage },\n            ticketNo: confinement.ticket_no,\n            paidBy: confinement.paid_by,\n            philhealthAmount: confinement.philhealth_amount,\n            finalBill: confinement.final_bill,\n            dischargeDate: confinement.discharge_date ? new Date(confinement.discharge_date) : undefined,\n\n            primaryDiagnosisIndex: confinement.diagnoses\n                .map((value, index) => {\n                    if (value.is_primary) {\n                        return index;\n                    }\n                    return -1;\n                })\n                .filter(value => value != -1)[0],\n\n            updates: confinement.updates.map(value => {\n                return {\n                    remarks: value.remarks,\n                    date: new Date(value.date),\n                    hospitalBill: parseFloat(value.hospital_bill)\n                };\n            }),\n            accommodations: confinement.room_accommodation.map(value => {\n                return {\n                    roomType: value.room_type,\n                    days: value.no_of_days,\n                    costPerDay: value.amount\n                };\n            }),\n            diagnoses: confinement.diagnoses.map(value => {\n                return {\n                    diagnosis: { value: value.icd10_code, label: value.diagnosis },\n                    remarks: value.remarks,\n                    isFinal: value.is_final,\n                    isPrimary: value.is_primary\n                };\n            }),\n            physicians: [].concat(...confinement.diagnoses.map(diagnosis => {\n                return diagnosis.doctors.map(doctor => {\n                    return {\n                        physician: {\n                            value: '',\n                            label: doctor.name,\n                            params: [doctor.specialization, doctor.type]\n                        },\n                        diagnosis: { value: diagnosis.icd10_code, label: diagnosis.diagnosis },\n                        remarks: doctor.remarks,\n                        visits: doctor.no_of_visits,\n                        amount: doctor.fee\n                    };\n                });\n            })),\n            procedures: [].concat(...confinement.diagnoses.map(diagnosis => {\n                return diagnosis.procedures.map(procedure => {\n                    return {\n                        procedure: { value: procedure.cpt_code, label: procedure.procedure_name },\n                        diagnosis: { value: diagnosis.icd10_code, label: diagnosis.diagnosis },\n                        physician: { value: '', label: procedure.doctor },\n                        date: new Date(procedure.date_added),\n                        remarks: procedure.notes,\n                        amount: parseInt(procedure.amount)\n                    };\n                });\n            })),\n            items: confinement.others.map(value => {\n                return {\n                    name: value.item_name,\n                    type: { value: '', label: value.type },\n                    amount: value.amount\n                };\n            }),\n            files: response.supporting_documents.map(value => {\n                return {\n                    docName: value.doc_name,\n                    file: value\n                };\n            })\n        }\n    }\n\n\n\n\n\n\n\n\n\n\n    \n}","import * as React from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { GlobalFunction } from '../GlobalFunction';\nimport { MemberData, TicketData, PartialMemberData, DropdownChoice, BenefitData, SimpleTicketData, ClientData, PartialClientData } from 'Pages/CustomerCarePage/Models';\nimport { TextButton } from '../Components/TextButton';\nimport { SearchedMembersList } from './SearchedMembersList';\nimport { API } from '../API';\nimport { Loading } from '../Components/Loading';\nimport { TypeValueField } from '../Components/TypeValueField';\nimport { MemberDataSection } from './MemberDataSection';\nimport { Processmaker } from '../Processmaker';\nimport { ClientDataSection } from './ClientDataSection';\nimport { SearchedClientsList } from './SearchedClientsList';\nimport { Payloads } from '../Payloads';\n\ninterface IProps {\n    member?: MemberData;\n    client?: ClientData;\n    ticket?: TicketData;\n    ticketStatus: 'Create' | 'Update' | 'Resolve';\n    onUpdateMemberStateChange?: (member?: MemberData) => void;\n    onUpdateClientStateChange?: (client?: ClientData) => void;\n\n    promptChooseMember?: boolean;\n    disableLinkedTickets?: boolean;\n}\n\ninterface IStates {\n    searchIDValue: string;\n    searchIDType: DropdownChoice;\n    recentTickets?: SimpleTicketData[];\n    linkedTickets?: SimpleTicketData[];\n\n    isMembersLoaded: boolean;\n    loadingMembers: boolean;\n    loadingMember: boolean;\n    loadingBenefits: boolean;\n\n    isClientsLoaded: boolean;\n    loadingClients: boolean;\n    loadingClient: boolean;\n\n    loadingRecentTickets: boolean;\n    loadingLinkedTickets: boolean;\n}\n\nexport class LeftPanelSection extends React.Component<IProps, IStates> {\n\n    clients: PartialClientData[];\n    members: PartialMemberData[];\n    benefits: BenefitData[];\n    idTypes: DropdownChoice[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            searchIDValue: '',\n            searchIDType: { value: '', label: '' },\n            isMembersLoaded: false,\n            loadingMembers: false,\n            loadingMember: false,\n            loadingBenefits: false,\n            isClientsLoaded: false,\n            loadingClients: false,\n            loadingClient: false,\n            loadingRecentTickets: false,\n            loadingLinkedTickets: false\n        };\n\n        this.clients = [];\n        this.members = [];\n        this.benefits = [];\n\n        this.idTypes = [\n            { value: '1', label: 'Client ID' },\n            { value: '2', label: 'Member ID' }\n        ]\n    }\n\n    componentWillUpdate(props: IProps, _state: IStates) {\n        if (!this.props.client && !this.props.member) {\n            if (props.client || props.member) {\n                if (this.props.ticket) {\n                    const targetId = \n                        props.member ? props.member.memberId :\n                        props.client ? props.client.corporateAccountNo : '';\n                    this.getRecentTicketsData(targetId);\n                }\n            }\n        }\n    }\n\n    getMemberData = (memberId: string) => {\n        API.get(`customer-care/members/${memberId}`, \n            (response) => {\n                console.log(response);\n                if (this.props.onUpdateMemberStateChange && this.props.onUpdateClientStateChange) {\n                    this.props.onUpdateClientStateChange(undefined);\n                    this.props.onUpdateMemberStateChange(Payloads.getMemberData(response));\n                    getMemberBenefit();\n                    this.getRecentTicketsData(memberId);\n                }\n                this.setState({loadingMember: false});\n            },\n            (error) => {\n                console.log(error);\n            });\n\n        const getMemberBenefit = () => {\n            this.setState({loadingBenefits: true});\n            API.get(`customer-care/members/${memberId}/benefits`,\n                (response) => {\n                    this.benefits = \n                        combineNodes(\n                            response.filter(benefit => benefit.level == 6),\n                            response.filter(benefit => benefit.level == 7)\n                        )\n                        .map(benefit => {\n                            return {\n                                category: benefit.parent_name,\n                                name: benefit.name,\n                                ...(benefit.limits.length > 0 ? \n                                    {\n                                        limitType: benefit.limits[0].type,\n                                        limit: benefit.limits[0].limit,\n                                        limitUnit: benefit.limits[0].limit_unit\n                                    } : undefined)\n                            }\n                        });\n                    \n                    this.setState({loadingBenefits: false});\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({loadingBenefits: false});\n                });\n        }\n\n        const combineNodes = (parentNodes: any, childNodes: any) => {\n            const nodes = parentNodes.reduce ((result, parent) => {\n                parent.children.map ((child) => {\n                let foundChild = childNodes.find ((childNode) => child === childNode._id);\n            \n                if (foundChild) {\n                    let child = Object.assign({}, foundChild);\n            \n                    child['parent_name'] = parent.name;\n                    child['parent_code'] = parent.code;\n                    child['disabled'] = false;\n                    result.push(child);\n                }\n                });\n            \n                return result;\n            }, new Array());\n            \n            return nodes;\n        };\n    }\n    \n    getClientData = (clientId: string) => {\n        API.get(`customer-care/clients/${clientId}`,\n            (response) => {\n                console.log(response);\n                if (this.props.onUpdateClientStateChange && this.props.onUpdateMemberStateChange) {\n                    this.props.onUpdateMemberStateChange(undefined);\n                    this.props.onUpdateClientStateChange(Payloads.getClientData(response));\n                    this.getRecentTicketsData(clientId);\n                    this.getLinkedTicketsData(clientId);\n                }\n                this.setState({loadingClient: false});\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    getRecentTicketsData = (targetId: string) => {\n        if (!this.state.loadingRecentTickets) {\n            this.setState({\n                loadingRecentTickets: true,\n                recentTickets: []\n            });\n        }\n\n        const filter = {\n            where: {\n                '$or': [\n                    { member_id: targetId },\n                    { client_id: targetId }\n                ]\n            }\n        }\n        \n        API.get(`customer-care/tickets?filter=${JSON.stringify(filter)}`,\n            (tickets) => {\n                if (tickets) {\n                    tickets.map(ticket => {\n                        processmakerParticipated(ticket);\n                    });\n                    this.setState({loadingRecentTickets: false});\n                }\n            },\n            (error) => {\n                console.log(error);\n                this.setState({loadingRecentTickets: false});\n            }\n        );\n\n        const processmakerParticipated = (ticket: any) => {\n            Processmaker.get('cases/participated',\n                (cases) => {\n                    const matchedCase = cases.filter(caseItem => caseItem.app_uid === ticket.pmaker_case_uid)[0];\n                    if (matchedCase && this.state.recentTickets) {\n                        this.state.recentTickets.push({\n                            ticketNo: \n                                GlobalFunction.generateTicketNumber(\n                                    ticket.ticket_category.ticket_type,\n                                    ticket.ticket_category.specific_type,\n                                    matchedCase.app_number\n                                ),\n                            specificType: ticket.ticket_category.specific_type !== 'Not Applicable' ? (\n                                ticket.ticket_category.specific_type\n                            ) : (\n                                ticket.ticket_category.ticket_type\n                            ),\n                            status: ticket.status,\n                            dateCreated: new Date(ticket.date_created),\n                            dateUpdated: new Date(ticket.date_updated)\n                        });\n                        this.setState({recentTickets: this.state.recentTickets});\n                    }\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({loadingRecentTickets: false});\n                }\n            );\n        }\n    }\n\n    // @ts-ignore\n    getLinkedTicketsData = (targetId: string) => {\n        if (!this.state.loadingLinkedTickets) {\n            this.setState({loadingLinkedTickets: true});\n        }\n        \n        if (this.state.linkedTickets) {\n            this.state.linkedTickets.push({\n                ticketNo: '999-999-9999*',\n                specificType: 'None*',\n                status: 'None*',\n                dateCreated: new Date(),\n                dateUpdated: new Date()\n            });\n            this.setState({linkedTickets: this.state.linkedTickets});\n            console.log('linkedTickets', this.state.linkedTickets);\n        }\n        this.setState({loadingLinkedTickets: false});\n    }\n\n    onSearchChanged = (value: string) => {\n\n        const sliceMemberID = (text: string) => {\n            const slicedText: string[] = [];\n            slicedText.push(text.slice(0, 2));\n            slicedText.push(text.slice(2, 4));\n            slicedText.push(text.slice(4, 9));\n            slicedText.push(text.slice(9, 14));\n            slicedText.push(text.slice(14, 16));\n            return slicedText.filter(text => text !== '');\n        }\n    \n        const sliceClientID = (text: string) => {\n            const slicedText: string[] = [];\n            slicedText.push(text.slice(0, 2));\n            slicedText.push(text.slice(2, 4));\n            slicedText.push(text.slice(4, 9));\n            return slicedText.filter(text => text !== '');\n        }\n\n        const onSearchMember = () => {\n            if (trimmedValue.length >= 13) {\n                this.setState({loadingMembers: true});\n                API.get(`customer-care/members?` +\n                    `filter[where][member_id][like]=${newValue}&` +\n                    `filter[where][member_status][inq]=Active&` +\n                    `filter[where][member_status][inq]=Cancelled&` +\n                    `filter[where][member_status][inq]=Expired&` + \n                    `filter[where][member_status][inq]=Suspended&` + \n                    `filter[where][member_status][inq]=Terminated`,\n                    (response) => {\n                        console.log(response);\n                        this.members = response.map(member => {\n                            return {\n                                memberId: member.member_id,\n                                firstName: member.first_name,\n                                middleName: member.middle_name,\n                                lastName: member.last_name,\n                                clientName: member.client.registered_name,\n                                isVip: member.is_vip\n                            }\n                        });\n                        this.setState({\n                            isMembersLoaded: true,\n                            loadingMembers: false\n                        });\n                    },\n                    (error) => {\n                        console.log(error);\n                        this.setState({\n                            isMembersLoaded: true,\n                            loadingMembers: false\n                        });\n                    });\n            }\n        }\n\n        const onSearchClient = () => {\n            if (trimmedValue.length >= 8) {\n                this.setState({loadingClients: true});\n                API.get(`customer-care/client?filter[where][corporate_account_no][like]=${newValue}`,\n                    (response) => {\n                        console.log(response);\n                        this.clients = response.map(client => {\n                            return {\n                                id: client._id,\n                                clientId: client.corporate_account_no,\n                                clientName: client.registered_name\n                            }\n                        });\n                        this.setState({\n                            isClientsLoaded: true,\n                            loadingClients: false\n                        });\n                    },\n                    (error) => {\n                        console.log(error);\n                        this.setState({\n                            isClientsLoaded: true,\n                            loadingClients: false\n                        });\n                    });\n            }\n        }\n\n        const trimmedValue = value.replace(/-/g, '');\n        const splitValue = this.state.searchIDType.label === 'Client ID' ? (\n            sliceClientID(trimmedValue)\n        ) : (\n            sliceMemberID(trimmedValue)\n        );\n        const newValue = splitValue ? splitValue.join('-') : '';\n        this.setState({searchIDValue: newValue});\n\n        if (this.state.searchIDType.label === 'Client ID') {\n            onSearchClient();\n        }\n\n        if (this.state.searchIDType.label === 'Member ID') {\n            onSearchMember();\n        }\n    }\n\n\n\n\n\n\n\n\n    render(): JSX.Element {\n        return (\n            <div className='member-info'>\n                {this.props.ticketStatus === 'Create' ? (\n                    <div>\n                        {this.renderSearchArea()}\n                        <div className='line-border' />\n                    </div>\n                ) : this.props.ticketStatus === 'Update' ||\n                    this.props.ticketStatus === 'Resolve' ? (\n                    this.renderTopArea()\n                ) : null}\n                {this.props.member ? (\n                    <MemberDataSection \n                        member={this.props.member}\n                        benefits={this.benefits}\n                        recentTickets={this.state.recentTickets}\n                        loadingBenefits={this.state.loadingBenefits}\n                        loadingRecentTickets={this.state.loadingRecentTickets} />\n                ) : this.props.client ? (\n                    <ClientDataSection \n                        client={this.props.client}\n                        recentTickets={this.state.recentTickets}\n                        linkedTickets={this.state.linkedTickets}\n                        disableLinkedTickets={this.props.disableLinkedTickets}\n                        loadingRecentTickets={this.state.loadingRecentTickets}\n                        loadingLinkedTickets={this.state.loadingLinkedTickets}\n                        getLinkedTicketsData={this.getLinkedTicketsData}  />\n                ) : (\n                    <>\n                    {this.state.loadingMember || this.state.loadingClient ? (\n                        <Loading height='3rem' />\n                    ) : null}\n                    {this.props.promptChooseMember ? (\n                        <div className='section' style={{color: '#E53935'}}>\n                            Choose a member/client first before submitting the ticket.\n                        </div> \n                    ) : null}\n                    </>\n                )}\n                    \n                {this.props.ticket ? (\n                    this.renderTicketData(this.props.ticket)\n                ) : (null)}\n                <div className='section' />\n            </div>\n        );\n    }\n\n\n\n    renderSearchArea(): JSX.Element {\n        return (\n            <div className='section'>\n                <Breadcrumbs className='bread-crumbs'>\n                    <Link href='#/customer-care'>TICKETS</Link>\n                    <div className='current-text'>CREATE A TICKET</div>\n                </Breadcrumbs>\n\n                <div className='header-1'>Create Ticket</div>\n\n                <div style={{position: 'relative'}}>\n                    <TypeValueField \n                        placeholder='Search ID'\n                        type={this.state.searchIDType}\n                        value={this.state.searchIDValue}\n                        choices={this.idTypes}\n                        onChangeType={(type: DropdownChoice) => {\n                            this.setState({searchIDType: type});\n                        }}\n                        onChangeValue={(value: string) => {\n                            this.onSearchChanged(value);\n                        }} />\n\n                    {this.state.loadingMembers ||  this.state.loadingClients ? (\n                        <div style={{position: 'absolute', right: '8px', bottom: '13px'}}>\n                            <Loading height='none' size={16}/>\n                        </div>\n                    ) : null}\n                </div>\n\n                {this.state.searchIDType.label === 'Member ID' ? (\n                    <SearchedMembersList \n                        searchText={this.state.searchIDValue}\n                        members={this.members}\n                        onSelectMember={(memberId: string) => {\n                            this.getMemberData(memberId);\n                            if (this.props.onUpdateMemberStateChange) {\n                                this.props.onUpdateMemberStateChange(undefined);\n                            }\n                            this.setState({\n                                searchIDValue: '',\n                                loadingMember: true,\n                                recentTickets: []\n                            });\n                        }} />\n\n                ) : this.state.searchIDType.label === 'Client ID' ? (\n                    <SearchedClientsList\n                        searchText={this.state.searchIDValue}\n                        clients={this.clients}\n                        onSelectClient={(clientId: string) => {\n                            this.getClientData(clientId);\n                            if (this.props.onUpdateClientStateChange) {\n                                this.props.onUpdateClientStateChange(undefined);\n                            }\n                            this.setState({\n                                searchIDValue: '',\n                                loadingClient: true,\n                                recentTickets: [],\n                                linkedTickets: []\n                            });\n                        }} />\n                    \n                ) : null}\n\n                <TextButton \n                    icon={faSearch}\n                    label='Advanced Search'\n                    onClick={() => {\n\n                    }}\n                    />\n            </div>\n        );\n    }\n\n    renderTopArea(): JSX.Element {\n        return (\n            <div className='section'>\n                <Breadcrumbs className='bread-crumbs'>\n                    <Link href='#/customer-care'>TICKETS</Link>\n                    <Link className='current-text'>{this.props.ticketStatus.toUpperCase() + ' TICKET'}</Link>\n                </Breadcrumbs>\n\n                {this.props.ticket ? (\n                    <span className='header-1'>\n                        {`${this.props.ticketStatus} Ticket ${this.props.ticket.ticketNo}`}\n                    </span>\n                ) : null}\n                \n\n            </div>\n        );\n    }\n\n    renderTicketData(ticket: TicketData): JSX.Element {\n        return (\n            <div className='section'>\n                <div className='sub-section'>\n                    <div className='light-text'>TICKET TYPE</div>\n                    <div className='small-text'>{ticket.ticketType}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>SPECIFIC TYPE</div>\n                    <div className='small-text'>{ticket.specificType}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>URGENCY</div>\n                    <div className='small-text'>{ticket.urgency}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>ASSIGNED TO</div>\n                    <div className='small-text'>{ticket.agent.name}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>RECEIVED VIA</div>\n                    <div className='small-text'>{ticket.ticketSource}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>RECEIVED FROM</div>\n                    <div className='small-text'>{ticket.callerName}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>NUMBER/EMAIL</div>\n                    <div className='small-text'>{ticket.contactNo}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>CALL TRANSACTION NO.</div>\n                    <div className='small-text'>{ticket.transactionNo}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>CREATED BY</div>\n                    <div className='small-text'>{ticket.createdBy.name}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>DATE AND TIME CREATED</div>\n                    <div className='small-text'>{GlobalFunction.toDateAndTime(ticket.dateCreated)}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>DATE AND TIME LAST UPDATED</div>\n                    <div className='small-text'>{GlobalFunction.toDateAndTime(ticket.dateUpdated)}</div>\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\nimport Select from 'react-select';\nimport { DropdownChoice } from '../Models';\nimport { Option } from 'react-select/src/filters';\n\ninterface IProps {\n    placeholder?: string;\n    disabled?: boolean;\n    value: DropdownChoice;\n    choices: DropdownChoice[];\n    error?: boolean;\n    onChange: (value: DropdownChoice) => void;\n}\n\ninterface IStates {\n    value: string;\n}\n\nexport class Dropdown extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            value: ''\n        }\n    }\n\n    shouldComponentUpdate(props: IProps, _state: any) {\n        return (\n            (this.props.placeholder !== props.placeholder) ||\n            (this.props.disabled !== props.disabled) ||\n            (this.props.value !== props.value) ||\n            (this.props.choices !== props.choices) ||\n            (this.props.error !== props.error)\n        );\n    }\n\n    render(): JSX.Element {\n\n        return (\n            <div className='dropdown'>\n                {this.props.placeholder ? (\n                    <div className={this.props.disabled ? 'text-disabled text' : 'text'}>\n                        {this.props.placeholder}\n                    </div>\n                ) : null}\n                \n                <Select\n                    className='actual-dropdown'\n                    classNamePrefix={this.props.error ? 'actual-dropdown-error' : 'actual-dropdown'}\n                    isDisabled={this.props.disabled ? this.props.disabled : false}\n                    value={this.props.value}\n                    options={this.props.choices} \n                    onInputChange={(value: string, _a) => {\n                        this.setState({value: value});\n                    }}\n                    noOptionsMessage={() => {\n                        return (\n                            this.props.choices.length === 0 ? (\n                                'Loading...'\n                            ) : (\n                                this.state.value.length < 3 ? (\n                                    'Enter at least 3 characters to search'\n                                ) : (\n                                    'No options'\n                                )\n                            )\n                        )\n                    }}\n                    filterOption={(option: Option, rawInput: string) => {\n                        const hasNoInput = (rawInput.length === 0);\n                        const choicesAreShort = (this.props.choices.length <= 20);\n                        const inputIsShort = (rawInput.length < 3);\n                        const isInputMatch = (option.label.toLowerCase().includes(rawInput.toLowerCase()));\n                        if (choicesAreShort) {\n                            if (hasNoInput) {\n                                return true;\n                            }\n                            return isInputMatch;\n                        } else {\n                            if (!inputIsShort) {\n                                return isInputMatch;\n                            }\n                            return false;\n                        }\n                    }}\n                    onChange={(choice: DropdownChoice) => {\n                        this.props.onChange(choice);\n                    }} />\n                    \n            </div>\n        );\n    }\n}","import * as React from 'react';\n// import { Select, MenuItem } from '@material-ui/core';\nimport Select from 'react-select';\nimport './component-style.scss';\nimport { DropdownChoice } from '../Models';\nimport { Option } from 'react-select/src/filters';\n\ninterface IProps {\n    placeholder?: string;\n    disabled?: boolean;\n    detail?: string;\n    value: DropdownChoice;\n    choices: DropdownChoice[];\n    error?: boolean;\n    onChange: (value: DropdownChoice) => void;\n}\n\ninterface IStates {\n    value: string;\n}\n\nexport class DetailedDropdown extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            value: ''\n        }\n    }\n\n    shouldComponentUpdate(props: IProps, _state: IStates) {\n        return (\n            this.props.choices.length !== props.choices.length ||\n            this.props.value.value !== props.value.value\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='detailed-dropdown'>\n                {this.props.placeholder ? (\n                    <div className='text'>{this.props.placeholder}</div>\n                ) : null}\n                \n                <div className='autocomplete'>\n                    <div className={\n                        this.props.disabled ? 'detail-disabled' :\n                        this.props.error ? 'detail-error' : 'detail'}>\n                        {this.props.detail ? this.props.detail : this.props.value.value ? this.props.value.value : null}\n                    </div>\n                    <Select\n                        className='actual-dropdown'\n                        classNamePrefix={this.props.error ? 'actual-dropdown-error' : 'actual-dropdown'}\n                        isDisabled={this.props.disabled ? this.props.disabled : false}\n                        value={this.props.value}\n                        options={this.props.choices} \n                        onInputChange={(value: string, _a) => {\n                            this.setState({value: value});\n                        }}\n                        noOptionsMessage={() => {\n                            return (\n                                this.props.choices.length === 0 ? (\n                                    'Loading...'\n                                ) : (\n                                    this.state.value.length < 3 ? (\n                                        'Enter at least 3 characters to search'\n                                    ) : (\n                                        'No options'\n                                    )\n                                )\n                            )\n                        }}\n                        filterOption={(option: Option, rawInput: string) => {\n                            const hasNoInput = (rawInput.length === 0);\n                            const choicesAreShort = (this.props.choices.length <= 20);\n                            const inputIsShort = (rawInput.length < 3);\n                            const isInputMatch = (option.label.toLowerCase().includes(rawInput.toLowerCase()));\n                            if (choicesAreShort) {\n                                if (hasNoInput) {\n                                    return true;\n                                }\n                                return isInputMatch;\n                            } else {\n                                if (!inputIsShort) {\n                                    return isInputMatch;\n                                }\n                            }\n                            return false;                            \n                        }}\n                        onChange={(choice: DropdownChoice) => {\n                            this.props.onChange(choice);\n                        }} />\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\n// import { GlobalFunction } from '../GlobalFunction';\n\ninterface IProps {\n    placeholder?: string;\n    value: number;\n    detail: string;\n    error?: boolean;\n    onChange: (value: number) => void;\n\n    isFloat?: boolean;\n}\n\ninterface IStates {\n    // isEditing: boolean;\n    value: string;\n}\n\nexport class DetailedNumberField extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            // isEditing: false\n            value: this.props.value.toString()\n        }\n    }\n\n    componentWillReceiveProps(props: IProps) {\n        let targetNewValue = props.value ? props.value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,') : '';\n\n        if (targetNewValue.charAt(targetNewValue.length - 4) === '.') {\n            targetNewValue = props.value.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n        }\n\n        if (targetNewValue !== this.state.value) {\n            this.setState({value: \n                this.props.isFloat && this.state.value.charAt(this.state.value.length - 1) === '.' ?\n                    `${targetNewValue}.` :\n                    targetNewValue});\n        }\n    }\n\n    render(): JSX.Element {\n        const dynamicStyle = {\n            borderColor: (this.props.error ? '#E53935' : undefined)\n        };\n\n        return (\n            <div className='detailed-input-field'>\n                {this.props.placeholder ? (\n                    <div className='text'>{this.props.placeholder}</div>\n                ) : null}\n                <div className='input-field'>\n                    <input\n                        className='text-field left'\n                        style={dynamicStyle}\n                        value={this.state.value}\n                        onFocus={() => {\n                            if (this.props.value == 0) {\n                                this.setState({value: ''});\n                            }\n                        }}\n                        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                            let value = event.target.value;\n                            let numberValue = parseFloat(value.replace(/,|-/g, ''));\n                            if (!isNaN(numberValue)) {\n                                numberValue = numberValue < 1000000000 ? numberValue : this.props.value;\n                            }\n                            let stringValue = !isNaN(numberValue) ? (\n                                this.props.isFloat && value.charAt(value.length - 1) === '.' ?\n                                    `${numberValue}.` :\n                                    numberValue.toString()\n                            ) : '';\n                            const newStringValue = stringValue.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n                            this.setState({value: newStringValue}, () => {\n                                if (this.props.isFloat) {\n                                    this.props.onChange(!isNaN(numberValue) ? numberValue : 0);\n                                } else {\n                                    this.props.onChange(!isNaN(numberValue) ? numberValue : 0);\n                                }\n                            });\n                        }} />\n                    <div className={`detail ${this.props.error ? 'error' : ''} right`}>\n                        {this.props.detail}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\nimport MomentUtils from '@date-io/moment';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider, MaterialUiPickersDate } from '@material-ui/pickers';\n\ninterface IProps {\n    placeholder?: string;\n    value: Date | null;\n    minDate?: Date;\n    disabled?: boolean;\n    onChange: (value: Date | null) => void;\n}\n\nexport class DatePicker extends React.Component<IProps> {\n\n    shouldComponentUpdate(props: IProps, _state: any) {\n        return (\n            (this.props.placeholder !== props.placeholder) ||\n            (this.props.value !== props.value)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='date-picker'>\n                {this.props.placeholder ? (\n                    <div className='text'>{this.props.placeholder}</div>\n                ) : null}\n                <MuiPickersUtilsProvider utils={MomentUtils}>\n                    <KeyboardDatePicker\n                        className={this.props.disabled ? 'text-field-disabled text-field' : 'text-field'}\n                        disabled={this.props.disabled}\n                        variant='dialog'\n                        format='MM/DD/YYYY'\n                        minDate={this.props.minDate ? this.props.minDate : new Date(1900, 1, 1)}\n                        value={this.props.value}\n                        onChange={(date: MaterialUiPickersDate | null) => {\n                            this.props.onChange(date ? date.toDate() : null);\n                        }} />\n                </MuiPickersUtilsProvider>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\nimport { DetailedDropdown } from 'Pages/CustomerCarePage/Components/DetailedDropdown';\nimport { DetailedNumberField } from 'Pages/CustomerCarePage/Components/DetailedNumberField';\nimport { DatePicker } from 'Pages/CustomerCarePage/Components/DatePicker';\nimport { DropdownChoice, ConfinementDetails } from 'Pages/CustomerCarePage/Models';\n\n\ninterface IProps {\n    confinement: ConfinementDetails;\n    facilities: DropdownChoice[];\n    doctors: DropdownChoice[];\n    cptCodes: DropdownChoice[];\n    createTicketAttemp: boolean;\n    refreshConfinementState: () => void;\n}\n\nexport class ConfinementSection extends React.Component<IProps> {\n\n    confinementTypes: DropdownChoice[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.confinementTypes = [\n            { value: '1', label: 'Elective / Scheduled' },\n            { value: '2', label: 'ER leading to confinement' }\n        ];\n    }\n\n    render(): JSX.Element {\n        const confinement = this.props.confinement;\n        return (\n            <div className='confinement-details'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='sub-section'>\n                    <div className='header-2'>CONFINEMENT DETAILS</div>\n                    <DetailedDropdown \n                        choices={this.props.facilities}\n                        placeholder='Provider'\n                        value={confinement.provider}\n                        error={\n                            this.props.createTicketAttemp && \n                            confinement.provider.value === ''}\n                        onChange={(value: DropdownChoice) => {\n                            this.props.confinement.provider = value;\n                            this.props.refreshConfinementState();\n                        }} />\n                    <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                            <DatePicker \n                                placeholder='Date Admitted' \n                                value={confinement.dateAdmitted}\n                                onChange={(value: Date) => {\n                                    this.props.confinement.dateAdmitted = value;\n                                    this.props.refreshConfinementState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Dropdown \n                                placeholder='Kind of Confinement' \n                                choices={this.confinementTypes}\n                                value={{ value: '', label: confinement.confinementKind}}\n                                error={\n                                    this.props.createTicketAttemp && \n                                    confinement.confinementKind === ''}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.confinement.confinementKind = value.label;\n                                    this.props.refreshConfinementState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={3}>\n                            <InputField \n                                placeholder='Room Type' \n                                value={confinement.roomType}\n                                error={\n                                    this.props.createTicketAttemp && \n                                    confinement.roomType === ''}\n                                onChange={(value: string) => {\n                                    this.props.confinement.roomType = value;\n                                    this.props.refreshConfinementState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={3}>\n                            <DetailedNumberField \n                                placeholder='Cost Per Day' \n                                value={confinement.costPerDay}\n                                detail={'PHP'}\n                                isFloat={true}\n                                onChange={(value: number) => {\n                                    this.props.confinement.costPerDay = value;\n                                    this.props.refreshConfinementState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Dropdown  \n                                placeholder='Admitting Physician' \n                                choices={this.props.doctors}\n                                value={confinement.doctor}\n                                error={\n                                    this.props.createTicketAttemp && \n                                    confinement.doctor.value === ''}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.confinement.doctor = value;\n                                    this.props.refreshConfinementState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <DetailedDropdown \n                                placeholder='Initial Diagnosis' \n                                choices={this.props.cptCodes}\n                                value={confinement.initialDiagnosis}\n                                error={\n                                    this.props.createTicketAttemp && \n                                    confinement.initialDiagnosis.value === ''}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.confinement.initialDiagnosis = value;\n                                    this.props.refreshConfinementState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={3}>\n                            <DetailedNumberField \n                                placeholder='Amount' \n                                value={confinement.amount}\n                                detail={'PHP'}\n                                isFloat={true}\n                                onChange={(value: number) => {\n                                    this.props.confinement.amount = value;\n                                    this.props.refreshConfinementState();\n                                }} />\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\n\ninterface IProps {\n    value: number;\n    onChange: (value: number) => void;\n\n    placeholder?: string;\n    error?: boolean;\n    isFloat?: boolean;\n    disableDelimiter?: boolean;\n}\n\ninterface IStates {\n    value: string;\n}\n\nexport class NumberField extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            value: this.props.value.toString()\n        }\n    }\n\n    componentWillReceiveProps(props: IProps) {\n        let targetNewValue = props.value ? (\n            !this.props.disableDelimiter ? \n                props.value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,') : \n                props.value.toString()) : '';\n\n        if (targetNewValue.charAt(targetNewValue.length - 4) === '.') {\n            targetNewValue = props.value.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n        }\n\n        if (targetNewValue !== this.state.value) {\n            this.setState({value: \n                this.props.isFloat && this.state.value.charAt(this.state.value.length - 1) === '.' ?\n                    `${targetNewValue}.` :\n                    targetNewValue});\n        }\n    }\n\n    render(): JSX.Element {\n        const props = this.props;\n        const dynamicStyle = {\n            borderColor: (props.error ? '#E53935' : undefined)\n        };\n\n        return (\n            <div className='input-field-container'>\n                {this.props.placeholder ? (\n                    <div className='text'>{this.props.placeholder}</div>\n                ) : null}\n                <input\n                    className='text-field'\n                    style={dynamicStyle}\n                    value={this.state.value} \n                    onFocus={() => {\n                        if (this.props.value == 0) {\n                            this.setState({value: ''});\n                        }\n                    }}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                        let value = event.target.value;\n                        let numberValue = parseFloat(value.replace(/,|-/g, ''));\n                        if (!isNaN(numberValue)) {\n                            numberValue = numberValue < 1000000000 ? numberValue : this.props.value;\n                        }\n                        let stringValue = !isNaN(numberValue) ? (\n                            this.props.isFloat && value.charAt(value.length - 1) === '.' ?\n                                `${numberValue}.` :\n                                numberValue.toString()\n                        ) : '';\n                        const newStringValue = stringValue.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n                        this.setState({value: this.props.disableDelimiter ? numberValue.toString() : newStringValue}, () => {\n                            if (this.props.isFloat) {\n                                this.props.onChange(!isNaN(numberValue) ? numberValue : 0);\n                            } else {\n                                this.props.onChange(!isNaN(numberValue) ? numberValue : 0);\n                            }\n                        });\n                    }} />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\nimport { Checkbox } from '@material-ui/core';\n\ninterface IProps {\n    placeholder?: string;\n    label?: string;\n    value: boolean;\n    disabled?: boolean;\n    onChange: (value: boolean) => void;\n}\n\nexport class CustomCheckbox extends React.Component<IProps> {\n\n    shouldComponentUpdate(props: IProps, _state: any) {\n        return (\n            (this.props.placeholder !== props.placeholder) ||\n            (this.props.value !== props.value)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='check-box-area'>\n                {this.props.placeholder ? (\n                    <div className='text'>{this.props.placeholder}</div>\n                ) : null}\n                <Checkbox\n                    className='check-box'\n                    checked={this.props.value}\n                    disabled={this.props.disabled}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                        this.props.onChange(event.target.checked);\n                    }} />\n                {this.props.label ? (\n                    <span className='text'>{this.props.label}</span>\n                ) : null}\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport {  Grid, TableCell, TableRow } from '@material-ui/core';\nimport { faMinusCircle, faPlus, faPen, faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { DetailedDropdown } from 'Pages/CustomerCarePage/Components/DetailedDropdown';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { ProcedureData, DropdownChoice, AvailmentDetails, DiagnosisData } from 'Pages/CustomerCarePage/Models';\nimport { NumberField } from 'Pages/CustomerCarePage/Components/NumberField';\nimport { CustomCheckbox } from 'Pages/CustomerCarePage/Components/CustomCheckbox';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\n\ninterface IProps {\n    availment: AvailmentDetails;\n    facilities: DropdownChoice[];\n    doctors: DropdownChoice[];\n    icd10Codes: DropdownChoice[];\n    cptCodes: DropdownChoice[];\n    createTicketAttemp: boolean;\n    refreshAvailmentState: () => void;\n}\n\ninterface IStates {\n    icd10Code: DropdownChoice;\n    doctor: DropdownChoice;\n\n    itemToEditIndex: number;\n    icd10CodeToEdit: DropdownChoice;\n    doctorToEdit: DropdownChoice;\n}\n\nexport class AvailmentSection extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            icd10Code: { value: '', label: '' },\n            doctor: { value: '', label: '' },\n\n            itemToEditIndex: -1,\n            icd10CodeToEdit: { value: '', label: '' },\n            doctorToEdit: { value: '', label: '' }\n        };\n    }\n\n    getFilteredICD10(): DropdownChoice[] {\n        let filteredICD10: DropdownChoice[] = [];\n        for (var i = 0; i < this.props.icd10Codes.length; i++) {\n            let isSame = false;\n            for (var j = 0; j < this.props.availment.diagnoses.length; j++) {\n                isSame = (\n                    this.props.availment.diagnoses[j].icd10Code.value === \n                    this.props.icd10Codes[i].value ? true : isSame);\n            }\n            if (!isSame) {\n                filteredICD10 = filteredICD10.concat(this.props.icd10Codes[i]);\n            }\n        }\n        return filteredICD10;\n    }\n\n    getProcedureCosts(procedures: ProcedureData[]) {\n        let totalCost = 0;\n        procedures.map(procedure => {\n            totalCost += procedure.amount;\n        });\n        return totalCost;\n    }\n    \n    pushBlankDiagnosis(icd10Code: DropdownChoice, doctor: DropdownChoice) {\n        this.props.availment.diagnoses.push({\n            icd10Code: icd10Code,\n            remarks: '',\n            isPrimary: false,\n            isFinal: false,\n            doctors: [{\n                id: '',\n                name: doctor.label,\n                specialization: '',\n                type: 'Admitting',\n                fee: 0,\n                noOfVisits: 0,\n                remarks: ''\n            }],\n            procedures: [{\n                cptCode: { value: '', label: '' },\n                isPHIC: false,\n                amount: 0,\n                notes: '',\n                assessmentType: 'Pending',\n                assessmentRemarks: '',\n                approvedAmount: 0,\n                doctor: '',\n                dateAdded: new Date()\n            }],\n            assessmentType: 'Pending',\n            assessmentRemarks: '',\n            approvedAmount: 0\n        });\n    }\n\n    pushBlankProcedures(diagnosisIndex: number) {\n        this.props.availment.diagnoses[diagnosisIndex].procedures.push({\n            cptCode: { value: '', label: '' },\n            isPHIC: false,\n            amount: 0,\n            notes: '',\n            assessmentType: 'Pending',\n            assessmentRemarks: '',\n            approvedAmount: 0,\n            doctor: '',\n            dateAdded: new Date()\n        });\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='availment-section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='sub-section'>\n                    <div className='header-2'>AVAILMENT DETAILS</div>\n                    <DetailedDropdown \n                        choices={this.props.facilities}\n                        placeholder='Provider'\n                        value={this.props.availment.provider}\n                        error={\n                            this.props.createTicketAttemp && \n                            this.props.availment.provider.value === ''}\n                        onChange={(value: DropdownChoice) => {\n                            this.props.availment.provider = value;\n                            this.props.refreshAvailmentState();\n                        }} />\n                </div>\n                <div className='sub-section'>\n                    <div className='header-3'>LIST OF AVAILMENTS</div>\n                    <div className='text'>\n                        Add a diagnosis first then add procedures per diagnosis after\n                    </div>\n                    <div className='sub-section'>\n                        <CustomTable\n                            rows={this.props.availment.diagnoses}\n                            renderHeader={() => this.renderTableHeader()}\n                            renderRow={(rowData: any, index: number) => \n                                this.renderTableRow(rowData, index)} />\n                    </div>\n                    {this.props.createTicketAttemp && this.props.availment.diagnoses.length === 0 ? (\n                        <div className='sub-section' style={{color: '#E53935'}}>\n                            No diagnosis. Need atleast one diagnosis.\n                        </div> \n                    ) : (null)}\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            <TableCell style={{minWidth: '300px', maxWidth: '300px'}}>\n                <DetailedDropdown \n                    choices={this.getFilteredICD10()}\n                    value={this.state.icd10Code}\n                    onChange={(value: DropdownChoice) => {\n                        this.setState({icd10Code: value});\n                    }} />\n            </TableCell>\n            <TableCell style={{minWidth: '150px', maxWidth: '150px'}}>\n                <Dropdown \n                    choices={this.props.doctors}\n                    value={this.state.doctor}\n                    onChange={(value: DropdownChoice) => {\n                        this.setState({doctor: value});\n                    }} />\n            </TableCell>\n            <TableCell style={{textAlign: 'center'}}>\n                <TextButton \n                    icon={faPlus} \n                    label=\"Add diagnosis\"\n                    onClick={() => {\n                        if (this.state.doctor.value !== '' && this.state.icd10Code.value !== '') {\n                            this.pushBlankDiagnosis(this.state.icd10Code, this.state.doctor);\n                            this.props.refreshAvailmentState();\n                            this.setState({\n                                icd10Code: { value: '', label: '' },\n                                doctor: { value: '', label: '' }\n                            });\n                        }\n                    }} />\n            </TableCell>\n            </>\n        );\n    }\n\n    renderTableRow(diagnosis: DiagnosisData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        const editIcon = { display: 'inline-block', paddingRight: '0.5rem' };\n        const deleteIcon = { display: 'inline-block' };\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell colSpan={3}>\n                    <Grid container spacing={1}>\n                        {this.state.itemToEditIndex === index ? (\n                            <>\n                            <Grid item xs={6}>\n                                <DetailedDropdown \n                                    choices={this.getFilteredICD10()}\n                                    value={this.state.icd10CodeToEdit}\n                                    onChange={(value: DropdownChoice) => {\n                                        this.setState({icd10CodeToEdit: value});\n                                    }} />\n                            </Grid>\n                            <Grid item xs={5}>\n                                <Dropdown \n                                    choices={this.props.doctors}\n                                    value={this.state.doctorToEdit}\n                                    onChange={(value: DropdownChoice) => {\n                                        this.setState({doctorToEdit: value});\n                                    }} />\n                            </Grid>\n                            <Grid item xs={1} style={{lineHeight: '2rem'}}>\n                                <div style={editIcon}>\n                                    <IconButton\n                                        icon={faCheckCircle}\n                                        onClick={() => {\n                                            this.props.availment.diagnoses[index].icd10Code = this.state.icd10CodeToEdit;\n                                            this.props.availment.diagnoses[index].doctors[0].name = this.state.doctorToEdit.label;\n                                            this.props.refreshAvailmentState();\n                                            this.setState({itemToEditIndex: -1});\n                                        }}/>\n                                </div>\n                                <div style={deleteIcon}>\n                                    <IconButton\n                                        icon={faTimesCircle}\n                                        onClick={() => {\n                                            this.setState({itemToEditIndex: -1});\n                                        }}/>\n                                </div>\n                            </Grid>\n                            </>\n                        ) : (\n                            <>\n                            <Grid item xs={6} className='header-2'>\n                                {diagnosis.icd10Code.value + ' - ' + diagnosis.icd10Code.label}\n                            </Grid>\n                            <Grid item xs={3} className='header-2'>\n                                {diagnosis.doctors[0].name}\n                            </Grid>\n                            <Grid item xs={2} className='header-2'>\n                                {GlobalFunction.formatNumber(this.getProcedureCosts(diagnosis.procedures), true) + \" PHP\"}\n                            </Grid>\n                            <Grid item xs={1}>\n                                {/* <div style={editIcon}> */}\n                                    <IconButton\n                                        icon={faPen}\n                                        onClick={() => {\n                                            this.setState({\n                                                itemToEditIndex: index,\n                                                icd10CodeToEdit: diagnosis.icd10Code,\n                                                doctorToEdit: {\n                                                    value: diagnosis.doctors[0].id,\n                                                    label: diagnosis.doctors[0].name\n                                                }\n                                            });\n                                        }}/>\n                                {/* </div>\n                                <div style={deleteIcon}> */}\n                                    <IconButton\n                                        icon={faMinusCircle}\n                                        onClick={() => {\n                                            this.props.availment.diagnoses.splice(index, 1);\n                                            this.props.refreshAvailmentState();\n                                        }}/>\n                                {/* </div> */}\n                            </Grid>\n                            </>\n                        )}\n                    </Grid>\n                    {diagnosis.procedures.map((procedure, procedureIndex) => {\n                        return this.renderProcedureDetails(procedure, index, procedureIndex);\n                    })}\n                </TableCell>\n            </TableRow>\n        );\n    }\n    \n    renderProcedureDetails(procedure: ProcedureData, diagnosisIndex: number, index: number): JSX.Element {\n        const stateProcedure = this.props.availment.diagnoses[diagnosisIndex].procedures[index];\n        const stateProcedures = this.props.availment.diagnoses[diagnosisIndex].procedures;\n        return (\n            <div style={{position: 'relative'}}>\n                <div style={{paddingTop: '0.5rem'}} />\n                <div className='line-border' />\n                <div style={{paddingTop: '0.5rem'}} />\n                <Grid container spacing={2}>\n                    <Grid item xs={8}>\n                        <DetailedDropdown \n                            placeholder='Procedure'\n                            choices={this.props.cptCodes}\n                            value={procedure.cptCode}\n                            onChange={(value: DropdownChoice) => {\n                                stateProcedure.cptCode = value;\n                                if (index === (stateProcedures.length - 1)) {\n                                    this.pushBlankProcedures(diagnosisIndex);\n                                }\n                                this.props.refreshAvailmentState();\n                            }} />\n                    </Grid>\n                    <Grid item xs={3}>\n                        <NumberField\n                            placeholder='Amount'\n                            value={procedure.amount}\n                            onChange={(value: number) => {\n                                stateProcedure.amount = value;\n                                this.props.refreshAvailmentState();\n                            }} />\n                    </Grid>\n                    <Grid item xs={1}>\n                        <CustomCheckbox\n                            placeholder='PHIC'\n                            value={procedure.isPHIC}\n                            onChange={(value: boolean) => {\n                                stateProcedure.isPHIC = value;\n                                this.props.refreshAvailmentState();\n                            }} />\n                    </Grid>\n                </Grid>\n                <div style={{position: 'absolute'}}>\n                    <TextButton \n                        label='Add procedure'\n                        icon={faPlus}\n                        onClick={() => {\n                            this.pushBlankProcedures(diagnosisIndex);\n                            this.props.refreshAvailmentState();\n                        }}/>\n                </div>\n                <div style={{paddingTop: '1rem'}} />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport Dropzone from 'react-dropzone';\nimport './component-style.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons';\n\ninterface IProps {\n    placeholder?: string;\n    accept?: string;\n    onDrop: (files: File[]) => void;\n}\n\nexport class CustomDropzone extends React.Component<IProps> {\n\n    shouldComponentUpdate(props: IProps, _state: any) {\n        return (this.props.placeholder !== props.placeholder);\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='custom-uploader'>\n                {this.props.placeholder ? (\n                    <div className='text'>{this.props.placeholder}</div>\n                ) : (null)}\n                <div className='upload-box'>\n                    <Dropzone\n                        multiple={false}\n                        onDrop={acceptedFiles => this.props.onDrop(acceptedFiles)}\n                        accept={this.props.accept}\n                        // accept=\"application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n                        >\n                        {({getRootProps, getInputProps}) => (\n                            <section>\n                                <div className='upload-file' {...getRootProps()}>\n                                    <input {...getInputProps()} />\n                                    <FontAwesomeIcon className='fa-1.5x' icon={faFileUpload} />\n                                    <div>Drag or drop file to upload a <br />supporting document</div>\n                                </div>\n                            </section>\n                        )}\n                    </Dropzone>\n                </div>\n                \n\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { TextareaAutosize } from '@material-ui/core';\nimport './component-style.scss';\n\ninterface IProps {\n    placeholder?: string;\n    value: string;\n    defaultRows?: number;\n    onChange: (value: string) => void;\n}\n\nexport class InputArea extends React.Component<IProps> {\n\n    shouldComponentUpdate(props: IProps, _state: any) {\n        return (\n            (this.props.placeholder !== props.placeholder) ||\n            (this.props.value !== props.value) ||\n            (this.props.defaultRows !== props.defaultRows)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='input-field-container'>\n                {this.props.placeholder ? (\n                    <div className='text'>{this.props.placeholder}</div>\n                ) : null}\n                <TextareaAutosize \n                    className='text-field'\n                    rows={this.props.defaultRows ? this.props.defaultRows : 4}\n                    value={this.props.value}\n                    onChange={(event: React.ChangeEvent<HTMLTextAreaElement>) => {\n                        this.props.onChange(event.target.value);\n                    }}\n                />\n            </div>\n        );\n    }\n}","\nimport * as React from 'react';\nimport './component-style.scss';\nimport { Chip } from '@material-ui/core';\n\ninterface IProps {\n    label: string;\n    value: string;\n    onDelete: (value: string) => void;\n}\n\nexport class CustomChip extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <Chip \n                className='chip'\n                label={this.props.label} \n                onDelete={() => {this.props.onDelete(this.props.value)}} />\n        );\n    }\n}","import * as React from 'react';\nimport {  Grid } from '@material-ui/core';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\nimport { TicketData, DropdownChoice, MemberData, ClientData } from 'Pages/CustomerCarePage/Models';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { CustomDropzone } from 'Pages/CustomerCarePage/Components/CustomDropzone';\nimport { InputArea } from 'Pages/CustomerCarePage/Components/InputArea';\nimport { CustomChip } from 'Pages/CustomerCarePage/Components/CustomChip';\n\ninterface IProps {\n    member?: MemberData;\n    client?: ClientData;\n    ticket: TicketData;\n    facilities: DropdownChoice[];\n    agents: DropdownChoice[];\n    createTicketAttemp: boolean;\n    refreshTicketState: () => void;\n}\nexport class TicketInfoSection extends React.Component<IProps> {\n\n    ticketChannels: DropdownChoice[];\n    ticketSources: DropdownChoice[];\n    ticketTypes: DropdownChoice[];\n    specificTypes: DropdownChoice[];\n    urgencies: DropdownChoice[];\n    agents: DropdownChoice[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.ticketChannels = [\n            { value: '1', label: 'Call' },\n            { value: '2', label: 'SMS' },\n            { value: '3', label: 'Text' },\n            { value: '4', label: 'Email' },\n            { value: '5', label: 'Walk-in' }\n        ];\n\n        this.ticketSources = [\n            { value: '1', label: 'Member' },\n            { value: '2', label: 'Corporate Client' },\n            { value: '3', label: 'Broker' },\n            { value: '4', label: 'Agent' },\n            { value: '5', label: 'Clinic/Hospital' }\n        ];\n\n        this.ticketTypes = [\n            { value: '1', label: 'Availment' },\n            { value: '2', label: 'Inquiry' }\n        ];\n\n        this.specificTypes = [\n            { value: '1', label: 'Outpatient Procedure' },\n            { value: '2', label: 'Inpatient' },\n            { value: '3', label: 'Emergency Room' },\n            { value: '4', label: 'Consultation' }\n        ];\n\n        this.urgencies = [\n            { value: '1', label: 'Low' },\n            { value: '2', label: 'Medium' },\n            { value: '3', label: 'High' }\n        ];\n\n        this.agents = [\n            { value: '', label: 'Me' }\n        ]\n    }\n\n    componentDidMount() {\n        this.agents[0].value = localStorage['user_id'];\n    }\n\n    render(): JSX.Element {\n        console.log(\"TICK INFO\");\n        const ticket = this.props.ticket;\n\n        return (\n            <div className='ticket-info'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='sub-section'>\n                    <div className='header-2'>TICKET INFORMATION</div>\n                    <Grid container spacing={1}>\n                        <Grid item xs={5}>\n                            <Dropdown \n                                placeholder='Received via'\n                                choices={this.ticketChannels}\n                                value={{ value: '', label: ticket.ticketChannel }}\n                                error={\n                                    this.props.createTicketAttemp && \n                                    ticket.ticketChannel === ''}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.ticket.ticketChannel = value.label;\n                                    this.props.refreshTicketState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={7}>\n                            <InputField \n                                placeholder='Transaction No.' \n                                value={ticket.transactionNo}\n                                disabled={true}\n                                onChange={(value: string) => {\n                                    this.props.ticket.transactionNo = value;\n                                    this.props.refreshTicketState();\n                                }} />\n                        </Grid>\n                    </Grid>\n                    <Dropdown \n                        placeholder='Received From'\n                        choices={this.ticketSources}\n                        value={{ value: '', label: ticket.ticketSource}}\n                        error={\n                            this.props.createTicketAttemp && \n                            ticket.ticketSource === ''}\n                        onChange={(value: DropdownChoice) => {\n                            this.props.ticket.ticketSource = value.label;\n                            this.props.refreshTicketState();\n                        }} />\n                    <div>\n                        {ticket.ticketSource === 'Member' ? (\n                            <div>\n                                <InputField \n                                    placeholder='Member Name'\n                                    value={ticket.memberName}\n                                    error={\n                                        this.props.createTicketAttemp && \n                                        ticket.memberName === ''}\n                                    onChange={(value: string) => {\n                                        this.props.ticket.memberName = value;\n                                        this.props.refreshTicketState();\n                                    }} />\n                            </div>\n\n                        ) : ticket.ticketSource === 'Corporate Client' ? (\n                            <div>\n                                <InputField \n                                    placeholder='Corporate Client Name'\n                                    value={ticket.clientName}\n                                    error={\n                                        this.props.createTicketAttemp && \n                                        ticket.clientName === ''}\n                                    onChange={(value: string) => {\n                                        this.props.ticket.clientName = value;\n                                        this.props.refreshTicketState();\n                                    }} />\n                            </div>\n                        \n                        ) : ticket.ticketSource === 'Broker' ? (\n                            <div>\n                                <InputField \n                                    placeholder='Broker Name'\n                                    value={ticket.brokerName}\n                                    error={\n                                        this.props.createTicketAttemp && \n                                        ticket.brokerName.trim() === ''}    \n                                    onChange={(value: string) => {\n                                        this.props.ticket.brokerName = value;\n                                        this.props.refreshTicketState();\n                                    }} />\n                            </div>\n\n                        ) : ticket.ticketSource === 'Clinic/Hospital' ? (\n                            <div>\n                                <Dropdown \n                                    placeholder='Name of Hospital'\n                                    choices={this.props.facilities}\n                                    value={ticket.facility}\n                                    error={\n                                        this.props.createTicketAttemp && \n                                        ticket.facility.value === ''}\n                                    onChange={(value: DropdownChoice) => {\n                                        this.props.ticket.facility = value;\n                                        this.props.refreshTicketState();\n                                    }} />\n                                <InputField \n                                    placeholder='Department/Section' \n                                    value={ticket.department}\n                                    error={\n                                        this.props.createTicketAttemp && \n                                        ticket.department.trim() === ''}\n                                    onChange={(value: string) => {\n                                        this.props.ticket.department = value;\n                                        this.props.refreshTicketState();\n                                    }} />\n                            </div>\n                        ) : null}\n                    </div>\n                    <InputField \n                        placeholder='Name of Caller' \n                        value={ticket.callerName}\n                        error={\n                            this.props.createTicketAttemp && \n                            ticket.callerName.trim() === ''}\n                        onChange={(value: string) => {\n                            this.props.ticket.callerName = value;\n                            this.props.refreshTicketState();\n                        }} />\n                    <InputField \n                        placeholder='Contact No.' \n                        value={ticket.contactNo}\n                        error={\n                            this.props.createTicketAttemp && \n                            ticket.contactNo.trim() === ''}\n                        onChange={(value: string) => {\n                            if (value.match(/^[0-9\\b]+$/) || value.length == 0) {\n                                this.props.ticket.contactNo = value; \n                                this.props.refreshTicketState();\n                            }\n                        }} />\n                </div>\n                \n                <div className='sub-section'>\n                    <div className='header-2'>TICKET CATEGORY</div>\n                    <Grid container spacing={1}>\n                        <Grid item xs={5}>\n                            <Dropdown \n                                placeholder='Ticket Type'\n                                choices={this.ticketTypes}\n                                value={{ value: '', label: ticket.ticketType}}\n                                error={\n                                    this.props.createTicketAttemp && \n                                    ticket.ticketType === ''}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.ticket.ticketType = value.label;\n                                    if (value.label === 'Inquiry') {\n                                        this.props.ticket.specificType = 'Not Applicable';\n                                    } else {\n                                        this.props.ticket.specificType = '';\n                                    }\n                                    this.props.refreshTicketState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={7}>\n                            <Dropdown \n                                placeholder='Specific Type'\n                                disabled={ticket.ticketType !== 'Availment'}\n                                choices={this.specificTypes}\n                                value={{ value: '', label: ticket.specificType}}\n                                error={\n                                    this.props.createTicketAttemp && \n                                    ticket.specificType === '' && \n                                    ticket.ticketType !== 'Inquiry'}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.ticket.specificType = value.label;\n                                    this.props.refreshTicketState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={5}>\n                            <Dropdown \n                                placeholder='Urgency'\n                                choices={this.urgencies}\n                                value={{ value: '', label: ticket.urgency}}\n                                error={\n                                    this.props.createTicketAttemp && \n                                    ticket.urgency === ''}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.ticket.urgency = value.label;\n                                    this.props.refreshTicketState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={7}>\n                            <Dropdown \n                                placeholder='Assign To'\n                                choices={this.agents} /* Use this.props.agents later */\n                                value={{ value: ticket.agent.id, label: ticket.agent.name}}\n                                error={\n                                    this.props.createTicketAttemp && \n                                    ticket.agent.id === ''}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.ticket.agent = {\n                                        id: value.value,\n                                        name: value.label\n                                    };\n                                    this.props.refreshTicketState();\n                                }} />\n                        </Grid>\n                    </Grid>\n                </div>\n\n                <div className='sub-section'>\n                    <div className='header-2'>ADDITIONAL NOTES AND FILES</div>\n                    <InputArea\n                        placeholder='Additional Notes'\n                        value={ticket.additionalNotes}\n                        onChange={(value: string) => {\n                            this.props.ticket.additionalNotes = value;\n                            this.props.refreshTicketState();\n                        }} />\n                    <CustomDropzone\n                        accept='image/*'\n                        onDrop={(files: File[]) => {\n                            ticket.additionalFiles.push(files[0]);\n                            this.props.refreshTicketState();\n                        }} />\n                        {ticket.additionalFiles.map((file, index) => {\n                            return (\n                                <CustomChip\n                                    label={file.name}\n                                    value={index.toString()}\n                                    onDelete={(value: string) => {\n                                        ticket.additionalFiles.splice(parseInt(value), 1);\n                                        this.props.refreshTicketState();\n                                    }} />\n                            );\n                        })}\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport './component-style.scss';\nimport ChipInput from 'material-ui-chip-input';\n\ninterface IProps {\n    placeholder: string;\n    value: string[];\n    onAdd: (value: string) => void;\n    onDelete: (index: number) => void;\n}\n\nexport class InputChip extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        \n        return (\n            <div className='input-field-container'>\n                <div className='text'>{this.props.placeholder}</div>\n                <ChipInput \n                    className='text-field'\n                    value={this.props.value} \n                    fullWidthInput={false}\n                    onAdd={(chip: any) => this.props.onAdd(chip)}\n                    onDelete={(_chip: any, index: number) => this.props.onDelete(index)} />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport {  Grid, TableCell, TableRow } from '@material-ui/core';\nimport { faMinusCircle, faPlus, faPen } from '@fortawesome/free-solid-svg-icons';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { DropdownChoice, InquiryData } from 'Pages/CustomerCarePage/Models';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { CustomDropzone } from 'Pages/CustomerCarePage/Components/CustomDropzone';\nimport { CustomChip } from 'Pages/CustomerCarePage/Components/CustomChip';\nimport { InputChip } from 'Pages/CustomerCarePage/Components/InputChip';\n// import { ComplexTable } from 'Pages/CustomerCarePage/Components/ComplexTable';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\n\ninterface IProps {\n    inquiries: InquiryData[];\n    refreshInquiryState: () => void;\n}\n\ninterface IStates {\n    inquiry: DropdownChoice;\n}\n\nexport class InquirySection extends React.PureComponent<IProps, IStates> {\n\n    inquiries: DropdownChoice[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            inquiry: { value: '', label: '' }\n        };\n\n        this.inquiries = [\n            { value: '1', label: 'Member Status / Card Inquiry' },\n            { value: '2', label: 'Member Network Access Inquiry' },\n            { value: '3', label: 'Member Benefit Inquiry - General [Outpatient]' },\n            { value: '4', label: 'Member Benefit Inquiry - General [Inpatient]' },\n            { value: '5', label: 'Member Benefit Inquiry - General [Emergency]' },\n            { value: '6', label: 'Member Benefit Inquiry - General [Dental]' },\n            { value: '7', label: 'Member Benefit Inquiry - General [APE / ECU]' },\n            { value: '8', label: 'Member Benefit Inquiry - General [Riders]' },\n            { value: '9', label: 'Member Coverage Inquiry - Specific Benefit' },\n            { value: '10', label: 'Member Availment Inquiry - CanAvail' },\n            { value: '11', label: 'Member Eligibility Inquiry' },\n            { value: '12', label: 'Reimbursement Status Inquiry' },\n            { value: '13', label: 'General Affiliated Network Inquiry - Facility' },\n            { value: '14', label: 'General Affiliated Network Inquiry - Doctor' },\n            { value: '15', label: 'General Affiliated Network Inquiry - Dentist' },\n            { value: '16', label: 'Procedural Inquiry - Outpatient' },\n            { value: '17', label: 'Procedural Inquiry - Inpatient' },\n            { value: '18', label: 'Procedural Inquiry - Emergency' },\n            { value: '19', label: 'Procedural Inquiry - Dental' },\n            { value: '20', label: 'Procedural Inquiry - APE / ECU' },\n            { value: '21', label: 'Procedural Inquiry - Member Enrolment / Cancellation / Update' },\n            { value: '22', label: 'Procedural Inquiry - Reimbursement' },\n            { value: '23', label: 'Procedural Inquiry - Others' }\n        ];\n    }\n\n    onAddInquiry() {\n        if (this.state.inquiry.value !== '') {\n            this.props.inquiries.push({\n                inquiry: this.state.inquiry,\n                detail: '',\n                specificDetail: [],\n                answer: '',\n                remarks: '',\n                relatedTickets: [],\n                supportDocs: []\n            });\n            \n            this.props.refreshInquiryState();\n            this.setState({inquiry: { value: '', label: '' }});\n        }\n    }\n\n    getFilteredInquiries(): DropdownChoice[] {\n        let filteredInquiries: DropdownChoice[] = [];\n        for (var i = 0; i < this.inquiries.length; i++) {\n            let isSame = false;\n            for (var j = 0; j < this.props.inquiries.length; j++) {\n                isSame = (\n                    this.props.inquiries[j].inquiry.value === \n                    this.inquiries[i].value ? true : isSame);\n            }\n            if (!isSame) {\n                filteredInquiries = filteredInquiries.concat(this.inquiries[i]);\n            }\n        }\n        return filteredInquiries;\n    }\n    \n    onRemoveInquiry(index: number) {\n        this.props.inquiries.splice(index, 1);\n        this.props.refreshInquiryState();\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='availment-section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='sub-section'>\n                    <div className='header-2'>INQUIRY</div>\n                    <div className='text'>\n                        Add an inquiry type and then add the question and its details after\n                    </div>\n                    <div className='sub-section'>\n                        <CustomTable \n                            rows={this.props.inquiries}\n                            renderHeader={() => this.renderTableHeader()}\n                            renderRow={(rowData: any, index: number) => \n                                this.renderTableRow(rowData, index)} />\n                    </div>\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            <TableCell style={{minWidth: '400px', maxWidth: '400px'}}>\n                <Dropdown \n                    choices={this.getFilteredInquiries()}\n                    value={this.state.inquiry}\n                    onChange={(value: DropdownChoice) => {\n                        this.setState({inquiry: value});\n                    }} />\n            </TableCell>\n            <TableCell style={{minWidth: '125px', maxWidth: '125px', textAlign: 'center'}}>\n                <TextButton \n                    icon={faPlus} \n                    label=\"Add inquiry\"\n                    onClick={() => {\n                        this.onAddInquiry();\n                    }} />\n            </TableCell>\n            </>\n        );\n    }\n\n    renderTableRow(inquiry: InquiryData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell colSpan={2}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={10} className='header-2'>\n                            {inquiry.inquiry.label}\n                        </Grid>\n                        <Grid item xs={2} style={{textAlign: 'right'}}>\n                            <IconButton\n                                icon={faPen}\n                                onClick={() => {\n                                    this.onRemoveInquiry(index);\n                                }}/>\n                            <IconButton\n                                icon={faMinusCircle}\n                                onClick={() => {\n                                    this.onRemoveInquiry(index);\n                                }}/>\n                        </Grid>\n                    </Grid>\n                    <div style={{position: 'relative'}}>\n                        <div style={{paddingTop: '0.5rem'}} />\n                        <div className='line-border' />\n                        <div style={{paddingTop: '0.5rem'}} />\n                        <Grid container>\n                            <Grid item xs={1}/>\n                            <Grid item xs={11}>\n                                <div style={{margin: '8px 8px 1.5rem 8px'}}>\n                                    <InputField \n                                        placeholder='Details of inquiry (Question)'\n                                        value={inquiry.detail}\n                                        onChange={(value: string) => {\n                                            inquiry.detail = value;\n                                            this.props.refreshInquiryState();\n                                        }} />\n                                        <InputChip \n                                            placeholder='Specific Details (Type benefit/doctor/facility to describe inquiry, press enter to add)'\n                                            value={inquiry.specificDetail}\n                                            onAdd={(value: string) => {\n                                                inquiry.specificDetail.push(value);\n                                                this.props.refreshInquiryState();\n                                            }}\n                                            onDelete={(index: number) => {\n                                                inquiry.specificDetail.splice(index, 1);\n                                                this.props.refreshInquiryState();\n                                            }} />\n                                    <InputField \n                                        placeholder='Answer'\n                                        value={inquiry.answer}\n                                        onChange={(value: string) => {\n                                            inquiry.answer = value;\n                                            this.props.refreshInquiryState();\n                                        }} />\n                                    <InputField \n                                        placeholder='Remarks (Optional)'\n                                        value={inquiry.remarks}\n                                        onChange={(value: string) => {\n                                            inquiry.remarks = value;\n                                            this.props.refreshInquiryState();\n                                        }} />\n                                    <InputChip \n                                            placeholder='Related Tickets (Optional, press enter to add)'\n                                            value={inquiry.relatedTickets}\n                                            onAdd={(value: string) => {\n                                                inquiry.relatedTickets.push(value);\n                                                this.props.refreshInquiryState();\n                                            }}\n                                            onDelete={(index: number) => {\n                                                inquiry.relatedTickets.splice(index, 1);\n                                                this.props.refreshInquiryState();\n                                            }} />\n                                    <Grid container spacing={2}>\n                                        <Grid item xs={7}>\n                                            <CustomDropzone \n                                                accept='image/*'\n                                                onDrop={(files: File[]) => {\n                                                    inquiry.supportDocs.push(files[0]);\n                                                    this.props.refreshInquiryState();\n                                                }}/>\n                                        </Grid>\n                                        <Grid item xs={5}>\n                                            {inquiry.supportDocs.map((doc, index) => {\n                                                return (\n                                                    <CustomChip\n                                                        label={doc.name}\n                                                        value={index.toString()}\n                                                        onDelete={(value: string) => {\n                                                            inquiry.supportDocs.splice(parseInt(value), 1);\n                                                            this.props.refreshInquiryState();\n                                                        }} />\n                                                );\n                                            })}\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                                \n                            </Grid>\n                        </Grid>\n                    </div>\n                </TableCell>\n            </TableRow>\n        );\n    }\n}","import * as React from 'react';\nimport { ConsultationDetails, DropdownChoice } from 'Pages/CustomerCarePage/Models';\nimport { DetailedDropdown } from 'Pages/CustomerCarePage/Components/DetailedDropdown';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\n\ninterface IProps {\n    consultation: ConsultationDetails;\n    facilities: DropdownChoice[];\n    doctors: DropdownChoice[];\n    icd10Codes: DropdownChoice[];\n    createTicketAttemp: boolean;\n    refreshConsultationState: () => void;\n}\n\nexport class ConsultationSection extends React.Component<IProps> {\n\n    constructor(props: IProps) {\n        super(props);\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='availment-section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='sub-section'>\n                    <div className='header-2'>AVAILMENT DETAILS</div>\n                    <DetailedDropdown \n                        choices={this.props.facilities}\n                        placeholder='Provider'\n                        value={this.props.consultation.provider}\n                        error={\n                            this.props.createTicketAttemp && \n                            this.props.consultation.provider.value === ''}\n                        onChange={(value: DropdownChoice) => {\n                            this.props.consultation.provider = value;\n                            this.props.refreshConsultationState();\n                        }} />\n\n                    <DetailedDropdown \n                        choices={this.props.icd10Codes}\n                        placeholder='Diagnosis'\n                        value={this.props.consultation.diagnosis}\n                        error={\n                            this.props.createTicketAttemp && \n                            this.props.consultation.diagnosis.value === ''}\n                        onChange={(value: DropdownChoice) => {\n                            this.props.consultation.diagnosis = value;\n                            this.props.refreshConsultationState();\n                        }} />\n                    <Dropdown \n                        choices={this.props.doctors}\n                        placeholder='Doctor'\n                        value={this.props.consultation.doctor}\n                        error={\n                            this.props.createTicketAttemp && \n                            this.props.consultation.doctor.value === ''}\n                        onChange={(value: DropdownChoice) => {\n                            this.props.consultation.doctor = value;\n                            this.props.refreshConsultationState();\n                        }} />\n                    <InputField\n                        placeholder='Notes'\n                        value={this.props.consultation.notes}\n                        onChange={(value: string) => {\n                            this.props.consultation.notes = value;\n                            this.props.refreshConsultationState();\n                        }} />\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport {  Grid, TableCell, TableRow } from '@material-ui/core';\nimport { faMinusCircle, faPlus, faPen, faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { DetailedDropdown } from 'Pages/CustomerCarePage/Components/DetailedDropdown';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { ProcedureData, DropdownChoice, AvailmentDetails, DiagnosisData } from 'Pages/CustomerCarePage/Models';\nimport { NumberField } from 'Pages/CustomerCarePage/Components/NumberField';\nimport { CustomCheckbox } from 'Pages/CustomerCarePage/Components/CustomCheckbox';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\n\ninterface IProps {\n    availment: AvailmentDetails;\n    facilities: DropdownChoice[];\n    doctors: DropdownChoice[];\n    icd10Codes: DropdownChoice[];\n    cptCodes: DropdownChoice[];\n    createTicketAttemp: boolean;\n    refreshAvailmentState: () => void;\n}\n\ninterface IStates {\n    icd10Code: DropdownChoice;\n    doctor: DropdownChoice;\n    chiefComplaint: string;\n    history: string;\n\n    itemToEditIndex: number;\n    icd10CodeToEdit: DropdownChoice;\n    doctorToEdit: DropdownChoice;\n}\n\nexport class EmergencyRoomSection extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            icd10Code: { value: '', label: '' },\n            doctor: { value: '', label: '' },\n            chiefComplaint: '',\n            history: '',\n\n            itemToEditIndex: -1,\n            icd10CodeToEdit: { value: '', label: '' },\n            doctorToEdit: { value: '', label: '' }\n        };\n    }\n\n    getFilteredICD10(): DropdownChoice[] {\n        let filteredICD10: DropdownChoice[] = [];\n        for (var i = 0; i < this.props.icd10Codes.length; i++) {\n            let isSame = false;\n            for (var j = 0; j < this.props.availment.diagnoses.length; j++) {\n                isSame = (\n                    this.props.availment.diagnoses[j].icd10Code.value === \n                    this.props.icd10Codes[i].value ? true : isSame);\n            }\n            if (!isSame) {\n                filteredICD10 = filteredICD10.concat(this.props.icd10Codes[i]);\n            }\n        }\n        return filteredICD10;\n    }\n\n    getProcedureCosts(procedures: ProcedureData[]) {\n        let totalCost = 0;\n        procedures.map(procedure => {\n            totalCost += procedure.amount;\n        });\n        return totalCost;\n    }\n    \n    pushBlankDiagnosis(icd10Code: DropdownChoice, doctor: DropdownChoice) {\n        this.props.availment.diagnoses.push({\n            icd10Code: icd10Code,\n            remarks: '',\n            isPrimary: false,\n            isFinal: false,\n            doctors: [{\n                id: '',\n                name: doctor.label,\n                specialization: '',\n                fee: 0,\n                noOfVisits: 0,\n                remarks: '',\n                type: 'Admitting'\n            }],\n            procedures: [{\n                cptCode: { value: '', label: '' },\n                isPHIC: false,\n                amount: 0,\n                notes: '',\n                assessmentType: 'Pending',\n                assessmentRemarks: '',\n                approvedAmount: 0,\n                doctor: '',\n                dateAdded: new Date()\n            }],\n            assessmentType: 'Pending',\n            assessmentRemarks: '',\n            approvedAmount: 0\n        });\n    }\n\n    pushBlankProcedures(diagnosisIndex: number) {\n        this.props.availment.diagnoses[diagnosisIndex].procedures.push({\n            cptCode: { value: '', label: '' },\n            isPHIC: false,\n            amount: 0,\n            notes: '',\n            assessmentType: 'Pending',\n            assessmentRemarks: '',\n            approvedAmount: 0,\n            doctor: '',\n            dateAdded: new Date()\n        });\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='availment-section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='sub-section'>\n                    <div className='header-2'>AVAILMENT DETAILS</div>\n                    <DetailedDropdown \n                        choices={this.props.facilities}\n                        placeholder='Provider'\n                        value={this.props.availment.provider}\n                        error={\n                            this.props.createTicketAttemp && \n                            this.props.availment.provider.value === ''}\n                        onChange={(value: DropdownChoice) => {\n                            this.props.availment.provider = value;\n                            this.props.refreshAvailmentState();\n                        }} />\n                    <InputField\n                        placeholder='Chief Complaint'\n                        value={this.state.chiefComplaint}\n                        onChange={(value: string) => {\n                            this.setState({chiefComplaint: value});\n                        }} />\n                    <InputField\n                        placeholder='History'\n                        value={this.state.history}\n                        onChange={(value: string) => {\n                            this.setState({history: value});\n                        }} />\n                </div>\n                <div className='sub-section'>\n                    <div className='header-3'>LIST OF AVAILMENTS</div>\n                    <div className='text'>\n                        Add a diagnosis first then add procedures per diagnosis after\n                    </div>\n                    <div className='sub-section'>\n                        <CustomTable\n                            rows={this.props.availment.diagnoses}\n                            renderHeader={() => this.renderTableHeader()}\n                            renderRow={(rowData: any, index: number) => \n                                this.renderTableRow(rowData, index)} />\n                    </div>\n                    {this.props.createTicketAttemp && this.props.availment.diagnoses.length === 0 ? (\n                        <div className='sub-section' style={{color: '#E53935'}}>\n                            No diagnosis. Need atleast one diagnosis.\n                        </div> \n                    ) : (null)}\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            <TableCell style={{minWidth: '300px', maxWidth: '300px'}}>\n                <DetailedDropdown \n                    choices={this.getFilteredICD10()}\n                    value={this.state.icd10Code}\n                    onChange={(value: DropdownChoice) => {\n                        this.setState({icd10Code: value});\n                    }} />\n            </TableCell>\n            <TableCell style={{minWidth: '150px', maxWidth: '150px'}}>\n                <Dropdown \n                    choices={this.props.doctors}\n                    value={this.state.doctor}\n                    onChange={(value: DropdownChoice) => {\n                        this.setState({doctor: value});\n                    }} />\n            </TableCell>\n            <TableCell style={{textAlign: 'center'}}>\n                <TextButton \n                    icon={faPlus} \n                    label=\"Add diagnosis\"\n                    onClick={() => {\n                        if (this.state.doctor.value !== '' && this.state.icd10Code.value !== '') {\n                            this.pushBlankDiagnosis(this.state.icd10Code, this.state.doctor);\n                            this.props.refreshAvailmentState();\n                            this.setState({\n                                icd10Code: { value: '', label: '' },\n                                doctor: { value: '', label: '' }\n                            });\n                        }\n                    }} />\n            </TableCell>\n            </>\n        );\n    }\n\n    renderTableRow(diagnosis: DiagnosisData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        const editIcon = { display: 'inline-block', paddingRight: '0.5rem' };\n        const deleteIcon = { display: 'inline-block' };\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell colSpan={3}>\n                    <Grid container spacing={1}>\n                        {this.state.itemToEditIndex === index ? (\n                            <>\n                            <Grid item xs={6}>\n                                <DetailedDropdown \n                                    choices={this.getFilteredICD10()}\n                                    value={this.state.icd10CodeToEdit}\n                                    onChange={(value: DropdownChoice) => {\n                                        this.setState({icd10CodeToEdit: value});\n                                    }} />\n                            </Grid>\n                            <Grid item xs={5}>\n                                <Dropdown \n                                    choices={this.props.doctors}\n                                    value={this.state.doctorToEdit}\n                                    onChange={(value: DropdownChoice) => {\n                                        this.setState({doctorToEdit: value});\n                                    }} />\n                            </Grid>\n                            <Grid item xs={1} style={{lineHeight: '2rem'}}>\n                                <div style={editIcon}>\n                                    <IconButton\n                                        icon={faCheckCircle}\n                                        onClick={() => {\n                                            this.props.availment.diagnoses[index].icd10Code = this.state.icd10CodeToEdit;\n                                            this.props.availment.diagnoses[index].doctors[0].name = this.state.doctorToEdit.label;\n                                            this.props.refreshAvailmentState();\n                                            this.setState({itemToEditIndex: -1});\n                                        }}/>\n                                </div>\n                                <div style={deleteIcon}>\n                                    <IconButton\n                                        icon={faTimesCircle}\n                                        onClick={() => {\n                                            this.setState({itemToEditIndex: -1});\n                                        }}/>\n                                </div>\n                            </Grid>\n                            </>\n                        ) : (\n                            <>\n                            <Grid item xs={6} className='header-2'>\n                                {diagnosis.icd10Code.value + ' - ' + diagnosis.icd10Code.label}\n                            </Grid>\n                            <Grid item xs={3} className='header-2'>\n                                {diagnosis.doctors[0].name}\n                            </Grid>\n                            <Grid item xs={2} className='header-2'>\n                                {GlobalFunction.formatNumber(this.getProcedureCosts(diagnosis.procedures), true) + \" PHP\"}\n                            </Grid>\n                            <Grid item xs={1}>\n                                <div style={editIcon}>\n                                    <IconButton\n                                        icon={faPen}\n                                        onClick={() => {\n                                            this.setState({\n                                                itemToEditIndex: index,\n                                                icd10CodeToEdit: diagnosis.icd10Code,\n                                                doctorToEdit: {\n                                                    value: diagnosis.doctors[0].id,\n                                                    label: diagnosis.doctors[0].name\n                                                }\n                                            });\n                                        }}/>\n                                </div>\n                                <div style={deleteIcon}>\n                                    <IconButton\n                                        icon={faMinusCircle}\n                                        onClick={() => {\n                                            this.props.availment.diagnoses.splice(index, 1);\n                                            this.props.refreshAvailmentState();\n                                        }}/>\n                                </div>\n                            </Grid>\n                            </>\n                        )}\n                    </Grid>\n                    {diagnosis.procedures.map((procedure, procedureIndex) => {\n                        return this.renderProcedureDetails(procedure, index, procedureIndex);\n                    })}\n                </TableCell>\n            </TableRow>\n        );\n    }\n    \n    renderProcedureDetails(procedure: ProcedureData, diagnosisIndex: number, index: number): JSX.Element {\n        const stateProcedure = this.props.availment.diagnoses[diagnosisIndex].procedures[index];\n        const stateProcedures = this.props.availment.diagnoses[diagnosisIndex].procedures;\n        return (\n            <div style={{position: 'relative'}}>\n                <div style={{paddingTop: '0.5rem'}} />\n                <div className='line-border' />\n                <div style={{paddingTop: '0.5rem'}} />\n                <Grid container spacing={2}>\n                    <Grid item xs={8}>\n                        <DetailedDropdown \n                            placeholder='Procedure'\n                            choices={this.props.cptCodes}\n                            value={procedure.cptCode}\n                            onChange={(value: DropdownChoice) => {\n                                stateProcedure.cptCode = value;\n                                if (index === (stateProcedures.length - 1)) {\n                                    this.pushBlankProcedures(diagnosisIndex);\n                                }\n                                this.props.refreshAvailmentState();\n                            }} />\n                    </Grid>\n                    <Grid item xs={3}>\n                        <NumberField\n                            placeholder='Amount'\n                            value={procedure.amount}\n                            onChange={(value: number) => {\n                                stateProcedure.amount = value;\n                                this.props.refreshAvailmentState();\n                            }} />\n                    </Grid>\n                    <Grid item xs={1}>\n                        <CustomCheckbox\n                            placeholder='PHIC'\n                            value={procedure.isPHIC}\n                            onChange={(value: boolean) => {\n                                stateProcedure.isPHIC = value;\n                                this.props.refreshAvailmentState();\n                            }} />\n                    </Grid>\n                </Grid>\n                <div style={{position: 'absolute'}}>\n                    <TextButton \n                        label='Add procedure'\n                        icon={faPlus}\n                        onClick={() => {\n                            this.pushBlankProcedures(diagnosisIndex);\n                            this.props.refreshAvailmentState();\n                        }}/>\n                </div>\n                <div style={{paddingTop: '1rem'}} />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Button } from '@material-ui/core';\nimport { GlobalFunction } from './GlobalFunction';\n\ninterface IProps {\n    lastSave?: Date;\n    disableCloseTicket?: boolean;\n    disableFinalAssessment?: boolean;\n    disableAssign?: boolean;\n    disableEscalate?: boolean;\n\n    onSaveForNow?: () => void;\n    onSubmitTicket?: () => void;\n    onResolveTicket?: () => void;\n    onSummarizeAssessment?: () => void;\n    onGenerateApprovalCode?: () => void;\n\n    onAssign?: () => void;\n    onEscalate?: () => void;\n    onUpdateTicket?: () => void;\n    onFinalAssessment?: () => void;\n    onResolveAndCloseTicket?: () => void;\n    onCloseTicket?: () => void;\n}\n\nexport class TicketFooter extends React.Component<IProps> {\n\n    interval?: NodeJS.Timeout;\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.setState({ time: Date.now() }), 5000);\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='footer'>\n\n                {this.props.onSaveForNow ? (\n                    <Button \n                        className='button-transparent' \n                        variant='outlined'\n                        onClick={this.props.onSaveForNow}>\n                        <div style={{display: 'block'}}>\n                            <div className='text'>Save For Now</div>\n                            {this.props.lastSave ? (\n                                <div className='small-text'>\n                                    {`Auto-saved ${GlobalFunction.getTimeDeffirence(this.props.lastSave, new Date())} ago`}\n                                </div>\n                            ) : null}\n                        </div>\n                    </Button>\n                ) : null}\n\n                {this.props.onResolveTicket ? (\n                    <Button \n                        className='button'\n                        disabled={this.props.onResolveTicket === null}\n                        onClick={this.props.onResolveTicket}>\n                        Mark as Resolved\n                    </Button>\n                ) : null}\n                \n                {this.props.onSubmitTicket ? (\n                    <Button \n                        className='button'\n                        disabled={this.props.onSubmitTicket === null}\n                        onClick={this.props.onSubmitTicket}>\n                        Submit Ticket\n                    </Button>\n                ) : null}\n\n                {this.props.onAssign ? (\n                    <Button \n                        className='button'\n                        color='default'\n                        disabled={this.props.disableAssign}\n                        onClick={this.props.onAssign}>\n                        Assign\n                    </Button>\n                ) : null}\n\n                {this.props.onEscalate ? (\n                    <Button \n                        className='button-error'\n                        disabled={this.props.disableEscalate}\n                        onClick={this.props.onEscalate}>\n                        Escalate\n                    </Button>\n                ) : null}\n\n                {this.props.onUpdateTicket ? (\n                    <Button \n                        className='button'\n                        disabled={this.props.onUpdateTicket === null}\n                        onClick={this.props.onUpdateTicket}>\n                        Update Ticket\n                    </Button>\n                ) : null}\n\n                {this.props.onFinalAssessment ? (\n                    <Button \n                        className='button'\n                        disabled={this.props.disableFinalAssessment}\n                        onClick={this.props.onFinalAssessment}>\n                        Proceed with Final Assessment\n                    </Button>\n                ) : null}\n\n                {this.props.onSummarizeAssessment ? (\n                    <Button \n                        className='button'\n                        disabled={this.props.onSummarizeAssessment === null}\n                        onClick={this.props.onSummarizeAssessment}>\n                        Summarize Assessment\n                    </Button>\n                ) : null}\n\n                {this.props.onGenerateApprovalCode ? (\n                    <Button \n                        className='button'\n                        disabled={this.props.onGenerateApprovalCode === null}\n                        onClick={this.props.onGenerateApprovalCode}>\n                        Generate Approval Code\n                    </Button>\n                ) : null}\n\n                {this.props.onResolveAndCloseTicket ? (\n                    <Button \n                        className='button'\n                        disabled={this.props.onResolveAndCloseTicket === null}\n                        onClick={this.props.onResolveAndCloseTicket}>\n                        Resolve and Close\n                    </Button>\n                ) : null}\n\n                {this.props.onCloseTicket ? (\n                    <Button \n                        className='button'\n                        disabled={this.props.disableCloseTicket}\n                        onClick={this.props.onCloseTicket}>\n                        Close Ticket\n                    </Button>\n                ) : null}\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\nimport { Tabs, Tab } from '@material-ui/core';\n\ninterface IProps {\n    tabList: { value: number, label: string }[];\n    selectedTab: number;\n    setSelectedTab: (index: number) => void;\n}\n\nexport class CustomTabs extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <Tabs\n                className='tabs' \n                value={this.props.selectedTab}\n                variant='scrollable'\n                scrollButtons='auto'\n                indicatorColor='primary'\n                onChange={(_event: React.ChangeEvent<{}>, value: number) => {\n                    this.props.setSelectedTab(value );\n                }}>\n                {this.props.tabList.map(tab => {\n                    return <Tab value={tab.value} label={tab.label} />\n                })}\n            </Tabs>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { ClientData } from 'Pages/CustomerCarePage/Models';\n\ninterface IProps {\n    client: ClientData;\n}\n\ninterface IStates {\n    \n}\n\nexport class BasicInformationSection extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    render() : JSX.Element {\n        const client = this.props.client;\n\n        const yearsAndCount = client.years ? `${new Date().getUTCFullYear() - client.years} (${client.years})` : '---';\n        const brokerName = client.salesChannel ? client.salesChannel.contactName : '---';\n        const brokerCompany = client.salesChannel ? client.salesChannel.company : '---';\n\n        return (\n            <Grid container spacing={2}>\n                {this.renderItem('CORPORATE ACCOUNT NO.', client.corporateAccountNo, 12, 'header-1')}\n                {this.renderItem('REGISTERED COMPANY NAME', client.registeredName)}\n                {this.renderItem('TRADE COMPANY NAME', client.brandName)}\n                {this.renderItem('INDUSTRY', client.industry || '---')}\n                {this.renderItem('OWNWESHIP', client.ownership || '---')}\n                {this.renderItem('CORPORATE TIN', client.tinNo || '---')}\n                {this.renderItem('SEC REGISTRATION NO.', client.secRegNo || '---')}\n                {this.renderItem('E-VAT NO.', client.evatNo || '---')}\n                {this.renderItem('ESTABLISHED (YEARS)', yearsAndCount)}\n                {this.renderItem('AUTHORIZED SIGNATORY', client.authSignatory)}\n                {this.renderItem('BROKER/BDO', brokerName)}\n                {this.renderItem('BROKER COMPANY', brokerCompany)}\n                {this.renderItem('PREVIOUS HMO', client.prevHMOProvider)}\n            </Grid>\n        );\n    }\n\n    renderItem(label: string, value?: string | number, xs?: any, className?: string): JSX.Element {\n        return (\n            <Grid item className='sub-section' xs={xs ? xs : 3} style={{padding: '16px 8px'}}>\n                {label.length > 0 ? (\n                    <div className='light-text'>{label}</div>\n                ) : null}\n                {value ? (\n                    <div className={className ? className : 'header-2'}>{value}</div>\n                ) : null}\n            </Grid>\n        )\n    }\n}","import * as React from 'react';\nimport { Grid, Paper } from '@material-ui/core';\nimport { ClientData, AddressData } from 'Pages/CustomerCarePage/Models';\n\ninterface IProps {\n    client: ClientData;\n}\n\ninterface IStates {\n    \n}\n\nexport class ContactsAndBranchesSection extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    render() : JSX.Element {\n        const client = this.props.client;\n        const mainAddress = client.mainOfficeAddress;\n        const branches = client.branches;\n\n        return (\n            <div>\n                {mainAddress ? (\n                    this.renderAddress(mainAddress, 'Head Office')\n                ) : null}\n                <div style={{paddingBottom: '0.75rem'}} />\n                {branches ? (\n                    branches.map((branch, index) => {\n                        return (\n                            <>\n                            {this.renderAddress(branch, `Branch ${index + 1}`)}\n                            <div style={{paddingBottom: '0.75rem'}} />\n                            </>\n                        )\n                    })\n                ) : null}\n            </div>\n        );\n    }\n\n    renderAddress(address: AddressData, branchName: string): JSX.Element {\n        \n        return (\n                <Paper className='section'>\n                    <Grid container spacing={2}>\n                        {this.renderItem('FLOOR / UNIT', branchName, 12, 'header-1', {\n                            borderBottom: '#3C394A22 solid 1px',\n                            padding: '8px'\n                        })}\n                        {this.renderItem('FLOOR / UNIT', `${address.floor} / ${address.unit}`)}\n                        {this.renderItem('BUILDING', address.bldgName)}\n                        {this.renderItem('STREET', address.street)}\n                        {this.renderItem('BARANGAY', address.barangay)}\n                        {this.renderItem('CITY / TOWN', address.city)}\n                        {this.renderItem('REGION / ZIP CODE', `${address.region} / ${address.zipCode}`)}\n                        {this.renderItem('TRUNKLINE / TEL. NO.', '', 6)}\n                        \n                        {address.contactPersons.length > 0 ? (\n                            <>\n                            {this.renderItem('CONTACT PERSON', undefined, 3, 'header-2', {padding: '16px 8px 0 8px'})}\n                            {this.renderItem('POSITION', undefined, 3, 'header-2', {padding: '16px 8px 0 8px'})}\n                            {this.renderItem('CONTACT NO.', undefined, 3, 'header-2', {padding: '16px 8px 0 8px'})}\n                            {this.renderItem('CONTACT EMAIL', undefined, 3, 'header-2', {padding: '16px 8px 0 8px'})}\n                            </>\n                        ) : null}\n                        \n                        {address.contactPersons.map(contact => {\n                            return (\n                                <>\n                                {this.renderItem('', contact.name, 3, 'header-2', {padding: '0 8px'})}\n                                {this.renderItem('', contact.designation, 3, 'header-2', {padding: '0 8px'})}\n                                {this.renderItem('', contact.contactNo, 3, 'header-2', {padding: '0 8px'})}\n                                {this.renderItem('', contact.email, 3, 'header-2', {padding: '0 8px'})}\n                                </>\n                            );\n                        })}\n                    </Grid>\n                </Paper>\n        );\n    }\n\n    renderItem(label: string, value?: string | number, xs?: any, className?: string, style?: React.CSSProperties): JSX.Element {\n        return (\n            <Grid item className='sub-section' xs={xs ? xs : 3} style={{padding: '16px 8px', ...style}}>\n                {label.length > 0 ? (\n                    <div className='light-text'>{label}</div>\n                ) : null}\n                {value ? (\n                    <div className={className ? className : 'header-2'}>{value}</div>\n                ) : null}\n            </Grid>\n        )\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\nimport { Tabs, Tab } from '@material-ui/core';\n\ninterface IProps {\n    tabList: { value: number, label: string }[];\n    selectedTab: number;\n    orientation?: 'horizontal' | 'vertical';\n    tabStyle?: (index: number) => React.CSSProperties;\n    tabLabel?: (index: number) => React.ReactNode;\n    setSelectedTab: (index: number) => void;\n}\n\nexport class TextTab extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <Tabs\n                className='text-tabs' \n                value={this.props.selectedTab}\n                orientation={this.props.orientation}\n                variant='scrollable'\n                scrollButtons='auto'\n                indicatorColor='primary'\n                onChange={(_event: React.ChangeEvent<{}>, value: number) => {\n                    this.props.setSelectedTab(value);\n                }}>\n                {this.props.tabList.map((tab, index) => {\n                    return (\n                        <Tab \n                            style={this.props.tabStyle ? this.props.tabStyle(index) : undefined}\n                            label={this.props.tabLabel ? this.props.tabLabel(index) : tab.label} \n                            value={tab.value} />\n                    )\n                })}\n            </Tabs>\n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\nimport { Radio } from '@material-ui/core';\n\ninterface IProps {\n    label?: string;\n    checkedCondition: boolean;\n    disabled?: boolean;\n    onChange: () => void;\n}\n\nexport class CustomRadio extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <div className='check-box-area'>\n                <Radio\n                    disabled={this.props.disabled}\n                    className='check-box'\n                    checked={this.props.checkedCondition}\n                    onChange={(_event: React.ChangeEvent<HTMLInputElement>) => {\n                        this.props.onChange();\n                    }} />\n                {this.props.label ? (\n                    <span className='text' style={{paddingLeft: '10px'}}>{this.props.label}</span>\n                ) : null}\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { ClientData } from 'Pages/CustomerCarePage/Models';\nimport { Grid } from '@material-ui/core';\nimport { CustomCheckbox } from 'Pages/CustomerCarePage/Components/CustomCheckbox';\nimport { CustomRadio } from 'Pages/CustomerCarePage/Components/CustomRadio';\n\ninterface IProps {\n    client: ClientData;\n}\n\nexport class CardSortingSection extends React.Component<IProps> {\n\n    render() : JSX.Element {\n        const sortingOfCards = this.props.client.servicingInstructions ? \n                               this.props.client.servicingInstructions.sortingOfCards : \n                               undefined;\n\n        return (\n            <div className='sub-section'>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <div className='text'>Card Sorting</div>\n                        {sortingOfCards && sortingOfCards.cardSorting ? (\n                            <div style={{boxShadow: '0px 3px 6px #00000029'}}>\n                                {sortingOfCards.cardSorting.map((i, index) => {\n                                    const backgroundColor = (index % 2 === 1 ? '#FFFFFF' : '#F6F7FA');\n                                    return <div style={{backgroundColor: backgroundColor, padding: '8px'}}>{i}</div>\n                                })}\n                            </div>\n                        ) : null}\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div className='sub-section'>\n                            <div className='text'>Card Packing</div>\n                            <CustomRadio \n                                label='Envelope'\n                                disabled\n                                checkedCondition={\n                                    sortingOfCards && \n                                    sortingOfCards.cardPacking &&\n                                    sortingOfCards.cardPacking === 'envelope' ? true : false}\n                                onChange={() => {}} />\n                            <CustomRadio \n                                label='Plastic'\n                                disabled\n                                checkedCondition={\n                                    sortingOfCards && \n                                    sortingOfCards.cardPacking &&\n                                    sortingOfCards.cardPacking === 'plastic' ? true : false}\n                                onChange={() => {}} />\n                            <CustomRadio \n                                label='With Flyer'\n                                disabled\n                                checkedCondition={\n                                    sortingOfCards && \n                                    sortingOfCards.cardPacking &&\n                                    sortingOfCards.cardPacking === 'with flyer' ? true : false}\n                                onChange={() => {}} />\n                        </div>\n                        <div className='sub-section'>\n                            <div className='text'>Pack according to</div>\n                            <CustomCheckbox\n                                label='Team Leader'\n                                disabled\n                                value={\n                                    sortingOfCards && \n                                    sortingOfCards.packAccordingTo &&\n                                    sortingOfCards.packAccordingTo.includes('team_leader') ? true : false}\n                                onChange={(_value: boolean) => {}} />\n                             <CustomCheckbox\n                                label='Family'\n                                disabled\n                                value={\n                                    sortingOfCards && \n                                    sortingOfCards.packAccordingTo &&\n                                    sortingOfCards.packAccordingTo.includes('family') ? true : false}\n                                onChange={(_value: boolean) => {}} />\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { ClientData } from 'Pages/CustomerCarePage/Models';\nimport { Grid } from '@material-ui/core';\nimport { CustomCheckbox } from 'Pages/CustomerCarePage/Components/CustomCheckbox';\n\ninterface IProps {\n    client: ClientData;\n}\n\nexport class CardPrintingSection extends React.Component<IProps> {\n\n    render() : JSX.Element {\n        const printingOfCards = this.props.client.servicingInstructions ? \n                                this.props.client.servicingInstructions.printingOfCards : \n                                undefined;\n\n        return (\n            <div className='sub-section'>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <CustomCheckbox\n                            label='1. Company Logo'\n                            disabled\n                            value={printingOfCards && printingOfCards.includes('company logo') ? true : false}\n                            onChange={(_value: boolean) => {}} />\n                        <CustomCheckbox\n                            label='2. ID Picture'\n                            disabled\n                            value={printingOfCards && printingOfCards.includes('id picture') ? true : false}\n                            onChange={(_value: boolean) => {}} />\n                        <CustomCheckbox\n                            label='3. Member Last Name, First Name, Middle Name, Extension (if any)'\n                            disabled\n                            value={printingOfCards && printingOfCards.includes('full name') ? true : false}\n                            onChange={(_value: boolean) => {}} />\n                        <CustomCheckbox\n                            label='4. Company Name'\n                            disabled\n                            value={printingOfCards && printingOfCards.includes('company name') ? true : false}\n                            onChange={(_value: boolean) => {}} />\n                        <CustomCheckbox\n                            label='5. Member Account No.'\n                            disabled\n                            value={printingOfCards && printingOfCards.includes('member account no') ? true : false}\n                            onChange={(_value: boolean) => {}} />\n                        <CustomCheckbox\n                            label='6. Card Number'\n                            disabled\n                            value={printingOfCards && printingOfCards.includes('card no') ? true : false}\n                            onChange={(_value: boolean) => {}} />\n                        <CustomCheckbox\n                            label='7. Month and Year of Birth (MM/YY)'\n                            disabled\n                            value={printingOfCards && printingOfCards.includes('birthday') ? true : false}\n                            onChange={(_value: boolean) => {}} />\n                        <CustomCheckbox\n                            label='8. Sex'\n                            disabled\n                            value={printingOfCards && printingOfCards.includes('sex') ? true : false}\n                            onChange={(_value: boolean) => {}} />\n                        <CustomCheckbox\n                            label='9. Dental Coverage — Based on the member’s plan type in the contract'\n                            disabled\n                            value={printingOfCards && printingOfCards.includes('dental coverage') ? true : false}\n                            onChange={(_value: boolean) => {}} />   \n                    </Grid>\n                    <Grid item xs={6}>\n                        <img\n                            src='si_sample_card.png'\n                            className='card'\n                            alt=\"Sample Reference Card\" />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { ClientData } from 'Pages/CustomerCarePage/Models';\nimport { Grid } from '@material-ui/core';\nimport { CustomCheckbox } from 'Pages/CustomerCarePage/Components/CustomCheckbox';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\n\ninterface IProps {\n    client: ClientData;\n} \n\nexport class BillingSection extends React.Component<IProps> {\n\n    render() : JSX.Element {\n        const billing = this.props.client.servicingInstructions ? \n                        this.props.client.servicingInstructions.billing : \n                        undefined;\n\n        const softCopy = billing && \n                         billing.sendSoaFormats ?\n                         billing.sendSoaFormats.find(i => i.format === 'soft_copy') :\n                         undefined;\n\n        return (\n            <div className='sub-section'>\n                <div className='sub-section'>\n                    <div className='text'>Additional fields to be included in SOA attachment</div>\n                    <CustomCheckbox\n                        label='Site'\n                        disabled\n                        value={billing && billing.additionalFieldsSoa.includes('site') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Sub-company'\n                        disabled\n                        value={billing && billing.additionalFieldsSoa.includes('sub-company') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Cost Center'\n                        disabled\n                        value={billing && billing.additionalFieldsSoa.includes('cost center') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Endorsement / Batch Number'\n                        disabled\n                        value={billing && billing.additionalFieldsSoa.includes('batch no') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Employee No. / Employee ID'\n                        disabled\n                        value={billing && billing.additionalFieldsSoa.includes('employee no') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Cost c/o company / Employer'\n                        disabled\n                        value={billing && billing.additionalFieldsSoa.includes('cost care of') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                </div>\n                <div className='sub-section'>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <div className='text'>SOAs Generation</div>\n                            {billing && billing.soaGeneration ? (\n                                <div style={{boxShadow: '0px 3px 6px #00000029'}}>\n                                    {billing.soaGeneration.map((i, index) => {\n                                        const text = \n                                            i === 'site' ? 'Site' :\n                                            i === 'sub-company' ? 'Sub-company' :\n                                            i === 'cost-center' ? 'Cost Center' :\n                                            i === 'batch-no' ? 'Endorsement / Batch Number' :\n                                            i === 'employee-no' ? 'Employee No. / Employee ID' :\n                                            i === 'alphabetical' ? 'Alphabetical' :\n                                            i === 'effectivity-date' ? 'Effectivity Date' :\n                                            i === 'company-paid-dependents' ? 'Company-Paid Dependents' :\n                                            i === 'employee-paid-dependents' ? 'Employee-Paid Dependents' :\n                                            i === 'principal-employees' ? 'Employees (Principal)' :\n                                            i === 'member-plan-type' ? 'Member Plan Type' : '';\n                                        const backgroundColor = (index % 2 === 1 ? '#FFFFFF' : '#F6F7FA');\n                                        return (\n                                            <div style={{backgroundColor: backgroundColor, padding: '8px'}}>\n                                                {text}\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            ) : null}\n                        </Grid>\n                        <Grid item xs={6}>\n                        <div className='text'>SOAs Sorting</div>\n                            {billing && billing.soaGeneration ? (\n                                <div style={{boxShadow: '0px 3px 6px #00000029'}}>\n                                    {billing.soaSorting.map((i, index) => {\n                                        const text = \n                                            i === 'site' ? 'Site' :\n                                            i === 'sub-company' ? 'Sub-company' :\n                                            i === 'cost-center' ? 'Cost Center' :\n                                            i === 'batch-no' ? 'Endorsement / Batch Number' :\n                                            i === 'employee-no' ? 'Employee No. / Employee ID' :\n                                            i === 'alphabetical' ? 'Alphabetical' :\n                                            i === 'effectivity-date' ? 'Effectivity Date' :\n                                            i === 'company-paid-dependents' ? 'Company-Paid Dependents' :\n                                            i === 'employee-paid-dependents' ? 'Employee-Paid Dependents' :\n                                            i === 'principal-employees' ? 'Employees (Principal)' :\n                                            i === 'member-plan-type' ? 'Member Plan Type' : '';\n                                        const backgroundColor = (index % 2 === 1 ? '#FFFFFF' : '#F6F7FA');\n                                        return (\n                                            <div style={{backgroundColor: backgroundColor, padding: '8px'}}>\n                                                {text}\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            ) : null}\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className='sub-section'>\n                    <Grid container>\n                        <Grid item xs={6}>\n                            <InputField\n                                placeholder='Employee enrollment'\n                                disabled\n                                value={billing && billing.addressSoaTo ? billing.addressSoaTo : ''}\n                                onChange={(_value: string) => {}} />\n                            <InputField\n                                placeholder='Send SOA to'\n                                disabled\n                                value={billing && billing.sendSoaTo ? billing.sendSoaTo : ''}\n                                onChange={(_value: string) => {}} />\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className='sub-section'>\n                    <div className='text'>Send SOA on specific days only</div>\n                    <CustomCheckbox\n                        label='Monday'\n                        disabled\n                        value={\n                            billing && \n                            billing.sendSoaDays && \n                            billing.sendSoaDays.includes('monday') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Tuesday'\n                        disabled\n                        value={\n                            billing && \n                            billing.sendSoaDays && \n                            billing.sendSoaDays.includes('tuesday') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Wednesday'\n                        disabled\n                        value={\n                            billing && \n                            billing.sendSoaDays && \n                            billing.sendSoaDays.includes('wednesday') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Thursday'\n                        disabled\n                        value={\n                            billing && \n                            billing.sendSoaDays && \n                            billing.sendSoaDays.includes('thursday') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Friday'\n                        disabled\n                        value={\n                            billing && \n                            billing.sendSoaDays &&\n                            billing.sendSoaDays.includes('friday') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Saturday'\n                        disabled\n                        value={\n                            billing && \n                            billing.sendSoaDays &&\n                            billing.sendSoaDays.includes('saturday') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Sunday'\n                        disabled\n                        value={\n                            billing && \n                            billing.sendSoaDays &&\n                            billing.sendSoaDays.includes('sunday') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                </div>\n                <div className='sub-section'>\n                    <div className='text'>Send SOA in the following formats</div>\n                    <CustomCheckbox\n                        label='Hard Copy'\n                        disabled\n                        value={\n                            billing && \n                            billing.sendSoaFormats &&\n                            billing.sendSoaFormats.find(i => i.format === 'hard copy') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Soft Copy'\n                        disabled\n                        value={\n                            billing && \n                            billing.sendSoaFormats &&\n                            billing.sendSoaFormats.find(i => i.format === 'soft_copy') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <Grid container>\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <CustomCheckbox\n                                label='Email'\n                                disabled\n                                value={\n                                    softCopy &&\n                                    softCopy.options &&\n                                    softCopy.options.includes('email') ? true : false}\n                                onChange={(_value: boolean) => {}} />\n                            <CustomCheckbox\n                                label='Client Portal'\n                                disabled\n                                value={\n                                    softCopy &&\n                                    softCopy.options &&\n                                    softCopy.options.includes('client portal') ? true : false}\n                                onChange={(_value: boolean) => {}} />\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className='sub-section'>\n                    <div className='text'>CM Application</div>\n                    <CustomCheckbox\n                        label='Separate SOA and CM'\n                        disabled\n                        value={\n                            billing && \n                            billing.cmApplication && \n                            billing.cmApplication.includes('separate soa and cm') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Automatic application / offset against current SOAs'\n                        disabled\n                        value={\n                            billing && \n                            billing.cmApplication && \n                            billing.cmApplication.includes('automatic application') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                </div>\n                <div className='sub-section'>\n                    <div className='text'>Additional requirements</div>\n                    <CustomCheckbox\n                        label='Billing validation required prior to sending final SOA'\n                        disabled\n                        value={\n                            billing && \n                            billing.additionalRequirements && \n                            billing.additionalRequirements.includes('billing validation') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Premium Refund not to be released until full payment of premium'\n                        disabled\n                        value={\n                            billing && \n                            billing.additionalRequirements && \n                            billing.additionalRequirements.includes('premium refund') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { ClientData } from 'Pages/CustomerCarePage/Models';\nimport { CustomCheckbox } from 'Pages/CustomerCarePage/Components/CustomCheckbox';\nimport { Grid } from '@material-ui/core';\n\ninterface IProps {\n    client: ClientData;\n}\n\nexport class EnrollmentSection extends React.Component<IProps> {\n\n    render() : JSX.Element {\n        const enrollment = this.props.client.servicingInstructions ? \n                           this.props.client.servicingInstructions.enrollment : \n                           undefined;\n\n        const memberClientEncoding = enrollment && \n                                     enrollment.dependentEntrollment ?\n                                     enrollment.dependentEntrollment.find(i => i.enrollment === 'member client encoding') :\n                                     undefined;\n\n        return (\n            <div className='sub-section'>\n                <div className='sub-section'>\n                    <div className='text'>Employee Enrollment</div>\n                    <CustomCheckbox\n                        label='HR Client uploading'\n                        disabled\n                        value={\n                            enrollment && \n                            enrollment.employeeEntrollment ? \n                            enrollment.employeeEntrollment.includes('hr client uploading') : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='HR Client encoding'\n                        disabled\n                        value={\n                            enrollment && \n                            enrollment.employeeEntrollment ? \n                            enrollment.employeeEntrollment.includes('hr client encoding') : false}\n                        onChange={(_value: boolean) => {}} />\n                </div>\n                <div className='sub-section'>\n                    <div className='text'>Dependent Enrollment</div>\n                    <CustomCheckbox\n                        label='HR Client uploading'\n                        disabled\n                        value={\n                            enrollment && \n                            enrollment.dependentEntrollment ? \n                            enrollment.dependentEntrollment.find(i => i.enrollment === 'hr client uploading') ? true : false : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='HR Client encoding'\n                        disabled\n                        value={\n                            enrollment && \n                            enrollment.dependentEntrollment ? \n                            enrollment.dependentEntrollment.find(i => i.enrollment === 'hr client encoding') ? true : false : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Member Client encoding'\n                        disabled\n                        value={\n                            enrollment && \n                            enrollment.dependentEntrollment ? \n                            enrollment.dependentEntrollment.find(i => i.enrollment === 'member client encoding') ? true : false : false}\n                        onChange={(_value: boolean) => {}} />\n                    <Grid container>\n                        <Grid item xs={1} />\n                        <Grid item xs={11}>\n                            <CustomCheckbox\n                                label='Upload supporting documents required'\n                                disabled\n                                value={\n                                    memberClientEncoding &&\n                                    memberClientEncoding.options ? \n                                    memberClientEncoding.options.includes('upload supporting') : false}\n                                onChange={(_value: boolean) => {}} />\n                            <CustomCheckbox\n                                label='Submission of physical supporting documents required'\n                                disabled\n                                value={\n                                    memberClientEncoding &&\n                                    memberClientEncoding.options ? \n                                    memberClientEncoding.options.includes('submission of physical') : false}\n                                onChange={(_value: boolean) => {}} />\n                            <CustomCheckbox\n                                label='Approval of HR through HR Client Portal required'\n                                disabled\n                                value={\n                                    memberClientEncoding &&\n                                    memberClientEncoding.options ? \n                                    memberClientEncoding.options.includes('approval of hr') : false}\n                                onChange={(_value: boolean) => {}} />\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className='sub-section'>\n                    <div className='text'>Enrollment done through</div>\n                    <CustomCheckbox\n                        label='Email'\n                        disabled\n                        value={\n                            enrollment && \n                            enrollment.enrollmentDoneThrough ? \n                            enrollment.enrollmentDoneThrough.includes('email') : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Physical documents'\n                        disabled\n                        value={\n                            enrollment && \n                            enrollment.enrollmentDoneThrough ? \n                            enrollment.enrollmentDoneThrough.includes('physical documents') : false}\n                        onChange={(_value: boolean) => {}} />\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { ClientData } from 'Pages/CustomerCarePage/Models';\nimport { Grid } from '@material-ui/core';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { CustomRadio } from 'Pages/CustomerCarePage/Components/CustomRadio';\n\ninterface IProps {\n    client: ClientData;\n}\n\nexport class CollectionSection extends React.Component<IProps> {\n\n    render() : JSX.Element {\n        const collection = this.props.client.servicingInstructions ? \n                           this.props.client.servicingInstructions.collection : \n                           undefined;\n\n        return (\n            <div className='sub-section'>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <InputField\n                            placeholder='Employee enrollment'\n                            disabled\n                            value={\n                                collection && collection.employeeEnrollment ? \n                                collection.employeeEnrollment : ''}\n                            onChange={(_value: string) => {}} />\n                    </Grid>\n                    <Grid item xs={6}>\n                    <InputField\n                            placeholder='Contact person for follow-ups'\n                            disabled\n                            value={\n                                collection && collection.contactPersonForFollowups ? \n                                collection.contactPersonForFollowups : ''}\n                            onChange={(_value: string) => {}} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div className='text'>Preferred means of payment</div>\n                        <CustomRadio \n                            label='Bank Deposit'\n                            disabled\n                            checkedCondition={collection && collection.prefredMeansOfPayment === 'bank deposit' ? true : false}\n                            onChange={() => {}} />\n                        <Grid container>\n                            <Grid item xs={1} />\n                            <Grid item xs={5}>\n                                <InputField\n                                    placeholder='Preferred bank'\n                                    disabled\n                                    value={\n                                        collection && collection.preferedBank ? \n                                        collection.preferedBank : ''}\n                                    onChange={(_value: string) => {}} />\n                            </Grid>\n                        </Grid>\n                        \n                        <CustomRadio \n                            label='Pick-up check'\n                            disabled\n                            checkedCondition={collection && collection.prefredMeansOfPayment === 'pick-up check' ? true : false}\n                            onChange={() => {}} />\n                        <CustomRadio \n                            label='Deliver check'\n                            disabled\n                            checkedCondition={collection && collection.prefredMeansOfPayment === 'deliver check' ? true : false}\n                            onChange={() => {}} />\n                        <CustomRadio \n                            label='Pick-up cash'\n                            disabled\n                            checkedCondition={collection && collection.prefredMeansOfPayment === 'pick-up cash' ? true : false}\n                            onChange={() => {}} />\n                        <CustomRadio \n                            label='Deliver Cash'\n                            disabled\n                            checkedCondition={collection && collection.prefredMeansOfPayment === 'deliver cash' ? true : false}\n                            onChange={() => {}} />\n                        <CustomRadio \n                            label='Credit Card'\n                            disabled\n                            checkedCondition={collection && collection.prefredMeansOfPayment === 'credit card' ? true : false}\n                            onChange={() => {}} />\n                        <CustomRadio \n                            label='Wire Transfer'\n                            disabled\n                            checkedCondition={collection && collection.prefredMeansOfPayment === 'wire transfer' ? true : false}\n                            onChange={() => {}} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <InputField\n                            placeholder='Details for payment pick-up'\n                            disabled\n                            value={\n                                collection && collection.detialsForPaymentPickup ? \n                                collection.detialsForPaymentPickup : ''}\n                            onChange={(_value: string) => {}} />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { ClientData } from 'Pages/CustomerCarePage/Models';\nimport { CustomCheckbox } from 'Pages/CustomerCarePage/Components/CustomCheckbox';\n\ninterface IProps {\n    client: ClientData;\n}\n\nexport class AvailmentSection extends React.Component<IProps> {\n\n    render() : JSX.Element {\n        const availment = this.props.client.servicingInstructions ? \n                          this.props.client.servicingInstructions.availment : \n                          undefined;\n\n        return (\n            <div className='sub-section'>\n                <CustomCheckbox\n                    label='Inform member of copayment / coinsurance share'\n                    disabled\n                    value={availment && availment.includes('inform member of copayment') ? true : false}\n                    onChange={(_value: boolean) => {}} />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { ClientData, ReportorialData } from 'Pages/CustomerCarePage/Models';\nimport { TableCell, TableRow } from '@material-ui/core';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\n\ninterface IProps {\n    client: ClientData;\n}\n\ninterface IStates {\n    reportorialIsUpdated: boolean;\n}\n\nexport class ReportorialSection extends React.Component<IProps, IStates> {\n\n    reportorialData: ReportorialData[] = [\n        { available: false, frequency: 'yearly', reportType: 'summary of claims' },\n        { available: false, frequency: 'yearly', reportType: 'top facilities' },\n        { available: false, frequency: 'yearly', reportType: 'top illnesses' },\n        { available: false, frequency: 'yearly', reportType: 'detailed utilization' },\n        { available: false, frequency: 'yearly', reportType: 'detailed account renewal status report' },\n        { available: false, frequency: 'yearly', reportType: 'summary of account renewal status report' },\n        { available: false, frequency: 'yearly', reportType: 'account analysis report by industry' },\n        { available: false, frequency: 'yearly', reportType: 'account analysis report by segmentation' },\n        { available: false, frequency: 'yearly', reportType: 'active members list' },\n        { available: false, frequency: 'yearly', reportType: 'masterlist' },\n        { available: false, frequency: 'yearly', reportType: 'card summary report' },\n        { available: false, frequency: 'yearly', reportType: 'card replacement report' },\n        { available: false, frequency: 'yearly', reportType: 'account transaction report' },\n        { available: false, frequency: 'yearly', reportType: 'summary of claims report' },\n        { available: false, frequency: 'yearly', reportType: 'top utilization report' },\n        { available: false, frequency: 'yearly', reportType: 'detailed utilization report' },\n        { available: false, frequency: 'yearly', reportType: 'account renewal status report' },\n        { available: false, frequency: 'yearly', reportType: 'account analysis report' },\n        { available: false, frequency: 'yearly', reportType: 'account segmentation exception report' }\n    ];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            reportorialIsUpdated: false\n        }\n    }\n\n    componentDidMount() {\n        const reportorial = this.props.client.servicingInstructions ? \n                           this.props.client.servicingInstructions.reportorial : \n                           undefined;\n        this.reportorialData = this.reportorialData.map(data => {\n            if (reportorial) {\n                const reportorialData = reportorial.find(i => i.reportType === data.reportType);\n                console.log(reportorialData);\n                if (reportorialData) {\n                    return {\n                        reportType: data.reportType,\n                        frequency: reportorialData.frequency,\n                        available: reportorialData.available\n                    }\n                }\n            }\n            return data;\n        });\n\n        this.setState({reportorialIsUpdated: true});\n    }\n\n    render() : JSX.Element {\n\n        return (\n            <div className='sub-section'>\n                <CustomTable\n                    className='custom-table'\n                    rows={this.reportorialData}\n                    renderHeader={() => this.renderTableHeader()}\n                    renderRow={(rowData: ReportorialData, index: number) => \n                        this.renderTableRow(rowData, index)} />\n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        \n        return (\n            <>\n            <TableCell>Report Type</TableCell>\n            <TableCell>Frequency</TableCell>\n            <TableCell style={{textAlign: 'center'}}>Available?</TableCell>\n            </>\n        );\n    }\n\n    renderTableRow(field: ReportorialData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{GlobalFunction.capitalizeEachWord(field.reportType)}</TableCell>\n                <TableCell>{GlobalFunction.capitalizeEachWord(field.frequency)}</TableCell>\n                <TableCell style={{textAlign: 'center'}}>{field.available ? 'Yes' : 'No'}</TableCell>\n            </TableRow>\n        );\n    }\n}","import * as React from 'react';\nimport { ClientData } from 'Pages/CustomerCarePage/Models';\nimport { TextTab } from 'Pages/CustomerCarePage/Components/TextTab';\nimport { CardSortingSection } from './CardSortingSection';\nimport { CardPrintingSection } from './CardPrintingSection';\nimport { BillingSection } from './BillingSection';\nimport { EnrollmentSection } from './EnrollmentSection';\nimport { CollectionSection } from './CollectionSection';\nimport { AvailmentSection } from './AvailmentSection';\nimport { ReportorialSection } from './ReportorialSection';\n\ninterface IProps {\n    client: ClientData;\n}\n\ninterface IStates {\n    selectedTab: number;\n}\n\nexport class ServicingInstructionsSection extends React.Component<IProps, IStates> {\n\n    tabList = [\n        { value: 1, label: 'Sorting of Cards' },\n        { value: 2, label: 'Printing of Cards' },\n        { value: 3, label: 'Billing' },\n        { value: 4, label: 'Enrollment' },\n        { value: 5, label: 'Collection' },\n        { value: 6, label: 'Availment' },\n        { value: 7, label: 'Reportorial' }\n    ];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            selectedTab: 1\n        };\n    }\n\n    render() : JSX.Element {\n\n        return (\n            <div>\n                <div className='sub-section'>\n                    <TextTab\n                        tabList={this.tabList}\n                        selectedTab={this.state.selectedTab}\n                        tabStyle={(_index: number) => {\n                            return { padding: '0 1rem' };\n                        }}\n                        tabLabel={(index: number) => {\n                            return (\n                                <div style={{width: '100%'}}>\n                                    <div className='header-3' style={{margin: '6px 0'}}>\n                                        {this.tabList[index].label}\n                                    </div>\n                                </div>\n                            );\n                        }}\n                        setSelectedTab={(value: number) => {\n                            this.setState({selectedTab: value});\n                        }} />\n                </div>\n                {this.state.selectedTab === 1 ? (\n                    <CardSortingSection client={this.props.client} />\n                ) : this.state.selectedTab === 2 ? (\n                    <CardPrintingSection client={this.props.client} />\n                ) : this.state.selectedTab === 3 ? (\n                    <BillingSection client={this.props.client} />\n                ) : this.state.selectedTab === 4 ? (\n                    <EnrollmentSection client={this.props.client} />\n                ) : this.state.selectedTab === 5 ? (\n                    <CollectionSection client={this.props.client} />\n                ) : this.state.selectedTab === 6 ? (\n                    <AvailmentSection client={this.props.client} />\n                ) : this.state.selectedTab === 7 ? (\n                    <ReportorialSection client={this.props.client} />\n                ) : null}\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid, TableRow, TableCell } from '@material-ui/core';\nimport { ClientData, PlanTypeData } from 'Pages/CustomerCarePage/Models';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\n\ninterface IProps {\n    history: any;\n    client: ClientData;\n}\n\ninterface IStates {\n    filterName: string;\n    filterBenefits: string;\n    filterPrincipals: string;\n    filterDependents: string;\n    filterDateCreated: string;\n    filterDateUpdated: string;\n    filterVersion: string;\n}\n\nexport class HMOInformationSection extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            filterName: '',\n            filterBenefits: '',\n            filterPrincipals: '',\n            filterDependents: '',\n            filterDateCreated: '',\n            filterDateUpdated: '',\n            filterVersion: ''\n        };\n    }\n\n    render() : JSX.Element {\n        const client = this.props.client;\n        const contract = client.contract;\n        const planTypes = client.planTypes;\n\n        const startDate = contract && contract.startDate ? GlobalFunction.toShortDateString(contract.startDate) : '---';\n        const endDate = contract && contract.endDate ? GlobalFunction.toShortDateString(contract.endDate) : '---';\n        const brokerName = client.salesChannel ? client.salesChannel.contactName : '---';\n        const brokerCompany = client.salesChannel ? client.salesChannel.company : '---';\n\n        return (\n            <Grid container spacing={2}>\n                {this.renderItem('CORPORATE ACCOUNT NO.', client.corporateAccountNo)}\n                {contract ? (\n                    <>\n                    {this.renderItem('CONTRACT', contract.name, 9, \n                        () => {\n                            this.props.history.push(`#/membership/member-contract/${contract.id}`);\n                            window.location.reload();\n                        })}\n                    {this.renderItem('EFFECTIVITY DATE', startDate)}\n                    {this.renderItem('EXPIRY DATE', endDate)}\n                    {this.renderItem('REGISTERED COMPANY NAME', client.registeredName, 6)}\n                    {this.renderItem('AUTHORIZED SIGNATORY', client.authSignatory || '---')}\n                    {this.renderItem('BROKER/BDO', brokerName)}\n                    {this.renderItem('BROKER COMPANY', brokerCompany, 6)}\n                    </>\n                ) : null}\n                <Grid item xs={12} style={{overflowX: 'auto'}}>\n                    {planTypes ? (\n                        <CustomTable\n                            rows={planTypes}\n                            renderHeader={() => this.renderTableHeader()}\n                            renderRow={(rowData: any, index: number) => \n                                this.renderTableRow(rowData, index)} />\n                    ) : null}\n                </Grid>\n            </Grid>\n        );\n    }\n\n    renderItem(label: string, value: string, xs?: any, onClick?: () => void): JSX.Element {\n        return (\n            <Grid item className='sub-section' xs={xs ? xs : 3} style={{padding: '16px 8px'}}>\n                <div className='light-text'>{label}</div>\n                {onClick ? (\n                    <TextButton label={value} onClick={onClick} />\n                ) : (\n                    <div className='header-2'>{value}</div>\n                )}\n                \n            </Grid>\n        )\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            {this.renderHeaderColumn('fiterName', 'Plan Type')}\n            {this.renderHeaderColumn('filterBenefits', 'Benefits')}\n            {this.renderHeaderColumn('filterPrincipals', 'Principals')}\n            {this.renderHeaderColumn('filterDependents', 'Dependents')}\n            {this.renderHeaderColumn('filterDateCreated', 'Date Created')}\n            {this.renderHeaderColumn('filterDateUpdated', 'Date Modified')}\n            {this.renderHeaderColumn('filterVersion', 'Contract Version')}\n            </>\n        );\n    }\n\n    renderTableRow(planType: PlanTypeData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{planType.name}</TableCell>\n                <TableCell>{planType.benefits}</TableCell>\n                <TableCell>{planType.principals}</TableCell>\n                <TableCell>{planType.dependents}</TableCell>\n                <TableCell>{GlobalFunction.toShortDateString(planType.dateCreated)}</TableCell>\n                <TableCell>{GlobalFunction.toShortDateString(planType.dateUpdated)}</TableCell>\n                <TableCell>{planType.version}</TableCell>\n            </TableRow>\n        );\n    }\n\n    renderHeaderColumn(attrName: string, headerText: string, width?: string): JSX.Element {\n        return (\n            <TableCell style={{minWidth: width ? width : '150px'}}>\n                <span className='header-2'>{headerText}</span>\n                <div style={{float: 'right'}}>\n                    <IconButton \n                        icon={faSort} \n                        onClick={() => {\n                            // this.sortFacilities(attrName, true);\n                        }} />\n                </div>\n                <InputField\n                    value={this.state[attrName]}\n                    onChange={(value: string) => {\n                        // @ts-ignore\n                        this.setState({[attrName]: value});\n                    }} />\n            </TableCell>\n        );\n    }\n}","import * as React from 'react';\nimport { TableRow, TableCell } from '@material-ui/core';\nimport { ClientData, MemberData } from 'Pages/CustomerCarePage/Models';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { Payloads } from 'Pages/CustomerCarePage/Payloads';\nimport { Loading } from 'Pages/CustomerCarePage/Components/Loading';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\n\ninterface IProps {\n    client: ClientData;\n}\n\ninterface IStates {\n    members?: MemberData[];\n}\n\nexport class MembersSection extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    componentDidMount() {\n        const filter = {\n            where: {\n                client_id: this.props.client.id//'5d9af14586cd6f0349131e88'\n            }\n        };\n        API.get(`members?filter=${JSON.stringify(filter)}`,\n            (response) => {\n                console.log(response);\n                this.setState({members: Payloads.getMembers(response)});\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    render() : JSX.Element {\n\n        return (\n            <div className='sub-section' style={{overflowX: 'auto'}}>\n                {this.state.members ? (\n                    <CustomTable\n                        rows={this.state.members}\n                        renderHeader={() => this.renderTableHeader()}\n                        rowsPerPageOptions={[10, 25, 50]}\n                        renderRow={(rowData: any, index: number) => \n                            this.renderTableRow(rowData, index)} />\n                ) : (\n                    <Loading height='10rem' />\n                )}\n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            {this.renderHeaderColumn('memberId', 'Member ID')}\n            {this.renderHeaderColumn('filterBenefits', 'Name')}\n            {this.renderHeaderColumn('filterPrincipals', 'Corporate/s')}\n            {this.renderHeaderColumn('filterDependents', 'Effectivity Date')}\n            {this.renderHeaderColumn('filterDateCreated', 'Termination Date')}\n            {this.renderHeaderColumn('filterVersion', 'Status')}\n            </>\n        );\n    }\n\n    renderTableRow(member: MemberData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        const effectivityDate = member.effectivityDate ? GlobalFunction.toShortDateString(member.effectivityDate) : '---';\n        const terminationDate = member.terminationDate ? GlobalFunction.toShortDateString(member.terminationDate) : '---';\n        const name = GlobalFunction.toNameFormat(\n            member.firstName,\n            member.middleName,\n            member.lastName\n        );\n\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{member.memberId}</TableCell>\n                <TableCell>{name}</TableCell>\n                <TableCell>{member.corporateName || '---'}</TableCell>\n                <TableCell>{effectivityDate || '---'}</TableCell>\n                <TableCell>{terminationDate}</TableCell>\n                <TableCell>{member.status || '---'}</TableCell>\n            </TableRow>\n        );\n    }\n\n    renderHeaderColumn(attrName: string, headerText: string, width?: string): JSX.Element {\n        return (\n            <TableCell style={{minWidth: width ? width : '150px'}}>\n                <span className='header-2'>{headerText}</span>\n                <div style={{float: 'right'}}>\n                    <IconButton \n                        icon={faSort} \n                        onClick={() => {\n                            // this.sortFacilities(attrName, true);\n                        }} />\n                </div>\n                <InputField\n                    value={this.state[attrName]}\n                    onChange={(value: string) => {\n                        // @ts-ignore\n                        this.setState({[attrName]: value});\n                    }} />\n            </TableCell>\n        );\n    }\n}","import * as React from 'react';\nimport { ClientData, ContractData } from 'Pages/CustomerCarePage/Models';\nimport { TextTab } from 'Pages/CustomerCarePage/Components/TextTab';\nimport { API } from 'Pages/TicketList/API';\nimport { Loading } from 'Pages/CustomerCarePage/Components/Loading';\nimport { Payloads } from 'Pages/CustomerCarePage/Payloads';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { TableRow, TableCell } from '@material-ui/core';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\n\ninterface IProps {\n    client: ClientData;\n}\n\ninterface IStates {\n    selectedTab: number;\n    contracts?: ContractData[];\n    proposals?: ContractData[];\n}\n\nexport class HistorySection extends React.Component<IProps, IStates> {\n\n    tabList = [\n        { value: 1, label: 'Contracts' },\n        { value: 2, label: 'Proposals' }\n    ];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            selectedTab: 1\n        };\n    }\n\n    componentDidMount() {\n       this.loadData('contracts');\n    }\n\n    componentWillUpdate(_props: IProps, state: IStates) {\n        if (this.state.selectedTab != state.selectedTab) {\n            this.loadData(state.selectedTab === 1 ? 'contracts' : 'proposals');\n        }\n    }\n\n    loadData = (type: 'contracts' | 'proposals') => {\n        API.get(`clients/${this.props.client.id}/type/${type}`,\n            (response) => {\n                console.log(response);\n                if (type === 'contracts') {\n                    this.setState({contracts: Payloads.getContractData(response.data)});\n                } else if (type === 'proposals') {\n                    this.setState({proposals: Payloads.getContractData(response.data)});\n                }\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    render() : JSX.Element {\n\n        return (\n            <div>\n                <div>\n                    <TextTab\n                        tabList={this.tabList}\n                        selectedTab={this.state.selectedTab}\n                        tabStyle={(_index: number) => {\n                            return { padding: '0 1rem' };\n                        }}\n                        tabLabel={(index: number) => {\n                            return (\n                                <div style={{width: '100%'}}>\n                                    <div className='header-3' style={{margin: '6px 0'}}>\n                                        {this.tabList[index].label}\n                                    </div>\n                                </div>\n                            );\n                        }}\n                        setSelectedTab={(value: number) => {\n                            this.setState({selectedTab: value});\n                        }} />\n                </div>\n                <div className='sub-section' style={{overflowX: 'auto'}}>\n                    {this.state.selectedTab === 1 && this.state.contracts ? (\n                        this.renderContractTable(this.state.contracts)\n                    ) : this.state.selectedTab === 2 && this.state.proposals ? (\n                        this.renderContractTable(this.state.proposals)\n                    ) : (\n                        <Loading height='10rem' />\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    renderContractTable(data: ContractData[]): JSX.Element {\n        return (\n            <CustomTable\n                rows={data}\n                renderHeader={() => this.renderTableHeader()}\n                renderRow={(rowData: any, index: number) => \n                    this.renderTableRow(rowData, index)} />\n        )\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            {this.renderHeaderColumn('fiterName', 'Contract')}\n            {this.renderHeaderColumn('filterBenefits', 'Contract No.')}\n            {this.renderHeaderColumn('filterPrincipals', 'Contract Effectivity Date', '200px')}\n            {this.renderHeaderColumn('filterDependents', 'Contract Type')}\n            {this.renderHeaderColumn('filterDateCreated', 'Version')}\n            {this.renderHeaderColumn('filterDateUpdated', 'Modified Date')}\n            {this.renderHeaderColumn('filterVersion', 'Status')}\n            </>\n        );\n    }\n\n    renderTableRow(contract: ContractData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        const startDate = contract.startDate ? GlobalFunction.toShortDateString(contract.startDate) : '---';\n        const updateDate = contract.updateDate ? GlobalFunction.toShortDateString(contract.updateDate) : '---';\n\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{contract.name}</TableCell>\n                <TableCell>{contract.contractNo || '---'}</TableCell>\n                <TableCell>{startDate}</TableCell>\n                <TableCell>{contract.type || '---'}</TableCell>\n                <TableCell>{contract.version || '---'}</TableCell>\n                <TableCell>{updateDate}</TableCell>\n                <TableCell>{contract.status || '---'}</TableCell>\n            </TableRow>\n        );\n    }\n\n    renderHeaderColumn(attrName: string, headerText: string, width?: string): JSX.Element {\n        return (\n            <TableCell style={{minWidth: width ? width : '150px'}}>\n                <span className='header-2'>{headerText}</span>\n                <div style={{float: 'right'}}>\n                    <IconButton \n                        icon={faSort} \n                        onClick={() => {\n                            // this.sortFacilities(attrName, true);\n                        }} />\n                </div>\n                <InputField\n                    value={this.state[attrName]}\n                    onChange={(value: string) => {\n                        // @ts-ignore\n                        this.setState({[attrName]: value});\n                    }} />\n            </TableCell>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid, TableRow, TableCell } from '@material-ui/core';\nimport { ClientData, DocumentData } from 'Pages/CustomerCarePage/Models';\nimport { TextTab } from 'Pages/CustomerCarePage/Components/TextTab';\nimport { Loading } from 'Pages/CustomerCarePage/Components/Loading';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { Payloads } from 'Pages/CustomerCarePage/Payloads';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\n\ninterface IProps {\n    client: ClientData;\n}\n\ninterface IStates {\n    selectedTab: number;\n    documents?: DocumentData[];\n}\n\nexport class DocumentsSection extends React.Component<IProps, IStates> {\n\n    tabList = [\n        { value: 1, label: 'Signed Contracts' },\n        { value: 2, label: 'Signed Proposals' },\n        { value: 3, label: 'Masterlists' },\n        { value: 4, label: 'APD Endorsements' },\n        { value: 5, label: 'Corporate Guarantees' },\n        { value: 6, label: 'Letter and Requests' }\n    ];\n\n    signedContractsHeader = [\n        { label: 'Document Name',   state: 'name' },\n        { label: 'Version',         state: 'version' },\n        { label: 'Date Signed',     state: 'signedDate' },\n        { label: 'Files',           state: 'files' },\n        { label: 'Uploaded Date',   state: 'uploadDate' },\n        { label: 'Uploaded By',     state: 'uploader' },\n        { label: 'Action',          state: 'action' }\n    ];\n\n    signedProposalsHeader = [\n        { label: 'Proposal Number', state: 'proposalNo' },\n        { label: 'Version',         state: 'version' },\n        { label: 'Date Signed',     state: 'signedDate' },\n        { label: 'Files',           state: 'files' },\n        { label: 'Uploaded Date',   state: 'uploadDate' },\n        { label: 'Uploaded By',     state: 'uploader' },\n        { label: 'Action',          state: 'action' }\n    ];\n\n    masterlistsHeader = [\n        { label: 'Document Name',   state: 'name' },\n        { label: 'Batch Name',      state: 'batchName' },\n        { label: 'Files',           state: 'files' },\n        { label: 'Uploaded Date',   state: 'uploadDate' },\n        { label: 'Uploaded By',     state: 'uploader' },\n        { label: 'Action',          state: 'action' }\n    ];\n\n    apdEndorsementsHeader = [\n        { label: 'Document Name',   state: 'name' },\n        { label: 'Type',            state: 'type' },\n        { label: 'Date Endorsed',   state: 'endorseDate' },\n        { label: 'Files',           state: 'files' },\n        { label: 'Uploaded Date',   state: 'uploadDate' },\n        { label: 'Uploaded By',     state: 'uploader' },\n        { label: 'Action',          state: 'action' }\n    ];\n\n    corporateGuaranteesHeader = [\n        { label: 'Document Name',   state: 'name' },\n        { label: 'Sender',          state: 'sender' },\n        { label: 'Files',           state: 'files' },\n        { label: 'Uploaded Date',   state: 'uploadDate' },\n        { label: 'Uploaded By',     state: 'uploader' },\n        { label: 'Action',          state: 'action' }\n    ];\n\n    lettersAndRequestsHeader = [\n        { label: 'Document Name',   state: 'name' },\n        { label: 'Files',           state: 'files' },\n        { label: 'Uploaded Date',   state: 'uploadDate' },\n        { label: 'Uploaded By',     state: 'uploader' },\n        { label: 'Action',          state: 'action' }\n    ];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            selectedTab: 1\n        };\n    }\n\n    componentDidMount() {\n        this.loadData('signed_contracts');\n    }\n\n    componentWillUpdate(_props: IProps, state: IStates) {\n        if (this.state.selectedTab != state.selectedTab) {\n            if (state.selectedTab === 1) {\n                this.loadData('signed_contracts');\n            } else if (state.selectedTab === 2) {\n                this.loadData('signed_proposals');\n            } else if (state.selectedTab === 3) {\n                this.loadData('masterlists');\n            } else if (state.selectedTab === 4) {\n                this.loadData('apd_endorsements');\n            } else if (state.selectedTab === 5) {\n                this.loadData('corporate_guarantees');\n            } else if (state.selectedTab === 6) {\n                this.loadData('letters_and_requests');\n            }\n        }\n    }\n\n    loadData = (type: 'signed_contracts' | \n                      'signed_proposals' | \n                      'masterlists' | \n                      'apd_endorsements' | \n                      'corporate_guarantees' | \n                      'letters_and_requests') => {\n        const filter = {\n            where: {\n                section: type,\n                client_id: this.props.client.id\n            }\n        };\n\n        API.get(`documents?filter=${JSON.stringify(filter)}`,\n            (response) => {\n                console.log(response);\n                this.setState({documents: Payloads.getDocuments(response.documents)});\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    render() : JSX.Element {\n\n        return (\n            <Grid container spacing={2}>\n                <div>\n                    <TextTab\n                        tabList={this.tabList}\n                        selectedTab={this.state.selectedTab}\n                        tabStyle={(_index: number) => {\n                            return { padding: '0 1rem' };\n                        }}\n                        tabLabel={(index: number) => {\n                            return (\n                                <div style={{width: '100%'}}>\n                                    <div className='header-3' style={{margin: '6px 0'}}>\n                                        {this.tabList[index].label}\n                                    </div>\n                                </div>\n                            );\n                        }}\n                        setSelectedTab={(value: number) => {\n                            this.setState({selectedTab: value});\n                        }} />\n                </div>\n                <div className='sub-section' style={{overflowX: 'auto'}}>\n                    {this.state.documents ? (\n                        this.state.selectedTab === 1 ? (\n                            <CustomTable\n                                rows={this.state.documents}\n                                renderHeader={() => {\n                                    return this.renderTableHeader(this.signedContractsHeader);\n                                }}\n                                renderRow={(rowData: any, index: number) => {\n                                    return this.renderTableRow(rowData, index, this.signedContractsHeader);\n                                }} />\n                        ) : this.state.selectedTab === 2 ? (\n                            <CustomTable\n                                rows={this.state.documents}\n                                renderHeader={() => {\n                                    return this.renderTableHeader(this.signedProposalsHeader);\n                                }}\n                                renderRow={(rowData: any, index: number) => {\n                                    return this.renderTableRow(rowData, index, this.signedProposalsHeader);\n                                }} />\n                        ) : this.state.selectedTab === 3 ? (\n                            <CustomTable\n                                rows={this.state.documents}\n                                renderHeader={() => {\n                                    return this.renderTableHeader(this.masterlistsHeader);\n                                }}\n                                renderRow={(rowData: any, index: number) => {\n                                    return this.renderTableRow(rowData, index, this.masterlistsHeader);\n                                }} />\n                        ) : this.state.selectedTab === 4 ? (\n                            <CustomTable\n                                rows={this.state.documents}\n                                renderHeader={() => {\n                                    return this.renderTableHeader(this.apdEndorsementsHeader);\n                                }}\n                                renderRow={(rowData: any, index: number) => {\n                                    return this.renderTableRow(rowData, index, this.apdEndorsementsHeader);\n                                }} />\n                        ) : this.state.selectedTab === 5 ? (\n                            <CustomTable\n                                rows={this.state.documents}\n                                renderHeader={() => {\n                                    return this.renderTableHeader(this.corporateGuaranteesHeader);\n                                }}\n                                renderRow={(rowData: any, index: number) => {\n                                    return this.renderTableRow(rowData, index, this.corporateGuaranteesHeader);\n                                }} />\n                        ) : this.state.selectedTab === 6 ? (\n                            <CustomTable\n                                rows={this.state.documents}\n                                renderHeader={() => {\n                                    return this.renderTableHeader(this.lettersAndRequestsHeader);\n                                }}\n                                renderRow={(rowData: any, index: number) => {\n                                    return this.renderTableRow(rowData, index, this.lettersAndRequestsHeader);\n                                }} />\n                        ) : null\n                    ) : (\n                        <Loading height='10rem' />\n                    )}\n                </div>\n            </Grid>\n        );\n    }\n\n    renderTableHeader(headers: { label: string, state: string }[]): JSX.Element {\n        return (\n            <>\n            {headers.map(header => {\n                return this.renderHeaderColumn(header.state, header.label);\n            })}\n            </>\n        );\n    }\n\n    renderTableRow(document: DocumentData, index: number, headers: { label: string, state: string }[]): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        const signedDate = document.signedDate ? GlobalFunction.toShortDateString(document.signedDate) : '---';\n        const endorseDate = document.endorseDate ? GlobalFunction.toShortDateString(document.endorseDate) : '---';\n        const uploadDate = GlobalFunction.toShortDateString(document.uploadDate);\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                {this.renderTableCell(document.name || '---',       'name', headers)}\n                {this.renderTableCell(document.proposalNo || '---', 'proposalNo', headers)}\n                {this.renderTableCell(document.version || '---',    'version', headers)}\n                {this.renderTableCell(document.batchName || '---',  'batchName', headers)}\n                {this.renderTableCell(document.type || '---',       'type', headers)}\n                {this.renderTableCell(document.sender || '---',     'sender', headers)}\n                {this.renderTableCell(signedDate,                   'signedDate', headers)}\n                {this.renderTableCell(endorseDate,                  'endorseDate', headers)}\n                {this.renderTableCell('---',                        'files', headers)}\n                {this.renderTableCell(uploadDate,                   'uploadDate', headers)}\n                {this.renderTableCell(document.uploader,            'uploader', headers)}\n                {this.renderTableCell('---',                        'action', headers)}\n            </TableRow>\n        );\n    }\n\n    renderTableCell(value: string, conditionState: string, headers: { label: string, state: string }[]): JSX.Element | null {\n        return (\n            headers.find(header => header.state === conditionState) ? (\n                <TableCell>{value}</TableCell>\n            ) : null\n        )\n    }\n\n    renderHeaderColumn(attrName: string, headerText: string, width?: string): JSX.Element {\n        return (\n            <TableCell style={{minWidth: width ? width : '150px'}}>\n                <span className='header-2'>{headerText}</span>\n                <div style={{float: 'right'}}>\n                    <IconButton \n                        icon={faSort} \n                        onClick={() => {\n                            // this.sortFacilities(attrName, true);\n                        }} />\n                </div>\n                <InputField\n                    value={this.state[attrName]}\n                    onChange={(value: string) => {\n                        // @ts-ignore\n                        this.setState({[attrName]: value});\n                    }} />\n            </TableCell>\n        );\n    }\n}","import * as React from 'react';\nimport { TableCell, TableRow } from '@material-ui/core';\nimport { ClientData, LogData } from 'Pages/CustomerCarePage/Models';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { Loading } from 'Pages/CustomerCarePage/Components/Loading';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { Payloads } from 'Pages/CustomerCarePage/Payloads';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\n\ninterface IProps {\n    client: ClientData;\n}\n\ninterface IStates {\n    logs?: LogData[];\n}\n\nexport class AuditLogsSection extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    componentDidMount() {\n        this.getAuditLogs();\n    }\n\n    getAuditLogs = () => {\n        const filter = {\n            where: {\n                client_id: this.props.client.id\n            }\n        };\n        API.get(`audit-logs?filter=${JSON.stringify(filter)}`,\n            (response) => {\n                console.log(response);\n                this.setState({logs: Payloads.getAuditLogs(response.audit_logs)});\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    render() : JSX.Element {\n\n        return (\n            <div className='sub-section'>\n                {this.state.logs ? (\n                    <div style={{overflowX: 'auto'}}>\n                        <CustomTable\n                            rows={this.state.logs}\n                            renderHeader={() => this.renderTableHeader()}\n                            rowsPerPageOptions={[10, 25, 50]}\n                            renderRow={(rowData: any, index: number) => \n                                this.renderTableRow(rowData, index)} />\n                    </div>\n                ) : (\n                    <Loading height='10rem' />\n                )}\n               \n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            {this.renderHeaderColumn('fiterName', 'Activity ID')}\n            {this.renderHeaderColumn('filterBenefits', 'Activity')}\n            {this.renderHeaderColumn('filterPrincipals', 'User')}\n            {this.renderHeaderColumn('filterDependents', 'Date')}\n            {this.renderHeaderColumn('filterDateCreated', 'Time')}\n            </>\n        );\n    }\n\n    renderTableRow(log: LogData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{log.activityId}</TableCell>\n                <TableCell>{log.name}</TableCell>\n                <TableCell>{log.user}</TableCell>\n                <TableCell>{log.date}</TableCell>\n                <TableCell>{log.time}</TableCell>\n            </TableRow>\n        );\n    }\n\n    renderHeaderColumn(attrName: string, headerText: string, width?: string): JSX.Element {\n        return (\n            <TableCell style={{minWidth: width ? width : '150px'}}>\n                <span className='header-2'>{headerText}</span>\n                <div style={{float: 'right'}}>\n                    <IconButton \n                        icon={faSort} \n                        onClick={() => {\n                            // this.sortFacilities(attrName, true);\n                        }} />\n                </div>\n                <InputField\n                    value={this.state[attrName]}\n                    onChange={(value: string) => {\n                        // @ts-ignore\n                        this.setState({[attrName]: value});\n                    }} />\n            </TableCell>\n        );\n    }\n}","import * as React from 'react';\nimport { TableCell, TableRow } from '@material-ui/core';\nimport { ClientData, MemberFieldData } from 'Pages/CustomerCarePage/Models';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { TextTab } from 'Pages/CustomerCarePage/Components/TextTab';\n\ninterface IProps {\n    client: ClientData;\n}\n\ninterface IStates {\n    selectedTab: number;\n}\n\nexport class MemberFieldsSection extends React.Component<IProps, IStates> {\n\n    tabList = [\n        { value: 1, label: 'Client-required' },\n        { value: 2, label: 'Mandatory' }\n    ];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            selectedTab: 1\n        };\n    }\n\n    filterByType = (fieldtype: string, memberFields: MemberFieldData[]) => {\n        return memberFields.filter(field => field.type === fieldtype);\n    }\n\n    render() : JSX.Element {\n        const memberFields = this.props.client.memberFields;\n        const selectedTab = this.state.selectedTab;\n\n        return (\n            <div>\n                <div>\n                    <TextTab\n                        tabList={this.tabList}\n                        selectedTab={this.state.selectedTab}\n                        tabStyle={(_index: number) => {\n                            return { padding: '0 1rem' };\n                        }}\n                        tabLabel={(index: number) => {\n                            return (\n                                <div style={{width: '100%'}}>\n                                    <div className='header-3' style={{margin: '6px 0'}}>\n                                        {this.tabList[index].label}\n                                    </div>\n                                </div>\n                            );\n                        }}\n                        setSelectedTab={(value: number) => {\n                            this.setState({selectedTab: value});\n                        }} />\n                </div>\n                <div className='sub-section'>\n                    {memberFields ? (\n                        <CustomTable\n                            className='custom-table'\n                            rows={this.filterByType(this.tabList[selectedTab - 1].label, memberFields)}\n                            renderHeader={() => this.renderTableHeader()}\n                            renderRow={(rowData: MemberFieldData, index: number) => \n                                this.renderTableRow(rowData, index)} />\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        \n        return (\n            <>\n            <TableCell>Required?</TableCell>\n            <TableCell>Field</TableCell>\n            <TableCell>Input Type</TableCell>\n            <TableCell>Data Type</TableCell>\n            </>\n        );\n    }\n\n    renderTableRow(field: MemberFieldData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{field.isRequired ? 'Yes' : 'No'}</TableCell>\n                <TableCell>{field.fieldName}</TableCell>\n                <TableCell>{field.inputType}</TableCell>\n                <TableCell>{field.dataType}</TableCell>\n            </TableRow>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { ClientData } from 'Pages/CustomerCarePage/Models';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { Payloads } from 'Pages/CustomerCarePage/Payloads';\nimport { BasicInformationSection } from './BasicInformationSection';\nimport { Loading } from 'Pages/CustomerCarePage/Components/Loading';\nimport { ContactsAndBranchesSection } from './ContactsAndBranchesSection';\nimport { ServicingInstructionsSection } from './ServicingInstructionsSection/ServicingInstructionsSection';\nimport { HMOInformationSection } from './HMOInformationSection';\nimport { MembersSection } from './MembersSection';\nimport { HistorySection } from './HistorySection';\nimport { DocumentsSection } from './DocumentsSection';\nimport { AuditLogsSection } from './AuditLogsSection';\nimport { MemberFieldsSection } from './MemberFieldsSection';\nimport { TextTab } from 'Pages/CustomerCarePage/Components/TextTab';\n\ninterface IProps {\n    history: any;\n    clientId: string;\n}\n\ninterface IStates {\n    client?: ClientData;\n    selectedTab: number;\n}\n\nexport class ClientProfileSection extends React.Component<IProps, IStates> {\n\n    informationTabs = [\n        { value: 1, label: 'Basic Information' },\n        { value: 2, label: 'Contracts/Branches' },\n        { value: 3, label: 'Member Fields' },\n        { value: 4, label: 'Servicing Instructions' }\n    ];\n\n    accountTabs = [\n        { value: 5, label: 'HMO Information' },\n        { value: 6, label: 'Members' },\n        { value: 7, label: 'History' },\n        { value: 8, label: 'Documents' }\n    ];\n\n    activitiesTabs = [\n        { value: 9, label: 'Audit Logs' }\n    ];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            selectedTab: 1\n        };\n    }\n\n    componentDidMount() {\n        API.get(`clients/account/hmo-info/${this.props.clientId}`,\n            (response) => {\n                console.log(response);\n                this.setState({client: \n                    Payloads.getClientData(\n                        response.client, \n                        response.benefit_plan_tree,\n                        response.plan_types)});\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    render() : JSX.Element {\n        return (\n            <div className='section' style={{width: '100%'}}>\n                <div style={{paddingTop: '2.5rem'}} />\n                <Grid container className='sub-section'>\n                    {this.renderSideBar()}\n                    {this.renderMainContent()}\n                </Grid>\n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderSideBar(): JSX.Element {\n        const rightBorderStyle = {\n            borderRight: '#3C394A22 solid 1px'\n        }\n        return (\n            <Grid item xs={2} style={rightBorderStyle} spacing={5}>\n                {this.renderSideTabs('INFORMATION', this.informationTabs)}\n                {this.renderSideTabs('ACCOUNT', this.accountTabs)}\n                {this.renderSideTabs('ACTIVITIES', this.activitiesTabs)}\n            </Grid>\n        );\n    }\n\n    renderSideTabs(label: string, tabList: any[]): JSX.Element {\n        return (\n            <div className='sub-section'>\n                <div className='light-text'>{label}</div>\n                <TextTab\n                    tabList={tabList}\n                    selectedTab={this.state.selectedTab}\n                    orientation='vertical'\n                    tabLabel={(index: number) => {\n                        return (\n                            <div style={{width: '100%'}}>\n                                <div className='header-3' style={{margin: '6px 0'}}>\n                                    {tabList[index].label}\n                                </div>\n                            </div>\n                        );\n                    }}\n                    setSelectedTab={(value: number) => {\n                        this.setState({selectedTab: value});\n                    }} />\n            </div>\n        );\n    }\n\n    renderMainContent(): JSX.Element {\n        return (\n            <Grid item xs={10} className='small-section'>\n                {this.state.client ? (\n                    this.state.selectedTab == 1 ? (\n                        <BasicInformationSection client={this.state.client} />\n                    ) : this.state.selectedTab == 2 ? (\n                        <ContactsAndBranchesSection client={this.state.client} />\n                    ) : this.state.selectedTab == 3 ? (\n                        <MemberFieldsSection client={this.state.client} />\n                    ) : this.state.selectedTab == 4 ? (\n                        <ServicingInstructionsSection client={this.state.client} />\n                    ) : this.state.selectedTab == 5 ? (\n                        <HMOInformationSection client={this.state.client} history={this.props.history} />\n                    ) : this.state.selectedTab == 6 ? (\n                        <MembersSection client={this.state.client} />\n                    ) : this.state.selectedTab == 7 ? (\n                        <HistorySection client={this.state.client} />\n                    ) : this.state.selectedTab == 8 ? (\n                        <DocumentsSection client={this.state.client} />\n                    ) : this.state.selectedTab == 9 ? (\n                        <AuditLogsSection client={this.state.client} />\n                    ) : null\n                ) : (\n                    <Loading height='10rem'/>\n                )}\n                \n            </Grid>\n        );\n    }\n}","export class GlobalFunction {\n\n    static formatNumber(num: number) {\n        return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n      }\n\n\n    static getIntials(text: string) {\n        var initials = '';\n        var wordArray = text.split(' ');\n        for (var i = 0; i < wordArray.length; i++) {\n            initials += wordArray[i].substring(0,1).toUpperCase() + '.';\n        }\n        return initials;\n    }\n\n    static toCommonDateString(date: Date) {\n        if (date) {\n            const monthNames = [\n                \"January\", \"February\", \"March\",\n                \"April\", \"May\", \"June\", \"July\",\n                \"August\", \"September\", \"October\",\n                \"November\", \"December\"\n            ];\n            const day = date.getDate();\n            const monthIndex = date.getMonth();\n            const year = date.getFullYear();\n            return (monthNames[monthIndex] + \" \" + day + \", \" + year);\n        }\n\n        return \"\";\n    }\n\n    static getAge(birthDate: any) {\n        if (birthDate) {\n            var ageInMillis = Date.now() - birthDate;\n            return Math.abs(new Date(ageInMillis).getUTCFullYear() - 1970);\n        }\n\n        return null;\n    }\n\n    static getRandomValue() {\n        return Math.random().toString(36).substr(2, 6);\n    }\n}","import * as React from 'react';\nimport {\n  Grid,\n  Typography,\n  Paper,\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from '@material-ui/core/';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\n\nconst hmoitemStyles = makeStyles({\n  hmoname: {\n    fontSize: '11px',\n    fontWeight: 200,\n    color: 'rgba(39, 46, 76, 0.5)',\n    textTransform: 'uppercase',\n    paddingRight: 16,\n  },\n  hmovalue: {\n    fontSize: '0.75rem',\n    fontWeight: 600,\n    color: 'rgb(39, 46, 76)',\n  },\n  hmovaluelink: {\n    fontSize: '0.75rem',\n    fontWeight: 600,\n    color: 'rgb(39, 46, 76)',\n    textDecoration: 'underline',\n    lineHeight: 1.25,\n  },\n});\n\ninterface HMOItemProps {\n  name?: string;\n  value?: string;\n  link?: string;\n}\n\nconst HMOItem: React.FC<HMOItemProps> = (props: HMOItemProps): JSX.Element => {\n  const classes = hmoitemStyles(props);\n\n  return (\n    <Grid\n      container\n      alignItems=\"center\"\n      style={{ paddingTop: 4, paddingBottom: 4 }}\n    >\n      <Grid item xs={5}>\n        <Typography className={classes.hmoname}>{props.name}</Typography>\n      </Grid>\n      <Grid item xs={7}>\n        {props.link ? (\n          <Link to={props.link} className={classes.hmovaluelink}>\n            {props.value}\n          </Link>\n        ) : (\n          <Typography className={classes.hmovalue}>{props.value}</Typography>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\ninterface HMOInformationProps {\n  memberData?: any;\n  clientData?: any;\n  memberDependents: any[];\n  contractId?: string;\n  contractName?: string;\n  MBL?: string;\n\tABL?: string;\n\tPEC?: string;\n}\n\nconst hmoinfoStyles = makeStyles(theme => ({\n  subtitle: {\n    fontSize: '1.125rem',\n    fontWeight: 600,\n  },\n  hmocheckboxlabel: {\n    fontSize: '0.75rem',\n    color: 'rgb(39, 46, 76)',\n  },\n  hmographsubtitle: {\n    fontSize: '0.75rem',\n    textTransform: 'uppercase',\n    color: 'rgb(39, 46, 76, 0.6)',\n    marginBottom: 16,\n  },\n  hmodependentsbox: {\n    height: 175,\n    borderRadius: 0,\n    overflow: 'auto',\n    boxShadow: '0px 3px 6px #272E4C19',\n    padding: 0,\n  },\n  hmoremarksbox: {\n    height: 175,\n    borderRadius: 8,\n    backgroundColor: '#FFFFFF',\n    overflow: 'hidden',\n    border: '1px solid #272E4C4D',\n  },\n  hmodependentsbox_link: {\n    color: 'rgb(39, 46, 76)',\n  },\n  change_status_link: {\n    color: '#0D5E40',\n    cursor: 'pointer',\n    fontSize: '13px',\n    textDecoration: 'underline',\n  },\n  icons: {\n    color: '#0D5E40',\n    cursor: 'pointer',\n    fontSize: '13px',\n  },\n  popper: {\n    top: '4px',\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.9em',\n      width: '3em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '0 1em 1em 1em',\n        borderColor: `transparent transparent ${theme.palette.background.paper} transparent`,\n      },\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.9em',\n      width: '3em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 0 1em',\n        borderColor: `${theme.palette.background.paper} transparent transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.9em',\n      height: '3em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 1em 0',\n        borderColor: `transparent ${theme.palette.background.paper} transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.9em',\n      height: '3em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 0 1em 1em',\n        borderColor: `transparent transparent transparent ${theme.palette.background.paper}`,\n      },\n    },\n  },\n  arrow: {\n    position: 'absolute',\n    fontSize: 7,\n    width: '3em',\n    height: '3em',\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n    },\n  },\n  paper: {\n    padding: '15px',\n    width: 110,\n  },\n  status: {\n    padding: '5px',\n    cursor: 'pointer',\n  },\n}));\n\nexport const HMOInformation: React.FC<HMOInformationProps> = (\n  props: HMOInformationProps,\n): JSX.Element => {\n  const classes = hmoinfoStyles(props);\n  const { memberData, memberDependents, clientData, contractId, contractName , MBL, ABL, PEC} = props;\n  \n  function isValidDate(date: string) {\n    const d = new Date(date);\n    return d instanceof Date && !isNaN(d.getTime());\n  }\n  \n  return (\n    <Grid container>\n      <Grid item xs={12} md={6} style={{ paddingTop: 0, paddingBottom: 0 }}>\n        <HMOItem name=\"Member Account No.\" value=\"-\" />\n        <HMOItem\n          name=\"Member ID\"\n          value={memberData && memberData.member_id ? memberData.member_id : '-'}\n        />\n        <HMOItem\n          name=\"Contract\"\n          value={contractName ? contractName : '-'}\n          link={contractId ? '/membership/member-contract/' + contractId : '#'}\n        />\n        <HMOItem\n          name=\"Effectivity Date\"\n          value={\n            memberData && isValidDate(memberData.effectivity_date)\n              ? moment(memberData.effectivity_date).format('MMMM D, YYYY')\n              : '-'\n          }\n        />\n        <HMOItem name=\"Contract Renewal Date\" value=\"-\" />\n        <HMOItem\n          name=\"Contract Expiration Date\"\n          value={\n            memberData && isValidDate(memberData.termination_date)\n              ? moment(memberData.termination_date).format('MMMM D, YYYY')\n              : '-'\n          }\n        />\n        <HMOItem\n          name=\"VIP Member\"\n          value={memberData ? (memberData.is_vip ? 'Yes' : 'No') : '-'}\n        />\n      </Grid>\n      <Grid item xs={12} md={6} style={{ paddingTop: 0, paddingBottom: 0 }}>\n        <HMOItem\n          name=\"Type\"\n          value={memberData && memberData.member_type ? memberData.member_type : '-'}\n        />\n        <HMOItem\n          name=\"Plan Type\"\n          value={memberData && memberData.plan_type ? memberData.plan_type : '-'}\n        />\n        <HMOItem name=\"MBL\" value={MBL ? MBL : '-'} />\n        <HMOItem name=\"ABL\" value={ABL ? ABL : '-'} />\n        <HMOItem name=\"PEC\" value={PEC ? PEC : '-'} />\n        <HMOItem\n          name=\"Philhealth Rider\"\n          value={memberData ? (memberData.is_philhealth_rider ? 'Yes' : 'No') : '-'}\n        />\n        <HMOItem name=\"Batch Process No.\" value=\"-\" />\n      </Grid>\n      <Grid item xs={12} md={6} style={{ paddingTop: 0, paddingBottom: 0 }}>\n        <HMOItem\n          name=\"Date of Birth\"\n          value={\n            memberData && isValidDate(memberData.date_of_birth)\n              ? moment(memberData.date_of_birth).format('MMMM D, YYYY')\n              : '-'\n          }\n        />\n        <HMOItem\n          name=\"Age\"\n          value={\n            memberData && isValidDate(memberData.date_of_birth)\n              ? '' + moment().diff(memberData.date_of_birth, 'years', false)\n              : '-'\n          }\n        />\n        <HMOItem name=\"Gender\" value={memberData ? memberData.gender : '-'} />\n      </Grid>\n      <Grid item xs={12} md={6} style={{ paddingTop: 0, paddingBottom: 0 }}>\n        <HMOItem name=\"Civil Status\" value={memberData ? memberData.civil_status : '-'} />\n        <HMOItem\n          name=\"Title/Prefix\"\n          value={memberData && memberData.title ? memberData.title : '-'}\n        />\n        <HMOItem\n          name=\"Suffix\"\n          value={memberData && memberData.suffix ? memberData.suffix : '-'}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={6}\n        style={{ paddingTop: 48, paddingBottom: 48, paddingRight: 12 }}\n      >\n        <Typography className={classes.hmographsubtitle}>\n          Enrolled Dependents\n        </Typography>\n        <Paper className={classes.hmodependentsbox}>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Dependent Name</TableCell>\n                <TableCell>Relationship</TableCell>\n                <TableCell>Status</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {memberDependents && memberDependents.length > 0 ? (\n                memberDependents.map((row, index) => (\n                  <TableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Link to={'#'} className={classes.hmodependentsbox_link}>\n                        {row['first_name'] +\n                          ' ' +\n                          (row['middle_name']\n                            ? row['middle_name'].charAt(0) + '. '\n                            : '') +\n                          row['last_name']}\n                      </Link>\n                    </TableCell>\n                    <TableCell>{row['relationship_to_principal']}</TableCell>\n                    <TableCell>{row['member_status']}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: 'center' }}\n                    colSpan={3}\n                  >\n                    No enrolled dependents\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={6} style={{ paddingTop: 48, paddingBottom: 48 }}>\n        <Typography className={classes.hmographsubtitle}>Remarks</Typography>\n        <Box className={classes.hmoremarksbox}></Box>\n      </Grid>\n      <Grid item xs={12} md={6} style={{ paddingTop: 0, paddingBottom: 0 }}>\n        <HMOItem name=\"Corporate Acct. Name\" value={clientData && clientData['registered_name'] ? clientData['registered_name'] : '-'} />\n        <HMOItem name=\"Card Name\" value={clientData && clientData['name_on_card'] ? clientData['name_on_card'] : '-'} />\n        <HMOItem name=\"Cost Center\" value={memberData && memberData.cost_center ? memberData.cost_center : '-'} />\n        <HMOItem name=\"Financial Code\" value={memberData && memberData.financial_code ? memberData.financial_code : '-'} />\n        <HMOItem name=\"Site Assigned\" value={memberData && memberData.site ? memberData.site : '-'} />\n        <HMOItem name=\"Floor\" value={memberData && memberData.floor ? memberData.floor : '-'} />\n        <HMOItem name=\"Site Address\" value={memberData && memberData.site_address ? memberData.site_address : '-'} />\n      </Grid>\n      <Grid item xs={12} md={6} style={{ paddingTop: 0, paddingBottom: 0 }}>\n        <HMOItem name=\"Designation\" value={memberData && memberData.designation ? memberData.designation : '-'} />\n        <HMOItem name=\"Job Grade/Level\" value={memberData && memberData.job_lvl ? memberData.job_lvl : '-'} />\n        <HMOItem name=\"Supervisor\" value={memberData && memberData.supervisor ? memberData.supervisor : '-'} />\n        <HMOItem\n          name=\"Date of Hire\"\n          value={\n            memberData && isValidDate(memberData.hire_date)\n              ? moment(memberData.hire_date).format('MMMM D, YYYY')\n              : '-'\n          }\n        />\n        <HMOItem name=\"Expat\" value=\"-\" />\n      </Grid>\n    </Grid>\n  );\n};\n\nHMOInformation.defaultProps = {\n  memberData: {},\n  memberDependents: [],\n  clientData: {},\n  contractId: '',\n  contractName: '',\n  MBL: '',\n\tABL: '',\n\tPEC: '',\n};\n","//#region Global Imports\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Table,\n  TableSelection,\n  TableHeaderRow,\n  TableFilterRow,\n  Toolbar,\n  SearchPanel,\n  PagingPanel,\n  TableBandHeader,\n} from '@devexpress/dx-react-grid-material-ui';\nimport { Paper } from '@material-ui/core/';\nimport {\n  PagingState,\n  IntegratedPaging,\n  SelectionState,\n  IntegratedSelection,\n  FilteringState,\n  IntegratedFiltering,\n  SortingState,\n  IntegratedSorting,\n  SearchState,\n  DataTypeProvider,\n} from '@devexpress/dx-react-grid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSearch,\n  faCheckSquare,\n  faSort,\n  faSortUp,\n  faSortDown,\n  faExclamationCircle,\n  faFileUpload,\n} from '@fortawesome/free-solid-svg-icons';\nimport { makeStyles } from '@material-ui/styles';\nimport * as MaterialUI from '@material-ui/core';\nimport moment from 'moment';\n//import { Components } from '@hims/core';\n//#endregion Global Imports\n\nlet radioSelected = false;\nlet selectedValue = '';\nlet clickCell = false;\nlet clickValue = {};\n\nconst cellSelectStyles = makeStyles({\n  select: {\n    backgroundColor: 'transparent',\n  },\n});\n\nconst textFieldStyles = makeStyles({\n  root: {\n    '& div.MuiInputBase-root': {\n      backgroundColor: 'transparent',\n    },\n  },\n});\n\nconst checkboxStyles = makeStyles({\n  root: {\n    '&.Mui-checked': {\n      color: '#3AB77D',\n    },\n  },\n});\n\nconst Select = ({ id, value, items }: any) => {\n  const cellSelectClasses = cellSelectStyles();\n  return (\n    <MaterialUI.Select\n      id={id}\n      classes={cellSelectClasses}\n      value={value}\n      style={{ width: '100%', backgroundColor: 'transparent' }}\n      renderValue={(selected: any) => {\n        if (selected !== null) {\n          const value: any = items.find((item: any) => {\n            return item.value === selected;\n          });\n          if (value) {\n            return value.name;\n          } else {\n            return '—';\n          }\n        }\n        return '—';\n      }}\n    >\n      {items.map((item: any) => (\n        <MaterialUI.MenuItem key={item.value} value={item.value}>\n          {item.name}\n        </MaterialUI.MenuItem>\n      ))}\n    </MaterialUI.Select>\n  );\n};\n\nconst TableFilterCell = ({\n  filter,\n  onFilter,\n  filteringEnabled,\n  classes,\n}: any) => {\n  if (filteringEnabled) {\n    return (\n      <MaterialUI.TableCell\n        style={{ padding: '0px 10px 8px 10px' }}\n        classes={classes}\n      >\n        <MaterialUI.OutlinedInput\n          classes={classes}\n          style={{ width: '100%' }}\n          value={filter ? filter.value : ''}\n          labelWidth={0}\n          onChange={e =>\n            onFilter(e.target.value ? { value: e.target.value } : null)\n          }\n          placeholder=\"\"\n        />\n      </MaterialUI.TableCell>\n    );\n  } else {\n    // return null;\n    return (\n      <MaterialUI.TableCell\n        style={{ padding: '0px 10px 8px 10px' }}\n        classes={classes}\n      ></MaterialUI.TableCell>\n    );\n  }\n};\n\nconst TableRadio = ({\n  style,\n  selected,\n  onToggle,\n  classes,\n  ...restProps\n}: any) => {\n  return (\n    <MaterialUI.TableCell\n      padding=\"checkbox\"\n      style={style}\n      classes={classes}\n      {...restProps}\n    >\n      <MaterialUI.Radio\n        classes={classes}\n        checked={selected}\n        onClick={e => {\n          e.stopPropagation();\n          onToggle();\n        }}\n      />\n    </MaterialUI.TableCell>\n  );\n};\n\nconst TableCheckBox = ({\n  style,\n  selected,\n  onToggle,\n  classes,\n  ...restProps\n}: any) => {\n  return (\n    <MaterialUI.TableCell\n      padding=\"checkbox\"\n      style={style}\n      classes={classes}\n      {...restProps}\n    >\n      <MaterialUI.Checkbox\n        icon={<FontAwesomeIcon icon={faCheckSquare} />}\n        checkedIcon={<FontAwesomeIcon icon={faCheckSquare} />}\n        classes={classes}\n        checked={selected}\n        onClick={e => {\n          e.stopPropagation();\n          onToggle();\n        }}\n      />\n    </MaterialUI.TableCell>\n  );\n};\n\nconst TableSearchPanel = ({ value, onValueChange }: any) => {\n  return (\n    <MaterialUI.OutlinedInput\n      value={value ? value : ''}\n      labelWidth={0}\n      onChange={e => onValueChange(e.target.value ? e.target.value : null)}\n      placeholder=\"Search a benefit or benefit category\"\n      fullWidth\n      startAdornment={\n        <MaterialUI.InputAdornment position=\"start\">\n          <FontAwesomeIcon icon={faSearch} />\n        </MaterialUI.InputAdornment>\n      }\n    />\n  );\n};\n\nconst DefaultTableToolbar = ({ children }: any) => {\n  return <MaterialUI.Toolbar disableGutters={true} children={children} />;\n};\n\nconst SortingIcon = ({ direction }: any) =>\n  direction === 'asc' ? (\n    <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortUp} />\n  ) : (\n    <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortDown} />\n  );\n\nconst TableSortLabel = ({ column, onSort, children, direction }: any) => {\n  if (\n    column.sortingEnabled !== undefined &&\n    column.sortingEnabled !== null &&\n    column.sortingEnabled === false\n  ) {\n    return <span>{column.title}</span>;\n  } else {\n    return (\n      <MaterialUI.TableSortLabel hideSortIcon={true} onClick={onSort}>\n        {children}\n        {direction ? (\n          <SortingIcon direction={direction} />\n        ) : (\n          <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSort} />\n        )}\n      </MaterialUI.TableSortLabel>\n    );\n  }\n};\n\nconst EmptyCellFormatter = ({ value }: any) => {\n  if (value === '' || value === undefined || value === null) {\n    return (\n      <FontAwesomeIcon\n        style={{ color: '#FD5451', fontSize: '16px' }}\n        icon={faExclamationCircle}\n      />\n    );\n  } else {\n    return value;\n  }\n};\n\nconst EmptyCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={EmptyCellFormatter} {...props} />\n);\n\nconst RequiredFormatter = ({ row, value }: any) => {\n  if (\n    row['required'] === true &&\n    (value === '' || value === undefined || value === null)\n  ) {\n    return (\n      <FontAwesomeIcon\n        style={{ color: '#FD5451', fontSize: '16px' }}\n        icon={faExclamationCircle}\n      />\n    );\n  } else if (\n    row['required'] === false &&\n    (value === '' || value === undefined || value === null)\n  ) {\n    return 'N/A';\n  } else {\n    return value;\n  }\n};\n\nconst RequiredDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={RequiredFormatter} {...props} />\n);\n\nconst RequiredCheckboxFormatter = ({ column, row, value }: any) => {\n  const classes = checkboxStyles();\n  return (\n    <div>\n      <MaterialUI.FormControlLabel\n        control={\n          <MaterialUI.Checkbox\n            checked={value === true || value === 'true' ? true : false}\n            value={value}\n            style={{ padding: '5px' }}\n            className={classes.root}\n            color=\"primary\"\n            onChange={e => {\n              clickCell = true;\n              clickValue = {\n                value: e.target.checked,\n                name: column['name'],\n                id: row['id'],\n              };\n            }}\n          />\n        }\n        label=\"\"\n      />\n    </div>\n  );\n};\n\nconst RequiredCheckboxDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={RequiredCheckboxFormatter} {...props} />\n);\n\nconst ReadOnlyCheckboxFormatter = ({ value }: any) => {\n  const classes = checkboxStyles();\n  return (\n    <div>\n      <MaterialUI.FormControlLabel\n        control={\n          <MaterialUI.Checkbox\n            checked={value === true || value === 'true' ? true : false}\n            value={value}\n            disabled={true}\n            style={{ padding: '5px' }}\n            className={classes.root}\n            color=\"primary\"\n            onChange={() => {\n            }}\n          />\n        }\n        label=\"\"\n      />\n    </div>\n  );\n};\n\nconst ReadOnlyCheckboxDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={ReadOnlyCheckboxFormatter} {...props} />\n);\n\nconst UploadFileFormatter = ({ column, row }: any) => {\n  const id: string = column['name'] + '_' + row['id'];\n  return (\n    <div\n      id={id}\n      onClick={e => {\n        // e.stopPropagation();\n        console.log('e>', e);\n      }}\n    >\n      <MaterialUI.Typography color=\"textPrimary\" style={{ paddingTop: '5px' }}>\n        <span>\n          <span style={{ paddingRight: '10px', fontSize: '15px' }}>\n            <FontAwesomeIcon icon={faFileUpload} style={{ color: '#0D5E40' }} />\n          </span>\n          <span style={{ textDecoration: 'underline', color: '#0D5E40' }}>\n            Upload File\n          </span>\n        </span>\n      </MaterialUI.Typography>\n    </div>\n  );\n};\n\nconst UploadFileDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={UploadFileFormatter} {...props} />\n);\n\nconst DisapproveRadioFormatter = ({ value }: any) => {\n  const items = [\n    { value: 'approve', label: 'Approve' },\n    { value: 'for confirmation', label: 'For Confirmation' },\n  ];\n  return (\n    <div>\n      <MaterialUI.RadioGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={value}\n        onChange={e => {\n          e.stopPropagation();\n          radioSelected = true;\n          selectedValue = e.target.value;\n        }}\n        row\n      >\n        {items.map((item: any, cnt: number) => (\n          <MaterialUI.FormControlLabel\n            key={cnt}\n            value={item.value}\n            control={<MaterialUI.Radio color=\"primary\" />}\n            label={item.label}\n            labelPlacement=\"end\"\n          />\n        ))}\n      </MaterialUI.RadioGroup>\n    </div>\n  );\n};\n\nconst DisapproveRadioDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={DisapproveRadioFormatter} {...props} />\n);\n\nconst IncompleteRadioFormatter = ({ value }: any) => {\n  const items = [\n    { value: 'approve', label: 'Approve' },\n    { value: 'disapprove', label: 'Disapprove' },\n    { value: 'for confirmation', label: 'For Confirmation' },\n  ];\n  return (\n    <div>\n      <MaterialUI.RadioGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={value}\n        onChange={e => {\n          e.stopPropagation();\n          radioSelected = true;\n          selectedValue = e.target.value;\n        }}\n        row\n      >\n        {items.map((item: any, cnt: number) => (\n          <MaterialUI.FormControlLabel\n            key={cnt}\n            value={item.value}\n            control={<MaterialUI.Radio color=\"primary\" />}\n            label={item.label}\n            labelPlacement=\"end\"\n            onClick={e => {\n              radioSelected = true;\n              console.log('radio button label onclick', e);\n            }}\n            onChange={e => {\n              radioSelected = true;\n              // selectedValue = e.target.value;\n              console.log('radio button label onchange', e);\n            }}\n          />\n        ))}\n      </MaterialUI.RadioGroup>\n    </div>\n  );\n};\n\nconst IncompleteRadioDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={IncompleteRadioFormatter} {...props} />\n);\n\nconst RadioNameFormatter = ({ value }: any) => {\n  const items = [\n    { value: 'match', label: 'Match' },\n    { value: 'not', label: 'Not Match' },\n    { value: 'confirmation', label: 'For Confirmation' },\n  ];\n  console.log('Radio group value: ', value);\n  return (\n    <div>\n      <MaterialUI.RadioGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={value}\n        onChange={e => {\n          e.stopPropagation();\n          radioSelected = true;\n          selectedValue = e.target.value;\n        }}\n        row\n      >\n        {items.map((item: any, cnt: number) => (\n          <MaterialUI.FormControlLabel\n            key={cnt}\n            value={item.value}\n            control={<MaterialUI.Radio color=\"primary\" />}\n            label={item.label}\n            labelPlacement=\"end\"\n            onClick={e => {\n              radioSelected = true;\n              console.log('radio button label onclick', e);\n            }}\n            onChange={e => {\n              radioSelected = true;\n              // selectedValue = e.target.value;\n              console.log('radio button label onchange', e);\n            }}\n          />\n        ))}\n      </MaterialUI.RadioGroup>\n    </div>\n  );\n};\n\nconst RadioDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={RadioNameFormatter} {...props} />\n);\n\nconst ValuesNameFormatter = ({ value }: any) => {\n  const items = [\n    { name: '', value: '' },\n    { name: 'Married', value: 'married' },\n    { name: 'Single', value: 'single' },\n    { name: 'Widowed', value: 'widowed' },\n    { name: 'Annulled', value: 'annulled' },\n  ];\n  return <Select items={items} value={value} />;\n};\n\nconst ValuesNameDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={ValuesNameFormatter} {...props} />\n);\n\nconst SystemNameFormatter = ({ value }: any) => {\n  const items = [\n    { name: 'First Name', value: 'first_name' },\n    { name: 'Middle Name', value: 'middle_name' },\n    { name: 'Last Name', value: 'last_name' },\n    { name: 'Birthday', value: 'birthday' },\n    { name: 'Civil Status', value: 'civil_status' },\n    { name: 'Gender', value: 'gender' },\n    { name: 'Plan Type', value: 'plan_type' },\n    { name: 'Type', value: 'type' },\n  ];\n\n  return <Select items={items} value={value} />;\n};\n\nconst SystemNameDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={SystemNameFormatter} {...props} />\n);\n\nconst DataFormatter = ({ value }: any) => {\n  const items = [\n    { name: 'Civil Status', value: 'civil_status' },\n    { name: 'Gender', value: 'gender' },\n  ];\n  return <Select items={items} value={value} />;\n};\n\nconst DataDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={DataFormatter} {...props} />\n);\n\nconst NumberFormatter = ({ value }: any) => {\n  const textFieldClasses = textFieldStyles();\n  return (\n    <MaterialUI.TextField\n      value={value}\n      type={'number'}\n      classes={textFieldClasses}\n    />\n  );\n};\n\nconst NumberDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={NumberFormatter} {...props} />\n);\n\nconst TextFormatter = ({ value }: any) => {\n  const textFieldClasses = textFieldStyles();\n  return <MaterialUI.TextField value={value} classes={textFieldClasses} />;\n};\n\nconst TextDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={TextFormatter} {...props} />\n);\n\nconst DateFormatter = ({ value }: any) => {\n  let text = value;\n  if (text) {\n    try {\n      text = moment(value).format('MMM DD, YYYY');\n    } catch (error) {\n      text = value;\n    }\n  } else {\n    text = '';\n  }\n\n  return text;\n};\n\nconst DateCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={DateFormatter} {...props} />\n);\n\nconst TimeFormatter = ({ value }: any) => {\n  let text = value;\n  if (text) {\n    try {\n      text = moment(value).format('hh:mm:ss A');\n    } catch (error) {\n      text = value;\n    }\n  } else {\n    text = '';\n  }\n\n  return text;\n};\n\nconst TimeCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={TimeFormatter} {...props} />\n);\n\ninterface TableComponentProps {\n  rows: any[];\n  columns: any[];\n  columnFilteringEnabled?: boolean;\n  columnExtensions?: any[];\n  filterExtensions?: any[];\n  formattedColumns?: any;\n  columnBands?: any[] | null;\n  singleSelect?: boolean;\n  disableSearch?: boolean;\n  disablePaging?: boolean;\n  disableSelect?: boolean;\n  disableFilter?: boolean;\n  disableSort?: boolean;\n  showSelectionColumn?: boolean;\n  toolbarType?: string | null;\n  id: string;\n  message: string;\n  defaultFilter?: any[];\n  onClickRow: (row: number[]) => void;\n  onSelectedRadio?: (row: number, value: string) => void;\n  onFilterChange?: (response: any) => void;\n  onSortingChange?: (response: any) => void;\n  onClickCell?: (row: any) => void;\n  defaultSort?: any[];\n  query?: string;\n}\n\nexport const TableComponent: React.FC<TableComponentProps> = (\n  props: TableComponentProps,\n): JSX.Element => {\n  const {\n    columns,\n    formattedColumns,\n    singleSelect,\n    disablePaging,\n    disableSearch,\n    disableSelect,\n    disableSort,\n    disableFilter,\n    toolbarType,\n    columnExtensions,\n    columnBands,\n    id,\n    showSelectionColumn,\n    query,\n  } = props;\n  const [selection, setSelection] = useState<number[]>([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [pageSize, setPageSize] = useState(5);\n  const [pageSizes] = useState([5, 10, 15, 0]);\n  const [rows, setRows] = useState(props.rows);\n  useEffect(() => {\n    setRows(props.rows);\n  }, [props.rows]);\n\n  const dataTypeProviders: any[] = [];\n\n  function handleSelectionChange(newSelection: any[]) {\n    console.log('here click row');\n    if (props.onClickRow) {\n      // selectedRow = newSelection[0];\n      if (!radioSelected && !clickCell) {\n        console.log('onclickrow');\n        props.onClickRow(newSelection);\n      } else if (radioSelected) {\n        console.log('radioselected', newSelection);\n        if (props.onSelectedRadio)\n          props.onSelectedRadio(newSelection[0], selectedValue);\n        radioSelected = false;\n      } else if (clickCell) {\n        console.log(' here !!! >>>', props.onClickCell);\n        if (props.onClickCell) props.onClickCell(clickValue);\n        clickCell = false;\n        clickValue = {};\n      }\n    } else {\n      if (singleSelect) {\n        const lastSelected = newSelection.find(\n          (selected: number) => selection.indexOf(selected) === -1,\n        );\n\n        console.log(newSelection, selection, lastSelected);\n        if (lastSelected !== undefined) {\n          setSelection([lastSelected]);\n        }\n      } else {\n        setSelection(newSelection);\n      }\n    }\n  }\n  if (\n    formattedColumns !== undefined &&\n    Object.keys(formattedColumns).length > 0\n  ) {\n    if (formattedColumns['number'] !== undefined) {\n      dataTypeProviders.push(\n        <NumberDataTypeProvider for={formattedColumns.number} />,\n      );\n    }\n    if (formattedColumns['text'] !== undefined) {\n      dataTypeProviders.push(\n        <TextDataTypeProvider for={formattedColumns.text} />,\n      );\n    }\n    if (formattedColumns['system_name'] !== undefined) {\n      dataTypeProviders.push(\n        <SystemNameDataTypeProvider for={formattedColumns.system_name} />,\n      );\n    }\n    if (formattedColumns['data_name'] !== undefined) {\n      dataTypeProviders.push(\n        <DataDataTypeProvider for={formattedColumns.data_name} />,\n      );\n    }\n    if (formattedColumns['value_name'] !== undefined) {\n      dataTypeProviders.push(\n        <ValuesNameDataTypeProvider for={formattedColumns.value_name} />,\n      );\n    }\n    if (formattedColumns['required_columns'] !== undefined) {\n      dataTypeProviders.push(\n        <EmptyCellDataTypeProvider for={formattedColumns.required_columns} />,\n      );\n    }\n    if (formattedColumns['radio'] !== undefined) {\n      dataTypeProviders.push(\n        <RadioDataTypeProvider for={formattedColumns.radio} />,\n      );\n    }\n    if (formattedColumns['incomplete_radio'] !== undefined) {\n      dataTypeProviders.push(\n        <IncompleteRadioDataTypeProvider\n          for={formattedColumns.incomplete_radio}\n        />,\n      );\n    }\n    if (formattedColumns['disapprove_action'] !== undefined) {\n      dataTypeProviders.push(\n        <DisapproveRadioDataTypeProvider\n          for={formattedColumns.disapprove_action}\n        />,\n      );\n    }\n    if (formattedColumns['required_checkbox'] !== undefined) {\n      dataTypeProviders.push(\n        <RequiredCheckboxDataTypeProvider\n          for={formattedColumns.required_checkbox}\n        />,\n      );\n    }\n    if (formattedColumns['readonly_checkbox'] !== undefined) {\n      dataTypeProviders.push(\n        <ReadOnlyCheckboxDataTypeProvider\n          for={formattedColumns.readonly_checkbox}\n        />,\n      );\n    }\n    if (formattedColumns['upload_file'] !== undefined) {\n      dataTypeProviders.push(\n        <UploadFileDataTypeProvider\n          for={formattedColumns.upload_file}\n          {...props}\n        />,\n      );\n    }\n    if (formattedColumns['required_cell'] !== undefined) {\n      dataTypeProviders.push(\n        <RequiredDataTypeProvider\n          for={formattedColumns.required_cell}\n          {...props}\n        />,\n      );\n    }\n    if (formattedColumns['date'] !== undefined) {\n      dataTypeProviders.push(\n        <DateCellDataTypeProvider for={formattedColumns.date} />,\n      );\n    }\n    if (formattedColumns['time'] !== undefined) {\n      dataTypeProviders.push(\n        <TimeCellDataTypeProvider for={formattedColumns.time} />,\n      );\n    }\n  }\n\n  let toolbar = DefaultTableToolbar;\n\n  return (\n    <Paper id={id}>\n      <Grid rows={rows} columns={columns}>\n        {dataTypeProviders}\n        {/* Need to initialize paging state before paging panel */}\n        {!disablePaging ? (\n          <PagingState\n            currentPage={currentPage}\n            onCurrentPageChange={setCurrentPage}\n            pageSize={pageSize}\n            onPageSizeChange={setPageSize}\n          />\n        ) : null}\n\n        {!disablePaging ? <IntegratedPaging /> : null}\n\n        {!disableSearch || query ? <SearchState value={query} /> : null}\n\n        {!disableSort && props.defaultSort !== undefined ? (\n          <SortingState\n            defaultSorting={[]}\n            sorting={props.defaultSort !== undefined ? props.defaultSort : []}\n            onSortingChange={e => {\n              console.log('onSortingChange');\n              if (props.onSortingChange) {\n                props.onSortingChange(e);\n              }\n              if (props.onFilterChange) {\n                props.onFilterChange(props.defaultFilter);\n              }\n            }}\n          />\n        ) : !disableSort ? (\n          <SortingState\n            defaultSorting={[]}\n            onSortingChange={e => {\n              console.log('onSortingChange');\n              if (props.onSortingChange) {\n                props.onSortingChange(e);\n              }\n              if (props.onFilterChange) {\n                props.onFilterChange(props.defaultFilter);\n              }\n            }}\n          />\n        ) : <SortingState />}\n\n        {!disableSort ? <IntegratedSorting /> : null}\n\n        {!disableSelect || !showSelectionColumn ? (\n          <SelectionState\n            selection={selection}\n            onSelectionChange={handleSelectionChange}\n          />\n        ) : null}\n        {!disableSelect ? <IntegratedSelection /> : null}\n\n        {!disableFilter ? (\n          <FilteringState\n            defaultFilters={[]}\n            filters={\n              props.defaultFilter !== undefined ? props.defaultFilter : []\n            }\n            columnFilteringEnabled={props.columnFilteringEnabled}\n            columnExtensions={props.filterExtensions}\n            onFiltersChange={props.onFilterChange}\n          />\n        ) : null}\n\n        {!disableFilter ? <IntegratedFiltering /> : null}\n\n        <Table\n          columnExtensions={columnExtensions}\n          messages={{ noData: props.message }}\n        />\n\n        {!disableSelect && !showSelectionColumn ? (\n          <TableSelection\n            showSelectAll={!singleSelect ? true : false}\n            cellComponent={!singleSelect ? TableCheckBox : TableRadio}\n            headerCellComponent={TableCheckBox}\n          />\n        ) : !showSelectionColumn ? (\n          <TableSelection\n            selectByRowClick\n            showSelectionColumn={false}\n            cellComponent={!singleSelect ? TableCheckBox : TableRadio}\n            headerCellComponent={TableCheckBox}\n          />\n        ) : null}\n        <TableHeaderRow\n          showSortingControls={!disableSort}\n          sortLabelComponent={TableSortLabel}\n        />\n        {!disableFilter ? (\n          <TableFilterRow cellComponent={TableFilterCell} />\n        ) : null}\n        {columnBands ? <TableBandHeader columnBands={columnBands} /> : null}\n\n        {!disableSearch || toolbarType ? (\n          <Toolbar rootComponent={toolbar} />\n        ) : null}\n        {!disableSearch ? (\n          <SearchPanel inputComponent={TableSearchPanel} />\n        ) : null}\n\n        {!disablePaging ? <PagingPanel pageSizes={pageSizes} /> : null}\n      </Grid>\n    </Paper>\n  );\n};\n\nTableComponent.defaultProps = {\n  rows: [],\n  columns: [],\n  columnExtensions: [],\n  filterExtensions: [],\n  columnBands: null,\n  formattedColumns: {},\n  singleSelect: false,\n  disableSearch: false,\n  disablePaging: false,\n  disableSelect: false,\n  disableFilter: false,\n  disableSort: false,\n  toolbarType: null,\n  defaultFilter: [],\n  showSelectionColumn: false,\n  columnFilteringEnabled: true,\n  id: 'table-1',\n  message: 'No available data',\n  query: '',\n};\n","import * as React from 'react';\nimport { Grid, Tabs, Tab } from '@material-ui/core/';\nimport { useState } from 'react';\n\nimport { TableComponent } from 'Components/UI/TableComponent';\n\ninterface DocumentsProps {\n  all_documents_table: any;\n  uploaded_documents_table: any;\n  missing_documents_table: any;\n  documents_tab: any;\n  all_data: any;\n  all_filter: any;\n  all_sort: any;\n  uploaded_filter: any;\n  uploaded_sort: any;\n  missing_filter: any;\n  missing_sort: any;\n  applySortFilter: (params: any, tab: number, type: string) => void;\n}\n\nexport const Documents: React.FC<DocumentsProps> = (\n  props: DocumentsProps,\n): JSX.Element => {\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  function handleClickRow2() {\n\n  }\n\n  function handleFilter(filter: any) {\n    props.applySortFilter(filter, selectedTab, 'filter');\n  }\n\n  function handleSort(sorting: any) {\n    props.applySortFilter(sorting, selectedTab, 'sort');\n  }\n  \n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Tabs\n          value={selectedTab}\n          onChange={(_event: React.ChangeEvent<{}>, value: number) => {\n            setSelectedTab(value);\n          }}\n          aria-label=\"documenst tab\"\n        >\n          {props.documents_tab.map(data => (\n            <Tab\n              label={data.label + ' (' + data.count + ')'}\n              id={'view_member_documents_tab_' + data.count}\n              aria-controls={'verify-member-tabpanel-' + data.count}\n            />\n          ))}\n        </Tabs>\n      </Grid>\n      <Grid item xs={12} style={{ paddingLeft: '8px' }}>\n        {selectedTab === 0 ? (\n          <TableComponent\n            id=\"document_all_table\"\n            rows={\n              Object.keys(props.all_documents_table).length > 0\n                ? props.all_documents_table['rows']\n                : []\n            }\n            columns={\n              Object.keys(props.all_documents_table).length > 0\n                ? props.all_documents_table['columns']\n                : []\n            }\n            message=\"No available data\"\n            onClickRow={handleClickRow2}\n            disableSelect\n            disableSearch\n            columnFilteringEnabled={false}\n            formattedColumns={\n              Object.keys(props.all_documents_table).length > 0\n                ? props.all_documents_table['formattedColumns']\n                : {}\n            }\n            columnExtensions={\n              Object.keys(props.all_documents_table).length > 0\n                ? props.all_documents_table['columnExtensions']\n                : []\n            }\n            filterExtensions={\n              Object.keys(props.all_documents_table).length > 0\n                ? props.all_documents_table['filterExtensions']\n                : []\n            }\n            onFilterChange={handleFilter}\n            onSortingChange={handleSort}\n            defaultFilter={props.all_filter}\n            defaultSort={props.all_sort}\n          />\n        ) : selectedTab === 1 ? (\n          <TableComponent\n            id=\"document_uploaded_table\"\n            rows={\n              Object.keys(props.uploaded_documents_table).length > 0\n                ? props.uploaded_documents_table['rows']\n                : []\n            }\n            columns={\n              Object.keys(props.uploaded_documents_table).length > 0\n                ? props.uploaded_documents_table['columns']\n                : []\n            }\n            message=\"No available data\"\n            onClickRow={handleClickRow2}\n            disableSelect\n            disableSearch\n            columnFilteringEnabled={false}\n            formattedColumns={\n              Object.keys(props.uploaded_documents_table).length > 0\n                ? props.uploaded_documents_table['formattedColumns']\n                : {}\n            }\n            columnExtensions={\n              Object.keys(props.uploaded_documents_table).length > 0\n                ? props.uploaded_documents_table['columnExtensions']\n                : []\n            }\n            filterExtensions={\n              Object.keys(props.uploaded_documents_table).length > 0\n                ? props.uploaded_documents_table['filterExtensions']\n                : []\n            }\n            onFilterChange={handleFilter}\n            onSortingChange={handleSort}\n            defaultFilter={props.uploaded_filter}\n            defaultSort={props.uploaded_sort}\n          />\n        ) : selectedTab === 2 ? (\n          <TableComponent\n            id=\"document_missing_table\"\n            rows={\n              Object.keys(props.missing_documents_table).length > 0\n                ? props.missing_documents_table['rows']\n                : []\n            }\n            columns={\n              Object.keys(props.missing_documents_table).length > 0\n                ? props.missing_documents_table['columns']\n                : []\n            }\n            message=\"No available data\"\n            onClickRow={handleClickRow2}\n            disableSelect\n            disableSearch\n            columnFilteringEnabled={false}\n            formattedColumns={\n              Object.keys(props.missing_documents_table).length > 0\n                ? props.missing_documents_table['formattedColumns']\n                : {}\n            }\n            columnExtensions={\n              Object.keys(props.missing_documents_table).length > 0\n                ? props.missing_documents_table['columnExtensions']\n                : []\n            }\n            filterExtensions={\n              Object.keys(props.missing_documents_table).length > 0\n                ? props.missing_documents_table['filterExtensions']\n                : []\n            }\n            onFilterChange={handleFilter}\n            onSortingChange={handleSort}\n            defaultFilter={props.missing_filter}\n            defaultSort={props.missing_sort}\n          />\n        ) : null}\n      </Grid>\n    </Grid>\n  );\n};\n\nDocuments.defaultProps = {\n  all_data: {},\n  all_documents_table: {},\n  uploaded_documents_table: {},\n  missing_documents_table: {},\n  documents_tab: [],\n  all_filter: [],\n  uploaded_filter: [],\n  missing_filter: [],\n  all_sort: [],\n  uploaded_sort: [],\n  missing_sort: [],\n};\n","import * as React from 'react';\nimport {\n    Grid,\n    Box,\n    Avatar,\n} from '@material-ui/core/';\nimport clsx from 'clsx';\nimport { Loading } from 'Pages/CustomerCarePage/Components/Loading';\nimport { GlobalFunction } from 'Components/UI/GlobalFunction';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { HMOInformation } from './HMOInformation';\nimport { Documents } from './Documents';\nimport { TextTab } from 'Pages/CustomerCarePage/Components/TextTab';\n\nimport '@hims/core/dist/index.css';\n\ninterface IProps {\n    history: any;\n    memberNumber: string;\n}\n\ninterface IState {\n    loading: boolean;\n    selectedTab: number;\n    clientData: any;\n    contractId: string;\n    contractName: string;\n    memberData: any;\n    memberDependents: any[];\n    documents_tab: any;\n    documents_all_data: any;\n    documents_all_table: any;\n    documents_uploaded_table: any;\n    documents_missing_table: any;\n    documents_all_filter: any;\n    documents_uploaded_filter: any;\n    documents_missing_filter: any;\n    documents_all_sort: any;\n    documents_uploaded_sort: any;\n    documents_missing_sort: any;\n    MBL: string;\n    ABL: string;\n    PEC: string;\n}\n\ninterface Document {\n    name: string,\n    type: string,\n    url: string\n}\n\nexport class MemberProfileSection extends React.Component<IProps, IState> {\n\n    memberTabs = [\n        { value: 0, label: 'HMO Information' },\n        { value: 1, label: 'Documents' },\n        { value: 2, label: 'History' },\n    ];\n    \n    constructor(props: IProps) {\n        super(props);\n\n        const documents_tab: any = [\n        {\n            label: 'All',\n            count: 127,\n        },\n        {\n            label: 'Uploaded Documents',\n            count: 4,\n        },\n        {\n            label: 'Missing Documents',\n            count: 4,\n        },\n        ];\n\n        this.state = {\n            loading: false,\n            selectedTab: 0,\n            clientData: null,\n            contractId: '',\n            contractName: '',\n            memberData: null,\n            memberDependents: [],\n            documents_all_data: [],\n            documents_tab: documents_tab,\n            documents_all_table: {},\n            documents_uploaded_table: {},\n            documents_missing_table: {},\n            documents_all_filter: [],\n            documents_uploaded_filter: [],\n            documents_missing_filter: [],\n            documents_all_sort: [],\n            documents_uploaded_sort: [],\n            documents_missing_sort: [],\n            MBL: '',\n            ABL: '',\n            PEC: '',\n        };\n\n        this.setLoading = this.setLoading.bind(this);\n        this.generateDocumentData = this.generateDocumentData.bind(this);\n        this.handleClickCell = this.handleClickCell.bind(this);\n        this.handleSaveDocument = this.handleSaveDocument.bind(this);\n        this.setFieldValue = this.setFieldValue.bind(this);\n        this.handleDocumentFilter = this.handleDocumentFilter.bind(this);\n    }\n\n    reset = () => {\n        this.setState({\n            loading: false,\n            selectedTab: 0,\n        });\n    };\n\n    setselectedTab = (tab: number) => {\n        this.setState({\n            selectedTab: tab,\n        });\n    };\n\n    setLoading = (isLoading: boolean, callback: any = null) => {\n        if(callback){\n            this.setState({\n                loading: isLoading,\n            }, callback);\n        }\n        else{\n            this.setState({\n                loading: isLoading,\n            });\n        }\n    };\n\n    fetchMemberDependents = (tempId: string, status: string, callback: any) => {\n        let ins = this;\n\n        if (tempId && tempId !== '' && status === 'Active') {\n            const filter = JSON.stringify({\n                where: {\n                    principal_temp_id: tempId,\n                    member_status: 'Active',\n                },\n            });\n          \n            const GET_DEPENDENTS_URL = `members?filter=${filter}`;\n\n            API.get(GET_DEPENDENTS_URL,\n            (response) => {\n                if(response && response.length > 0){\n                    ins.setState({\n                        memberDependents: response\n                    });\n                }\n                callback();\n            },\n            (error) => {\n                console.log('get member dependents failed ', error);\n                callback();\n            });\n        } else {\n            callback();\n        }\n    };\n\n    loadMemberData = () => {\n        let ins = this;\n\n        ins.setLoading(true, ()=> {\n            API.get(`members?filter[where][member_id]=${ins.props.memberNumber}`,\n            (memberDataList) => {\n                if(memberDataList && memberDataList.error === undefined && memberDataList.length > 0){\n                    let memberData = memberDataList[0];\n                    ins.appendDocumentData(memberData.documents);\n                    const { client_id, temp_id, member_status } = memberData;\n                    ins.setState({\n                        memberData: memberData\n                    });\n                    ins.fetchMemberDependents(temp_id, member_status, () => {\n                        API.get(`clients/account/hmo-info/${client_id}`,\n                        (clienthmoinfo) => {\n                            if(clienthmoinfo && clienthmoinfo.error === undefined){\n                                const { client, benefit_plan_tree } = clienthmoinfo;\n                                let contract_id = client && client.contracts && client.contracts[0] ? client.contracts[0] : '';\n                                let contract_name = '';\n                                let abl = '';\n                                let mbl = '';\n                                let pec = '';\n                                if(benefit_plan_tree && benefit_plan_tree.length > 0){\n                                    benefit_plan_tree.forEach(item => {\n                                        if(item.tree_id === 'MCT'){\n                                            contract_name = item.name ? item.name : '';\n                                        }\n\n                                        if(item.tree_id === 'MCT-CT'){\n                                            let rbList = item['limits'];\n                                            if(rbList.length>0){\n                                                rbList.forEach((rblItem) => {\n                                                    switch(rblItem['type']){\n                                                    case 'ABL':\n                                                        abl = ''+rblItem['limit_unit']+' '+GlobalFunction.formatNumber(rblItem['limit']);\n                                                        break;\n                                                    case 'MBL':\n                                                        mbl = ''+rblItem['limit_unit']+' '+GlobalFunction.formatNumber(rblItem['limit']);\n                                                        break;\n                                                    case 'PEC':\n                                                        pec = ''+rblItem['limit_unit']+' '+GlobalFunction.formatNumber(rblItem['limit']);\n                                                        break;\n                                                    default: \n                                                        break;\n                                                    }\n                                                });\n                                            }\n                                        }\n                                    });\n                                }\n\n                                ins.setState({\n                                    clientData: client,\n                                    contractId: contract_id,\n                                    contractName: contract_name,\n                                    ABL: abl,\n                                    MBL: mbl,\n                                    PEC: pec,\n                                }, () => {\n                                    API.get(`members/documents/${memberData._id}`, (docResponse) => {\n                                        if(docResponse && docResponse.error === undefined){\n                                            ins.generateDocumentData(docResponse);\n                                            ins.setLoading(false);\n                                        }\n                                        else{\n                                            console.log('get member documents failed ', docResponse);\n                                            ins.setLoading(false);\n                                        }\n                                    }, (docerror) => {\n                                        console.log('get member documents failed ', docerror);\n                                        ins.setLoading(false);\n                                    });\n                                });\n                            }\n                            else{\n                                console.log('get client hmo info failed ', clienthmoinfo);\n                                ins.setLoading(false);\n                            }\n                        }, \n                        (cerror) => {\n                            console.log('get client hmo info failed ', cerror);\n                            ins.setLoading(false);\n                        });\n                    });\n                }\n                else{\n                    console.log('get member failed ', memberDataList);\n                    ins.setLoading(false);\n                }\n            },\n            (error) => {\n                console.log('get member failed ', error);\n                ins.setLoading(false);\n            });\n        });\n\n        \n    }\n\n    componentDidMount = () => {\n        this.loadMemberData();\n    };\n\n    appendDocumentData = (documents: Array<Document>) => {\n        const sample_document_data: any = [\n        {\n            _id: \"birth_certificate\",\n            name: \"Birth Certificate\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"baptismal_certificate\",\n            name: \"Baptismal Certificate\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"marriage_certificate\",\n            name: \"Marriage Certificate\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"solo_parent_id\",\n            name: \"Solo Parent ID\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"proof_of_parentage\",\n            name: \"Other proof of Parentage\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"certificate_no_marriage\",\n            name: \"Certificate of No Marriage\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"annulment_papers\",\n            name: \"Annulment Papers\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"passport\",\n            name: \"Passport\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"scanned_hmo_card\",\n            name: \"Scanned HMO Card\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"death_certificate\",\n            name: \"Death Certificate\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"employee_id\",\n            name: \"Employee ID\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"proof_overseas_employment\",\n            name: \"Proof of Overseas Employment\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"others\",\n            name: \"Others\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        }\n        ];\n        if(documents !== undefined && documents.length > 0){\n        documents.forEach((document: Document) => {\n            let type = document.type;\n            let name = type.replace('_', ' ');\n\n            sample_document_data.find(e => {\n            e.name.toLowerCase() == name && e.files.push(document)\n            })\n        });\n        }\n        this.generateDocumentData(sample_document_data);\n    }\n\n    generateDocumentData = (data: any) => {\n        const all_table: any = {\n        formattedColumns: {\n            readonly_checkbox: ['required'],\n            upload_file: ['action'],\n            required_cell: ['files'],\n        },\n        columnExtensions: [\n            {\n            columnName: 'required',\n            width: 100,\n            },\n            {\n            columnName: 'name',\n            width: 200,\n            },\n            {\n            columnName: 'purpose',\n            width: 200,\n            },\n            {\n            columnName: 'files',\n            width: 250,\n            },\n        ],\n        filterExtensions: [\n            {\n            columnName: 'required',\n            filteringEnabled: false,\n            },\n            {\n            columnName: 'name',\n            filteringEnabled: true,\n            },\n            {\n            columnName: 'purpose',\n            filteringEnabled: true,\n            },\n            {\n            columnName: 'files',\n            filteringEnabled: true,\n            },\n            \n        ],\n        columns: [\n            {\n            name: 'required',\n            title: 'Required?',\n            filteringEnabled: false,\n            sortingEnabled: false,\n            },\n            {\n            name: 'name',\n            title: 'Documents',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n            {\n            name: 'purpose',\n            title: 'Purpose of Document',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n            {\n            name: 'files',\n            title: 'File/s',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n        ],\n        rows: [],\n        };\n        const uploaded_table: any = {\n        formattedColumns: {\n            readonly_checkbox: ['required'],\n            required_cell: ['files'],\n        },\n        columnExtensions: [\n            {\n            columnName: 'required',\n            width: 100,\n            },\n            {\n            columnName: 'name',\n            width: 200,\n            },\n            {\n            columnName: 'purpose',\n            width: 200,\n            },\n            {\n            columnName: 'files',\n            width: 250,\n            },\n        ],\n        filterExtensions: [\n            {\n            columnName: 'required',\n            filteringEnabled: false,\n            },\n            {\n            columnName: 'name',\n            filteringEnabled: true,\n            },\n            {\n            columnName: 'purpose',\n            filteringEnabled: true,\n            },\n            {\n            columnName: 'files',\n            filteringEnabled: true,\n            },\n        ],\n        columns: [\n            {\n            name: 'required',\n            title: 'Required?',\n            filteringEnabled: false,\n            sortingEnabled: false,\n            },\n            {\n            name: 'name',\n            title: 'Documents',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n            {\n            name: 'purpose',\n            title: 'Purpose of Document',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n            {\n            name: 'files',\n            title: 'File/s',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n        ],\n        rows: [],\n        };\n        const missing_table: any = {\n        formattedColumns: {\n            readonly_checkbox: ['required'],\n            upload_file: ['action'],\n            required_cell: ['files'],\n        },\n        columnExtensions: [\n            {\n            columnName: 'required',\n            width: 100,\n            },\n            {\n            columnName: 'name',\n            width: 200,\n            },\n            {\n            columnName: 'purpose',\n            width: 200,\n            },\n            {\n            columnName: 'files',\n            width: 250,\n            },\n        ],\n        filterExtensions: [\n            {\n            columnName: 'required',\n            filteringEnabled: false,\n            },\n            {\n            columnName: 'name',\n            filteringEnabled: true,\n            },\n            {\n            columnName: 'purpose',\n            filteringEnabled: true,\n            },\n            {\n            columnName: 'files',\n            filteringEnabled: true,\n            },\n        ],\n        columns: [\n            {\n            name: 'required',\n            title: 'Required?',\n            filteringEnabled: false,\n            sortingEnabled: false,\n            },\n            {\n            name: 'name',\n            title: 'Documents',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n            {\n            name: 'purpose',\n            title: 'Purpose of Document',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n            {\n            name: 'files',\n            title: 'File/s',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n        ],\n        rows: [],\n        };\n        for (const cnt in data) {\n        const doc: any = data[cnt];\n        const temp_row: any = {\n            id: doc['_id'],\n            required: doc['required'],\n            name: doc['name'],\n            purpose: doc['purpose'],\n            files: '',\n        };\n        if (\n            doc['files'] &&\n            doc['files'] !== undefined &&\n            doc['files'] !== null &&\n            doc['files'].length > 0\n        ) {\n            let file_names: any = [];\n            let uploaded_file: any = [];\n            doc['files'].forEach(item => {\n            if (\n                item.filename &&\n                item.filename !== undefined &&\n                item.filename !== null\n            ) {\n                file_names.push(item.filename);\n                if (item['uploaded'] && item['uploaded'] === true) {\n                uploaded_file.push(item.filename);\n                }\n            }\n            });\n            temp_row['files'] = file_names.join(', ');\n            if (uploaded_file.length > 0) {\n            uploaded_table['rows'].push(temp_row);\n            }\n        } else if (\n            doc['required'] &&\n            doc['required'] !== undefined &&\n            doc['required'] !== null &&\n            doc['required'] === true\n        ) {\n            missing_table['rows'].push(temp_row);\n        }\n        all_table['rows'].push(temp_row);\n        }\n        const documents_tab: any = [\n        {\n            label: 'All',\n            count: all_table['rows'].length,\n        },\n        {\n            label: 'Uploaded Documents',\n            count: uploaded_table['rows'].length,\n        },\n        {\n            label: 'Missing Documents',\n            count: missing_table['rows'].length,\n        },\n        ];\n        this.setState({\n        documents_all_data: data,\n        documents_all_table: all_table,\n        documents_uploaded_table: uploaded_table,\n        documents_missing_table: missing_table,\n        documents_tab: documents_tab,\n        });\n    };\n\n    handleClickCell = (data: any) => {\n        if (Object.keys(data).length > 0) {\n        this.setLoading(true);\n        const { documents_all_data } = this.state;\n        for (const cnt in documents_all_data) {\n            const temp_data: any = documents_all_data[cnt];\n            if (temp_data['_id'] === data['id']) {\n            if (data['name'] === 'required') {\n                documents_all_data[cnt]['required'] =\n                data['value'] === 'true' || data['value'] === true;\n            } else if (data['name'] === 'action') {\n                if (\n                documents_all_data[cnt]['files'] &&\n                documents_all_data[cnt]['files'] !== undefined &&\n                documents_all_data[cnt]['files'] !== null\n                ) {\n                documents_all_data[cnt]['files'].push(data['value']);\n                } else {\n                documents_all_data[cnt]['files'] = [];\n                documents_all_data[cnt]['files'].push(data['value']);\n                }\n            }\n            break;\n            }\n        }\n        this.generateDocumentData(documents_all_data);\n        this.setLoading(false);\n        }\n    };\n\n    handleSaveDocument = () => {\n        /*\n        this.setState({\n        loading: true,\n        });\n        const payload: any = {\n        member_id: this.props.match.params.member_id,\n        documents: this.state.documents_all_data,\n        };\n        API.putMemberDocuments(payload, this.props.match.params.member_id).then(\n        response2 => {\n            this.setState({\n            loading: false,\n            });\n            if (response2 && response2.error === undefined) {\n            this.setState({\n                loading: false,\n                disableSaveBtn: true,\n            });\n            } else {\n            this.setState({\n                loading: false,\n                isOpenModal: true,\n                modalTitle: 'Error',\n                modalMessage: 'Failed to save documents.',\n            });\n            }\n        },\n        );\n        */\n    };\n\n    setFieldValue = (fieldName: string, value: any) => {\n        this.setState(state => ({\n        ...state,\n        [fieldName]: value,\n        }));\n    };\n\n    handleDocumentFilter = (params: any, tab: number, type: string) => {\n        const { documents_all_data } = this.state;\n        let table: any = {\n        formattedColumns: {\n            readonly_checkbox: ['required'],\n            required_cell: ['files'],\n        },\n        columnExtensions: [\n            {\n            columnName: 'required',\n            width: 100,\n            },\n            {\n            columnName: 'name',\n            width: 200,\n            },\n            {\n            columnName: 'purpose',\n            width: 200,\n            },\n            {\n            columnName: 'files',\n            width: 250,\n            },\n        ],\n        filterExtensions: [\n            {\n            columnName: 'required',\n            filteringEnabled: false,\n            },\n            {\n            columnName: 'name',\n            filteringEnabled: true,\n            },\n            {\n            columnName: 'purpose',\n            filteringEnabled: true,\n            },\n            {\n            columnName: 'files',\n            filteringEnabled: true,\n            },\n            {\n            columnName: 'action',\n            filteringEnabled: false,\n            },\n        ],\n        columns: [\n            {\n            name: 'required',\n            title: 'Required?',\n            filteringEnabled: false,\n            sortingEnabled: false,\n            },\n            {\n            name: 'name',\n            title: 'Documents',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n            {\n            name: 'purpose',\n            title: 'Purpose of Document',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n            {\n            name: 'files',\n            title: 'File/s',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n        ],\n        rows: [],\n        };\n        for (const cnt in documents_all_data) {\n        const doc: any = documents_all_data[cnt];\n        const temp_row: any = {\n            id: doc['_id'],\n            required: doc['required'],\n            name: doc['name'],\n            purpose: doc['purpose'],\n            files: '',\n        };\n        if (\n            doc['files'] &&\n            doc['files'] !== undefined &&\n            doc['files'] !== null &&\n            doc['files'].length > 0\n        ) {\n            let file_names: any = [];\n            let uploaded_file: any = [];\n            doc['files'].forEach(item => {\n            if (\n                item.filename &&\n                item.filename !== undefined &&\n                item.filename !== null\n            ) {\n                file_names.push(item.filename);\n                if (item['uploaded'] && item['uploaded'] === true) {\n                uploaded_file.push(item.filename);\n                }\n            }\n            });\n            temp_row['files'] = file_names.join(', ');\n            if (uploaded_file.length > 0 && tab === 1) {\n            table['rows'].push(temp_row);\n            }\n        } else if (\n            doc['required'] &&\n            doc['required'] !== undefined &&\n            doc['required'] !== null &&\n            doc['required'] === true &&\n            tab === 2\n        ) {\n            table['rows'].push(temp_row);\n        }\n        if (tab === 0) {\n            table['rows'].push(temp_row);\n        }\n        }\n        const {\n        documents_all_sort,\n        documents_uploaded_sort,\n        documents_missing_sort,\n        documents_all_filter,\n        documents_uploaded_filter,\n        documents_missing_filter,\n        } = this.state;\n        switch (tab) {\n        case 0:\n            if (type === 'filter') {\n            table = this.applySortFilter(table, documents_all_sort, params);\n            this.setState({\n                documents_all_filter: params,\n                documents_all_table: table,\n            });\n            } else {\n            table = this.applySortFilter(table, params, documents_all_filter);\n            this.setState({\n                documents_all_sort: params,\n                documents_all_table: table,\n            });\n            }\n            break;\n        case 1:\n            if (type === 'filter') {\n            table = this.applySortFilter(table, documents_uploaded_sort, params);\n            this.setState({\n                documents_uploaded_filter: params,\n                documents_uploaded_table: table,\n            });\n            } else {\n            table = this.applySortFilter(\n                table,\n                params,\n                documents_uploaded_filter,\n            );\n            this.setState({\n                documents_uploaded_sort: params,\n                documents_uploaded_table: table,\n            });\n            }\n            break;\n        case 2:\n            if (type === 'filter') {\n            table = this.applySortFilter(table, documents_missing_sort, params);\n            this.setState({\n                documents_missing_filter: params,\n                documents_missing_table: table,\n            });\n            } else {\n            table = this.applySortFilter(table, params, documents_missing_filter);\n            this.setState({\n                documents_missing_sort: params,\n                documents_missing_table: table,\n            });\n            }\n            break;\n        }\n    };\n\n    applySortFilter = (data: any, sorting: any, filter: any) => {\n        let filtered: any[] = [];\n        if (sorting && sorting[0] && sorting[0]['columnName']) {\n        switch (sorting[0]['columnName']) {\n            case 'name':\n            if (sorting[0]['direction'] === 'asc') {\n                data.rows.sort((a, b) => (a.name > b.name ? 1 : -1));\n            } else {\n                data.rows.sort((a, b) => (a.name > b.name ? -1 : 1));\n            }\n            break;\n            case 'purpose':\n            if (sorting[0]['direction'] === 'asc') {\n                data.rows.sort((a, b) => (a.purpose > b.purpose ? 1 : -1));\n            } else {\n                data.rows.sort((a, b) => (a.purpose > b.purpose ? -1 : 1));\n            }\n            break;\n            case 'files':\n            if (sorting[0]['direction'] === 'asc') {\n                data.rows.sort((a, b) => (a.files > b.files ? 1 : -1));\n            } else {\n                data.rows.sort((a, b) => (a.files > b.files ? -1 : 1));\n            }\n            break;\n        }\n        }\n        let filter_name: string = '';\n        let filter_purpose: string = '';\n        let filter_files: string = '';\n\n        filter.forEach(item => {\n        if (item.columnName === 'name') filter_name = item.value.toLowerCase();\n        if (item.columnName === 'purpose')\n            filter_purpose = item.value.toLowerCase();\n        if (item.columnName === 'files') filter_files = item.value.toLowerCase();\n        });\n        if (filter.length > 0) {\n        data.rows.forEach(item => {\n            if (\n            item.name !== undefined &&\n            item.name !== null &&\n            item.name.toLowerCase().includes(filter_name) &&\n            (item.purpose !== undefined &&\n                item.purpose !== null &&\n                item.purpose.toLowerCase().includes(filter_purpose)) &&\n            (item.files !== undefined &&\n                item.files !== null &&\n                item.files.toLowerCase().includes(filter_files))\n            )\n            filtered.push(item);\n        });\n        data.rows = filtered;\n        }\n        return data;\n    };\n\n    _generatePrincipalName = (currEditMemberValues) => {\n        if(currEditMemberValues){\n        let cleanFirstName = currEditMemberValues['first_name'] ? currEditMemberValues['first_name'].trim() : '';\n        let cleanMiddleName = currEditMemberValues['middle_name'] ? currEditMemberValues['middle_name'].trim() : '';\n        let cleanLastName = currEditMemberValues['last_name'] ? currEditMemberValues['last_name'].trim() : '';\n        let cleanSuffix = currEditMemberValues['suffix'] ? currEditMemberValues['suffix'].trim() : '';\n        return cleanLastName+', '+cleanFirstName+', '+cleanMiddleName+', '+cleanSuffix;\n        }\n        else{\n        return '';\n        }\n    }\n\n    public render(): JSX.Element {\n\n        const {\n            loading,\n            selectedTab,\n            documents_tab,\n            documents_all_data,\n            documents_all_table,\n            documents_all_filter,\n            documents_all_sort,\n            documents_uploaded_table,\n            documents_uploaded_filter,\n            documents_uploaded_sort,\n            documents_missing_table,\n            documents_missing_filter,\n            documents_missing_sort,\n            memberData,\n            clientData,\n            contractId,\n            contractName,\n            MBL,\n            ABL,\n            PEC,\n        } = this.state;\n\n        let is_vip = memberData && memberData.is_vip ? memberData.is_vip : false;\n\n        const BlankTemplate = () => {\n            return (\n                <Grid container>\n                    <Grid item xs={12}>\n                    </Grid>\n                </Grid>\n            );\n        };\n\n        return (\n            <div className='section' style={{width: '100%'}}>\n                <div style={{paddingTop: '2.5rem'}} />\n                <Grid container className='sub-section'>\n                    <Grid item xs={12} md={2} style={{borderRight: '#3C394A22 solid 1px'}} spacing={5}>\n                        <Box>\n                            <Avatar\n                                src=\"temp_member_photo.png\"\n                                alt=\"avatar\"\n                                className={clsx(\n                                    is_vip\n                                    ? 'side-menu-member-photo-vip'\n                                    : 'side-menu-member-photo',\n                                )}\n                                />\n                        </Box>\n                        <div className='sub-section'>\n                            <TextTab\n                                tabList={this.memberTabs}\n                                selectedTab={this.state.selectedTab}\n                                orientation='vertical'\n                                tabLabel={(index: number) => {\n                                    return (\n                                        <div style={{width: '100%'}}>\n                                            <div className='header-3' style={{margin: '6px 0'}}>\n                                                {this.memberTabs[index].label}\n                                            </div>\n                                        </div>\n                                    );\n                                }}\n                                setSelectedTab={(value: number) => {\n                                    this.setState({\n                                        selectedTab: value\n                                    });\n                                }} />\n                        </div>\n                    </Grid>\n                    <Grid item xs={10} className='small-section'>\n                        {\n                            loading ? \n                                <Loading height='10rem'/> \n                            : selectedTab === 0 ? (\n                                <HMOInformation\n                                    memberData={this.state.memberData}\n                                    memberDependents={this.state.memberDependents}\n                                    clientData={clientData}\n                                    contractId={contractId}\n                                    contractName={contractName}\n                                    ABL={ABL}\n                                    MBL={MBL}\n                                    PEC={PEC} />\n                            ) : selectedTab === 1 ? (\n                                <Documents\n                                    all_data={documents_all_data}\n                                    documents_tab={documents_tab}\n                                    all_documents_table={documents_all_table}\n                                    all_filter={documents_all_filter}\n                                    all_sort={documents_all_sort}\n                                    uploaded_documents_table={documents_uploaded_table}\n                                    uploaded_filter={documents_uploaded_filter}\n                                    uploaded_sort={documents_uploaded_sort}\n                                    missing_documents_table={documents_missing_table}\n                                    missing_filter={documents_missing_filter}\n                                    missing_sort={documents_missing_sort}\n                                    applySortFilter={this.handleDocumentFilter} />\n                            ) : (\n                                <BlankTemplate />\n                            )\n                        }\n\n                    </Grid>\n                </Grid>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid, TableRow, TableCell } from '@material-ui/core';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { faSort, faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { Loading } from 'Pages/CustomerCarePage/Components/Loading';\n\ninterface IProps {\n    clientId: string;\n}\n\ninterface IStates {\n    code: string;\n    name: string;\n    location: string;\n\n    type?: string;\n    groups: PartnerNetworkGroup[];\n    facilities: FacilityData[];\n\n    isLoaded: boolean;\n}\n\ninterface PartnerNetworkGroup {\n    checked: boolean;\n    name: string;\n    label: string;\n}\n\ninterface FacilityData {\n    code: string;\n    name: string;\n    location: string;\n}\n\nexport class PartnerNetworkSection extends React.Component<IProps, IStates> {\n\n    groupChoices: PartnerNetworkGroup[] = [\n        { checked: false, name: 'Top 5 Hospitals', label: 'top_5_hospitals' },\n        { checked: false, name: 'Top 6 Hospitals', label: 'top_6_hospitals' },\n        { checked: false, name: 'Healthway Clinics', label: 'healthway_clinics' },\n        { checked: false, name: 'Medical City Network', label: 'medical_city_network' }\n    ]\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            code: '',\n            name: '',\n            location: '',\n\n            groups: [],\n            facilities: [],\n            isLoaded: false\n        }\n    }\n\n    componentDidMount() {\n        API.get(`clients/account/hmo-info/${this.props.clientId}`,\n            (response) => {\n                constructPartnerNetworkData(response.benefit_plan_tree);\n                this.setState({isLoaded: true});\n            },\n            (error) => {\n                console.log(error);\n            });\n\n        const constructPartnerNetworkData = (response: any[]) => {\n\n            const lastElement = (array: any[]) => {\n                return array[array.length - 1];\n            }\n\n            const parentNode = response.find(node => node.level == 4 && lastElement(node.tree_path) === 'NT');\n\n            const childrenNodes = response.filter(node => {\n                return parentNode.children.includes(node._id);\n            });\n\n            const nodesWithType = childrenNodes.filter(node => {\n                return (\n                    lastElement(node.tree_path) === 'CB' ||\n                    lastElement(node.tree_path) === 'OD'\n                );\n            });\n\n            const nodeWithPNList = nodesWithType.find(node => {\n                return node.custom_metadata.partner_network_list;\n            })\n\n            console.log('childrenNodes', childrenNodes);\n            console.log('nodesWithType', nodesWithType);\n            console.log('nodeWithPNList', nodeWithPNList);\n\n            const pnGroups = parentNode.custom_metadata.groups;\n            let pnType = undefined;\n            let pnFacilities = undefined;\n\n            if (nodeWithPNList) {\n                pnType = nodeWithPNList.name;\n                pnFacilities = nodeWithPNList.custom_metadata.partner_network_list;\n            }\n            \n            console.log('pnType', pnType);\n            console.log('pnGroups', pnGroups);\n            console.log('pnFacilities', pnFacilities);\n            \n            /* Assign Type */\n            // @ts-ignore\n            this.setState({type: pnType});\n\n            /* Assign Groups */\n            if (pnGroups) {\n                this.setState({groups: this.groupChoices.map(i => i)});\n                this.state.groups.forEach(group => {\n                    group.checked = pnGroups.find(pnGroup => group.label === pnGroup)\n                })\n                this.setState({groups: this.state.groups});\n            }\n\n            /* Assign Facilities */\n            if (pnFacilities) {\n                // @ts-ignore\n                this.setState({facilities: pnFacilities.map(facility => {\n                    return {\n                        code: facility.facility_id,\n                        name: facility.name,\n                        location: '---'\n                    }\n                })});\n            }\n        }\n    }\n\n    getFilteredFacilitiesData = () => {\n        const includes = (from: string, to: string) => {\n            return from.toLowerCase().includes(to.toLowerCase());\n        };\n        const { code, name, location } = this.state;\n\n        const filteredFacilities = this.state.facilities\n            .filter(facility => code === '' || includes(facility.code, code))\n            .filter(facility => name === '' || includes(facility.name, name))\n            .filter(facility => location === '' || includes(facility.location, location));\n\n        return filteredFacilities;\n    }\n\n    sortFacilities(attrName: string, isAsc: boolean): void {\n        this.state.facilities.sort((a: any, b: any) => \n            (a[attrName].toString().toLowerCase() > b[attrName].toString().toLowerCase()) ? (isAsc ? 1 : -1) : (isAsc ? -1 : 1)\n        );\n\n        this.setState({facilities: this.state.facilities});\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='section'>\n                {!this.state.isLoaded ? (\n                    <Loading height='10rem'/>\n                ) : (\n                    this.renderMainContent()\n                )}\n            </div>\n        );\n    }\n\n    renderMainContent(): JSX.Element {\n        return (\n            <>\n            <div style={{paddingTop: '2.5rem'}} />\n            <div className='header-1'>Check Partner Network</div>\n            <div className='sub-section'>\n                <div className='header-2'>TYPE</div>\n                <div className='small-text'>{this.state.type ? this.state.type : '---'}</div>\n            </div>\n            <div className='sub-section'>\n                <div className='header-2'>GROUP</div>\n                <Grid className='sub-section' container spacing={2} style={{width: '50%'}}>\n                    {this.groupChoices.map(group => {\n                        return (\n                            <Grid item xs={6}>\n                                <span>\n                                    {group.checked ? (\n                                        <FontAwesomeIcon icon={faCheck} style={{color: '#3AB77D'}} />\n                                    ) : (\n                                        <FontAwesomeIcon icon={faTimes} style={{color: '#FD5451'}} />\n                                    )}\n                                </span>\n                                <span style={{paddingLeft: '1rem'}}>{group.name}</span>\n                            </Grid>\n                        );\n                    })}\n                </Grid>\n            </div>\n            <div className='sub-section'>\n                <Grid className='sub-section' container spacing={2}>\n                    <Grid item xs={2}>\n                        <TextButton label='Excluded Hospitals' onClick={() => {}} />\n                    </Grid>\n                    <Grid item xs={2}>\n                        <TextButton label='Included Hospitals' onClick={() => {}} />   \n                    </Grid>\n                </Grid>\n                <CustomTable\n                    rows={this.getFilteredFacilitiesData()}\n                    renderHeader={() => this.renderTableHeader()}\n                    renderRow={(rowData: any, index: number) => \n                        this.renderTableRow(rowData, index)} />\n            </div>\n            <div className='section' />\n            </>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        \n        return (\n            <>\n            {this.renderHeaderColumn('code', 'Facility Code')}\n            {this.renderHeaderColumn('name', 'Name')}\n            {this.renderHeaderColumn('location', 'Location')}\n            </>\n        );\n    }\n\n    renderTableRow(facility: any, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{facility.code}</TableCell>\n                <TableCell>{facility.name}</TableCell>\n                <TableCell>{facility.location}</TableCell>\n            </TableRow>\n        );\n    }\n\n    renderHeaderColumn(attrName: string, headerText: string): JSX.Element {\n        return (\n            <TableCell>\n                <span className='header-2'>{headerText}</span>\n                <div style={{float: 'right'}}>\n                    <IconButton \n                        icon={faSort} \n                        onClick={() => {\n                            this.sortFacilities(attrName, true);\n                        }} />\n                </div>\n                <InputField\n                    value={this.state[attrName]}\n                    onChange={(value: string) => {\n                        // @ts-ignore\n                        this.setState({[attrName]: value});\n                    }} />\n            </TableCell>\n        );\n    }\n}","import * as React from 'react';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { TableRow, TableCell, Grid } from '@material-ui/core';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\n\ninterface IStates {\n    loaId: string;\n    approvalCode: string;\n    diagnosis: string;\n    procedure: string;\n    provider: string;\n    amount: string;\n    sessions: string;\n    dateAvailed: string;\n    type: string;\n    status: string;\n}\n\n\nexport class CheckUtilizationSection extends React.Component<{}, IStates> {\n\n    dummyData = [\n        {\n            loa: { id: '9999-99999', swipe: true },\n            approvalCode: '99999999',\n            diagnosis: { code: '999.99', name: 'ICD10 Name', desc: 'Description.' },\n            procedure: { code: '999.99', name: 'CPT Name', desc: 'Description.' },\n            provider: { name: 'General Santos Doctor’s Hospitals.' },\n            amount: 0,\n            sessions: 1,\n            dateAvailed: new Date(),\n            type: 'IBNR',\n            status: 'Approved'\n        }\n    ]\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            loaId: '',\n            approvalCode: '',\n            diagnosis: '',\n            procedure: '',\n            provider: '',\n            amount: '',\n            sessions: '',\n            dateAvailed: '',\n            type: '',\n            status: ''\n        };\n    }\n    \n\n    render(): JSX.Element {\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Check Utilization</div>\n                <Grid container className='sub-section' spacing={2}>\n                    <Grid item xs={3}>\n                        <div className='light-text'>ANNUAL BENEFIT LIMIT</div>\n                        <div className='header-1'>{'PHP 0.00'}</div>\n                    </Grid>\n                    <Grid item xs={9}>\n                        <Line \n                            items={[\n                                { value: 70, color: '#3FBB7F', label1: 'UTILIZED', label2: 'PHP 38,021.35' },\n                                { value: 5, color: '#1D236F', label1: 'IBNR', label2: 'PHP 11,978.65' },\n                                { value: 25, color: '#FCB53F', label1: 'AVAILABLE', label2: 'PHP 50,001' }\n                            ]}\n                            maxValue={100} />\n                    </Grid>\n                </Grid>\n                <div className='sub-section' style={{overflowX: 'auto'}}>\n                    <CustomTable\n                        className='custom-table-scrollable'\n                        rows={this.dummyData}\n                        renderHeader={() => this.renderTableHeader()}\n                        renderRow={(rowData: any, index: number) => \n                            this.renderTableRow(rowData, index)} \n                        rowsPerPageOptions={[10, 25, 50]} />\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            {this.renderHeaderColumn('loaId', 'LOA ID', '100px')}\n            {this.renderHeaderColumn('approvalCode', 'Approval Code', '120px')}\n            {this.renderHeaderColumn('diagnosis', 'Diagnosis', '200px')}\n            {this.renderHeaderColumn('procedure', 'Procedure', '200px')}\n            {this.renderHeaderColumn('provider', 'Provider', '150px')}\n            {this.renderHeaderColumn('amount', 'Amount', '100px')}\n            {this.renderHeaderColumn('sessions', 'Sessions', '75px')}\n            {this.renderHeaderColumn('dateAvailed', 'Date Availed', '150px')}\n            {this.renderHeaderColumn('type', 'Type', '75px')}\n            {this.renderHeaderColumn('status', 'Status', '75px')}\n            </>\n        );\n    }\n\n    renderTableRow(utilization: any, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{utilization.loa.id}</TableCell>\n                <TableCell>{utilization.approvalCode}</TableCell>\n                <TableCell>{utilization.diagnosis.name}</TableCell>\n                <TableCell>{utilization.procedure.name}</TableCell>\n                <TableCell>{utilization.provider.name}</TableCell>\n                <TableCell>{utilization.amount}</TableCell>\n                <TableCell>{utilization.sessions}</TableCell>\n                <TableCell>{GlobalFunction.toCommonDateString(utilization.dateAvailed)}</TableCell>\n                <TableCell>{utilization.type}</TableCell>\n                <TableCell>{utilization.status}</TableCell>\n            </TableRow>\n        );\n    }\n\n\n    renderHeaderColumn(attrName: string, headerText: string, width: string): JSX.Element {\n        return (\n            <TableCell style={{minWidth: width, maxWidth: width}}>\n                <span className='header-2'>{headerText}</span>\n                <div style={{float: 'right'}}>\n                    <IconButton \n                        icon={faSort} \n                        onClick={() => {\n                            // this.sortTickets('urgency', true);\n                            // this.setState({ticketListUpdated: true});\n                        }} />\n                </div>\n                <InputField\n                    value={this.state[attrName]}\n                    onChange={(value: string) => {\n                        this.setState(prevState => ({...prevState, [attrName]: value}));\n                    }} />\n            </TableCell>\n        );\n    }\n}\n\n\ninterface LineProps {\n    items: {\n        value: number;\n        color: string;\n        label1: string;\n        label2: string;\n    }[]\n    maxValue: number;\n}\n\nexport class Line extends React.Component<LineProps> {\n\n    render(): JSX.Element {\n        return (\n            <div style={{width: '50%', height: 0}}>\n                {this.props.items.map(item => {\n                    return (\n                        <div \n                            style={{\n                                width: (item.value / this.props.maxValue * 100) + '%', \n                                height: '6px', \n                                display: 'inline-block',\n                                backgroundColor: item.color\n                            }} />\n                    );\n                })}\n                <div style={{padding: '0.5rem 0'}}>\n                {this.props.items.map(item => {\n                    return (\n                        <div \n                            style={{\n                                width: (1 / this.props.items.length * 100) + '%', \n                                height: '6px', \n                                display: 'inline-block'\n                            }}>\n                            <div>\n                                <div \n                                    style={{\n                                        width: '10px', \n                                        height: '10px', \n                                        backgroundColor: item.color,\n                                        display: 'inline-block',\n                                        marginRight: '1rem'\n                                    }}/>\n                                <div \n                                    className='light-text' \n                                    style={{\n                                        display: 'inline-block'\n                                    }}>\n                                    {item.label1}\n                                </div>\n                                <div \n                                    className='header-2' \n                                    style={{\n                                        color: item.color,\n                                    }}>\n                                    {item.label2}\n                                </div>\n                            </div>\n                         </div>\n                    );\n                })}\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\n// import { TicketData } from 'Pages/CustomerCarePage/Models';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { Grid } from '@material-ui/core';\nimport { TicketData, AvailmentDetails, ConfinementDetails } from 'Pages/CustomerCarePage/Models';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\n\ninterface IProps {\n    ticketId: string;\n    onCloseButtonClicked: () => void;\n}\n\ninterface IStates {\n    ticket?: TicketData;\n    availment?: AvailmentDetails;\n    confinement?: ConfinementDetails;\n}\n\nexport class TicketInfoModal extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            \n        };\n    }\n\n    componentDidMount() {\n        console.log(this.props.ticketId);\n\n        API.get('customer-care/tickets/' + this.props.ticketId, \n            (response) => {\n                const ticketCategory = response.ticket_category;\n                const availmentDetails = ticketCategory.availment_details;\n                const confinementDetails = ticketCategory.confinement_details;\n                this.setState({ticket: {\n                    ticketChannel: response.received_via,\n                    transactionNo: response.transaction_no,\n                    ticketSource: response.received_from,\n                    memberName: response.member_name,\n                    clientName: response.corporate_client,\n                    brokerName: response.broker,\n                    facility: { value: '', label: response.hospital_name },\n                    department: response.department,\n                    callerName: response.caller_name,\n                    contactNo: response.contact_no,\n                    ticketType: ticketCategory.ticket_type,\n                    specificType: ticketCategory.specific_type,\n                    urgency: ticketCategory.urgency,\n                    agent: { id: '', name: ticketCategory.assign_to },\n                    additionalNotes: response.additional_notes,\n                    additionalFiles: [],\n                    ticketNo: response.ticket_no,\n                    pmCaseId: response.pmaker_case_uid,\n                    status: response.status,\n                    createdBy: { id: response.created_by.id, name: response.created_by.name },\n                    dateCreated: new Date(response.date_created),\n                    dateUpdated: new Date(response.date_updated),\n                    dateEscalated: new Date(response.date_escalated)\n                }});\n                \n                if (availmentDetails) {\n                    const providerData = availmentDetails.provider.split(' - ');\n                    this.setState({availment: {\n                        provider: { value: providerData[0], label: providerData[1] },\n                        diagnoses: availmentDetails.availments_list.map(diagnosis => {\n                            return {\n                                icd10Code: { value: diagnosis.code, label: diagnosis.name },\n                                remarks: diagnosis.remarks,\n                                isPrimary: diagnosis.is_primary,\n                                isFinal: diagnosis.is_final,\n                                doctors: diagnosis.doctors.map(doctor => {\n                                    return {\n                                        id: doctor.id,\n                                        name: doctor.name,\n                                        specialization: doctor.specialization,\n                                        fee: doctor.fee,\n                                        noOfVisits: doctor.no_of_visits,\n                                        remarks: doctor.remarks\n                                    }\n                                }),\n                                procedures: diagnosis.procedures.map(procedure => {\n                                    return {\n                                        cptCode: { value: procedure.code, label: procedure.name },\n                                        isPHIC: procedure.phic,\n                                        amount: parseInt(procedure.amount),\n                                        notes: procedure.notes,\n                                        assessmentType: procedure.assessment_type,\n                                        assessmentRemarks: procedure.assessment_remarks\n                                    }\n                                })\n                            }\n                        })\n                    }});\n                }\n\n                if (confinementDetails) {\n                    const providerData = availmentDetails.provider.split(' - ');\n                    this.setState({availment: {\n                        provider: { value: providerData[0], label: providerData[1] },\n                        diagnoses: availmentDetails.availments_list.map(diagnosis => {\n                            return {\n                                icd10Code: { value: diagnosis.code, label: diagnosis.name },\n                                remarks: diagnosis.remarks,\n                                isPrimary: diagnosis.is_primary,\n                                isFinal: diagnosis.is_final,\n                                doctors: diagnosis.doctors.map(doctor => {\n                                    return {\n                                        id: doctor.id,\n                                        name: doctor.name,\n                                        specialization: doctor.specialization,\n                                        fee: doctor.fee,\n                                        noOfVisits: doctor.no_of_visits,\n                                        remarks: doctor.remarks\n                                    }\n                                }),\n                                procedures: diagnosis.procedures.map(procedure => {\n                                    return {\n                                        cptCode: { value: procedure.code, label: procedure.name },\n                                        isPHIC: procedure.phic,\n                                        amount: parseInt(procedure.amount),\n                                        notes: procedure.notes,\n                                        assessmentType: procedure.assessment_type,\n                                        assessmentRemarks: procedure.assessment_remarks\n                                    }\n                                })\n                            }\n                        })\n                    }});\n                }\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    getTotalAailmentProcedureCost(): number {\n        let total = 0;\n\n        if (this.state.availment) {\n            this.state.availment.diagnoses.map(diagnosis => \n                diagnosis.procedures.map(procedure => \n                    total += procedure.amount\n                )\n            )\n        }\n        \n        return total;\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='ticket-modal section'>\n                <div style={{float: 'right', marginTop: '-1rem', fontSize: '1rem'}}>\n                    <IconButton \n                        icon={faTimes} \n                        onClick={() => {\n                            this.props.onCloseButtonClicked();\n                        }} />\n                </div>\n                {this.state.ticket ? (\n                    this.renderTicketInfo(this.state.ticket)\n                ) : null}\n            </div>\n        )\n    }\n\n    renderTicketInfo(ticket: TicketData): JSX.Element {\n        return (\n            <>\n            <div className='sub-sections'>\n                <div className='header-1'>{'Ticket 0000823'}</div>\n                <div className='text'>{ticket.status + ' - ' + ticket.urgency + ', Due on May 23, 2019*'}</div>\n            </div>\n            <div className='sub-section'>\n                {/* <div className='text'>{name}</div>\n                <div className='text'>{\"Happytime Technology Inc.\"}</div>\n                <div className='text'>{'Rank and File - Principal'}</div> */}\n                <Grid container>\n                    <Grid item className='sub-section' xs={6}>\n                        <div className='light-text'>TICKET TYPE</div>\n                        <div className='small-text'>{ticket.ticketType}</div>\n                    </Grid>\n                    <Grid item className='sub-section' xs={6}>\n                        <div className='light-text'>SPECIFIC TYPE</div>\n                        <div className='small-text'>{ticket.specificType}</div>\n                    </Grid>\n                    <Grid item className='sub-section' xs={6}>\n                        <div className='light-text'>RECEIVED VIA</div>\n                        <div className='small-text'>{ticket.ticketChannel}</div>\n                    </Grid>\n                    <Grid item className='sub-section' xs={6}>\n                        <div className='light-text'>CALL TRANSACTION NO.</div>\n                        <div className='small-text'>{ticket.transactionNo}</div>\n                    </Grid>\n                    <Grid item className='sub-section' xs={6}>\n                        <div className='light-text'>RECEIVED FROM</div>\n                        <div className='small-text'>{'??? ' + '(' + ticket.ticketSource + ')'}</div>\n                    </Grid>\n                    <Grid item className='sub-section' xs={6}>\n                        <div className='light-text'>NUMBER / EMAIL</div>\n                        <div className='small-text'>{ticket.contactNo}</div>\n                    </Grid>\n                </Grid>\n                <div className='sub-section'>\n                    <div className='light-text'>ASSIGNED TO</div>\n                    <div className='small-text'>{ticket.agent.name}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>DIAGNOSIS — PROCEDURES</div>\n                    {this.state.availment ? (\n                        <Grid container spacing={2} className='sub-section'>\n                            {this.state.availment.diagnoses.map((diagnosis, index) => {\n                                return (\n                                    <>\n                                    <Grid item xs={12} className='header-2'>\n                                        {(index + 1) + '. ' +\n                                         diagnosis.icd10Code.value + ' - ' + \n                                         diagnosis.icd10Code.label}\n                                    </Grid>\n                                    {diagnosis.procedures.map((procedure, index2) => {\n                                        return (\n                                            <>\n                                            <Grid item xs={1} />\n                                            <Grid item xs={11} className='small-text'>\n                                                {(index2 + 10).toString(36) + '. ' + procedure.cptCode.label}\n                                            </Grid>\n                                            </>\n                                        );\n                                    })}\n                                    </>\n                                );\n                            })}\n                        </Grid>\n                    ) : null}\n                    {/* <div className='sub-section'> */}\n                    <div style={{paddingTop: '0.5rem'}} />\n                    <div className='header-2'>{'TOTAL: PHP ' + GlobalFunction.formatNumber(this.getTotalAailmentProcedureCost(), true)}</div>\n                {/* </div> */}\n                </div>\n                \n                <div className='sub-section'>\n                    <div className='light-text'>CREATED BY</div>\n                    <div className='small-text'>{ticket.createdBy.name}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>DATE AND TIME CREATED</div>\n                    <div className='small-text'>{GlobalFunction.toDateAndTime(ticket.dateCreated)}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>DATE AND TIME LAST UPDATED</div>\n                    <div className='small-text'>{GlobalFunction.toDateAndTime(ticket.dateUpdated)}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>DATE AND TIME LAST ESCALATED</div>\n                    <div className='small-text'>{\"May 14, 2019 — 09:33:00 AM*\"}</div>\n                </div>\n                {/* <div className='sub-section'> */}\n                    \n                {/* </div> */}\n            </div>\n            <TextButton\n                        label='View More'\n                        onClick={() => {\n\n                        }} />\n            </>\n        )\n    }\n}","import * as React from 'react';\nimport { TableCell, TableRow } from '@material-ui/core';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\n\nimport { DropdownChoice, PartialTicketData } from 'Pages/CustomerCarePage/Models';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { TicketInfoModal } from './TicketInfoModal';\nimport { LabelDisplayedRowsArgs } from '@material-ui/core/TablePagination';\nimport { Loading } from 'Pages/CustomerCarePage/Components/Loading';\nimport { Processmaker } from 'Pages/CustomerCarePage/Processmaker';\n\ninterface IProps {\n    memberId?: string;\n    clientId?: string;\n}\n\ninterface IStates {\n    urgency: number;\n    status: string;\n    ticketNo: string;\n    channel: string;\n    type: string;\n    specificType: string;\n    source: string;\n    assignee: string;\n    lastUpdate: string;\n    ticketListUpdated: boolean;\n    selectedTicketId?: string;\n}\n\nexport class ReviewTicketsSection extends React.Component<IProps, IStates> {\n\n    ticketChannels: DropdownChoice[];\n    ticketTypes: DropdownChoice[];\n    specificTypes: DropdownChoice[];\n    tickets: PartialTicketData[];\n\n    constructor(props: any) {\n        super(props);\n\n        this.ticketChannels = [\n            { value: '0', label: '' },\n            { value: '1', label: 'Call' },\n            { value: '2', label: 'SMS' },\n            { value: '3', label: 'Text' },\n            { value: '4', label: 'Email' }\n        ];\n\n        this.ticketTypes = [\n            { value: '0', label: '' },\n            { value: '1', label: 'Availment' },\n            { value: '2', label: 'Inquiry' }\n        ];\n\n        this.specificTypes = [\n            { value: '0', label: '' },\n            { value: '1', label: 'Outpatient Procedure' },\n            { value: '2', label: 'Inpatient' },\n            { value: '3', label: 'Emergency Room' },\n            { value: '4', label: 'Consultation' }\n        ];\n\n        this.state = {\n            urgency: 0,\n            status: '',\n            ticketNo: '',\n            channel: '',\n            type: '',\n            specificType: '',\n            source: '',\n            assignee: '',\n            lastUpdate: '',\n            ticketListUpdated: false,\n            selectedTicketId: undefined\n        }\n\n        this.tickets = [];\n    }\n\n    componentDidMount() {\n        const targetId = this.props.clientId || this.props.memberId;\n\n        API.get('customer-care/tickets',\n            (tickets) => {\n                const recentTickets = tickets.filter(ticket => {\n                    return (\n                        ticket.member_id && ticket.member_id.length > 0 ? ticket.member_id === targetId :\n                        ticket.client_id && ticket.client_id.length > 0 ? ticket.client_id === targetId : false\n                    );\n                });\n                if (recentTickets) {\n                    recentTickets.map(recentTicket => {\n                        processmakerParticipated(recentTicket);\n                    });\n                    this.setState({ticketListUpdated: true});\n                }\n            },\n            (error) => {\n                console.log(error);\n            });\n\n            const processmakerParticipated = (ticket: any) => {\n                Processmaker.get('cases/participated',\n                    (cases) => {\n                        const matchedCase = cases.find(caseItem => caseItem.app_uid === ticket.pmaker_case_uid);\n                        if (matchedCase) {\n                            this.tickets.push({\n                                id: ticket._id,\n                                ticketNo: \n                                    GlobalFunction.generateTicketNumber(\n                                        ticket.ticket_category.ticket_type,\n                                        ticket.ticket_category.specific_type,\n                                        matchedCase.app_number\n                                    ),\n                                urgency: (\n                                    ticket.ticket_category.urgency === 'Low' ? 3 :\n                                    ticket.ticket_category.urgency === 'Medium' ? 2 : \n                                    ticket.ticket_category.urgency === 'High' ? 1 : 0),\n                                status: ticket.status,\n                                channel: ticket.received_via,\n                                type: ticket.ticket_category.ticket_type,\n                                specificType: ticket.ticket_category.specific_type,\n                                source: {\n                                    value: ticket.received_from.toUpperCase(), \n                                    label: (\n                                        ticket.member_name ? ticket.member_name :\n                                        ticket.corporate_client ? ticket.corporate_client :\n                                        ticket.broker ? ticket.broker :\n                                        ticket.hospital_name ? ticket.hospital_name : ''\n                                    )\n                                },\n                                assignee: ticket.ticket_category.assign_to,\n                                lastUpdate: new Date(ticket.date_updated),\n                            });\n                            this.setState({ticketListUpdated: true});\n                        }\n                    },\n                    (error) => {\n                        console.log(error);\n                        this.setState({ticketListUpdated: true});\n                    }\n                );\n            }\n    }\n\n    getFilteredTicketData = () => {\n        return (\n            this.tickets\n                .filter(ticket => \n                    this.state.urgency === 0 || \n                    isNaN(this.state.urgency) ||\n                    ticket.urgency === this.state.urgency)\n                .filter(ticket => \n                    this.state.status === '' || \n                    ticket.status\n                        .toLowerCase()\n                        .includes(this.state.status.toLowerCase()))\n                .filter(ticket => \n                    this.state.ticketNo === '' || \n                    ticket.ticketNo\n                        .toLowerCase()\n                        .includes(this.state.ticketNo.toLowerCase()))\n                .filter(ticket => \n                    this.state.channel === '' || \n                    ticket.channel\n                        .toLowerCase()\n                        .includes(this.state.channel.toLowerCase()))\n                .filter(ticket => \n                    this.state.type === '' || \n                    ticket.type\n                        .toLowerCase()\n                        .includes(this.state.type.toLowerCase()))\n                .filter(ticket => \n                    this.state.specificType === '' || \n                    ticket.specificType\n                        .toLowerCase()\n                        .includes(this.state.specificType.toLowerCase()))\n                .filter(ticket => \n                    this.state.source === '' || \n                    ticket.source.label\n                        .toLowerCase()\n                        .includes(this.state.source.toLowerCase()) ||\n                    ticket.source.value\n                        .toLowerCase()\n                        .includes(this.state.source.toLowerCase()))\n                .filter(ticket => \n                    this.state.assignee === '' || \n                    ticket.assignee\n                        .toLowerCase()\n                        .includes(this.state.assignee.toLowerCase()))\n                .filter(ticket => \n                    this.state.lastUpdate === '' || \n                    GlobalFunction.toShortDateString(ticket.lastUpdate)\n                        .toLowerCase()\n                        .includes(this.state.lastUpdate.toLowerCase()))\n        );\n    }\n\n    sortTickets(attrName: string, isAsc: boolean): void {\n        this.tickets.sort((a: PartialTicketData, b: PartialTicketData) => \n            (a[attrName].toString().toLowerCase() > b[attrName].toString().toLowerCase()) ? \n                (isAsc ? 1 : -1) : (isAsc ? -1 : 1)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Review Tickets</div>\n                <div className='sub-section' style={{overflowX: 'auto'}}>\n                    {this.state.ticketListUpdated ? (\n                        <CustomTable\n                            className='custom-table-selectable'\n                            rows={this.getFilteredTicketData()}\n                            renderHeader={() => this.renderTableHeader()}\n                            renderRow={(rowData: any, index: number) => \n                                this.renderTableRow(rowData, index)}\n                            onChangeInfo={(info: LabelDisplayedRowsArgs) => \n                                `${info.from}-${info.to} out of ${info.count} tickets`}\n                            labelRowsPerPage='Show'\n                            rowsPerPageOptions={[10, 25, 50]} />\n                    ) : (\n                        <Loading height='10rem'/>\n                    )}\n                </div>\n\n                {/* Modals */}\n                {this.state.selectedTicketId ? (\n                    <TicketInfoModal \n                        ticketId={this.state.selectedTicketId}\n                        onCloseButtonClicked={() => {\n                            this.setState({selectedTicketId: undefined});\n                        }} />\n                ) : null}\n                <div className='section' />\n            </div>\n        );\n    }\n\n\n\n\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            {this.renderHeaderColumn('urgency', 'Urgency')}\n            {this.renderHeaderColumn('status', 'Status')}\n            {this.renderHeaderColumn('ticketNo', 'Ticket ID')}\n            {this.renderHeaderColumn('channel', 'Channel')}\n            {this.renderHeaderColumn('type', 'Type')}\n            {this.renderHeaderColumn('specificType', 'Specific Type')}\n            {this.renderHeaderColumn('source', 'Source')}\n            {this.renderHeaderColumn('assignee', 'Assigned')}\n            {this.renderHeaderColumn('lastUpdate', 'Last Update')}\n            </>\n        );\n    }\n\n\n\n\n\n    renderTableRow = (ticket: PartialTicketData, index: number) => {\n        const backgroundColor = (index % 2 === 0 ? (\n                ticket.urgency === 1 ? '#FFF2F2' : '#FFFFFF'\n            ) : (\n                ticket.urgency === 1 ? '#F7ECEC' : '#F6F7FA'\n            ));\n\n        const urgencyColor = (\n            ticket.urgency === 3 ? '#3AB77D' :\n            ticket.urgency === 2 ? '#FAB435' :\n            ticket.urgency === 1 ? '#FD5451' : '')\n        \n        return (\n            <TableRow \n                style={{backgroundColor: backgroundColor}} \n                onClick={() => {\n                    this.setState({selectedTicketId: ticket.id});\n                }}>\n                <TableCell style={{textAlign: 'center', paddingLeft: 0}}>\n                    <div \n                        className='number-item' \n                        style={{display: 'inline-block', backgroundColor: urgencyColor}}>\n                        {ticket.urgency}\n                    </div>\n                </TableCell>\n                <TableCell>{ticket.status}</TableCell>\n                <TableCell>{ticket.ticketNo}</TableCell>\n                <TableCell>{ticket.channel}</TableCell>\n                <TableCell>{ticket.type}</TableCell>\n                <TableCell>{ticket.specificType}</TableCell>\n                <TableCell>\n                    <div className='text'>{ticket.source.label}</div>\n                    <div className='light-text' style={{fontSize: '9px'}}>\n                        {ticket.source.value}\n                    </div>\n                </TableCell>\n                <TableCell>{ticket.assignee}</TableCell>\n                <TableCell>{GlobalFunction.toDateAndTime(ticket.lastUpdate)}</TableCell>\n            </TableRow>\n        );\n    }\n\n\n\n    renderHeaderColumn(attrName: string, headerText: string): JSX.Element {\n        return (\n            <TableCell style={{minWidth: '150px'}}>\n                <span className='header-2'>{headerText}</span>\n                <div style={{float: 'right'}}>\n                    <IconButton \n                        icon={faSort} \n                        onClick={() => {\n                            this.sortTickets(attrName, true);\n                            this.setState({ticketListUpdated: true});\n                        }} />\n                </div>\n                <InputField\n                    value={this.state[attrName]}\n                    onChange={(value: string) => {\n                        this.setState(prevState => ({...prevState, [attrName]: value}));\n                    }} />\n            </TableCell>\n        );\n    }\n}\n\n\n","import * as React from 'react';\nimport { Grid, TableCell, TableRow } from '@material-ui/core';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { PartialBenefitData } from 'Pages/CustomerCarePage/Models';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { LabelDisplayedRowsArgs } from '@material-ui/core/TablePagination';\nimport { Loading } from 'Pages/CustomerCarePage/Components/Loading';\n\ninterface IProps {\n    memberId: string;\n}\n\ninterface IStates {\n    benefitCategory: string;\n    benefitName: string;\n    limitType: string;\n    limit: string;\n\n    benefitListUpdated: boolean;\n}\n\n\nexport class CheckBenefitSection extends React.Component<IProps, IStates> {\n\n    benefits: PartialBenefitData[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            benefitCategory: '',\n            benefitName: '',\n            limitType: '',\n            limit: '',\n            benefitListUpdated: false\n        }\n\n        this.benefits = [];\n    }\n\n    componentDidMount() {\n        this.loadBenefitsData();\n    }\n\n    loadBenefitsData(): void {\n        API.get(`customer-care/members/${this.props.memberId}/benefits`, \n            (response) => {\n                console.log(response);\n                this.benefits = this.combineNodes(\n                        response.filter(benefit => benefit.level == 6),\n                        response.filter(benefit => benefit.level == 7)\n                    ).map(benefit => {\n                        return {\n                            category: benefit.parent_name,\n                            name: benefit.name,\n                            limitType: (benefit.limits.length > 0 ? benefit.limits[0].type : 'None'),\n                            limit: (benefit.limits.length > 0 ? (\n                                benefit.limits[0].limit + ' ' + benefit.limits[0].limit_unit\n                            ) : '---')\n                        }\n                    });\n                this.setState({benefitListUpdated: true});\n\n                /* Testing only */\n                console.log(\n                    this.combineNodes(\n                        response.filter(benefit => benefit.level == 6),\n                        response.filter(benefit => benefit.level == 7)\n                    )\n                );\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    combineNodes = (parentNodes, childNodes) => {\n        const nodes = parentNodes.reduce ((result, parent) => {\n            parent.children.map ((child) => {\n            let foundChild = childNodes.find ((childNode) => child === childNode._id);\n        \n            if (foundChild) {\n                let child = Object.assign({}, foundChild);\n        \n                child['parent_name'] = parent.name;\n                child['parent_code'] = parent.code;\n                child['disabled'] = false;\n                result.push(child);\n            }\n            });\n        \n            return result;\n        }, new Array());\n        \n        return nodes;\n    };\n\n    getFilteredBenefitsData = () => {\n        return (\n            this.benefits\n                .filter(benefit => \n                    this.state.benefitCategory === '' || \n                    benefit.category.toLowerCase().includes(this.state.benefitCategory.toLowerCase()))\n                .filter(benefit => \n                    this.state.benefitName === '' || \n                    benefit.name.toLowerCase().includes(this.state.benefitName.toLowerCase()))\n                .filter(benefit => \n                    this.state.limitType === '' || \n                    benefit.limitType.toLowerCase().includes(this.state.limitType.toLowerCase()))\n                .filter(benefit => \n                    this.state.limit === '' || \n                    benefit.limit.toLowerCase().includes(this.state.limit.toLowerCase()))\n        );\n    }\n    \n    sortBenefits(attrName: string, isAsc: boolean): void {\n        this.benefits.sort((a: PartialBenefitData, b: PartialBenefitData) => \n            (a[attrName] && b[attrName] && a[attrName].toString().toLowerCase() > b[attrName].toString().toLowerCase()) ? \n                (isAsc ? 1 : -1) : (isAsc ? -1 : 1)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='section'>\n\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Check Benefits</div>\n                <div className='sub-section' />\n                <Grid container className='sub-section' spacing={5}>\n                    {this.renderSideBar()}\n\n                    {this.state.benefitListUpdated ? (\n                        this.renderBenefitsList()\n                    ) : (\n                        <Grid item xs={10}>\n                            <Loading height='10rem'/>\n                        </Grid>\n                    )}\n                    \n                </Grid>\n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderSideBar(): JSX.Element {\n        const rightBorderStyle = {\n            borderRight: '#3C394A22 solid 1px'\n        }\n        return (\n            <Grid item xs={2} style={rightBorderStyle}>\n                    <div className='small-text'>Contract ID</div>\n                    <div className='header-1'>{'2019-0928*'}</div>\n                <div className='sub-section'>\n                    <div className='small-text'>Room and Board</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>COVERAGE</div>\n                    <div className='sub-section'>\n                        <TextButton \n                            label='APE' \n                            onClick={() => {\n                                this.setState({benefitListUpdated: false});\n                                this.loadBenefitsData();\n                            }} />\n                    </div>\n                    <div className='sub-section'>\n                        <TextButton \n                            label='PPE' \n                            onClick={() => {\n                                this.setState({benefitListUpdated: false});\n                                this.loadBenefitsData();\n                            }} />\n                    </div>\n                    <div className='sub-section'>\n                        <TextButton \n                            label='Inpatient' \n                            onClick={() => {\n                                this.setState({benefitListUpdated: false});\n                                this.loadBenefitsData();\n                            }} />\n                    </div>\n                    <div className='sub-section'>\n                        <TextButton \n                            label='Outpatient' \n                            onClick={() => {\n                                this.setState({benefitListUpdated: false});\n                                this.loadBenefitsData();\n                            }} />\n                    </div>\n                    <div className='sub-section'>\n                        <TextButton \n                            label='Emergency' \n                            onClick={() => {\n                                this.setState({benefitListUpdated: false});\n                                this.loadBenefitsData();\n                            }} />\n                    </div>\n                </div>\n\n                <div className='sub-section'>\n                    <div className='header-1 light-text'>RIDERS</div>\n                </div>\n\n            </Grid>\n        );\n    }\n\n    renderBenefitsList(): JSX.Element {\n\n        return (\n            <Grid item xs={10}>\n                <div className='sub-section'>\n                    <CustomTable\n                        rows={this.getFilteredBenefitsData()}\n                        renderHeader={() => this.renderTableHeader()}\n                        renderRow={(rowData: any, index: number) => \n                            this.renderTableRow(rowData, index)}\n                        onChangeInfo={(info: LabelDisplayedRowsArgs) => \n                            `${info.from}-${info.to} out of ${info.count} benefits`}\n                        labelRowsPerPage='Show'\n                        rowsPerPageOptions={[10, 25, 50]} />\n                </div>\n\n            </Grid>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n\n        return (\n            <>\n            {this.renderHeaderColumn('benefitCategory', 'Benefit Category', '150px')}\n            {this.renderHeaderColumn('benefitName', 'Benefit', '250px')}\n            {this.renderHeaderColumn('limitType', 'Limit Type', '100px')}\n            {this.renderHeaderColumn('limit', 'Limit', '100px')}\n            </>\n        );\n    }\n\n    renderTableRow(benefit: PartialBenefitData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{benefit.category}</TableCell>\n                <TableCell>{benefit.name}</TableCell>\n                <TableCell>{benefit.limitType}</TableCell>\n                <TableCell>{benefit.limit}</TableCell>\n            </TableRow>\n        );\n    }\n\n    renderHeaderColumn(attrName: string, headerText: string, width: string): JSX.Element {\n        return (\n            <TableCell style={{width: width}}>\n                <span className='header-2'>{headerText}</span>\n                <div style={{float: 'right'}}>\n                    <IconButton \n                        icon={faSort} \n                        onClick={() => {\n                            this.sortBenefits(attrName, true);\n                            this.setState({benefitListUpdated: true});\n                        }} />\n                </div>\n                <InputField\n                    value={this.state[attrName]}\n                    onChange={(value: string) => {\n                        this.setState(prevState => ({...prevState, [attrName]: value}));\n                    }} />\n            </TableCell>\n        );\n    }\n}","\nimport * as React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport './../style.scss';\nimport { LeftPanelSection } from '../LeftPanelSection/LeftPanelSection';\nimport { API } from './../API';\nimport { ConfinementSection } from './Components/ConfinementSection';\nimport { AvailmentSection } from './Components/AvailmentSection';\nimport { TicketInfoSection } from './Components/TicketInfoSection';\nimport { TicketData, MemberData, DropdownChoice, ConfinementDetails, InquiryData, AvailmentDetails, ConsultationDetails, ClientData } from '../Models';\nimport { InquirySection } from './Components/InquirySection';\nimport { Payloads } from '../Payloads';\nimport { ConsultationSection } from './Components/ConsultationSection';\nimport { Processmaker } from '../Processmaker';\nimport { EmergencyRoomSection } from './Components/EmergencyRoomSection';\nimport { TicketFooter } from '../TicketFooter';\nimport { Loading } from '../Components/Loading';\nimport { Snackbar } from '@material-ui/core';\nimport { GlobalFunction } from '../GlobalFunction';\nimport { CustomTabs } from '../Components/CustomTab';\nimport { ClientProfileSection } from './Components/ClientProfileSection/ClientProfileSection';\nimport { MemberProfileSection } from './Components/MemberProfileSection';\nimport { PartnerNetworkSection } from '../ResolveTicketPage/Components/PartnerNetworkSection';\nimport { CheckUtilizationSection } from '../ResolveTicketPage/Components/CheckUtilizationSection';\nimport { ReviewTicketsSection } from '../ResolveTicketPage/Components/ReviewTicketsSection';\nimport { CheckContractSection } from '../ResolveTicketPage/Components/CheckContractSection';\nimport { CheckBenefitSection } from '../ResolveTicketPage/Components/CheckBenefitSection';\n\ninterface IProps {\n    history: any;\n}\n\ninterface IStates {\n    tabSelected: number;\n    createTicketAttemp: boolean;\n    isIcd10CodesLoaded: boolean;\n    isSaving: boolean;\n    loadedResources: number;\n    snackbarMessage: string | null;\n    lastSave?: Date;\n\n    /* Can save to tmp */\n    client?: ClientData;\n    member?: MemberData;\n    ticket: TicketData;\n    availment: AvailmentDetails;\n    confinement: ConfinementDetails;\n    consultation: ConsultationDetails;\n    inquiries: InquiryData[];\n}\n\nexport class CreateTicketPage extends React.Component<IProps, IStates> {\n\n    static RESOURCES_TO_LOAD = 1;\n\n    clientTabList = [\n        { value: 1, label: 'Ticket Details' }, \n        { value: 2, label: 'Client Profile' }, \n        { value: 3, label: 'Benefits' }, \n        { value: 4, label: 'Partner Network' }, \n        // { value: 5, label: 'Exclusion' }, \n        { value: 6, label: 'Utilization' }, \n        { value: 7, label: 'Tickets' },  \n        { value: 8, label: 'Contract' }\n    ];\n\n    memberTabList = [\n        { value: 1, label: 'Ticket Details' }, \n        { value: 2, label: 'Member Profile' }, \n        /*\n        { value: 3, label: 'Partner Network' }, \n        { value: 4, label: 'Exclusion' }, \n        { value: 5, label: 'Utilization' }, \n        { value: 6, label: 'Tickets' },  \n        { value: 7, label: 'Contract' },\n        */\n    ];\n\n    icd10Codes: DropdownChoice[];\n    cptCodes: DropdownChoice[];\n    facilities: DropdownChoice[];\n    doctors: DropdownChoice[];\n    agents: DropdownChoice[];\n    \n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            tabSelected: 1,\n            createTicketAttemp: false,\n            isIcd10CodesLoaded: false,\n            isSaving: false,\n            snackbarMessage: null,\n            loadedResources: 0,\n\n            ticket: {\n                ticketChannel: 'Call',\n                transactionNo: '9999-9999',\n                ticketSource: '',\n                memberName: '',\n                clientName: '',\n                brokerName: '',\n                facility: { value: '', label: '' },\n                department: '',\n                callerName: '',\n                contactNo: '',\n                ticketType: '',\n                specificType: '',\n                urgency: 'High',\n                agent: { id: '', name: '' },\n                additionalNotes: '',\n                additionalFiles: [],\n                ticketNo: '',\n                pmCaseId: '',\n                status: 'Open',\n                createdBy: { \n                    id: localStorage['user_id'], \n                    name: `${localStorage['first_name']} ${localStorage['last_name']}` \n                },\n                dateCreated: new Date(),\n                dateUpdated: new Date(),\n                dateEscalated: null\n            },\n            availment: {\n                provider: { value: '', label: '' },\n                diagnoses: []\n            },\n            confinement: {\n                provider: { value: '', label: '' },\n                dateAdmitted: new Date(),\n                confinementKind: '',\n                roomType: '',\n                costPerDay: 0,\n                doctor: { value: '', label: '' },\n                initialDiagnosis: { value: '', label: '' },\n                amount: 0\n            },\n            consultation: {\n                provider: { value: '', label: '' },\n                diagnosis: { value: '', label: '' },\n                doctor: { value: '', label: '' },\n                notes: '',\n                assessmentRemarks: '',\n                assessmentType: 'Pending',\n                approvedAmount: 0\n            },\n            inquiries: []\n        };\n\n        this.facilities = [];\n        this.agents = [];\n        this.doctors = [];\n        this.cptCodes = [];\n        this.icd10Codes = [];\n    }\n\n    componentDidMount() {\n        API.get('facilities',\n            (response) => {\n                this.facilities = response.map(facility => {\n                    return { \n                        value: facility.facility_id,\n                        label: facility.name \n                    }\n                });\n            },\n            (error) => {\n                console.log(error);\n            });\n\n\n\n        const tempIcd10Codes = localStorage.getItem('icd10_codes');\n        if (!tempIcd10Codes) {\n            API.get('icd10-codes?filter[limit]=1000',\n                (response) => {\n                    this.icd10Codes = response.map(icd10Code => {\n                        return { \n                            value: icd10Code.full_code,\n                            label: icd10Code.abbreviated_description \n                        };\n                    });\n                    localStorage.setItem('icd10_codes', JSON.stringify(this.icd10Codes));\n                    this.setState({isIcd10CodesLoaded: true});\n                },\n                (error) => {\n                    console.log(error);\n                });\n        } else {\n            this.icd10Codes = JSON.parse(tempIcd10Codes);\n            console.log(\"Using the local copy of ICD10 Codes\");\n        }\n        \n\n\n        const tempCptCodes = localStorage.getItem('cpt_codes');\n        if (!tempCptCodes) {\n            API.get('cpts',\n                (response) => {\n                    this.cptCodes = response.map(cptCode => {\n                        return {\n                            value: cptCode.code.toString(),\n                            label: cptCode.label \n                        };\n                    });\n                    localStorage.setItem('cpt_codes', JSON.stringify(this.cptCodes));\n                }, \n                (error) => {\n                    console.log(error);\n                });\n        } else {\n            this.cptCodes = JSON.parse(tempCptCodes);\n            console.log(\"Using the local copy of CPT Codes\");\n        }\n        \n\n\n        API.get('doctors',\n            (response) => {\n                this.doctors = response.map(doctor => {\n                    return {\n                        value: doctor._id,\n                        label: ('Dr. ' + doctor.first_name +  ' ' + doctor.last_name),\n                        params: [doctor.type]\n                    };\n                });\n            }, \n            (error) => {\n                console.log(error);\n            });\n\n        API.get(`tmp?filter[where][and][0][user_id]=${localStorage['user_id']}&filter[where][and][1][module]=Customer%20Care`,\n            (response) => {\n                console.debug(response);\n                response = response.filter(item => item.process === 'Create Ticket');\n                if (response.length > 0) {\n                    this.setState({\n                        lastSave: new Date(response[0].timestamp),\n                        member: response[0].data.member,\n                        ticket: response[0].data.ticket,\n                        availment: response[0].data.availment,\n                        confinement: response[0].data.confinement,\n                        consultation: response[0].data.confinement,\n                        inquiries: response[0].data.inquiries\n                    });\n                }\n                this.setState({loadedResources: this.state.loadedResources + 1});\n            },\n            (error) => {\n                console.log(error);\n                this.setState({loadedResources: this.state.loadedResources + 1});\n            });\n    }\n\n    uploadFiles = (nextAction: Function) => {\n        let hasFiles = false;\n\n        const files = new FormData();\n        this.state.ticket.additionalFiles.forEach(file => {\n            if (!file['field']) {\n                files.append(`supported_documents`, file);\n                hasFiles = true;\n            }\n        });\n\n        this.setState({isSaving: true});\n\n        if (hasFiles) {\n            API.postFormData('tmp/upload?path=customer-care', files,\n                (uploadResponse) => {\n                    nextAction(uploadResponse);\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        isSaving: false,\n                        snackbarMessage: 'Failed to upload files.'\n                    });\n                });\n        } else {\n            nextAction([]);\n        }\n    }\n\n    submitTicket = () => {\n\n        this.setState({createTicketAttemp: true});\n        const ticket = this.state.ticket;\n        const confinement = this.state.confinement;\n        const availment = this.state.availment;\n        const consultation = this.state.consultation;\n        const inquiries = this.state.inquiries;\n        \n        if (!this.state.member && !this.state.client) return;\n\n        /* Confinement Details must have all contents */\n        if (ticket.ticketType === 'Availment' && ticket.specificType === 'Inpatient') {\n            if (confinement.provider.value === '' ||\n                confinement.confinementKind === '' ||\n                confinement.costPerDay === 0 ||\n                confinement.doctor.value === '' ||\n                confinement.initialDiagnosis.value === '' ||\n                confinement.roomType === '') {\n                return;\n            }\n        }\n\n        this.setState({isSaving: true});\n\n        this.uploadFiles((uploadResponse) => {\n            const payload = Payloads.getPostTicketPayload(\n                ticket, \n                \n                !uploadResponse.error && uploadResponse.length > 0 ? (\n                    this.state.ticket.additionalFiles\n                        .filter(file => file['field'])\n                        .concat(uploadResponse)\n                ) : (\n                    this.state.ticket.additionalFiles\n                ),\n                this.state.member,\n                this.state.client,\n                confinement, \n                availment, \n                inquiries, \n                consultation);\n            API.post('customer-care/tickets', JSON.stringify(payload),\n                (postTicketResponse) => { \n                    console.log(postTicketResponse);\n                    if (postTicketResponse['_id']) {\n                        console.log('Ticket No: '+postTicketResponse['id']);\n                        this.submitTicketProcessMaker(postTicketResponse['_id'], this.state.ticket);\n                    } else {\n                        this.setState({\n                            isSaving: false,\n                            snackbarMessage: 'Failed to create ticket.'\n                        });\n                    }  \n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        isSaving: false,\n                        snackbarMessage: 'Failed to create ticket.'\n                    });\n                });\n        });\n    }\n\n    submitTicketProcessMaker = (ticketId: string, ticket: TicketData) => {\n        let is_availment = false;\n        if (ticket.ticketType === 'Availment') {\n            is_availment=true;\n        }\n        let trigger_id = \"3905447335db2a32daafd33048658514\"; //should refer to redux createtickettrigger_id!!!\n        let body = {\n            \"pro_uid\" : \"1538417025dae8dae9ff7a9016454302\", //should refer to redux createticketproject_id!!!\n            \"tas_uid\":\"6092309955dae8db0a85907021073537\",   //should refer to redux createticketstarttask_id!!!\n            \"ticket_no\": ticketId,\n            \"can_be_resolved_imm\": 0,\n            \"is_availment\":is_availment\n        };\n        console.log('Body:', body);\n\n        Processmaker.post('cases', body,\n            (casesResponse) => {\n                if (casesResponse['app_uid']) {\n                    processmakerExecuteTrigger(\n                        casesResponse['app_uid'], \n                        casesResponse['app_number'],\n                        trigger_id\n                    );\n                }\n            }, \n            (error) => {\n                console.log(error);\n                this.setState({\n                    isSaving: false,\n                    snackbarMessage: 'Failed to create ticket.'\n                });\n            }\n        );\n        \n        const processmakerExecuteTrigger = (appUID: string, appNo: string, triggerId: string) => {\n            Processmaker.put(`cases/${appUID}/execute-trigger/${triggerId}`, body,\n                (triggerResponse) => {\n                    console.log('Trigger Response: ', triggerResponse);\n                    processmakerVariable(appUID, appNo);\n                }, \n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        isSaving: false,\n                        snackbarMessage: 'Failed to create ticket.'\n                    });\n                });\n        }\n\n        const processmakerVariable = (appUID: string, appNo: string) => {\n            Processmaker.put(`cases/${appUID}/variable`, body,\n                (variableResponse) => {\n                    console.log('Set Variable Response: ', variableResponse);\n                    patchCaseUID(appUID, appNo);\n                }, \n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        isSaving: false,\n                        snackbarMessage: 'Failed to create ticket.'\n                    });\n                });\n        }\n\n        const patchCaseUID = (appUID: string, appNo: string) => {\n            API.patch(`customer-care/tickets/${ticketId}`, { pmaker_case_uid: appUID },\n                (patchTicketResponse) => {\n                    console.log('Patch Response: ', patchTicketResponse);\n                    redirectToNextPage(appUID, appNo);\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        isSaving: false,\n                        snackbarMessage: 'Failed to create ticket.'\n                    });\n                });\n        }\n\n        const redirectToNextPage = (appUID: string, appNo: string) => {\n            const ticketNo = GlobalFunction.generateTicketNumber(ticket.ticketType, ticket.specificType, appNo);\n            const url = \n                ticket.ticketType === 'Inquiry' || ticket.specificType === 'Inpatient' ? (\n                    `#/customer-care/update-ticket/${appUID}/${ticketNo}/${ticketId}`\n                ) : (\n                    `#/customer-care/resolve-ticket/${appUID}/${ticketNo}/${ticketId}`\n                );\n            this.props.history.push(url);\n            window.location.reload();\n            this.setState({isSaving: false});\n        }\n    }\n\n    saveForNow = () => {\n        this.uploadFiles((uploadResponse) => {\n            console.log(uploadResponse);\n            const payload = {\n                user_id: localStorage['user_id'],\n                module: 'Customer Care',\n                process: 'Create Ticket',\n                timestamp: new Date(),\n                data: {\n                    member: this.state.member,\n                    ticket: {\n                        ...this.state.ticket,\n                        additionalFiles: !uploadResponse.error && uploadResponse.length > 0 ? (\n                            this.state.ticket.additionalFiles\n                                .filter(file => file['field'])\n                                .concat(uploadResponse)\n                        ) : (\n                            this.state.ticket.additionalFiles\n                        )\n                    },\n                    availment: this.state.availment,\n                    confinement: this.state.confinement,\n                    consultation: this.state.confinement,\n                    inquiries: this.state.inquiries\n                }\n            };\n            console.log('Saving this: ', payload);\n            API.post('tmp', JSON.stringify(payload),\n                (response) => {\n                    console.log(response);\n                    if (response._id) {\n                        this.setState({\n                            isSaving: false,\n                            snackbarMessage: 'Progress saved.',\n                            lastSave: new Date()\n                        });\n                    } else {\n                        this.setState({\n                            isSaving: false,\n                            snackbarMessage: 'Failed to save progress.'\n                        });\n                    }\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        isSaving: false,\n                        snackbarMessage: 'Failed to save progress.'\n                    });\n                });\n        });\n    }\n\n    render(): JSX.Element {\n        \n        return (\n            <>\n            <Grid container className='customer-care-main'>\n\n                {this.state.loadedResources !== CreateTicketPage.RESOURCES_TO_LOAD || this.state.isSaving ? (\n                    <div \n                        style={{\n                            backgroundColor: '#00000055', \n                            zIndex: 100, \n                            position: 'fixed', \n                            width: '100%', \n                            height: '100%'}}>\n                        <Loading height='15rem' size={100}/>\n                    </div>\n                    \n                ) : (null)}\n\n                <Snackbar\n\t\t\t        anchorOrigin={{vertical: 'top',horizontal: 'right'}}\n\t\t\t        open={this.state.snackbarMessage ? true : false}\n\t\t\t        autoHideDuration={6000}\n\t\t\t        onClose={() => {\n                        this.setState({snackbarMessage: null});\n                    }}\n                    message={this.state.snackbarMessage} />\n\n                <LeftPanelSection \n                    client={this.state.client}\n                    member={this.state.member}\n                    ticketStatus='Create'\n                    promptChooseMember={this.state.createTicketAttemp}\n                    onUpdateMemberStateChange={(member: MemberData) => {\n                        if (member) {\n                            const hasActiveContract = (\n                                member.contract && \n                                member.contract.status === 'Active'\n                            );\n                            if (!hasActiveContract && this.state.ticket.ticketType === 'Availment') {\n                                this.state.ticket.ticketType = '';\n                                this.setState({ticket: Object.assign({}, this.state.ticket)});\n                            }\n                        }\n\n                        this.setState({member: member});\n                    }}\n                    onUpdateClientStateChange={(client: ClientData) => {\n                        this.setState({client: client});\n                    }} />\n\n                {this.state.client ? (\n                    <>\n                    <CustomTabs \n                        tabList={this.clientTabList}\n                        selectedTab={this.state.tabSelected}\n                        setSelectedTab={(index: number) => {\n                            this.setState({tabSelected: index});\n                        }} />\n                    <div className={`main-content${this.state.tabSelected === 1 ? '-flex' : ''}`}>\n                        {this.state.tabSelected === 1 ? (\n                            this.renderMainContent()\n                        ) : this.state.tabSelected === 2 ? (\n                            <ClientProfileSection clientId={this.state.client.id} history={this.props.history} />\n                        ) : this.state.tabSelected === 3 ? (\n                            <CheckBenefitSection memberId={this.state.client.id} />\n                        ) : this.state.tabSelected === 4 ? (\n                            <PartnerNetworkSection clientId={this.state.client.id} />\n                        ) : this.state.tabSelected === 5 ? (\n                            <div className='header'>TAB 3</div>\n                        ) : this.state.tabSelected === 6 ? (\n                            <CheckUtilizationSection />\n                        ) : this.state.tabSelected === 7 ? (\n                            <ReviewTicketsSection clientId={this.state.client.corporateAccountNo} />\n                        ) : this.state.tabSelected === 8 ? (\n                            <CheckContractSection clientId={this.state.client.corporateAccountNo} />\n                        ) : null}\n                    </div>\n                    </>\n                ) : this.state.member ? (\n                    <>\n                    <CustomTabs \n                        tabList={this.memberTabList}\n                        selectedTab={this.state.tabSelected}\n                        setSelectedTab={(index: number) => {\n                            this.setState({tabSelected: Math.min(index, 3)});\n                        }} />\n                    <div className={`main-content${this.state.tabSelected === 1 ? '-flex' : ''}`}>\n                        {this.state.tabSelected === 1 ? (\n                            this.renderMainContent()\n                        ) : this.state.tabSelected === 2 ? (\n                            <MemberProfileSection memberNumber={this.state.member.memberId} history={this.props.history} />\n                        ) : this.state.tabSelected === 3 ? (\n                            <PartnerNetworkSection clientId={(this.state.member.client && this.state.member.client.id ? this.state.member.client.id : '')}/>\n                        ) : this.state.tabSelected === 4 ? (\n                            <div className='header'>TAB 3</div>\n                        ) : this.state.tabSelected === 5 ? (\n                            <CheckUtilizationSection />\n                        ) : this.state.tabSelected === 6 ? (\n                            <div className='header'>TAB 5</div>\n                        ) : this.state.tabSelected === 7 ? (\n                            <div className='header'>TAB 6</div>\n                        ) : null}\n                    </div>\n                    </>\n                ) : (\n                    <div className='main-content-flex'>\n                        {this.renderMainContent()}\n                    </div>\n                )}   \n            </Grid>\n\n            <TicketFooter \n                lastSave={this.state.lastSave}\n                onSaveForNow={() => {\n                    this.saveForNow();\n                }} \n                onSubmitTicket={() => {\n                    this.submitTicket();\n                }} />\n            </>\n        );\n    }\n\n    renderMainContent(): JSX.Element {\n        return (\n            <>\n            <TicketInfoSection \n                member={this.state.member}\n                client={this.state.client}\n                ticket={this.state.ticket} \n                facilities={this.facilities}\n                agents={this.agents}\n                createTicketAttemp={this.state.createTicketAttemp}\n                refreshTicketState={() => {\n                    this.setState({ticket: Object.assign({}, this.state.ticket)});\n                }} />\n\n            {this.state.ticket.ticketType === 'Availment' ? (\n            \n                this.state.ticket.specificType === 'Outpatient Procedure' ? (  \n                    <AvailmentSection\n                        availment={this.state.availment}\n                        facilities={this.facilities}\n                        doctors={this.doctors}\n                        icd10Codes={this.icd10Codes}\n                        cptCodes={this.cptCodes}\n                        createTicketAttemp={this.state.createTicketAttemp}\n                        refreshAvailmentState={() => {\n                            this.setState({availment: Object.assign({}, this.state.availment)});\n                        }} />\n\n                ) : this.state.ticket.specificType === 'Inpatient' ? ( \n                    <ConfinementSection\n                        confinement={this.state.confinement}\n                        facilities={this.facilities}\n                        doctors={this.doctors}\n                        cptCodes={this.icd10Codes}\n                        createTicketAttemp={this.state.createTicketAttemp}\n                        refreshConfinementState={() => {\n                            this.setState({confinement: this.state.confinement});\n                        }} />\n                ) : this.state.ticket.specificType === 'Emergency Room' ? (\n                    <EmergencyRoomSection\n                        availment={this.state.availment}\n                        facilities={this.facilities}\n                        doctors={this.doctors}\n                        icd10Codes={this.icd10Codes}\n                        cptCodes={this.cptCodes}\n                        createTicketAttemp={this.state.createTicketAttemp}\n                        refreshAvailmentState={() => {\n                            this.setState({availment: this.state.availment});\n                        }} />\n                    \n                ) : this.state.ticket.specificType === 'Consultation' ? ( \n                    <ConsultationSection\n                        consultation={this.state.consultation}\n                        facilities={this.facilities}\n                        doctors={this.doctors}\n                        icd10Codes={this.icd10Codes}\n                        createTicketAttemp={this.state.createTicketAttemp}\n                        refreshConsultationState={() => {\n                            this.setState({consultation: this.state.consultation});\n                        }} />\n                ) : null\n\n            ) : this.state.ticket.ticketType === 'Inquiry' ? (\n                <InquirySection\n                    inquiries={this.state.inquiries}\n                    refreshInquiryState={() => {\n                        this.setState({inquiries: this.state.inquiries});\n                    }} />\n            ) : null}\n            </>\n        );\n    }\n}","\nimport * as React from 'react';\n\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { Grid, TableCell, TableRow } from '@material-ui/core';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { UpdateData, AccommodationData, DiagnosisData, PhysicianData, ProcedureData, ItemData } from '../UpdateTicketProps';\nimport { DropdownChoice } from 'Pages/CustomerCarePage/Models';\n\ninterface IProps {\n    ticketNo: string;\n    updates: UpdateData[];\n    accommodations: AccommodationData[];\n    diagnoses: DiagnosisData[];\n    physicians: PhysicianData[];\n    procedures: ProcedureData[];\n    items: ItemData[];\n\n    provider: DropdownChoice;\n    dateAdmitted: Date;\n    confinementKind: string;\n\n    coverage: DropdownChoice;\n    philhealthAmount: number;\n    finalBill: number;\n    dischargeDate?: Date;\n    setTabSelected: (value: number) => void;\n}\n\nexport class SummarySection extends React.Component<IProps> {\n\n    getTotalAccommodationCost = () => {\n        let totalCost = 0;\n        this.props.accommodations.map(accommodation => {\n            totalCost += accommodation.costPerDay * accommodation.days;\n        });\n        return totalCost;\n    }\n\n    getTotalPhysicianCost = () => {\n        let totalCost = 0;\n        this.props.physicians.map(physician => {\n            totalCost += physician.amount;\n        });\n        return totalCost;\n    }\n\n    getTotalProcedureCost = () => {\n        let totalCost = 0;\n        this.props.procedures.map(procedure => {\n            totalCost += procedure.amount;\n        });\n        return totalCost;\n    }\n\n    getTotalItemCost = () => {\n        let totalCost = 0;\n        this.props.items.map(item => {\n            totalCost += item.amount;\n        });\n        return totalCost;\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='section'>\n                <div className='header-1'>Review Summary</div>\n                {this.renderSection('UPDATES', 'update', 2,\n                    <CustomTable\n                        className='custom-table'\n                        rows={this.props.updates}\n                        renderHeader={() => {\n                            return (\n                                <>\n                                <TableCell>Remarks</TableCell>\n                                <TableCell style={{width: '200px'}}>As of Date</TableCell>\n                                <TableCell style={{textAlign: 'right', width: '200px'}}>Running Hospital Bill</TableCell>\n                                </>\n                            );\n                        }}\n                        renderRow={(update: UpdateData, index: number) => {\n                            const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                            return (\n                                <TableRow style={{backgroundColor: backgroundColor}}>\n                                    <TableCell>{update.remarks}</TableCell>\n                                    <TableCell>{GlobalFunction.toCommonDateString(update.date)}</TableCell>\n                                    <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(update.hospitalBill, true)} PHP`}</TableCell>\n                                </TableRow>\n                            );\n                        }} />\n                )}\n                \n                {this.renderSection('ROOM ACCOMMODATIONS', 'room', 3, \n                    <CustomTable\n                        className='custom-table'\n                        rows={this.props.accommodations}\n                        renderHeader={() => {\n                            return (\n                                <>\n                                <TableCell>Room Type</TableCell>\n                                <TableCell style={{textAlign: 'right', width: '200px'}}>No. of Days</TableCell>\n                                <TableCell style={{textAlign: 'right', width: '300px'}}>Cost Per Day</TableCell>\n                                </>\n                            );\n                        }}\n                        renderRow={(accommodation: AccommodationData, index: number) => {\n                            const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                            return (\n                                <TableRow style={{backgroundColor: backgroundColor}}>\n                                    <TableCell>{accommodation.roomType}</TableCell>\n                                    <TableCell style={{textAlign: 'right'}}>{accommodation.days}</TableCell>\n                                    <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(accommodation.costPerDay, true)} PHP`}</TableCell>\n                                </TableRow>\n                            );\n                        }} />,\n                        this.getTotalAccommodationCost()\n                )}\n\n                {this.renderSection('DIAGNOSES', 'diagnosis', 4, \n                    <CustomTable\n                        className='custom-table'\n                        rows={this.props.diagnoses}\n                        renderHeader={() => {\n                            return (\n                                <>\n                                <TableCell style={{width: '300px'}}>Diagnosis</TableCell>\n                                <TableCell>Remarks</TableCell>\n                                <TableCell style={{textAlign: 'center', width: '100px'}}>Type</TableCell>\n                                <TableCell style={{textAlign: 'center', width: '175px'}}>Primary Diagnosis?</TableCell>\n                                </>\n                            );\n                        }}\n                        renderRow={(diagnosis: DiagnosisData, index: number) => {\n                            const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                            return (\n                                <TableRow style={{backgroundColor: backgroundColor}}>\n                                    <TableCell>{`${diagnosis.diagnosis.value} - ${diagnosis.diagnosis.label}`}</TableCell>\n                                    <TableCell>{diagnosis.remarks}</TableCell>\n                                    <TableCell style={{textAlign: 'center'}}>{diagnosis.isFinal ? 'Final' : 'Initial'}</TableCell>\n                                    <TableCell style={{textAlign: 'center'}}>{diagnosis.isPrimary ? 'Yes' : 'No'}</TableCell>\n                                </TableRow>\n                            );\n                        }} />\n                )}\n                \n                {this.renderSection('PHYSICIANS', 'physicians', 5, \n                    <CustomTable\n                        className='custom-table'\n                        rows={this.props.physicians}\n                        renderHeader={() => {\n                            return (\n                                <>\n                                <TableCell style={{width: '250px'}}>Specialization - Doctor Name</TableCell>\n                                <TableCell style={{width: '100px'}}>Diagnosis</TableCell>\n                                <TableCell>Remarks</TableCell>\n                                <TableCell style={{textAlign: 'right', width: '125px'}}>No. of Visits</TableCell>\n                                <TableCell style={{textAlign: 'right', width: '200px'}}>Amount</TableCell>\n                                </>\n                            );\n                        }}\n                        renderRow={(physician: PhysicianData, index: number) => {\n                            const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                            return (\n                                <TableRow style={{backgroundColor: backgroundColor}}>\n                                    {physician.physician.params? (\n                                        <TableCell>\n                                            <div className='text'>{`${physician.physician.params[0]} - ${physician.physician.label}`}</div>\n                                            <div className='light-text'>{`${physician.physician.params[1]} Physician`}</div>\n                                        </TableCell>\n                                    ) : ''}\n                                    <TableCell>{physician.diagnosis.value}</TableCell>\n                                    <TableCell>{physician.remarks}</TableCell>\n                                    <TableCell style={{textAlign: 'right'}}>{physician.visits}</TableCell>\n                                    <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(physician.amount, true)} PHP`}</TableCell>\n                                </TableRow>\n                            );\n                        }} />,\n                        this.getTotalPhysicianCost()\n                )}\n                \n                {this.renderSection('PROCEDURES', 'procedures', 6,\n                    <CustomTable\n                        className='custom-table'\n                        rows={this.props.procedures}\n                        renderHeader={() => {\n                            return (\n                                <>\n                                <TableCell style={{width: '200px'}}>Procedure</TableCell>\n                                <TableCell style={{width: '100px'}}>Diagnosis</TableCell>\n                                <TableCell style={{width: '175px'}}>Doctor</TableCell>\n                                <TableCell style={{width: '150px'}}>Date</TableCell>\n                                <TableCell style={{minWidth: '100px'}}>Remarks</TableCell>\n                                <TableCell style={{textAlign: 'right', width: '150px'}}>Amount</TableCell>\n                                </>\n                            );\n                        }}\n                        renderRow={(procedure: ProcedureData, index: number) => {\n                            const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                            return (\n                                <TableRow style={{backgroundColor: backgroundColor}}>\n                                    <TableCell>{`${procedure.procedure.value} - ${procedure.procedure.label}`}</TableCell>\n                                    <TableCell>{procedure.diagnosis.value}</TableCell>\n                                    <TableCell>{procedure.physician.label}</TableCell>\n                                    <TableCell>{GlobalFunction.toCommonDateString(procedure.date)}</TableCell>\n                                    <TableCell>{procedure.remarks}</TableCell>\n                                    <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(procedure.amount, true)} PHP`}</TableCell>\n                                </TableRow>\n                            );\n                        }} />,\n                        this.getTotalProcedureCost()\n                )}\n                \n                {this.renderSection('OTHER DETAILS', 'item', 8, \n                    <CustomTable \n                        className='custom-table'\n                        rows={this.props.items}\n                        renderHeader={() => {\n                            return (\n                                <>\n                                <TableCell>Item</TableCell>\n                                <TableCell style={{width: '250px'}}>Type</TableCell>\n                                <TableCell style={{textAlign: 'right', width: '250px'}}>Amount</TableCell>\n                                </>\n                            );\n                        }}\n                        renderRow={(item: ItemData, index: number) => {\n                            const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                            return (\n                                <TableRow style={{backgroundColor: backgroundColor}}>\n                                    <TableCell>{item.name}</TableCell>\n                                    <TableCell>{item.type.label}</TableCell>\n                                    <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(item.amount, true)} PHP`}</TableCell>\n                                </TableRow>\n                            );\n                        }} />,\n                        this.getTotalItemCost()\n                )}\n                \n                <div className='sub-section'>\n                    <Grid container>\n                        <Grid item xs={4}>\n                            <div className='header-2'>PHILHEALTH</div>\n                            <div className='sub-section'>\n                                <div className='light-text'>COVERAGE</div>\n                                <div className='small-text'>{this.props.coverage.label}</div>\n                            </div>\n                            <div className='sub-section'>\n                                <div className='light-text'>AMOUNT</div>\n                                <div className='small-text'>{GlobalFunction.formatNumber(this.props.philhealthAmount, true) + \" PHP\"}</div>\n                            </div>\n                            <div className='sub-section'>\n                                <div className='light-text'>TICKET NUMBER</div>\n                                <div className='small-text'>{this.props.ticketNo}</div>\n                            </div>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <div className='header-2'>CONFINEMENT</div>\n                            <div className='sub-section'>\n                                <div className='light-text'>PROVIDER</div>\n                                <div className='small-text'>{this.props.provider.value + ' - ' + this.props.provider.label}</div>\n                            </div>\n                            <div className='sub-section'>\n                                <div className='light-text'>DATE ADMITTED</div>\n                                <div className='small-text'>{GlobalFunction.toCommonDateString(this.props.dateAdmitted)}</div>\n                            </div>\n                            <div className='sub-section'>\n                                <div className='light-text'>KIND OF CONFINEMENT</div>\n                                <div className='small-text'>{this.props.confinementKind}</div>\n                            </div>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <div className='header-2'>DISCHARGE DETAILS</div>\n                            <div className='sub-section'>\n                                <div className='light-text'>FINAL HOSPITAL BILL AMOUNT</div>\n                                <div className='small-text'>{GlobalFunction.formatNumber(this.props.finalBill, true) + ' PHP'}</div>\n                            </div>\n                            <div className='sub-section'>\n                                <div className='light-text'>DISCHARGE DATE</div>\n                                <div className='small-text'>\n                                    {this.props.dischargeDate ? (\n                                        GlobalFunction.toCommonDateString(this.props.dischargeDate)\n                                    ) : '---'}\n                                </div>\n                            </div>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <TextButton \n                                label='Edit PhilHealth' \n                                onClick={() => {\n                                    window.scroll(0, -window.pageYOffset);\n                                    this.props.setTabSelected(7);\n                                }}/>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <TextButton \n                                label='Edit Confinement Details' \n                                onClick={() => {\n                                    window.scroll(0, -window.pageYOffset);\n                                    this.props.setTabSelected(3);\n                                }}/>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <TextButton\n                                label='Edit Discharge Details' \n                                onClick={() => {\n                                    window.scroll(0, -window.pageYOffset);\n                                    this.props.setTabSelected(7);\n                                }}/>\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderSection(headerName: string, miniText: string, tabIndex: number, table: JSX.Element, totalValue?: number): JSX.Element {\n        return (\n            <div className='sub-section'>\n                <div style={{float: 'right'}}>\n                    <TextButton \n                        label={`Add / Edit ${miniText}`} \n                        onClick={() => {\n                            window.scroll(0, -window.pageYOffset);\n                            this.props.setTabSelected(tabIndex);\n                        }}/>\n                </div>\n                <div className='header-2'>{headerName}</div>\n                {table}\n                {totalValue ? (\n                    <div className='sub-section'>\n                        <div style={{float: 'right'}}>\n                            <span className='small-text'>TOTAL AMOUNT</span>\n                            <span style={{marginLeft: '1rem'}} />\n                            <span className='header-2'>\n                                {GlobalFunction.formatNumber(totalValue, true) + ' PHP'}\n                            </span>\n                        </div>\n                </div>\n                ) : null}\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\nimport './../../Components/component-style.scss';\nimport { faPen, faMinusCircle, faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton } from '../../Components/IconButton';\n\ninterface IProps {\n    className: string;\n    placeholder: string;\n    cols: string[];\n    rows: string[][] | any;\n    defaultRows?: number;\n    noRowsMessage?: string | JSX.Element;\n\n    onSaveEditRow: (rowIndex: number, value: any) => void;\n    onDeleteRow: (rowIndex: number) => void; \n\n    /* \n     * Use this to stylize the column cells.\n     * rowIndex: the row index you want to style.\n     * colIndex: the column index you want to style.\n     * value: give you control to manipulate the value.\n     */\n    onFormat?: (rowIndex: number, colIndex: number, value: any) => JSX.Element;\n\n    /*\n     * Use this to stylize the column headers.\n     * colIndex: the column index you want to style.\n     * name: the header name at will appear.\n     */\n    onHeaderFormat?: (colIndex: number, name: string) => JSX.Element;\n\n    /* \n     * Use this when you want to stylize the column cell edit field\n     * colIndex: the column index you want to style.\n     * value: give you control to manipulate the value.\n     * onChange: a function called when user tried to type/input.\n     * - value: \n     */\n    editField: (colIndex: number, value: any, onChange: (value: any) => void) => JSX.Element;\n}\n\ninterface IStates {\n    rowToEdit: number;\n    data: any;\n}\n\nexport class CRUDTable extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            rowToEdit: -1,\n\n            data: {}\n        }\n    }\n\n    handleOnChange = (attrName: string) => (value: any) => {\n        this.setState(prevState => ({\n            data: {\n                ...prevState.data,\n                [attrName]: value\n            }\n        }));\n    }\n\n    renderCell(row: number, column: number, attrName: string, value: any): JSX.Element {\n        return (\n            <TableCell key={column}>\n                {this.state.rowToEdit === row ? (\n                    this.props.editField ? this.props.editField(column, this.state.data[attrName], this.handleOnChange(attrName)) : value  \n                ) : (\n                    this.props.onFormat ? this.props.onFormat(row, column, value) : value\n                )}\n            </TableCell>\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <>\n            <div className='header-2'>{this.props.placeholder}</div>\n            <Table className={(this.props.className ? this.props.className : '') + ' table'}>\n                <TableHead>\n                    <TableRow>\n                        {this.props.cols.map((colName, index) => {\n                            return (\n                                this.props.onHeaderFormat ? (\n                                    this.props.onHeaderFormat(index, colName)\n                                ) : (\n                                    <TableCell key={index}>{colName}</TableCell>\n                                )\n                            );\n                        })}\n                        <TableCell className='last-column'>\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {this.props.rows.length > 0 ? (\n                        this.props.rows.map((row, index1) => {\n                            const backgroundColor = (index1 % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                            return (\n                                <TableRow style={{backgroundColor: backgroundColor}} key={index1}>\n                                    {Object.keys(row).map((attrName, index2) => {\n                                        return (this.renderCell(index1, index2, attrName, row[attrName]));\n                                    })}\n                                    <TableCell className='last-column'>\n                                        {this.state.rowToEdit !== index1 ? (\n                                            <>\n                                            <div style={{display: 'inline-block', paddingRight: '0.5rem'}}>\n                                                <IconButton icon={faPen} onClick={() => {\n                                                    this.setState({rowToEdit: index1});\n                                                    this.setState({data: row});\n                                                }} />\n                                            </div>\n                                            <div style={{display: 'inline-block'}}>\n                                                <IconButton icon={faMinusCircle} onClick={() => {\n                                                    this.props.onDeleteRow(index1)\n                                                }} />\n                                            </div>\n                                            </>\n                                        ) : ( \n                                            <>\n                                            <div style={{display: 'inline-block', paddingRight: '0.5rem'}}>\n                                                <IconButton icon={faCheckCircle} onClick={() => {\n                                                    this.props.onSaveEditRow(index1, this.state.data);\n                                                    this.setState({rowToEdit: -1});\n                                                }} />\n                                            </div>\n                                            <div style={{display: 'inline-block'}}>\n                                                <IconButton icon={faTimesCircle} onClick={() => {\n                                                    this.setState({rowToEdit: -1});\n                                                }} />\n                                            </div>\n                                            </>\n                                        )}\n                                    </TableCell>\n                                </TableRow>\n                            );\n                        })\n                    ) : (\n                        <TableRow>\n                            <TableCell colSpan={999} style={{textAlign: 'center'}}>\n                                {this.props.noRowsMessage ? this.props.noRowsMessage : 'No data found'}\n                            </TableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { Grid, TableCell } from '@material-ui/core';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\n\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DatePicker } from 'Pages/CustomerCarePage/Components/DatePicker';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { DetailedNumberField } from 'Pages/CustomerCarePage/Components/DetailedNumberField';\nimport { UpdateData } from '../UpdateTicketProps';\n\nimport { CRUDTable } from './CRUDTable';\nimport { CustomCheckbox } from 'Pages/CustomerCarePage/Components/CustomCheckbox';\nimport { ConfinementDetails } from '../UpdateTicketPage';\n\ninterface IProps {\n    confinement: ConfinementDetails;\n    updates: UpdateData[];\n    state: UpdateData;\n    refreshUpdatesState: () => void;\n}\n\nexport class UpdateSection extends React.Component<IProps> {\n\n    constructor(props: IProps) {\n        super(props);\n    }\n\n    onFormatTableHeader = (colIndex: number, value: any) => {\n        return (\n            colIndex === 2 ? (\n                <TableCell style={{textAlign: 'right', minWidth: '200px'}}>{value}</TableCell>\n            ) : (\n                <TableCell style={{minWidth: '150px'}}>{value}</TableCell>\n            )\n        );\n    }\n\n    onFormatCRUDTable = (colIndex: number, value: any) => {\n        return (\n            colIndex === 1 ? (\n                <div>{GlobalFunction.toCommonDateString(value)}</div>\n            ) : colIndex === 2 ? (\n                <div style={{textAlign: 'right'}}>\n                    {GlobalFunction.formatNumber(value, true) + ' PHP'}\n                </div>\n            ) : (value)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Add Update</div>\n                <div className='sub-section'>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <InputField \n                                placeholder='Remarks'\n                                value={this.props.state.remarks}\n                                // error={this.props.state.remarks === ''}\n                                charLimit={100}\n                                onChange={(value: string) => {\n                                    this.props.state.remarks = value;\n                                    this.props.refreshUpdatesState();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <DatePicker \n                                placeholder='As of Date'\n                                value={this.props.state.date}\n                                onChange={(value: Date) => {\n                                    this.props.state.date = value;\n                                    this.props.refreshUpdatesState();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <DetailedNumberField \n                                placeholder='Running Hospital Bill'\n                                detail='PHP'\n                                isFloat={true}\n                                value={this.props.state.hospitalBill}\n                                // error={this.props.state.hospitalBill <= 0}\n                                onChange={(value: number) => {\n                                    this.props.state.hospitalBill = value;\n                                    this.props.refreshUpdatesState();\n                                }}/>\n                        </Grid>\n                    </Grid>\n                    <div style={{paddingTop: '5px'}} />\n                    {this.props.state.remarks !== '' &&\n                    this.props.state.date !== null && \n                    this.props.state.hospitalBill !== 0 ? (\n                        <TextButton \n                            label='Add update' \n                            icon={faPlus}\n                            onClick={() => {\n                                var state = this.props.state;\n                                const tempData = {\n                                    remarks: state.remarks,\n                                    date: state.date,\n                                    hospitalBill: state.hospitalBill\n                                }\n                                this.props.updates.unshift(tempData);\n                                this.props.state.remarks = '';\n                                this.props.state.date = new Date();\n                                this.props.state.hospitalBill = 0;\n                                this.props.refreshUpdatesState();\n                            }}/>\n                    ) : null}\n                </div>\n                \n                <div className='sub-section' style={{overflowX: 'auto'}}>\n                    <CRUDTable \n                        className='custom-table'\n                        placeholder='UPDATES'\n                        cols={['Remarks', 'As of Date', 'Running Hospital Bill']}\n                        rows={this.props.updates} \n                        onSaveEditRow={(index: number, data: any) => {\n                            this.props.updates[index] = data;\n                            this.props.refreshUpdatesState();\n                        }}\n                        onDeleteRow={(index: number) => {\n                            this.props.updates.splice(index, 1);\n                            this.props.refreshUpdatesState();\n                        }}\n                        onHeaderFormat={(colIndex: number, colName: string) => {\n                            return this.onFormatTableHeader(colIndex, colName);\n                        }} \n                        onFormat={(_rowIndex: number, colIndex: number, value: any) => {\n                            return this.onFormatCRUDTable(colIndex, value);\n                        }} \n                        editField={(colIndex: number, currentVal: any, onChange: any) => {\n                            if (colIndex === 0) {\n                                return (\n                                    <InputField\n                                        value={currentVal}\n                                        onChange={(value: string) => onChange(value)}/>\n                                );\n                            } else if (colIndex === 1) {\n                                return (\n                                    <DatePicker\n                                        value={currentVal}\n                                        onChange={(value: Date) => onChange(value)}/>\n                                );\n                            } else {\n                                return (\n                                    <DetailedNumberField\n                                        detail='PHP'\n                                        isFloat={true}\n                                        value={currentVal}\n                                        onChange={(value: number) => onChange(value)}/>\n                                );\n                            }\n                        }} />\n                </div>\n                <div className='sub-section'>\n                    <div className='header-2'>OTHER DETAILS</div>                    \n                    <CustomCheckbox \n                        label='Gift Given?'\n                        value={this.props.confinement.giftGiven}\n                        onChange={(value: boolean) => {\n                            this.props.confinement.giftGiven = value;\n                            this.props.refreshUpdatesState();\n                        }} />\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { Grid, TableCell } from '@material-ui/core';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\n\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DetailedDropdown } from 'Pages/CustomerCarePage/Components/DetailedDropdown';\nimport { NumberField } from 'Pages/CustomerCarePage/Components/NumberField';\nimport { DetailedNumberField } from 'Pages/CustomerCarePage/Components/DetailedNumberField';\nimport { CRUDTable } from 'Pages/CustomerCarePage/UpdateTicketPage/Components/CRUDTable';\nimport { DatePicker } from 'Pages/CustomerCarePage/Components/DatePicker';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { DropdownChoice } from 'Pages/CustomerCarePage/Models';\nimport { AccommodationData } from '../UpdateTicketProps';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\n\ninterface IProps {\n    accommodations: AccommodationData[];\n    state: AccommodationData;\n    facilitiesList: DropdownChoice[];\n    provider: DropdownChoice;\n    dateAdmitted: Date;\n    confinementKind: string;\n    refreshAccommodationsState: () => void;\n}\n\nexport class AccommodationsSection extends React.Component<IProps> {\n\n    confinementTypes: DropdownChoice[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.confinementTypes = [\n            { value: '1', label: 'Elective / Scheduled' },\n            { value: '2', label: 'ER leading to confinement' }\n        ];\n    }\n\n    onFormatTableHeader = (colIndex: number, value: any) => {\n        return (\n            colIndex === 1 || colIndex === 2 ? (\n                <TableCell style={{textAlign: 'right', minWidth: '200px'}}>{value}</TableCell>\n            ) : (\n                <TableCell style={{minWidth: '150px'}}>{value}</TableCell>\n            )\n        );\n    }\n\n    onFormatCRUDTable = (colIndex: number, value: any) => {\n        const textAlign = (colIndex !== 0 ? 'right' : 'left');\n        return (\n            <div style={{textAlign: textAlign}}>\n                {colIndex === 2 ? \n                    GlobalFunction.formatNumber(value, true) + ' PHP' : \n                    value}\n            </div>\n        );\n    }\n\n    getTotalCost = () => {\n        let totalCost = 0;\n        this.props.accommodations.map(accommodation => {\n            totalCost += accommodation.costPerDay * accommodation.days;\n        });\n\n        return totalCost;\n    }\n\n    renderConfinementDetails(): JSX.Element {\n        return (\n            <div className='sub-section'>\n                <div className='header-2'>CONFINEMENT DETAILS</div>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <DetailedDropdown \n                            placeholder='Provider'\n                            value={this.props.provider}\n                            choices={this.props.facilitiesList}\n                            disabled={true}\n                            onChange={(_value: DropdownChoice) => null}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <DatePicker \n                            placeholder='Date Admitted'\n                            value={this.props.dateAdmitted}\n                            disabled={true}\n                            onChange={(_value: Date) => null}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Dropdown \n                            placeholder='Kind of Confinement'\n                            value={{ value: '', label: this.props.confinementKind }}\n                            choices={this.confinementTypes}\n                            disabled={true}\n                            onChange={(_value: DropdownChoice) => null}/>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n\n    renderAddRoomAccommodation(): JSX.Element {\n        return (\n            <div className='sub-section'>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <InputField \n                            placeholder='Room Type'\n                            value={this.props.state.roomType}\n                            onChange={(value: string) => {\n                                this.props.state.roomType = value;\n                                this.props.refreshAccommodationsState();\n                            }}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <NumberField \n                            placeholder='No. of Days'\n                            value={this.props.state.days}\n                            // error={this.props.state.days < 1 || isNaN(this.props.state.days)}\n                            onChange={(value: number) => {\n                                this.props.state.days = value;\n                                this.props.refreshAccommodationsState();\n                            }}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <DetailedNumberField \n                            placeholder='Cost Per Day'\n                            detail='PHP'\n                            isFloat={true}\n                            value={this.props.state.costPerDay}\n                            onChange={(value: number) => {\n                                this.props.state.costPerDay = value;\n                                this.props.refreshAccommodationsState();\n                            }}/>\n                    </Grid>\n                </Grid>\n                <div style={{paddingTop: '5px'}} />\n                {this.props.state.days > 0 ? (\n                    <TextButton \n                        label='Add room' \n                        icon={faPlus}\n                        onClick={() => {\n                            var state = this.props.state;\n                            const tempData = {\n                                roomType: state.roomType,\n                                days: state.days,\n                                costPerDay: state.costPerDay\n                            }\n                            this.props.accommodations.unshift(tempData);\n                            this.props.state.roomType = '';\n                            this.props.state.days = 0;\n                            this.props.state.costPerDay = 0;\n                            this.props.refreshAccommodationsState();\n                        }}/>\n                ) : null}\n            </div>\n        );\n    }\n\n    render(): JSX.Element {\n\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Add Room Accommodation</div>\n                {this.renderAddRoomAccommodation()}\n                <div className='sub-section' />\n                {this.renderConfinementDetails()}\n                <div className='sub-section' style={{overflowX: 'auto'}}>\n                    <CRUDTable \n                        className='custom-table'\n                        placeholder='ROOM ACCOMMODATIONS'\n                        cols={['Room Type', 'No. of Days', 'Cost Per Day']} \n                        rows={this.props.accommodations}\n                        onSaveEditRow={(index: number, data: any) => {\n                            this.props.accommodations[index] = data;\n                            this.props.refreshAccommodationsState();\n                        }}\n                        onDeleteRow={(index: number) => {\n                            this.props.accommodations.splice(index, 1);\n                            this.props.refreshAccommodationsState();\n                        }}\n                        onHeaderFormat={(colIndex: number, colName: string) => {\n                            return this.onFormatTableHeader(colIndex, colName);\n                        }} \n                        onFormat={(_rowIndex: number, colIndex: number, value: any) => {\n                            return this.onFormatCRUDTable(colIndex, value);\n                        }}\n                        editField={(colIndex: number, currentVal: any, onChange: any) => {\n                            if (colIndex === 0) {\n                                return (\n                                    <InputField\n                                        value={currentVal}\n                                        onChange={(value: string) => onChange(value)}/>\n                                );\n                            } else if (colIndex === 1) {\n                                return (\n                                    <NumberField\n                                        value={currentVal}\n                                        onChange={(value: number) => onChange(value < 1 ? 1 : value)}/>\n                                );\n                            } else {\n                                return (\n                                    <DetailedNumberField\n                                        detail='PHP'\n                                        isFloat={true}\n                                        value={currentVal}\n                                        onChange={(value: number) => onChange(value)}/>\n                                );\n                            }\n                        }} />\n                    <div className='sub-section'>\n                        <div style={{float: 'right'}}>\n                            <span className='small-text'>TOTAL AMOUNT</span>\n                            <span style={{marginLeft: '1rem'}} />\n                            <span className='header-2'>{GlobalFunction.formatNumber(this.getTotalCost(), true) + ' PHP'}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { Grid, TableCell } from '@material-ui/core';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\n\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DetailedDropdown } from 'Pages/CustomerCarePage/Components/DetailedDropdown';\nimport { CRUDTable } from 'Pages/CustomerCarePage/UpdateTicketPage/Components/CRUDTable';\nimport { DropdownChoice } from 'Pages/CustomerCarePage/Models';\nimport { CustomCheckbox } from 'Pages/CustomerCarePage/Components/CustomCheckbox';\nimport { DiagnosisData, PhysicianData, ProcedureData } from '../UpdateTicketProps';\nimport { CustomRadio } from 'Pages/CustomerCarePage/Components/CustomRadio';\n\ninterface IProps {\n    diagnoses: DiagnosisData[];\n    state: DiagnosisData;\n    physicians: PhysicianData[];\n    procedures: ProcedureData[];\n    diagnosesList: DropdownChoice[];\n    primaryDiagnosisIndex: number;\n    refreshDiagnosisStateChange: () => void;\n    setPrimaryDiagnosisIndex: (index: number) => void;\n}\n\nexport class DiagnosesSection extends React.Component<IProps> {\n\n    getFilteredICD10Codes(): DropdownChoice[] {\n        let filteredIcd10: DropdownChoice[] = [];\n        for (var i = 0; i < this.props.diagnosesList.length; i++) {\n            let isSame = false;\n            for (var j = 0; j < this.props.diagnoses.length; j++) {\n                isSame = (\n                    this.props.diagnoses[j].diagnosis.value === \n                    this.props.diagnosesList[i].value ? true : isSame);\n            }\n            if (!isSame) {\n                filteredIcd10 = filteredIcd10.concat(this.props.diagnosesList[i]);\n            }\n        }\n        return filteredIcd10;\n    }\n\n    onFormatTableHeader = (colIndex: number, value: any) => {\n        return (\n            colIndex === 0 || colIndex === 1 ? (\n                <TableCell style={{minWidth: '200px', maxWidth: '200px'}}>{value}</TableCell>\n            ) : colIndex === 3 ? (\n                <TableCell style={{minWidth: '200px', maxWidth: '200px', textAlign: 'center'}}>{value}</TableCell>\n            ) : (\n                <TableCell style={{minWidth: '100px', maxWidth: '100px'}}>{value}</TableCell>\n            )\n        );\n    }\n\n    onFormatCRUDTable = (rowIndex: number, colIndex: number, value: any) => {\n        return (\n            colIndex === 0 ? (\n                <div style={{minWidth: '200px', maxWidth: '200px'}}>\n                    {value.value + \" - \" + value.label}\n                </div>\n            ) : colIndex === 2 ? (\n            <div>{value ? 'Final' : 'Initial'}</div>\n            ) : colIndex === 3 ? (\n                <div style={{textAlign: 'center'}}>\n                    <CustomRadio\n                        disabled={!this.props.diagnoses[rowIndex].isFinal}\n                        checkedCondition={this.props.primaryDiagnosisIndex === rowIndex}\n                        onChange={() => {\n                            this.props.setPrimaryDiagnosisIndex(rowIndex);\n                        }} />\n                </div>\n            ) : (value)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Add Diagnosis</div>\n                <div className='sub-section'>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <DetailedDropdown \n                                placeholder='Diagnosis'\n                                value={this.props.state.diagnosis}\n                                // error={this.props.state.diagnosis.value === ''}\n                                choices={this.getFilteredICD10Codes()}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.state.diagnosis = value;\n                                    this.props.refreshDiagnosisStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <InputField \n                                placeholder='Remarks'\n                                value={this.props.state.remarks}\n                                charLimit={100}\n                                onChange={(value: string) => {\n                                    this.props.state.remarks = value;\n                                    this.props.refreshDiagnosisStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <CustomCheckbox \n                                label='Final Diagnosis?'\n                                value={this.props.state.isFinal}\n                                onChange={(value: boolean) => {\n                                    this.props.state.isFinal = value;\n                                    this.props.refreshDiagnosisStateChange();\n                                }}/>\n                        </Grid>\n                        \n                    </Grid>\n                    <div style={{paddingTop: '5px'}} />\n                    {this.props.state.diagnosis.value !== '' ? (\n                        <TextButton \n                            label='Add diagnosis' \n                            icon={faPlus}\n                            onClick={() => {\n                                var data = this.props.state;\n                                const tempData = {\n                                    diagnosis: data.diagnosis,\n                                    remarks: data.remarks,\n                                    isFinal: data.isFinal,\n                                    isPrimary: true\n                                }\n                                this.props.diagnoses.unshift(tempData);\n                                this.props.state.diagnosis = { value: '', label: '' };\n                                this.props.state.remarks = '';\n                                this.props.state.isFinal = false;\n                                this.props.refreshDiagnosisStateChange();\n                                this.props.setPrimaryDiagnosisIndex(this.props.primaryDiagnosisIndex + 1);\n                            }}/>\n                    ) : null}\n                </div>\n                <div className='sub-section' style={{overflowX: 'auto'}}>\n                    <CRUDTable \n                        className='custom-table'\n                        placeholder='DIAGNOSES'\n                        \n                        cols={['Diagnosis', 'Remarks', 'Type', 'Primary Diagnosis?']} \n                        rows={this.props.diagnoses}\n                        onSaveEditRow={(index: number, data: any) => {\n                            this.props.diagnoses[index] = data;\n                            this.props.refreshDiagnosisStateChange();\n                        }}\n                        onDeleteRow={(index: number) => {\n                            this.props.physicians.filter(physician => \n                                physician.diagnosis.label !== \n                                this.props.diagnoses[index].diagnosis.label);\n                            this.props.diagnoses.splice(index, 1);\n                            this.props.refreshDiagnosisStateChange();\n                            this.props.setPrimaryDiagnosisIndex(\n                                this.props.primaryDiagnosisIndex != index ?\n                                this.props.primaryDiagnosisIndex - 1 : -1);\n                        }}\n                        onHeaderFormat={(colIndex: number, colName: string) => {\n                            return this.onFormatTableHeader(colIndex, colName);\n                        }} \n                        onFormat={(rowIndex: number, colIndex: number, value: any) => {\n                            return this.onFormatCRUDTable(rowIndex, colIndex, value);\n                        }}\n                        editField={(colIndex: number, currentVal: any, onChange: any) => {\n                            if (colIndex === 0) {\n                                return (\n                                    <DetailedDropdown\n                                        choices={this.getFilteredICD10Codes()}\n                                        value={currentVal}\n                                        onChange={(value: DropdownChoice) => onChange(value)}/>\n                                );\n                            } else if (colIndex === 1) {\n                                return (\n                                    <InputField\n                                        value={currentVal}\n                                        onChange={(value: string) => onChange(value)}/>\n                                );\n                            } else if (colIndex === 2) {\n                                return (\n                                    <CustomCheckbox \n                                        label='Is Final?'\n                                        value={currentVal}\n                                        onChange={(value: boolean) => onChange(value)}/>\n                                );\n                            } else {\n                                return (\n                                    <div></div>\n                                );\n                            }\n                        }} />\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid, Radio, TableCell } from '@material-ui/core';\nimport { PhysicianData, DiagnosisData } from '../UpdateTicketProps';\nimport { DetailedDropdown } from 'Pages/CustomerCarePage/Components/DetailedDropdown';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { NumberField } from 'Pages/CustomerCarePage/Components/NumberField';\nimport { DetailedNumberField } from 'Pages/CustomerCarePage/Components/DetailedNumberField';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { CRUDTable } from 'Pages/CustomerCarePage/UpdateTicketPage/Components/CRUDTable';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { DropdownChoice } from 'Pages/CustomerCarePage/Models';\n\ninterface IProps {\n    physicians: PhysicianData[];\n    state: PhysicianData;\n    physiciansList: DropdownChoice[];\n    diagnosesList: DiagnosisData[];\n    refreshPhysiciansStateChange: () => void;\n}\n\nexport class PhysiciansSection extends React.Component<IProps> {\n\n    onFormatTableHeader = (colIndex: number, value: any) => {\n        return (\n            colIndex === 0 ? (\n                <TableCell style={{minWidth: '250px'}}>{value}</TableCell>\n            ) : colIndex === 1 ? (\n                <TableCell style={{minWidth: '100px'}}>{value}</TableCell>\n            ) : colIndex === 3 || colIndex === 4 ? (\n                <TableCell style={{minWidth: '150px', textAlign: 'right'}}>{value}</TableCell>\n            ) : (\n                <TableCell style={{minWidth: '150px'}}>{value}</TableCell>\n            )\n        );\n    }\n\n    onFormatCRUDTable = (colIndex: number, value: any) => {\n        return (\n            colIndex === 0 ? (\n                <div>\n                    <div>{value.params[0] + ' - ' + value.label}</div>\n                    <div className='light-text'>{value.params[1] + ' Physician'}</div>\n                </div>\n            ) : colIndex === 1 ? (\n                <div>{value.value}</div>\n            ) : colIndex === 3 || colIndex === 4 ? (\n                <div style={{textAlign: 'right'}}>\n                    {colIndex === 4 ? GlobalFunction.formatNumber(value, true) + ' PHP' : value}\n                </div>\n            ) : (value)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Add Physician</div>\n                <div className='sub-section'>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <DetailedDropdown \n                                placeholder='Doctor'\n                                detail={this.props.state.physician.params ? this.props.state.physician.params[0] : ''}\n                                value={this.props.state.physician}\n                                // error={this.props.state.physician.value === ''}\n                                choices={this.props.physiciansList}\n                                onChange={(value: DropdownChoice) => {\n                                    if (value.params && this.props.state.physician.params) {\n                                        this.props.state.physician = {\n                                            ...value,\n                                            params: [value.params[0], this.props.state.physician.params[1]]\n                                        };\n                                        this.props.refreshPhysiciansStateChange();\n                                    }\n                                }}/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <DetailedDropdown \n                                placeholder='Diagnosis'\n                                value={this.props.state.diagnosis}\n                                // error={this.props.state.diagnosis.value === ''}\n                                choices={this.props.diagnosesList.map(value => value.diagnosis)}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.state.diagnosis = value;\n                                    this.props.refreshPhysiciansStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <InputField \n                                placeholder='Remarks'\n                                value={this.props.state.remarks}\n                                charLimit={100}\n                                onChange={(value: string) => {\n                                    this.props.state.remarks = value;\n                                    this.props.refreshPhysiciansStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <NumberField\n                                placeholder='Visits'\n                                value={this.props.state.visits}\n                                onChange={(value: number) => {\n                                    this.props.state.visits = value;\n                                    this.props.refreshPhysiciansStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <DetailedNumberField\n                                placeholder='Amount'\n                                detail='PHP'\n                                isFloat={true}\n                                value={this.props.state.amount}\n                                onChange={(value: number) => {\n                                    this.props.state.amount = value;\n                                    this.props.refreshPhysiciansStateChange();\n                                }}/>\n                        </Grid>\n                        {this.props.state.physician.params ? (\n                            <Grid item xs={3}>\n                                <div>\n                                <Grid container style={{paddingTop: '1rem'}}>\n                                    <Grid item xs={6}>\n                                        <Radio \n                                            className='check-box'\n                                            style={{height: '100%', width: 0}}\n                                            checked={this.props.state.physician.params[1] === 'Admitting'}\n                                            value={'Admitting'}\n                                            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                                                if (this.props.state.physician.params) {\n                                                    this.props.state.physician.params[1] = event.target.value;\n                                                }\n                                                this.props.refreshPhysiciansStateChange();\n                                            }} /> Admitting\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Radio \n                                            className='check-box'\n                                            style={{height: '100%', width: 0}}\n                                            checked={this.props.state.physician.params[1] === 'Attending'}\n                                            value={'Attending'}\n                                            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                                                if (this.props.state.physician.params) {\n                                                    this.props.state.physician.params[1] = event.target.value;\n                                                }\n                                                this.props.refreshPhysiciansStateChange();\n                                            }} /> Attending\n                                    </Grid>\n                                </Grid>\n                                </div>\n                            </Grid>\n                        ) : null}\n                    </Grid>\n                    <div style={{paddingTop: '5px'}} />\n                    {this.props.state.physician.value !== '' &&\n                    this.props.state.diagnosis.value !== '' ? (\n                        <TextButton \n                            label='Add physician' \n                            icon={faPlus}\n                            onClick={() => {\n                                var data = this.props.state;\n                                const tempData = {\n                                    physician: {\n                                        value: data.physician.value,\n                                        label: data.physician.label,\n                                        params: data.physician.params ? data.physician.params : undefined\n                                    },\n                                    diagnosis: data.diagnosis,\n                                    remarks: data.remarks,\n                                    visits: data.visits,\n                                    amount: data.amount\n                                };\n                                this.props.physicians.unshift(tempData);\n                                this.props.state.physician = { value: '', label: '', params: ['', 'Admitting'] };\n                                this.props.state.diagnosis = { value: '', label: '' };\n                                this.props.state.remarks = '';\n                                this.props.state.visits = 0;\n                                this.props.state.amount = 0;\n                                this.props.refreshPhysiciansStateChange();\n                            }}/>\n                     ) : null}\n                </div>\n                <div className='sub-section' style={{overflowX: 'auto'}}>\n                    <CRUDTable \n                        className='custom-table'\n                        placeholder='PHYSICIANS'\n                        cols={['Specialization - Doctor Name', 'Diagnosis', 'Remarks', 'No. of Visits', 'Amount']} \n                        rows={this.props.physicians}\n                        onSaveEditRow={(index: number, data: any) => {\n                            // this.props.editPhysician(index, data);\n                            this.props.physicians[index] = data;\n                            this.props.refreshPhysiciansStateChange();\n                        }}\n                        onDeleteRow={(index: number) => {\n                            // this.props.deletePhysician(index);\n                            this.props.physicians.splice(index, 1);\n                            this.props.refreshPhysiciansStateChange();\n                        }}\n                        onHeaderFormat={(colIndex: number, colName: string) => {\n                            return this.onFormatTableHeader(colIndex, colName);\n                        }} \n                        onFormat={(_rowIndex: number, colIndex: number, value: any) => {\n                            return this.onFormatCRUDTable(colIndex, value);\n                        }}\n                        editField={(colIndex: number, currentVal: any, onChange: any) => {\n                            if (colIndex === 0) {\n                                return (\n                                    <DetailedDropdown\n                                        detail={currentVal.params[0]}\n                                        choices={this.props.physiciansList}\n                                        value={currentVal}\n                                        onChange={(value: DropdownChoice) => onChange({\n                                            value: value.value,\n                                            label: value.label,\n                                            params: [value.params ? value.params[0] : '', currentVal.params[1]]\n                                        })}/>\n                                );\n                            } else if (colIndex === 1) {\n                                return (\n                                <div>{currentVal.value}</div>\n                                    // <DetailedDropdown\n                                    //     choices={this.props.diagnosesList.map(value => {\n                                    //         return value.diagnosis; \n                                    //     })}\n                                    //     value={currentVal}\n                                    //     onChange={(value: DropdownChoice) => onChange(value)}/>\n                                );\n                            } else if (colIndex === 2) {\n                                return (\n                                    <InputField\n                                        value={currentVal}\n                                        onChange={(value: string) => onChange(value)}/>\n                                );\n                                \n                            } else if (colIndex === 3) {\n                                return (\n                                    <NumberField\n                                        value={currentVal}\n                                        onChange={(value: number) => onChange(value)}/>\n                                );\n                            \n                            } else {\n                                return (\n                                    <DetailedNumberField\n                                        detail='PHP'\n                                        isFloat={true}\n                                        value={currentVal}\n                                        onChange={(value: number) => onChange(value)}/>\n                                );\n                            }\n                        }} />\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { CRUDTable } from 'Pages/CustomerCarePage/UpdateTicketPage/Components/CRUDTable';\nimport { Grid, TableCell } from '@material-ui/core';\nimport { DetailedDropdown } from 'Pages/CustomerCarePage/Components/DetailedDropdown';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { DatePicker } from 'Pages/CustomerCarePage/Components/DatePicker';\nimport { DetailedNumberField } from 'Pages/CustomerCarePage/Components/DetailedNumberField';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { DropdownChoice } from 'Pages/CustomerCarePage/Models';\nimport { ProcedureData, DiagnosisData } from '../UpdateTicketProps';\n\ninterface IProps {\n    procedures: ProcedureData[];\n    state: ProcedureData;\n    proceduresList: DropdownChoice[];\n    diagnosesList: DiagnosisData[];\n    physiciansList: DropdownChoice[];\n    refreshProceduresStateChange: () => void;\n}\n\nexport class ProceduresSection extends React.Component<IProps> {\n\n    onFormatTableHeader = (colIndex: number, value: any) => {\n        return (\n            colIndex === 0 ? (\n                <TableCell style={{minWidth: '200px'}}>{value}</TableCell>\n            ) : colIndex === 1 ? (\n                <TableCell style={{minWidth: '100px'}}>{value}</TableCell>\n            ) : colIndex === 2 || colIndex === 3 ? (\n                <TableCell style={{minWidth: '150px'}}>{value}</TableCell>\n            ) : colIndex === 5 ? (\n                <TableCell style={{textAlign: 'right', minWidth: '100px'}}>{value}</TableCell>\n            ) : (\n                <TableCell style={{minWidth: '150px'}}>{value}</TableCell>\n            )\n        );\n    }\n\n    onFormatCRUDTable = (colIndex: number, value: any) => {\n        return (\n            colIndex === 0 ? (\n                <div>{value.value + ' - ' + value.label}</div>\n            ) : colIndex === 1 ? (\n                <div>{value.value}</div>\n            ) : colIndex === 2 ? (\n                <div>{value.label}</div>\n            ) : colIndex === 3 ? (\n                <div>{GlobalFunction.toCommonDateString(value)}</div>\n            ) : colIndex === 5 ? (\n                <div style={{textAlign: 'right'}}>\n                    {GlobalFunction.formatNumber(value, true) + ' PHP'}\n                </div>\n            ) : (value)\n        );\n    }\n\n    render(): JSX.Element {\n\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Add Procedure</div>\n                <div className='sub-section'>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <DetailedDropdown \n                                placeholder='Procedure'\n                                value={this.props.state.procedure}\n                                // error={this.props.state.procedure.value === ''}\n                                choices={this.props.proceduresList}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.state.procedure = value;\n                                    this.props.refreshProceduresStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <DetailedDropdown \n                                placeholder='Diagnosis'\n                                value={this.props.state.diagnosis}\n                                // error={this.props.state.diagnosis.value === ''}\n                                choices={this.props.diagnosesList.map(value => value.diagnosis)}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.state.diagnosis = value;\n                                    this.props.refreshProceduresStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <DetailedDropdown \n                                placeholder='Doctor'\n                                detail={this.props.state.physician.params ? this.props.state.physician.params[0] : undefined}\n                                value={this.props.state.physician}\n                                // error={this.props.state.physician.value === ''}\n                                choices={this.props.physiciansList}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.state.physician = value;\n                                    this.props.refreshProceduresStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <InputField \n                                placeholder='Remarks'\n                                value={this.props.state.remarks}\n                                charLimit={100}\n                                onChange={(value: string) => {\n                                    this.props.state.remarks = value;\n                                    this.props.refreshProceduresStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <DatePicker \n                                placeholder='Date'\n                                value={this.props.state.date}\n                                onChange={(value: Date) => {\n                                    this.props.state.date = value;\n                                    this.props.refreshProceduresStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <DetailedNumberField \n                                placeholder='Amount'\n                                detail='PHP'\n                                isFloat={true}\n                                value={this.props.state.amount}\n                                onChange={(value: number) => {\n                                    this.props.state.amount = value;\n                                    this.props.refreshProceduresStateChange();\n                                }}/>\n                        </Grid>\n                    </Grid>\n                    <div style={{paddingTop: '5px'}} />\n                    {this.props.state.physician.value !== '' &&\n                    this.props.state.diagnosis.value !== '' &&\n                    this.props.state.procedure.value !== '' ? (\n                        <TextButton \n                            label='Add procedure' \n                            icon={faPlus}\n                            onClick={() => {\n                                var data = this.props.state;\n                                const tempData = {\n                                    procedure: data.procedure,\n                                    diagnosis: data.diagnosis,\n                                    physician: data.physician,\n                                    date: data.date,\n                                    remarks: data.remarks,\n                                    amount: data.amount\n                                }\n                                this.props.procedures.unshift(tempData);\n                                this.props.state.procedure = { value: '', label: '' };\n                                this.props.state.diagnosis = { value: '', label: '' };\n                                this.props.state.physician = { value: '', label: '' };\n                                this.props.state.remarks = '';\n                                this.props.state.date = new Date();\n                                this.props.state.amount = 0;\n                                this.props.refreshProceduresStateChange();\n                            }}/>\n                    ) : null}\n                </div>\n                <div className='sub-section' style={{overflowX: 'auto'}}>\n                    <CRUDTable \n                        className='custom-table'\n                        placeholder='PROCEDURES'\n                        \n                        cols={['Procedure', 'Diagnosis', 'Doctor', 'Date', 'Remarks', 'Amount']} \n                        rows={this.props.procedures}\n                        onSaveEditRow={(index: number, data: any) => {\n                            // this.props.editProcedure(index, data);\n                            this.props.procedures[index] = data;\n                            this.props.refreshProceduresStateChange();\n                        }}\n                        onDeleteRow={(index: number) => {\n                            // this.props.deleteProcedure(index);\n                            this.props.procedures.splice(index, 1);\n                            this.props.refreshProceduresStateChange();\n                        }}\n                        onHeaderFormat={(colIndex: number, colName: string) => {\n                            return this.onFormatTableHeader(colIndex, colName);\n                        }}\n                        onFormat={(_rowIndex: number, colIndex: number, value: any) => {\n                            return this.onFormatCRUDTable(colIndex, value);\n                        }}\n                        editField={(colIndex: number, currentVal: any, onChange: any) => {\n                            if (colIndex === 0) {\n                                return (\n                                    <DetailedDropdown\n                                        choices={this.props.proceduresList}\n                                        value={currentVal}\n                                        onChange={(value: DropdownChoice) => onChange(value)}/>\n                                );\n                            } else if (colIndex === 1) {\n                                return (\n                                    <DetailedDropdown\n                                        choices={this.props.diagnosesList.map(value => {\n                                            return value.diagnosis; \n                                        })}\n                                        value={currentVal}\n                                        onChange={(value: DropdownChoice) => onChange(value)}/>\n                                );\n                            } else if (colIndex === 2) {\n                                return (\n                                    <DetailedDropdown\n                                        detail={currentVal.params ? currentVal.params[0] : ''}\n                                        choices={this.props.physiciansList}\n                                        value={currentVal}\n                                        onChange={(value: DropdownChoice) => onChange(value)}/>\n                                ); \n                            } else if (colIndex === 3) {\n                                return (\n                                    <DatePicker\n                                        value={currentVal}\n                                        onChange={(value: Date) => onChange(value)}/>\n                                );\n                            } else if (colIndex === 4) {\n                                return (\n                                    <InputField\n                                        value={currentVal}\n                                        charLimit={100}\n                                        onChange={(value: string) => onChange(value)}/>\n                                );\n                            \n                            } else {\n                                return (\n                                    <DetailedNumberField\n                                        detail='PHP'\n                                        isFloat={true}\n                                        value={currentVal}\n                                        onChange={(value: number) => onChange(value)}/>\n                                );\n                            }\n                        }} />\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { CRUDTable } from 'Pages/CustomerCarePage/UpdateTicketPage/Components/CRUDTable';\nimport { Grid, TableCell } from '@material-ui/core';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\nimport { DetailedNumberField } from 'Pages/CustomerCarePage/Components/DetailedNumberField';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { DropdownChoice } from 'Pages/CustomerCarePage/Models';\nimport { ItemData } from '../UpdateTicketProps';\n\ninterface IProps {\n    items: ItemData[];\n    state: ItemData;\n    refreshItemsStateChange: () => void;\n}\n\nexport class OtherDetailsSection extends React.Component<IProps> {\n\n    itemTypes: DropdownChoice[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.itemTypes = [\n            { value: '1', label: 'Medicine' },\n            { value: '2', label: 'Non-coverable' },\n            { value: '3', label: 'Rooms' },\n            { value: '4', label: 'Miscellaneous' }\n        ]\n    }\n\n    onFormatTableHeader = (colIndex: number, value: any) => {\n        return (\n            colIndex === 2 ? (\n                <TableCell style={{textAlign: 'right', minWidth: '200px'}}>{value}</TableCell>\n            ) : (\n                <TableCell style={{minWidth: '300px'}}>{value}</TableCell>\n            )\n        );\n    }\n\n    onFormatCRUDTable = (colIndex: number, value: any) => {\n        return (\n            colIndex === 1 ? (\n                value.label\n            ) : colIndex === 2 ? (\n                <div style={{textAlign: 'right'}}>\n                    {GlobalFunction.formatNumber(value, true) + ' PHP'}\n                </div>\n            ) : (value)\n        );\n    }\n\n    render(): JSX.Element {\n        console.log(this.props.items);\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Add Other Details</div>\n                <div className='sub-section'>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <InputField \n                                placeholder='Item'\n                                value={this.props.state.name}\n                                // error={this.props.state.name.trim().length == 0}\n                                onChange={(value: string) => {\n                                    this.props.state.name = value;\n                                    this.props.refreshItemsStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Dropdown \n                                placeholder='Type'\n                                value={this.props.state.type}\n                                choices={this.itemTypes}\n                                // error={this.props.state.type.value === ''}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.state.type = value;\n                                    this.props.refreshItemsStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <DetailedNumberField \n                                placeholder='Amount'\n                                detail='PHP'\n                                isFloat={true}\n                                value={this.props.state.amount}\n                                // error={this.props.state.amount == 0}\n                                onChange={(value: number) => {\n                                    this.props.state.amount = value;\n                                    this.props.refreshItemsStateChange();\n                                }}/>\n                        </Grid>\n                    </Grid>\n                    <div style={{paddingTop: '5px'}} />\n                    {this.props.state.name.trim().length != 0 &&\n                     this.props.state.type.value !== '' &&\n                     this.props.state.amount != 0 ? (\n                        <TextButton \n                            label='Add item' \n                            icon={faPlus}\n                            onClick={() => {\n                                var state = this.props.state;\n                                const tempData = {\n                                    name: state.name,\n                                    type: { value: state.type.value, label: state.type.label },\n                                    amount: state.amount\n                                }\n                                this.props.items.unshift(tempData);\n                                this.props.state.name = '';\n                                this.props.state.type = { value: '', label: '' };\n                                this.props.state.amount = 0;\n                                this.props.refreshItemsStateChange();\n                            }}/>\n                    ) : null}\n                </div>\n                <div className='sub-section' style={{overflowX: 'auto'}}>\n                    <CRUDTable \n                        className='custom-table'\n                        placeholder='OTHER DETAILS'\n                        \n                        cols={['Item', 'Type', 'Amount']} \n                        rows={this.props.items}\n                        onSaveEditRow={(index: number, data: any) => {\n                            // this.props.editItem(index, data);\n                            this.props.items[index] = data;\n                            this.props.refreshItemsStateChange();\n                        }}\n                        onDeleteRow={(index: number) => {\n                            // this.props.deleteItem(index);\n                            this.props.items.splice(index, 1);\n                            this.props.refreshItemsStateChange();\n                        }}\n                        onHeaderFormat={(colIndex: number, colName: string) => {\n                            return this.onFormatTableHeader(colIndex, colName);\n                        }}\n                        onFormat={(_rowIndex: number, colIndex: number, value: any) => {\n                            return this.onFormatCRUDTable(colIndex, value);\n                        }}\n                        editField={(colIndex: number, currentVal: any, onChange: any) => {\n                            if (colIndex === 0) {\n                                return (\n                                    <InputField\n                                        value={currentVal}\n                                        onChange={(value: string) => onChange(value)}/>\n                                );\n                            } else if (colIndex === 1) {\n                                return (\n                                    <Dropdown\n                                        choices={this.itemTypes}\n                                        value={currentVal}\n                                        onChange={(value: DropdownChoice) => onChange(value)}/>\n                                );\n                            } else {\n                                return (\n                                    <DetailedNumberField\n                                        detail='PHP'\n                                        isFloat={true}\n                                        value={currentVal}\n                                        onChange={(value: number) => onChange(value)}/>\n                                );\n                            }\n                        }} />\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\nimport { Grid } from '@material-ui/core';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { DetailedNumberField } from 'Pages/CustomerCarePage/Components/DetailedNumberField';\nimport { DatePicker } from 'Pages/CustomerCarePage/Components/DatePicker';\nimport { DropdownChoice } from 'Pages/CustomerCarePage/Models';\n\ninterface IProps {\n    dateAdmitted: Date;\n    coverage: DropdownChoice;\n    ticketNo: string;\n    paidBy: string;\n    philhealthAmount: number;\n    finalBill: number;\n    dischargeDate?: Date;\n    onUpdateTicketStateChange: (attrName: string, value: any) => void;\n}\n\nexport class DischargeDetailsSection extends React.Component<IProps> {\n\n    coverageList: DropdownChoice[];\n\n    constructor(props: any) {\n        super(props);\n\n        this.coverageList = [\n            { value: '1', label: 'Filed' },\n            { value: '2', label: 'Corporate Guarantee' },\n            { value: '3', label: 'Not Compensable' },\n            { value: '4', label: 'Less than 24 hours' },\n            { value: '5', label: 'Paid' },\n            { value: '6', label: 'PH Rider' },\n            { value: '7', label: 'Non-PNDF' }\n        ]\n    }\n\n\n    render(): JSX.Element {\n\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Set PhilHealth</div>\n                <div className='sub-section'>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <Dropdown \n                                placeholder='Coverage'\n                                choices={this.coverageList}\n                                value={this.props.coverage}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.onUpdateTicketStateChange('coverage', value);\n                                }} />\n                        </Grid>\n                        {this.props.coverage.label === 'Corporate Guarantee' ? (\n                            <Grid item xs={3}>\n                                <InputField \n                                    placeholder='Ticket Number'\n                                    value={this.props.ticketNo}\n                                    onChange={(value: string) => {\n                                        this.props.onUpdateTicketStateChange('ticketNo', value);\n                                    }} />\n                            </Grid>\n                        ) : null}\n                        {this.props.coverage.label === 'Paid' ? (\n                        <Grid item xs={3}>\n                            <InputField \n                                placeholder='Paid by'\n                                value={this.props.paidBy}\n                                onChange={(value: string) => {\n                                    this.props.onUpdateTicketStateChange('paidBy', value);\n                                }} />\n                        </Grid>\n                        ) : null}\n                        {this.props.coverage.label === 'Filed' ||\n                            this.props.coverage.label === 'Corporate Guarantee' ||\n                            this.props.coverage.label === 'Paid' ? (\n                            <Grid item xs={3}>\n                                <DetailedNumberField \n                                    placeholder='Amount'\n                                    detail='PHP'\n                                    isFloat={true}\n                                    value={this.props.philhealthAmount}\n                                    onChange={(value: number) => {\n                                        this.props.onUpdateTicketStateChange('philhealthAmount', value);\n                                    }} />\n                            </Grid>\n                        ) : null}\n\n                        \n                        \n                    </Grid>\n                </div>\n                <div className='header-1'>Add Discharge Details</div>\n                <div className='sub-section'>\n                    <Grid container spacing={2}>\n                        <Grid item xs={3}>\n                            <DetailedNumberField \n                                placeholder='Final Hospital Bill Amount'\n                                detail='PHP'\n                                isFloat={true}\n                                value={this.props.finalBill}\n                                onChange={(value: number) => {\n                                    this.props.onUpdateTicketStateChange('finalBill', value);\n                                }} />\n                        </Grid>\n                        <Grid item xs={3}>\n                            <DatePicker \n                                placeholder='Discharge Date'\n                                value={this.props.dischargeDate || null}\n                                minDate={this.props.dateAdmitted}\n                                onChange={(value: Date) => {\n                                    this.props.onUpdateTicketStateChange('dischargeDate', value);\n                                }} />\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { CRUDTable } from 'Pages/CustomerCarePage/UpdateTicketPage/Components/CRUDTable';\nimport { Grid } from '@material-ui/core';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { CustomDropzone } from 'Pages/CustomerCarePage/Components/CustomDropzone';\nimport { FileData } from '../UpdateTicketProps';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\n\ninterface IProps {\n    files: FileData[];\n    state: FileData;\n    refreshFilesStateChange: () => void;\n}\n\nexport class UploadedDocumentsSection extends React.Component<IProps> {\n\n    render(): JSX.Element {console.log(this.props.files);\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Upload Documents</div>\n                <div className='sub-section'>\n                    <Grid container>\n                        <Grid item xs={6}>\n                            <CustomDropzone\n                                accept='image/*'\n                                onDrop={(files: File[]) => {\n                                    this.props.state.file = files[0];\n                                    this.props.refreshFilesStateChange();\n                                }} />\n                            <div>{this.props.state.file ? this.props.state.file.name : null}</div>\n                            <div className='sub-section' />\n                            <InputField \n                                placeholder='Document Name' \n                                value={this.props.state.docName}\n                                onChange={(value: string) => {\n                                    this.props.state.docName = value;\n                                    this.props.refreshFilesStateChange();\n                                }} />\n                        </Grid>\n                        <Grid item xs={6} />\n                    </Grid>\n                    <div style={{paddingTop: '5px'}} />\n                    <TextButton \n                        label='Add document' \n                        icon={faPlus}\n                        onClick={() => {\n                            var state = this.props.state;\n                            if (state.file !== null) {\n                                const tempData = {\n                                    docName: state.docName,\n                                    file: state.file\n                                }\n                                this.props.files.unshift(tempData);\n                                this.props.state.docName = '';\n                                this.props.state.file = null;\n                                this.props.refreshFilesStateChange();\n                            }\n                        }}/>\n                </div>\n                \n                <div className='sub-section'>\n                    <CRUDTable \n                        className='custom-table'\n                        placeholder='UPLOADED DOCUMENTS'\n                        \n                        cols={['Document Name', 'Filename']} \n                        rows={this.props.files}\n                        onSaveEditRow={(index: number, data: any) => {\n                            // this.props.editFile(index, data);\n                            \n                            this.props.files[index] = data;\n                            this.props.refreshFilesStateChange();\n                        }}\n                        onDeleteRow={(index: number) => {\n                            // this.props.deleteFile(index);\n                            this.props.files.splice(index, 1);\n                            this.props.refreshFilesStateChange();\n                        }}\n                        onFormat={(_rowIndex: number, colIndex: number, value: any) => {\n                            return (colIndex === 1 ? (value.name) : (value));\n                        }}\n                        editField={(colIndex: number, currentVal: any, onChange: any) => {\n                            if (colIndex === 0) {\n                                return (\n                                    <InputField\n                                        value={currentVal}\n                                        onChange={(value: string) => onChange(value)}/>\n                                );\n                            }\n                            return currentVal.name;\n                        }} />\n                </div>\n\n                <div className='section' />\n            </div>\n        );\n    }\n}","\nimport * as React from 'react';\nimport { Grid, TableCell, TableRow } from '@material-ui/core';\nimport { InquiryData, DropdownChoice } from 'Pages/CustomerCarePage/Models';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { faMinusCircle, faPlus, faPen } from '@fortawesome/free-solid-svg-icons';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { InputChip } from 'Pages/CustomerCarePage/Components/InputChip';\nimport { CustomChip } from 'Pages/CustomerCarePage/Components/CustomChip';\nimport { CustomDropzone } from 'Pages/CustomerCarePage/Components/CustomDropzone';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\n\ninterface IProps {\n    inquiries: InquiryData[];\n    refreshInquiryState: () => void;\n}\n\ninterface IStates {\n    inquiry: DropdownChoice;\n}\n\nexport class UpdateInquirySection extends React.Component<IProps, IStates> {\n\n    inquiries: DropdownChoice[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            inquiry: { value: '', label: '' }\n        };\n\n        this.inquiries = [\n            { value: '1', label: 'Member Status / Card Inquiry' },\n            { value: '2', label: 'Member Network Access Inquiry' },\n            { value: '3', label: 'Member Benefit Inquiry - General [Outpatient]' },\n            { value: '4', label: 'Member Benefit Inquiry - General [Inpatient]' },\n            { value: '5', label: 'Member Benefit Inquiry - General [Emergency]' },\n            { value: '6', label: 'Member Benefit Inquiry - General [Dental]' },\n            { value: '7', label: 'Member Benefit Inquiry - General [APE / ECU]' },\n            { value: '8', label: 'Member Benefit Inquiry - General [Riders]' },\n            { value: '9', label: 'Member Coverage Inquiry - Specific Benefit' },\n            { value: '10', label: 'Member Availment Inquiry - CanAvail' },\n            { value: '11', label: 'Member Eligibility Inquiry' },\n            { value: '12', label: 'Reimbursement Status Inquiry' },\n            { value: '13', label: 'General Affiliated Network Inquiry - Facility' },\n            { value: '14', label: 'General Affiliated Network Inquiry - Doctor' },\n            { value: '15', label: 'General Affiliated Network Inquiry - Dentist' },\n            { value: '16', label: 'Procedural Inquiry - Outpatient' },\n            { value: '17', label: 'Procedural Inquiry - Inpatient' },\n            { value: '18', label: 'Procedural Inquiry - Emergency' },\n            { value: '19', label: 'Procedural Inquiry - Dental' },\n            { value: '20', label: 'Procedural Inquiry - APE / ECU' },\n            { value: '21', label: 'Procedural Inquiry - Member Enrolment / Cancellation / Update' },\n            { value: '22', label: 'Procedural Inquiry - Reimbursement' },\n            { value: '23', label: 'Procedural Inquiry - Others' }\n        ];\n    }\n\n    getFilteredInquiries(): DropdownChoice[] {\n        let filteredInquiries: DropdownChoice[] = [];\n        for (var i = 0; i < this.inquiries.length; i++) {\n            let isSame = false;\n            for (var j = 0; j < this.props.inquiries.length; j++) {\n                isSame = (\n                    this.props.inquiries[j].inquiry.value === \n                    this.inquiries[i].value ? true : isSame);\n            }\n            if (!isSame) {\n                filteredInquiries = filteredInquiries.concat(this.inquiries[i]);\n            }\n        }\n        return filteredInquiries;\n    }\n\n    onAddInquiry() {\n        if (this.state.inquiry.value !== '') {\n            this.props.inquiries.push({\n                inquiry: this.state.inquiry,\n                detail: '',\n                specificDetail: [],\n                answer: '',\n                remarks: '',\n                relatedTickets: [],\n                supportDocs: []\n            });\n            \n            this.props.refreshInquiryState();\n            this.setState({inquiry: { value: '', label: '' }});\n        }\n    }\n\n    onRemoveInquiry(index: number) {\n        this.props.inquiries.splice(index, 1);\n        this.props.refreshInquiryState();\n    }\n\n\n    render(): JSX.Element {\n        return (\n            <div className='main-content'>\n                <div className='section' style={{paddingRight: '2.5rem'}}>\n                    <div className='header-1'>Update Inquiry</div>\n                    <div className='text'>\n                        Add an inquiry type and then add the question and its details after\n                    </div>\n                    <div className='sub-section'>\n                        {true ? (\n                            <CustomTable \n                                rows={this.props.inquiries}\n                                renderHeader={() => this.renderTableHeader()}\n                                renderRow={(rowData: any, index: number) => \n                                    this.renderTableRow(rowData, index)} />\n                        ) : (null)}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            <TableCell>\n                <Dropdown \n                    choices={this.getFilteredInquiries()}\n                    value={this.state.inquiry}\n                    onChange={(value: DropdownChoice) => {\n                        this.setState({inquiry: value});\n                    }} />\n            </TableCell>\n            <TableCell style={{width: '200px', textAlign: 'center'}}>\n                <TextButton \n                    icon={faPlus} \n                    label=\"Add inquiry\"\n                    onClick={() => {\n                        this.onAddInquiry();\n                    }} />\n            </TableCell>\n            </>\n        );\n    }\n\n    renderTableRow(inquiry: InquiryData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell colSpan={2}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={11} className='header-2'>\n                            {inquiry.inquiry.label}\n                        </Grid>\n                        <Grid item xs={1} style={{textAlign: 'right'}}>\n                            <IconButton\n                                icon={faPen}\n                                onClick={() => {\n                                    this.onRemoveInquiry(index);\n                                }}/>\n                            <IconButton\n                                icon={faMinusCircle}\n                                onClick={() => {\n                                    this.onRemoveInquiry(index);\n                                }}/>\n                        </Grid>\n                    </Grid>\n                    <div style={{position: 'relative'}}>\n                        <div style={{paddingTop: '0.5rem'}} />\n                        <div className='line-border' />\n                        <div style={{paddingTop: '0.5rem'}} />\n                        <Grid container spacing={2}>\n                            <Grid item xs={6}>\n                                <InputField \n                                    placeholder='Details of inquiry (Question)'\n                                    value={inquiry.detail}\n                                    onChange={(value: string) => {\n                                        inquiry.detail = value;\n                                        this.props.refreshInquiryState();\n                                    }} />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <InputChip \n                                    placeholder='Specific Details (Type benefit/doctor/facility to describe inquiry, press enter to add)'\n                                    value={inquiry.specificDetail}\n                                    onAdd={(value: string) => {\n                                        inquiry.specificDetail.push(value);\n                                        this.props.refreshInquiryState();\n                                    }}\n                                    onDelete={(index: number) => {\n                                        inquiry.specificDetail.splice(index, 1);\n                                        this.props.refreshInquiryState();\n                                    }} />\n                            </Grid>\n                        </Grid>\n                        <InputField \n                            placeholder='Answer'\n                            value={inquiry.answer}\n                            onChange={(value: string) => {\n                                inquiry.answer = value;\n                                this.props.refreshInquiryState();\n                            }} />\n                        <InputField \n                            placeholder='Remarks (Optional)'\n                            value={inquiry.remarks}\n                            onChange={(value: string) => {\n                                inquiry.remarks = value;\n                                this.props.refreshInquiryState();\n                            }} />\n                        <Grid container spacing={2}>\n                            <Grid item xs={6}>\n                                <InputChip \n                                    placeholder='Related Tickets (Optional, press enter to add)'\n                                    value={inquiry.relatedTickets}\n                                    onAdd={(value: string) => {\n                                        inquiry.relatedTickets.push(value);\n                                        this.props.refreshInquiryState();\n                                    }}\n                                    onDelete={(index: number) => {\n                                        inquiry.relatedTickets.splice(index, 1);\n                                        this.props.refreshInquiryState();\n                                    }} />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <CustomDropzone \n                                    accept='image/*'\n                                    onDrop={(files: File[]) => {\n                                        inquiry.supportDocs.push(files[0]);\n                                        this.props.refreshInquiryState();\n                                    }}/>\n                            </Grid>\n                            <Grid item xs={2}>\n                                {inquiry.supportDocs.map((doc, index) => {\n                                    return (\n                                        <CustomChip\n                                            label={doc.name}\n                                            value={index.toString()}\n                                            onDelete={(value: string) => {\n                                                inquiry.supportDocs.splice(parseInt(value), 1);\n                                                this.props.refreshInquiryState();\n                                            }} />\n                                    );\n                                })}\n                            </Grid>\n                        </Grid>\n                    </div>\n                </TableCell>\n            </TableRow>\n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\nimport { Modal, Fade } from '@material-ui/core';\nimport { IconButton } from './IconButton';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\ninterface IProps {\n    className?: string;\n    isOpen: boolean;\n    header:  React.ReactNode;\n    content: React.ReactNode;\n    footer:  React.ReactNode;\n    handleClose?: () => void;\n}\n\nexport class CustomModal extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <div>\n                <Modal\n                    className={`${this.props.className ? this.props.className : ''} custom-modal`}\n                    open={this.props.isOpen}\n                    onClose={this.props.handleClose}\n                    closeAfterTransition>\n                    <Fade in={this.props.isOpen}>\n                        <div className='modal'>\n                            {this.props.handleClose ? (\n                                <div style={{textAlign: 'right'}}>\n                                    <IconButton\n                                        icon={faTimes} \n                                        size='1x' \n                                        onClick={this.props.handleClose} />\n                                </div>\n                                \n                            ) : null}\n                            <div className='header'>\n                                {this.props.header}\n                            </div>\n                            <div className='content'>\n                                {this.props.content}\n                            </div>\n                            <div className='bottom'>\n                                {this.props.footer}\n                            </div>\n                        </div>\n                    </Fade>\n                </Modal>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { match } from \"react-router-dom\";\nimport {\n    UpdateData, \n    AccommodationData, \n    DiagnosisData, \n    PhysicianData, \n    ProcedureData,\n    ItemData,\n    FileData\n} from './UpdateTicketProps';\nimport { Grid, Button, Snackbar } from '@material-ui/core';\nimport { SummarySection } from './Components/SummarySection';\nimport { UpdateSection } from './Components/UpdateSection';\nimport { API } from '../API';\nimport { AccommodationsSection } from './Components/AccommodationsSection';\nimport { DiagnosesSection } from './Components/DiagnosesSection';\nimport { PhysiciansSection } from './Components/PhysiciansSection';\nimport { ProceduresSection } from './Components/ProceduresSection';\nimport { OtherDetailsSection } from './Components/OtherDetailsSection';\nimport { DischargeDetailsSection } from './Components/DischargeDetailsSection';\nimport { UploadedDocumentsSection } from './Components/UploadedDocumentsSection';\nimport { LeftPanelSection } from '../LeftPanelSection/LeftPanelSection';\nimport { DropdownChoice, TicketData, MemberData, InquiryData, ClientData } from '../Models';\nimport { UpdateInquirySection } from './Components/UpdateInquirySection';\nimport { CustomTabs } from '../Components/CustomTab';\nimport { Payloads } from '../Payloads';\nimport { Processmaker } from '../Processmaker';\nimport { Loading } from '../Components/Loading';\nimport { CustomModal } from '../Components/CustomModal';\nimport { TicketFooter } from '../TicketFooter';\n\ninterface IProps {\n    required: string;\n    match: match<MatchParams>;\n    history: any;\n}\n\ninterface MatchParams {\n    id: string;\n}\n\ninterface IStates {\n    loadedResources: number;\n    isAssessmentModalOpen: boolean;\n    isSaving: boolean;\n    snackbarMessage: string | null;\n    lastSave?: Date;\n\n    /* Can save to tmp */\n    tabSelected: number;\n    member?: MemberData;\n    client?: ClientData;\n    ticket: TicketData;\n    confinement?: ConfinementDetails;\n    inquiries?: InquiryData[];\n\n    updateState: UpdateData;\n    accommodationState: AccommodationData;\n    diagnosisState: DiagnosisData;\n    physicianState: PhysicianData;\n    procedureState: ProcedureData;\n    otherDetailState: ItemData;\n    fileState: FileData;\n}\n\nexport interface ConfinementDetails {\n    provider: DropdownChoice;\n    dateAdmitted: Date;\n    confinementKind: string;\n    giftGiven: boolean;\n    coverage: DropdownChoice;\n    ticketNo: string;\n    paidBy: string;\n    philhealthAmount: number;\n    finalBill: number;\n    dischargeDate?: Date;\n    primaryDiagnosisIndex: number;\n\n    updates: UpdateData[];\n    accommodations: AccommodationData[];\n    diagnoses: DiagnosisData[];\n    physicians: PhysicianData[];\n    procedures: ProcedureData[];\n    items: ItemData[];\n    files: FileData[];\n}\n\ninterface ErrorMessageFormat {\n    message: string;\n    targets: string[];\n}\n\nexport class UpdateTicketPage extends React.Component<IProps, IStates> {\n\n    static RESOURCES_TO_LOAD = 5;\n\n    tabList: { value: number, label: string }[];\n    icd10Codes: DropdownChoice[];\n    cptCodes: DropdownChoice[];\n    facilities: DropdownChoice[];\n    doctors: DropdownChoice[];\n    agents: DropdownChoice[];\n\n    errors: ErrorMessageFormat[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            tabSelected: 1,\n            loadedResources: 0,\n            isAssessmentModalOpen: false,\n            isSaving: false,\n            snackbarMessage: null,\n            ticket: {\n                ticketChannel: '',\n                transactionNo: '',\n                ticketSource: '',\n                memberName: '',\n                clientName: '',\n                brokerName: '',\n                facility: { value: '', label: '' },\n                department: '',\n                callerName: '',\n                contactNo: '',\n                ticketType: '',\n                specificType: '',\n                urgency: '',\n                agent: { id: '', name: '' },\n                additionalNotes: '',\n                additionalFiles: [],\n                ticketNo: '',\n                pmCaseId: '',\n                status: 'Open',\n                createdBy: { id: '1', name: 'Jilmer Cariaso - Static' },\n                dateCreated: new Date(),\n                dateUpdated: new Date(),\n                dateEscalated: null\n            },\n            updateState: {\n                remarks: '',\n                date: new Date(),\n                hospitalBill: 0\n            },\n            accommodationState: {\n                roomType: '',\n                days: 0,\n                costPerDay: 0\n            },\n            diagnosisState: {\n                diagnosis: { value: '', label: '' },\n                remarks: '',\n                isFinal: false,\n                isPrimary: false\n            },\n            physicianState: {\n                physician: { value: '', label: '', params: ['', 'Admitting'] },\n                diagnosis: { value: '', label: '' },\n                remarks: '',\n                visits: 0,\n                amount: 0\n            },\n            procedureState: {\n                procedure: { value: '', label: '' },\n                diagnosis: { value: '', label: '' },\n                physician: { value: '', label: '' },\n                remarks: '',\n                date: new Date(),\n                amount: 0\n            },\n            otherDetailState: {\n                name: '',\n                type: { value: '', label: '' },\n                amount: 0\n            },\n            fileState: {\n                docName: '',\n                file: null\n            }\n        };\n\n        this.tabList = [\n            { value: 1, label: 'Summary' }, \n            { value: 2, label: 'Updates' }, \n            { value: 3, label: 'Room Accommodations' }, \n            { value: 4, label: 'Diagnoses' }, \n            { value: 5, label: 'Physicians' }, \n            { value: 6, label: 'Procedures' },  \n            { value: 7, label: 'PhilHealth & Discharge Details' }, \n            { value: 8, label: 'Other Details' }, \n            { value: 9, label: 'Uploaded Documents' }\n        ];\n\n        this.facilities = [];\n        this.agents = [];\n        this.doctors = [];\n        this.cptCodes = [];\n        this.icd10Codes = [];\n        this.errors = [];\n    }\n\n    componentDidMount() {\n        // this.loadTicketData(`customer-care/tickets/${this.props.match.params['ticketId']}`);\n        API.get(`tmp?` +\n            `filter[where][and][0][user_id]=${localStorage['user_id']}&` +\n            `filter[where][and][1][module]=Customer%20Care&` + \n            `filter[where][and][2][ticket_no]=${this.props.match.params['ticketId']}`,\n            (response) => {\n                if (response.length > 0) {\n                    this.setState({\n                        lastSave: new Date(response[0].timestamp),\n                        loadedResources: this.state.loadedResources + 1,\n                        tabSelected: response[0].data.tab_selected,\n                        member: response[0].data.member,\n                        ticket: response[0].data.ticket,\n                        confinement: response[0].data.confinement,\n                        inquiries: response[0].data.inquiries,\n                        updateState: response[0].data.update_state,\n                        accommodationState: response[0].data.accommodation_state,\n                        diagnosisState: response[0].data.diagnosis_state,\n                        physicianState: response[0].data.physician_state,\n                        procedureState: response[0].data.procedure_state,\n                        otherDetailState: response[0].data.other_detail_state,\n                        fileState: response[0].data.file_state\n                    });\n                } else {\n                    this.loadTicketData(`customer-care/tickets/${this.props.match.params['ticketId']}`);\n                }\n            },\n            (error) => {\n                console.log(error);\n                this.loadTicketData(`customer-care/tickets/${this.props.match.params['ticketId']}`);\n            });\n\n        API.get('facilities',\n            (response) => {\n                this.setState({loadedResources: this.state.loadedResources + 1});\n                this.facilities = response.map(facility => {\n                    return { \n                        value: facility.facility_id,\n                        label: facility.name \n                    }\n                });\n            },\n            (error) => {\n                console.log(error);\n            });\n\n        API.get('icd10-codes?filter[limit]=1000',\n            (response) => {\n                console.log(response);  \n                this.setState({loadedResources: this.state.loadedResources + 1});\n                this.icd10Codes = response.map(icd10Code => {\n                    return { \n                        value: icd10Code.full_code,\n                        label: icd10Code.abbreviated_description \n                    };\n                });\n            },\n            (error) => {\n                console.log(error);\n            });\n\n        API.get('cpts?filter[limit]=1000',\n            (response) => {\n                this.setState({loadedResources: this.state.loadedResources + 1});\n                this.cptCodes = response.map(cptCode => {\n                    return {\n                        value: cptCode.code,\n                        label: cptCode.label \n                    };\n                });\n            }, \n            (error) => {\n                console.log(error);\n            });\n\n        API.get('doctors',\n            (response) => {\n                this.setState({loadedResources: this.state.loadedResources + 1});\n                this.doctors = response.map(doctor => {\n                    return {\n                        value: doctor._id,\n                        label: ('Dr. ' + doctor.first_name +  ' ' + doctor.last_name),\n                        params: [doctor.type]\n                    };\n                });\n            }, \n            (error) => {\n                console.log(error);\n            });\n    }\n\n    loadTicketData = (url: string) => {\n        API.get(url, \n            (response) => {\n                console.log(response);\n                this.setState({loadedResources: this.state.loadedResources + 1});\n                const ticketCategory = response.ticket_category;\n                const confinement = ticketCategory.confinement_details;\n                const inquiry = ticketCategory.inquiry_details;\n\n                this.setState({ticket: Payloads.getTicketData(response, this.props.match.params['appNo'])});\n\n                if (confinement) {\n                    this.setState({confinement: Payloads.getConfinementData(confinement, response)});\n                }\n                \n                if (inquiry) {\n                    this.setState({inquiries: inquiry.inquiry_list.map(value => {\n                        return {\n                            inquiry: { value: '', label: value.inquiry },\n                            detail: value.value,\n                            specificDetail: value.specific_detail,\n                            answer: value.answer,\n                            remarks: value.remarks,\n                            relatedTickets: value.related_tickets,\n                            supportDocs: value.support_docs\n                        };\n                    })});\n                }\n\n                if (response.member_id.length > 0) {\n                    API.get(`customer-care/members/${response.member_id}`, \n                        (response) => {\n                            this.setState({member: Payloads.getMemberData(response)});\n                            API.get(`customer-care/members/${response.member_id}/benefits`,\n                                (response) => {\n                                    console.log(response);\n                                },\n                                (error) => {\n                                    console.log(error);\n                                });\n                        },\n                        (error) => {\n                            console.log(error);\n                        });\n                }\n\n                if (response.client_id.length > 0) {\n                    API.get(`customer-care/clients/${response.client_id}`,\n                        (response) => {\n                            this.setState({client: Payloads.getClientData(response)});\n                        },\n                        (error) => {\n                            console.log(error);\n                        });\n                }\n                \n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    getErrorList = () => {\n        let errors: ErrorMessageFormat[] = [];\n\n        const confinement = this.state.confinement;\n        \n        if (confinement) {\n\n            /* Check if there's a physician assigned to each diagnosis */\n            let errorDiagnosis = confinement.diagnoses.filter(diagnosis => {\n                let matched = false;\n                confinement.physicians.map(physician => {\n                    matched = physician.diagnosis.value === diagnosis.diagnosis.value ? true : matched;\n                });\n                return !matched;\n            });\n\n            if (errorDiagnosis.length > 0) {\n                errors.push({\n                    message: 'Please assign a physician for the following diagnoses before proceding:',\n                    targets: errorDiagnosis.map(diagnosis => {\n                        return `${diagnosis.diagnosis.value} ${diagnosis.diagnosis.label}`\n                    })\n                });\n                this.setState({tabSelected: 5});\n            }\n        }\n        return errors;\n    }\n\n    uploadFiles = (fileData: FileData[], nextAction: Function) => {\n        let hasFiles = false;\n\n        const files = new FormData();\n        fileData.forEach(file => {\n            if (file.file && file.file['path'] && !file.file['field']) {\n                files.append(`supported_documents`, file.file);\n                hasFiles = true;\n            }\n        });\n\n        this.setState({isSaving: true});\n\n        if (hasFiles) {\n            API.postFormData('tmp/upload?path=customer-care', files,\n                (uploadResponse) => {\n                    nextAction(uploadResponse);\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        isSaving: false,\n                        snackbarMessage: 'Failed to upload files.'\n                    });\n                });\n        } else {\n            nextAction([]);\n        }\n    }\n\n    apiUpdateTicket = (onSuccess: Function) => {\n        const confinement = this.state.confinement;\n        const inquiries = this.state.inquiries;\n\n        if ((!this.state.member && !this.state.client) || (!confinement && !inquiries)) return;\n\n        const fileData = this.state.confinement ? (\n            this.state.confinement.files.filter(file => file.file ? !file.file['field'] : false) \n        ) : [];\n        \n        this.uploadFiles(fileData, (uploadResponse) => {\n            const payload = Payloads.getPutTicketPayload(\n                this.state.ticket,\n                !uploadResponse.error && uploadResponse.length > 0 ? (\n                    confinement ? (\n                        confinement.files\n                            .map(file => { \n                                return {\n                                    ...file.file,\n                                    docName: file.docName\n                                }\n                            })\n                            .filter(file => file ? file['field'] : false)\n                            .concat(\n                                uploadResponse.map((response, index) => {\n                                    return {\n                                        ...response,\n                                        docName: fileData[index].docName\n                                    }\n                                })\n                            )\n                    ) : [] \n                ) : (\n                    confinement ? (\n                        confinement.files.map(file => {\n                            return {\n                                ...file.file,\n                                docName: file.docName\n                            }\n                        })\n                    ) : []\n                ),\n                this.state.member, \n                this.state.client,\n                this.state.confinement,\n                this.state.inquiries\n            );\n\n            console.log(payload);\n            API.put(`customer-care/tickets/${this.props.match.params['ticketId']}`, payload,\n                (response) => {\n                    console.log(response);\n                    processmakerGetCase(this.props.match.params['caseId']);\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        isSaving: false,\n                        snackbarMessage: 'Failed to update ticket.'\n                    });\n                });\n            \n\n            const processmakerGetCase = (caseId: string) => {\n                Processmaker.get(`cases/${caseId}`,\n                    (response) => {\n                        console.log(response);\n                        if (response['current_task'][0]['tas_title'] === 'Create Ticket') {\n                            processmakerRouteCase(caseId);\n                        } else {\n                            onSuccess();\n                        }\n                    },\n                    (error) => {\n                        console.log(error);\n                        this.setState({\n                            isSaving: false,\n                            snackbarMessage: 'Failed to update ticket.'\n                        });\n                    }\n                );\n            }\n\n            const processmakerRouteCase = (caseId: string) => {\n                Processmaker.put(`cases/${caseId}/route-case`, {},\n                    (response) => {\n                        console.log(response);\n                        onSuccess();\n                    },\n                    (error) => {\n                        console.log(error);\n                        this.setState({\n                            isSaving: false,\n                            snackbarMessage: 'Failed to update ticket.'\n                        });\n                    }\n                );\n            }\n        });\n    }\n\n    saveForNow = () => {\n        const member = this.state.member;\n        const confinement = this.state.confinement;\n        const inquiries = this.state.inquiries;\n\n        if (!member || (!confinement && !inquiries)) return;\n\n        const fileData = this.state.confinement ? this.state.confinement.files : [];\n\n        this.uploadFiles(fileData, (uploadResponse) => {\n            if (!this.state.member) {\n                return;\n            }\n\n            const payload = {\n                user_id: localStorage['user_id'],\n                ticket_no: this.state.ticket.id,\n                module: 'Customer Care',\n                process: 'Update Ticket',\n                timestamp: new Date(),\n                data: {\n                    tab_selected: this.state.tabSelected,\n                    member: this.state.member,\n                    ticket: this.state.ticket,\n                    confinement: confinement ? {\n                        ...confinement,\n                        files: confinement.files\n                            .filter(file => file.file ? file.file['field'] : [])\n                            .concat(\n                                uploadResponse.map(file => {\n                                    return {\n                                        docName: file.name,\n                                        file: file\n                                    }\n                                })\n                            )\n                    } : undefined,\n                    inquiries: this.state.inquiries,\n                    update_state: this.state.updateState,\n                    accommodation_state: this.state.accommodationState,\n                    diagnosis_state: this.state.diagnosisState,\n                    physician_state: this.state.physicianState,\n                    procedure_state: this.state.procedureState,\n                    other_detail_state: this.state.otherDetailState,\n                    file_state: this.state.fileState\n                }\n            };\n            \n            API.post('tmp', JSON.stringify(payload),\n                (response) => {\n                    console.log(response);\n                    if (response._id) {\n                        this.setState({\n                            isSaving: false,\n                            snackbarMessage: 'Progress saved.',\n                            lastSave: new Date()\n                        });\n                    } else {\n                        this.setState({\n                            isSaving: false,\n                            snackbarMessage: 'Failed to save progress.'\n                        });\n                    }\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        isSaving: false,\n                        snackbarMessage: 'Failed to save progress.'\n                    });\n                });\n        });\n    }\n\n    render(): JSX.Element {\n        return (\n            <Grid container className='customer-care-main'>\n                {this.state.loadedResources !== UpdateTicketPage.RESOURCES_TO_LOAD || this.state.isSaving ? (\n                    <div \n                        style={{\n                            backgroundColor: '#00000055', \n                            zIndex: 100, \n                            position: 'fixed', \n                            width: '100%', \n                            height: '100%'}}>\n                        <Loading height='10rem'/>\n                    </div>\n                    \n                ) : (null)}\n\n                <Snackbar\n\t\t\t        anchorOrigin={{\n\t\t\t          vertical: 'top',\n\t\t\t          horizontal: 'right',\n\t\t\t        }}\n\t\t\t        open={this.state.snackbarMessage ? true : false}\n\t\t\t        autoHideDuration={6000}\n\t\t\t        onClose={() => {\n                        this.setState({snackbarMessage: null});\n                    }}\n                    message={this.state.snackbarMessage} />\n\n                <CustomModal\n                    className='modal'\n                    isOpen={this.state.isAssessmentModalOpen}\n                    handleClose={() => this.setState({isAssessmentModalOpen: false})}\n                    header='Missing Information'\n                    content={\n                        <div className='header-2'>\n                            {this.errors.map(error => {\n                                return (\n                                    <>\n                                    <p>{error.message}</p>\n                                    <p>\n                                        {error.targets.map(target => {\n                                            return <div>{`- ${target}`}</div>\n                                        })}\n                                    </p>\n                                    </>\n                                );\n                            })}\n                        </div>\n                    }\n                    footer={\n                        <Button variant='outlined' color='primary'\n                            onClick={() => {\n                                this.setState({isAssessmentModalOpen: false});\n                            }}>\n                            Okay\n                        </Button>\n                    } />\n                \n                {this.state.ticket ? (\n                    <LeftPanelSection \n                        member={this.state.member}\n                        client={this.state.client}\n                        ticket={this.state.ticket}\n                        ticketStatus='Update'\n                        disableLinkedTickets />\n                ) : null}\n\n                {this.state.confinement ? (\n                    this.renderInpatientContent(this.state.confinement)\n                ) : this.state.inquiries ? (\n                    this.renderInquiryContent(this.state.inquiries)\n                ) : null}\n\n                <TicketFooter\n                    disableFinalAssessment={this.state.ticket.ticketType === 'Inquiry'}\n                    disableAssign\n                    disableEscalate\n                    lastSave={this.state.lastSave}\n                    onSaveForNow={() => {\n                        this.saveForNow();\n                    }} \n                    onAssign={ () => null}\n                    onEscalate={() => null}\n                    onFinalAssessment={ () => {\n                        this.errors = this.getErrorList();\n                        if (this.errors.length == 0) {\n                            this.apiUpdateTicket(() => {\n                                this.props.history.push(\n                                    '#/customer-care/resolve-ticket/' +\n                                    this.props.match.params['caseId'] + '/' +\n                                    this.props.match.params['appNo'] + '/' +\n                                    this.props.match.params['ticketId']);\n                                window.location.reload();\n                            });\n                        } else {\n                            this.setState({isAssessmentModalOpen: true});\n                        }\n                    }}\n                    onUpdateTicket={() => {\n                        this.apiUpdateTicket(() => {\n                            this.props.history.push('#/customer-care/tickets');\n                            window.location.reload();\n                        });\n                    }} />\n            </Grid>\n        );\n    }\n\n    renderInpatientContent(confinement: ConfinementDetails): JSX.Element {\n        return (\n            <div className='main-content'>\n                <CustomTabs \n                    tabList={this.tabList}\n                    selectedTab={this.state.tabSelected}\n                    setSelectedTab={(index: number) => {\n                        this.setState({tabSelected: index});\n                    }} />\n                    \n                {this.state.tabSelected === 1 ? (\n                    <SummarySection \n                        ticketNo={this.state.ticket.ticketNo} \n                        updates={confinement.updates}\n                        accommodations={confinement.accommodations}\n                        diagnoses={confinement.diagnoses}\n                        physicians={confinement.physicians}\n                        procedures={confinement.procedures}\n                        items={confinement.items}\n                        provider={confinement.provider}\n                        dateAdmitted={confinement.dateAdmitted}\n                        confinementKind={confinement.confinementKind}\n                        coverage={confinement.coverage}\n                        philhealthAmount={confinement.philhealthAmount}\n                        finalBill={confinement.finalBill}\n                        dischargeDate={confinement.dischargeDate}\n                        setTabSelected={(value: number) => this.setState({tabSelected: value})}/>\n                    \n\n                ) : this.state.tabSelected === 2 ? (\n                    <UpdateSection \n                        confinement={confinement}\n                        updates={confinement.updates}\n                        state={this.state.updateState}\n                        refreshUpdatesState={() => {\n                            this.setState({confinement: confinement});\n                        }} /> \n\n                ) : this.state.tabSelected === 3 ? (\n                    this.state.ticket ? (\n                        <AccommodationsSection\n                            accommodations={confinement.accommodations}\n                            state={this.state.accommodationState}\n                            facilitiesList={this.facilities}\n                            provider={confinement.provider}\n                            dateAdmitted={confinement.dateAdmitted}\n                            confinementKind={confinement.confinementKind}\n                            refreshAccommodationsState={() => {\n                                this.setState({confinement: confinement});\n                            }} />\n                    ) : null\n\n                ) : this.state.tabSelected === 4 ? (\n                    this.state.ticket ? (\n                        <DiagnosesSection \n                            diagnoses={confinement.diagnoses}\n                            state={this.state.diagnosisState}\n                            physicians={confinement.physicians}\n                            procedures={confinement.procedures}\n                            diagnosesList={this.icd10Codes}\n                            primaryDiagnosisIndex={confinement.primaryDiagnosisIndex}\n                            refreshDiagnosisStateChange={() => {\n                                this.setState({confinement: confinement});\n                            }}\n                            setPrimaryDiagnosisIndex={(index: number) => {\n                                this.setState(prevState => ({\n                                    ...prevState,\n                                    confinement: {\n                                        ...confinement,\n                                        primaryDiagnosisIndex: index\n                                    }\n                                }));\n                            }} />\n                    ) : null\n\n                ) : this.state.tabSelected === 5 ? (\n                    <PhysiciansSection \n                        physicians={confinement.physicians}\n                        state={this.state.physicianState}\n                        physiciansList={this.doctors}\n                        diagnosesList={confinement.diagnoses}\n                        refreshPhysiciansStateChange={() => {\n                            this.setState({confinement: confinement});\n                        }} />\n\n                ) : this.state.tabSelected === 6 ? (\n                    <ProceduresSection\n                        procedures={confinement.procedures}\n                        state={this.state.procedureState}\n                        proceduresList={this.cptCodes}\n                        diagnosesList={confinement.diagnoses}\n                        physiciansList={this.doctors}\n                        refreshProceduresStateChange={() => {\n                            this.setState({confinement: confinement});\n                        }} />\n\n                ) : this.state.tabSelected === 7 ? (\n                    <DischargeDetailsSection \n                        dateAdmitted={confinement.dateAdmitted}\n                        coverage={confinement.coverage} \n                        ticketNo={confinement.ticketNo} \n                        paidBy={confinement.paidBy} \n                        philhealthAmount={confinement.philhealthAmount}\n                        finalBill={confinement.finalBill} \n                        dischargeDate={confinement.dischargeDate}\n                        onUpdateTicketStateChange={(attrName: string, value: any) => {\n                            this.setState(prevState => ({\n                                ...prevState,\n                                confinement: {\n                                    ...confinement,\n                                    [attrName]: value\n                                }\n                            }));\n                        }} />\n                    \n                ) : this.state.tabSelected === 8 ? (\n                    <OtherDetailsSection \n                        items={confinement.items}\n                        state={this.state.otherDetailState}\n                        refreshItemsStateChange={() => {\n                            this.setState({confinement: confinement});\n                        }} />\n                    \n                ) : this.state.tabSelected === 9 ? (\n                    <UploadedDocumentsSection \n                        files={confinement.files}\n                        state={this.state.fileState}\n                        refreshFilesStateChange={() => {\n                            this.setState({confinement: confinement});\n                        }} />\n                    \n                    \n                    \n                ) : null}\n            </div>\n        );\n    }\n\n    renderInquiryContent(inquiries: InquiryData[]): JSX.Element {\n        return (\n            <UpdateInquirySection \n                inquiries={inquiries}\n                refreshInquiryState={() => {\n                    this.setState({inquiries: inquiries});\n                }} />\n        );\n    }\n}","/**\n * Asynchronously loads the component for FeaturePage\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Components, Utils } from '@hims/core';\nconst { loadable } = Utils;\nconst { LoadingIndicator } = Components.UI;\n\n\nexport default loadable(async () => {\n  let {HomePage,  mapStateToProps, mapDispatchToProps} = await import('./HomePage');\n  const Component = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(HomePage);\n  return {default: Component};\n}, {\n  fallback: <LoadingIndicator />,\n});\n","import * as React from 'react';\nimport { Grid } from '@material-ui/core';\n\ninterface IProps {\n    data: any[];\n    renderHeader: () => JSX.Element;\n    renderRow: (rowData: any, index: number) => JSX.Element;\n}\n\nexport class ComplexTable extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <div className='complex-table'>\n                <Grid className='header' container spacing={1}>\n                    {this.props.renderHeader()}\n                </Grid>\n                \n                {this.props.data.map((rowData, index) => {\n                    const backColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                    return (\n                        <div className='item' style={{backgroundColor: backColor}}>\n                            {this.props.renderRow(rowData, index)}\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { ComplexTable } from 'Pages/CustomerCarePage/Components/ComplexTable';\nimport { Grid } from '@material-ui/core';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { ProcedureData, AvailmentDetails, DiagnosisData } from 'Pages/CustomerCarePage/Models';\nimport { InputArea } from 'Pages/CustomerCarePage/Components/InputArea';\nimport { CustomRadio } from 'Pages/CustomerCarePage/Components/CustomRadio';\nimport { NumberField } from 'Pages/CustomerCarePage/Components/NumberField';\n\ninterface IProps {\n    availment: AvailmentDetails;\n    refreshAvailmentState: () => void;\n}\n\n\nexport class ApproveAvailmentSection extends React.Component<IProps> {\n\n    constructor(props: IProps) {\n        super(props);\n    }\n\n    getProceduresCost = (diagnosis: DiagnosisData) => {\n        let total = 0;\n        diagnosis.procedures.map(procedure => {\n            total += procedure.amount;\n        });\n        return total;\n    }\n\n    getApprovedAvailmentsCost = () => {\n        let total = 0;\n        this.props.availment.diagnoses.map(diagnosis => {\n            diagnosis.procedures.map(procedure => {\n                total += (procedure.assessmentType === 'Approved' ? procedure.amount : 0);\n            });\n        });\n        return total;\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Approve or Disapprove Availments</div>\n                <div className='sub-section'>\n                    <div className='light-text'>PROVIDER</div>\n                    <div className='small-text'>\n                        {this.props.availment.provider.value + ' - ' + this.props.availment.provider.label}\n                    </div>\n                    <div style={{float: 'right'}}>\n                        <span className='small-text'>TOTAL AMOUNT</span>\n                        <span style={{marginLeft: '1rem'}} />\n                        <span className='header-2'>\n                            {'PHP ' + GlobalFunction.formatNumber(this.getApprovedAvailmentsCost(), true)}\n                        </span>\n                    </div>\n                </div>\n                <div className='sub-section'>\n                    <ComplexTable \n                        data={this.props.availment.diagnoses}\n                        renderHeader={() => this.renderHeader()}\n                        renderRow={(rowData: any, index: number) => \n                            this.renderRow(rowData, index)} />\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderHeader(): JSX.Element {\n        const headerNameStyle = {\n            margin: 0,\n            padding: '12px 0 12px 0'\n        };\n\n        return (\n            <>\n                <Grid item xs={4}>\n                    <div className='header-2' style={headerNameStyle}>Diagnosis</div>\n                </Grid>\n                <Grid item xs={3}>\n                    <div className='header-2' style={headerNameStyle}>Doctor</div>\n                </Grid>\n                <Grid item xs={2}>\n                    <div className='header-2' style={headerNameStyle}>Professional Fee</div>\n                </Grid>\n                <Grid item xs={3}>\n                    <div className='header-2' style={{...headerNameStyle, textAlign: 'right'}}>\n                        Total Amt. of Procedures\n                    </div>\n                </Grid>\n            </>\n        );\n    }\n\n    renderRow(diagnosis: DiagnosisData, _index: number): JSX.Element {\n        return (\n            <>\n                <Grid className='small-section' container>\n                    <Grid item xs={4}>\n                        {diagnosis.icd10Code.value + ' - ' + diagnosis.icd10Code.label}\n                    </Grid>\n                    <Grid item xs={3}>\n                        {diagnosis.doctors[0].name}\n                    </Grid>\n                    <Grid item xs={2}>\n                        {'PHP ' + GlobalFunction.formatNumber(diagnosis.doctors[0].fee, true)}\n                    </Grid>\n                    <Grid item xs={3} style={{fontWeight: 'bold', textAlign: 'right'}}>\n                        {'PHP ' + GlobalFunction.formatNumber(this.getProceduresCost(diagnosis), true)}\n                    </Grid>\n                </Grid>\n                <div className='line-border' />\n                {diagnosis.procedures.map((procedure, index) => {\n                    return this.renderProcedure(procedure, index);\n                })}\n            </>\n        );\n    }\n\n    renderProcedure(procedure: ProcedureData, index: number): JSX.Element {\n        return (\n            <>\n            <div className='line-border' />\n            <div className='section' >\n                \n                <Grid container>\n                    <Grid item xs={4}>\n                        <div>\n                            <Grid container>\n                                <Grid item xs={2} style={{padding: '0 0.5rem', marginTop: '-3px'}}>\n                                    <div className='number-item'>{index + 1}</div>\n                                </Grid>\n                                <Grid item xs={10} className='header-2'>\n                                    {procedure.cptCode.value + ' - ' + procedure.cptCode.label}\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n                <Grid container spacing={1}>\n                    <Grid item xs={4}>\n                        <div>\n                            <Grid container>\n                                <Grid item xs={2} />\n                                <Grid item xs={10}>\n                                    <div className='sub-section'>\n                                        <div className='light-text'>AMOUNT</div>\n                                        <div className='small-text'>{'PHP ' + GlobalFunction.formatNumber(procedure.amount, true)}</div>\n                                    </div>\n                                    <div className='sub-section'>\n                                        <div className='light-text'>PHILHEALTH REQUIRED?</div>\n                                        <div className='small-text'>{procedure.isPHIC ? 'Yes' : 'No'}</div>\n                                    </div>\n                                    <div className='sub-section'>\n                                        <div className='light-text'>DATE OF AVAILMENT</div>\n                                        <div className='small-text'>{GlobalFunction.toCommonDateString(procedure.dateAdded)}</div>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <div className='sub-section'>\n                            <div className='light-text'>SYSTEM ASSESSMENT</div>\n                            <div className='small-text'>{'Approve *'}</div>\n                        </div>\n                        <div className='sub-section'>\n                            <div className='light-text'>REMAINING BALANCE</div>\n                            <div className='small-text'>{'PHP ' + 0 + '.00 *'}</div>\n                        </div>\n                        <div className='sub-section'>\n                            <div className='light-text'>CLAUSE</div>\n                            <div className='small-text'>{'Laboratory tests, x-rays, and other diagnostic examinations prescribed by the INTELLICARE physician*'}</div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <div className='sub-section'>\n                            <div className='light-text'>Choose Assessment</div>\n                            <CustomRadio \n                                label='Approve'\n                                checkedCondition={procedure.assessmentType === 'Approved'}\n                                onChange={() => {\n                                    procedure.assessmentType = 'Approved';\n                                    this.props.refreshAvailmentState();\n                                }} />\n                            {procedure.assessmentType === 'Approved' ? (\n                                <NumberField\n                                    value={procedure.approvedAmount}\n                                    placeholder='Partial (optional)'\n                                    isFloat\n                                    onChange={(value: number) => {\n                                        procedure.approvedAmount = value;\n                                        this.props.refreshAvailmentState();\n                                    }} />\n                            ) : null}\n                            <CustomRadio \n                                label='Disapprove'\n                                checkedCondition={procedure.assessmentType === 'Disapproved'}\n                                onChange={() => {\n                                    procedure.assessmentType = 'Disapproved';\n                                    this.props.refreshAvailmentState();\n                                }} />\n                            <CustomRadio \n                                label='Pending'\n                                checkedCondition={procedure.assessmentType === 'Pending'}\n                                onChange={() => {\n                                    procedure.assessmentType = 'Pending';\n                                    this.props.refreshAvailmentState();\n                                }} />\n                        </div>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <div className='sub-section'>\n                            <div className='light-text'>Remarks</div>\n                            <InputArea\n                                value={procedure.assessmentRemarks}\n                                defaultRows={5}\n                                onChange={(value: string) => {\n                                    procedure.assessmentRemarks = value;\n                                    this.props.refreshAvailmentState();\n                                }} />\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport { ComplexTable } from 'Pages/CustomerCarePage/Components/ComplexTable';\nimport { Grid, TableCell, TableRow } from '@material-ui/core';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { ProcedureData, AvailmentDetails, DiagnosisData, LOAData, DropdownChoice } from 'Pages/CustomerCarePage/Models';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { NumberField } from 'Pages/CustomerCarePage/Components/NumberField';\nimport { DatePicker } from 'Pages/CustomerCarePage/Components/DatePicker';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { faPlus, faMinusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { ConfinementDetails } from '../ResolveTicketPage';\n\ninterface IProps {\n    availment?: AvailmentDetails;\n    loas: LOAData[];\n    loaToDelete: string[];\n    canEditLOAs: boolean;\n    refreshLOAStates: () => void;\n}\n\ninterface IStates {\n    loaNumber: number;\n    status: DropdownChoice;\n    amount: number;\n    loaDate: Date;\n    notes: string;\n}\n\nexport class SummaryAvailmentSection extends React.Component<IProps, IStates> {\n\n    APPROVED = 'Approved';\n    DISAPPROVED = 'Disapproved';\n    PENDING = 'Pending';\n\n    loaTypes: DropdownChoice[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loaNumber: 0,\n            status: { value: '', label: '' },\n            amount: 0,\n            loaDate: new Date(),\n            notes: ''\n        }\n\n        this.loaTypes = [\n            { value: '1', label: 'Pending' },\n            { value: '2', label: 'Claimed' },\n            { value: '3', label: 'Disapproved' }\n        ]\n    }\n\n    getProceduresCost = (diagnosis: DiagnosisData) => {\n        let total = 0;\n        diagnosis.procedures.map(procedure => {\n            total += procedure.amount;\n        })\n        return total;\n    }\n\n    getApprovedAvailments = (availment: AvailmentDetails | ConfinementDetails) => {\n        const approvedAvailments = availment.diagnoses.map(diagnosis => {\n            return {\n                ...diagnosis,\n                procedures: diagnosis.procedures\n                    .filter(procedure => procedure.assessmentType === this.APPROVED)\n                    .map(procedure => {return procedure;})\n            };\n        });\n        return approvedAvailments.filter(availment => availment.procedures.length > 0);\n    }\n\n    getDisapprovedAvailments = (availment: AvailmentDetails | ConfinementDetails) => {\n        const disapprovedAvailments = availment.diagnoses.map(diagnosis => {\n            return {\n                ...diagnosis,\n                procedures: diagnosis.procedures\n                    .filter(procedure => procedure.assessmentType === this.DISAPPROVED)\n                    .map(procedure => {return procedure;})\n            };\n        });\n        return disapprovedAvailments.filter(availment => availment.procedures.length > 0);\n    }\n\n    getApprovedAvailmentsCost = (availment: AvailmentDetails | ConfinementDetails) => {\n        let total = 0;\n        availment.diagnoses.map(diagnosis => {\n            diagnosis.procedures.map(procedure => {\n                total += (procedure.assessmentType === this.APPROVED ? procedure.amount : 0);\n            });\n        });\n        return total;\n    }\n\n    render(): JSX.Element {\n        if (this.props.availment) {\n            return this.renderAvailment(this.props.availment);\n        } else {\n            return <div>WALANG AVAILMENT</div>\n        }\n    }\n\n    renderAvailment(availment: AvailmentDetails | ConfinementDetails): JSX.Element {\n        const approvedAvailments = this.getApprovedAvailments(availment);\n        const disapprovedAvailments = this.getDisapprovedAvailments(availment);\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Summary of Approved Availments</div>\n                <div className='sub-section'>\n                    <div className='light-text'>PROVIDER</div>\n                    <div className='small-text'>\n                        {availment.provider.value + ' - ' + availment.provider.label}\n                    </div>\n                    <div style={{float: 'right'}}>\n                        <span className='small-text'>TOTAL AMOUNT</span>\n                        <span style={{marginLeft: '1rem'}} />\n                        <span className='header-2'>\n                            {'PHP ' + GlobalFunction.formatNumber(this.getApprovedAvailmentsCost(availment), true)}\n                        </span>\n                    </div>\n                </div>\n                {approvedAvailments.length > 0 ? (\n                    <div className='sub-section'>\n                        <ComplexTable \n                            data={this.getApprovedAvailments(availment)}\n                            renderHeader={() => this.renderHeader()}\n                            renderRow={(rowData: any, index: number) => \n                                this.renderRow(rowData, index)} />\n                    </div>\n                ) : null}\n                <div className='sub-section'>\n                    <CustomTable\n                        className={!this.props.canEditLOAs ? 'custom-table' : undefined}\n                        rows={this.props.loas}\n                        renderHeader={() => this.renderLOAHeader(this.props.canEditLOAs)}\n                        renderRow={(rowData: any, index: number) => \n                            this.renderLOARow(rowData, index)} />\n                </div>\n                <div className='sub-section' />\n                {disapprovedAvailments.length > 0 ? (\n                    <>\n                    <div className='header-1' style={{color: '#FD5451'}}>Disapproved Availments</div>\n                    <div className='sub-section'>\n                        <ComplexTable \n                            data={this.getDisapprovedAvailments(availment)}\n                            renderHeader={() => this.renderHeader()}\n                            renderRow={(rowData: any, index: number) => \n                                this.renderRow(rowData, index)} />\n                    </div>\n                    </>\n                ) : null}\n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderHeader(): JSX.Element {\n        const headerNameStyle = {\n            margin: 0,\n            padding: '12px 0 12px 0'\n        };\n\n        return (\n            <>\n                <Grid item xs={4}>\n                    <div className='header-2' style={headerNameStyle}>Diagnosis</div>\n                </Grid>\n                <Grid item xs={4}>\n                    <div className='header-2' style={headerNameStyle}>Doctor</div>\n                </Grid>\n                <Grid item xs={2}>\n                    <div className='header-2' style={headerNameStyle}>Professional Fee</div>\n                </Grid>\n                <Grid item xs={2}>\n                    <div className='header-2' style={{...headerNameStyle, textAlign: 'right'}}>\n                        Total Amt. of Procedures\n                    </div>\n                </Grid>\n            </>\n        );\n    }\n\n    renderRow(diagnosis: DiagnosisData, _index: number): JSX.Element {\n        return (\n            <>\n                <Grid className='small-section' container>\n                    <Grid item xs={4}>\n                        {diagnosis.icd10Code.value + ' - ' + diagnosis.icd10Code.label}\n                    </Grid>\n                    <Grid item xs={4}>\n                        {diagnosis.doctors[0].id + ' - ' + diagnosis.doctors[0].name}\n                    </Grid>\n                    <Grid item xs={2}>\n                        {'PHP ' + GlobalFunction.formatNumber(diagnosis.doctors[0].fee, true)}\n                    </Grid>\n                    <Grid item xs={2} style={{fontWeight: 'bold', textAlign: 'right'}}>\n                        {'PHP ' + GlobalFunction.formatNumber(this.getProceduresCost(diagnosis), true)}\n                    </Grid>\n                </Grid>\n                <div className='line-border' />\n                {diagnosis.procedures.map((procedure, index) => {\n                    return this.renderProcedure(procedure, index);\n                })}\n            </>\n        );\n    }\n\n    renderProcedure(procedure: ProcedureData, index: number): JSX.Element {\n\n        return (\n            <>\n            <div className='line-border' />\n            <div className='section' >\n                <Grid container>\n                    <Grid item xs={4}>\n                        <div>\n                            <Grid container>\n                                <Grid item xs={2} style={{padding: '0 0.5rem', marginTop: '-3px'}}>\n                                    <div className='number-item'>\n                                    {index + 1}\n                                    </div>\n                                </Grid>\n                                <Grid item xs={10} className='header-2'>\n                                    {procedure.cptCode.value + ' - ' + procedure.cptCode.label}\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={4}>\n                        <div>\n                            <Grid container>\n                                <Grid item xs={2} />\n                                <Grid item xs={10}>\n                                    <div className='sub-section'>\n                                        <div className='light-text'>AMOUNT</div>\n                                        <div className='small-text'>{'PHP ' + GlobalFunction.formatNumber(procedure.amount, true)}</div>\n                                    </div>\n                                    <div className='sub-section'>\n                                        <div className='light-text'>PHILHEALTH REQUIRED?</div>\n                                        <div className='small-text'>{procedure.isPHIC ? 'Yes' : 'No'}</div>\n                                    </div>\n                                    <div className='sub-section'>\n                                        <div className='light-text'>DATE OF AVAILMENT</div>\n                                        <div className='small-text'>{GlobalFunction.toCommonDateString(procedure.dateAdded)}</div>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <div className='sub-section'>\n                            <div className='light-text'>SYSTEM ASSESSMENT</div>\n                            <div className='small-text'>{'Approve *'}</div>\n                        </div>\n                        <div className='sub-section'>\n                            <div className='light-text'>REMAINING BALANCE</div>\n                            <div className='small-text'>{'PHP ' + 0 + '.00 *'}</div>\n                        </div>\n                        <div className='sub-section'>\n                            <div className='light-text'>CLAUSE</div>\n                            <div className='small-text'>{'Laboratory tests, x-rays, and other diagnostic examinations prescribed by the INTELLICARE physician*'}</div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <div className='sub-section'>\n                            <div className='light-text'>ASSESSMENT</div>\n                            <div className='header-2'>{procedure.assessmentType}</div>\n                        </div>\n                        <div className='sub-section'>\n                            <div className='light-text'>REMARKS</div>\n                            <div className='small-text'>\n                                {procedure.assessmentRemarks ? procedure.assessmentRemarks : 'NONE'}\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n            </>\n        );\n    }\n\n    renderLOAHeader(canEdit: boolean): JSX.Element {\n        if (canEdit) {\n            return (\n                <>\n                <TableCell style={{minWidth: '100px', maxWidth: '100px'}}>\n                    <div className='header-2'>LOA Number</div>\n                    <NumberField\n                        value={this.state.loaNumber}\n                        disableDelimiter={true}\n                        onChange={(value: number) => this.setState({loaNumber: value})} />\n                        \n                </TableCell>\n                <TableCell style={{minWidth: '100px', maxWidth: '100px'}}>\n                    <div className='header-2'>Amount</div>\n                    <NumberField\n                        value={this.state.amount}\n                        onChange={(value: number) => this.setState({amount: value})} />\n                </TableCell>\n                <TableCell style={{minWidth: '100px', maxWidth: '100px'}}>\n                    <div className='header-2'>Date</div>\n                    <DatePicker\n                        value={this.state.loaDate}\n                        onChange={(value: Date) => this.setState({loaDate: value})} />\n                </TableCell>\n                <TableCell>\n                    <div className='header-2'>Notes</div>\n                    <InputField\n                        value={this.state.notes}\n                        onChange={(value: string) => this.setState({notes: value})} />\n                </TableCell>\n                <TableCell style={{width: '100px', textAlign: 'center'}}>\n                    <TextButton \n                        label='Add LOA'\n                        icon={faPlus}\n                        onClick={() => {\n                            this.props.loas.push({\n                                loaNo: this.state.loaNumber,\n                                amount: this.state.amount,\n                                date: this.state.loaDate,\n                                notes: this.state.notes\n                            });\n                            this.props.refreshLOAStates();\n                            this.setState({\n                                loaNumber: 0, \n                                status: { value: '', label: '' },\n                                amount: 0,\n                                loaDate: new Date(),\n                                notes: ''\n                            });\n                        }}/>\n                </TableCell>\n                </>\n            );\n        }\n\n        return (\n            <>\n            <TableCell style={{minWidth: '100px', maxWidth: '100px'}}>LOA Number</TableCell>\n            <TableCell style={{minWidth: '100px', maxWidth: '100px'}}>Amount</TableCell>\n            <TableCell style={{minWidth: '100px', maxWidth: '100px'}}>Date</TableCell>\n            <TableCell>Notes</TableCell>\n            </>\n        );\n    }\n\n    renderLOARow(loa: LOAData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{loa.loaNo}</TableCell>\n                <TableCell>{`${GlobalFunction.formatNumber(loa.amount)} PHP`}</TableCell>\n                <TableCell>{GlobalFunction.toShortDateString(loa.date)}</TableCell>\n                <TableCell>{loa.notes}</TableCell>\n                {this.props.canEditLOAs ? (\n                    <TableCell>\n                        <Grid container>\n                            <Grid item xs={6} />\n                            <Grid item xs={6}>\n                                <IconButton\n                                    icon={faMinusCircle}\n                                    onClick={() => {\n                                        if (loa.id) {\n                                            this.props.loaToDelete.push(loa.id);\n                                        }\n                                        this.props.loas.splice(index, 1);\n                                        this.props.refreshLOAStates();\n                                    }}/>\n                            </Grid>\n                        </Grid>\n                    </TableCell>\n                ) : null}\n            </TableRow>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid, TableCell, TableRow, Tabs, Tab } from '@material-ui/core';\nimport { ConfinementDetails } from '../ResolveTicketPage';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { DiagnosisData, ProcedureData, DoctorData } from 'Pages/CustomerCarePage/Models';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { AccommodationData } from 'Pages/CustomerCarePage/UpdateTicketPage/UpdateTicketProps';\nimport { CustomRadio } from 'Pages/CustomerCarePage/Components/CustomRadio';\nimport { ComplexTable } from 'Pages/CustomerCarePage/Components/ComplexTable';\nimport { InputArea } from 'Pages/CustomerCarePage/Components/InputArea';\n\ninterface IProps {\n    confinement: ConfinementDetails;\n    refreshConfinementState: () => void;\n}\n\ninterface IStates {\n    selectedTab: any;\n}\n\n\nexport class ApproveInpatientSection extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            selectedTab: 0\n        }\n    }\n\n    getTotalAccommodationCost = (diagnosis: DiagnosisData) => {\n        let totalCost = 0;\n        if (diagnosis.isPrimary) {\n            this.props.confinement.accommodations.map(accommodation => {\n                totalCost += accommodation.costPerDay * accommodation.days;\n            });\n        }\n        return totalCost;\n    }\n\n    getProceduresCost = (diagnosis: DiagnosisData) => {console.log(diagnosis);\n        let total = 0;\n        diagnosis.procedures.map(procedure => {\n            total += procedure.amount;\n        });\n        return total;\n    }\n\n    getAttendingPhysicianCost = (diagnosis: DiagnosisData) => {\n        let total = 0;\n        diagnosis.doctors\n            .filter(doctor => doctor.type === 'Attending')\n            .map(doctor => {\n                total += doctor.fee;\n            });\n        return total;\n    }\n\n    getAvailmentCost = (diagnosis: DiagnosisData) => {\n        return (\n            this.getProceduresCost(diagnosis) +\n            this.getAttendingPhysicianCost(diagnosis) +\n            this.getTotalAccommodationCost(diagnosis)\n        );\n    }\n\n    getAllAvailmentsCost = () => {\n        let total = 0;\n        this.props.confinement.diagnoses.map(diagnosis => {\n            total += this.getAvailmentCost(diagnosis);\n        });\n        return total;\n    }\n\n    getAllProceduresCount = () => {\n        let total = 0;\n        this.props.confinement.diagnoses.map(diagnosis => {\n            total += diagnosis.procedures.length;\n        });\n        return total;\n    }\n\n    render(): JSX.Element {\n        const confinement = this.props.confinement;\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Approve or Disapprove Inpatient</div>\n                <Grid container spacing={2}>\n                    <Grid item xs={4}>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>PROVIDER</div>\n                            <div className='small-text'>\n                                {`${confinement.provider.value} - ${confinement.provider.label}`}\n                            </div>\n                        </div>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>KIND OF CONFINEMENT</div>\n                            <div className='small-text'>{confinement.confinementKind}</div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>DATE ADMITTED</div>\n                            <div className='small-text'>\n                                {GlobalFunction.toCommonDateString(confinement.dateAdmitted)}\n                            </div>\n                        </div>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>PHILHEALTH</div>\n                            <div className='small-text'>{confinement.coverage.label}</div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>LINKED TICKETS</div>\n                            <div className='small-text'>{'---*'}</div>\n                        </div>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>GIFT GIVEN</div>\n                            <div className='small-text'>{confinement.giftGiven ? 'Yes' : 'No'}</div>\n                        </div>\n                    </Grid>\n                </Grid>\n                {this.renderTabs()}\n                {this.state.selectedTab === 0 ? (\n                    this.renderSummarySection(confinement)\n                ) : (\n                    this.renderDiagnosisSection(\n                        confinement.diagnoses.filter(diagnosis => \n                            diagnosis.icd10Code.value === this.state.selectedTab\n                        )[0]\n                    )\n                )}\n                \n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderTabs(): JSX.Element {\n        return (\n            <div className='sub-section'>\n                <Tabs\n                    className='custom-tabs' \n                    value={this.state.selectedTab}\n                    variant='scrollable'\n                    scrollButtons='auto'\n                    indicatorColor='primary'\n                    onChange={(_event: React.ChangeEvent<{}>, value: number) => {\n                        this.setState({selectedTab: value});\n                    }}>\n                        <Tab \n                            value={0} \n                            label={\n                                <div>\n                                    <div className='header-2'>SUMMARY OF DIAGNOSIS</div>\n                                    <div className='smaller-text'>\n                                        {`${GlobalFunction.formatNumber(this.getAllAvailmentsCost(), true)} PHP \n                                        (${this.getAllProceduresCount()} Procedures)`}\n                                    </div>\n                                </div>\n                            } />\n                        {this.props.confinement.diagnoses\n                            .filter(diagnosis => diagnosis.isPrimary)\n                            .map(diagnosis => {\n                                const totalCost = this.getAvailmentCost(diagnosis);\n                                const proceduresCount = diagnosis.procedures.length;\n                                return (\n                                    <Tab \n                                        value={diagnosis.icd10Code.value} \n                                        label={\n                                            <div>\n                                                <div className='header-2'>PRIMARY DIAGNOSIS</div>\n                                                <div className='smaller-text'>\n                                                    {`${GlobalFunction.formatNumber(totalCost, true)} PHP \n                                                    (${proceduresCount} Procedure${proceduresCount > 1 ? 's' : ''})`}\n                                                </div>\n                                            </div>\n                                        } />\n                                );\n                            })}\n                        {this.props.confinement.diagnoses\n                            .filter(diagnosis => !diagnosis.isPrimary)\n                            .map((diagnosis, index) => {\n                                const totalCost = this.getAvailmentCost(diagnosis);\n                                const proceduresCount = diagnosis.procedures.length;\n                                return (\n                                    <Tab \n                                        value={diagnosis.icd10Code.value} \n                                        label={\n                                            <div>\n                                            <div className='header-2'>{`DIAGNOSIS ${index + 1}`}</div>\n                                            <div className='smaller-text'>\n                                                {`${GlobalFunction.formatNumber(totalCost, true)} PHP \n                                                (${proceduresCount} Procedure${proceduresCount > 1 ? 's' : ''})`}\n                                            </div>\n                                            </div>\n                                        } />\n                                );\n                            })}\n                </Tabs>\n                <div style={{borderBottom: '2px solid #1E2071'}} />\n            </div>\n        );\n    }\n\n    renderSummarySection(confinement: ConfinementDetails): JSX.Element {\n        return (\n            <div>\n                {confinement.diagnoses\n                    .filter(diagnosis => diagnosis.isPrimary)\n                    .map(diagnosis => {\n                        return this.renderDiagnosisInfo(diagnosis, 0);    \n                    })}\n                {confinement.diagnoses\n                    .filter(diagnosis => !diagnosis.isPrimary)\n                    .map((diagnosis, index)=> {\n                        return this.renderDiagnosisInfo(diagnosis, index + 1);    \n                    })}\n            </div>\n        );\n    }\n\n    renderDiagnosisInfo(diagnosis: DiagnosisData, index: number): JSX.Element {\n        const procedureCost = this.getProceduresCost(diagnosis);\n        const accommodationCost = this.getTotalAccommodationCost(diagnosis);\n        const attendingPhysicianCost = this.getAttendingPhysicianCost(diagnosis);\n        return (\n            <Grid container className='sub-section'>\n                <div style={{width: '2rem'}}>\n                    <div className='number-item'>{index + 1}</div>\n                </div>\n                <div style={{width: 'calc(100% - 2rem)'}}>\n                    <div style={{marginBottom: '1rem'}}>\n                        <div className='text'>\n                            {`${diagnosis.icd10Code.value} — ${diagnosis.icd10Code.label}`}\n                            {diagnosis.isPrimary ? (\n                                <span className='header-2'>{' (PRIMARY)'}</span>\n                            ) : null}\n                        </div>\n                        {diagnosis.doctors.filter(doctor => doctor.type === 'Admitting')\n                            .map(doctor => {\n                                return (\n                                    <>\n                                    <div className='small-text'>{`${doctor.id} - ${doctor.name}`}</div>\n                                    <div className='small-text'>\n                                        {`PHP ${GlobalFunction.formatNumber(doctor.fee, true)}`}\n                                    </div>\n                                    </>\n                                );\n                            })\n                        }\n                        \n                        <div className='small-text'>\n                            {`Remarks: ${diagnosis.remarks ? diagnosis.remarks : 'None'}`}\n                        </div>\n                        <div className='small-text'>\n                            {`PHIC: No*`}\n                        </div>\n                        <div className='header-2'>\n                            {`TOTAL AMOUNT: ${GlobalFunction.formatNumber(\n                                procedureCost + accommodationCost + attendingPhysicianCost, true\n                            )} PHP`}\n                        </div>\n                        <TextButton \n                            label='Approve/Disapprove Diagnosis' \n                            onClick={() => {\n                                window.scroll(0, -window.pageYOffset);\n                                this.setState({selectedTab: diagnosis.icd10Code.value});\n                            }} />\n                    </div>\n\n                    {this.renderTableSection('PROCEDURES',\n                        <CustomTable\n                            className='custom-table'\n                            rows={diagnosis.procedures}\n                            renderHeader={() => {\n                                return (\n                                    <>\n                                    <TableCell>Procedure</TableCell>\n                                    <TableCell style={{textAlign: 'right', width: '150px'}}>Amount</TableCell>\n                                    <TableCell style={{width: '150px'}}>Date</TableCell>\n                                    <TableCell style={{width: '250px'}}>Clause</TableCell>\n                                    <TableCell style={{textAlign: 'right', width: '150px'}}>Remaining Bal.</TableCell>\n                                    </>\n                                );\n                            }}\n                            renderRow={(procedure: ProcedureData, index: number) => {\n                                const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                                return (\n                                    <TableRow style={{backgroundColor: backgroundColor}}>\n                                        <TableCell>{`${procedure.cptCode.value} — ${procedure.cptCode.label}`}</TableCell>\n                                        <TableCell style={{textAlign: 'right'}}>\n                                            {`${GlobalFunction.formatNumber(procedure.amount, true)} PHP`}\n                                        </TableCell>\n                                        <TableCell>{GlobalFunction.toShortDateString(procedure.dateAdded)}</TableCell>\n                                        <TableCell>{`This is the clause*`}</TableCell>\n                                        <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(9999, true)} PHP*`}</TableCell>\n                                    </TableRow>\n                                );\n                            }} />,\n                            procedureCost\n                    )}\n\n                    {diagnosis.isPrimary ? (\n                        this.renderTableSection('ROOM ACCOMMODATIONS',\n                            <CustomTable\n                                className='custom-table'\n                                rows={this.props.confinement.accommodations}\n                                renderHeader={() => {\n                                    return (\n                                        <>\n                                        <TableCell>Room Type</TableCell>\n                                        <TableCell style={{textAlign: 'right', width: '200px'}}>No. of days</TableCell>\n                                        <TableCell style={{textAlign: 'right', width: '200px'}}>Cost per day</TableCell>\n                                        <TableCell style={{textAlign: 'center', width: '200px'}}>HIMS Assessment</TableCell>\n                                        </>\n                                    );\n                                }}\n                                renderRow={(accommodations: AccommodationData, index: number) => {\n                                    const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                                    return (\n                                        <TableRow style={{backgroundColor: backgroundColor}}>\n                                            <TableCell>{accommodations.roomType}</TableCell>\n                                            <TableCell style={{textAlign: 'right'}}>{accommodations.days}</TableCell>\n                                            <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(accommodations.costPerDay, true)} PHP`}</TableCell>\n                                            <TableCell style={{textAlign: 'center'}}>{`Approve*`}</TableCell>\n                                        </TableRow>\n                                    );\n                                }} />,\n                                accommodationCost\n                        )\n                    ) : null}\n\n                    {this.renderTableSection('ATTENDING PHYSICIANS',\n                        <CustomTable\n                            className='custom-table'\n                            rows={diagnosis.doctors.filter(doctor => doctor.type === 'Attending')}\n                            renderHeader={() => {\n                                return (\n                                    <>\n                                    <TableCell>Name of Doctor</TableCell>\n                                    <TableCell style={{width: '200px'}}>Specialization</TableCell>\n                                    <TableCell style={{textAlign: 'right', width: '125px'}}>No. of Visits</TableCell>\n                                    <TableCell style={{textAlign: 'right', width: '200px'}}>Amount</TableCell>\n                                    </>\n                                );\n                            }}\n                            renderRow={(doctor: DoctorData, index: number) => {\n                                const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                                return (\n                                    <TableRow style={{backgroundColor: backgroundColor}}>\n                                        <TableCell>{doctor.name}</TableCell>\n                                        <TableCell>{doctor.specialization}</TableCell>\n                                        <TableCell style={{textAlign: 'right'}}>{doctor.noOfVisits}</TableCell>\n                                        <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(doctor.fee, true)} PHP`}</TableCell>\n                                    </TableRow>\n                                );\n                            }} />,\n                            attendingPhysicianCost\n                    )}\n                </div>\n            </Grid>\n        );\n    }\n\n    renderTableSection(headerName: string, table: JSX.Element, totalValue?: number): JSX.Element {\n        return (\n            <div className='sub-section'>\n                <div className='header-2'>{headerName}</div>\n                {table}\n                {totalValue ? (\n                    <div className='sub-section'>\n                        <div style={{float: 'right'}}>\n                            <span className='small-text'>TOTAL AMOUNT</span>\n                            <span style={{marginLeft: '1rem'}} />\n                            <span className='header-2'>\n                                {GlobalFunction.formatNumber(totalValue, true) + ' PHP'}\n                            </span>\n                        </div>\n                </div>\n                ) : null}\n            </div>\n        );\n    }\n\n    renderDiagnosisSection(diagnosis: DiagnosisData): JSX.Element {\n        const procedureCost = this.getProceduresCost(diagnosis);\n        const accommodationCost = this.getTotalAccommodationCost(diagnosis);\n        const attendingPhysicianCost = this.getAttendingPhysicianCost(diagnosis);\n        return (\n            <div className='sub-section' style={{marginLeft: '1rem'}}>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <div className='text'>\n                            {`${diagnosis.icd10Code.value} — ${diagnosis.icd10Code.label}`}\n                            {diagnosis.isPrimary ? (\n                                <span className='header-2'>{' (PRIMARY)'}</span>\n                            ) : null}\n                        </div>\n                        {diagnosis.doctors.filter(doctor => doctor.type === 'Admitting')\n                            .map(doctor => {\n                                return (\n                                    <>\n                                    <div className='small-text'>{`${doctor.id} - ${doctor.name}`}</div>\n                                    <div className='small-text'>\n                                        {`PHP ${GlobalFunction.formatNumber(doctor.fee, true)}`}\n                                    </div>\n                                    </>\n                                );\n                            })\n                        }\n                        \n                        <div className='small-text'>\n                            {`Remarks: ${diagnosis.remarks ? diagnosis.remarks : 'None'}`}\n                        </div>\n                        <div className='small-text'>\n                            {`PHIC: No*`}\n                        </div>\n                        <div className='header-2'>\n                            {`TOTAL AMOUNT: ${GlobalFunction.formatNumber(\n                                procedureCost + accommodationCost + attendingPhysicianCost, true\n                            )} PHP`}\n                        </div>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <div className='light-text'>Choose Assessment</div>\n                        <CustomRadio \n                            label='Approve'\n                            checkedCondition={diagnosis.assessmentType === 'Approved'}\n                            onChange={() => {\n                                diagnosis.assessmentType = 'Approved';\n                                this.props.refreshConfinementState();\n                            }} />\n                        <CustomRadio \n                            label='Disapprove'\n                            checkedCondition={diagnosis.assessmentType === 'Disapproved'}\n                            onChange={() => {\n                                diagnosis.assessmentType = 'Disapproved';\n                                this.props.refreshConfinementState();\n                            }} />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <div className='light-text'>Remarks</div>\n                        <InputArea\n                            value={diagnosis.assessmentRemarks}\n                            onChange={(value: string) => {\n                                diagnosis.assessmentRemarks = value;\n                                this.props.refreshConfinementState();\n                            }} />\n                    </Grid>\n                    \n                </Grid>\n                <div className='sub-section'>\n                    <ComplexTable \n                        data={diagnosis.procedures}\n                        renderHeader={() => this.renderHeader()}\n                        renderRow={(rowData: any, index: number) => \n                            this.renderRow(rowData, index)} />\n                </div>\n\n                {diagnosis.isPrimary ? (\n                    this.renderTableSection('ROOM ACCOMMODATIONS',\n                        <CustomTable\n                            className='custom-table'\n                            rows={this.props.confinement.accommodations}\n                            renderHeader={() => {\n                                return (\n                                    <>\n                                    <TableCell>Room Type</TableCell>\n                                    <TableCell style={{textAlign: 'right', width: '200px'}}>No. of days</TableCell>\n                                    <TableCell style={{textAlign: 'right', width: '200px'}}>Cost per day</TableCell>\n                                    <TableCell style={{textAlign: 'center', width: '200px'}}>HIMS Assessment</TableCell>\n                                    </>\n                                );\n                            }}\n                            renderRow={(accommodations: AccommodationData, index: number) => {\n                                const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                                return (\n                                    <TableRow style={{backgroundColor: backgroundColor}}>\n                                        <TableCell>{accommodations.roomType}</TableCell>\n                                        <TableCell style={{textAlign: 'right'}}>{accommodations.days}</TableCell>\n                                        <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(accommodations.costPerDay, true)} PHP`}</TableCell>\n                                        <TableCell style={{textAlign: 'center'}}>{`Approve*`}</TableCell>\n                                    </TableRow>\n                                );\n                            }} />,\n                            accommodationCost\n                    )\n                ) : null}\n\n                {this.renderTableSection('ATTENDING PHYSICIANS',\n                    <CustomTable\n                        className='custom-table'\n                        rows={diagnosis.doctors.filter(doctor => doctor.type === 'Attending')}\n                        renderHeader={() => {\n                            return (\n                                <>\n                                <TableCell>Name of Doctor</TableCell>\n                                <TableCell style={{width: '200px'}}>Specialization</TableCell>\n                                <TableCell style={{textAlign: 'right', width: '125px'}}>No. of Visits</TableCell>\n                                <TableCell style={{textAlign: 'right', width: '200px'}}>Amount</TableCell>\n                                </>\n                            );\n                        }}\n                        renderRow={(doctor: DoctorData, index: number) => {\n                            const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                            return (\n                                <TableRow style={{backgroundColor: backgroundColor}}>\n                                    <TableCell>{doctor.name}</TableCell>\n                                    <TableCell>{doctor.specialization}</TableCell>\n                                    <TableCell style={{textAlign: 'right'}}>{doctor.noOfVisits}</TableCell>\n                                    <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(doctor.fee, true)} PHP`}</TableCell>\n                                </TableRow>\n                            );\n                        }} />,\n                        attendingPhysicianCost\n                )}\n                <div className='section' />\n            </div>\n        );\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n    renderHeader(): JSX.Element {\n        const headerNameStyle = {\n            margin: 0,\n            padding: '12px 0 12px 0'\n        };\n\n        return (\n            <>\n                <Grid item xs={4}>\n                    <div className='header-2' style={headerNameStyle}>Procedure Details</div>\n                </Grid>\n                <Grid item xs={4}>\n                    <div className='header-2' style={headerNameStyle}>System Details</div>\n                </Grid>\n                <Grid item xs={4}>\n                    <div className='header-2' style={headerNameStyle}>Assessment</div>\n                </Grid>\n            </>\n        );\n    }\n\n    renderRow(procedure: ProcedureData, index: number): JSX.Element {\n        return (\n            <div className='section' >\n                \n                <Grid container>\n                    <Grid item xs={4}>\n                        <div>\n                            <Grid container>\n                                <Grid item xs={2} style={{padding: '0 0.5rem', marginTop: '-3px'}}>\n                                    <div className='number-item'>{index + 1}</div>\n                                </Grid>\n                                <Grid item xs={10} className='header-2'>\n                                    {procedure.cptCode.value + ' - ' + procedure.cptCode.label}\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n                <Grid container>\n                    <Grid item xs={4}>\n                        <div>\n                            <Grid container>\n                                <Grid item xs={2} />\n                                <Grid item xs={10}>\n                                    <div className='sub-section-2'>\n                                        <div className='light-text'>AMOUNT</div>\n                                        <div className='small-text'>{'PHP ' + GlobalFunction.formatNumber(procedure.amount, true)}</div>\n                                    </div>\n                                    <div className='sub-section-2'>\n                                        <div className='light-text'>PHILHEALTH REQUIRED?</div>\n                                        <div className='small-text'>{procedure.isPHIC ? 'Yes' : 'No'}</div>\n                                    </div>\n                                    <div className='sub-section-2'>\n                                        <div className='light-text'>DATE OF AVAILMENT</div>\n                                        <div className='small-text'>{GlobalFunction.toCommonDateString(procedure.dateAdded)}</div>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>SYSTEM ASSESSMENT</div>\n                            <div className='small-text'>{'Approve *'}</div>\n                        </div>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>REMAINING BALANCE</div>\n                            <div className='small-text'>{'PHP ' + 0 + '.00 *'}</div>\n                        </div>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>CLAUSE</div>\n                            <div className='small-text'>{'Laboratory tests, x-rays, and other diagnostic examinations prescribed by the INTELLICARE physician*'}</div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>Choose Assessment</div>\n                            <CustomRadio \n                                label='Approve'\n                                checkedCondition={procedure.assessmentType === 'Approved'}\n                                onChange={() => {\n                                    procedure.assessmentType = 'Approved';\n                                    this.props.refreshConfinementState();\n                                }} />\n                            <CustomRadio \n                                label='Disapprove'\n                                checkedCondition={procedure.assessmentType === 'Disapproved'}\n                                onChange={() => {\n                                    procedure.assessmentType = 'Disapproved';\n                                    this.props.refreshConfinementState();\n                                }} />\n                        </div>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>Remarks</div>\n                            <InputArea\n                                value={procedure.assessmentRemarks}\n                                onChange={(value: string) => {\n                                    procedure.assessmentRemarks = value;\n                                    this.props.refreshConfinementState();\n                                }} />\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport {  ConsultationDetails } from 'Pages/CustomerCarePage/Models';\nimport { CustomRadio } from 'Pages/CustomerCarePage/Components/CustomRadio';\nimport { Grid } from '@material-ui/core';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\n\ninterface IProps {\n    consultation: ConsultationDetails;\n    refreshConsultationState: () => void;\n}\n\ninterface IStates {\n    selectedTab: any;\n}\n\nexport class ApproveConsultationSection extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            selectedTab: 0\n        }\n    }\n\n    render(): JSX.Element {\n        console.log(this.props.consultation)\n        const consultation = this.props.consultation;\n        return (\n            <Grid container className='section'>\n                <Grid item xs={6}>\n                    <div style={{paddingTop: '2.5rem'}} />\n                    <div className='header-1'>Resolve Consultation</div>\n                    <div className='sub-section-2'>\n                        <div className='light-text'>PROVIDER</div>\n                        <div className='small-text'>\n                            {`${consultation.provider.value} - ${consultation.provider.label}`}\n                        </div>\n                    </div>\n                    <div className='sub-section-2'>\n                        <div className='light-text'>DIAGNOSIS</div>\n                        <div className='small-text'>\n                            {`${consultation.diagnosis.value} - ${consultation.diagnosis.label}`}\n                        </div>\n                    </div>\n                    <div className='sub-section-2'>\n                        <div className='light-text'>DOCTOR</div>\n                        <div className='small-text'>\n                            {consultation.doctor.label}\n                        </div>\n                    </div>\n                    <div className='sub-section-2'>\n                        <div className='light-text'>NOTES</div>\n                        <div className='small-text'>{consultation.notes ? consultation.notes : 'None'}</div>\n                    </div>\n                    <div className='sub-section'>\n                    <div className='header-2'>ASSESSMENT</div>\n                        <CustomRadio \n                            label='Approve'\n                            checkedCondition={consultation.assessmentType === 'Approved'}\n                            onChange={() => {\n                                consultation.assessmentType = 'Approved';\n                                this.props.refreshConsultationState();\n                            }} />\n                        <CustomRadio \n                            label='Disapprove'\n                            checkedCondition={consultation.assessmentType === 'Disapproved'}\n                            onChange={() => {\n                                consultation.assessmentType = 'Disapproved';\n                                this.props.refreshConsultationState();\n                            }} />\n                        <CustomRadio \n                            label='Pending'\n                            checkedCondition={consultation.assessmentType === 'Pending'}\n                            onChange={() => {\n                                consultation.assessmentType = 'Pending';\n                                this.props.refreshConsultationState();\n                            }} />\n                        <InputField\n                            placeholder='Reason'\n                            value={consultation.assessmentRemarks}\n                            onChange={(value: string) => {\n                                consultation.assessmentRemarks = value;\n                                this.props.refreshConsultationState();\n                            }} />\n                    </div>\n                    <div className='section' />\n                </Grid>\n            </Grid>\n        );\n    }\n}","\nimport * as React from 'react';\nimport { match } from \"react-router-dom\";\nimport { API } from '../API';\nimport { MemberData, TicketData, AvailmentDetails, LOAData, DropdownChoice, DiagnosisData, ConsultationDetails, ClientData } from '../Models';\nimport { LeftPanelSection } from '../LeftPanelSection/LeftPanelSection';\nimport { CustomTabs } from '../Components/CustomTab';\nimport { Grid, Button } from '@material-ui/core';\nimport { ApproveAvailmentSection } from './Components/ApproveAvailmentSection';\nimport { CheckBenefitSection } from './Components/CheckBenefitSection';\nimport { PartnerNetworkSection } from './Components/PartnerNetworkSection';\nimport { SummaryAvailmentSection } from './Components/SummaryAvailmentSection';\nimport { ReviewTicketsSection } from './Components/ReviewTicketsSection';\nimport { Payloads } from '../Payloads';\nimport { CheckUtilizationSection } from './Components/CheckUtilizationSection';\nimport { CheckContractSection } from './Components/CheckContractSection';\nimport { Processmaker } from '../Processmaker';\nimport { AccommodationData } from '../UpdateTicketPage/UpdateTicketProps';\nimport { ApproveInpatientSection } from './Components/ApproveInpatientSection';\nimport { Loading } from '../Components/Loading';\nimport { ApproveConsultationSection } from './Components/ApproveConsultationSection';\nimport { TicketFooter } from '../TicketFooter';\nimport { CustomModal } from '../Components/CustomModal';\n\ninterface IProps {\n    required: string;\n    match: match<MatchParams>;\n    history: any;\n}\n\ninterface MatchParams {\n    id: string;\n}\n\ninterface IStates {\n    tabSelected: number;\n    isSummarizing: boolean;\n\n    member?: MemberData;\n    client?: ClientData;\n    ticket?: TicketData;\n\n    availment?: AvailmentDetails;\n    confinement?: ConfinementDetails;\n    consultation?: ConsultationDetails;\n\n    pmId: string;\n    loas: LOAData[];\n    loaToDelete: string[];\n\n    isCloseTicketModalOpen: boolean;\n}\n\nexport interface ConfinementDetails {\n    provider: DropdownChoice;\n    dateAdmitted: Date;\n    confinementKind: string;\n    giftGiven: boolean;\n    coverage: DropdownChoice;\n    philhealthAmount: number;\n    finalBill: number;\n    dischargeDate?: Date;\n\n    updates: any;\n    others: any;\n    diagnoses: DiagnosisData[];\n    accommodations: AccommodationData[];\n}\n\nexport class ResolveTicketPage extends React.Component<IProps, IStates> {\n\n    tabList = [\n        { value: 1, label: 'Availments' }, \n        { value: 2, label: 'Benefits' }, \n        { value: 3, label: 'Partner Network' }, \n        { value: 4, label: 'Exclusion' }, \n        { value: 5, label: 'Utilization' }, \n        { value: 6, label: 'Tickets' },  \n        { value: 7, label: 'Contract' }\n    ];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            tabSelected: 1,\n            isSummarizing: false,\n            pmId: '',\n            loas: [],\n            loaToDelete: [],\n            isCloseTicketModalOpen: false\n        };\n    }\n\n    componentDidMount() {\n        API.get('customer-care/tickets/' + this.props.match.params['ticketId'],\n            (response) => {\n\n                const ticketCategory = response.ticket_category;\n                const availment = ticketCategory.availment_details;\n                const confinement = ticketCategory.confinement_details;\n                const consultation = ticketCategory.consultation_details;\n\n\n                this.setState({ticket: Payloads.getTicketData(response, this.props.match.params['appNo'])});\n\n                if (availment) {\n                    const providerData = availment.provider.split(' - ');\n                    this.setState({availment: {\n                        provider: { value: providerData[0], label: providerData[1] },\n                        diagnoses: availment.availments_list[0].diagnosis.map(diagnosis => {\n                            return {\n                                icd10Code: { value: diagnosis.icd10_code, label: diagnosis.diagnosis },\n                                remarks: diagnosis.remarks,\n                                isPrimary: diagnosis.is_primary,\n                                isFinal: diagnosis.is_final,\n                                doctors: diagnosis.doctors.map(doctor => {\n                                    return {\n                                        id: doctor.id,\n                                        name: doctor.name,\n                                        specialization: doctor.specialization,\n                                        fee: doctor.fee,\n                                        noOfVisits: doctor.no_of_visits,\n                                        remarks: doctor.remarks\n                                    }\n                                }),\n                                procedures: diagnosis.procedures.map(procedure => {\n                                    return {\n                                        cptCode: { value: procedure.cpt_code, label: procedure.procedure_name },\n                                        isPHIC: procedure.phic,\n                                        amount: parseInt(procedure.amount),\n                                        notes: procedure.notes,\n                                        doctor: { value: '', label: procedure.doctor },\n                                        dateAdded: new Date(procedure.date_added),\n                                        assessmentType: procedure.assessment_type,\n                                        assessmentRemarks: procedure.assessment_remarks,\n                                        approvedAmount: procedure.approved_amount\n                                    }\n                                })\n                            }\n                        })\n                    }});\n                }\n\n                if (confinement) {\n                    const providerData = confinement.provider.split(' - ');\n                    this.setState({confinement: {\n                        provider: { value: providerData[0], label: providerData[1] },\n                        dateAdmitted: new Date(confinement.date_admitted),\n                        confinementKind: confinement.confinement_kind,\n                        giftGiven: confinement.gift_given,\n                        coverage: { value: '', label: confinement.coverage },\n                        philhealthAmount: confinement.philhealth_amount,\n                        finalBill: confinement.final_bill,\n                        dischargeDate: confinement.discharge_date ? new Date(confinement.discharge_date) : undefined,\n                        diagnoses: confinement.diagnoses.map(diagnosis => {\n                            return {\n                                icd10Code: { value: diagnosis.icd10_code, label: diagnosis.diagnosis },\n                                remarks: diagnosis.remarks,\n                                isPrimary: diagnosis.is_primary,\n                                isFinal: diagnosis.is_final,\n                                assessmentType: diagnosis.assessment_type,\n                                assessmentRemarks: diagnosis.assessment_remarks,\n                                approvedAmount: diagnosis.approved_amount,\n                                doctors: diagnosis.doctors.map(doctor => {\n                                    return {\n                                        id: doctor.id,\n                                        name: doctor.name,\n                                        specialization: doctor.specialization,\n                                        type: doctor.type,\n                                        fee: doctor.fee,\n                                        noOfVisits: doctor.no_of_visits,\n                                        remarks: doctor.remarks\n                                    }\n                                }),\n                                procedures: diagnosis.procedures.map(procedure => {\n                                    return {\n                                        cptCode: { value: procedure.cpt_code, label: procedure.procedure_name },\n                                        isPHIC: procedure.phic,\n                                        amount: parseInt(procedure.amount),\n                                        notes: procedure.notes,\n                                        doctor: procedure.doctor,\n                                        dateAdded: new Date(procedure.date_added),\n                                        assessmentType: procedure.assessment_type,\n                                        assessmentRemarks: procedure.assessment_remarks,\n                                        approvedAmount: procedure.approved_amount\n                                    }\n                                })\n                            }\n                        }),\n                        accommodations: confinement.room_accommodation.map(accommodation => {\n                            return {\n                                roomType: accommodation.room_type,\n                                days: parseInt(accommodation.no_of_days),\n                                costPerDay: accommodation.amount\n                            }\n                        }),\n                        updates: confinement.updates,\n                        others: confinement.others\n                    }});\n\n                    this.tabList[0].label = 'Inpatient';\n                }\n\n                if (consultation) {\n                    const providerData = consultation.provider.split(' - ');\n                    const diagnosisData = consultation.diagnosis.split(' - ');\n                    const doctorData = consultation.doctor.split(' - ');\n                    this.setState({consultation: {\n                        provider: { value: providerData[0], label: providerData[1] },\n                        diagnosis: { value: diagnosisData[0], label: diagnosisData[1] },\n                        doctor: { value: doctorData[0], label: doctorData[1] },\n                        notes: consultation.notes,\n                        assessmentType: consultation.assessment_type,\n                        assessmentRemarks: consultation.assessment_remarks,\n                        approvedAmount: consultation.approved_amount\n                    }});\n                    this.tabList[0].label = 'Consultation Details';\n                }\n\n                this.setState({loas: response.loa.map(loa => {\n                    return {\n                        id: loa._id,\n                        loaNo: loa.loa_no,\n                        amount: loa.amount,\n                        date: new Date(loa.date),\n                        notes: loa.notes\n                    }\n                })});\n\n                if (response.member_id.length > 0) {\n                    API.get(`customer-care/members/${response.member_id}`, \n                        (response) => {\n                            this.setState({member: Payloads.getMemberData(response)});\n                            API.get(`customer-care/members/${response.member_id}/benefits`,\n                                (response) => {\n                                    console.log(response);\n                                },\n                                (error) => {\n                                    console.log(error);\n                                });\n                        },\n                        (error) => {\n                            console.log(error);\n                        });\n                }\n\n                if (response.client_id.length > 0) {\n                    API.get(`customer-care/clients/${response.client_id}`,\n                        (response) => {\n                            this.setState({client: Payloads.getClientData(response)});\n                        },\n                        (error) => {\n                            console.log(error);\n                        });\n                }\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    onUpdateAssessment = () => {\n\n        if ((!this.state.member && !this.state.client) || !this.state.ticket) {\n            return;\n        }\n\n        const ticket = this.state.ticket;\n\n        const payload = Payloads.getPutUpdateAssessmentPayload(\n            this.state.ticket,\n            this.state.loas,\n            this.state.member,\n            this.state.client,\n            this.state.availment,\n            this.state.confinement,\n            this.state.consultation\n        );\n        \n        console.log(JSON.stringify(payload));\n        API.delete('customer-care/tickets/loa', this.state.loaToDelete,\n            (response) => {\n                console.log(response);\n                API.put(`customer-care/tickets/${this.props.match.params['ticketId']}`, payload,\n                    (response) => {\n                        console.log(response);\n                        ticket.approvalCode = response.approval_code;\n                        this.setState({ticket: ticket});\n                        window.location.reload();\n                    },\n                    (error) => {\n                        console.log(error);\n                    });\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    onResolve = () => {\n        API.patch(`customer-care/tickets/${this.props.match.params['ticketId']}`, { status: 'Resolved' },\n                (patchTicketResponse) => {\n                    console.log('Patch Response: ', patchTicketResponse);\n                    onResolveProcessmaker();\n                },\n                (error) => {\n                    console.log(error);\n                });\n    \n        const onResolveProcessmaker = () => {\n            Processmaker.get(`cases/${this.props.match.params['caseId']}`,\n                (response) => {                               \n                    if (this.state.availment || this.state.confinement || this.state.consultation) {\n                        if (response['current_task'][0]['tas_title'] === 'Approve / Disapprove Availment') {\n                            processmakerRouteCase(() => {\n                                returnToTicketList();\n                            });\n                        } else if (response['current_task'][0]['tas_title'] === 'Modify / Update Ticket') {\n                            processmakerRouteCase(() => {\n                                processmakerRouteCase(() => {\n                                    returnToTicketList();\n                                });\n                            });\n                        } else if (response['current_task'][0]['tas_title'] === 'Create Ticket') {\n                            processmakerRouteCase(() => {\n                                processmakerRouteCase(() => {\n                                    processmakerRouteCase(() => {\n                                        returnToTicketList();\n                                    });\n                                });\n                            });\n                        }\n                    } else {\n                        returnToTicketList();\n                    }\n                },\n                (error) => {\n                    console.log(error);\n                }\n            );\n        }\n\n        const processmakerRouteCase = (onSuccess: Function) => {\n            Processmaker.put(`cases/${this.props.match.params['caseId']}/route-case`, {},\n                (response) => {\n                    console.log(response);\n                    onSuccess();\n                },\n                (error) => {\n                    console.log(error);\n                }\n            );\n        }\n\n        const returnToTicketList = () => {\n            this.props.history.push('#/customer-care/tickets');\n            window.location.reload();\n        }\n    }\n\n    allAvailmentIsDisapproved = () => {\n        if (this.state.availment) {\n            for (const diagnosis of this.state.availment.diagnoses) {\n                for (const procedure of diagnosis.procedures) {\n                    if (procedure.assessmentType !== 'Disapproved') {\n                        return false;\n                    }\n                }\n            }\n        }\n        if (this.state.confinement) {\n            for (const diagnosis of this.state.confinement.diagnoses) {\n                for (const procedure of diagnosis.procedures) {\n                    if (procedure.assessmentType !== 'Disapproved') {\n                        return false;\n                    }\n                }\n            }\n        }\n        if (this.state.consultation) {\n            if (this.state.consultation.assessmentType !== 'Disapproved') {\n                return true;\n            }\n        }\n        return true;\n    }\n\n\n    // @ts-ignore\n    render(): JSX.Element {\n        return (\n            <Grid container className='customer-care-main'>\n                {!this.state.ticket || (!this.state.member && !this.state.client) ? (\n                    <div \n                        style={{\n                            backgroundColor: '#00000055', \n                            zIndex: 100, \n                            position: 'fixed', \n                            width: '100%', \n                            height: '100%'}}>\n                        <Loading height='10rem'/>\n                    </div>\n                    \n                ) : (null)}\n\n                <CustomModal\n                    className='modal'\n                    isOpen={this.state.isCloseTicketModalOpen}\n                    handleClose={() => {\n                        this.setState({isCloseTicketModalOpen: false});\n                    }}\n                    header='Resolve and Close Ticket'\n                    content={\n                        'Resolving and closing will no longer allow you to modify ' + \n                        'your approval/disapproval to this ticket. Are you sure ' +\n                        'you want to resolve and close?'}\n                    footer={\n                        <>\n                        <Button variant='outlined' color='primary'\n                            onClick={() => {\n                                this.setState({isCloseTicketModalOpen: false});\n                            }}>\n                            Cancel\n                        </Button>\n                        <span style={{padding: '1rem'}} />\n                        <Button variant='contained' color='primary'\n                            onClick={() => {\n                                this.setState({isCloseTicketModalOpen: false});\n                                this.onResolve();\n                            }}>\n                            Resolve and Close\n                        </Button>\n                        </>\n                    } />\n\n                <LeftPanelSection \n                    member={this.state.member}\n                    client={this.state.client}\n                    ticket={this.state.ticket}\n                    ticketStatus='Resolve'\n                    disableLinkedTickets />\n\n                <CustomTabs \n                    tabList={this.tabList}\n                    selectedTab={this.state.tabSelected}\n                    setSelectedTab={(index: number) => {\n                        this.setState({tabSelected: index});\n                    }} />\n\n                <div className='main-content'>\n                    {this.state.tabSelected === 1 && this.state.ticket ? (\n\n                        this.state.availment ? (\n                            this.renderOutpatientContent(this.state.availment, this.state.ticket)\n\n                        ) : this.state.confinement ? (\n                            this.renderInpatientContent(this.state.confinement, this.state.ticket)\n\n                        ) : this.state.consultation ? (\n                            this.renderConsultationContent(this.state.consultation)\n\n                        ) : null\n                        \n                    ) : this.state.tabSelected === 2 && this.state.member ? (\n                        <CheckBenefitSection\n                            memberId={this.state.member.memberId} />\n                    ) : this.state.tabSelected === 3 && (this.state.member || this.state.client) ? (\n                        <PartnerNetworkSection \n                            clientId={\n                                this.state.member && this.state.member.client ? this.state.member.client.id : \n                                this.state.client ? this.state.client.id : ''} />\n                    ) : this.state.tabSelected === 5 ? (\n                        <CheckUtilizationSection />\n                    ) : this.state.tabSelected === 6 && this.state.member ? (\n                        <ReviewTicketsSection memberId={this.state.member.memberId} />\n                    ) : this.state.tabSelected === 7 && this.state.member ? (\n                        <CheckContractSection \n                            memberId={this.state.member.memberId} />\n                    ) : null}\n                </div>\n\n                {this.state.ticket ? (\n                    <TicketFooter\n                        disableAssign\n                        disableEscalate\n                        onAssign={() => {}}\n                        onEscalate={() => {}}\n                        onSummarizeAssessment={\n                            !this.state.ticket.approvalCode &&\n                            !this.state.consultation && \n                            !this.state.isSummarizing &&\n                            this.state.ticket.status !== 'Resolved' ? () => {\n                                this.setState({isSummarizing: true});\n                            } : undefined}\n                        onGenerateApprovalCode={\n                            !this.state.ticket.approvalCode && \n                            (this.state.consultation || this.state.isSummarizing) &&\n                            !this.allAvailmentIsDisapproved() ? () => {\n                                this.onUpdateAssessment();\n                            } : undefined}\n                        onResolveAndCloseTicket={\n                            this.state.ticket.status !== 'Resolved' &&\n                            (this.state.ticket.approvalCode ||\n                            this.allAvailmentIsDisapproved()) ? () => {\n                                this.setState({isCloseTicketModalOpen: true});\n                            } : undefined} />\n                ) : null}\n            </Grid>\n        );\n    }\n\n    renderOutpatientContent(availment: AvailmentDetails, ticket: TicketData): JSX.Element {\n        return (\n            !this.state.isSummarizing && \n            !ticket.approvalCode &&\n            ticket.status !== 'Resolved' ? (\n                <ApproveAvailmentSection \n                    availment={availment}\n                    refreshAvailmentState={() => {\n                        this.setState({availment: this.state.availment});\n                    }} />\n            ) : (\n                <SummaryAvailmentSection \n                    availment={availment}\n                    loas={this.state.loas}\n                    loaToDelete={this.state.loaToDelete}\n                    canEditLOAs={!ticket.approvalCode && ticket.status !== 'Resolved'}\n                    refreshLOAStates={() => {\n                        this.setState({\n                            loas: this.state.loas,\n                            loaToDelete: this.state.loaToDelete\n                        });\n                    }} />\n            )\n        );\n    }\n\n    renderInpatientContent(confinement: ConfinementDetails, ticket: TicketData): JSX.Element {\n        console.log(\n            '!this.state.isSummarizing', !this.state.isSummarizing,\n            '!ticket.approvalCode', !ticket.approvalCode,\n            \"ticket.status !== 'Resolved'\", ticket.status !== 'Resolved'\n        );\n        return (\n            !this.state.isSummarizing && \n            !ticket.approvalCode &&\n            ticket.status !== 'Resolved' ? (\n                <ApproveInpatientSection\n                    confinement={confinement}\n                    refreshConfinementState={() => {\n                        this.setState({confinement: this.state.confinement});\n                    }} />\n            \n            ) : (\n                <SummaryAvailmentSection \n                    availment={confinement}\n                    loas={this.state.loas}\n                    loaToDelete={this.state.loaToDelete}\n                    canEditLOAs={!ticket.approvalCode}\n                    refreshLOAStates={() => {\n                        this.setState({\n                            loas: this.state.loas,\n                            loaToDelete: this.state.loaToDelete\n                        });\n                    }} />\n            )\n        );\n    }\n\n    renderConsultationContent(consultation: ConsultationDetails): JSX.Element {\n        return (\n            <div>\n                <ApproveConsultationSection \n                    consultation={consultation}\n                    refreshConsultationState={() => {\n                        this.setState({consultation: this.state.consultation});\n                    }} />\n            </div>\n        );\n    }\n}","/**\n * Asynchronously loads the component for FeaturePage\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Components, Utils } from '@hims/core';\nconst { loadable } = Utils;\nconst { LoadingIndicator } = Components.UI;\n\nexport default loadable(\n  async () => {\n    const {\n      TicketListPage,\n      mapStateToProps,\n      mapDispatchToProps,\n    } = await import('./TicketListPage');\n\n    const Component = connect(\n      mapStateToProps,\n      mapDispatchToProps,\n    )(TicketListPage);\n    return { default: Component };\n  },\n  {\n    fallback: <LoadingIndicator />,\n  },\n);\n","import * as React from 'react';\nimport './component-style.scss';\n\ninterface IProps {\n    placeholder: string;\n    value: string;\n    detail: string;\n    onChange: (value: string) => void;\n}\n\nexport class DetailedInputField extends React.Component<IProps> {\n\n    shouldComponentUpdate(props: IProps, _state: any) {\n        return (\n            (this.props.placeholder !== props.placeholder) ||\n            (this.props.value !== props.value) ||\n            (this.props.detail !== props.detail)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='detailed-input-field'>\n                <div className='text'>{this.props.placeholder}</div>\n                <div className='input-field'>\n                    <input \n                        className='text-field left' \n                        value={this.props.value}\n                        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                            this.props.onChange(event.target.value);\n                        }} />\n                    <div className='detail right'>{this.props.detail}</div>\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid, TableCell, TableRow } from '@material-ui/core';\nimport './../style.scss';\nimport { CustomTable } from '../Components/CustomTable';\nimport { InputField } from '../Components/InputField';\nimport { IconButton } from '../Components/IconButton';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { LabelDisplayedRowsArgs } from '@material-ui/core/TablePagination';\nimport { CustomRadio } from '../Components/CustomRadio';\nimport { Dropdown } from '../Components/Dropdown';\nimport { DropdownChoice } from '../Models';\nimport { DetailedDropdown } from '../Components/DetailedDropdown';\nimport { DetailedInputField } from '../Components/DetailedInputField';\n\ninterface IProps {\n\n}\n\ninterface IStates {\n    \n}\n\nexport class AdvanceSearch extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n    \n    render(): JSX.Element {\n        return (\n            <Grid container className='customer-care-main'>\n                <div className='section'>\n                    <div className='header'>Advanced Search</div>\n\n                    <div className='bordered-section'>\n                        <Grid container spacing={10}>\n                            <Grid item xs={3}>\n                                <div className='header-2'>SEARCH FOR A</div>\n                                <DetailedDropdown\n                                    value={{value:'Testing adjustable width', label: ''}}\n                                    choices={[{value:'', label: ''}]}\n                                    onChange={(_value: DropdownChoice) => {\n\n                                    }} />\n                                <DetailedInputField\n                                    placeholder=''\n                                    value=''\n                                    detail='Testing here'\n                                    onChange={(_value: string) => {\n\n                                    }} />\n\n                                <CustomRadio\n                                    label='Member'\n                                    checkedCondition={true}\n                                    onChange={() => {}} />\n                                <CustomRadio\n                                    label='Corporate Client'\n                                    checkedCondition={false}\n                                    onChange={() => {}} />\n                            </Grid>\n                            <Grid item xs={3}>\n                                <div className='header-2'>SEARCH BY COMPANY</div>\n                                <Dropdown \n                                    placeholder='Member Type'\n                                    value={{value:'', label: ''}}\n                                    choices={[{value:'', label: ''}]}\n                                    onChange={(_value: DropdownChoice) => {\n\n                                    }} />\n                                <Dropdown \n                                    placeholder='Member Status'\n                                    value={{value:'', label: ''}}\n                                    choices={[{value:'', label: ''}]}\n                                    onChange={(_value: DropdownChoice) => {\n\n                                    }} />\n                            </Grid>\n                            <Grid item xs={3}>\n                                <div className='header-2'>SEARCH BY MEMBER DETAILS</div>\n                            </Grid>\n                            <Grid item xs={3}>\n                                \n                            </Grid>\n                        </Grid>\n                    </div>\n\n\n                    <div className='sub-section'>\n                        <div className='header-3'>{`SEARCH RESULTS (${9999})`}</div>\n                        <CustomTable\n                            className='custom-table-selectable'\n                            rows={[[0,0,0,0],[0,0,0,0]]}\n                            renderHeader={() => this.renderTableHeader()}\n                            renderRow={(rowData: any, index: number) => \n                                this.renderTableRow(rowData, index)}\n                            onChangeInfo={(info: LabelDisplayedRowsArgs) => \n                                `${info.from}-${info.to} out of ${info.count} results`}\n                            labelRowsPerPage='Show'\n                            rowsPerPageOptions={[10, 25, 50]} />\n                        {/* <div className='text'>\n                            Add a diagnosis first then add procedures per diagnosis after\n                        </div>\n                        <div className='sub-section'>\n                            <CustomTable\n                                rows={this.props.availment.diagnoses}\n                                renderHeader={() => this.renderTableHeader()}\n                                renderRow={(rowData: any, index: number) => \n                                    this.renderTableRow(rowData, index)} />\n                        </div>\n                        {this.props.createTicketAttemp && this.props.availment.diagnoses.length === 0 ? (\n                            <div className='sub-section' style={{color: '#E53935'}}>\n                                No diagnosis. Need atleast one diagnosis.\n                            </div> \n                        ) : (null)} */}\n                    </div>\n                </div>\n                \n            </Grid>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            {this.renderHeaderColumn('cardNo', 'Member ID')}\n            {this.renderHeaderColumn('name', 'Name')}\n            {this.renderHeaderColumn('corporates', 'Corporate/s')}\n            {this.renderHeaderColumn('planType', 'Plan Type')}\n            {this.renderHeaderColumn('', 'Action', '60px')}\n            </>\n        );\n    }\n\n\n\n\n\n    renderTableRow = (_data: any, index: number) => {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{'ticket.status'}</TableCell>\n                <TableCell>{'ticket.ticketNo'}</TableCell>\n                <TableCell>{'ticket.channel'}</TableCell>\n                <TableCell>{'ticket.type'}</TableCell>\n                <TableCell></TableCell>\n            </TableRow>\n        );\n    }\n\n\n\n    renderHeaderColumn(attrName: string, headerText: string, width?: string): JSX.Element {\n        return (\n            <TableCell style={{width: width}}>\n                <span className='header-2'>{headerText}</span>\n                \n                {attrName !== '' ? (\n                    <>\n                    <div style={{float: 'right'}}>\n                        <IconButton \n                            icon={faSort} \n                            onClick={() => {\n                                // this.sortTickets(attrName, true);\n                                // this.setState({ticketListUpdated: true});\n                            }} />\n                    </div>\n                    <InputField\n                        value={this.state[attrName]}\n                        onChange={(_value: string) => {\n                            // this.setState(prevState => ({...prevState, [attrName]: value}));\n                        }} />\n                    </>\n                ) : null}\n                \n            </TableCell>\n        );\n    }\n    \n}","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport {\n  Grid,\n  Paper,\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport * as MaterialUI from '@material-ui/core';\nimport { Loader } from 'Components/UI/LoadingIndicator';\nimport clsx from 'clsx';\nimport { Store } from 'Components/Stores/IStore';\nimport { IDashboard } from './IDashboard';\nimport { DashboardActions } from './Actions';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faExclamationCircle,\n  faCircle,\n} from '@fortawesome/free-solid-svg-icons';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './style.scss';\nimport '@hims/core/dist/index.css';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { Processmaker } from 'Pages/CustomerCarePage/Processmaker';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\n\n/** select customize style to set background as transparent */\nconst cellSelectStyles = makeStyles({\n\tselect: {\n    backgroundColor: 'transparent',\n\t},\n});\n\n/** customization of material ui select for the page */\nconst Select = ({ id, value, items, onChange }: any) => {\n\tconst cellSelectClasses = cellSelectStyles();\n\treturn (\n\t\t<MaterialUI.Select\n\t\t\tid={id}\n\t\t\tclasses={cellSelectClasses}\n\t\t\tvalue={value}\n      onChange={onChange}\n      disableUnderline\n\t\t\tstyle={{ \n        backgroundColor: 'transparent', \n        color: '#272E4C', \n        fontSize: '0.875rem' ,\n        border: '1px solid #DDDFE3',\n        padding: '2px 8px',\n        borderRadius: 12,\n      }}\n\t\t\trenderValue={(selected: any) => {\n\t\t\t\tif (selected != null) {\n\t\t\t\t\tconst value: any = items.find((item: any) => {\n\t\t\t\t\t\treturn item.value === selected;\n\t\t\t\t\t});\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\treturn value.name;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '—';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn '—';\n\t\t\t}}\n\t\t>\n\t\t\t{items.map((item: any) => (\n\t\t\t\t<MaterialUI.MenuItem style={{color: '#272E4C', fontSize: '0.875rem'}} key={item.value} value={item.value}>\n\t\t\t\t\t{item.name}\n\t\t\t\t</MaterialUI.MenuItem>\n\t\t\t))}\n\t\t</MaterialUI.Select>\n\t);\n};\n\nconst ticket_options = [\n  {\n    name: 'Assigned To Me',\n    value: 'assigned_to_me',\n  },\n  {\n    name: 'Created Tickets',\n    value: 'created_tickets',\n  },\n];\n\nconst urgency_list = {\n  'high': 1, \n  'medium': 2, \n  'low': 3,\n};\n\n\n// const sample_ticket_list: any[] = [\n//   {\n//     'id': '5e1d65ce203b3b7389df7460',\n//     'name': 'Aleece Lamport',\n//     'date_admitted': '2020-01-21T16:55:34.078Z',\n//     'hospital': 'Makati Medical Center',\n//     'no_of_days': 1,\n//     'status': 'open',\n//     'urgency': 'high',\n//   },\n//   {\n//     'id': '5e1d65ce203b3b7389df7461',\n//     'name': 'Aliss Lamports',\n//     'date_admitted': '2020-01-21T16:55:34.078Z',\n//     'hospital': 'Makati Medical Center',\n//     'no_of_days': 4,\n//     'status': 'open',\n//     'urgency': 'medium',\n//   },\n//   {\n//     'id': '5e1d65ce203b3b7389df7460',\n//     'name': 'Aleece Lamport',\n//     'date_admitted': '2020-01-21T16:55:34.078Z',\n//     'hospital': 'Makati Medical Center',\n//     'no_of_days': 5,\n//     'status': 'open',\n//     'urgency': 'low',\n//   },\n//   {\n//     'id': '5e1d65ce203b3b7389df7460',\n//     'name': 'Aleece Lamport',\n//     'date_admitted': '2020-01-21T16:55:34.078Z',\n//     'hospital': 'Makati Medical Center',\n//     'no_of_days': 3,\n//     'status': 'open',\n//     'urgency': '',\n//   },\n//   {\n//     'id': '5e1d65ce203b3b7389df7460',\n//     'name': 'Aleece Lamport',\n//     'date_admitted': '2020-01-21T16:55:34.078Z',\n//     'hospital': 'Makati Medical Center',\n//     'no_of_days': 10,\n//     'status': 'open',\n//     'urgency': '',\n//   },\n// ];\n\n// const sample_confined_list: any[] = [\n//   {\n//     'id': '5e1d65ce203b3b7389df7461',\n//     'name': 'Aliss Lamports',\n//     'description': 'Terminated',\n//     'status': 'terminated',\n//   },\n//   {\n//     'id': '5e1d65ce203b3b7389df7460',\n//     'name': 'Aleece Lamport',\n//     'description': 'New Benefits',\n//     'status': 'active',\n//   },\n//   {\n//     'id': '5e1d65ce203b3b7389df7460',\n//     'name': 'Aleece Lamport',\n//     'description': 'New Benefits',\n//     'status': 'active',\n//   },\n// ];\n\nexport class Dashboard extends React.Component<IDashboard.IProps, IDashboard.IState> {\n\n  constructor(props: IDashboard.IProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      openTicketList: [],\n      confinedPatientChangesList: [],\n      ticket_type: ticket_options[0].value,\n    };\n  }\n\n  reset = () => {\n    this.setState({\n      loading: false,\n      openTicketList: [],\n      confinedPatientChangesList: [],\n      ticket_type: ticket_options[0].value,\n    });\n  };\n\n  handleTicketTypeSelect = (\n    event: React.ChangeEvent<{ name?: string | undefined; value: any }>,\n  ) => {\n    this.setState({\n      ticket_type: event.target.value,\n    });\n  };\n\n  componentDidMount() {\n    localStorage.setItem('sidebar', 'dashboard');\n\n    const taskTrayPayload: any = {\n      member: []\n    };\n\n    /* 1. Load Open, Inpatient tickets */\n    const ticketFilter = {\n      where: {\n        status: 'Open',\n        'ticket_category.specific_type': 'Inpatient',\n        client_id: '' // Meaning, only for members\n      }\n    };\n\n    API.get(`customer-care/tickets?filter=${JSON.stringify(ticketFilter)}`,\n      (response) => {\n        console.log(response);\n        response.map((ticket, index) => {\n          processmakerParticipated(ticket, (index + 1) === response.length);\n          this.setState({openTicketList: this.state.openTicketList});\n        });\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n\n    const processmakerParticipated = (ticket: any, isLastTicket: boolean) => {\n      Processmaker.get('cases/participated',\n        (cases) => {\n          const matchedCase = cases.filter(caseItem => caseItem.app_uid === ticket.pmaker_case_uid)[0];\n          if (matchedCase) {\n            const dateAdmitted = new Date(ticket.ticket_category.confinement_details.date_admitted);\n            \n            this.state.openTicketList.unshift({\n              id: ticket._id,\n              ticket_no: GlobalFunction.generateTicketNumber(\n                ticket.ticket_category.ticket_type,\n                ticket.ticket_category.specific_type,\n                matchedCase.app_number\n              ),\n              case_uid: ticket.pmaker_case_uid,\n              name: ticket.member_data ? \n                GlobalFunction.toNameFormat(\n                  ticket.member_data.last_name,\n                  ticket.member_data.middle_name,\n                  ticket.member_data.first_name\n                ) : '---',\n              date_admitted: dateAdmitted,\n              hospital: ticket.ticket_category.confinement_details.provider.split(' - ')[1],\n              no_of_days: calculateLengthOfStay(dateAdmitted),\n              status: ticket.status.toLocaleLowerCase(),\n              urgency: ticket.ticket_category.urgency.toLocaleLowerCase()\n            });\n\n            if (ticket.member_data._id) { // cause old tickets are ruining everything!\n              taskTrayPayload.member.push({\n                member_id: ticket.member_data._id,\n                date_admitted: dateAdmitted // Restore when done testing\n                // date_admitted: new Date(dateAdmitted.getTime() - (1000*60*60*24*1000)) // 1000 days ago (use only for testing)\n              });\n            }\n\n            this.setState({openTicketList: this.state.openTicketList});\n\n            if (isLastTicket) {\n              loadTaskTray();\n            }\n          }\n        },\n        (error) => {\n            console.log(error);\n        }\n      );\n    }\n\n    const calculateLengthOfStay = (dateAdmitted: Date) => {\n      const now = new Date();\n      const dayTimeCount = (1000 * 60 * 60 * 24)\n      return Math.floor((now.getTime() - dateAdmitted.getTime()) / dayTimeCount);\n    }\n\n    /* 2. Load Task Tray based on members on loaded Open Inpatient tickets */\n    const loadTaskTray = () => {\n      API.post('customer-care/task-tray', JSON.stringify(taskTrayPayload),\n      (response) => {\n        console.log(response);\n        response.map(member => {\n          member.changes.map(change => {\n            this.state.confinedPatientChangesList.push({\n              id: change._id,\n              name: member.member_name,\n              description: \n                GlobalFunction.capitalizeEachWord(\n                  change.description.includes('member') &&\n                  change.description.includes('status') ?\n                  change.field_value : \n                  change.description\n                ),\n              status: change.field_value.toLowerCase(),\n              field_value: change.field_value,\n            });\n          });\n          // this.state.confinedPatientChangesList.push({\n          //   id: '99999999999999999*',\n          //   name: 'Sample Name*',\n          //   description: 'This is description.*',\n          //   status: 'terminated',\n          //   field_value: 'Field val*',\n          // });\n        });\n        this.setState({confinedPatientChangesList: this.state.confinedPatientChangesList});\n      },\n      (error) => {\n        console.log(error);\n      });\n    }\n\n    // this.setState({confinedPatientChangesList: sample_confined_list});\n  }\n\n  public render(): JSX.Element {\n    const {\n      loading,\n      openTicketList,\n      confinedPatientChangesList,\n    } = this.state;\n\n    return (\n      <div className={clsx('Dashboard')}>\n        {loading ? <Loader /> : null}\n        <Grid\n          container\n          spacing={2}\n          justify=\"space-between\"\n          alignItems=\"flex-start\" >\n          <Grid item xs={12}>\n            <Grid container justify=\"flex-start\" alignItems=\"flex-start\">\n              <Grid item xs={12}>\n                <Typography className={clsx('title')}>Dashboard</Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} md={12}>\n            <Grid\n              container\n              justify=\"space-between\"\n              spacing={4}\n              alignItems=\"flex-start\"\n            >\n              <Grid item xs={12} md={8}>\n                <Typography className={clsx('sub-title')}>\n                  Your Ticket List\n                </Typography>\n                <Paper className={clsx('content')}>\n                  <Box\n                    className={clsx('card-header')}\n                    display=\"flex\"\n                    flexDirection=\"row\"\n                    justifyContent=\"space-between\"\n                  >\n                    <Box>\n                      <Typography\n                        className={clsx('dashboard-count')}\n                        style={{ color: '#3AB77D' }}>\n                        { openTicketList.length }\n                      </Typography>\n                      <Typography\n                        className={clsx('dashboard-count-description')} >\n                        Open and Pending Tickets\n                      </Typography>\n                    </Box>\n                    <Box>\n                      <Select items={ticket_options} value={this.state.ticket_type} onChange={this.handleTicketTypeSelect} />\n                    </Box>\n                  </Box>\n                  <Box className={clsx('card-content')}>\n                    <Table size=\"small\" className={clsx('dashboard-table')}>\n                      <TableHead>\n                        <TableRow>\n                          <TableCell\n                            className={clsx('dashboard-table-header-cell')}\n                          >\n                            Member Name\n                          </TableCell>\n                          <TableCell\n                            className={clsx('dashboard-table-header-cell')}\n                          >\n                            Date Admitted\n                          </TableCell>\n                          <TableCell\n                            className={clsx('dashboard-table-header-cell')}\n                          >\n                            Hospital\n                          </TableCell>\n                          <TableCell\n                            className={clsx('dashboard-table-header-cell')}\n                          >\n                            Length of Stay\n                          </TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {openTicketList.map((row, index) => {\n                          return (\n                            <TableRow\n                              style={{ cursor: 'pointer' }}\n                              key={index}\n                              className={clsx(\n                                index % 2 === 0\n                                  ? row.urgency === 'high'\n                                    ? 'dashboard-table-hg-even-row'\n                                    : 'dashboard-table-even-row'\n                                  : row.urgency === 'high'\n                                  ? 'dashboard-table-hg-odd-row'\n                                  : 'dashboard-table-odd-row',\n                              )}\n                              onClick={() => {\n                                window.location.replace(`#/customer-care/update-ticket/${row.case_uid}/${row.ticket_no}/${row.id}`);\n                              }}\n                            >\n                              <TableCell\n                                className={clsx(\n                                  'dashboard-table-data-cell-sm',\n                                )}\n                                component=\"th\"\n                                scope=\"row\"\n                              >\n                                <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n                                  <Typography\n                                    style={{marginRight: 8}}\n                                    className={clsx('urgency-indicator', `urgency-${urgency_list[row.urgency]}`)}\n                                    align=\"center\" >\n                                    {urgency_list[row.urgency]}\n                                  </Typography>\n                                  <FontAwesomeIcon \n                                    style={{\n                                      marginRight: 8\n                                    }} \n                                    className={clsx('status-circle', `status-circle-${row.status ? row.status.toLowerCase() : 'default'}`)}\n                                    title={row.status}\n                                    icon={faCircle} />\n                                  <Link className={clsx('dashboard-table-data-cell-link')} to={\"#\"}>\n                                    {row.name}\n                                  </Link>\n                                </Box>\n                              </TableCell>\n                              <TableCell\n                                className={clsx(\n                                  'dashboard-table-data-cell',\n                                )}\n                              >\n                                {moment(row.date_admitted).format('MMM D, YYYY')}\n                              </TableCell>\n                              <TableCell\n                                className={clsx(\n                                  'dashboard-table-data-cell-sm',\n                                )}\n                              >\n                                {row.hospital}\n                              </TableCell>\n                              <TableCell\n                                className={clsx(\n                                  'dashboard-table-data-cell-sm',\n                                )}\n                              >\n                                {row.no_of_days}\n                              </TableCell>\n                            </TableRow>\n                          );\n                        })}\n                      </TableBody>\n                    </Table>\n                  </Box>\n                  {/*open_tickets.length > 0 ?\n                    <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n                      <Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View All</Link>\n                    </Box>: null*/}\n                </Paper>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Typography className={clsx('sub-title')}>\n                  Your Task Tray\n                </Typography>\n                <Paper className={clsx('content')}>\n                  <Box className={clsx('card-header')}>\n                    <Typography\n                      className={clsx('dashboard-count')}\n                      style={{ color: '#FD5451' }}\n                    >\n                      {confinedPatientChangesList.length}\n                    </Typography>\n                    <Typography\n                      className={clsx('dashboard-count-description')}\n                    >\n                      Changes in Status and Benefits<br />of Confined Patients\n                    </Typography>\n                  </Box>\n                  <Box\n                    className={clsx('card-content')}\n                    alignItems=\"flex-start\" >\n                    <Table size=\"small\" className={clsx('dashboard-table')}>\n                      <TableHead>\n                        <TableRow>\n                          <TableCell\n                            className={clsx('dashboard-table-header-cell')}\n                          >\n                            Name\n                          </TableCell>\n                          <TableCell\n                            className={clsx('dashboard-table-header-cell')}\n                          >\n                            Changes\n                          </TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {confinedPatientChangesList.map((row, index) => {\n                          return (\n                            <TableRow\n                              style={{ cursor: 'pointer' }}\n                              key={index}\n                              className={clsx(\n                                index % 2 === 0\n                                  ? 'dashboard-table-even-row'\n                                  : 'dashboard-table-odd-row',\n                              )}\n                            >\n                              <TableCell\n                                className={clsx(\n                                  'dashboard-table-data-cell-sm',\n                                )}\n                                component=\"th\"\n                                scope=\"row\"\n                              >\n                                <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n                                  <FontAwesomeIcon style={{visibility: (row.status === 'terminated' ? 'visible' : 'hidden'), color: '#FD5451', marginRight: '4px' }} icon={faExclamationCircle} />\n                                  <Link className={clsx('dashboard-table-data-cell-link')} to={\"#\"}>\n                                    {row.name}\n                                  </Link>\n                                </Box>\n                              </TableCell>\n                              <TableCell\n                                className={clsx(\n                                  'dashboard-table-data-cell-sm',\n                                )}\n                              >\n                                {row.description}\n                              </TableCell>\n                            </TableRow>\n                          );\n                        })}\n                      </TableBody>\n                    </Table>\n                  </Box>\n                  {/*true ?\n                        <Box className={clsx('card-footer')} display=\"flex\" justifyContent=\"flex-end\">\n                          <Link className={clsx('dashboard-view-more-link')} to={\"#\"}>View List</Link>\n                        </Box> : null*/}\n                </Paper>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => state.dashboard;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  Map: bindActionCreators(DashboardActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };","/**\n *\n * App\n *\n * This component is the skeleton around the actual pages, and should only\n * contain code that should be seen on all pages. (e.g. navigation bar)\n */\n\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { renderRoutes } from 'react-router-config';\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport { Containers, Components } from '@hims/core';\nimport { createBrowserHistory } from 'history';\n// import { HomePage } from 'Pages/Home/HomePage';\n\n\nimport { CreateTicketPage } from 'Pages/CustomerCarePage/CreateTicketPage/CreateTicketPage';\nimport { UpdateTicketPage } from 'Pages/CustomerCarePage/UpdateTicketPage/UpdateTicketPage';\nimport HomePage from 'Pages/Home/Loadable';\nimport { ResolveTicketPage } from 'Pages/CustomerCarePage/ResolveTicketPage/ResolveTicketPage';\nimport TicketListPage from 'Pages/TicketList/Loadable';\nimport { AdvanceSearch } from 'Pages/CustomerCarePage/AdvanceSearch/AdvanceSearch';\n// import LoginPage from 'Pages/Login/LoginPage';\nimport { Dashboard } from 'Pages/Dashboard/Dashboard';\n\nconst history = createBrowserHistory();\nconst NotFoundPage = Containers.NotFoundPage;\n// import ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nlet routes = [\n  {\n    path: '/home',\n    component: HomePage,\n  },\n  {\n    path: '/dashboard',\n    component: Dashboard,\n  },\n  {\n    path: '/',\n    component: Dashboard,\n    exact: true\n  },\n  {\n    path: '/tickets',\n    component: TicketListPage,\n  },\n  // {\n  //   path: \"/login\",\n  //   component: LoginPage\n  // },\n  {\n    path: \"/create-ticket\",\n    component: CreateTicketPage\n  },\n  {\n    path: \"/search\",\n    component: AdvanceSearch\n  },\n  {\n    path: \"/update-ticket/:caseId/:appNo/:ticketId\",\n    component: UpdateTicketPage\n  },\n  {\n    path: \"/resolve-ticket/:caseId/:appNo/:ticketId\",\n    component: ResolveTicketPage\n  }\n];\nconst prefix = '/customer-care';\nroutes.map(route => (route.path = `${prefix}${route.path}`));\n\nexport default function App() {\n\n  return (\n    <div>\n      \n      <Helmet\n        titleTemplate=\"NEO - %s\"\n        defaultTitle=\"NEO\"\n      >\n        <meta name=\"description\" content=\"NEO application\" />\n      </Helmet>\n      \n      <div className='side-bar'>\n        <Components.UI.PageLayout history={history} page={\"customer care\"} />\n      </div>\n      <div className='main'>\n        <Switch>\n          {renderRoutes(routes)}\n          <Route path=\"\" component={NotFoundPage} />\n        </Switch>\n      </div>\n      \n        \n      {/* </Components.UI.PageLayout> */}\n    </div>\n  );\n}","/**\n * i18n.js\n *\n * This will setup the i18n language files and locale data for the app.\n *\n *   IMPORTANT: This file is used by the internal build\n *   script `extract-intl`, and must use CommonJS module syntax\n *   You CANNOT use import/export in this file.\n */\n\n// prettier-ignore\nimport { Containers } from '@hims/core';\nconst enTranslationMessages = require('Messages/en.json');\n\nexport const translationMessages = {\n  en: Containers.Message.formatTranslationMessages('en', enTranslationMessages),\n};\n","/**\n * AppConstants\n * Each action has a corresponding type, which the reducer knows and picks up on.\n * To avoid weird typos between the reducer and the actions, we save them as\n * constants here. We prefix them with 'yourproject/YourComponent' so we avoid\n * reducers accidentally picking up actions they shouldn't.\n *\n */\n\nenum ActionTypes {\n    LOAD_REPOS = 'boilerplate/App/LOAD_REPOS',\n    LOAD_REPOS_SUCCESS = 'boilerplate/App/LOAD_REPOS_SUCCESS',\n    LOAD_REPOS_ERROR = 'boilerplate/App/LOAD_REPOS_ERROR',\n}\n  \nexport {};\nexport default ActionTypes;\n  ","import { ContainerState, ContainerActions } from './types';\nimport ActionTypes from './constants';\n\n// The initial state of the App\nexport const initialState: ContainerState = {\n  loading: false,\n  error: false,\n  currentUser: '',\n  userData: {\n    repositories: [],\n  },\n};\n\n// Take this container's state (as a slice of root state), this container's actions and return new state\nfunction appReducer(\n  state: ContainerState = initialState,\n  action: ContainerActions,\n): ContainerState {\n  switch (action.type) {\n    case ActionTypes.LOAD_REPOS:\n      return {\n        currentUser: state.currentUser,\n        loading: true,\n        error: false,\n        userData: {\n          repositories: [],\n        },\n      };\n    case ActionTypes.LOAD_REPOS_SUCCESS:\n      return {\n        currentUser: action.payload.username,\n        loading: false,\n        error: state.error,\n        userData: {\n          repositories: action.payload.repos,\n        },\n      };\n    case ActionTypes.LOAD_REPOS_ERROR:\n      const { error, loading, ...rest } = state;\n      return {\n        error: action.payload,\n        loading: false,\n        ...rest,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default appReducer;\n","/**\n * app.ts\n *\n * This is the entry file for the application, only setup and boilerplate\n * code.\n */\n\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\n// Import all the third party stuff\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport FontFaceObserver from 'fontfaceobserver';\nimport 'sanitize.css/sanitize.css';\n\n\n\n// Import root app\nimport App from 'Containers/App';\n\n// Import Language Provider\n// import MessageProvider from 'Containers/LanguageProvider';\n\n// Load the favicon and the .htaccess file\n// import '!file-loader?name=[name].[ext]!./images/favicon.ico';\n// import 'file-loader?name=.htaccess!./.htaccess';\n\nimport { Components, Containers, Utils } from '@hims/core';\n// import { Containers, Utils } from '@hims/core';\nimport { translationMessages } from 'i18n';\nimport createReducer from './reducers';\n\nconst { configureStore, history } = Utils;\nconst MessageProvider = Containers.Message.Provider;\nconst { ServiceWorker } = Components.Services;\n\n// Import i18n messages\n\n// Observe loading of Open Sans (to remove open sans, remove the <link> tag in\n// the index.html file and this observer)\nconst openSansObserver = new FontFaceObserver('Open Sans', {});\n\n// Create redux store with history\nconst initialState = {};\nconst store = configureStore(createReducer, initialState, history);\nconst MOUNT_NODE = document.getElementById('app') as HTMLElement;\n\nconst render = (messages: any, Component = App) => {\n  const Document: React.ComponentType<Containers.Document.IProps<any, any>> = Containers.Document.Component;\n  ReactDOM.render(\n    // tslint:disable-next-line:jsx-wrap-multiline\n      <Document Component={Component} store={store} componentProps={{}}>\n        <MessageProvider messages={messages}>\n          <Component />\n        </MessageProvider>\n      </Document>\n    ,\n    MOUNT_NODE,\n  );\n};\n\ndeclare const module: any;\n\nexport default ()=>{\n  // When Open Sans is loaded, add a font-family using Open Sans to the body\n  openSansObserver.load(undefined, 60000).then(() => {\n    document.body.classList.add('fontLoaded');\n  });\n\n  if (module.hot) {\n    module.hot.accept(['./i18n', './Containers/App'], () => {\n      ReactDOM.unmountComponentAtNode(MOUNT_NODE);\n      // tslint:disable-next-line:max-line-length\n      const App = require('./Containers/App').default; // https://github.com/webpack/webpack-dev-server/issues/100\n      render(translationMessages, App);\n    });\n    // Make reducers hot reloadable, see http://mxs.is/googmo\n    /* istanbul ignore next */\n    module['hot'].accept('./reducers', () => {\n      store.replaceReducer(createReducer(store.injectedReducers));\n    });\n  }\n  // Chunked polyfill for browsers without Intl support\n  if (!(window as any).Intl) {\n    new Promise(resolve => {\n      resolve(import('intl'));\n    })\n      .then(() =>\n        Promise.all([\n          import('intl/locale-data/jsonp/en.js'),\n          import('intl/locale-data/jsonp/de.js'),\n        ]),\n      )\n      .then(() => render(translationMessages))\n      .catch(err => {\n        throw err;\n      });\n  } else {\n    render(translationMessages);\n  }\n\n  // Install ServiceWorker and AppCache in the end since\n  // it's not most important operation and if main code fails,\n  // we do not want it installed\n  // if (process.env.NODE_ENV === 'production') {\n  //   require('offline-plugin/runtime').install();\n  // }\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  ServiceWorker.register();\n}\n","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport { Containers, Utils } from '@hims/core';\nimport globalReducer from 'Containers/App/reducer';\n\n/**\n * Merges the main reducer with the router state and dynamically injected reducers\n */\nexport default function createReducer(injectedReducers = {}) {\n  const { history } = Utils;\n  const rootReducer = combineReducers({\n    global: globalReducer,\n    language: Containers.Message.messageProviderReducer,\n    router: connectRouter(history),\n    ...injectedReducers,\n  });\n\n  return rootReducer;\n}\n"],"sourceRoot":""}