{"version":3,"sources":["Components/UI/LoadingIndicator/index.tsx","Pages/TicketList/ActionConsts.ts","Pages/TicketList/TicketListActions.ts","Pages/TicketList/TicketListTable.tsx","Pages/TicketList/TicketListTableData.ts","Pages/TicketList/API.tsx","Pages/TicketList/Processmaker.tsx","Pages/TicketList/TicketListPage.tsx"],"names":["useStyles","makeStyles","root","position","width","height","zIndex","right","bottom","top","left","textAlign","backgroundColor","container","outline","alignItems","justifyContent","display","flexDirection","Loader","classes","className","CircularProgress","size","defaultProps","ActionConsts","ResetReducer","SetReducer","TicketListActions","payload","type","priorityRowStyles","high0","high1","medium0","medium1","low0","low1","TableRow","row","restProps","rowId","tableRow","Row","onClick","link","specificType","app_uid","ticket_no","console","log","window","location","href","style","cursor","urgency","toLowerCase","CustomHeaderCell","Cell","TableFilterCell","filter","onFilter","filteringEnabled","padding","value","labelWidth","margin","onChange","e","target","placeholder","TableSearchPanel","onValueChange","fullWidth","startAdornment","icon","faSearch","DefaultTableToolbar","children","disableGutters","SortingIcon","direction","marginLeft","color","faSortUp","faSortDown","TableSortLabel","onSort","hideSortIcon","fontSize","fontWeight","faSort","EmptyCellFormatter","faExclamationCircle","EmptyCellDataTypeProvider","props","formatterComponent","UrgencyFormatter","urgency_list","title","placement","clsx","align","UrgencyCellDataTypeProvider","TextFormatter","TextCellDataTypeProvider","DateFormatter","text","moment","format","error","DateCellDataTypeProvider","BooleanFormatter","DetailLinkFormatter","transaction_no","BooleanCellDataTypeProvider","DetailLinkCellDataTypeProvider","TableComponent","rows","columns","formattedColumns","fixedColumns","disablePaging","disableSearch","disableSort","disableFilter","toolbarType","columnExtensions","columnBands","id","React","currentPage","setCurrentPage","pageSize","setPageSize","pageSizes","dataTypeProviders","undefined","Object","keys","length","push","for","required_columns","urgency_columns","text_columns","date_columns","boolean_columns","detaillink_columns","toolbar","onCurrentPageChange","onPageSizeChange","defaultSorting","columnName","defaultFilters","rowComponent","cellComponent","showSortingControls","sortLabelComponent","leftColumns","rootComponent","inputComponent","singleSelect","columnNames","name","tableData","map","column","wordWrapEnabled","getColumnExtensions","cellProperties","types","specTypes","statuses","channels","is_vip","index","status","faker","random","arrayElement","capitalize","alphaNumeric","dueDate","date","future","member","findName","company","companyName","ticketOwner","assignedTo","createdDate","lastUpdate","channel","generateRows","backendUrl","process","API","url","success","fail","fetch","method","headers","localStorage","getItem","then","response","json","data","catch","body","JSON","stringify","Processmaker","token","popoverStyles","theme","popoverCheckbox","spacing","marginRight","SelectColumnsPopover","selectedColumns","setSelectedColumns","popupState","usePopupState","variant","popupId","Button","bindTrigger","Typography","faThList","Popover","bindPopover","anchorOrigin","vertical","horizontal","transformOrigin","FormGroup","idx","columnObj","checked","findIndex","FormControlLabel","key","control","Checkbox","event","tmpSelectedColumns","remove","label","TicketListPage","onLogout","replace","reset","setState","loading","query","ticketStats","ticketList","getTicketStats","tickets","all","open","closed","resolved","pending","ticket","lowerCase","filterTickets","ins","state","trim","item","itemapp_uid","itemStatus","indexOf","loadTicketList","get","promises","app_index","del_index","Promise","resolve","APPLICATION","app_uid_map","forEach","t","ticket_category","_id","ticket_type","specific_type","caller_name","corporate_client","assign_to","Date","date_created","date_updated","received_via","app_uid_item","stat","cols","getVisibleColumns","generateReport","onSearchTextChange","preventDefault","onStatusFilterClick","newStatus","componentWillMount","componentDidMount","this","Fab","Grid","justify","xs","sm","md","TextField","inputProps","InputProps","alignContent","faDownload","Paper","mapStateToProps","mapDispatchToProps","dispatch","Map","bindActionCreators"],"mappings":"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","file":"static/js/4.0a7fb60e.chunk.js","sourcesContent":["import * as React from 'react';\nimport { CircularProgress } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface LoaderProps {\n}\n\nconst useStyles = makeStyles({\n\troot: {\n        position: 'fixed',\n        width: '100%',\n        height: '100%',\n        zIndex: 9999,\n        right: '0px',\n        bottom: '0px',\n        top: '0px',\n        left: '0px',\n        textAlign: \"center\",\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    },\n    container:{\n        height: '100%',\n        outline: 0,\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        flexDirection: 'column'\n    }\n});\n\nexport const Loader: React.FC<LoaderProps> = (): JSX.Element => {\n    // const buttonclasses = ButtonStyle();\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <div className={classes.container}>\n                <CircularProgress size={150}/>\n            </div>\n        </div>\n    )\n}\n\nLoader.defaultProps = {}","export const ActionConsts = {\n  TicketList: {\n    ResetReducer: 'TicketList_ResetReducer',\n    SetReducer: 'TicketList_SetReducer',\n  },\n};\n","//#region Global Imports\n// import { Dispatch } from 'redux';\n//#endregion Global Imports\n\n//#region Local Imports\nimport { ActionConsts } from './ActionConsts';\n// import { PlanetaryService } from 'Components/Services';\n//#endregion Local Imports\n\n//#region Interface Imports\n//#endregion Interface Imports\n\nexport const TicketListActions = {\n  Map: (payload: {}) => ({\n    payload,\n    type: ActionConsts.TicketList.SetReducer,\n  }),\n\n  Reset: () => ({\n    type: ActionConsts.TicketList.ResetReducer,\n  }),\n};\n","//#region Global Imports\nimport * as React from 'react';\nimport {\n  Grid,\n  Table,\n  TableHeaderRow,\n  TableFilterRow,\n  Toolbar,\n  SearchPanel,\n  PagingPanel,\n  TableBandHeader,\n  TableFixedColumns,\n} from '@devexpress/dx-react-grid-material-ui';\nimport {\n  PagingState,\n  IntegratedPaging,\n  FilteringState,\n  IntegratedFiltering,\n  SortingState,\n  IntegratedSorting,\n  SearchState,\n  DataTypeProvider,\n} from '@devexpress/dx-react-grid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSearch,\n  faSort,\n  faSortUp,\n  faSortDown,\n  faExclamationCircle,\n} from '@fortawesome/free-solid-svg-icons';\nimport * as MaterialUI from '@material-ui/core';\nimport {} from 'lodash';\nimport moment from 'moment';\nimport clsx from 'clsx';\n//#endregion Global Imports\n\nimport './tickettable.scss';\n\nconst priorityRowStyles = {\n  high0: {\n    backgroundColor: '#FFF1F1',\n  },\n  high1: {\n    backgroundColor: '#F7EAEC',\n  },\n  medium0: {\n    backgroundColor: '#FFFFFF',\n  },\n  medium1: {\n    backgroundColor: '#FAFCFE',\n  },\n  low0: {\n    backgroundColor: '#FFFFFF',\n  },\n  low1: {\n    backgroundColor: '#FAFCFE',\n  },\n};\n\nconst TableRow = ({ row, ...restProps }: any) => {\n  let rowId = restProps.tableRow.rowId;\n  return (\n    <Table.Row\n      {...restProps}\n      // eslint-disable-next-line no-alert\n      onClick={() => {\n        let link = '#';\n        if(row.specificType == 'Inpatient'){\n          link = '#/customer-care/update-ticket/' + row.app_uid + '/' + row.ticket_no;\n        }\n        else if(row.specificType == 'Outpatient Procedure'){\n          link = '#/customer-care/resolve-ticket/' + row.app_uid + '/' + row.ticket_no;\n        }\n        else;\n        console.log(\"link >>>>\", link);\n        window.location.href = link;\n      }}\n      style={{\n        cursor: 'pointer',\n        ...priorityRowStyles[row.urgency.toLowerCase()+(rowId%2)],\n      }}\n    />\n  );\n} \n\nconst CustomHeaderCell = ({ ...restProps }: any) => {\n  return (\n    <TableHeaderRow.Cell\n      {...restProps}\n      style={{\n        backgroundColor: '#DDDFE3',\n      }}\n    />\n  );\n} \n\n\nconst TableFilterCell = ({ filter, onFilter, filteringEnabled, classes, ...restProps }: any) => {\n\tif(filteringEnabled) {\n\t\treturn(\n      <TableHeaderRow.Cell\n        {...restProps}\n        style={{ padding: '0px 10px 8px 10px', backgroundColor: '#DDDFE3' }} \n        classes={classes} >\n\t\t\t\t<MaterialUI.OutlinedInput\n\t\t\t\t\tclasses={classes}\n\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\tvalue={filter ? filter.value : ''}\n          labelWidth={0}\n          margin=\"dense\"\n\t\t\t\t\tonChange={e => onFilter(e.target.value ? { value: e.target.value } : null)}\n\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t/>\n\t\t\t</TableHeaderRow.Cell>\n\t\t)\n\t}else{\n\t\t// return null;\n\t\treturn(\n\t\t\t<MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n\t\t\t</MaterialUI.TableCell>\n\t\t)\n\t}\n}\n\nconst TableSearchPanel = ({ value, onValueChange }: any) => {\n  return (\n    <MaterialUI.OutlinedInput\n      value={value ? value : ''}\n      labelWidth={0}\n      onChange={e => onValueChange(e.target.value ? e.target.value : null)}\n      placeholder=\"Search a benefit or benefit category\"\n      fullWidth\n      startAdornment={\n        <MaterialUI.InputAdornment position=\"start\">\n          <FontAwesomeIcon icon={faSearch} />\n        </MaterialUI.InputAdornment>\n      }\n    />\n  );\n};\n\nconst DefaultTableToolbar = ({ children }: any) => {\n  return <MaterialUI.Toolbar disableGutters={true} children={children} />;\n};\n\nconst SortingIcon = ({ direction }: any) =>\n  direction === 'asc' ? (\n    <FontAwesomeIcon style={{ marginLeft: '10px', color: 'rgba(75,77,92,0.5)' }} icon={faSortUp} />\n  ) : (\n    <FontAwesomeIcon style={{ marginLeft: '10px', color: 'rgba(75,77,92,0.5)' }} icon={faSortDown} />\n  );\n\nconst TableSortLabel = ({ onSort, children, direction }: any) => {\n  return (\n    <MaterialUI.TableSortLabel hideSortIcon={true} onClick={onSort} style={{fontSize: 12, color: '#272E4C', fontWeight: 600}}>\n      {children}\n      {direction ? (\n        <SortingIcon direction={direction} />\n      ) : (\n        <FontAwesomeIcon style={{ marginLeft: '10px', color: 'rgba(75,77,92,0.5)' }} icon={faSort} />\n      )}\n    </MaterialUI.TableSortLabel>\n  );\n};\n\nconst EmptyCellFormatter = ({ value }: any) => {\n  if (value === '') {\n    return (\n      <FontAwesomeIcon\n        style={{ color: '#FD5451', fontSize: '16px' }}\n        icon={faExclamationCircle}\n      />\n    );\n  } else {\n    return value;\n  }\n};\n\nconst EmptyCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={EmptyCellFormatter} {...props} />\n);\n\nconst UrgencyFormatter = ({ value }: any) => {\n  const urgency_list = {'High': 1, 'Medium': 2, 'Low': 3};\n  return (\n    <MaterialUI.Tooltip title={value} placement=\"bottom\">\n      <MaterialUI.Typography\n        className={clsx('urgency-indicator', `urgency-${urgency_list[value]}`)}\n        align=\"center\" >\n        {urgency_list[value]}\n      </MaterialUI.Typography>\n    </MaterialUI.Tooltip>\n    \n  );\n};\n\nconst UrgencyCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={UrgencyFormatter} {...props} />\n);\n\nconst TextFormatter = ({ value }: any) => {\n  return <MaterialUI.Typography align=\"left\" style={{fontSize: 12, color: '#272E4C', fontWeight: 600}}>{value}</MaterialUI.Typography>;\n};\n\nconst TextCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={TextFormatter} {...props} />\n);\n\nconst DateFormatter = ({ value }: any) => {\n  let text = value;\n  if(text){\n    try {\n      text = moment(value).format('MMM DD, YYYY');\n    } catch (error) {\n      text = value;\n    }\n  }\n  else{\n    text = '';\n  }\n\n  return <MaterialUI.Typography align=\"left\" style={{fontSize: 12, color: '#272E4C', fontWeight: 600}}>{text}</MaterialUI.Typography>;\n};\n\nconst DateCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={DateFormatter} {...props} />\n);\n\nconst BooleanFormatter = ({ value }: any) => {\n  return <MaterialUI.Typography align=\"left\" style={{fontSize: 12, color: '#272E4C', fontWeight: 600}}>{value ? 'Yes' : 'No'}</MaterialUI.Typography>;\n};\n\nconst DetailLinkFormatter = ({ row }: any) => {\n  /*\n  if(row.specificType == 'Inpatient'){\n    return <Link style={{textDecoration: 'none', color: 'inherit'}} to={'/customer-care/update-ticket/' + row.app_uid + '/' + row.ticket_no}>{row.transaction_no}</Link>\n  }\n  else if(row.specificType == 'Outpatient Procedure'){\n    return <Link style={{textDecoration: 'none', color: 'inherit'}} to={'/customer-care/resolve-ticket/' + row.app_uid + '/' + row.ticket_no}>{row.transaction_no}</Link>\n  }\n  else{\n    return <MaterialUI.Typography align=\"left\">{row.transaction_no}</MaterialUI.Typography>;\n  }\n  */\n  return (\n    <MaterialUI.Typography align=\"left\" style={{fontSize: 12, color: '#272E4C', fontWeight: 600}}>{row.transaction_no}</MaterialUI.Typography>\n  );\n};\n\nconst BooleanCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={BooleanFormatter} {...props} />\n);\n\nconst DetailLinkCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={DetailLinkFormatter} {...props} />\n);\n\ninterface TableComponentProps {\n  rows: any[];\n  columns: any[];\n  columnExtensions?: any[];\n  formattedColumns?: any;\n  fixedColumns?: string[];\n  columnBands?: any[] | null;\n  singleSelect?: boolean;\n  disableSearch?: boolean;\n  disablePaging?: boolean;\n  disableFilter?: boolean;\n  disableSort?: boolean;\n  toolbarType?: string | null;\n  id: string;\n}\n\nconst defaultProps: TableComponentProps = {\n  rows: [],\n  columns: [],\n  columnExtensions: [],\n  columnBands: null,\n  formattedColumns: {},\n  fixedColumns: [],\n  singleSelect: false,\n  disableSearch: false,\n  disablePaging: false,\n  disableFilter: false,\n  disableSort: false,\n  toolbarType: null,\n  id: 'table-1',\n};\n\nexport const TableComponent: React.FC<TableComponentProps> = (\n  props: TableComponentProps,\n): JSX.Element => {\n  const {\n    rows,\n    columns,\n    formattedColumns,\n    fixedColumns,\n    disablePaging,\n    disableSearch,\n    disableSort,\n    disableFilter,\n    toolbarType,\n    columnExtensions,\n    columnBands,\n    id,\n  } = props;\n  const [currentPage, setCurrentPage] = React.useState(0);\n  const [pageSize, setPageSize] = React.useState(5);\n  const [pageSizes] = React.useState([5, 10, 15, 0]);\n\n  const dataTypeProviders: any[] = [];\n\n  if (\n    formattedColumns !== undefined &&\n    Object.keys(formattedColumns).length > 0\n  ) {\n    if (formattedColumns['required_columns'] !== undefined) {\n      dataTypeProviders.push(\n        <EmptyCellDataTypeProvider for={formattedColumns.required_columns} />,\n      );\n    }\n    if (formattedColumns['urgency_columns'] !== undefined) {\n      dataTypeProviders.push(\n        <UrgencyCellDataTypeProvider for={formattedColumns.urgency_columns} />,\n      );\n    }\n    if (formattedColumns['text_columns'] !== undefined) {\n      dataTypeProviders.push(\n        <TextCellDataTypeProvider for={formattedColumns.text_columns} />,\n      );\n    }\n    if (formattedColumns['date_columns'] !== undefined) {\n      dataTypeProviders.push(\n        <DateCellDataTypeProvider for={formattedColumns.date_columns} />,\n      );\n    }\n    if (formattedColumns['boolean_columns'] !== undefined) {\n      dataTypeProviders.push(\n        <BooleanCellDataTypeProvider for={formattedColumns.boolean_columns} />,\n      );\n    }\n    if (formattedColumns['detaillink_columns'] !== undefined) {\n      dataTypeProviders.push(\n        <DetailLinkCellDataTypeProvider for={formattedColumns.detaillink_columns} />,\n      );\n    }\n  }\n\n  const toolbar = DefaultTableToolbar;\n\n  return (\n    <div id={id}>\n      <Grid rows={rows} columns={columns}>\n        {dataTypeProviders}\n        {/* Need to initialize paging state before paging panel */}\n        {!disablePaging ? (\n          <PagingState\n            currentPage={currentPage}\n            onCurrentPageChange={setCurrentPage}\n            pageSize={pageSize}\n            onPageSizeChange={setPageSize}\n          />\n        ) : null}\n        {!disablePaging ? <IntegratedPaging /> : null}\n        {!disableSearch ? <SearchState /> : null}\n        {!disableSort ? (\n          <SortingState\n            defaultSorting={[{ columnName: 'issue', direction: 'asc' }]}\n          />\n        ) : null}\n        {!disableSort ? <IntegratedSorting /> : null}\n        {!disableFilter ? <FilteringState defaultFilters={[]} /> : null}\n        {!disableFilter ? <IntegratedFiltering /> : null}\n        <Table columnExtensions={columnExtensions} rowComponent={TableRow} />\n        <TableHeaderRow\n          cellComponent={CustomHeaderCell}\n          showSortingControls={!disableSort}\n          sortLabelComponent={TableSortLabel}\n        />\n        {columnBands ? <TableBandHeader columnBands={columnBands} /> : null}\n        {!disableFilter ? (\n          <TableFilterRow cellComponent={TableFilterCell} />\n        ) : null}\n        {fixedColumns && fixedColumns.length > 0 ? (\n          <TableFixedColumns leftColumns={fixedColumns} />\n        ) : null}\n\n        {!disableSearch || toolbarType ? (\n          <Toolbar rootComponent={toolbar} />\n        ) : null}\n        {!disableSearch ? (\n          <SearchPanel inputComponent={TableSearchPanel} />\n        ) : null}\n        {!disablePaging ? <PagingPanel pageSizes={pageSizes} /> : null}\n      </Grid>\n    </div>\n  );\n};\n\nTableComponent.defaultProps = defaultProps;\n","import faker from 'faker';\nimport { capitalize } from 'lodash';\n\nconst columnNames = [\n  {\n    name: 'urgency',\n    title: 'Urgency',\n  },\n  {\n    name: 'status',\n    title: 'Status',\n  },\n  {\n    name: 'app_uid',\n    title: 'Ticket ID',\n  },\n  {\n    name: 'dueDate',\n    title: 'Due Date',\n  },\n  {\n    name: 'type',\n    title: 'Type',\n  },\n  {\n    name: 'specificType',\n    title: 'Specific Type',\n  },\n  {\n    name: 'member',\n    title: 'Member',\n  },\n  {\n    name: 'company',\n    title: 'Company',\n  },\n  {\n    name: 'ticketOwner',\n    title: 'Ticket Owner',\n  },\n  {\n    name: 'assignedTo',\n    title: 'Assigned To',\n  },\n  {\n    name: 'createdDate',\n    title: 'Created Date',\n  },\n  {\n    name: 'lastUpdate',\n    title: 'Last Update',\n  },\n  {\n    name: 'channel',\n    title: 'Channel',\n  },\n  {\n    name: 'is_vip',\n    title: 'VIP',\n  },\n];\n\nconst getColumnExtensions = () => {\n  const columns: any[] = [];\n\n  columnNames.map(column => {\n    let width = 200;\n\n    switch (column.name) {\n      case 'urgency':\n      case 'status':\n      case 'app_uid':\n        width = 100;\n        break;\n      case 'type':\n      case 'dueDate':\n        width = 120;\n        break;\n      case 'specificType':\n      case 'company':\n        width = 250;\n        break;\n      default:\n        width = 200;\n    }\n\n    columns.push({\n      columnName: column.name,\n      width: width,\n      wordWrapEnabled: true,\n    });\n  });\n\n  return columns;\n};\n\nconst generateRows = () => {\n  const rows: any[] = [];\n  const types = ['Inquiry', 'Availment', 'Request', 'Complaint'];\n  const specTypes = [\n    'Billing Dispute Inquiry',\n    'Outpatient Consult',\n    'X-Ray Procedure Availment',\n    'Service Complaint',\n    'Dental Coverage',\n    'Premium Adjustment',\n  ];\n  const statuses = ['open', 'pending', 'resolved', 'closed'];\n  const channels = ['email', 'fax', 'sms'];\n  const is_vip = [true, false];\n  for (let index = 0; index < 50; index++) {\n    const status = faker.random.arrayElement(statuses);\n    const urgency =\n      status === 'closed' || status === 'resolved'\n        ? 3\n        : faker.random.arrayElement([1, 2]);\n\n    rows.push({\n      urgency: urgency,\n      status: capitalize(status),\n      app_uid: faker.random.alphaNumeric(8),\n      dueDate: faker.date.future(),\n      type: faker.random.arrayElement(types),\n      specificType: faker.random.arrayElement(specTypes),\n      member: faker.name.findName(),\n      company: faker.company.companyName(),\n      ticketOwner: faker.name.findName(),\n      assignedTo: faker.name.findName(),\n      createdDate: faker.date.future(),\n      lastUpdate: faker.date.future(),\n      channel: faker.random.arrayElement(channels),\n      is_vip: faker.random.arrayElement(is_vip),\n    });\n  }\n\n  return rows;\n};\n\nconst tableData: any = {\n  formattedColumns: {\n    required_columns: [],\n    urgency_columns: ['urgency'],\n    text_columns: [\n      'status',\n      'app_uid',\n      'type',\n      'specificType',\n      'member',\n      'company',\n      'ticketOwner',\n      'assignedTo',\n      'channel',\n    ],\n    date_columns: [\n      'dueDate', \n      'createdDate', \n      'lastUpdate',\n    ],\n    boolean_columns: [\n      'is_vip',\n    ],\n    detaillink_columns: [\n      'app_uid',\n    ]\n  },\n  columnExtensions: getColumnExtensions(),\n  fixedColumns: [\n    'urgency',\n    'status',\n    'dueDate',\n    'app_uid',\n    'type',\n    'specificType',\n    'member',\n  ],\n  cellProperties: [],\n  columns: columnNames,\n  rows: generateRows(),\n};\n\nexport { tableData };\n","let backendUrl = process.env.REACT_APP_BASE_URL;\n\nexport class API {\n\n    // //local\n    // static localUrl = 'https://neo-local.seerlabs.com/api';\n    \n    // //stg\n    // static stgUrl = 'http://18.138.94.224:4101/api';\n    \n    static async get(url: string, success: Function, fail: Function) {\n        // const backendUrl = (process.env.NODE_ENV === 'development' ? this.localUrl : this.stgUrl);\n        fetch(backendUrl + url, {\n            method: 'GET',\n            headers: { \n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('pm_token'),\n            }\n        })\n        .then(response => response.json())\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n    \n    static async post(url: string, body: any, success: Function, fail: Function) {\n        // const backendUrl = (process.env.NODE_ENV === 'development' ? this.localUrl : this.stgUrl);\n        fetch(backendUrl + url, {\n            method: 'POST',\n            headers: { \n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('pm_token'),\n            },\n            body: JSON.stringify(body)\n        })\n        .then(response => response.json())\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async put(url: string, body: any, success: Function, fail: Function) {\n        // const backendUrl = (process.env.NODE_ENV === 'development' ? this.localUrl : this.stgUrl);\n        fetch(backendUrl + url, {\n            method: 'PUT',\n            headers: { \n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('pm_token'),\n            },\n            body: JSON.stringify(body)\n        })\n        .then(response => response)\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n}","let backendUrl = process.env.REACT_APP_PMAKER_BASE_URL;\n\nexport class Processmaker {\n\n    // //local\n    // static localUrl = 'localhost:32766/api/1.0/workflow';\n\n    // //stg\n    // static stgUrl = 'http://18.140.39.215/api/1.0/workflow';\n    \n    static async get(url: string, success: Function, fail: Function) {\n        const token = localStorage.getItem('pm_token') || '';\n        // const backendUrl = (process.env.NODE_ENV === 'development' ? this.localUrl : this.stgUrl);\n        fetch(backendUrl + url, {\n            method: 'GET',\n            headers: { \n                'Authorization': 'Bearer ' + token\n            },\n        })\n        .then(response => response.json())\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async post(url:string, body: any, success: Function, fail: Function) {\n        // const backendUrl = (process.env.NODE_ENV === 'development' ? this.localUrl : this.stgUrl);\n        fetch(backendUrl + url, {\n            method: 'POST',\n            headers: { \n                'Content-Type': 'application/json',\n                'Authorization' : 'Bearer ' + localStorage.getItem('pm_token')\n            },\n            body: JSON.stringify(body)\n        })\n        .then(response => response.json())\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async put(url: string, body: any, success: Function, fail: Function) {\n        // const backendUrl = (process.env.NODE_ENV === 'development' ? this.localUrl : this.stgUrl);\n        fetch(backendUrl + url, {\n            method: 'PUT',\n            headers: { \n                'Content-Type': 'application/json',\n                'Authorization' : 'Bearer ' + localStorage.getItem('pm_token')\n            },\n            body: JSON.stringify(body)\n        })\n        .then(response => response)\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n}","//#region Global Imports\nimport * as React from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport {\n  Grid,\n  Typography,\n  Button,\n  TextField,\n  Paper,\n  Popover,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n} from '@material-ui/core';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  usePopupState,\n  bindTrigger,\n  bindPopover,\n} from 'material-ui-popup-state/hooks';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faDownload,\n  faSearch,\n  faThList,\n} from '@fortawesome/free-solid-svg-icons';\nimport { map, findIndex, remove, filter, lowerCase } from 'lodash';\nimport clsx from 'clsx';\nimport { Fab } from '@material-ui/core';\n\n//#endregion Global Imports\n\n//#region Interface Imports\nimport { Store } from 'Components/Stores/IStore';\nimport { Loader } from 'Components/UI/LoadingIndicator';\nimport { ITicketListPage } from './ITicketListPage';\nimport { TicketListActions } from './TicketListActions';\n// import { TableComponent } from './TicketListTableFixed';\nimport { TableComponent } from './TicketListTable';\nimport { tableData } from './TicketListTableData';\nimport { API } from './API';\nimport { Processmaker } from './Processmaker';\n\n// import { Components } from '@hims/core';\n\nimport './index.scss';\n//#endregion Interface Imports\n\nconst popoverStyles = makeStyles((theme: Theme) => ({\n  popoverCheckbox: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n}));\n\ninterface SelectColumnsPopoverProps {\n  columns: any[];\n  selectedColumns: any[];\n  setSelectedColumns: any;\n}\n\nconst SelectColumnsPopover: React.FC<SelectColumnsPopoverProps> = (\n\tprops: SelectColumnsPopoverProps,\n): JSX.Element => {\n  const { \n    columns,\n    selectedColumns,\n    setSelectedColumns,\n  } = props;\n  const classes = popoverStyles(props);\n\n  const onCheckChange = (columnObj: any) => (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    if (event.target.checked) {\n      const tmpSelectedColumns = [...selectedColumns];\n      tmpSelectedColumns.push(columnObj);\n\n      setSelectedColumns(tmpSelectedColumns);\n    } else {\n      const tmpSelectedColumns = [...selectedColumns];\n      remove(tmpSelectedColumns, columnName => {\n        return columnName.name === columnObj.name;\n      });\n\n      setSelectedColumns(tmpSelectedColumns);\n    }\n  };\n\n  const popupState = usePopupState({\n    variant: 'popover',\n    popupId: 'columnListPopover',\n  });\n\n  return(\n    <div>\n      <Button fullWidth {...bindTrigger(popupState)}>\n        <Typography className={clsx('link-button')} align=\"right\">\n          <FontAwesomeIcon\n            icon={faThList}\n            className={clsx('link-button-icon')}\n          />\n          <span className={clsx('link-button-text')}>Display Columns</span>\n        </Typography>\n      </Button>\n      <Popover\n        {...bindPopover(popupState)}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        <FormGroup>\n          {map(columns, (column, idx) => {\n            const checked =\n              findIndex(selectedColumns, { name: column.name }) >= 0;\n\n            return (\n              <FormControlLabel\n                key={idx}\n                control={\n                  <Checkbox\n                    checked={checked}\n                    onChange={onCheckChange(column)}\n                    value={column.name}\n                    color=\"primary\"\n                  />\n                }\n                className={classes.popoverCheckbox}\n                label={column.title}\n              />\n            );\n          })}\n        </FormGroup>\n      </Popover>\n    </div> \n  );\n};\n\nexport class TicketListPage extends React.Component<ITicketListPage.IProps, ITicketListPage.IState> {\n  \n  constructor(props: ITicketListPage.IProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      loading: false,\n      status: '',\n      query: '',\n      columns: [],\n      selectedColumns: [],\n      fixedColumns: [],\n      formattedColumns: {},\n      columnExtensions: [],\n      rows: [],\n      ticketStats: {},\n      ticketList: [],\n    };\n\n    //localStorage.setItem('pm_token', 'e383f1c7647e1632da5ca130d19f3ac1f31a1c47');\n  }\n  \n  onLogout = () => {\n    window.location.replace('../index.html#/');\n  }\n\n\treset = () => {\n\t\tthis.setState({\n      loading: false,\n      status: '',\n      query: '',\n      columns: [],\n      selectedColumns: [],\n      fixedColumns: [],\n      formattedColumns: {},\n      columnExtensions: [],\n      rows: [],\n      ticketStats: {},\n      ticketList: [],\n\t\t});\n  };\n\n  getTicketStats = (tickets: any[]) => {\n    let all = 0;\n    let open = 0;\n    let closed = 0;\n    let resolved = 0;\n    let pending = 0;\n\n    all = tickets.length;\n  \n    for (const ticket of tickets) {\n      switch (lowerCase(ticket.status)) {\n        case 'open':\n          open++;\n          break;\n        case 'pending':\n          pending++;\n          break;\n        case 'resolved':\n          resolved++;\n          break;\n        case 'closed':\n          closed++;\n          break;\n        default:\n          break;\n      }\n    }\n  \n    return {\n      all,\n      open,\n      closed,\n      resolved,\n      pending,\n    };\n  };\n\n  filterTickets = () => {\n    let ins = this;\n    const ticketList = ins.state.ticketList ? ins.state.ticketList : [];\n    const query = ins.state.query ? ins.state.query.trim().toLowerCase() : '';\n    const status = ins.state.status ? ins.state.status.trim().toLowerCase() : ''; \n    //console.log('query: ['+query+'] status: ['+status+']');\n\n    ins.setState({\n      loading: true\n    }, () => {\n      let rows = ticketList.filter((item: any) => {\n        let itemapp_uid = item.app_uid.toLowerCase();\n        let itemStatus = item.status.toLowerCase();\n        \n        if((status.length == 0) || (itemStatus == status)){\n          if(query && query.length > 0){\n            return (itemapp_uid.indexOf(query) > -1);\n          }\n          else{\n            return true;\n          }\n        }\n        else{\n          return false;\n        }\n      });\n\n      ins.setState({\n        loading: false,\n        rows: rows\n      });\n    });\n  }\n\n  loadTicketList = () => {\n    let ins = this;\n\n    if(ins.state.loading){\n      return;\n    }\n\n    ins.setState({\n      loading: true\n    }, () => {\n      Processmaker.get('cases', (response) => {\n        let promises = response.map((item) => {\n          let app_uid = item.app_uid;\n          let app_index = item.del_index;\n          return new Promise(function(resolve) {\n            Processmaker.get('cases/'+app_uid+'/variables?app_index='+app_index, \n            (response) => {\n              resolve({\n                'app_uid': response.APPLICATION,\n                'ticket_no': (response.ticket_no || null)\n              });\n            },\n            (error) => {\n              console.log('error', error);\n              resolve(null);\n            })\n          });\n        });\n\n        Promise.all(promises).then((app_uid_map) => {\n\n          API.get(\n            'customer-care/tickets', \n            (response) => {\n              \n              let tickets = {};\n              response.forEach((t: any) => {\n                let data = {\n                  'urgency': t.ticket_category.urgency,\n                  'status': t.status,\n                  'ticket_no': t._id,\n                  'dueDate': null,\n                  'type': t.ticket_category.ticket_type,\n                  'specificType': t.ticket_category.specific_type,\n                  'member': t.caller_name,\n                  'company': t.corporate_client,\n                  'ticketOwner': '',\n                  'assignedTo': t.ticket_category.assign_to,\n                  'createdDate': new Date(t.date_created),\n                  'lastUpdate': new Date(t.date_updated),\n                  'channel': t.received_via,\n                  'is_vip': false,\n                  'transaction_no': t.transaction_no,\n                  'app_uid': '',\n                }\n                \n                tickets[t._id] = data;\n              });\n\n              let ticketList = app_uid_map.map((app_uid_item: any) => {\n                if(app_uid_item.app_uid != null && app_uid_item.ticket_no != null){\n                  let ticket = tickets[app_uid_item.ticket_no] || null;\n\n                  if(ticket!=null){\n                    ticket['app_uid'] = app_uid_item.app_uid;\n                    return ticket;\n                  }\n                  else{\n                    return null;\n                  }\n                }\n                else{\n                  return null;\n                }\n                \n              }).filter((item) => {\n                return item != null;\n              });\n\n              //console.log('ticketList ', ticketList);\n\n              const stat = ins.getTicketStats(ticketList);\n\n              ins.setState({\n                loading: false,\n                ticketList: ticketList,\n                rows: ticketList,\n                ticketStats: stat\n              });\n            },\n            (error) => {\n              console.log('error', error);\n            }\n          );\n        });\n      }, (error) => {\n        console.log('error', error);\n\n        let ticketList = [];\n\n        const stat = ins.getTicketStats(ticketList);\n\n        ins.setState({\n          loading: false,\n          ticketList: ticketList,\n          rows: ticketList,\n          ticketStats: stat\n        });\n      });\n    });\n  }\n\n  setSelectedColumns = (cols) => {\n    this.setState({\n      selectedColumns: cols\n    });\n  }\n\n  getVisibleColumns = () => {\n    return filter(this.state.columns, column => {\n      return findIndex(this.state.selectedColumns, { name: column.name }) >= 0;\n    });\n  }\n\n  generateReport = () => {\n    console.log('generate report');\n  }\n\n  onSearchTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    const { value } = e.target;\n    this.setState({\n        query: value\n    }, () => this.filterTickets());\n  }\n\n  onStatusFilterClick = (newStatus) => {\n    if(this.state.status == newStatus){\n      return;\n    }\n    //console.log('status: ', newStatus);\n    this.setState({\n      status: newStatus\n    }, () => this.filterTickets());\n  }\n\n  componentWillMount = () => {\n    //localStorage.setItem('pm_token', 'e383f1c7647e1632da5ca130d19f3ac1f31a1c47');\n    let cols = tableData.columns;\n    this.setState({\n      columns: cols,\n      selectedColumns: cols,\n      fixedColumns: (Object.keys(tableData).length > 0 ? tableData['fixedColumns'] : []),\n      formattedColumns: (Object.keys(tableData).length > 0 ? tableData['formattedColumns'] : []),\n      columnExtensions: (Object.keys(tableData).length > 0 ? tableData['columnExtensions'] : []),\n    });\n  }\n\n  componentDidMount = () => {\n    this.loadTicketList();\n  }\n\n  public render(): JSX.Element {\n    let ins  = this;\n    \n    const {\n      loading,\n      status,\n      columns,\n      selectedColumns,\n      fixedColumns,\n      formattedColumns,\n      columnExtensions,\n      rows,\n      ticketStats,\n    } = this.state;\n\n    return (\n      <div>\n        { loading ?\n          (<Loader/>) : null\n        }\n\n        <div style={{position: 'absolute', right: '1rem', top: '1rem'}}>\n          <Fab color='primary' style={{backgroundColor: '#CCCCCC'}}>\n          <ExitToAppIcon onClick={this.onLogout} />\n          </Fab>\n        </div>\n\n        <div className={clsx('TicketListPage')}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\" >\n            <Grid item xs={12} className={clsx('header-label')}>\n              <Typography className={clsx('title')} color=\"textPrimary\">\n                Tickets\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            spacing={1}\n            className={clsx('search')} >\n            <Grid item sm={12} md={8}>\n              <TextField\n                id=\"cc_search_tickets_tf\"\n                placeholder=\"Search ticket ID, approval code, subject, or recipient\"\n                className={clsx('search-field')}\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                onChange={ins.onSearchTextChange}\n                value={ins.state.query}\n                inputProps={{ 'aria-label': 'bare' }}\n                InputProps={{\n                  startAdornment: (\n                    <FontAwesomeIcon\n                      icon={faSearch}\n                      className={clsx('input-adornment')}\n                    />\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item sm={6} md={2} alignContent=\"flex-end\" justify=\"flex-end\">\n              <Button fullWidth onClick={() => { this.generateReport() }}>\n                <Typography className={clsx('link-button')} align=\"right\">\n                  <FontAwesomeIcon\n                    icon={faDownload}\n                    className={clsx('link-button-icon')}\n                  />\n                  <span className={clsx('link-button-text')}>Generate Report</span>\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item sm={6} md={2} alignContent=\"flex-end\">\n              <SelectColumnsPopover \n                setSelectedColumns={this.setSelectedColumns} \n                columns={columns} \n                selectedColumns={selectedColumns} />\n            </Grid>\n          </Grid>\n          <Grid container direction=\"row\" className={clsx('tickets-table')}>\n            <Grid item xs={12}>\n              <Paper className={clsx('tickets-table-container')}>\n                <Grid container xs={12}>\n                  <Grid item xs className={clsx('tickets-table-stats')}>\n                    <Typography align=\"center\" onClick={() => { this.onStatusFilterClick('') }}>\n                      <span className={(status=='') ? clsx('tickets-all') : clsx('tickets-default')}>\n                        {ticketStats.all? ticketStats.all : 0}\n                      </span>\n                      <span className={(status=='') ? clsx('ticket-label-active') : clsx('ticket-label')}>ALL</span>\n                    </Typography>\n                  </Grid>\n                  <Grid item xs className={clsx('tickets-table-stats')}>\n                    <Typography align=\"center\" onClick={() => { this.onStatusFilterClick('open') }}>\n                      <span className={(status=='open') ? clsx('tickets-open') : clsx('tickets-default')}>\n                        {ticketStats.open? ticketStats.open : 0}\n                      </span>\n                      <span className={(status=='open') ? clsx('ticket-label-active') : clsx('ticket-label')}>OPEN</span>\n                    </Typography>\n                  </Grid>\n                  <Grid item xs className={clsx('tickets-table-stats')}>\n                    <Typography align=\"center\" onClick={() => { this.onStatusFilterClick('pending') }}>\n                      <span className={(status=='pending') ? clsx('tickets-pending') : clsx('tickets-default')}>\n                        {ticketStats.pending? ticketStats.pending : 0}\n                      </span>\n                      <span className={(status=='pending') ? clsx('ticket-label-active') : clsx('ticket-label')}>PENDING</span>\n                    </Typography>\n                  </Grid>\n                  <Grid item xs className={clsx('tickets-table-stats')}>\n                    <Typography align=\"center\" onClick={() => { this.onStatusFilterClick('resolved') }}>\n                      <span className={(status=='resolved') ? clsx('tickets-resolved') : clsx('tickets-default')}>\n                        {ticketStats.resolved? ticketStats.resolved : 0}\n                      </span>\n                      <span className={(status=='resolved') ? clsx('ticket-label-active') : clsx('ticket-label')}>RESOLVED</span>\n                    </Typography>\n                  </Grid>\n                  <Grid item xs className={clsx('tickets-table-stats')}>\n                    <Typography align=\"center\" onClick={() => { this.onStatusFilterClick('closed') }}>\n                      <span className={(status=='closed') ? clsx('tickets-closed') : clsx('tickets-default')}>\n                        {ticketStats.closed? ticketStats.closed : 0}\n                      </span>\n                      <span className={(status=='closed') ? clsx('ticket-label-active') : clsx('ticket-label')}>CLOSED</span>\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                  <TableComponent\n                    id=\"ticket-list-table\"\n                    rows={rows}\n                    columns={this.getVisibleColumns()}\n                    fixedColumns={fixedColumns}\n                    formattedColumns={formattedColumns}\n                    columnExtensions={columnExtensions}\n                    disableSearch\n                  />\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nconst mapStateToProps = (state: Store) => state.ticketList;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tMap: bindActionCreators(TicketListActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };\n"],"sourceRoot":""}