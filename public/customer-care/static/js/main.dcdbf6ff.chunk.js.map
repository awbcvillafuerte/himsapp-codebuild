{"version":3,"sources":["Pages/CustomerCarePage/GlobalFunction.tsx","Pages/CustomerCarePage/Components/InputField.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/CheckContractSection.tsx","Pages/CustomerCarePage/API.tsx","Pages/CustomerCarePage/Components/CustomTable.tsx","Pages/CustomerCarePage/Components/IconButton.tsx","Pages/TicketList/API.tsx","../@hims/core/dist/index.es.js","Pages/CustomerCarePage/Components/TextButton.tsx","Pages/CustomerCarePage/LeftPanelSection/SearchedMembersList.tsx","Pages/CustomerCarePage/Components/Loading.tsx","Pages/CustomerCarePage/Components/TypeValueField.tsx","Pages/CustomerCarePage/LeftPanelSection/MemberDataSection.tsx","Pages/CustomerCarePage/Processmaker.tsx","Pages/CustomerCarePage/LeftPanelSection/ClientDataSection.tsx","Pages/CustomerCarePage/LeftPanelSection/SearchedClientsList.tsx","Pages/CustomerCarePage/Payloads.tsx","Pages/CustomerCarePage/LeftPanelSection/LeftPanelSection.tsx","Pages/CustomerCarePage/Components/Dropdown.tsx","Pages/CustomerCarePage/Components/DetailedDropdown.tsx","Pages/CustomerCarePage/Components/DetailedNumberField.tsx","Pages/CustomerCarePage/Components/DatePicker.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ConfinementSection.tsx","Pages/CustomerCarePage/Components/NumberField.tsx","Pages/CustomerCarePage/Components/CustomCheckbox.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/AvailmentSection.tsx","Pages/CustomerCarePage/Components/CustomDropzone.tsx","Pages/CustomerCarePage/Components/InputArea.tsx","Pages/CustomerCarePage/Components/CustomChip.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/TicketInfoSection.tsx","Pages/CustomerCarePage/Components/InputChip.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/InquirySection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ConsultationSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/EmergencyRoomSection.tsx","Pages/CustomerCarePage/TicketFooter.tsx","Pages/CustomerCarePage/Components/CustomTab.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/BasicInformationSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ContactsAndBranchesSection.tsx","Pages/CustomerCarePage/Components/TextTab.tsx","Pages/CustomerCarePage/Components/CustomRadio.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ServicingInstructionsSection/CardSortingSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ServicingInstructionsSection/CardPrintingSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ServicingInstructionsSection/BillingSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ServicingInstructionsSection/EnrollmentSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ServicingInstructionsSection/CollectionSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ServicingInstructionsSection/AvailmentSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ServicingInstructionsSection/ReportorialSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ServicingInstructionsSection/ServicingInstructionsSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/HMOInformationSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/MembersSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/HistorySection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/DocumentsSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/AuditLogsSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/MemberFieldsSection.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/ClientProfileSection/ClientProfileSection.tsx","Components/UI/GlobalFunction.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/MemberProfileSection/HMOInformation/index.tsx","Components/UI/TableComponent/index.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/MemberProfileSection/Documents/index.tsx","Pages/CustomerCarePage/CreateTicketPage/Components/MemberProfileSection/index.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/PartnerNetworkSection.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/CheckUtilizationSection.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/TicketInfoModal.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/ReviewTicketsSection.tsx","Pages/CustomerCarePage/CreateTicketPage/CreateTicketPage.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/SummarySection.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/CRUDTable.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/UpdateSection.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/AccommodationsSection.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/DiagnosesSection.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/PhysiciansSection.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/ProceduresSection.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/OtherDetailsSection.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/DischargeDetailsSection.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/UploadedDocumentsSection.tsx","Pages/CustomerCarePage/UpdateTicketPage/Components/UpdateInquirySection.tsx","Pages/CustomerCarePage/Components/CustomModal.tsx","Pages/CustomerCarePage/UpdateTicketPage/UpdateTicketPage.tsx","Pages/Home/Loadable.tsx","Pages/CustomerCarePage/Components/ComplexTable.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/ApproveAvailmentSection.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/CheckBenefitSection.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/SummaryAvailmentSection.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/ApproveInpatientSection.tsx","Pages/CustomerCarePage/ResolveTicketPage/Components/ApproveConsultationSection.tsx","Pages/CustomerCarePage/ResolveTicketPage/ResolveTicketPage.tsx","Pages/TicketList/Loadable.tsx","Pages/CustomerCarePage/Components/DetailedInputField.tsx","Pages/CustomerCarePage/AdvanceSearch/AdvanceSearch.tsx","Containers/App/index.tsx","i18n.ts","Containers/App/constants.ts","Containers/App/reducer.ts","app.tsx","reducers.ts"],"names":["GlobalFunction","sentence","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","fname","mname","lname","getIntials","num","isDecimal","toFixed","toString","replace","text","initials","wordArray","paramDate","date","Date","day","getDate","monthIndex","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","meridian","newSec","toLocaleString","fromDate","toDate","getTime","valueList","Math","round","index","birthDate","ageInMillis","now","abs","getUTCFullYear","ticketType","specificType","appNo","tempString","InputField","props","_state","this","placeholder","value","error","dynamicStyle","borderColor","undefined","className","disabled","type","style","onChange","event","charLimit","target","textAlign","React","CheckContractSection","contractUrls","state","contractListUpdated","API","get","memberId","clientId","response","console","log","map","benefit","_id","setState","pdfUrl","process","execPath","viewerUrl","paddingTop","width","height","src","backendUrl","url","success","fail","fetch","method","headers","then","json","data","catch","body","customHeader","JSON","stringify","CustomTable","handleChangePage","_event","page","handleChangeRowsPerPage","rowsPerPage","parseInt","resetPage","getSlicedData","rowsPerPageOptions","startingItem","rows","slice","filterData","_props","onChangeState","overflow","canOverflow","stickyHeader","columns","column","label","renderHeader","renderRow","row","j","colSpan","noRowsMessage","paginationClass","count","labelDisplayedRows","info","onChangeInfo","from","to","labelRowsPerPage","onChangePage","onChangeRowsPerPage","IconButton","onClick","icon","size","localStorage","getItem","Object","freeze","index$1","index$2","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","service_worker","URL","href","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","index$3","ServiceWorker","index$4","BaseTheme","createMuiTheme","palette","primary","main","contrastText","secondary","typography","fontFamily","button","fontWeight","fontSize","textTransform","overrides","MuiDialog","root","MuiDialogTitle","color","MuiDialogContentText","MuiFormControlLabel","MuiIconButton","MuiButton","containedPrimary","boxShadow","backgroundColor","containedSecondary","border","outlinedSecondary","_extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","_assign","assign","t","s","n","arguments","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","__generator","f","y","g","_","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","push","__spreadArrays","il","r","k","a","jl","borderCss","borderRadius","useStyles","makeStyles","theme","createStyles","control","borderBottomColor","input","display","select","marginTop","spacing","valueContainer","flexWrap","flex","alignItems","noOptionsMessage","padding","singleValue","position","left","bottom","paper","zIndex","right","inputComponent","_a","inputRef","getOwnPropertySymbols","propertyIsEnumerable","__rest","createElement","ref","components","Control","children","innerProps","innerRef","selectProps","classes","TextFieldProps","TextField","InputProps","inputProps","variant","fullWidth","Menu","Paper","square","Option","MenuItem","selected","isFocused","component","isSelected","NoOptionsMessage","Typography","Placeholder","SingleValue","ValueContainer","useState","single","setSingle","FormControl","NoSsr","inputId","options","suggestions","optionItem","isSearchable","isClearable","defaultProps","index$5","InputAutocomplete","borderCss$1","useStyles$1","textField","currentValue","setcurrentValue","id","defaultValue","chips","multiline","index$6","InputChipTextField","borderCss$2","borderStyles","useStyles$2","formControl","selectEmpty","marginRight","StyledOutlinedInput","withStyles","OutlinedInput","items","defVal","find","item","getDefaultValue","setCurrentValue","inputLabel","useRef","labelWidth","InputLabel","htmlFor","selectedItem","name","IconComponent","selectItem","displaySelectItem","required","key","index$7","InputSelect","borderCss$3","borderStyles$1","useStyles$3","errorIcon","float","StyledOutlinedInput$1","FormHelperText","errorMessage","index$8","InputSelectSetValue","useStyles$4","borderCss$4","StyledTextField","index$9","InputTextField","useStyles$5","inputSelect","marginBottom","dialog","align","justify","dialogContent","container","paddingRight","paddingLeft","dialogTitle","dialogContentTitle","dialogContentText","formControlLabel","checkBox","dialogAction","justifyContent","resolveDialogAction","leftButton","marginLeft","rightButton","StyledCheckbox","checked","Checkbox","notes","notesError","isResolved","_b","setDisabled","handleClose","onClose","setFieldValue","fieldName","setFieldError","Grid","direction","xs","DialogTitle","disableTypography","DialogContent","DialogContentText","FormControlLabel","checkedIcon","labelPlacement","DialogActions","Button","onSubmit","selectItems","Dialog","open","isModalOpen","index$a","TicketModal","styles","_super","SampleCoreComponent","render","Component","index$b","useStyles$6","appBar","breakpoints","up","menuButton","logo","badge","grow","flexGrow","AppBar","Toolbar","edge","menuOnClick","Link","logoImage","alt","userOnClick","Avatar","userImage","badgeCount","propTypes","number","useStyles$7","sideBar","listItem","flexDirection","listItemIcon","minWidth","avatar","avatarSelected","listItemText","listItemTextSelected","iconSelected","divider","ListItemLink","ListItem","isSelectedSidebar","sidebarItem","selectedSidebar","sidebarChanged","setSidebarChanged","dashboard","members","proposals","clients","tickets","reports","templates","help","sidebarSelected","setSidebarSelected","onStorageChange","useEffect","removeEventListener","handleDashboardOnClick","attr","setItem","handleSidebarClick","List","ListItemIcon","ListItemText","Divider","useStyles$8","drawer","flexShrink","drawerPaper","content","toolbar","mixins","useStyles$9","gridContainer","breadCrumbs","headerTitle","linkPrevious","cursor","linkCurrent","index$c","Breadcrumbs","useStyles$a","nameFontSize","valueFontSize","useStyles$b","grid","string","useCirclePrimitive","circlePrimitiveStyle","top","rotate","delay","margin","opacity","animation","animationDelay","useStyles$c","useStyles$d","previous_page","textDecoration","current_page","useStyles$e","minHeight","buttonTitle","buttonSubTitle","rightButtons","leftButtons","useStyles$f","sidebar","maxWidth","contentgrid","flexBasis","index$d","LoadingIndicator","AppHeader","AppSidebar","AuthenticatedLayout","mobileOpen","setMobileOpen","handleDrawerToggle","Hidden","smUp","implementation","Drawer","xsDown","PageHeader","ClientInfoItem","GridHorizontalDivider","BreadcrumbsComponent","FloatingButtons","PageLayout","newPlacement","anchorEl","setAnchorEl","_c","setOpen","_d","placement","setPlacement","logolink","Popper","transition","TransitionProps","Fade","timeout","onLogout","currentTarget","prev","index$e","Actions","Definitions","Reducers","Services","Stores","UI","checkStore","store","shape","dispatch","subscribe","getState","replaceReducer","runSaga","injectedReducers","injectedSagas","DAEMON","ONCE_TILL_UNMOUNT","constants","RESTART_ON_REMOUNT","injectReducerFactory","createReducer","isValid","reducer","Reflect","has","getInjectors","injectReducer","allowedModes","descriptor","saga","mode","_mode","includes","injectSagaFactory","args","newDescriptor","hasSaga","task","ejectSagaFactory","cancel","getInjectors$1","injectSaga","ejectSaga","ResponseError","_this","statusText","Error","parseJSON","checkStatus","ActionTypes","index$f","configureStore","initialState","history","composeEnhancers","sagaMiddleware","middlewares","enhancers","run","hocWithReducer","WrappedComponent","ReducerInjector","context","displayName","useInjectReducer","hocWithSaga","InjectSaga","injectors","componentWillUnmount","useInjectSaga","loadable","importFunc","fallback","LazyComponent","getReducerInjectors","request","getSagaInjectors","index$g","componentProps","ThemeProvider","basename","ActionTypes$1","locale","selectLanguage","language","enTranslationMessages","formatTranslationMessages","messages","defaultFormattedMessages","keys","reduce","formattedMessages","formattedMessage","stateSelector","languageState","index$h","Provider","Children","only","appLocales","messageProviderReducer","action","CHANGE_LOCALE","payload","header","scope","defaultMessage","index$i","Document","Message","NotFoundPage","TextButton","SearchedMembersList","getExtractedMembers","filter","trim","member","searchText","renderMemberShortDetail","firstName","middleName","lastName","onSelectMember","clientName","Loading","CircularProgress","TypeValueField","classNamePrefix","choices","choice","onChangeType","onChangeValue","MemberDataSection","getBenefitsLimit","limits","benefits","forEach","targetLimitIndex","limit","limitType","recentTickets","disableRecentTickets","getRecentTicketsData","toNameFormat","client","registeredName","toShortDateString","age","getAge","contractStatus","contract","isVip","loadingBenefits","formatNumber","limitUnit","gender","civilStatus","loadingRecentTickets","renderTableHeader","rowData","renderTableRow","TableCell","recentTicket","TableRow","ticketNo","dateUpdated","Processmaker","ClientDataSection","corporateAccountNo","linkedTickets","disableLinkedTickets","getLinkedTicketsData","mainAddress","mainOfficeAddress","barangay","city","region","startDate","endDate","cardName","salesChannel","contactPersons","contactNo","renderRecentTicketHeader","renderRecentTicketRow","ticket","dateCreated","SearchedClientsList","getExtractedClients","onSelectClient","Payloads","uploadedFiles","confinement","availment","inquiries","consultation","transaction_no","transactionNo","received_via","ticketChannel","received_from","ticketSource","member_name","memberName","corporate_client","broker","brokerName","hospital_name","facility","department","caller_name","callerName","contact_no","additional_notes","additionalNotes","supporting_documents","file","path","ticket_category","ticket_type","specific_type","urgency","assign_to","agent","availment_details","provider","availments_list","diagnosis","diagnoses","icd10code","icd10Code","remarks","is_primary","is_final","doctors","specialization","fee","no_of_visits","procedures","procedure","cptCode","cpt_code","procedure_name","amount","doctor","phic","isPHIC","date_added","assessment_type","assessmentType","assessment_remarks","assessmentRemarks","approved_amount","approvedAmount","confinement_details","date_admitted","dateAdmitted","confinement_kind","confinementKind","gift_given","updates","room_accommodation","room_type","roomType","no_of_days","costPerDay","initialDiagnosis","params","others","coverage","final_bill","philhealth_amount","discharge_date","consultation_details","inquiry_details","inquiry_list","inquiry","detail","specific_detail","specificDetail","answer","related_tickets","relatedTickets","support_docs","pmaker_case_uid","date_created","date_updated","date_escalated","created_by","createdBy","tmp","user_id","module","timestamp","member_id","member_data","is_vip","last_name","middle_name","first_name","client_id","client_data","registered_name","loa","doc_name","docName","field","giftGiven","update","hospital_bill","hospitalBill","accommodations","accommodation","days","primaryDiagnosisIndex","isFinal","physicians","physician","visits","item_name","ticket_no","paid_by","paidBy","philhealthAmount","finalBill","dischargeDate","pmCaseId","approval_code","approvalCode","loas","isPrimary","noOfVisits","dateAdded","generate_approval_code","loa_no","loaNo","date_of_birth","civil_status","latest_contract","custom_metadata","coverage_start_date","coverage_end_date","member_status","getClientData","benefitTree","planTypes","getAddress","address","floor","unit","bldgNo","bldg_no","bldgName","bldg_name","street","brgy","zipCode","zip_code","contactNos","contact_numbers","contact","no","contact_persons","email","email_address","designation","brandName","brand_name","name_on_card","corporate_account_no","tinNo","tin_no","vatType","vat_type","evatNo","evat_no","industry","ownership","years","years_of_existence","prevHMOProvider","prev_hmo_provider","prevHMOEffectivityDate","prev_hmo_effectivity_date","prevHMOExpiryDate","prev_hmo_expiry_date","secRegNo","sec_reg_no","authSignatory","authorized_signatory","authContactNo","authorized_signatory_contact_no","authEmail","authorized_signatory_email_address","authDesignation","authorized_signatory_designation","sourceOfFunds","sources_of_funds","sales_channel","agent_name","company","company_name","contactName","contact_person","main_office_address","branches","branch","level","tree_id","contracts","getContract","attachments","attachment","tags","origName","originalname","encoding","mimeType","mimetype","files","groupName","group_name","headCompanyName","head_company_name","memberFields","member_data_fields","isRequired","is_required","system_name","dataType","data_type","inputType","input_type","field_type","planType","plan_type_name","code","plan_type_code","benefit_count","principals","principal_count","dependents","dependent_count","version","servicingInstructions","servicing_instructions","sortingOfCards","sorting_of_cards","cardSorting","card_sorting","cardPacking","card_packing","packAccordingTo","pack_accdg_to","printingOfCards","printing_of_cards","billing","addressSoaTo","address_soa_to","sendSoaTo","send_soa_to","sendSoaDays","send_soa_days","sendSoaFormats","send_soa_formats","cmApplication","cm_application","additionalRequirements","additional_requirements","soaGeneration","soa_generation","soaSorting","soa_sorting","additionalFieldsSoa","additional_fields_soa","enrollment","employeeEntrollment","employee_enrollment","dependentEntrollment","dependent_enrollment","enrollmentDoneThrough","enrollment_done_through","collection","prefredMeansOfPayment","preferred_means_of_payment","employeeEnrollment","contactPersonForFollowups","contact_person_for_followups","detialsForPaymentPickup","details_for_payment_pickup","preferedBank","preferred_bank","reportorial","reportType","report_type","frequency","available","contractNo","contract_no","handler","activityId","activity_id","user","activity","time","doc","document_name","proposalNo","proposal_number","uploader","uploaded_by","uploadDate","uploaded_date","signedDate","date_signed","batchName","batch_name","endorseDate","date_endorsed","sender","section","member_card_no","corporateName","client_object","effectivityDate","effectivity_date","terminationDate","termination_date","ticketCategory","additionalFiles","dateEscalated","providerData","parseFloat","concat","LeftPanelSection","idTypes","getMemberData","onUpdateMemberStateChange","onUpdateClientStateChange","getMemberBenefit","loadingMember","combineNodes","category","parent_name","limit_unit","parentNodes","childNodes","parent","child","foundChild","childNode","loadingClient","targetId","processmakerParticipated","cases","matchedCase","caseItem","app_uid","generateTicketNumber","app_number","loadingLinkedTickets","onSearchChanged","trimmedValue","splitValue","searchIDType","slicedText","sliceClientID","sliceMemberID","newValue","searchIDValue","loadingClients","isClientsLoaded","loadingMembers","isMembersLoaded","ticketStatus","renderSearchArea","renderTopArea","promptChooseMember","renderTicketData","faSearch","toDateAndTime","Dropdown","isDisabled","onInputChange","filterOption","option","rawInput","hasNoInput","choicesAreShort","inputIsShort","isInputMatch","DetailedDropdown","DetailedNumberField","targetNewValue","isFloat","onFocus","numberValue","isNaN","newStringValue","DatePicker","utils","MomentUtils","format","minDate","ConfinementSection","confinementTypes","facilities","createTicketAttemp","refreshConfinementState","cptCodes","NumberField","disableDelimiter","CustomCheckbox","AvailmentSection","itemToEditIndex","icd10CodeToEdit","doctorToEdit","filteredICD10","icd10Codes","isSame","totalCost","diagnosisIndex","refreshAvailmentState","getFilteredICD10","faPlus","pushBlankDiagnosis","lineHeight","faCheckCircle","faTimesCircle","getProcedureCosts","faPen","faMinusCircle","splice","procedureIndex","renderProcedureDetails","stateProcedure","stateProcedures","pushBlankProcedures","CustomDropzone","multiple","onDrop","acceptedFiles","accept","getRootProps","getInputProps","faFileUpload","InputArea","defaultRows","TextareaAutosize","CustomChip","Chip","onDelete","TicketInfoSection","ticketChannels","ticketSources","ticketTypes","specificTypes","urgencies","agents","refreshTicketState","InputChip","fullWidthInput","onAdd","chip","_chip","InquirySection","supportDocs","refreshInquiryState","filteredInquiries","getFilteredInquiries","onAddInquiry","onRemoveInquiry","ConsultationSection","refreshConsultationState","EmergencyRoomSection","chiefComplaint","editIcon","deleteIcon","TicketFooter","interval","setInterval","onSaveForNow","lastSave","getTimeDeffirence","onResolveTicket","onSubmitTicket","onAssign","disableAssign","onEscalate","disableEscalate","onUpdateTicket","onFinalAssessment","disableFinalAssessment","onSummarizeAssessment","onGenerateApprovalCode","onCloseTicket","disableCloseTicket","CustomTabs","Tabs","selectedTab","scrollButtons","indicatorColor","setSelectedTab","tabList","tab","Tab","BasicInformationSection","yearsAndCount","brokerCompany","renderItem","ContactsAndBranchesSection","renderAddress","paddingBottom","branchName","borderBottom","TextTab","orientation","tabStyle","tabLabel","CustomRadio","Radio","checkedCondition","CardSortingSection","_value","CardPrintingSection","BillingSection","softCopy","EnrollmentSection","memberClientEncoding","CollectionSection","ReportorialSection","reportorialData","reportorialIsUpdated","capitalizeEachWord","ServicingInstructionsSection","_index","HMOInformationSection","filterName","filterBenefits","filterPrincipals","filterDependents","filterDateCreated","filterDateUpdated","filterVersion","overflowX","renderHeaderColumn","attrName","headerText","faSort","MembersSection","where","getMembers","HistorySection","loadData","getContractData","renderContractTable","updateDate","DocumentsSection","signedContractsHeader","signedProposalsHeader","masterlistsHeader","apdEndorsementsHeader","corporateGuaranteesHeader","lettersAndRequestsHeader","documents","getDocuments","document","renderTableCell","conditionState","AuditLogsSection","getAuditLogs","logs","audit_logs","MemberFieldsSection","filterByType","fieldtype","ClientProfileSection","informationTabs","accountTabs","activitiesTabs","benefit_plan_tree","plan_types","renderSideBar","renderMainContent","borderRight","renderSideTabs","random","substr","hmoitemStyles","hmoname","hmovalue","hmovaluelink","HMOItem","link","hmoinfoStyles","subtitle","hmocheckboxlabel","hmographsubtitle","hmodependentsbox","hmoremarksbox","hmodependentsbox_link","change_status_link","icons","popper","borderWidth","background","arrow","borderStyle","HMOInformation","memberData","memberDependents","clientData","contractId","contractName","MBL","ABL","PEC","isValidDate","md","moment","member_type","plan_type","is_philhealth_rider","diff","title","suffix","Table","TableHead","TableBody","Box","cost_center","financial_code","site","site_address","job_lvl","supervisor","hire_date","radioSelected","selectedValue","clickCell","clickValue","cellSelectStyles","textFieldStyles","checkboxStyles","Select","cellSelectClasses","renderValue","TableFilterCell","onFilter","filteringEnabled","TableRadio","onToggle","restProps","stopPropagation","TableCheckBox","faCheckSquare","TableSearchPanel","onValueChange","startAdornment","DefaultTableToolbar","disableGutters","SortingIcon","faSortUp","faSortDown","TableSortLabel","onSort","sortingEnabled","hideSortIcon","EmptyCellFormatter","faExclamationCircle","EmptyCellDataTypeProvider","formatterComponent","RequiredFormatter","RequiredDataTypeProvider","RequiredCheckboxFormatter","RequiredCheckboxDataTypeProvider","ReadOnlyCheckboxFormatter","ReadOnlyCheckboxDataTypeProvider","UploadFileFormatter","UploadFileDataTypeProvider","DisapproveRadioFormatter","aria-label","cnt","DisapproveRadioDataTypeProvider","IncompleteRadioFormatter","IncompleteRadioDataTypeProvider","RadioNameFormatter","RadioDataTypeProvider","ValuesNameFormatter","ValuesNameDataTypeProvider","SystemNameFormatter","SystemNameDataTypeProvider","DataFormatter","DataDataTypeProvider","NumberFormatter","textFieldClasses","NumberDataTypeProvider","TextFormatter","TextDataTypeProvider","DateFormatter","DateCellDataTypeProvider","TimeFormatter","TimeCellDataTypeProvider","TableComponent","formattedColumns","singleSelect","disablePaging","disableSearch","disableSelect","disableSort","disableFilter","toolbarType","columnExtensions","columnBands","showSelectionColumn","query","selection","setSelection","currentPage","setCurrentPage","pageSize","setPageSize","pageSizes","setRows","dataTypeProviders","for","data_name","value_name","required_columns","radio","incomplete_radio","disapprove_action","required_checkbox","readonly_checkbox","upload_file","required_cell","onCurrentPageChange","onPageSizeChange","defaultSort","defaultSorting","onSortingChange","onFilterChange","defaultFilter","sorting","onSelectionChange","newSelection","onClickRow","onSelectedRadio","onClickCell","lastSelected","defaultFilters","filters","columnFilteringEnabled","filterExtensions","onFiltersChange","noData","message","selectByRowClick","cellComponent","headerCellComponent","showSelectAll","showSortingControls","sortLabelComponent","rootComponent","Documents","handleClickRow2","handleFilter","applySortFilter","handleSort","documents_tab","aria-controls","all_documents_table","all_filter","all_sort","uploaded_documents_table","uploaded_filter","uploaded_sort","missing_documents_table","missing_filter","missing_sort","all_data","MemberProfileSection","memberTabs","reset","loading","setselectedTab","setLoading","isLoading","callback","fetchMemberDependents","tempId","ins","principal_temp_id","GET_DEPENDENTS_URL","loadMemberData","memberNumber","memberDataList","appendDocumentData","temp_id","clienthmoinfo","contract_id","contract_name","abl","mbl","pec","rbList","rblItem","docResponse","generateDocumentData","docerror","cerror","componentDidMount","sample_document_data","purpose","uploaded","all_table","columnName","uploaded_table","missing_table","temp_row","file_names","uploaded_file","filename","documents_all_data","documents_all_table","documents_uploaded_table","documents_missing_table","handleClickCell","handleSaveDocument","handleDocumentFilter","table","documents_all_sort","documents_uploaded_sort","documents_missing_sort","documents_all_filter","documents_uploaded_filter","documents_missing_filter","filtered","sort","filter_name","filter_purpose","filter_files","_generatePrincipalName","currEditMemberValues","cleanFirstName","cleanMiddleName","bind","clsx","PartnerNetworkSection","groupChoices","getFilteredFacilitiesData","groups","isLoaded","constructPartnerNetworkData","lastElement","array","parentNode","node","tree_path","childrenNodes","nodesWithType","nodeWithPNList","partner_network_list","pnGroups","pnType","pnFacilities","group","pnGroup","facility_id","isAsc","faCheck","faTimes","sortFacilities","CheckUtilizationSection","dummyData","swipe","desc","sessions","dateAvailed","loaId","label1","label2","maxValue","utilization","toCommonDateString","prevState","Line","TicketInfoModal","ticketId","availmentDetails","confinementDetails","total","onCloseButtonClicked","renderTicketInfo","index2","getTotalAailmentProcedureCost","ReviewTicketsSection","getFilteredTicketData","channel","source","assignee","lastUpdate","urgencyColor","selectedTicketId","ticketListUpdated","sortTickets","CreateTicketPage","clientTabList","memberTabList","uploadFiles","nextAction","hasFiles","FormData","append","isSaving","postFormData","uploadResponse","snackbarMessage","submitTicket","getPostTicketPayload","post","postTicketResponse","submitTicketProcessMaker","is_availment","casesResponse","processmakerExecuteTrigger","appUID","triggerId","put","triggerResponse","processmakerVariable","variableResponse","patchCaseUID","patch","patchTicketResponse","redirectToNextPage","saveForNow","tabSelected","isIcd10CodesLoaded","loadedResources","tempIcd10Codes","parse","full_code","abbreviated_description","tempCptCodes","debug","RESOURCES_TO_LOAD","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","min","SummarySection","getTotalAccommodationCost","getTotalPhysicianCost","getTotalProcedureCost","getTotalItemCost","renderSection","scroll","pageYOffset","setTabSelected","headerName","miniText","tabIndex","totalValue","CRUDTable","handleOnChange","rowToEdit","editField","onFormat","cols","colName","onHeaderFormat","index1","renderCell","onDeleteRow","onSaveEditRow","UpdateSection","onFormatTableHeader","colIndex","onFormatCRUDTable","refreshUpdatesState","tempData","unshift","_rowIndex","currentVal","AccommodationsSection","getTotalCost","facilitiesList","refreshAccommodationsState","renderAddRoomAccommodation","renderConfinementDetails","DiagnosesSection","rowIndex","setPrimaryDiagnosisIndex","filteredIcd10","diagnosesList","getFilteredICD10Codes","refreshDiagnosisStateChange","PhysiciansSection","physiciansList","refreshPhysiciansStateChange","ProceduresSection","proceduresList","refreshProceduresStateChange","OtherDetailsSection","itemTypes","refreshItemsStateChange","DischargeDetailsSection","coverageList","onUpdateTicketStateChange","UploadedDocumentsSection","refreshFilesStateChange","UpdateInquirySection","CustomModal","Modal","isOpen","closeAfterTransition","in","renderContent","renderFooter","UpdateTicketPage","errors","loadTicketData","getTicketData","getConfinementData","getErrorList","errorDiagnosis","matched","targets","fileData","apiUpdateTicket","getPutTicketPayload","processmakerGetCase","caseId","processmakerRouteCase","tab_selected","update_state","updateState","accommodation_state","accommodationState","diagnosis_state","diagnosisState","physician_state","physicianState","procedure_state","procedureState","other_detail_state","otherDetailState","file_state","fileState","isAssessmentModalOpen","renderInpatientContent","renderInquiryContent","Utils","Components","HomePage","mapStateToProps","mapDispatchToProps","connect","default","ComplexTable","backColor","ApproveAvailmentSection","getProceduresCost","getApprovedAvailmentsCost","headerNameStyle","renderProcedure","CheckBenefitSection","getFilteredBenefitsData","benefitCategory","benefitName","benefitListUpdated","loadBenefitsData","renderBenefitsList","sortBenefits","SummaryAvailmentSection","APPROVED","DISAPPROVED","PENDING","loaTypes","getApprovedAvailments","getDisapprovedAvailments","loaNumber","loaDate","renderAvailment","approvedAvailments","disapprovedAvailments","canEditLOAs","renderLOAHeader","renderLOARow","canEdit","refreshLOAStates","loaToDelete","ApproveInpatientSection","getAttendingPhysicianCost","getAvailmentCost","getAllAvailmentsCost","getAllProceduresCount","renderTabs","renderSummarySection","renderDiagnosisSection","proceduresCount","renderDiagnosisInfo","procedureCost","accommodationCost","attendingPhysicianCost","renderTableSection","ApproveConsultationSection","ResolveTicketPage","onUpdateAssessment","getPutUpdateAssessmentPayload","delete","onResolve","onResolveProcessmaker","returnToTicketList","allAvailmentIsDisapproved","isSummarizing","pmId","diagnosisData","doctorData","renderOutpatientContent","renderConsultationContent","TicketListPage","DetailedInputField","AdvanceSearch","_data","createBrowserHistory","Containers","routes","exact","App","Helmet","titleTemplate","defaultTitle","renderRoutes","route","require","translationMessages","en","currentUser","userData","repositories","appReducer","LOAD_REPOS","LOAD_REPOS_SUCCESS","username","repos","LOAD_REPOS_ERROR","rest","MessageProvider","openSansObserver","FontFaceObserver","combineReducers","global","globalReducer","router","connectRouter","MOUNT_NODE","getElementById","ReactDOM","load","classList","add","Intl","all","err"],"mappings":"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","file":"static/js/main.dcdbf6ff.chunk.js","sourcesContent":["\n\n\n\nexport class GlobalFunction {\n\n    static capitalizeEachWord(sentence: string) {\n        var splitStr = sentence.toLowerCase().split(' ');\n        for (var i = 0; i < splitStr.length; i++) {\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     \n        }\n        return splitStr.join(' '); \n    }\n\n    static toNameFormat(fname: string, mname: string, lname: string) {\n        return `${fname} ${GlobalFunction.getIntials(mname)} ${lname}`;\n    }\n\n    static formatNumber(num: number, isDecimal: boolean = false) {\n        let value = '';\n        if (isDecimal) {\n            value = num.toFixed(2);\n        } else {\n            value = num.toString();\n        }\n        return value.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n    }\n\n\n    static getIntials(text: string) {\n        var initials = '';\n        var wordArray = text.split(' ');\n        for (var i = 0; i < wordArray.length; i++) {\n            initials += wordArray[i].substring(0,1).toUpperCase() + '.';\n        }\n        return initials;\n    }\n\n    static toCommonDateString(paramDate: Date | string) {\n        let date = typeof paramDate === 'string' ? new Date(paramDate) : paramDate;\n        if (date) {\n            const monthNames = [\n                \"January\", \"February\", \"March\",\n                \"April\", \"May\", \"June\", \"July\",\n                \"August\", \"September\", \"October\",\n                \"November\", \"December\"\n            ];\n            const day = date.getDate();\n            const monthIndex = date.getMonth();\n            const year = date.getFullYear();\n            return (monthNames[monthIndex] + \" \" + day + \", \" + year);\n        }\n\n        return '';\n    }\n\n    static toShortDateString(paramDate: Date | string) {\n        let date = typeof paramDate === 'string' ? new Date(paramDate) : paramDate;\n        if (date) {\n            const monthNames = [\n                \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \n                \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n            ];\n            const day = date.getDate();\n            const monthIndex = date.getMonth();\n            const year = date.getFullYear();\n            return (monthNames[monthIndex] + \" \" + day + \", \" + year);\n        }\n\n        return '';\n    }\n\n    static toDateAndTime(paramDate: Date | string) {\n        let date = typeof paramDate === 'string' ? new Date(paramDate) : paramDate;\n        if (date) {\n            const monthNames = [\n                \"January\", \"February\", \"March\",\n                \"April\", \"May\", \"June\", \"July\",\n                \"August\", \"September\", \"October\",\n                \"November\", \"December\"\n            ];\n            const day = date.getDate();\n            const monthIndex = date.getMonth();\n            const year = date.getFullYear();\n            const hours = date.getHours() - (date.getHours() > 12 ? 12 : 0);\n            const minutes = date.getMinutes();\n            const seconds = date.getSeconds();\n            const meridian = (date.getHours() > 12 ? \"PM\" : \"AM\");\n            \n            var newSec = '0' + seconds;\n            if (seconds.toLocaleString().length !== 1) newSec = seconds.toLocaleString()\n\n            return (\n                monthNames[monthIndex] + \" \" + \n                day + \", \" + \n                year + \" - \" + \n                hours + \":\" + \n                minutes + \":\" + \n                newSec + \" \" + \n                meridian);\n        }\n\n        return '';\n    }\n\n    static getTimeDeffirence(fromDate: Date, toDate: Date) {\n        const seconds = (toDate.getTime() - fromDate.getTime()) / 1000;\n        const scaleList = [ \n            ['day', 'days'], \n            ['hour', 'hours'], \n            ['minute', 'minutes'], \n            ['second', 'seconds'] \n        ];\n        const valueList = [\n            Math.round(seconds / 86400),\n            Math.round(seconds / 3600) % 24,\n            Math.round(seconds / 60) % 60,\n            Math.round(seconds) % 60\n        ];\n        \n        let index = 0;\n        for (let i = 0; i < valueList.length; i++) {\n            if (valueList[i] > 0) {\n                index = i;\n                break;\n            }\n        }\n\n        if (index) {\n            return `${valueList[index]} ${scaleList[index][valueList[index] == 1 ? 0 : 1]}`\n        }\n        return '';\n    }\n\n    static getAge(birthDate: any) {\n        if (birthDate) {\n            var ageInMillis = Date.now() - birthDate;\n            return Math.abs(new Date(ageInMillis).getUTCFullYear() - 1970);\n        }\n\n        return null;\n    }\n\n    static generateTicketNumber(ticketType: string, specificType: string, appNo: string) {\n        const ticketTypes = {\n            \"Availment\": \"AVL\",\n            \"Inquiry\": \"INQ\"\n        };\n        const specificTypes = {\n            \"Inpatient\": \"INP\",\n            \"Outpatient Procedure\": \"OP\",\n            \"Emergency Room\": \"ER\",\n            \"Maternity\": \"MAT\",\n            \"Consultation\": \"CON\"\n        }\n        const tempString = (ticketType === 'Inquiry' ? '' : `${specificTypes[specificType]}-`);\n        return `${ticketTypes[ticketType]}-${tempString}${appNo}`;\n    }\n}","import * as React from 'react';\n// import { InputBase } from '@material-ui/core';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport './component-style.scss';\n\ninterface IProps {\n    value: string;\n    onChange: (value: string) => void;\n\n    placeholder?: string;\n    error?: boolean;\n    icon?: IconProp;\n    disabled?: boolean;\n    charLimit?: number;\n}\n\nexport class InputField extends React.Component<IProps> {\n\n    \n\n    shouldComponentUpdate(props: IProps, _state: any) {\n        return (\n            (this.props.placeholder !== props.placeholder) ||\n            (this.props.value !== props.value) ||\n            (this.props.error !== props.error)\n        );\n    }\n\n    render(): JSX.Element {\n        const self = this;\n        const dynamicStyle = {\n            borderColor: (self.props.error ? '#E53935' : undefined)\n        };\n\n        return (\n            <div className='input-field-container'>\n                {this.props.placeholder ? (\n                    <div className={this.props.disabled ? 'text-disabled text' : 'text'}>\n                        {this.props.placeholder}\n                    </div>\n                ) : null}\n                <input type='text' \n                    disabled={this.props.disabled}\n                    className={this.props.disabled ? 'text-field-disabled text-field' : 'text-field'}\n                    style={dynamicStyle}\n                    // fullWidth \n                    value={this.props.value}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                        const condition = \n                            this.props.charLimit ? (\n                                event.target.value.length <= this.props.charLimit \n                            ) : (true) ;\n                            \n                        if (condition) {\n                            this.props.onChange(event.target.value);\n                        }\n                    }} />\n                {this.props.charLimit ? (\n                    <>\n                    <div className='text' />\n                    <div \n                        className={this.props.disabled ? 'text-disabled text' : 'text'}\n                        style={{textAlign: 'right'}}>\n                            {`${this.props.value.length}/${this.props.charLimit}`}\n                    </div>\n                    </>\n                ) : null}\n                \n            \n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { API } from 'Pages/CustomerCarePage/API';\n\ninterface IProps {\n    memberId?: string;\n    clientId?: string;\n}\n\ninterface IStates {\n    contractListUpdated: boolean;\n}\n\nexport class CheckContractSection extends React.Component<IProps, IStates> {\n\n    contractUrls: string[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            contractListUpdated: false\n        }\n\n        this.contractUrls = [];\n    }\n\n    componentDidMount() {\n        API.get(`customer-care/members/${this.props.memberId || this.props.clientId}/benefits`,\n            (response) => {\n                console.log(response);\n                this.contractUrls = response.map(benefit => {\n                    return `/customer-care/benefits/io/pdf?id=${benefit._id}&type=contract`\n                });\n\n                this.setState({contractListUpdated: true});\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n    \n    render(): JSX.Element {\n        const pdfUrl = `${process.execPath}/../../../sample.pdf`;\n        // const viewerUrl = `https://mozilla.github.io/pdf.js/web/viewer.html?file=${pdfUrl}`;\n        const viewerUrl = `${process.execPath}/../pdfjs-2.2.228-dist/web/viewer.html?file=${pdfUrl}`;\n\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Check Contract</div>\n                <div className='sub-section'>\n                    {/*this.contractUrls.map((url, index) => {\n                        return (\n                            index === 0 ?\n                            <iframe \n                                style={{width: '100%', height: '1280px'}}\n                                src={API.getUrl() + url}  />\n\n                            : null\n                        );\n                    })*/}\n                            <iframe \n                                style={{width: '100%', height: '1280px'}}\n                                src={viewerUrl}  />\n                </div>\n                \n            </div>\n        );\n    }\n}","\nlet backendUrl = process.env.REACT_APP_BASE_URL;\n\nexport class API {\n\n    static getUrl() {\n        return process.env.REACT_APP_BASE_URL;\n    }\n\n    static async get(url: string, success: Function, fail: Function) {\n        fetch(backendUrl + url, {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n        .then(response => response.json())\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async post(url: string, \n                      body: any,\n                      success: Function, \n                      fail: Function,\n                      customHeader: any = { 'Content-Type': 'application/json' }) {\n        fetch(backendUrl + url, {\n            method: 'POST',\n            headers: customHeader,\n            body: body\n        })\n        .then(response => response.json())\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async postFormData(url: string, body: any, success: Function, fail: Function) {\n        fetch(backendUrl + url, {\n            method: 'POST',\n            body: body\n        })\n        .then(response => response.json())\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async put(url: string, body: any, success: Function, fail: Function) {\n        fetch(backendUrl + url, {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        })\n        .then(response => response)\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async patch(url: string, body: any, success: Function, fail: Function) {\n        fetch(backendUrl + url, {\n            method: 'PATCH',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        })\n        .then(response => response)\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async delete(url: string, body: any, success: Function, fail: Function) {\n        fetch(backendUrl + url, {\n            method: 'DELETE',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        })\n        .then(response => response)\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n}","import * as React from 'react';\nimport { Table, TableBody, TableHead, TableRow, TablePagination, TableCell } from '@material-ui/core';\nimport './component-style.scss';\nimport { LabelDisplayedRowsArgs } from '@material-ui/core/TablePagination';\nimport { DropdownChoice } from '../Models';\n\ninterface IProps {\n    className?: string;\n    paginationClass?: string;\n\n    /* Normal Mode */\n    rows: any[];\n    renderHeader: () => JSX.Element;\n    renderRow: (rowData: any, index: number) => JSX.Element;\n    noRowsMessage?: string | JSX.Element;\n\n    /* Simple Mode - Automatically handles styling, so you can focus on data. */\n    columns?: DropdownChoice[]; // value: attribute, label: the title appearing on the header\n    canFilter?: boolean;\n    canSort?: boolean;\n\n    stickyHeader?: boolean;\n    canOverflow?: boolean;\n    rowsPerPageOptions?: number[];\n    labelRowsPerPage?: string;\n    onChangeInfo?: (info: LabelDisplayedRowsArgs) => string;\n\n    onChangeState?: (page: number, rowsPerPage: number) => void;\n}\n\ninterface IStates {\n    page: number;\n    rowsPerPage: number;\n    \n    filterData: any;\n}\n\nexport class CustomTable extends React.PureComponent<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            page: 0,\n            rowsPerPage: 0,\n\n            filterData: {}\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.rowsPerPageOptions) {\n            this.setState({rowsPerPage: this.props.rowsPerPageOptions[0]});\n        }\n    }\n\n    handleChangePage = (_event: unknown, page: number) => {\n        this.setState({page: page});\n    }\n    \n    handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({\n            rowsPerPage: parseInt(event.target.value, 10),\n            page: 0\n        });\n    }\n\n    resetPage = () => {\n        this.setState({page: 0});\n    }\n\n    getSlicedData = () => {\n        if (this.props.rowsPerPageOptions) {\n            const startingItem = this.state.page * this.state.rowsPerPage;\n            return this.props.rows.slice(startingItem, startingItem + this.state.rowsPerPage);\n        } else {\n            return this.props.rows;\n        }\n    }\n\n    componentWillUpdate(_props: IProps, state: IStates) {\n        if (this.state.page != state.page ||\n            this.state.rowsPerPage != state.rowsPerPage) {\n            if (this.props.onChangeState) {\n                this.props.onChangeState(state.page, state.rowsPerPage);\n            }\n        }\n    }\n\n    render(): JSX.Element {\n        return (\n            <>\n            <div style={{overflow: this.props.canOverflow ? 'auto' : 'none'}}>\n                <Table \n                    className={`${(this.props.className ? this.props.className : '')} table`} \n                    stickyHeader={this.props.stickyHeader ? this.props.stickyHeader : false}>\n                    <TableHead>\n                        {this.props.columns ? (\n                            <TableRow>\n                                {this.props.columns.map(column => {\n                                    return <TableCell>{column.label}</TableCell>\n                                })}\n                            </TableRow>\n                        ) : this.props.renderHeader ? (\n                            <TableRow>\n                                {this.props.renderHeader()}\n                            </TableRow>\n                        ) : null}\n                    </TableHead>\n                    <TableBody>\n                        {this.props.renderRow ? (\n                            this.props.rows.length > 0 ? (\n                                this.getSlicedData().map((row, j) => {\n                                    return this.props.renderRow(row, j)\n                                })  \n                            ) : (\n                                <TableRow>\n                                    <TableCell colSpan={999} style={{textAlign: 'center'}}>\n                                        {this.props.noRowsMessage ? this.props.noRowsMessage : 'No data found'}\n                                    </TableCell>\n                                </TableRow>\n                            )\n                        ) : null}\n                    </TableBody>\n                </Table>\n            </div>\n            {this.props.rowsPerPageOptions ? (\n                <TablePagination\n                    className={`${(this.props.paginationClass ? this.props.paginationClass : '')} pagination MuiTablePagination-root`}\n                    rowsPerPageOptions={this.props.rowsPerPageOptions}\n                    count={this.props.rows.length}\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    labelDisplayedRows={(info: LabelDisplayedRowsArgs) => {\n                        return (\n                            this.props.onChangeInfo ? (\n                                this.props.onChangeInfo(info)\n                            ) : (\n                                `${info.from}-${info.to} of ${info.count}`\n                            ));\n                    }}\n                    labelRowsPerPage={\n                        this.props.labelRowsPerPage ? (\n                            this.props.labelRowsPerPage\n                        ) : (\n                            'Rows per page:'\n                        )}\n                    onChangePage={(_event: unknown, page: number) => {\n                        this.setState({page: page});\n                    }}\n                    onChangeRowsPerPage={(event: React.ChangeEvent<HTMLInputElement>) => {\n                        this.setState({\n                            rowsPerPage: parseInt(event.target.value, 10),\n                            page: 0\n                        });\n                    }} />\n            ) : null}\n            </>\n        );\n    }\n}","\n\nimport * as React from 'react';\n// import { Link } from '@material-ui/core';\nimport './component-style.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconProp, SizeProp } from '@fortawesome/fontawesome-svg-core';\n\ninterface IProps {\n    icon: IconProp;\n    onClick: () => void;\n    size?: SizeProp;\n}\n\nexport class IconButton extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <div className='icon-button' onClick={() => this.props.onClick()}>\n                {this.props.icon ? <FontAwesomeIcon icon={this.props.icon} size={this.props.size} /> : null}\n            </div>\n        );\n    }\n}","let backendUrl = process.env.REACT_APP_BASE_URL;\n\nexport class API {\n\n    // //local\n    // static localUrl = 'https://neo-local.seerlabs.com/api';\n    \n    // //stg\n    // static stgUrl = 'http://18.138.94.224:4101/api';\n    \n    static async get(url: string, success: Function, fail: Function) {\n        // const backendUrl = (process.env.NODE_ENV === 'development' ? this.localUrl : this.stgUrl);\n        fetch(backendUrl + url, {\n            method: 'GET',\n            headers: { \n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('pm_token'),\n            }\n        })\n        .then(response => response.json())\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n    \n    static async post(url: string, body: any, success: Function, fail: Function) {\n        // const backendUrl = (process.env.NODE_ENV === 'development' ? this.localUrl : this.stgUrl);\n        fetch(backendUrl + url, {\n            method: 'POST',\n            headers: { \n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('pm_token'),\n            },\n            body: JSON.stringify(body)\n        })\n        .then(response => response.json())\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async put(url: string, body: any, success: Function, fail: Function) {\n        // const backendUrl = (process.env.NODE_ENV === 'development' ? this.localUrl : this.stgUrl);\n        fetch(backendUrl + url, {\n            method: 'PUT',\n            headers: { \n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('pm_token'),\n            },\n            body: JSON.stringify(body)\n        })\n        .then(response => response)\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n}","import { createMuiTheme, makeStyles, createStyles, withStyles } from '@material-ui/core/styles';\nimport React__default, { useState, createElement, useEffect, Component as Component$2, lazy, Suspense } from 'react';\nimport Select from 'react-select';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ChipInput from 'material-ui-chip-input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Select$1 from '@material-ui/core/Select';\nimport ExpandMoreRounded from '@material-ui/icons/ExpandMoreRounded';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckSquare, faHome, faPlusCircle, faUsers, faFileSignature, faIdCardAlt, faTasks, faTable, faFolderOpen, faUserFriends, faScrewdriver, faBookOpen } from '@fortawesome/free-solid-svg-icons';\nimport { faSquare } from '@fortawesome/free-regular-svg-icons';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport Avatar from '@material-ui/core/Avatar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport Drawer from '@material-ui/core/Drawer';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Popper from '@material-ui/core/Popper';\nimport { Fade, Paper as Paper$1, List as List$1, ListItem as ListItem$1, ListItemIcon as ListItemIcon$1, ListItemText as ListItemText$1 } from '@material-ui/core';\nimport { useStore, Provider as Provider$1, useSelector } from 'react-redux';\nimport { routerMiddleware, ConnectedRouter } from 'connected-react-router';\nimport { HashRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/styles';\nimport invariant from 'invariant';\nimport conformsTo from 'lodash/conformsTo';\nimport isFunction from 'lodash/isFunction';\nimport isObject from 'lodash/isObject';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createBrowserHistory } from 'history';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport isEmpty from 'lodash/isEmpty';\nimport isString from 'lodash/isString';\nimport { createSelector } from 'reselect';\nimport { IntlProvider, defineMessages, FormattedMessage } from 'react-intl';\nvar index =\n/*#__PURE__*/\nObject.freeze({});\nvar index$1 =\n/*#__PURE__*/\nObject.freeze({});\nvar index$2 =\n/*#__PURE__*/\nObject.freeze({}); // This optional code is used to register a service worker.\n// register() is not called by default.\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nvar isLocalhost = Boolean(window.location.hostname === 'localhost' || // [::1] is the IPv6 localhost address.\nwindow.location.hostname === '[::1]' || // 127.0.0.1/8 is considered localhost for IPv4.\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nfunction register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    var publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', function () {\n      var swUrl = process.env.PUBLIC_URL + \"/service-worker.js\";\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config); // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n\n        navigator.serviceWorker.ready.then(function () {\n          console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker.register(swUrl).then(function (registration) {\n    registration.onupdatefound = function () {\n      var installingWorker = registration.installing;\n\n      if (installingWorker == null) {\n        return;\n      }\n\n      installingWorker.onstatechange = function () {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            // At this point, the updated precached content has been fetched,\n            // but the previous service worker will still serve the older\n            // content until all client tabs are closed.\n            console.log('New content is available and will be used when all ' + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'); // Execute callback\n\n            if (config && config.onUpdate) {\n              config.onUpdate(registration);\n            }\n          } else {\n            // At this point, everything has been precached.\n            // It's the perfect time to display a\n            // \"Content is cached for offline use.\" message.\n            console.log('Content is cached for offline use.'); // Execute callback\n\n            if (config && config.onSuccess) {\n              config.onSuccess(registration);\n            }\n          }\n        }\n      };\n    };\n  }).catch(function (error) {\n    console.error('Error during service worker registration:', error);\n  });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl).then(function (response) {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    var contentType = response.headers.get('content-type');\n\n    if (response.status === 404 || contentType != null && contentType.indexOf('javascript') === -1) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then(function (registration) {\n        registration.unregister().then(function () {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  }).catch(function () {\n    console.log('No internet connection found. App is running in offline mode.');\n  });\n}\n\nfunction unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function (registration) {\n      registration.unregister();\n    });\n  }\n}\n\nvar service_worker =\n/*#__PURE__*/\nObject.freeze({\n  register: register,\n  unregister: unregister\n});\nvar index$3 =\n/*#__PURE__*/\nObject.freeze({\n  ServiceWorker: service_worker\n});\nvar index$4 =\n/*#__PURE__*/\nObject.freeze({});\nvar BaseTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#3ab77d',\n      contrastText: '#ffffff'\n    },\n    secondary: {\n      main: '#ffffff',\n      contrastText: '#3ab77d'\n    }\n  },\n  typography: {\n    fontFamily: 'Usual, Roboto, Helvetica, Arial, sans-serif',\n    button: {\n      fontFamily: 'Usual, Roboto, Helvetica, Arial, sans-serif',\n      fontWeight: 700,\n      fontSize: 13,\n      textTransform: 'none'\n    }\n  },\n  overrides: {\n    MuiDialog: {\n      root: {\n        width: '100%'\n      }\n    },\n    MuiDialogTitle: {\n      root: {\n        fontFamily: 'Usual, Roboto, Helvetica, Arial, sans-serif',\n        fontWeight: 550,\n        fontSize: '1em',\n        color: '#272E4C'\n      }\n    },\n    MuiDialogContentText: {\n      root: {\n        fontSize: '.8em',\n        color: '#272E4C'\n      }\n    },\n    MuiFormControlLabel: {\n      label: {\n        fontSize: '.8em',\n        color: '#272E4C'\n      }\n    },\n    MuiIconButton: {\n      root: {\n        fontSize: '.9em'\n      }\n    },\n    MuiButton: {\n      containedPrimary: {\n        boxShadow: '0px 3px 6px #1e207129',\n        '&:hover': {\n          backgroundColor: '#008650'\n        }\n      },\n      containedSecondary: {\n        border: '1px solid #0000001A',\n        boxShadow: '0px 1px 3px #00000033',\n        '&:hover': {\n          backgroundColor: '#3ab77d1a'\n        }\n      },\n      outlinedSecondary: {\n        border: '1px solid #3ab77d',\n        boxShadow: '0px 1px 3px #00000033',\n        '&:hover': {\n          backgroundColor: '#3ab77d1a'\n        }\n      }\n    }\n  }\n});\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\n\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n}\n\nvar labelColor = 'rgb(21,28,28)';\nvar grayColor = 'rgba(39,52,76,0.3)';\nvar grayColorFocused = 'rgba(39,52,76,0.5)';\nvar borderCss = {\n  borderColor: grayColor,\n  borderRadius: 5\n};\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      width: '100%'\n    },\n    control: {\n      '& label.Mui-focused': {\n        color: labelColor\n      },\n      '& .MuiInput-underline:after': {\n        borderBottomColor: grayColor\n      },\n      '& .MuiOutlinedInput-root': {\n        '& fieldset': borderCss,\n        '&:hover fieldset': borderCss,\n        '&.Mui-focused fieldset': _assign(_assign({}, borderCss), {\n          borderColor: grayColorFocused\n        })\n      }\n    },\n    input: {\n      display: 'flex'\n    },\n    label: {},\n    select: {\n      marginTop: theme.spacing(1),\n      backgroundColor: 'white',\n      width: '100%'\n    },\n    valueContainer: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      flex: 1,\n      alignItems: 'center',\n      overflow: 'hidden'\n    },\n    noOptionsMessage: {\n      padding: theme.spacing(1, 2)\n    },\n    singleValue: {\n      fontSize: 16\n    },\n    placeholder: {\n      position: 'absolute',\n      left: 2,\n      bottom: 6,\n      fontSize: 16\n    },\n    paper: {\n      position: 'absolute',\n      zIndex: 999,\n      left: 0,\n      right: 0\n    }\n  });\n});\n\nfunction NoOptionsMessage(props) {\n  return React__default.createElement(Typography, _assign({\n    color: \"textSecondary\",\n    className: props.selectProps.classes.noOptionsMessage\n  }, props.innerProps), props.children);\n}\n\nfunction inputComponent(_a) {\n  var inputRef = _a.inputRef,\n      props = __rest(_a, [\"inputRef\"]);\n\n  return React__default.createElement(\"div\", _assign({\n    ref: inputRef\n  }, props));\n}\n\nfunction Control(props) {\n  var children = props.children,\n      innerProps = props.innerProps,\n      innerRef = props.innerRef,\n      _a = props.selectProps,\n      classes = _a.classes,\n      TextFieldProps = _a.TextFieldProps;\n  return React__default.createElement(TextField, _assign({\n    className: classes.control,\n    InputProps: {\n      inputComponent: inputComponent,\n      inputProps: _assign({\n        className: classes.input,\n        ref: innerRef,\n        children: children\n      }, innerProps)\n    }\n  }, TextFieldProps, {\n    variant: \"outlined\",\n    fullWidth: true\n  }));\n}\n\nfunction Option(props) {\n  return React__default.createElement(MenuItem, _assign({\n    ref: props.innerRef,\n    selected: props.isFocused,\n    component: \"div\",\n    style: {\n      fontWeight: props.isSelected ? 500 : 400\n    }\n  }, props.innerProps), props.children);\n}\n\nfunction Placeholder(props) {\n  var selectProps = props.selectProps,\n      _a = props.innerProps,\n      innerProps = _a === void 0 ? {} : _a,\n      children = props.children;\n  return React__default.createElement(Typography, _assign({\n    color: \"textSecondary\",\n    className: selectProps.classes.placeholder\n  }, innerProps), children);\n}\n\nfunction SingleValue(props) {\n  return React__default.createElement(Typography, _assign({\n    className: props.selectProps.classes.singleValue\n  }, props.innerProps), props.children);\n}\n\nfunction ValueContainer(props) {\n  return React__default.createElement(\"div\", {\n    className: props.selectProps.classes.valueContainer\n  }, props.children);\n}\n\nfunction Menu(props) {\n  return React__default.createElement(Paper, _assign({\n    square: true,\n    className: props.selectProps.classes.paper\n  }, props.innerProps), props.children);\n}\n\nvar components = {\n  Control: Control,\n  Menu: Menu,\n  Option: Option,\n  NoOptionsMessage: NoOptionsMessage,\n  Placeholder: Placeholder,\n  SingleValue: SingleValue,\n  ValueContainer: ValueContainer\n};\n\nvar InputAutocomplete = function InputAutocomplete(props) {\n  var classes = useStyles();\n\n  var _a = React__default.useState(null),\n      single = _a[0],\n      setSingle = _a[1];\n\n  function handleChange(optionItem) {\n    setSingle(optionItem);\n\n    if (props.onChange) {\n      props.onChange(optionItem);\n    }\n  }\n\n  return React__default.createElement(FormControl, {\n    className: classes.root\n  }, React__default.createElement(Typography, {\n    className: classes.label,\n    color: \"textPrimary\"\n  }, props.label), React__default.createElement(NoSsr, null, React__default.createElement(Select, {\n    className: classes.select,\n    classes: classes,\n    inputId: props.inputId,\n    TextFieldProps: {\n      error: props.error\n    },\n    placeholder: \"\",\n    options: props.suggestions,\n    components: components,\n    value: single,\n    onChange: handleChange,\n    isSearchable: true,\n    isClearable: true\n  })));\n};\n\nInputAutocomplete.defaultProps = {\n  error: false\n};\nvar index$5 =\n/*#__PURE__*/\nObject.freeze({\n  InputAutocomplete: InputAutocomplete\n});\nvar labelColor$1 = 'rgb(21,28,28)';\nvar grayColor$1 = 'rgba(39,52,76,0.3)';\nvar grayColorFocused$1 = 'rgba(39,52,76,0.5)';\nvar borderCss$1 = {\n  borderColor: grayColor$1,\n  borderRadius: 5\n};\nvar useStyles$1 = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    label: {},\n    textField: {\n      '& label.Mui-focused': {\n        color: labelColor$1\n      },\n      '& .MuiInput-underline:after': {\n        borderBottomColor: grayColor$1\n      },\n      '& .MuiOutlinedInput-root': {\n        '& fieldset': borderCss$1,\n        '&:hover fieldset': borderCss$1,\n        '&.Mui-focused fieldset': _assign(_assign({}, borderCss$1), {\n          borderColor: grayColorFocused$1\n        })\n      },\n      '&': {\n        marginTop: theme.spacing(1),\n        backgroundColor: 'white',\n        width: '100%'\n      }\n    }\n  };\n});\n\nvar InputChipTextField = function InputChipTextField(props) {\n  var classes = useStyles$1();\n\n  var _a = useState(props.value || []),\n      currentValue = _a[0],\n      setcurrentValue = _a[1];\n\n  var onChange = function onChange(chips) {\n    setcurrentValue(chips);\n\n    if (props.onChange) {\n      props.onChange(chips);\n    }\n  };\n\n  return React__default.createElement(FormControl, {\n    className: classes.root\n  }, React__default.createElement(Typography, {\n    className: classes.label,\n    color: \"textPrimary\"\n  }, props.label), React__default.createElement(ChipInput, {\n    id: props.id,\n    className: classes.textField,\n    defaultValue: currentValue,\n    onChange: onChange,\n    error: props.error,\n    variant: \"outlined\"\n  }));\n};\n\nInputChipTextField.defaultProps = {\n  label: '',\n  value: [],\n  error: false,\n  multiline: false,\n  rows: 1,\n  onChange: function onChange(chips) {\n    console.log(chips);\n  }\n};\nvar index$6 =\n/*#__PURE__*/\nObject.freeze({\n  InputChipTextField: InputChipTextField\n});\nvar labelColor$2 = 'rgb(21,28,28)';\nvar grayColor$2 = 'rgba(39,52,76,0.3)';\nvar grayColorFocused$2 = 'rgba(39,52,76,0.5)';\nvar borderCss$2 = {\n  borderColor: grayColor$2,\n  borderRadius: 5\n};\nvar borderStyles = {\n  root: {\n    '& label.Mui-focused': {\n      color: labelColor$2\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: grayColor$2\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': borderCss$2,\n      '&:hover fieldset': borderCss$2,\n      '&.Mui-focused fieldset': _assign(_assign({}, borderCss$2), {\n        borderColor: grayColorFocused$2\n      })\n    }\n  }\n};\nvar useStyles$2 = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    formControl: {\n      width: '100%'\n    },\n    label: {\n      fontSize: '.8em'\n    },\n    select: {\n      marginTop: theme.spacing(1),\n      backgroundColor: 'white'\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    },\n    icon: {\n      marginRight: theme.spacing(2.5),\n      color: grayColor$2\n    }\n  };\n}); // const StyledFormControl = withStyles(borderStyles)(FormControl);\n\nvar StyledOutlinedInput = withStyles(borderStyles)(OutlinedInput);\n\nvar InputSelect = function InputSelect(props) {\n  var defaultValue = {\n    id: -1,\n    value: '',\n    label: ''\n  };\n\n  var items = __spreadArrays([defaultValue], props.data);\n\n  var getDefaultValue = function getDefaultValue() {\n    if (props.value) {\n      var defVal = items.find(function (item) {\n        return item.value === props.value;\n      });\n\n      if (defVal) {\n        return defVal;\n      }\n    }\n\n    return defaultValue;\n  };\n\n  var classes = useStyles$2();\n\n  var _a = useState(getDefaultValue()),\n      currentValue = _a[0],\n      setCurrentValue = _a[1];\n\n  var inputLabel = React__default.useRef(null);\n  var labelWidth = React__default.useState(0)[0]; // React.useEffect(() => {\n  //   setLabelWidth(inputLabel.current!.offsetWidth);\n  // }, []);\n\n  var onChange = function onChange(e) {\n    var selectedItem = items.find(function (item) {\n      return item.value === e.target.value;\n    }) || defaultValue;\n    setCurrentValue(selectedItem);\n\n    if (props.onChange) {\n      props.onChange(selectedItem);\n    }\n  };\n\n  var displaySelectItem = function displaySelectItem(props, selectItem) {\n    if (props.displaySelectItem) {\n      return props.displaySelectItem(selectItem);\n    }\n\n    var disabled = selectItem.id === -1 && props.required;\n    return React__default.createElement(MenuItem, {\n      key: selectItem.id,\n      value: selectItem.value,\n      disabled: disabled\n    }, selectItem.label);\n  };\n\n  return React__default.createElement(\"div\", {\n    className: classes.formControl\n  }, props.label ? React__default.createElement(InputLabel, {\n    color: \"textPrimary\",\n    className: classes.label,\n    ref: inputLabel,\n    htmlFor: props.id,\n    error: props.error\n  }, props.label) : null, React__default.createElement(Select$1, {\n    className: classes.select,\n    value: currentValue.value,\n    onChange: onChange,\n    input: React__default.createElement(StyledOutlinedInput, {\n      id: props.id,\n      name: props.id,\n      error: props.error,\n      labelWidth: labelWidth,\n      fullWidth: true\n    }),\n    IconComponent: function IconComponent() {\n      return React__default.createElement(ExpandMoreRounded, {\n        className: classes.icon\n      });\n    }\n  }, items.map(function (item) {\n    return displaySelectItem(props, item);\n  })));\n};\n\nInputSelect.defaultProps = {\n  value: '',\n  error: false,\n  required: false,\n  onChange: function onChange(value) {\n    console.log(value);\n  }\n};\nvar index$7 =\n/*#__PURE__*/\nObject.freeze({\n  InputSelect: InputSelect\n});\nvar labelColor$3 = 'rgb(21,28,28)';\nvar grayColor$3 = 'rgba(39,52,76,0.3)';\nvar grayColorFocused$3 = 'rgba(39,52,76,0.5)';\nvar borderCss$3 = {\n  borderColor: grayColor$3,\n  borderRadius: 5\n};\nvar borderStyles$1 = {\n  root: {\n    '& label.Mui-focused': {\n      color: labelColor$3\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: grayColor$3\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': borderCss$3,\n      '&:hover fieldset': borderCss$3,\n      '&.Mui-focused fieldset': _assign(_assign({}, borderCss$3), {\n        borderColor: grayColorFocused$3\n      })\n    }\n  },\n  input: {\n    fontSize: 14 // input: {\n    //   '&:focus': {\n    //     borderRadius: 4,\n    //     borderColor: '#80bdff',\n    //     boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    //   }\n    // }\n\n  }\n};\nvar useStyles$3 = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    formControl: {\n      width: '100%'\n    },\n    label: {\n      fontSize: '.8em'\n    },\n    select: {\n      marginTop: theme.spacing(1),\n      backgroundColor: 'white'\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    },\n    icon: {\n      marginRight: theme.spacing(2.5),\n      color: grayColor$3\n    },\n    error: {\n      color: '#E53935',\n      fontSize: '12px'\n    },\n    errorIcon: {\n      color: '#E53935',\n      fontSize: 'small',\n      float: 'right'\n    }\n  };\n}); // const StyledFormControl = withStyles(borderStyles)(FormControl);\n\nvar StyledOutlinedInput$1 = withStyles(borderStyles$1)(OutlinedInput);\n\nvar InputSelectSetValue = function InputSelectSetValue(props) {\n  var items = __spreadArrays(props.data);\n\n  var classes = useStyles$3();\n  var inputLabel = React__default.useRef(null);\n  var labelWidth = React__default.useState(0)[0]; // React.useEffect(() => {\n  //   setLabelWidth(inputLabel.current!.offsetWidth);\n  // }, []);\n\n  var onChange = function onChange(e) {\n    var selectedItem = items.find(function (item) {\n      return item.value === e.target.value;\n    });\n\n    if (props.onChange) {\n      props.onChange(selectedItem);\n    }\n  };\n\n  var displaySelectItem = function displaySelectItem(props, selectItem) {\n    if (props.displaySelectItem) {\n      return props.displaySelectItem(selectItem);\n    }\n\n    var disabled = selectItem.id === -1 && props.required;\n    return React__default.createElement(MenuItem, {\n      key: selectItem.id,\n      value: selectItem.value,\n      disabled: disabled\n    }, selectItem.label);\n  };\n\n  return React__default.createElement(\"div\", {\n    className: classes.formControl\n  }, React__default.createElement(InputLabel, {\n    color: \"textPrimary\",\n    className: classes.label,\n    ref: inputLabel,\n    htmlFor: props.id\n  }, props.label), React__default.createElement(Select$1, {\n    className: classes.select,\n    value: props.value,\n    onChange: onChange,\n    disabled: props.disabled,\n    input: React__default.createElement(StyledOutlinedInput$1, {\n      id: props.id,\n      name: props.id,\n      error: props.error,\n      labelWidth: labelWidth,\n      fullWidth: true,\n      disabled: props.disabled\n    }),\n    IconComponent: function IconComponent() {\n      return React__default.createElement(ExpandMoreRounded, {\n        className: classes.icon\n      });\n    }\n  }, items.map(function (item) {\n    return displaySelectItem(props, item);\n  })), props.error && React__default.createElement(\"div\", {\n    className: classes.formControl\n  }, React__default.createElement(FormHelperText, {\n    id: \"component-error-text\",\n    className: classes.error\n  }, props.errorMessage, React__default.createElement(ErrorIcon, {\n    className: classes.errorIcon\n  }))));\n};\n\nInputSelectSetValue.defaultProps = {\n  label: '',\n  value: '',\n  error: false,\n  errorMessage: '',\n  required: false,\n  disabled: false,\n  onChange: function onChange(value) {\n    console.log(value);\n  }\n};\nvar index$8 =\n/*#__PURE__*/\nObject.freeze({\n  InputSelectSetValue: InputSelectSetValue\n});\nvar useStyles$4 = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    label: {\n      fontSize: '.8em'\n    },\n    textField: {\n      marginTop: theme.spacing(1),\n      backgroundColor: 'white',\n      fontSize: '14px'\n    },\n    error: {\n      color: '#E53935',\n      fontSize: '12px'\n    },\n    errorIcon: {\n      color: '#E53935',\n      fontSize: 'small',\n      float: 'right'\n    }\n  };\n});\nvar labelColor$4 = 'rgb(21,28,28)';\nvar grayColor$4 = 'rgba(39,52,76,0.3)';\nvar grayColorFocused$4 = 'rgba(39,52,76,0.5)';\nvar borderCss$4 = {\n  borderColor: grayColor$4,\n  borderRadius: 5\n};\nvar StyledTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: labelColor$4\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: grayColor$4\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': borderCss$4,\n      '&:hover fieldset': borderCss$4,\n      '&.Mui-focused fieldset': _assign(_assign({}, borderCss$4), {\n        borderColor: grayColorFocused$4\n      })\n    }\n  }\n})(TextField);\n\nvar InputTextField = function InputTextField(props) {\n  var classes = useStyles$4();\n\n  var onChange = function onChange(e) {\n    var value = e.target.value;\n\n    if (props.onChange) {\n      props.onChange(value);\n    }\n  };\n\n  return React__default.createElement(\"div\", {\n    className: classes.root\n  }, props.label ? React__default.createElement(InputLabel, {\n    htmlFor: props.id,\n    className: classes.label,\n    color: \"textPrimary\"\n  }, props.label) : null, React__default.createElement(StyledTextField, {\n    id: props.id,\n    className: classes.textField,\n    value: props.value,\n    onChange: onChange,\n    error: props.error,\n    multiline: props.multiline,\n    rows: props.rows,\n    type: props.type,\n    fullWidth: true,\n    disabled: props.disabled,\n    variant: \"outlined\"\n  }), props.error && React__default.createElement(\"div\", {\n    className: classes.root\n  }, React__default.createElement(FormHelperText, {\n    id: \"component-error-text\",\n    className: classes.error\n  }, props.errorMessage, React__default.createElement(ErrorIcon, {\n    className: classes.errorIcon\n  }))));\n};\n\nInputTextField.defaultProps = {\n  type: 'text',\n  value: '',\n  error: false,\n  errorMessage: '',\n  multiline: false,\n  disabled: false,\n  rows: 1,\n  onChange: function onChange(value) {\n    console.log(\"InputTextField.defaultProps - Value: \" + value);\n  }\n};\nvar index$9 =\n/*#__PURE__*/\nObject.freeze({\n  InputTextField: InputTextField\n}); //declare class to style components\n\nvar useStyles$5 = makeStyles(function (theme) {\n  return {\n    root: {\n      flexWrap: 'wrap'\n    },\n    inputSelect: {\n      marginBottom: theme.spacing(1)\n    },\n    dialog: {\n      align: 'center',\n      justify: 'center',\n      width: '100%'\n    },\n    dialogContent: {\n      paddingTop: '0px'\n    },\n    container: {\n      paddingRight: '15px',\n      paddingLeft: '15px'\n    },\n    dialogTitle: {\n      marginTop: theme.spacing(2)\n    },\n    dialogContentTitle: {},\n    dialogContentText: {},\n    formControlLabel: {},\n    textField: {},\n    checkBox: {\n      paddingLeft: '10px'\n    },\n    dialogAction: {\n      marginBottom: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      justifyContent: 'center'\n    },\n    resolveDialogAction: {\n      marginBottom: theme.spacing(2),\n      marginTop: theme.spacing(4),\n      justifyContent: 'center'\n    },\n    leftButton: {\n      width: 115,\n      marginLeft: 15,\n      marginRight: 10\n    },\n    rightButton: {\n      width: 115,\n      marginLeft: 10,\n      marginRight: 15\n    }\n  };\n});\nvar StyledCheckbox = withStyles({\n  root: {\n    color: '#9EA3AC',\n    '&$checked': {\n      color: '#1E2071'\n    }\n  },\n  checked: {}\n})(Checkbox);\n\nvar TicketModal = function TicketModal(props) {\n  var classes = useStyles$5();\n\n  var _a = React__default.useState({\n    notes: '',\n    notesError: false,\n    isResolved: false\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  var _b = useState(true),\n      disabled = _b[0],\n      setDisabled = _b[1]; //reset values and close dialog\n\n\n  var handleClose = function handleClose() {\n    setDisabled(true);\n    setState({\n      notes: '',\n      notesError: false,\n      isResolved: false\n    });\n    props.onClose();\n  }; //changes state of the changed values\n\n\n  var setFieldValue = function setFieldValue(fieldName, value) {\n    setState(function (state) {\n      var _a;\n\n      return _assign(_assign({}, state), (_a = {}, _a[fieldName] = value, _a));\n    });\n  };\n\n  var setFieldError = function setFieldError(fieldName, error) {\n    setState(function (state) {\n      var _a;\n\n      return _assign(_assign({}, state), (_a = {}, _a[fieldName] = error, _a));\n    });\n  };\n  /* render ticket management modal in 3 different types (Resolve, Assign, Escalate)\r\n      Sample usage :\r\n      import { Components } from '@hims/core';\r\n      const Modal = Components.UI.TicketModal.TicketModal;\r\n         <Modal\r\n                    type=\"Escalate\" (Resolve/Assign/Escalate) - is not case sensitive but will render title as is\r\n                    onClose={this.onAddDataFieldModalClose}\r\n                    isModalOpen={ticketModal}\r\n                    selectItems={[{\"id\":0,\"value\":'Jae',\"label\":'Jae'},{\"id\":1,\"value\":'Lambert',\"label\":'Lambert'},{\"id\":2,\"value\":'Bau',\"label\":'Bau'}]}\r\n                    onSubmit={this.onAddDataFieldModalClose}\r\n          />\r\n  */\n\n\n  var component = React__default.createElement(\"div\", null);\n\n  switch (props.type.toLowerCase()) {\n    case 'resolve':\n      console.log('in resolve');\n      component = React__default.createElement(\"div\", null, React__default.createElement(Grid, {\n        container: true,\n        className: classes.container,\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        direction: \"column\"\n      }, React__default.createElement(Grid, {\n        item: true,\n        xs: true\n      }, React__default.createElement(DialogTitle, {\n        disableTypography: true,\n        id: \"dialog-title\",\n        className: classes.dialogTitle\n      }, props.type, \" Ticket\")), React__default.createElement(Grid, {\n        item: true,\n        xs: true\n      }, React__default.createElement(DialogContent, {\n        className: classes.dialogContent\n      }, React__default.createElement(DialogContentText, {\n        className: classes.dialogContentText,\n        id: \"alert-dialog-description\"\n      }, \"How was the issue resolved?\"), React__default.createElement(InputTextField, {\n        value: state.notes,\n        error: state.notesError,\n        multiline: true,\n        rows: 4,\n        onChange: function onChange(value) {\n          setFieldValue('notes', value);\n          setFieldError('notesError', value.length === 0);\n        }\n      })), React__default.createElement(Grid, {\n        item: true,\n        xs: true\n      }, React__default.createElement(DialogContent, {\n        className: classes.dialogContent\n      }, React__default.createElement(FormControlLabel, {\n        className: classes.formControlLabel,\n        control: React__default.createElement(StyledCheckbox, {\n          icon: React__default.createElement(FontAwesomeIcon, {\n            icon: faSquare\n          }),\n          checkedIcon: React__default.createElement(FontAwesomeIcon, {\n            icon: faCheckSquare\n          }),\n          color: \"primary\",\n          checked: state.isResolved,\n          onChange: function onChange(value) {\n            setFieldValue('isResolved', value.target.checked);\n            setDisabled(!value.target.checked);\n          },\n          inputProps: {\n            'aria-label': 'primary checkbox'\n          }\n        }),\n        label: \"Mark as resolved\",\n        labelPlacement: \"end\"\n      }))), React__default.createElement(DialogActions, {\n        className: classes.resolveDialogAction\n      }, React__default.createElement(Button, {\n        className: classes.leftButton,\n        variant: \"contained\",\n        onClick: handleClose,\n        color: \"secondary\"\n      }, \"Cancel\"), React__default.createElement(Button, {\n        className: classes.rightButton,\n        variant: \"contained\",\n        disabled: disabled,\n        onClick: props.onSubmit,\n        color: \"primary\"\n      }, \"Resolve\")))));\n      break;\n\n    case 'assign':\n      console.log('in assign');\n      component = React__default.createElement(\"div\", null, React__default.createElement(Grid, {\n        container: true,\n        className: classes.container,\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        direction: \"column\"\n      }, React__default.createElement(Grid, {\n        item: true,\n        xs: true\n      }, React__default.createElement(DialogTitle, {\n        disableTypography: true,\n        id: \"dialog-title\",\n        className: classes.dialogTitle\n      }, props.type, \" Ticket\")), React__default.createElement(Grid, {\n        item: true,\n        xs: true\n      }, React__default.createElement(DialogContent, {\n        className: classes.dialogContent\n      }, React__default.createElement(InputSelect, {\n        id: 'modal-input-select',\n        label: 'Assign To',\n        data: props.selectItems\n      }), React__default.createElement(DialogContentText, null), React__default.createElement(InputTextField, {\n        label: 'Notes',\n        value: state.notes,\n        error: state.notesError,\n        multiline: true,\n        rows: 4,\n        onChange: function onChange(value) {\n          setFieldValue('notes', value);\n          setFieldError('notesError', value.length === 0);\n        }\n      })), React__default.createElement(DialogActions, {\n        className: classes.dialogAction\n      }, React__default.createElement(Button, {\n        className: classes.leftButton,\n        variant: \"contained\",\n        onClick: handleClose,\n        color: \"secondary\"\n      }, \"Cancel\"), React__default.createElement(Button, {\n        className: classes.rightButton,\n        variant: \"contained\",\n        onClick: props.onSubmit,\n        color: \"primary\"\n      }, \"Assign\")))));\n      break;\n\n    case 'escalate':\n      console.log('in escalate');\n      component = React__default.createElement(\"div\", null, React__default.createElement(Grid, {\n        container: true,\n        className: classes.container,\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        direction: \"column\"\n      }, React__default.createElement(Grid, {\n        item: true,\n        xs: true\n      }, React__default.createElement(DialogTitle, {\n        disableTypography: true,\n        id: \"dialog-title\",\n        className: classes.dialogTitle\n      }, props.type, \" Ticket\")), React__default.createElement(Grid, {\n        item: true,\n        xs: true\n      }, React__default.createElement(DialogContent, {\n        className: classes.dialogContent\n      }, React__default.createElement(InputSelect, {\n        id: 'modal-input-select',\n        label: 'Escalate To',\n        data: props.selectItems\n      }), React__default.createElement(DialogContentText, null), React__default.createElement(InputTextField, {\n        label: 'Notes',\n        value: state.notes,\n        error: state.notesError,\n        multiline: true,\n        rows: 4,\n        onChange: function onChange(value) {\n          setFieldValue('notes', value);\n          setFieldError('notesError', value.length === 0);\n        }\n      })), React__default.createElement(DialogActions, {\n        className: classes.dialogAction\n      }, React__default.createElement(Button, {\n        className: classes.leftButton,\n        variant: \"contained\",\n        onClick: handleClose,\n        color: \"secondary\"\n      }, \"Cancel\"), React__default.createElement(Button, {\n        className: classes.rightButton,\n        variant: \"contained\",\n        onClick: props.onSubmit,\n        color: \"primary\"\n      }, \"Escalate\")))));\n      break;\n  }\n\n  return React__default.createElement(Dialog, {\n    className: classes.dialog,\n    open: props.isModalOpen,\n    \"aria-labelledby\": \"simple-dialog-title\"\n  }, component);\n}; //declare defaults\n\n\nTicketModal.defaultProps = {\n  isModalOpen: false,\n  type: 'Resolve',\n  selectItems: [{\n    \"id\": 0,\n    \"value\": '',\n    \"label\": ''\n  }]\n};\nvar index$a =\n/*#__PURE__*/\nObject.freeze({\n  TicketModal: TicketModal\n});\nvar styles = {\n  \"title\": \"index_title__3_oz-\",\n  \"titleBack\": \"index_titleBack__ghwZN\",\n  \"titleFront\": \"index_titleFront__23_8b\",\n  \"titleContact\": \"index_titleContact__2ETaU\",\n  \"titleRecruitmentTitle\": \"index_titleRecruitmentTitle__eDJJH\"\n}; // #endregion Interface Imports\n\nvar SampleCoreComponent =\n/** @class */\nfunction (_super) {\n  __extends(SampleCoreComponent, _super);\n\n  function SampleCoreComponent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SampleCoreComponent.prototype.render = function () {\n    var text = this.props.text;\n    return React__default.createElement(\"div\", {\n      className: styles.title\n    }, React__default.createElement(\"span\", {\n      className: styles.titleBack\n    }, text), React__default.createElement(\"span\", {\n      className: styles.titleFront\n    }, text));\n  };\n\n  return SampleCoreComponent;\n}(React__default.Component);\n\nvar index$b =\n/*#__PURE__*/\nObject.freeze({\n  SampleCoreComponent: SampleCoreComponent\n});\nvar useStyles$6 = makeStyles(function (theme) {\n  var _a, _b;\n\n  return {\n    appBar: (_a = {\n      backgroundColor: '#ffffff',\n      color: '#808080'\n    }, _a[theme.breakpoints.up('sm')] = {\n      width: 'calc(100% - 85px)'\n    }, _a),\n    menuButton: (_b = {\n      marginRight: theme.spacing(2)\n    }, _b[theme.breakpoints.up('sm')] = {\n      display: 'none'\n    }, _b),\n    logo: {\n      height: '40px'\n    },\n    badge: {\n      backgroundColor: '#ff6969',\n      color: '#ffffff',\n      fontWeight: 700\n    },\n    grow: {\n      flexGrow: 1\n    }\n  };\n});\n\nvar AppHeader = function AppHeader(props) {\n  var classes = useStyles$6();\n\n  var handleMenuOnClick = function handleMenuOnClick() {\n    if (props.menuOnClick) {\n      props.menuOnClick();\n    }\n  }; // const handleNotificationOnClick = () => {\n  //   if (props.notificationOnClick) {\n  //     props.notificationOnClick();\n  //   }\n  // };\n\n\n  var handleUserOnClick = function handleUserOnClick() {\n    if (props.userOnClick) {\n      props.userOnClick();\n    }\n  };\n\n  return React__default.createElement(AppBar, {\n    className: classes.appBar\n  }, React__default.createElement(Toolbar, null, React__default.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    onClick: handleMenuOnClick\n  }, React__default.createElement(MenuIcon, null)), React__default.createElement(Link, {\n    href: \"/\"\n  }, React__default.createElement(\"img\", {\n    src: props.logoImage,\n    className: classes.logo,\n    alt: \"logo\"\n  })), React__default.createElement(\"div\", {\n    className: classes.grow\n  }), React__default.createElement(IconButton, {\n    edge: \"end\",\n    onClick: handleUserOnClick\n  }, React__default.createElement(Avatar, {\n    src: props.userImage,\n    alt: \"avatar\"\n  }))));\n};\n\nAppHeader.defaultProps = {\n  badgeCount: 0\n};\nAppHeader.propTypes = {\n  badgeCount: PropTypes.number\n};\nvar useStyles$7 = makeStyles(function () {\n  return {\n    sideBar: {\n      width: '85px'\n    },\n    listItem: {\n      flexDirection: 'column',\n      marginBottom: '10px'\n    },\n    listItemIcon: {\n      minWidth: 0\n    },\n    avatar: {\n      backgroundColor: 'rgba(158, 164, 172, 0.18)'\n    },\n    avatarSelected: {\n      backgroundColor: 'rgba(98, 255, 183, 0.18)'\n    },\n    listItemText: {\n      fontSize: 9,\n      color: '#ffffff'\n    },\n    listItemTextSelected: {\n      fontSize: 9,\n      color: 'rgba(98, 255, 183, 1)'\n    },\n    icon: {\n      color: 'white'\n    },\n    iconSelected: {\n      color: 'rgba(98, 255, 183, 1)'\n    },\n    divider: {\n      backgroundColor: 'transparent',\n      height: '50px'\n    }\n  };\n});\n\nfunction ListItemLink(props) {\n  return React__default.createElement(ListItem, _assign({\n    button: true,\n    component: \"a\"\n  }, props));\n}\n\nvar AppSidebar = function AppSidebar(props) {\n  var classes = useStyles$7(); // const [selectedItem, setSelectedItem] = useState(\"dashboard\");\n\n  var isSelectedSidebar = function isSelectedSidebar(sidebarItem) {\n    var selectedSidebar = localStorage.getItem('sidebar');\n    var isSelected = selectedSidebar && selectedSidebar === sidebarItem || false;\n    return isSelected;\n  };\n\n  var _a = React__default.useState(true),\n      sidebarChanged = _a[0],\n      setSidebarChanged = _a[1];\n\n  var _b = React__default.useState({\n    dashboard: true,\n    members: false,\n    proposals: false,\n    clients: false,\n    tickets: false,\n    reports: false,\n    templates: false,\n    help: false\n  }),\n      sidebarSelected = _b[0],\n      setSidebarSelected = _b[1];\n\n  var getSidebarSelected = function getSidebarSelected() {\n    setSidebarSelected({\n      dashboard: isSelectedSidebar('dashboard'),\n      members: isSelectedSidebar('members'),\n      proposals: isSelectedSidebar('proposals'),\n      clients: isSelectedSidebar('clients'),\n      tickets: isSelectedSidebar('tickets'),\n      reports: isSelectedSidebar('reports'),\n      templates: isSelectedSidebar('templates'),\n      help: isSelectedSidebar('help')\n    });\n  };\n\n  var onStorageChange = function onStorageChange() {\n    setSidebarChanged(true);\n  };\n\n  React__default.useEffect(function () {\n    if (sidebarChanged) {\n      getSidebarSelected();\n      setSidebarChanged(false);\n    }\n  }, [sidebarChanged]);\n  React__default.useEffect(function () {\n    if (typeof window !== 'undefined') {\n      window.addEventListener('storage', onStorageChange);\n      return function () {\n        window.removeEventListener('storage', onStorageChange);\n      };\n    }\n\n    return undefined;\n  }, []);\n\n  var handleDashboardOnClick = function handleDashboardOnClick(event, attr) {\n    console.log('handleDashboardOnClick event', event);\n    console.log('handleDashboardOnClick attr', attr); // switch (attr) {\n    //   case 'dashboard':\n    //     if (props.page === 'membership') {\n    //       props.history.push('#/membership/', { state: 'dashboard' });\n    //       window.location.reload();\n    //     } else if (props.page === 'underwriting') {\n    //       props.history.push('#/underwriting/', { state: 'dashboard' });\n    //       window.location.reload();\n    //     } else if (props.page === 'customer care') {\n    //       props.history.push('#/customer-care', { state: 'dashboard' });\n    //       window.location.reload();\n    //     }\n    //     break;\n    //   case 'members':\n    //     if (props.page === 'membership') {\n    //       props.history.push('#/membership/members', { state: 'members' });\n    //       window.location.reload();\n    //     }\n    //     break;\n    //   case 'clients':\n    //     if (props.page === 'underwriting') {\n    //       props.history.push('#/underwriting/clients', { state: 'clients' });\n    //       window.location.reload();\n    //     }\n    //     break;\n    //   case 'proposals':\n    //     if (props.page === 'underwriting') {\n    //       props.history.push('#/underwriting/proposals', { state: 'proposals' });\n    //       window.location.reload();\n    //     }\n    //     break;\n    //   case 'create ticket':\n    //     if (props.page === 'customer care') {\n    //       props.history.push('#/customer-care/create-ticket', {\n    //         state: 'create ticket',\n    //       });\n    //       window.location.reload();\n    //     }\n    //     break;\n    // }\n\n    localStorage.setItem('sidebar', attr);\n    setSidebarChanged(true); // setSelectedItem(attr);\n  };\n\n  var handleSidebarClick = function handleSidebarClick(page) {\n    localStorage.setItem('sidebar', page);\n    setSidebarChanged(true);\n  };\n\n  return React__default.createElement(\"div\", {\n    className: classes.sideBar\n  }, React__default.createElement(List, null, props.page !== 'customer care' ? React__default.createElement(ListItemLink, {\n    className: classes.listItem,\n    href: props.page === 'membership' ? '#/membership/' : '#/underwriting/',\n    onClick: function onClick() {\n      handleSidebarClick('dashboard');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faHome,\n    className: sidebarSelected.dashboard ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Dashboard\",\n    disableTypography: true,\n    className: sidebarSelected.dashboard ? classes.listItemTextSelected : classes.listItemText\n  })) : null, props.page === 'customer care' ? React__default.createElement(ListItemLink, {\n    className: classes.listItem,\n    href: '#/customer-care/',\n    onClick: function onClick() {\n      handleSidebarClick('dashboard');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faPlusCircle,\n    className: sidebarSelected.dashboard ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Create New\",\n    disableTypography: true,\n    className: sidebarSelected.dashboard ? classes.listItemTextSelected : classes.listItemText\n  })) : null, props.page !== 'customer care' ? React__default.createElement(ListItemLink, {\n    className: classes.listItem,\n    href: props.page === 'underwriting' ? '#/underwriting/clients' : '',\n    onClick: function onClick() {\n      handleSidebarClick('clients');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faUsers,\n    className: sidebarSelected.clients ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Clients\",\n    disableTypography: true,\n    className: sidebarSelected.clients ? classes.listItemTextSelected : classes.listItemText\n  })) : null, props.page !== 'customer care' ? React__default.createElement(ListItemLink, {\n    className: classes.listItem,\n    href: props.page === 'underwriting' ? '#/underwriting/proposals' : '',\n    onClick: function onClick() {\n      handleSidebarClick('proposals');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faFileSignature,\n    className: sidebarSelected.proposals ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Proposals\",\n    disableTypography: true,\n    className: sidebarSelected.proposals ? classes.listItemTextSelected : classes.listItemText\n  })) : null, props.page === 'membership' ? React__default.createElement(ListItemLink, {\n    className: classes.listItem,\n    href: '#/membership/members',\n    onClick: function onClick() {\n      handleSidebarClick('members');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faIdCardAlt,\n    className: sidebarSelected.members ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Members\",\n    disableTypography: true,\n    className: sidebarSelected.members ? classes.listItemTextSelected : classes.listItemText\n  })) : null, props.page === 'customer care' ? React__default.createElement(ListItemLink, {\n    className: classes.listItem,\n    href: '#/membership/members',\n    onClick: function onClick() {\n      handleSidebarClick('members');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faIdCardAlt,\n    className: sidebarSelected.members ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Members\",\n    disableTypography: true,\n    className: sidebarSelected.members ? classes.listItemTextSelected : classes.listItemText\n  })) : null, props.page === 'customer care' ? React__default.createElement(ListItemLink, {\n    className: classes.listItem,\n    href: '#/customer-care/tickets',\n    onClick: function onClick() {\n      handleSidebarClick('tickets');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faTasks,\n    className: sidebarSelected.tickets ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Tickets\",\n    disableTypography: true,\n    className: classes.listItemText\n  })) : null, props.page !== 'customer care' ? React__default.createElement(ListItem, {\n    button: true,\n    className: classes.listItem,\n    onClick: function onClick(e) {\n      return handleDashboardOnClick(e, 'tickets');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faTasks,\n    className: sidebarSelected.tickets ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Tickets\",\n    disableTypography: true,\n    className: sidebarSelected.tickets ? classes.listItemTextSelected : classes.listItemText\n  })) : null, props.page !== 'customer care' ? React__default.createElement(ListItem, {\n    button: true,\n    className: classes.listItem,\n    onClick: function onClick(e) {\n      return handleDashboardOnClick(e, 'reports');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faTable,\n    className: sidebarSelected.reports ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Reports\",\n    disableTypography: true,\n    className: sidebarSelected.reports ? classes.listItemTextSelected : classes.listItemText\n  })) : null, props.page === 'underwriting' ? React__default.createElement(ListItem, {\n    button: true,\n    className: classes.listItem,\n    onClick: function onClick(e) {\n      return handleDashboardOnClick(e, 'templates');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faFolderOpen,\n    className: sidebarSelected.templates ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Templates\",\n    disableTypography: true,\n    className: sidebarSelected.templates ? classes.listItemTextSelected : classes.listItemText\n  })) : null, props.page === 'membership' ? React__default.createElement(ListItem, {\n    button: true,\n    className: classes.listItem,\n    onClick: function onClick(e) {\n      return handleDashboardOnClick(e, 'users');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faUserFriends,\n    className: classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Users\",\n    disableTypography: true,\n    className: classes.listItemText\n  })) : null, props.page === 'membership' ? React__default.createElement(ListItem, {\n    button: true,\n    className: classes.listItem,\n    onClick: function onClick(e) {\n      return handleDashboardOnClick(e, 'settings');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faScrewdriver,\n    className: classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"settings\",\n    disableTypography: true,\n    className: classes.listItemText\n  })) : null, React__default.createElement(Divider, {\n    className: classes.divider\n  }), React__default.createElement(ListItem, {\n    button: true,\n    className: classes.listItem,\n    onClick: function onClick(e) {\n      return handleDashboardOnClick(e, 'help');\n    }\n  }, React__default.createElement(ListItemIcon, {\n    className: classes.listItemIcon\n  }, React__default.createElement(Avatar, {\n    className: classes.avatar\n  }, React__default.createElement(FontAwesomeIcon, {\n    icon: faBookOpen,\n    className: sidebarSelected.help ? classes.iconSelected : classes.icon\n  }))), React__default.createElement(ListItemText, {\n    primary: \"Help\",\n    disableTypography: true,\n    className: sidebarSelected.help ? classes.listItemTextSelected : classes.listItemText\n  }))));\n};\n\nvar useStyles$8 = makeStyles(function (theme) {\n  var _a;\n\n  return {\n    root: {\n      display: 'flex'\n    },\n    drawer: (_a = {}, _a[theme.breakpoints.up('sm')] = {\n      width: '72px',\n      flexShrink: 0\n    }, _a),\n    drawerPaper: {\n      backgroundColor: '#1e2071'\n    },\n    content: {\n      flexGrow: 1,\n      padding: \"0 \" + theme.spacing(5) + \"px\"\n    },\n    toolbar: theme.mixins.toolbar\n  };\n});\n\nvar AuthenticatedLayout = function AuthenticatedLayout(props) {\n  var classes = useStyles$8();\n\n  var _a = useState(false),\n      mobileOpen = _a[0],\n      setMobileOpen = _a[1];\n\n  var handleDrawerToggle = function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return React__default.createElement(\"div\", {\n    className: classes.root\n  }, React__default.createElement(AppHeader, {\n    logoImage: \"intellicare.png\",\n    userImage: \"user.jpg\",\n    badgeCount: 8,\n    menuOnClick: handleDrawerToggle\n  }), React__default.createElement(\"nav\", {\n    className: classes.drawer\n  }, React__default.createElement(Hidden, {\n    smUp: true,\n    implementation: \"css\"\n  }, React__default.createElement(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    variant: \"temporary\",\n    open: mobileOpen,\n    onClose: handleDrawerToggle\n  }, React__default.createElement(AppSidebar, _assign({}, props)))), React__default.createElement(Hidden, {\n    xsDown: true,\n    implementation: \"css\"\n  }, React__default.createElement(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    variant: \"permanent\",\n    open: true\n  }, React__default.createElement(AppSidebar, _assign({}, props))))), React__default.createElement(\"main\", {\n    className: classes.content\n  }, React__default.createElement(\"div\", {\n    className: classes.toolbar\n  }), props.children));\n};\n\nvar useStyles$9 = makeStyles({\n  root: {\n    backgroundColor: '#ffffff',\n    padding: '10px'\n  },\n  gridContainer: {\n    height: '100px'\n  },\n  breadCrumbs: {\n    marginBottom: '10px'\n  },\n  headerTitle: {\n    fontSize: 25\n  },\n  linkPrevious: {\n    fontSize: 12,\n    fontWeight: 300,\n    color: 'black',\n    cursor: 'pointer'\n  },\n  linkCurrent: {\n    fontSize: 12,\n    color: 'black',\n    cursor: 'pointer'\n  }\n});\n\nvar PageHeader = function PageHeader() {\n  var classes = useStyles$9();\n  return createElement(\"div\", {\n    className: classes.root\n  }, createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"center\",\n    className: classes.gridContainer\n  }, createElement(Grid, {\n    item: true\n  }, createElement(Breadcrumbs, {\n    className: classes.breadCrumbs\n  }, createElement(Link, {\n    className: classes.linkPrevious\n  }, \"CLIENTS\"), createElement(Link, {\n    className: classes.linkCurrent\n  }, \"HAPPY INNOVATIVE TECHNOLOGIES, INC.\")), createElement(Typography, {\n    className: classes.headerTitle\n  }, \"Happy Innovative Technologies, Inc.\")), createElement(Grid, {\n    item: true\n  }, createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\"\n  }, \"Edit Client\"))));\n};\n\nvar index$c =\n/*#__PURE__*/\nObject.freeze({\n  'default': PageHeader\n});\nvar useStyles$a = makeStyles({\n  root: {\n    padding: '5px 5px'\n  },\n  name: function name(props) {\n    return {\n      fontSize: props.nameFontSize,\n      color: 'rgba(39, 46, 76, 0.6)'\n    };\n  },\n  value: function value(props) {\n    return {\n      fontSize: props.valueFontSize,\n      color: 'rgb(39, 46, 76)'\n    };\n  }\n});\n\nvar ClientInfoItem = function ClientInfoItem(props) {\n  var classes = useStyles$a(props);\n  return createElement(\"div\", {\n    className: classes.root\n  }, createElement(Typography, {\n    className: classes.name\n  }, props.name), createElement(Typography, {\n    className: classes.value\n  }, props.value));\n};\n\nClientInfoItem.defaultProps = {\n  nameFontSize: 12,\n  valueFontSize: 16\n};\nvar useStyles$b = makeStyles({\n  grid: function grid(props) {\n    return {\n      height: props.height\n    };\n  }\n});\n\nvar GridHorizontalDivider = function GridHorizontalDivider(props) {\n  var classes = useStyles$b(props);\n  return createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.grid\n  });\n};\n\nGridHorizontalDivider.defaultProps = {\n  height: '10px'\n};\nGridHorizontalDivider.propTypes = {\n  height: PropTypes.string\n};\nvar useCirclePrimitive = makeStyles(function (theme) {\n  var circlePrimitiveStyle = {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    left: '0',\n    top: '0'\n  };\n\n  if (theme.rotate) {\n    Object.assign(circlePrimitiveStyle, {\n      'transform': \"rotate(\" + theme.rotate + \"deg)\"\n    });\n  }\n\n  var circlePrimBeforeStyle = {\n    content: '',\n    display: 'block',\n    margin: '0 auto',\n    width: '15%',\n    height: '15%',\n    backgroundColor: '#999',\n    borderRadius: '100%',\n    '@keyframes circleFadeDelay': {\n      '0%,39%,100%': {\n        opacity: 0\n      },\n      '40%': {\n        opacity: 1\n      }\n    },\n    animation: \"$circleFadeDelay 1.2s infinite ease-in-out both\"\n  };\n\n  if (theme.delay) {\n    Object.assign(circlePrimBeforeStyle, {\n      animationDelay: theme.delay + \"s\"\n    });\n  } // Object.assign(circlePrimitiveStyle, {\n  //   '&:before': circlePrimBeforeStyle,\n  // });\n\n\n  return {\n    root: circlePrimitiveStyle\n  };\n});\n\nvar Circle = function Circle(props) {\n  var classes = useCirclePrimitive(props);\n  return createElement(\"div\", {\n    className: classes.root\n  });\n};\n\nvar useStyles$c = makeStyles({\n  root: {\n    margin: '2em auto',\n    width: '40px',\n    height: '40px',\n    position: 'relative'\n  }\n});\n\nvar Wrapper = function Wrapper(props) {\n  var classes = useStyles$c();\n  return React__default.createElement(\"div\", _assign({\n    className: classes.root\n  }, props));\n};\n\nvar LoadingIndicator = function LoadingIndicator() {\n  return createElement(Wrapper, null, createElement(Circle, null), createElement(Circle, {\n    rotate: 30,\n    delay: -1.1\n  }), createElement(Circle, {\n    rotate: 60,\n    delay: -1\n  }), createElement(Circle, {\n    rotate: 90,\n    delay: -0.9\n  }), createElement(Circle, {\n    rotate: 120,\n    delay: -0.8\n  }), createElement(Circle, {\n    rotate: 150,\n    delay: -0.7\n  }), createElement(Circle, {\n    rotate: 180,\n    delay: -0.6\n  }), createElement(Circle, {\n    rotate: 210,\n    delay: -0.5\n  }), createElement(Circle, {\n    rotate: 240,\n    delay: -0.4\n  }), createElement(Circle, {\n    rotate: 270,\n    delay: -0.3\n  }), createElement(Circle, {\n    rotate: 300,\n    delay: -0.2\n  }), createElement(Circle, {\n    rotate: 330,\n    delay: -0.1\n  }));\n};\n\nvar useStyles$d = makeStyles({\n  previous_page: {\n    fontWeight: 300,\n    textDecoration: 'underline'\n  },\n  current_page: {\n    fontWeight: 600\n  }\n});\n\nvar BreadcrumbsComponent = function BreadcrumbsComponent(props) {\n  var items = props.items;\n  var classes = useStyles$d();\n  return createElement(Breadcrumbs, {\n    \"aria-label\": \"breadcrumb\"\n  }, items.map(function (item, i) {\n    if (item['url'] != \"\") {\n      return createElement(Link, {\n        className: classes.previous_page,\n        key: i,\n        color: \"inherit\",\n        href: item.url\n      }, item.label);\n    } else {\n      return createElement(Typography, {\n        className: classes.current_page,\n        key: i,\n        color: \"textPrimary\"\n      }, item.label);\n    }\n  }));\n};\n\nBreadcrumbsComponent.defaultProps = {\n  items: [{\n    label: \"SAMPLE\",\n    url: \"\"\n  }]\n};\nvar useStyles$e = makeStyles(function (theme) {\n  var _a;\n\n  return {\n    appBar: (_a = {\n      top: 'auto',\n      bottom: 0,\n      border: '1px solid #707070',\n      backgroundColor: 'rgba(54, 54, 54, 0.64)'\n    }, _a[theme.breakpoints.up('sm')] = {\n      width: 'calc(100% - 72px)'\n    }, _a),\n    grow: {\n      flexGrow: 1\n    },\n    button: {\n      margin: '0 10px',\n      minHeight: '42px',\n      minWidth: '150px'\n    },\n    buttonTitle: {\n      fontWeight: 700,\n      fontSize: 13\n    },\n    buttonSubTitle: {\n      fontWeight: 400,\n      fontSize: 7\n    }\n  };\n});\n\nvar FloatingButtons = function FloatingButtons(props) {\n  // const buttonclasses = ButtonStyle();\n  var classes = useStyles$e();\n  return createElement(Grid, {\n    container: true\n  }, createElement(Grid, {\n    item: true,\n    xs: 12\n  }, createElement(AppBar, {\n    className: classes.appBar\n  }, createElement(Toolbar, null, props.rightButtons, createElement(\"div\", {\n    className: classes.grow\n  }), props.leftButtons))));\n};\n\nFloatingButtons.defaultProps = {\n  leftButtons: null,\n  rightButtons: null\n};\nvar useStyles$f = makeStyles(function (theme) {\n  var _a, _b;\n\n  return {\n    root: {\n      display: 'flex'\n    },\n    drawer: (_a = {}, _a[theme.breakpoints.up('sm')] = {\n      width: '72px',\n      flexShrink: 0\n    }, _a),\n    drawerPaper: {\n      backgroundColor: '#1e2071'\n    },\n    content: {\n      flexGrow: 1\n    },\n    toolbar: theme.mixins.toolbar,\n    menuButton: (_b = {\n      marginRight: theme.spacing(2)\n    }, _b[theme.breakpoints.up('sm')] = {\n      display: 'none'\n    }, _b),\n    logo: {\n      height: '40px'\n    },\n    badge: {\n      backgroundColor: '#ff6969',\n      color: '#ffffff',\n      fontWeight: 700\n    },\n    grow: {\n      flexGrow: 1\n    },\n    sidebar: {\n      maxWidth: '85px'\n    },\n    contentgrid: {\n      maxWidth: 'calc(100% - 85px)',\n      flexBasis: 'calc(100% - 85px)'\n    }\n  };\n});\n\nvar PageLayout = function PageLayout(props) {\n  var classes = useStyles$f();\n\n  var _a = useState(false),\n      mobileOpen = _a[0],\n      setMobileOpen = _a[1];\n\n  var _b = React__default.useState(null),\n      anchorEl = _b[0],\n      setAnchorEl = _b[1];\n\n  var _c = React__default.useState(false),\n      open = _c[0],\n      setOpen = _c[1];\n\n  var _d = React__default.useState(),\n      placement = _d[0],\n      setPlacement = _d[1];\n\n  var handleDrawerToggle = function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  };\n\n  var handleClick = function handleClick(newPlacement) {\n    return function (event) {\n      setAnchorEl(event.currentTarget);\n      setOpen(function (prev) {\n        return placement !== newPlacement || !prev;\n      });\n      setPlacement(newPlacement);\n    };\n  };\n\n  var logolink = '/';\n\n  switch (props.page) {\n    case 'membership':\n      logolink = '#/membership';\n      break;\n\n    case 'underwriting':\n      logolink = '#/underwriting';\n      break;\n\n    default:\n      break;\n  }\n\n  return React__default.createElement(\"div\", {\n    className: classes.root\n  }, React__default.createElement(Popper, {\n    open: open,\n    anchorEl: anchorEl,\n    placement: placement,\n    transition: true\n  }, function (_a) {\n    var TransitionProps = _a.TransitionProps;\n    return React__default.createElement(Fade, _assign({}, TransitionProps, {\n      timeout: 350\n    }), React__default.createElement(Paper$1, null, React__default.createElement(List$1, null, React__default.createElement(ListItem$1, {\n      button: true,\n      onClick: props.onLogout\n    }, React__default.createElement(ListItemIcon$1, null, React__default.createElement(ExitToAppIcon, null)), React__default.createElement(ListItemText$1, {\n      primary: \"Logout\"\n    })))));\n  }), React__default.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\"\n  }, React__default.createElement(Grid, {\n    item: true,\n    xs: 1,\n    className: classes.sidebar\n  }, React__default.createElement(\"nav\", {\n    className: classes.drawer\n  }, React__default.createElement(Hidden, {\n    smUp: true,\n    implementation: \"css\"\n  }, React__default.createElement(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    variant: \"temporary\",\n    open: mobileOpen,\n    onClose: handleDrawerToggle\n  }, React__default.createElement(AppSidebar, _assign({}, props)))), React__default.createElement(Hidden, {\n    xsDown: true,\n    implementation: \"css\"\n  }, React__default.createElement(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    variant: \"permanent\",\n    open: true\n  }, React__default.createElement(AppSidebar, _assign({}, props)))))), React__default.createElement(Grid, {\n    item: true,\n    xs: 11,\n    className: classes.contentgrid\n  }, React__default.createElement(Grid, {\n    container: true,\n    direction: \"column\"\n  }, props.page !== 'customer care' ? React__default.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, React__default.createElement(Toolbar, null, React__default.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton\n  }, React__default.createElement(MenuIcon, null)), React__default.createElement(Link, {\n    href: logolink\n  }, React__default.createElement(\"img\", {\n    src: 'intellicare.png',\n    className: classes.logo,\n    alt: \"logo\"\n  })), React__default.createElement(\"div\", {\n    className: classes.grow\n  }), React__default.createElement(IconButton, {\n    edge: \"end\",\n    onClick: handleClick('bottom-end')\n  }, React__default.createElement(Avatar, {\n    src: 'user.jpg',\n    alt: \"avatar\"\n  })))) : null, React__default.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, React__default.createElement(\"main\", {\n    className: classes.content\n  }, props.children))))));\n};\n\nvar index$d =\n/*#__PURE__*/\nObject.freeze({\n  BaseTheme: BaseTheme,\n  SampleCoreComponent: index$b,\n  InputAutocomplete: index$5,\n  InputChipTextField: index$6,\n  InputSelect: index$7,\n  InputSelectSetValue: index$8,\n  InputTextField: index$9,\n  LoadingIndicator: LoadingIndicator,\n  AppHeader: AppHeader,\n  AppSidebar: AppSidebar,\n  AuthenticatedLayout: AuthenticatedLayout,\n  PageHeader: index$c,\n  ClientInfoItem: ClientInfoItem,\n  GridHorizontalDivider: GridHorizontalDivider,\n  TicketModal: index$a,\n  BreadcrumbsComponent: BreadcrumbsComponent,\n  FloatingButtons: FloatingButtons,\n  PageLayout: PageLayout\n});\nvar index$e =\n/*#__PURE__*/\nObject.freeze({\n  Actions: index,\n  Definitions: index$1,\n  Reducers: index$2,\n  Services: index$3,\n  Stores: index$4,\n  UI: index$d\n});\n/**\r\n * Validate the shape of redux store\r\n */\n\nfunction checkStore(store) {\n  var shape = {\n    dispatch: isFunction,\n    subscribe: isFunction,\n    getState: isFunction,\n    replaceReducer: isFunction,\n    runSaga: isFunction,\n    injectedReducers: isObject,\n    injectedSagas: isObject\n  };\n  invariant(conformsTo(store, shape), '(src/Utils...) injectors: Expected a valid redux store');\n}\n/**\r\n * Create the store with dynamic reducers\r\n */\n\n\nfunction configureStore(createReducer, initialState, history) {\n  if (initialState === void 0) {\n    initialState = {};\n  }\n\n  var composeEnhancers = compose;\n  var reduxSagaMonitorOptions = {}; // If Redux Dev Tools and Saga Dev Tools Extensions are installed, enable them\n\n  /* istanbul ignore next */\n\n  if (process.env.NODE_ENV !== 'production' && typeof window === 'object') {\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({});\n    } // NOTE: Uncomment the code below to restore support for Redux Saga\n    // Dev Tools once it supports redux-saga version 1.x.x\n    // if (window.__SAGA_MONITOR_EXTENSION__)\n    //   reduxSagaMonitorOptions = {\n    //     sagaMonitor: window.__SAGA_MONITOR_EXTENSION__,\n    //   };\n\n  }\n\n  var sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions); // Create the store with two middlewares\n  // 1. sagaMiddleware: Makes redux-sagas work\n  // 2. routerMiddleware: Syncs the location/URL path to the state\n\n  var middlewares = [sagaMiddleware, routerMiddleware(history)];\n  var enhancers = [applyMiddleware.apply(void 0, middlewares)];\n  var store = createStore(createReducer(), initialState, composeEnhancers.apply(void 0, enhancers)); // Extensions\n\n  store.runSaga = sagaMiddleware.run;\n  store.injectedReducers = {}; // Reducer registry\n\n  store.injectedSagas = {}; // Saga registry\n\n  return store;\n}\n\nvar RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount';\nvar DAEMON = '@@saga-injector/daemon';\nvar ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount';\nvar constants =\n/*#__PURE__*/\nObject.freeze({\n  RESTART_ON_REMOUNT: RESTART_ON_REMOUNT,\n  DAEMON: DAEMON,\n  ONCE_TILL_UNMOUNT: ONCE_TILL_UNMOUNT\n});\nvar history = createBrowserHistory();\n\nfunction injectReducerFactory(createReducer, store, isValid) {\n  if (isValid === void 0) {\n    isValid = false;\n  } // tslint:disable-next-line: only-arrow-functions\n\n\n  return function injectReducer(key, reducer) {\n    if (!isValid) {\n      checkStore(store);\n    }\n\n    invariant(isString(key) && !isEmpty(key) && isFunction(reducer), '(src/Utils...) injectReducer: Expected `reducer` to be a reducer function'); // tslint:disable-next-line:max-line-length\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) {\n      return;\n    }\n\n    store.injectedReducers[key] = reducer;\n    store.replaceReducer(createReducer(store.injectedReducers));\n  };\n}\n\nfunction getInjectors(createReducer, store) {\n  checkStore(store);\n  return {\n    injectReducer: injectReducerFactory(createReducer, store, true)\n  };\n}\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\n\n\nfunction hocWithReducer(createReducer, _a) {\n  var key = _a.key,\n      reducer = _a.reducer;\n\n  function wrap(WrappedComponent) {\n    // dont wanna give access to HOC. Child only\n    var ReducerInjector =\n    /** @class */\n    function (_super) {\n      __extends(ReducerInjector, _super);\n\n      function ReducerInjector(props, context) {\n        var _this = _super.call(this, props, context) || this;\n\n        getInjectors(createReducer, context.store).injectReducer(\"\" + key, reducer);\n        return _this;\n      }\n\n      ReducerInjector.prototype.render = function () {\n        return createElement(WrappedComponent, _assign({}, this.props));\n      };\n\n      ReducerInjector.WrappedComponent = WrappedComponent;\n      ReducerInjector.displayName = \"withReducer(\" + (WrappedComponent.displayName || WrappedComponent.name || 'Component') + \")\";\n      return ReducerInjector;\n    }(Component$2);\n\n    return hoistNonReactStatics(ReducerInjector, WrappedComponent);\n  }\n\n  return wrap;\n}\n\nvar useInjectReducer = function useInjectReducer(createReducer, _a) {\n  var key = _a.key,\n      reducer = _a.reducer;\n  var store = useStore();\n  useEffect(function () {\n    getInjectors(createReducer, store).injectReducer(\"\" + key, reducer);\n  }, []);\n};\n\nvar allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\n\nvar checkKey = function checkKey(key) {\n  return invariant(isString(key) && !isEmpty(key), '(src/Utils...) injectSaga: Expected `key` to be a non empty string');\n};\n\nvar checkDescriptor = function checkDescriptor(descriptor) {\n  var shape = {\n    saga: isFunction,\n    mode: function mode(_mode) {\n      return isString(_mode) && allowedModes.includes(_mode || '');\n    }\n  };\n  invariant(conformsTo(descriptor, shape), '(src/Utils...) injectSaga: Expected a valid saga descriptor');\n};\n\nfunction injectSagaFactory(store, isValid) {\n  if (isValid === void 0) {\n    isValid = false;\n  } // tslint:disable-next-line: only-arrow-functions\n\n\n  return function injectSaga(key, descriptor, args) {\n    if (descriptor === void 0) {\n      descriptor = {};\n    }\n\n    if (!isValid) {\n      checkStore(store);\n    }\n\n    var newDescriptor = _assign(_assign({}, descriptor), {\n      mode: descriptor.mode || DAEMON\n    });\n\n    var saga = newDescriptor.saga,\n        mode = newDescriptor.mode;\n    checkKey(key);\n    checkDescriptor(newDescriptor);\n    var hasSaga = Reflect.has(store.injectedSagas, key);\n\n    if (process.env.NODE_ENV !== 'production') {\n      var oldDescriptor = store.injectedSagas[key]; // enable hot reloading of daemon and once-till-unmount sagas\n\n      if (hasSaga && oldDescriptor.saga !== saga) {\n        oldDescriptor.task.cancel();\n        hasSaga = false;\n      }\n    }\n\n    if (!hasSaga || hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT) {\n      store.injectedSagas[key] = _assign(_assign({}, newDescriptor), {\n        task: store.runSaga(saga, args)\n      });\n    }\n  };\n}\n\nfunction ejectSagaFactory(store, isValid) {\n  if (isValid === void 0) {\n    isValid = false;\n  } // tslint:disable-next-line: only-arrow-functions\n\n\n  return function ejectSaga(key) {\n    if (!isValid) {\n      checkStore(store);\n    }\n\n    checkKey(key);\n\n    if (Reflect.has(store.injectedSagas, key)) {\n      var descriptor = store.injectedSagas[key];\n\n      if (descriptor.mode && descriptor.mode !== DAEMON) {\n        descriptor.task.cancel(); // Clean up in production; in development we need `descriptor.saga` for hot reloading\n\n        if (process.env.NODE_ENV === 'production') {\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\n          store.injectedSagas[key] = 'done';\n        }\n      }\n    }\n  };\n}\n\nfunction getInjectors$1(store) {\n  checkStore(store);\n  return {\n    injectSaga: injectSagaFactory(store, true),\n    ejectSaga: ejectSagaFactory(store, true)\n  };\n}\n/**\r\n * Dynamically injects a saga, passes component's props as saga arguments\r\n *\r\n * @param {string} key A key of the saga\r\n * @param {function} saga A root saga that will be injected\r\n * @param {string} [mode] By default (constants.RESTART_ON_REMOUNT) the saga will be started on component mount and\r\n * cancelled with `task.cancel()` on component un-mount for improved performance. Another two options:\r\n *   - constants.DAEMON—starts the saga on component mount and never cancels it or starts again,\r\n *   - constants.ONCE_TILL_UNMOUNT—behaves like 'RESTART_ON_REMOUNT' but never runs it again.\r\n *\r\n */\n\n\nfunction hocWithSaga(_a) {\n  var key = _a.key,\n      saga = _a.saga,\n      mode = _a.mode;\n\n  function wrap(WrappedComponent) {\n    // dont wanna give access to HOC. Child only\n    var InjectSaga =\n    /** @class */\n    function (_super) {\n      __extends(InjectSaga, _super);\n\n      function InjectSaga(props, context) {\n        var _this = _super.call(this, props, context) || this;\n\n        _this.injectors = getInjectors$1(context.store);\n\n        _this.injectors.injectSaga(key, {\n          saga: saga,\n          mode: mode\n        }, _this.props);\n\n        return _this;\n      }\n\n      InjectSaga.prototype.componentWillUnmount = function () {\n        this.injectors.ejectSaga(key);\n      };\n\n      InjectSaga.prototype.render = function () {\n        return createElement(WrappedComponent, _assign({}, this.props));\n      };\n\n      InjectSaga.WrappedComponent = WrappedComponent;\n      InjectSaga.displayName = \"withSaga(\" + (WrappedComponent.displayName || WrappedComponent.name || 'Component') + \")\";\n      return InjectSaga;\n    }(Component$2);\n\n    return hoistNonReactStatics(InjectSaga, WrappedComponent);\n  }\n\n  return wrap;\n}\n\nvar useInjectSaga = function useInjectSaga(_a) {\n  var key = _a.key,\n      saga = _a.saga,\n      mode = _a.mode;\n  var store = useStore();\n  useEffect(function () {\n    var injectors = getInjectors$1(store);\n    injectors.injectSaga(\"\" + key, {\n      saga: saga,\n      mode: mode\n    });\n    return function () {\n      injectors.ejectSaga(\"\" + key);\n    };\n  }, []);\n};\n\nvar loadable = function loadable(importFunc, _a) {\n  var _b = (_a === void 0 ? {\n    fallback: null\n  } : _a).fallback,\n      fallback = _b === void 0 ? null : _b;\n  var LazyComponent = lazy(importFunc);\n\n  var Component = function Component(props) {\n    return React__default.createElement(Suspense, {\n      fallback: fallback\n    }, React__default.createElement(LazyComponent, _assign({}, props)));\n  };\n\n  return Component;\n};\n\nvar ResponseError =\n/** @class */\nfunction (_super) {\n  __extends(ResponseError, _super);\n\n  function ResponseError(response) {\n    var _this = _super.call(this, response.statusText) || this;\n\n    _this.response = response;\n    return _this;\n  }\n\n  return ResponseError;\n}(Error);\n/**\r\n * Parses the JSON returned by a network request\r\n *\r\n * @param  {object} response A response from a network request\r\n *\r\n * @return {object}          The parsed JSON from the request\r\n */\n\n\nfunction parseJSON(response) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      if (response.status === 204 || response.status === 205) {\n        return [2\n        /*return*/\n        , null];\n      }\n\n      return [2\n      /*return*/\n      , response.json()];\n    });\n  });\n}\n/**\r\n * Checks if a network request came back fine, and throws an error if not\r\n *\r\n * @param  {object} response   A response from a network request\r\n *\r\n * @return {object|undefined} Returns either the response, or throws an error\r\n */\n\n\nfunction checkStatus(response) {\n  return __awaiter(this, void 0, void 0, function () {\n    var error;\n    return __generator(this, function (_a) {\n      if (response.status >= 200 && response.status < 300) {\n        return [2\n        /*return*/\n        , response];\n      }\n\n      error = new ResponseError(response);\n      error.response = response;\n      throw error;\n    });\n  });\n}\n/**\r\n * Requests a URL, returning a promise\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param  {object} [options] The options we want to pass to \"fetch\"\r\n *\r\n * @return {object}           The response data\r\n */\n\n\nfunction request(url, options) {\n  return __awaiter(this, void 0, void 0, function () {\n    var fetchResponse, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , fetch(url, options)];\n\n        case 1:\n          fetchResponse = _a.sent();\n          return [4\n          /*yield*/\n          , checkStatus(fetchResponse)];\n\n        case 2:\n          response = _a.sent();\n          return [2\n          /*return*/\n          , parseJSON(response)];\n      }\n    });\n  });\n}\n\nvar index$f =\n/*#__PURE__*/\nObject.freeze({\n  checkStore: checkStore,\n  configureStore: configureStore,\n  constants: constants,\n  history: history,\n  hocWithReducer: hocWithReducer,\n  useInjectReducer: useInjectReducer,\n  hocWithSaga: hocWithSaga,\n  useInjectSaga: useInjectSaga,\n  loadable: loadable,\n  injectReducerFactory: injectReducerFactory,\n  getReducerInjectors: getInjectors,\n  request: request,\n  ResponseError: ResponseError,\n  injectSagaFactory: injectSagaFactory,\n  ejectSagaFactory: ejectSagaFactory,\n  getSagaInjectors: getInjectors$1\n});\nvar theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#3ab77d',\n      contrastText: '#ffffff'\n    },\n    secondary: {\n      main: '#ffffff',\n      contrastText: '#3ab77d'\n    }\n  },\n  typography: {\n    fontFamily: '\"Usual\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    button: {\n      fontFamily: 'Usual, Roboto, Helvetica, Arial, sans-serif',\n      fontWeight: 700,\n      fontSize: 13,\n      textTransform: 'none'\n    }\n  },\n  overrides: {\n    MuiButton: {\n      containedPrimary: {\n        boxShadow: '0px 3px 6px #1e207129',\n        '&:hover': {\n          backgroundColor: '#008650'\n        }\n      },\n      containedSecondary: {\n        border: '1px solid #0000001A',\n        boxShadow: '0px 1px 3px #00000033',\n        '&:hover': {\n          backgroundColor: '#3ab77d1a'\n        }\n      }\n    }\n  }\n});\n\nvar Component = function Component(props) {\n  var Component = props.Component,\n      store = props.store,\n      componentProps = props.componentProps;\n  return createElement(ThemeProvider, {\n    theme: theme\n  }, createElement(Provider$1, {\n    store: store\n  }, createElement(ConnectedRouter, {\n    history: history\n  }, createElement(HashRouter, {\n    basename: \"/\"\n  }, createElement(Component, _assign({}, componentProps))))));\n};\n\nvar index$g =\n/*#__PURE__*/\nObject.freeze({\n  Component: Component\n});\n/*\r\n *\r\n * MessageProvider constants\r\n *\r\n */\n\nvar ActionTypes;\n\n(function (ActionTypes) {\n  ActionTypes[\"CHANGE_LOCALE\"] = \"hims/MsgProvider/CHANGE_LOCALE\";\n})(ActionTypes || (ActionTypes = {}));\n\nvar ActionTypes$1 = ActionTypes;\nvar DEFAULT_LOCALE = 'en';\n/*\r\n *\r\n * MessageProvider reducer\r\n *\r\n */\n\nvar initialState = {\n  locale: DEFAULT_LOCALE\n};\n\nfunction messageProviderReducer(state, action) {\n  if (state === void 0) {\n    state = initialState;\n  }\n\n  switch (action.type) {\n    case ActionTypes$1.CHANGE_LOCALE:\n      return {\n        locale: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n/**\r\n * Direct selector to the languageToggle state domain\r\n */\n\n\nvar selectLanguage = function selectLanguage(state) {\n  return state.language || initialState;\n};\n/**\r\n * Select the language locale\r\n */\n\n\nvar makeSelectLocale = function makeSelectLocale() {\n  return createSelector(selectLanguage, function (languageState) {\n    return languageState.locale;\n  });\n};\n\nvar enTranslationMessages = require('Messages/en.json'); // prettier-ignore\n\n\nvar appLocales = ['en'];\n\nvar formatTranslationMessages = function formatTranslationMessages(locale, messages) {\n  var defaultFormattedMessages = locale !== DEFAULT_LOCALE ? formatTranslationMessages(DEFAULT_LOCALE, enTranslationMessages) : {};\n\n  var flattenFormattedMessages = function flattenFormattedMessages(formattedMessages, key) {\n    var _a;\n\n    var formattedMessage = !messages[key] && locale !== DEFAULT_LOCALE ? defaultFormattedMessages[key] : messages[key];\n    return _assign(_assign({}, formattedMessages), (_a = {}, _a[key] = formattedMessage, _a));\n  };\n\n  return Object.keys(messages).reduce(flattenFormattedMessages, {});\n};\n\nvar translationMessages = {\n  en: formatTranslationMessages('en', enTranslationMessages)\n};\n/*\r\n *\r\n * MessageProvider\r\n *\r\n * this component connects the redux state message locale to the\r\n * IntlProvider component and i18n messages (loaded from `src/Translations`)\r\n */\n\nvar stateSelector = createSelector(makeSelectLocale(), function (locale) {\n  return {\n    locale: locale\n  };\n});\n\nvar Provider = function Provider(props) {\n  var locale = useSelector(stateSelector).locale;\n  return React__default.createElement(IntlProvider, {\n    locale: locale,\n    key: locale,\n    messages: props.messages[locale]\n  }, React__default.Children.only(props.children));\n};\n\nvar index$h =\n/*#__PURE__*/\nObject.freeze({\n  Provider: Provider,\n  appLocales: appLocales,\n  formatTranslationMessages: formatTranslationMessages,\n  messageProviderReducer: messageProviderReducer\n});\nvar scope = 'boilerplate.containers.NotFoundPage';\nvar messages = defineMessages({\n  header: {\n    id: scope + \".header\",\n    defaultMessage: 'Page not found.'\n  }\n});\n/**\r\n * NotFoundPage\r\n *\r\n * This is the page shown when the user visits a url that doesn't have a route\r\n */\n\nvar Component$1 = function Component$1() {\n  return createElement(\"article\", null, createElement(\"h1\", null, createElement(FormattedMessage, _assign({}, messages.header))));\n};\n\nvar index$i =\n/*#__PURE__*/\nObject.freeze({\n  Document: index$g,\n  Message: index$h,\n  NotFoundPage: Component$1\n});\nvar index$j =\n/*#__PURE__*/\nObject.freeze({});\nexport { index$e as Components, index$i as Containers, index$j as Pages, index$f as Utils };","\n\nimport * as React from 'react';\nimport { Link } from '@material-ui/core';\nimport './component-style.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\n\ninterface IProps {\n    icon?: IconProp;\n    label?: string;\n    onClick: () => void;\n}\n\nexport class TextButton extends React.Component<IProps> {\n\n    shouldComponentUpdate(props: IProps, _state: any) {\n        return (\n            (this.props.icon !== props.icon) ||\n            (this.props.label !== props.label)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <Link className='text-button' onClick={() => this.props.onClick()}>\n                {this.props.icon ? <FontAwesomeIcon icon={this.props.icon} /> : null}\n                {this.props.icon ? <span style={{marginLeft: '10px'}}/> : null}\n                {this.props.label}\n            </Link>\n        );\n    }\n}","import * as React from 'react';\nimport { PartialMemberData } from 'Pages/CustomerCarePage/Models';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\n\ninterface IProps {\n    members: PartialMemberData[];\n    searchText: string;\n    onSelectMember: (memberId: string) => void;\n}\n\nexport class SearchedMembersList extends React.Component<IProps> {\n\n    getExtractedMembers = (filter: string) => {\n        return (filter.trim().length > 0 ? (\n            this.props.members\n                .filter(member => member.memberId)\n                .filter(member => member.memberId.includes(filter))\n        ) : []);\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='mini-ticket-modals'>\n                {this.getExtractedMembers(this.props.searchText).map(member => {\n                    return (\n                        <>\n                        {this.renderMemberShortDetail(member)}\n                        <div className='line-border' />\n                        </>\n                    );\n                })}\n            </div>\n        );\n    }\n\n    renderMemberShortDetail(member: PartialMemberData): JSX.Element {\n        const name = \n            member.firstName + ' ' + \n            GlobalFunction.getIntials(member.middleName) + ' ' +\n            member.lastName;\n\n        return (\n            <div \n                className='small-section mini-ticket-modal'\n                onClick={() => this.props.onSelectMember(member.memberId)}>\n                <div className='text' />\n                <div className='text'>\n                    <div className='circle' style={{backgroundColor: '#3AB77D'}} />\n                    <div style={{display: 'inline-block'}}>\n                        <div className='header-2'>{member.memberId}</div>\n                    </div>\n\n                </div>\n                \n                <div className='text'>{name}</div>\n                <div className='text'>{member.clientName}</div>\n                <div className='text'>{'---'}</div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\nimport { CircularProgress } from \"@material-ui/core\";\n\ninterface IProps {\n    height?: string;\n    color?: string;\n    size?: number;\n}\n\nexport class Loading extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <div \n                style={{\n                    textAlign: 'center', \n                    paddingTop: this.props.height ? this.props.height : undefined}}>\n                <CircularProgress \n                    size={this.props.size}\n                    style={{\n                        color: this.props.color ? this.props.color : undefined}} />\n            </div>\n            \n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\nimport { DropdownChoice } from '../Models';\nimport Select from 'react-select';\n\ninterface IProps {\n    placeholder: string;\n    choices: DropdownChoice[];\n    type: DropdownChoice;\n    value: string;\n    onChangeType: (type: DropdownChoice) => void;\n    onChangeValue: (value: string) => void;\n}\n\nexport class TypeValueField extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <div className='detailed-input-field'>\n                <div className='text'>{this.props.placeholder}</div>\n                <div className='input-field'>\n                        <Select\n                            className='actual-dropdown'\n                            classNamePrefix='actual-dropdown'\n                            value={this.props.type}\n                            options={this.props.choices} \n                            onChange={(choice: DropdownChoice) => {\n                                this.props.onChangeType(choice);\n                            }} />\n                    <input \n                        className='text-field right' \n                        value={this.props.value}\n                        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                            this.props.onChangeValue(event.target.value);\n                        }} />\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid, TableCell, TableRow } from '@material-ui/core';\nimport { Loading } from '../Components/Loading';\nimport { GlobalFunction } from '../GlobalFunction';\nimport { CustomTable } from '../Components/CustomTable';\nimport { MemberData, SimpleTicketData, BenefitData } from '../Models';\n\ninterface IProps {\n    member: MemberData;\n    benefits: BenefitData[];\n    recentTickets?: SimpleTicketData[];\n    onUpdateMemberStateChange?: (member?: MemberData) => void;\n    getRecentTicketsData: (memberId: string) => void;\n\n    disableRecentTickets?: boolean;\n    loadingBenefits: boolean;\n    loadingRecentTickets: boolean;\n}\n\nexport class MemberDataSection extends React.Component <IProps> {\n\n    getBenefitsLimit = () => {\n        let limits: BenefitData[] = [];\n        this.props.benefits.forEach(benefit => {\n            let targetLimitIndex = -1;\n            limits.forEach((limit, index) => {\n                if (benefit.limitType && limit.limitType === benefit.limitType) {\n                    targetLimitIndex = index;\n                }\n            })\n            if (targetLimitIndex > -1) {\n                limits[targetLimitIndex].limit += benefit.limit;\n            } else {\n                limits.push({...benefit});\n            }\n        });\n        return limits.filter(benefit => benefit.limitType);\n    }\n\n    render(): JSX.Element {\n        const member = this.props.member;\n\n        if (!this.props.recentTickets && !this.props.disableRecentTickets) {\n            this.props.getRecentTicketsData(member.memberId);\n        }\n\n        const name = GlobalFunction.toNameFormat(\n            member.firstName,\n            member.middleName,\n            member.lastName\n        );\n        const clientName = member.client ? member.client.registeredName : '---';\n        const birthDate = GlobalFunction.toShortDateString(new Date(member.birthDate));\n        const age = GlobalFunction.getAge(new Date(member.birthDate));\n        const contractStatus = member.contract ? `${member.contract.status} Contract` : 'No Contract Found';\n        \n        return (\n            <div className='section'>\n                <div className={member.isVip ? 'tag' : ''}>\n                    {member.isVip ? (\n                        <div className='tag-label'>VIP</div>\n                    ) : null}\n                    <div className='circle' style={{backgroundColor: '#3AB77D'}} />\n                    <div style={{display: 'inline-block'}}>\n                        <div className='header-2'>{member.memberId}</div>\n                    </div>\n                    <div className='text'>{name}</div>\n                    <div className='text'>{clientName}</div>\n                    <div className='text'>{'---'}</div>\n                    <div className='text'>{contractStatus}</div>\n                </div>\n                <Grid container>\n                    {this.props.loadingBenefits ? (\n                        <Grid item className='sub-section' xs={12}>\n                            <Loading height='2rem' />\n                        </Grid>\n                    ) : (\n                        this.getBenefitsLimit().map(benefit => {\n                            return (\n                                <Grid item className='sub-section' xs={6}>\n                                    <div className='light-text'>{`${benefit.limitType.toUpperCase()} LIMIT`}</div>\n                                    <div className='small-text'>{`${GlobalFunction.formatNumber(benefit.limit)} ${benefit.limitUnit}`}</div>\n                                </Grid>\n                            );\n                        })\n                    )}\n                </Grid>\n                <Grid container>\n                    <Grid item className='sub-section' xs={6}>\n                        <div className='light-text'>BIRTHDATE (AGE)</div>\n                        <div className='small-text'>{`${birthDate} (${age})`}</div>\n                    </Grid>\n                    <Grid item className='sub-section' xs={6}>\n                        <div className='light-text'>GENDER / STATUS</div>\n                        <div className='small-text'>{`${member.gender} / ${member.civilStatus}`}</div>\n                    </Grid>\n                </Grid>\n                <div className='sub-section'>\n                    {this.props.loadingRecentTickets ? (\n                        <Loading height='2rem' />\n                    ) : (\n                        this.props.recentTickets ? (\n                            <>\n                            <div className='header-2'>OPEN/PENDING TICKETS</div>\n                            <CustomTable\n                                paginationClass='custom-pagination-small'\n                                className='custom-table-small'\n                                labelRowsPerPage='Rows:'\n                                rows={this.props.recentTickets}\n                                rowsPerPageOptions={[5, 10, 25]}\n                                renderHeader={() => this.renderTableHeader()}\n                                renderRow={(rowData: SimpleTicketData, index: number) =>\n                                    this.renderTableRow(rowData, index)} />\n                            </>\n                        ) : null\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            <TableCell style={{minWidth: '70px', fontSize: '10px'}}>Ticket ID</TableCell>\n            <TableCell style={{fontSize: '10px'}}>Type</TableCell>\n            <TableCell style={{fontSize: '10px'}}>Last Update</TableCell>\n            </>\n        );\n    }\n\n    renderTableRow(recentTicket: SimpleTicketData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        return (\n            <TableRow style={{backgroundColor: backgroundColor, fontSize: '10px'}}>\n                <TableCell>{recentTicket.ticketNo}</TableCell>\n                <TableCell>{recentTicket.specificType}</TableCell>\n                <TableCell>{GlobalFunction.toShortDateString(recentTicket.dateUpdated)}</TableCell>\n            </TableRow>\n        );\n    }\n}","let backendUrl = process.env.REACT_APP_PMAKER_BASE_URL;\n\nexport class Processmaker {\n\n    // //local\n    // static localUrl = 'http://18.140.39.215/api/1.0/workflow';//'localhost:32766/api/1.0/workflow';\n\n    // //stg\n    // static stgUrl = 'http://18.140.39.215/api/1.0/workflow';\n\n    static async get(url: string, success: Function, fail: Function) {\n        // const backendUrl = (process.env.NODE_ENV === 'development' ? this.localUrl : this.stgUrl);\n        fetch(backendUrl + url, {\n            method: 'GET',\n            headers: { \n                'Content-Type': 'application/json',\n                'Authorization' : 'Bearer ' + localStorage.getItem('pm_token')\n            },\n        })\n        .then(response => response.json())\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async post(url:string, body: any, success: Function, fail: Function) {\n        // const backendUrl = (process.env.NODE_ENV === 'development' ? this.localUrl : this.stgUrl);\n        fetch(backendUrl + url, {\n            method: 'POST',\n            headers: { \n                'Content-Type': 'application/json',\n                'Authorization' : 'Bearer ' + localStorage.getItem('pm_token')\n            },\n            body: JSON.stringify(body)\n        })\n        .then(response => response.json())\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n\n    static async put(url: string, body: any, success: Function, fail: Function) {\n        // const backendUrl = (process.env.NODE_ENV === 'development' ? this.localUrl : this.stgUrl);\n        fetch(backendUrl + url, {\n            method: 'PUT',\n            headers: { \n                'Content-Type': 'application/json',\n                'Authorization' : 'Bearer ' + localStorage.getItem('pm_token')\n            },\n            body: JSON.stringify(body)\n        })\n        .then(response => response)\n        .then(data => success(data))\n        .catch(error => fail(error));\n    }\n}","import * as React from 'react';\nimport { ClientData, SimpleTicketData } from '../Models';\nimport { Grid, TableCell, TableRow } from '@material-ui/core';\nimport { Loading } from '../Components/Loading';\nimport { CustomTable } from '../Components/CustomTable';\nimport { GlobalFunction } from '../GlobalFunction';\n\ninterface IProps {\n    client: ClientData;\n    recentTickets?: SimpleTicketData[];\n    linkedTickets?: SimpleTicketData[];\n    getRecentTicketsData: (clientId: string) => void;\n    getLinkedTicketsData: (clientId: string) => void;\n\n    disableRecentTickets?: boolean;\n    disableLinkedTickets?: boolean;\n    loadingRecentTickets: boolean;\n    loadingLinkedTickets: boolean;\n}\n\nexport class ClientDataSection extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        const client = this.props.client;\n        const contract = client.contract;\n\n        if (!this.props.recentTickets && !this.props.disableRecentTickets) {\n            this.props.getRecentTicketsData(client.corporateAccountNo);\n        }\n\n        if (!this.props.linkedTickets && !this.props.disableLinkedTickets) {\n            this.props.getLinkedTicketsData(client.corporateAccountNo);\n        }\n\n        const mainAddress = client.mainOfficeAddress;\n        const location = mainAddress ? `${mainAddress.barangay}, ${mainAddress.city}, ${mainAddress.region}` : '';\n        const startDate = contract && contract.startDate ? GlobalFunction.toShortDateString(contract.startDate) : '---';\n        const endDate = contract && contract.endDate ? GlobalFunction.toShortDateString(contract.endDate) : '---';\n        \n        return (\n            <div className='section'>\n                <div className='circle' style={{backgroundColor: '#3AB77D'}} />\n                <div style={{display: 'inline-block'}}>\n                    <div className='header-2'>{client.corporateAccountNo}</div>\n                </div>\n                <div className='text'>{client.registeredName}</div>\n                <Grid container>\n                    <Grid item className='sub-section-2' xs={12}>\n                        <div className='light-text'>CARD NAME</div>\n                        <div className='small-text'>{client.cardName}</div>\n                    </Grid>\n                    <Grid item className='sub-section-2' xs={6}>\n                        <div className='light-text'>EFFECTIVITY DATE</div>\n                        <div className='small-text'>{startDate}</div>\n                    </Grid>\n                    <Grid item className='sub-section-2' xs={6}>\n                        <div className='light-text'>RENEWAL DATE</div>\n                        <div className='small-text'>\n                            {false ? ( // Renewal Date\n                                GlobalFunction.toShortDateString('')\n                            ) : '---*'}\n                        </div>\n                    </Grid>\n                    <Grid item className='sub-section-2' xs={6}>\n                        <div className='light-text'>EXPIRY DATE</div>\n                        <div className='small-text'>{endDate}</div>\n                    </Grid>\n                    <Grid item className='sub-section-2' xs={6}>\n                        <div className='light-text'>EXTENSION DATE</div>\n                        <div className='small-text'>\n                            {false ? ( // Extension Date\n                                GlobalFunction.toShortDateString('')\n                            ) : '---*'}\n                        </div>\n                    </Grid>\n                    <Grid item className='sub-section-2' xs={12}>\n                        <div className='light-text'>SALES CHANNEL</div>\n                        <div className='small-text'>\n                            {client.salesChannel ? client.salesChannel.name : '---'}\n                        </div>\n                    </Grid>\n                    <Grid item className='sub-section-2' xs={12}>\n                        <div className='light-text'>LOCATION</div>\n                        <div className='small-text'>{location}</div>\n                    </Grid>\n                    <Grid item className='sub-section-2' xs={12}>\n                        <div className='light-text'>CONTACT PERSON AND NO.</div>\n                        <div className='small-text'>\n                            {client.mainOfficeAddress && client.mainOfficeAddress.contactPersons.length > 0 ? (\n                                `${client.mainOfficeAddress.contactPersons[0].name}: ${client.mainOfficeAddress.contactPersons[0].contactNo}`\n                            ) : '---'}\n                        </div>\n                    </Grid>\n                </Grid>\n                <div className='sub-section-2'>\n                    {this.props.loadingRecentTickets ? (\n                        <Loading height='2rem' />\n                    ) : (\n                        this.props.recentTickets ? (\n                            <>\n                            <div className='header-2'>RECENT TICKETS</div>\n                            <CustomTable\n                                paginationClass='custom-pagination-smaller'\n                                className='custom-table-smaller'\n                                labelRowsPerPage='Rows:'\n                                rows={this.props.recentTickets}\n                                rowsPerPageOptions={[5, 10, 25]}\n                                renderHeader={() => this.renderRecentTicketHeader()}\n                                renderRow={(rowData: SimpleTicketData, index: number) =>\n                                    this.renderRecentTicketRow(rowData, index)} />\n                            </>\n                        ) : null\n                    )}\n                </div>\n                {/* <div className='sub-section-2'>\n                    {this.props.loadingLinkedTickets ? (\n                        <Loading height='2rem' />\n                    ) : (\n                        this.props.linkedTickets ? (\n                            <>\n                            <div className='header-2'>LINKED TICKETS</div>\n                            <CustomTable\n                                paginationClass='custom-pagination-smaller'\n                                className='custom-table-smaller'\n                                labelRowsPerPage='Rows:'\n                                rows={this.props.linkedTickets}\n                                rowsPerPageOptions={[5, 10, 25]}\n                                renderHeader={() => this.renderLinkedTicketsHeader()}\n                                renderRow={(rowData: SimpleTicketData, index: number) =>\n                                    this.renderLinkedTicketsRow(rowData, index)} />\n                            </>\n                        ) : null\n                    )}\n                </div> */}\n            </div>\n        );\n    }\n\n    renderRecentTicketHeader(): JSX.Element {\n        return (\n            <>\n            <TableCell style={{minWidth: '70px', fontSize: '10px'}}>Ticket ID</TableCell>\n            <TableCell style={{fontSize: '10px'}}>Status</TableCell>\n            <TableCell style={{fontSize: '10px'}}>Created</TableCell>\n            <TableCell style={{fontSize: '10px'}}>Updated</TableCell>\n            </>\n        );\n    }\n\n    renderRecentTicketRow(ticket: SimpleTicketData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        return (\n            <TableRow style={{backgroundColor: backgroundColor, fontSize: '10px'}}>\n                <TableCell>{ticket.ticketNo}</TableCell>\n                <TableCell>{ticket.status}</TableCell>\n                <TableCell>{GlobalFunction.toShortDateString(ticket.dateCreated)}</TableCell>\n                <TableCell>{GlobalFunction.toShortDateString(ticket.dateUpdated)}</TableCell>\n            </TableRow>\n        );\n    }\n\n    renderLinkedTicketsHeader(): JSX.Element {\n        return (\n            <>\n            <TableCell style={{minWidth: '70px', fontSize: '10px'}}>Ticket ID</TableCell>\n            <TableCell style={{fontSize: '10px'}}>Status</TableCell>\n            <TableCell style={{fontSize: '10px'}}>Created</TableCell>\n            <TableCell style={{fontSize: '10px'}}>Updated</TableCell>\n            </>\n        );\n    }\n\n    renderLinkedTicketsRow(ticket: SimpleTicketData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        return (\n            <TableRow style={{backgroundColor: backgroundColor, fontSize: '10px'}}>\n                <TableCell>{ticket.ticketNo}</TableCell>\n                <TableCell>{ticket.status}</TableCell>\n                <TableCell>{GlobalFunction.toShortDateString(ticket.dateCreated)}</TableCell>\n                <TableCell>{GlobalFunction.toShortDateString(ticket.dateUpdated)}</TableCell>\n            </TableRow>\n        );\n    }\n}","import * as React from 'react';\nimport { PartialClientData } from 'Pages/CustomerCarePage/Models';\n\ninterface IProps {\n    clients: PartialClientData[];\n    searchText: string;\n    onSelectClient: (clientMongoId: string) => void;\n}\n\nexport class SearchedClientsList extends React.Component<IProps> {\n\n    getExtractedClients = (filter: string) => {\n        return (filter.trim().length > 0 ? (\n            this.props.clients\n                .filter(client => client.clientId)\n                .filter(client => client.clientId.includes(filter))\n        ) : []);\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='mini-ticket-modals'>\n                {this.getExtractedClients(this.props.searchText).map(client => {\n                    return (\n                        <>\n                        {this.renderMemberShortDetail(client)}\n                        <div className='line-border' />\n                        </>\n                    );\n                })}\n            </div>\n        );\n    }\n\n    renderMemberShortDetail(client: PartialClientData): JSX.Element {\n\n        return (\n            <div \n                className='small-section mini-ticket-modal'\n                onClick={() => this.props.onSelectClient(client.clientId)}>\n                <div className='text' />\n                <div className='text'>\n                    <div className='circle' style={{backgroundColor: '#3AB77D'}} />\n                    <div style={{display: 'inline-block'}}>\n                        <div className='header-2'>{client.clientId}</div>\n                    </div>\n\n                </div>\n                \n                <div className='text'>{client.clientName}</div>\n            </div>\n        );\n    }\n}","import { TicketData, ConfinementDetails, InquiryData, AvailmentDetails, LOAData, ConsultationDetails, MemberData, ClientData, AddressData, ContractData, LogData, DocumentData } from \"./Models\";\nimport { ConfinementDetails as UpdateInpatientDetails } from \"./UpdateTicketPage/UpdateTicketPage\";\nimport { ConfinementDetails as ResolveInpatientDetails } from \"./ResolveTicketPage/ResolveTicketPage\";\n\n/* \n * Ensures that all data coming from / sending to backend is in order.\n * All GET, POST, PUT, etc., long payloads must be put here to organize the code\n * Thank you.\n * \n * Note: Add long blank lines between function (pref: 10 lines).\n */\n\nexport class Payloads {\n\n    \n\n    static getPostTicketPayload(ticket: TicketData,\n                                uploadedFiles: any[],\n                                member?: MemberData,\n                                client?: ClientData,\n                                confinement?: ConfinementDetails, \n                                availment?: AvailmentDetails, \n                                inquiries?: InquiryData[],\n                                consultation?: ConsultationDetails): any  {\n        return {\n            transaction_no: ticket.transactionNo,\n            received_via: ticket.ticketChannel,\n            received_from: ticket.ticketSource,\n\n            member_name: (ticket.ticketSource === 'Member' ? ticket.memberName : undefined),\n            corporate_client: (ticket.ticketSource === 'Corporate Client' ? ticket.clientName : undefined),\n            broker: (ticket.ticketSource === 'Broker' ? ticket.brokerName : undefined),\n            hospital_name: (ticket.ticketSource === 'Clinic/Hospital' ? (ticket.facility.value + ' - ' + ticket.facility.label) : undefined),\n            department: (ticket.ticketSource === 'Clinic/Hospital' ? ticket.department : undefined),\n\n            caller_name: ticket.callerName,\n            contact_no: ticket.contactNo,\n            additional_notes: ticket.additionalNotes,\n            supporting_documents: uploadedFiles.map(file => {\n                return {\n                    name: file.name,\n                    type: file.type,\n                    url: file.url ? file.url : file.path ? file.path : '',\n                }\n            }),\n\n            ticket_category: {\n                ticket_type: ticket.ticketType,\n                specific_type: ticket.specificType,\n                urgency: ticket.urgency,\n                assign_to: `${ticket.agent.id} - ${ticket.agent.name}`,\n\n                availment_details: (\n                    availment &&\n                    ticket.ticketType === 'Availment' &&\n                    ticket.specificType === 'Outpatient Procedure' ? {\n                    provider: availment.provider.value + ' - ' + availment.provider.label,\n                    availments_list: [{\n                        diagnosis: availment.diagnoses.map(availment => {\n                            return {\n                                icd10code: availment.icd10Code.value,\n                                diagnosis: availment.icd10Code.label,\n                                remarks: '',\n                                is_primary: false,\n                                is_final: false,\n                                \n                                doctors: [\n                                    {\n                                        id: '',\n                                        name: availment.doctors[0].name,\n                                        specialization: (availment.doctors[0].specialization ? availment.doctors[0].specialization : null),\n                                        fee: 0,\n                                        no_of_visits: '',\n                                        remarks: ''\n                                    }\n                                ],\n\n                                procedures: availment.procedures\n                                    .filter(procedure => {\n                                        return procedure.cptCode.value;\n                                    })\n                                    .map(procedure => {\n                                        return {\n                                            cpt_code: procedure.cptCode.value,\n                                            procedure_name: procedure.cptCode.label,\n                                            amount: procedure.amount.toString(),\n                                            doctor: '',\n                                            phic: procedure.isPHIC,\n                                            notes: '',\n                                            date_added: new Date(),\n                                            assessment_type: procedure.assessmentType,\n                                            assessment_remarks: procedure.assessmentRemarks,\n                                            approved_amount: procedure.approvedAmount\n                                        }\n                                    }),\n                                \n                                    assessment_type: availment.assessmentType,\n                                    assessment_remarks: availment.assessmentRemarks,\n                                    approved_amount: availment.approvedAmount\n                            }\n                        })\n                    }]\n                } : undefined),\n\n                confinement_details: (\n                    confinement &&\n                    ticket.ticketType === 'Availment' &&\n                    ticket.specificType === 'Inpatient' ? {\n                    provider: confinement.provider.value + ' - ' + confinement.provider.label,\n                    date_admitted: confinement.dateAdmitted,\n                    confinement_kind: confinement.confinementKind,\n                    gift_given: false,\n                    updates: [],\n                    room_accommodation: [{\n                        room_type: confinement.roomType,\n                        no_of_days: '1',\n                        amount: confinement.costPerDay,\n                    }],\n                    diagnoses: [\n                        {\n                            icd10code: confinement.initialDiagnosis.value,\n                            diagnosis: confinement.initialDiagnosis.label,\n                            remarks: '',\n                            is_primary: false,\n                            is_final: false,\n                            \n                            doctors: [\n                                {\n                                    id: '',\n                                    name: confinement.doctor.label,\n                                    specialization: (confinement.doctor.params ? confinement.doctor.params[0] : null),\n                                    fee: confinement.amount,\n                                    no_of_visits: '0',\n                                    remarks: '',\n                                    type: 'Admitting'\n                                }\n                            ],\n\n                            procedures: []\n                        }\n                    ],\n                    others: [],\n                    coverage: 'Filed',\n                    final_bill: 0,\n                    philhealth_amount: 0,\n                    discharge_date: null\n                } : undefined),\n\n                consultation_details: (\n                    consultation &&\n                    ticket.specificType === 'Consultation' ? {\n                    provider: `${consultation.provider.value} - ${consultation.provider.label}`,\n                    diagnosis: `${consultation.diagnosis.value} - ${consultation.diagnosis.label}`,\n                    doctor: `${consultation.doctor.value} - ${consultation.doctor.label}`,\n                    notes: consultation.notes,\n                    assessment_type: consultation.assessmentType,\n                    assessment_remarks: consultation.assessmentRemarks,\n                    approved_amount: consultation.approvedAmount\n                } : undefined),\n\n                inquiry_details: (\n                    inquiries &&\n                    ticket.ticketType === 'Inquiry' ? {\n                    inquiry_list: inquiries.map(inquiry => {\n                        return {\n                            inquiry: inquiry.inquiry.label,\n                            value: inquiry.detail,\n                            specific_detail: inquiry.specificDetail,\n                            answer: inquiry.answer,\n                            remarks: inquiry.remarks, \n                            related_tickets: inquiry.relatedTickets, \n                            support_docs: []\n                        }\n                    })\n                } : undefined)\n            },\n            pmaker_case_uid: '',\n            status: 'Open',\n            date_created: new Date(),\n            date_updated: new Date(),\n            date_escalated: null,\n            created_by: {\n                _id: ticket.createdBy.id,\n                name: ticket.createdBy.name\n            },\n            tmp: {\n                user_id: localStorage['user_id'],\n                module: 'Customer Care',\n                process: 'Create Ticket',\n                timestamp: new Date()\n            },\n            member_id: member ? member.memberId : '',\n            member_data: member ? {\n                is_vip: member.isVip,\n                last_name: member.lastName,\n                middle_name: member.middleName,\n                first_name: member.firstName,\n                client: member.client ? member.client.registeredName : undefined\n            } : undefined,\n            client_id: client ? client.corporateAccountNo : '',\n            client_data: \n                client ? {\n                    registered_name: client.registeredName\n                } : member ? {\n                    registered_name: member.client ? member.client.registeredName : undefined\n                 } : undefined,\n            \n            loa: []\n        };\n    }\n\n\n\n\n\n\n\n\n\n\n    static getPutTicketPayload(ticket: TicketData, \n                               uploadedFiles: any[],\n                               member?: MemberData,\n                               client?: ClientData,\n                               confinement?: UpdateInpatientDetails,\n                               inquiries?: InquiryData[]): any {\n        return {\n            transaction_no: ticket.transactionNo,\n            received_via: ticket.ticketChannel,\n            received_from: ticket.ticketSource,\n\n            member_name: ticket.memberName,\n            corporate_client: ticket.clientName,\n            broker: ticket.brokerName,\n            hospital_name: ticket.facility.label,\n            department: ticket.department,\n\n            caller_name: ticket.callerName,\n            contact_no: ticket.contactNo,\n            additional_notes: ticket.additionalNotes,\n            supporting_documents: uploadedFiles.map(file => {\n                return {\n                    doc_name: file.docName,\n                    name: file.name,\n                    type: file.type,\n                    url: file.url ? file.url : file.path ? file.path : '',\n                    field: file.field\n                }\n            }),\n\n            ticket_category: {\n                ticket_type: ticket.ticketType,\n                specific_type: ticket.specificType,\n                urgency: ticket.urgency,\n                assign_to: `${ticket.agent.id} - ${ticket.agent.name}`,\n\n                confinement_details: (confinement ? {\n                    provider: `${confinement.provider.value} - ${confinement.provider.label}`,\n                    date_admitted: confinement.dateAdmitted,\n                    confinement_kind: confinement.confinementKind,\n                    gift_given: confinement.giftGiven,\n                    updates: confinement.updates.map(update => {\n                        return {\n                            remarks: update.remarks,\n                            date: update.date,\n                            hospital_bill: update.hospitalBill.toString()\n                        }\n                    }),\n                    room_accommodation: confinement.accommodations.map(accommodation => {\n                        return {\n                            room_type: accommodation.roomType,\n                            no_of_days: accommodation.days.toString(),\n                            amount: accommodation.costPerDay\n                        }\n                    }),\n                    diagnoses: confinement.diagnoses.map((diagnosis, index) => {\n                        return {\n                            icd10code: diagnosis.diagnosis.value,\n                            diagnosis: diagnosis.diagnosis.label,\n                            remarks: diagnosis.remarks,\n                            is_primary: (confinement.primaryDiagnosisIndex === index),\n                            is_final: diagnosis.isFinal,\n                            doctors: confinement.physicians\n                                .filter(physician => physician.diagnosis.value === diagnosis.diagnosis.value)\n                                .map(physician => {\n                                    return {\n                                        id: '',\n                                        name: physician.physician.label,\n                                        specialization: physician.physician.params ? physician.physician.params[0] : '',\n                                        fee: physician.amount,\n                                        no_of_visits: physician.visits.toString(),\n                                        remarks: physician.remarks,\n                                        type: physician.physician.params ? physician.physician.params[1] : ''\n                                    }\n                                }),\n                            procedures: confinement.procedures\n                                .filter(procedure => procedure.diagnosis.value === diagnosis.diagnosis.value)\n                                .map(procedure => {\n                                    return {\n                                        cpt_code: procedure.procedure.value + '', // Convert to string\n                                        procedure_name: procedure.procedure.label,\n                                        amount: procedure.amount.toString(),\n                                        doctor: procedure.physician.label,\n                                        phic: false,\n                                        notes: procedure.remarks,\n                                        date_added: procedure.date,\n                                        assessment_type: 'Pending',\n                                        assessment_remarks: ''\n                                    }\n                                }),\n                            assessment_type: 'Pending',\n                            assessment_remarks: ''\n                        }\n                    }),\n                    others: confinement.items.map(item => {\n                        return {\n                            amount: item.amount,\n                            item_name: item.name,\n                            type: item.type.label\n                        }\n                    }),\n                    coverage: confinement.coverage.label,\n                    ticket_no: confinement.ticketNo,\n                    paid_by: confinement.paidBy,\n                    philhealth_amount: confinement.philhealthAmount,\n                    final_bill: confinement.finalBill,\n                    discharge_date: confinement.dischargeDate\n                } : undefined),\n\n                inquiry_details: (inquiries ? {\n                    inquiry_list: inquiries.map(inquiry => {\n                        return {\n                            inquiry: inquiry.inquiry.label,\n                            value: inquiry.detail,\n                            specific_detail: inquiry.specificDetail,\n                            answer: inquiry.answer,\n                            remarks: inquiry.remarks, \n                            related_tickets: inquiry.relatedTickets, \n                            support_docs: []\n                        }\n                    })\n                } : undefined)\n            },\n            pmaker_case_uid: ticket.pmCaseId,\n            status: ticket.status,\n            date_created: ticket.dateCreated,\n            date_updated: new Date(),\n            date_escalated: null,\n            created_by: {\n                _id: ticket.createdBy.id,\n                name: ticket.createdBy.name\n            },\n            tmp: {\n                user_id: localStorage['user_id'],\n                module: 'Customer Care',\n                process: 'Update Ticket',\n                timestamp: new Date()\n            },\n            member_id: member ? member.memberId : '',\n            member_data: member ? {\n                is_vip: member.isVip,\n                last_name: member.lastName,\n                middle_name: member.middleName,\n                first_name: member.firstName,\n                client: member.client ? member.client.registeredName : undefined\n            } : undefined,\n            client_id: client ? client.corporateAccountNo : '',\n            client_data: \n                client ? {\n                    registered_name: client.registeredName\n                } : member ? {\n                    registered_name: member.client ? member.client.registeredName : undefined\n                 } : undefined,\n\n            approval_code: ticket.approvalCode,\n            loa: []\n        };\n    }\n\n\n\n\n\n\n\n\n\n\n    static getPutUpdateAssessmentPayload(ticket: TicketData, \n                                         loas: LOAData[],\n                                         member?: MemberData,\n                                         client?: ClientData,\n                                         availment?: AvailmentDetails,\n                                         confinement?: ResolveInpatientDetails,\n                                         consultation?: ConsultationDetails): any {\n        return {\n            transaction_no: ticket.transactionNo,\n            received_via: ticket.ticketChannel,\n            received_from: ticket.ticketSource,\n\n            member_name: ticket.memberName,\n            corporate_client: ticket.clientName,\n            broker: ticket.brokerName,\n            hospital_name: ticket.facility.label,\n            department: ticket.department,\n\n            caller_name: ticket.callerName,\n            contact_no: ticket.contactNo,\n            additional_notes: ticket.additionalNotes,\n            supporting_documents: [],\n\n            ticket_category: {\n                ticket_type: ticket.ticketType,\n                specific_type: ticket.specificType,\n                urgency: ticket.urgency,\n                assign_to: `${ticket.agent.id} - ${ticket.agent.name}`,\n\n                availment_details: (availment ? {\n                    provider: availment.provider.value + ' - ' + availment.provider.label,\n                    availments_list: [{\n                        diagnosis: availment.diagnoses.map(availment => {\n                            return {\n                                icd10code: availment.icd10Code.value,\n                                diagnosis: availment.icd10Code.label,\n                                remarks: '',\n                                is_primary: false,\n                                is_final: false,\n                                \n                                doctors: [\n                                    {\n                                        id: '',\n                                        name: availment.doctors[0].name,\n                                        specialization: '',\n                                        fee: 0,\n                                        no_of_visits: '',\n                                        remarks: ''\n                                    }\n                                ],\n\n                                procedures: availment.procedures\n                                    .filter(procedure => {\n                                        return procedure.cptCode.value;\n                                    })\n                                    .map(procedure => {\n                                        return {\n                                            cpt_code: procedure.cptCode.value,\n                                            procedure_name: procedure.cptCode.label,\n                                            amount: procedure.amount.toString(),\n                                            doctor: '',\n                                            phic: procedure.isPHIC,\n                                            notes: '',\n                                            date_added: new Date(),\n                                            assessment_type: procedure.assessmentType,\n                                            assessment_remarks: procedure.assessmentRemarks,\n                                            approved_amount: procedure.approvedAmount\n                                        }\n                                    })\n                            }\n                        })\n                    }]\n                } : undefined),\n\n                confinement_details: (confinement ? {\n                    provider: confinement.provider.value + ' - ' + confinement.provider.label,\n                    date_admitted: confinement.dateAdmitted,\n                    confinement_kind: confinement.confinementKind,\n                    gift_given: confinement.giftGiven,\n                    updates: confinement.updates,\n                    room_accommodation: confinement.accommodations.map(accommodation => {\n                        return {\n                            room_type: accommodation.roomType,\n                            no_of_days: accommodation.days.toString(),\n                            amount: accommodation.costPerDay\n                        }\n                    }),\n                    diagnoses: confinement.diagnoses.map(diagnosis => {\n                        return {\n                            icd10code: diagnosis.icd10Code.value,\n                            diagnosis: diagnosis.icd10Code.label,\n                            remarks: diagnosis.remarks,\n                            is_primary: diagnosis.isPrimary,\n                            is_final: diagnosis.isFinal,\n                            doctors: diagnosis.doctors.map(doctor => {\n                                return {\n                                    id: doctor.id,\n                                    name: doctor.name,\n                                    specialization: doctor.specialization,\n                                    fee: doctor.fee,\n                                    no_of_visits: doctor.noOfVisits.toString(),\n                                    remarks: doctor.remarks,\n                                    type: doctor.type\n                                }\n                            }),\n                            procedures: diagnosis.procedures.map(procedure => {\n                                return {\n                                    cpt_code: procedure.cptCode.value + '', // Convert to string\n                                    procedure_name: procedure.cptCode.label,\n                                    amount: procedure.amount.toString(),\n                                    doctor: procedure.doctor,\n                                    phic: procedure.isPHIC,\n                                    notes: procedure.notes,\n                                    date_added: procedure.dateAdded,\n                                    assessment_type: procedure.assessmentType,\n                                    assessment_remarks: procedure.assessmentRemarks,\n                                    approved_amount: procedure.approvedAmount\n                                }\n                            }),\n                            assessment_type: diagnosis.assessmentType,\n                            assessment_remarks: diagnosis.assessmentRemarks,\n                            approved_amount: diagnosis.approvedAmount\n                        }\n                    }),\n                    others: confinement.others,\n                    coverage: confinement.coverage.label,\n                    philhealth_amount: confinement.philhealthAmount,\n                    final_bill: confinement.finalBill,\n                    discharge_date: confinement.dischargeDate\n                } : undefined),\n\n                consultation_details: (consultation ? {\n                    provider: `${consultation.provider.value} - ${consultation.provider.label}`,\n                    diagnosis: `${consultation.diagnosis.value} - ${consultation.diagnosis.label}`,\n                    doctor: `${consultation.doctor.value} - ${consultation.doctor.label}`,\n                    notes: consultation.notes,\n                    assessment_type: consultation.assessmentType,\n                    assessment_remarks: consultation.assessmentRemarks,\n                    approved_amount: consultation.approvedAmount\n                } : undefined)\n            },\n            pmaker_case_uid: ticket.pmCaseId,\n            status: ticket.status,\n            date_created: ticket.dateCreated,\n            date_updated: ticket.dateUpdated,\n            date_escalated: null,\n            created_by: {\n                _id: ticket.createdBy.id,\n                name: ticket.createdBy.name\n            },\n            tmp: {\n                user_id: localStorage['user_id'],\n                module: 'Customer Care',\n                process: 'Create Ticket',\n                timestamp: new Date()\n            },\n            member_id: member ? member.memberId : '',\n            member_data: member ? {\n                is_vip: member.isVip,\n                last_name: member.lastName,\n                middle_name: member.middleName,\n                first_name: member.firstName,\n                client: member.client ? member.client.registeredName : undefined\n            } : undefined,\n            client_id: client ? client.corporateAccountNo : '',\n            client_data: \n                client ? {\n                    registered_name: client.registeredName\n                } : member ? {\n                    registered_name: member.client ? member.client.registeredName : undefined\n                 } : undefined,\n\n            approval_code: ticket.approvalCode,\n            generate_approval_code: true,\n            loa: loas.map(loa => {\n                return {\n                    _id: loa.id,\n                    loa_no: loa.loaNo,\n                    amount: loa.amount,\n                    date: loa.date,\n                    notes: loa.notes\n                }\n            })\n        };\n    }\n\n\n\n\n\n\n\n\n\n\n    static getMemberData(response: any): MemberData {\n        return {\n            id: response._id,\n            memberId: response.member_id,\n            firstName: response.first_name,\n            middleName: response.middle_name,\n            lastName: response.last_name,\n            birthDate: new Date(response.date_of_birth),\n            gender: response.gender,\n            civilStatus: response.civil_status,\n            contract: response.latest_contract ? {\n                id: response.latest_contract._id,\n                name: response.latest_contract.name,\n                status: response.latest_contract.status,\n                startDate: new Date(response.latest_contract.custom_metadata.coverage_start_date),\n                endDate: new Date(response.latest_contract.custom_metadata.coverage_end_date)\n            } : undefined,\n            isVip: response.is_vip,\n            status: response.member_status,\n            client: Payloads.getClientData(response.client)\n        }\n    }\n\n\n\n\n\n\n\n\n\n    \n    static getClientData(response: any, benefitTree?: any, planTypes?: any): ClientData {\n\n        const getAddress = (address: any): AddressData => {\n            return {\n                floor: address.floor,\n                unit: address.unit,\n                bldgNo: address.bldg_no,\n                bldgName: address.bldg_name,\n                street: address.street,\n                barangay: address.brgy,\n                city: address.city,\n                region: address.region,\n                zipCode: address.zip_code,\n                contactNos: address.contact_numbers ? address.contact_numbers.map(contact => {\n                    return contact.no;\n                }) : [],\n                contactPersons: address.contact_persons ? address.contact_persons.map(contact => {\n                    return {\n                        name: contact.name,\n                        contactNo: contact.contact_no,\n                        email: contact.email_address,\n                        designation: contact.designation,\n                    }\n                }) : []\n            }\n        }\n\n        const getContract = (benefitTree: any[]): ContractData => {\n            let name = '', startDate = undefined, endDate = undefined;\n\n            benefitTree.forEach(item => {\n                if (item.level === 2 && item.tree_id === 'MCT') {\n                    name = item.name ? item.name : '';\n                    if (item.custom_metadata) {\n                        startDate = item.custom_metadata.coverage_start_date || '';\n                        endDate = item.custom_metadata.coverage_end_date || '';\n                    }\n                }\n            });\n\n            return {\n                id: response.contracts && response.contracts.length > 0 ? response.contracts[0] : '',\n                name: name,\n                startDate: startDate ? new Date(startDate) : undefined,\n                endDate: endDate ? new Date(endDate) : undefined\n            }\n        }\n\n        return {\n            id: response._id,\n            registeredName: response.registered_name,\n            brandName: response.brand_name,\n            cardName: response.name_on_card,\n            corporateAccountNo: response.corporate_account_no,\n            tinNo: response.tin_no,\n            vatType: response.vat_type,\n            evatNo: response.evat_no,\n            industry: response.industry,\n            ownership: response.ownership,\n            years: response.years_of_existence,\n            prevHMOProvider: response.prev_hmo_provider,\n            prevHMOEffectivityDate: response.prev_hmo_effectivity_date ? new Date(response.prev_hmo_effectivity_date) : undefined,\n            prevHMOExpiryDate: response.prev_hmo_effectivity_date ? new Date(response.prev_hmo_expiry_date) : undefined,\n            secRegNo: response.sec_reg_no,\n            authSignatory: response.authorized_signatory,\n            authContactNo: response.authorized_signatory_contact_no,\n            authEmail: response.authorized_signatory_email_address,\n            authDesignation: response.authorized_signatory_designation,\n            sourceOfFunds: response.sources_of_funds,\n            salesChannel: response.sales_channel ? {\n                type: response.sales_channel.type,\n                name: response.sales_channel.agent_name,\n                company: response.sales_channel.company_name,\n                contactName: response.sales_channel.contact_person,\n                position: response.sales_channel.position,\n                contactNo: response.sales_channel.contact_no,\n                email: response.sales_channel.email_address,\n            } : undefined,\n            mainOfficeAddress: response.main_office_address ? \n                getAddress(response.main_office_address) : undefined,\n            branches: response.branches ? (\n                    response.branches.map(branch => {\n                    return getAddress(branch);\n                })\n            ) : [],\n            status: response.status,\n            contract: \n                benefitTree ? (\n                    getContract(benefitTree)\n                ) : response.latest_contract ? {\n                    id: response.latest_contract._id,\n                    name: response.latest_contract.name,\n                    status: response.latest_contract.status,\n                    startDate: new Date(response.latest_contract.custom_metadata.coverage_start_date),\n                    endDate: new Date(response.latest_contract.custom_metadata.coverage_end_date)\n                } : undefined,\n            attachments: response.attachments ? (\n                response.attachments.map(attachment => {\n                    return {\n                        type: attachment.type,\n                        url: attachment.url,\n                        tags: attachment.tags,\n                        origName: attachment.originalname,\n                        encoding: attachment.encoding,\n                        mimeType: attachment.mimetype,\n                        size: attachment.size,\n                    }\n                })\n            ): undefined,\n            files: response.files,\n            groupName: response.group_name,\n            headCompanyName: response.head_company_name,\n            memberFields: response.member_data_fields ? (\n                response.member_data_fields.map(field => {\n                    return {\n                        isRequired: field.is_required,\n                        fieldName: field.system_name,\n                        dataType: field.data_type,\n                        inputType: field.input_type,\n                        type: field.field_type\n                    }\n                })\n            ): undefined,\n            planTypes: planTypes ? planTypes.map(planType => {\n                return {\n                    name: planType.plan_type_name,\n                    code: planType.plan_type_code,\n                    benefits: planType.benefit_count,\n                    principals: planType.principal_count,\n                    dependents: planType.dependent_count,\n                    dateCreated: new Date(planType.date_created),\n                    dateUpdated: new Date(planType.date_updated),\n                    version: planType.version\n                }\n            }) : undefined,\n            servicingInstructions: response.servicing_instructions ? {\n                sortingOfCards: response.servicing_instructions.sorting_of_cards ? {\n                    cardSorting: response.servicing_instructions.sorting_of_cards.card_sorting,\n                    cardPacking: response.servicing_instructions.sorting_of_cards.card_packing,\n                    packAccordingTo: response.servicing_instructions.sorting_of_cards.pack_accdg_to\n                } : undefined,\n                printingOfCards: response.servicing_instructions.printing_of_cards,\n                billing: response.servicing_instructions.billing ? {\n                    addressSoaTo: response.servicing_instructions.billing.address_soa_to,\n                    sendSoaTo: response.servicing_instructions.billing.send_soa_to,\n                    sendSoaDays: response.servicing_instructions.billing.send_soa_days,\n                    sendSoaFormats: response.servicing_instructions.billing.send_soa_formats,\n                    cmApplication: response.servicing_instructions.billing.cm_application,\n                    additionalRequirements: response.servicing_instructions.billing.additional_requirements,\n                    soaGeneration: response.servicing_instructions.billing.soa_generation,\n                    soaSorting: response.servicing_instructions.billing.soa_sorting,\n                    additionalFieldsSoa: response.servicing_instructions.billing.additional_fields_soa\n                } : undefined,\n                enrollment: response.servicing_instructions.enrollment ? {\n                    employeeEntrollment: response.servicing_instructions.enrollment.employee_enrollment,\n                    dependentEntrollment: response.servicing_instructions.enrollment.dependent_enrollment,\n                    enrollmentDoneThrough: response.servicing_instructions.enrollment.enrollment_done_through\n                } : undefined,\n                collection: response.servicing_instructions.collection ? {\n                    prefredMeansOfPayment: response.servicing_instructions.collection.preferred_means_of_payment,\n                    employeeEnrollment: response.servicing_instructions.collection.employee_enrollment,\n                    contactPersonForFollowups: response.servicing_instructions.collection.contact_person_for_followups,\n                    detialsForPaymentPickup: response.servicing_instructions.collection.details_for_payment_pickup,\n                    preferedBank: response.servicing_instructions.collection.preferred_bank\n                } : undefined,\n                availment: response.servicing_instructions.availment,\n                reportorial: response.servicing_instructions.reportorial ? (\n                    response.servicing_instructions.reportorial.map(data => {\n                        return {\n                            reportType: data.report_type,\n                            frequency: data.frequency,\n                            available: data.available\n                        }\n                    })\n                ) : undefined,\n            } : undefined,\n        }\n    }\n\n\n\n\n\n\n\n\n\n\n    static getContractData(response: any): ContractData[] {\n        return response.map(contract => {\n            return {\n                id: contract._id,\n                name: contract.name,\n                contractNo: contract.contract_no,\n                type: contract.handler,\n                status: contract.status,\n                // startDate: contract.name,\n                // endDate: contract.name,\n                // version: contract.name\n            }\n        })\n    }\n\n\n\n\n\n\n\n\n\n\n    static getAuditLogs(response: any[]): LogData[] {\n        return response.map(log => {\n            return {\n                activityId: log.activity_id,\n                user: log.user,\n                name: log.activity,\n                date: log.date,\n                time: log.time\n            }\n        })\n    }\n\n\n\n\n\n\n\n\n\n\n    static getDocuments(response: any[]): DocumentData[] {\n        return response.map(doc => {\n            return {\n                clientId: doc.client_id,\n                name: doc.document_name,\n                proposalNo: doc.proposal_number,\n                files: doc.files,\n                uploader: doc.uploaded_by,\n                uploadDate: new Date(doc.uploaded_date),\n                version: doc.version,\n                signedDate: doc.date_signed ? new Date(doc.date_signed) : undefined,\n                batchName: doc.batch_name,\n                endorseDate: doc.date_endorsed ? new Date(doc.date_endorsed) : undefined,\n                type: doc.type,\n                sender: doc.sender,\n                section: doc.section\n            }\n        })\n    }\n\n\n\n\n\n\n\n\n\n\n    static getMembers(response: any[]): MemberData[] {\n        return response.map(member => {\n            return {\n                id: member._id,\n                memberId: member.member_card_no,\n                firstName: member.first_name,\n                middleName: member.middle_name,\n                lastName: member.last_name,\n                birthDate: new Date(member.date_of_birth),\n                gender: member.gender,\n                civilStatus: member.civil_status,\n                corporateName: member.client_object.registered_name,\n                status: member.member_status,\n                effectivityDate: member.effectivity_date ? new Date(member.effectivity_date) : undefined,\n                terminationDate: member.termination_date ? new Date(member.termination_date) : undefined\n                // isVip: member.is_vip,\n                // client: Payloads.getClientData(member.client)\n            }\n        })\n    }\n\n\n\n\n\n\n\n\n\n\n    static getTicketData(response: any, appNo: string): TicketData {\n        const ticketCategory = response.ticket_category;\n\n        return {\n            id: response._id,\n            ticketChannel: response.received_via,\n            transactionNo: response.transaction_no,\n            ticketSource: response.received_from,\n            memberName: response.member_name,\n            clientName: response.corporate_client,\n            brokerName: response.broker,\n            facility: { value: '', label: response.hospital_name },\n            department: response.department,\n            callerName: response.caller_name,\n            contactNo: response.contact_no,\n            ticketType: ticketCategory.ticket_type,\n            specificType: ticketCategory.specific_type,\n            urgency: ticketCategory.urgency,\n            agent: { id: '', name: ticketCategory.assign_to },\n            additionalNotes: response.additional_notes,\n            additionalFiles: [],\n            ticketNo: appNo,\n            pmCaseId: response.pmaker_case_uid,\n            status: response.status,\n            createdBy: { id: response.created_by.id, name: response.created_by.name },\n            dateCreated: new Date(response.date_created),\n            dateUpdated: new Date(response.date_updated),\n            dateEscalated: new Date(response.date_escalated),\n            approvalCode: response.approval_code\n        }\n    }\n\n\n\n\n\n\n\n\n\n\n    static getConfinementData(confinement: any, response: any): UpdateInpatientDetails {\n        const providerData = confinement.provider.split(' - ');\n        return {\n            provider: { value: providerData[0], label: providerData[1] },\n            dateAdmitted: new Date(confinement.date_admitted),\n            confinementKind: confinement.confinement_kind,\n            giftGiven: confinement.gift_given,\n            coverage: { value: '', label: confinement.coverage },\n            ticketNo: confinement.ticket_no,\n            paidBy: confinement.paid_by,\n            philhealthAmount: confinement.philhealth_amount,\n            finalBill: confinement.final_bill,\n            dischargeDate: confinement.discharge_date ? new Date(confinement.discharge_date) : null,\n\n            primaryDiagnosisIndex: confinement.diagnoses\n                .map((value, index) => {\n                    if (value.is_primary) {\n                        return index;\n                    }\n                    return -1;\n                })\n                .filter(value => value != -1)[0],\n\n            updates: confinement.updates.map(value => {\n                return {\n                    remarks: value.remarks,\n                    date: new Date(value.date),\n                    hospitalBill: parseFloat(value.hospital_bill)\n                };\n            }),\n            accommodations: confinement.room_accommodation.map(value => {\n                return {\n                    roomType: value.room_type,\n                    days: value.no_of_days,\n                    costPerDay: value.amount\n                };\n            }),\n            diagnoses: confinement.diagnoses.map(value => {\n                return {\n                    diagnosis: { value: value.icd10code, label: value.diagnosis },\n                    remarks: value.remarks,\n                    isFinal: value.is_final,\n                    isPrimary: value.is_primary\n                };\n            }),\n            physicians: [].concat(...confinement.diagnoses.map(diagnosis => {\n                return diagnosis.doctors.map(doctor => {\n                    return {\n                        physician: {\n                            value: '',\n                            label: doctor.name,\n                            params: [doctor.specialization, doctor.type]\n                        },\n                        diagnosis: { value: diagnosis.icd10code, label: diagnosis.diagnosis },\n                        remarks: doctor.remarks,\n                        visits: doctor.no_of_visits,\n                        amount: doctor.fee\n                    };\n                });\n            })),\n            procedures: [].concat(...confinement.diagnoses.map(diagnosis => {\n                return diagnosis.procedures.map(procedure => {\n                    return {\n                        procedure: { value: procedure.cpt_code, label: procedure.procedure_name },\n                        diagnosis: { value: diagnosis.icd10code, label: diagnosis.diagnosis },\n                        physician: { value: '', label: procedure.doctor },\n                        date: new Date(procedure.date_added),\n                        remarks: procedure.notes,\n                        amount: parseInt(procedure.amount)\n                    };\n                });\n            })),\n            items: confinement.others.map(value => {\n                return {\n                    name: value.item_name,\n                    type: { value: '', label: value.type },\n                    amount: value.amount\n                };\n            }),\n            files: response.supporting_documents.map(value => {\n                return {\n                    docName: value.doc_name,\n                    file: value\n                };\n            })\n        }\n    }\n\n\n\n\n\n\n\n\n\n\n    \n}","import * as React from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { GlobalFunction } from '../GlobalFunction';\nimport { MemberData, TicketData, PartialMemberData, DropdownChoice, BenefitData, SimpleTicketData, ClientData, PartialClientData } from 'Pages/CustomerCarePage/Models';\nimport { TextButton } from '../Components/TextButton';\nimport { SearchedMembersList } from './SearchedMembersList';\nimport { API } from '../API';\nimport { Loading } from '../Components/Loading';\nimport { TypeValueField } from '../Components/TypeValueField';\nimport { MemberDataSection } from './MemberDataSection';\nimport { Processmaker } from '../Processmaker';\nimport { ClientDataSection } from './ClientDataSection';\nimport { SearchedClientsList } from './SearchedClientsList';\nimport { Payloads } from '../Payloads';\n\ninterface IProps {\n    member?: MemberData;\n    client?: ClientData;\n    ticket?: TicketData;\n    ticketStatus: 'Create' | 'Update' | 'Resolve';\n    onUpdateMemberStateChange?: (member?: MemberData) => void;\n    onUpdateClientStateChange?: (client?: ClientData) => void;\n\n    promptChooseMember?: boolean;\n    disableRecentTickets?: boolean;\n    disableLinkedTickets?: boolean;\n}\n\ninterface IStates {\n    searchIDValue: string;\n    searchIDType: DropdownChoice;\n    recentTickets?: SimpleTicketData[];\n    linkedTickets?: SimpleTicketData[];\n\n    isMembersLoaded: boolean;\n    loadingMembers: boolean;\n    loadingMember: boolean;\n    loadingBenefits: boolean;\n\n    isClientsLoaded: boolean;\n    loadingClients: boolean;\n    loadingClient: boolean;\n\n    loadingRecentTickets: boolean;\n    loadingLinkedTickets: boolean;\n}\n\nexport class LeftPanelSection extends React.Component<IProps, IStates> {\n\n    clients: PartialClientData[];\n    members: PartialMemberData[];\n    benefits: BenefitData[];\n    idTypes: DropdownChoice[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            searchIDValue: '',\n            searchIDType: { value: '', label: '' },\n            isMembersLoaded: false,\n            loadingMembers: false,\n            loadingMember: false,\n            loadingBenefits: false,\n            isClientsLoaded: false,\n            loadingClients: false,\n            loadingClient: false,\n            loadingRecentTickets: false,\n            loadingLinkedTickets: false\n        };\n\n        this.clients = [];\n        this.members = [];\n        this.benefits = [];\n\n        this.idTypes = [\n            { value: '1', label: 'Client ID' },\n            { value: '2', label: 'Member ID' }\n        ]\n    }\n\n    getMemberData = (memberId: string) => {\n        API.get(`customer-care/members/${memberId}`, \n            (response) => {\n                console.log(response);\n                if (this.props.onUpdateMemberStateChange && this.props.onUpdateClientStateChange) {\n                    this.props.onUpdateClientStateChange(undefined);\n                    this.props.onUpdateMemberStateChange(Payloads.getMemberData(response));\n                    getMemberBenefit();\n                    this.getRecentTicketsData(memberId);\n                }\n                this.setState({loadingMember: false});\n            },\n            (error) => {\n                console.log(error);\n            });\n\n        const getMemberBenefit = () => {\n            this.setState({loadingBenefits: true});\n            API.get(`customer-care/members/${memberId}/benefits`,\n                (response) => {\n                    this.benefits = \n                        combineNodes(\n                            response.filter(benefit => benefit.level == 6),\n                            response.filter(benefit => benefit.level == 7)\n                        )\n                        .map(benefit => {\n                            return {\n                                category: benefit.parent_name,\n                                name: benefit.name,\n                                ...(benefit.limits.length > 0 ? \n                                    {\n                                        limitType: benefit.limits[0].type,\n                                        limit: benefit.limits[0].limit,\n                                        limitUnit: benefit.limits[0].limit_unit\n                                    } : undefined)\n                            }\n                        });\n                    \n                    this.setState({loadingBenefits: false});\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({loadingBenefits: false});\n                });\n        }\n\n        const combineNodes = (parentNodes: any, childNodes: any) => {\n            const nodes = parentNodes.reduce ((result, parent) => {\n                parent.children.map ((child) => {\n                let foundChild = childNodes.find ((childNode) => child === childNode._id);\n            \n                if (foundChild) {\n                    let child = Object.assign({}, foundChild);\n            \n                    child['parent_name'] = parent.name;\n                    child['parent_code'] = parent.code;\n                    child['disabled'] = false;\n                    result.push(child);\n                }\n                });\n            \n                return result;\n            }, new Array());\n            \n            return nodes;\n        };\n    }\n    \n    getClientData = (clientId: string) => {\n        API.get(`customer-care/clients/${clientId}`,\n            (response) => {\n                console.log(response);\n                if (this.props.onUpdateClientStateChange && this.props.onUpdateMemberStateChange) {\n                    this.props.onUpdateMemberStateChange(undefined);\n                    this.props.onUpdateClientStateChange(Payloads.getClientData(response));\n                    this.getRecentTicketsData(clientId);\n                    this.getLinkedTicketsData(clientId);\n                }\n                this.setState({loadingClient: false});\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    getRecentTicketsData = (targetId: string) => {\n        if (!this.state.loadingRecentTickets) {\n            this.setState({loadingRecentTickets: true});\n        }\n        \n        API.get('customer-care/tickets',\n            (tickets) => {\n                const recentTickets = tickets.filter(ticket => {\n                    return (\n                        ticket.member_id && ticket.member_id.length > 0 ? ticket.member_id === targetId :\n                        ticket.client_id && ticket.client_id.length > 0 ? ticket.client_id === targetId : false\n                    );\n                });\n                if (recentTickets) {\n                    recentTickets.map(ticket => {\n                        processmakerParticipated(ticket);\n                    });\n                    this.setState({loadingRecentTickets: false});\n                }\n            },\n            (error) => {\n                console.log(error);\n                this.setState({loadingRecentTickets: false});\n            }\n        );\n\n        const processmakerParticipated = (ticket: any) => {\n            Processmaker.get('cases/participated',\n                (cases) => {\n                    const matchedCase = cases.filter(caseItem => caseItem.app_uid === ticket.pmaker_case_uid)[0];\n                    if (matchedCase && this.state.recentTickets) {\n                        this.state.recentTickets.push({\n                            ticketNo: \n                                GlobalFunction.generateTicketNumber(\n                                    ticket.ticket_category.ticket_type,\n                                    ticket.ticket_category.specific_type,\n                                    matchedCase.app_number\n                                ),\n                            specificType: ticket.ticket_category.specific_type !== 'Not Applicable' ? (\n                                ticket.ticket_category.specific_type\n                            ) : (\n                                ticket.ticket_category.ticket_type\n                            ),\n                            status: ticket.status,\n                            dateCreated: new Date(ticket.date_created),\n                            dateUpdated: new Date(ticket.date_updated)\n                        });\n                        this.setState({recentTickets: this.state.recentTickets});\n                    }\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({loadingRecentTickets: false});\n                }\n            );\n        }\n    }\n\n    // @ts-ignore\n    getLinkedTicketsData = (targetId: string) => {\n        if (!this.state.loadingLinkedTickets) {\n            this.setState({loadingLinkedTickets: true});\n        }\n        \n        if (this.state.linkedTickets) {\n            this.state.linkedTickets.push({\n                ticketNo: '999-999-9999*',\n                specificType: 'None*',\n                status: 'None*',\n                dateCreated: new Date(),\n                dateUpdated: new Date()\n            });\n            this.setState({linkedTickets: this.state.linkedTickets});\n            console.log('linkedTickets', this.state.linkedTickets);\n        }\n        this.setState({loadingLinkedTickets: false});\n    }\n\n    onSearchChanged = (value: string) => {\n\n        const sliceMemberID = (text: string) => {\n            const slicedText: string[] = [];\n            slicedText.push(text.slice(0, 2));\n            slicedText.push(text.slice(2, 4));\n            slicedText.push(text.slice(4, 9));\n            slicedText.push(text.slice(9, 14));\n            slicedText.push(text.slice(14, 16));\n            return slicedText.filter(text => text !== '');\n        }\n    \n        const sliceClientID = (text: string) => {\n            const slicedText: string[] = [];\n            slicedText.push(text.slice(0, 2));\n            slicedText.push(text.slice(2, 4));\n            slicedText.push(text.slice(4, 9));\n            return slicedText.filter(text => text !== '');\n        }\n\n        const onSearchMember = () => {\n            if (trimmedValue.length >= 13) {\n                this.setState({loadingMembers: true});\n                API.get(`customer-care/members?` +\n                    `filter[where][member_id][like]=${newValue}&` +\n                    `filter[where][member_status][inq]=Active&` +\n                    `filter[where][member_status][inq]=Cancelled&` +\n                    `filter[where][member_status][inq]=Expired&` + \n                    `filter[where][member_status][inq]=Suspended&` + \n                    `filter[where][member_status][inq]=Terminated`,\n                    (response) => {\n                        console.log(response);\n                        this.members = response.map(member => {\n                            return {\n                                memberId: member.member_id,\n                                firstName: member.first_name,\n                                middleName: member.middle_name,\n                                lastName: member.last_name,\n                                clientName: member.client.registered_name,\n                                isVip: member.is_vip\n                            }\n                        });\n                        this.setState({\n                            isMembersLoaded: true,\n                            loadingMembers: false\n                        });\n                    },\n                    (error) => {\n                        console.log(error);\n                        this.setState({\n                            isMembersLoaded: true,\n                            loadingMembers: false\n                        });\n                    });\n            }\n        }\n\n        const onSearchClient = () => {\n            if (trimmedValue.length >= 8) {\n                this.setState({loadingClients: true});\n                API.get(`customer-care/client?filter[where][corporate_account_no][like]=${newValue}`,\n                    (response) => {\n                        console.log(response);\n                        this.clients = response.map(client => {\n                            return {\n                                id: client._id,\n                                clientId: client.corporate_account_no,\n                                clientName: client.registered_name\n                            }\n                        });\n                        this.setState({\n                            isClientsLoaded: true,\n                            loadingClients: false\n                        });\n                    },\n                    (error) => {\n                        console.log(error);\n                        this.setState({\n                            isClientsLoaded: true,\n                            loadingClients: false\n                        });\n                    });\n            }\n        }\n\n        const trimmedValue = value.replace(/-/g, '');\n        const splitValue = this.state.searchIDType.label === 'Client ID' ? (\n            sliceClientID(trimmedValue)\n        ) : (\n            sliceMemberID(trimmedValue)\n        );\n        const newValue = splitValue ? splitValue.join('-') : '';\n        this.setState({searchIDValue: newValue});\n\n        if (this.state.searchIDType.label === 'Client ID') {\n            onSearchClient();\n        }\n\n        if (this.state.searchIDType.label === 'Member ID') {\n            onSearchMember();\n        }\n    }\n\n\n\n\n\n\n\n\n    render(): JSX.Element {\n        return (\n            <div className='member-info'>\n                {this.props.ticketStatus === 'Create' ? (\n                    <div>\n                        {this.renderSearchArea()}\n                        <div className='line-border' />\n                    </div>\n                ) : this.props.ticketStatus === 'Update' ||\n                    this.props.ticketStatus === 'Resolve' ? (\n                    this.renderTopArea()\n                ) : null}\n                {this.props.member ? (\n                    <MemberDataSection \n                        member={this.props.member}\n                        benefits={this.benefits}\n                        recentTickets={this.state.recentTickets}\n                        disableRecentTickets={this.props.disableRecentTickets}\n                        loadingBenefits={this.state.loadingBenefits}\n                        loadingRecentTickets={this.state.loadingRecentTickets}\n                        onUpdateMemberStateChange={this.props.onUpdateMemberStateChange}\n                        getRecentTicketsData={this.getRecentTicketsData} />\n                ) : this.props.client ? (\n                    <ClientDataSection \n                        client={this.props.client}\n                        recentTickets={this.state.recentTickets}\n                        linkedTickets={this.state.linkedTickets}\n                        disableRecentTickets={this.props.disableRecentTickets}\n                        disableLinkedTickets={this.props.disableLinkedTickets}\n                        loadingRecentTickets={this.state.loadingRecentTickets}\n                        loadingLinkedTickets={this.state.loadingLinkedTickets}\n                        getRecentTicketsData={this.getRecentTicketsData}\n                        getLinkedTicketsData={this.getLinkedTicketsData} />\n                ) : (\n                    <>\n                    {this.state.loadingMember || this.state.loadingClient ? (\n                        <Loading height='3rem' />\n                    ) : null}\n                    {this.props.promptChooseMember ? (\n                        <div className='section' style={{color: '#E53935'}}>\n                            Choose a member/client first before submitting the ticket.\n                        </div> \n                    ) : null}\n                    </>\n                )}\n                    \n                {this.props.ticket ? (\n                    this.renderTicketData(this.props.ticket)\n                ) : (null)}\n                <div className='section' />\n            </div>\n        );\n    }\n\n\n\n    renderSearchArea(): JSX.Element {\n        return (\n            <div className='section'>\n                <Breadcrumbs className='bread-crumbs'>\n                    <Link href='#/customer-care'>TICKETS</Link>\n                    <div className='current-text'>CREATE A TICKET</div>\n                </Breadcrumbs>\n\n                <div className='header-1'>Create Ticket</div>\n\n                <div style={{position: 'relative'}}>\n                    <TypeValueField \n                        placeholder='Search ID'\n                        type={this.state.searchIDType}\n                        value={this.state.searchIDValue}\n                        choices={this.idTypes}\n                        onChangeType={(type: DropdownChoice) => {\n                            this.setState({searchIDType: type});\n                        }}\n                        onChangeValue={(value: string) => {\n                            this.onSearchChanged(value);\n                        }} />\n\n                    {this.state.loadingMembers ||  this.state.loadingClients ? (\n                        <div style={{position: 'absolute', right: '8px', bottom: '13px'}}>\n                            <Loading height='none' size={16}/>\n                        </div>\n                    ) : null}\n                </div>\n\n                {this.state.searchIDType.label === 'Member ID' ? (\n                    <SearchedMembersList \n                        searchText={this.state.searchIDValue}\n                        members={this.members}\n                        onSelectMember={(memberId: string) => {\n                            this.getMemberData(memberId);\n                            if (this.props.onUpdateMemberStateChange) {\n                                this.props.onUpdateMemberStateChange(undefined);\n                            }\n                            this.setState({\n                                searchIDValue: '',\n                                loadingMember: true,\n                                recentTickets: []\n                            });\n                        }} />\n\n                ) : this.state.searchIDType.label === 'Client ID' ? (\n                    <SearchedClientsList\n                        searchText={this.state.searchIDValue}\n                        clients={this.clients}\n                        onSelectClient={(clientId: string) => {\n                            this.getClientData(clientId);\n                            if (this.props.onUpdateClientStateChange) {\n                                this.props.onUpdateClientStateChange(undefined);\n                            }\n                            this.setState({\n                                searchIDValue: '',\n                                loadingClient: true,\n                                recentTickets: [],\n                                linkedTickets: []\n                            });\n                        }} />\n                    \n                ) : null}\n\n                <TextButton \n                    icon={faSearch}\n                    label='Advanced Search'\n                    onClick={() => {\n\n                    }}\n                    />\n            </div>\n        );\n    }\n\n    renderTopArea(): JSX.Element {\n        return (\n            <div className='section'>\n                <Breadcrumbs className='bread-crumbs'>\n                    <Link href='#/customer-care'>TICKETS</Link>\n                    <Link className='current-text'>{this.props.ticketStatus.toUpperCase() + ' TICKET'}</Link>\n                </Breadcrumbs>\n\n                {this.props.ticket ? (\n                    <span className='header-1'>\n                        {`${this.props.ticketStatus} Ticket ${this.props.ticket.ticketNo}`}\n                    </span>\n                ) : null}\n                \n\n            </div>\n        );\n    }\n\n    renderTicketData(ticket: TicketData): JSX.Element {\n        return (\n            <div className='section'>\n                <div className='sub-section'>\n                    <div className='light-text'>TICKET TYPE</div>\n                    <div className='small-text'>{ticket.ticketType}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>SPECIFIC TYPE</div>\n                    <div className='small-text'>{ticket.specificType}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>URGENCY</div>\n                    <div className='small-text'>{ticket.urgency}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>ASSIGNED TO</div>\n                    <div className='small-text'>{ticket.agent.name}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>RECEIVED VIA</div>\n                    <div className='small-text'>{ticket.ticketSource}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>RECEIVED FROM</div>\n                    <div className='small-text'>{ticket.callerName}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>NUMBER/EMAIL</div>\n                    <div className='small-text'>{ticket.contactNo}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>CALL TRANSACTION NO.</div>\n                    <div className='small-text'>{ticket.transactionNo}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>CREATED BY</div>\n                    <div className='small-text'>{ticket.createdBy.name}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>DATE AND TIME CREATED</div>\n                    <div className='small-text'>{GlobalFunction.toDateAndTime(ticket.dateCreated)}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>DATE AND TIME LAST UPDATED</div>\n                    <div className='small-text'>{GlobalFunction.toDateAndTime(ticket.dateUpdated)}</div>\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\nimport Select from 'react-select';\nimport { DropdownChoice } from '../Models';\nimport { Option } from 'react-select/src/filters';\n\ninterface IProps {\n    placeholder?: string;\n    disabled?: boolean;\n    value: DropdownChoice;\n    choices: DropdownChoice[];\n    error?: boolean;\n    onChange: (value: DropdownChoice) => void;\n}\n\ninterface IStates {\n    value: string;\n}\n\nexport class Dropdown extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            value: ''\n        }\n    }\n\n    shouldComponentUpdate(props: IProps, _state: any) {\n        return (\n            (this.props.placeholder !== props.placeholder) ||\n            (this.props.disabled !== props.disabled) ||\n            (this.props.value !== props.value) ||\n            (this.props.choices !== props.choices) ||\n            (this.props.error !== props.error)\n        );\n    }\n\n    render(): JSX.Element {\n\n        return (\n            <div className='dropdown'>\n                {this.props.placeholder ? (\n                    <div className={this.props.disabled ? 'text-disabled text' : 'text'}>\n                        {this.props.placeholder}\n                    </div>\n                ) : null}\n                \n                <Select\n                    className='actual-dropdown'\n                    classNamePrefix={this.props.error ? 'actual-dropdown-error' : 'actual-dropdown'}\n                    isDisabled={this.props.disabled ? this.props.disabled : false}\n                    value={this.props.value}\n                    options={this.props.choices} \n                    onInputChange={(value: string, _a) => {\n                        this.setState({value: value});\n                    }}\n                    noOptionsMessage={() => {\n                        return (\n                            this.props.choices.length === 0 ? (\n                                'Loading...'\n                            ) : (\n                                this.state.value.length < 3 ? (\n                                    'Enter at least 3 characters to search'\n                                ) : (\n                                    'No options'\n                                )\n                            )\n                        )\n                    }}\n                    filterOption={(option: Option, rawInput: string) => {\n                        const hasNoInput = (rawInput.length === 0);\n                        const choicesAreShort = (this.props.choices.length <= 20);\n                        const inputIsShort = (rawInput.length < 3);\n                        const isInputMatch = (option.label.toLowerCase().includes(rawInput.toLowerCase()));\n                        if (choicesAreShort) {\n                            if (hasNoInput) {\n                                return true;\n                            }\n                            return isInputMatch;\n                        } else {\n                            if (!inputIsShort) {\n                                return isInputMatch;\n                            }\n                            return false;\n                        }\n                    }}\n                    onChange={(choice: DropdownChoice) => {\n                        this.props.onChange(choice);\n                    }} />\n                    \n            </div>\n        );\n    }\n}","import * as React from 'react';\n// import { Select, MenuItem } from '@material-ui/core';\nimport Select from 'react-select';\nimport './component-style.scss';\nimport { DropdownChoice } from '../Models';\nimport { Option } from 'react-select/src/filters';\n\ninterface IProps {\n    placeholder?: string;\n    disabled?: boolean;\n    detail?: string;\n    value: DropdownChoice;\n    choices: DropdownChoice[];\n    error?: boolean;\n    onChange: (value: DropdownChoice) => void;\n}\n\ninterface IStates {\n    value: string;\n}\n\nexport class DetailedDropdown extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            value: ''\n        }\n    }\n\n    shouldComponentUpdate(props: IProps, _state: IStates) {\n        return (\n            this.props.choices.length !== props.choices.length ||\n            this.props.value.value !== props.value.value\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='detailed-dropdown'>\n                {this.props.placeholder ? (\n                    <div className='text'>{this.props.placeholder}</div>\n                ) : null}\n                \n                <div className='autocomplete'>\n                    <div className={\n                        this.props.disabled ? 'detail-disabled' :\n                        this.props.error ? 'detail-error' : 'detail'}>\n                        {this.props.detail ? this.props.detail : this.props.value.value ? this.props.value.value : null}\n                    </div>\n                    <Select\n                        className='actual-dropdown'\n                        classNamePrefix={this.props.error ? 'actual-dropdown-error' : 'actual-dropdown'}\n                        isDisabled={this.props.disabled ? this.props.disabled : false}\n                        value={this.props.value}\n                        options={this.props.choices} \n                        onInputChange={(value: string, _a) => {\n                            this.setState({value: value});\n                        }}\n                        noOptionsMessage={() => {\n                            return (\n                                this.props.choices.length === 0 ? (\n                                    'Loading...'\n                                ) : (\n                                    this.state.value.length < 3 ? (\n                                        'Enter at least 3 characters to search'\n                                    ) : (\n                                        'No options'\n                                    )\n                                )\n                            )\n                        }}\n                        filterOption={(option: Option, rawInput: string) => {\n                            const hasNoInput = (rawInput.length === 0);\n                            const choicesAreShort = (this.props.choices.length <= 20);\n                            const inputIsShort = (rawInput.length < 3);\n                            const isInputMatch = (option.label.toLowerCase().includes(rawInput.toLowerCase()));\n                            if (choicesAreShort) {\n                                if (hasNoInput) {\n                                    return true;\n                                }\n                                return isInputMatch;\n                            } else {\n                                if (!inputIsShort) {\n                                    return isInputMatch;\n                                }\n                            }\n                            return false;                            \n                        }}\n                        onChange={(choice: DropdownChoice) => {\n                            this.props.onChange(choice);\n                        }} />\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\n// import { GlobalFunction } from '../GlobalFunction';\n\ninterface IProps {\n    placeholder?: string;\n    value: number;\n    detail: string;\n    error?: boolean;\n    onChange: (value: number) => void;\n\n    isFloat?: boolean;\n}\n\ninterface IStates {\n    // isEditing: boolean;\n    value: string;\n}\n\nexport class DetailedNumberField extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            // isEditing: false\n            value: this.props.value.toString()\n        }\n    }\n\n    componentWillReceiveProps(props: IProps) {\n        let targetNewValue = props.value ? props.value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,') : '';\n\n        if (targetNewValue.charAt(targetNewValue.length - 4) === '.') {\n            targetNewValue = props.value.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n        }\n\n        if (targetNewValue !== this.state.value) {\n            this.setState({value: \n                this.props.isFloat && this.state.value.charAt(this.state.value.length - 1) === '.' ?\n                    `${targetNewValue}.` :\n                    targetNewValue});\n        }\n    }\n\n    render(): JSX.Element {\n        const dynamicStyle = {\n            borderColor: (this.props.error ? '#E53935' : undefined)\n        };\n\n        return (\n            <div className='detailed-input-field'>\n                {this.props.placeholder ? (\n                    <div className='text'>{this.props.placeholder}</div>\n                ) : null}\n                <div className='input-field'>\n                    <input\n                        className='text-field left'\n                        style={dynamicStyle}\n                        value={this.state.value}\n                        onFocus={() => {\n                            if (this.props.value == 0) {\n                                this.setState({value: ''});\n                            }\n                        }}\n                        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                            let value = event.target.value;\n                            let numberValue = parseFloat(value.replace(/,|-/g, ''));\n                            if (!isNaN(numberValue)) {\n                                numberValue = numberValue < 1000000000 ? numberValue : this.props.value;\n                            }\n                            let stringValue = !isNaN(numberValue) ? (\n                                this.props.isFloat && value.charAt(value.length - 1) === '.' ?\n                                    `${numberValue}.` :\n                                    numberValue.toString()\n                            ) : '';\n                            const newStringValue = stringValue.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n                            this.setState({value: newStringValue}, () => {\n                                if (this.props.isFloat) {\n                                    this.props.onChange(!isNaN(numberValue) ? numberValue : 0);\n                                } else {\n                                    this.props.onChange(!isNaN(numberValue) ? numberValue : 0);\n                                }\n                            });\n                        }} />\n                    <div className={`detail ${this.props.error ? 'error' : ''} right`}>\n                        {this.props.detail}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\nimport MomentUtils from '@date-io/moment';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider, MaterialUiPickersDate } from '@material-ui/pickers';\n\ninterface IProps {\n    placeholder?: string;\n    value: Date | null;\n    minDate?: Date;\n    disabled?: boolean;\n    onChange: (value: Date | null) => void;\n}\n\nexport class DatePicker extends React.Component<IProps> {\n\n    shouldComponentUpdate(props: IProps, _state: any) {\n        return (\n            (this.props.placeholder !== props.placeholder) ||\n            (this.props.value !== props.value)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='date-picker'>\n                {this.props.placeholder ? (\n                    <div className='text'>{this.props.placeholder}</div>\n                ) : null}\n                <MuiPickersUtilsProvider utils={MomentUtils}>\n                    <KeyboardDatePicker\n                        className={this.props.disabled ? 'text-field-disabled text-field' : 'text-field'}\n                        disabled={this.props.disabled}\n                        variant='dialog'\n                        format='MM/DD/YYYY'\n                        minDate={this.props.minDate ? this.props.minDate : new Date(1900, 1, 1)}\n                        value={this.props.value}\n                        onChange={(date: MaterialUiPickersDate | null) => {\n                            this.props.onChange(date ? date.toDate() : null);\n                        }} />\n                </MuiPickersUtilsProvider>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\nimport { DetailedDropdown } from 'Pages/CustomerCarePage/Components/DetailedDropdown';\nimport { DetailedNumberField } from 'Pages/CustomerCarePage/Components/DetailedNumberField';\nimport { DatePicker } from 'Pages/CustomerCarePage/Components/DatePicker';\nimport { DropdownChoice, ConfinementDetails } from 'Pages/CustomerCarePage/Models';\n\n\ninterface IProps {\n    confinement: ConfinementDetails;\n    facilities: DropdownChoice[];\n    doctors: DropdownChoice[];\n    cptCodes: DropdownChoice[];\n    createTicketAttemp: boolean;\n    refreshConfinementState: () => void;\n}\n\nexport class ConfinementSection extends React.Component<IProps> {\n\n    confinementTypes: DropdownChoice[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.confinementTypes = [\n            { value: '1', label: 'Elective / Scheduled' },\n            { value: '2', label: 'ER leading to confinement' }\n        ];\n    }\n\n    render(): JSX.Element {\n        const confinement = this.props.confinement;\n        return (\n            <div className='confinement-details'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='sub-section'>\n                    <div className='header-2'>CONFINEMENT DETAILS</div>\n                    <DetailedDropdown \n                        choices={this.props.facilities}\n                        placeholder='Provider'\n                        value={confinement.provider}\n                        error={\n                            this.props.createTicketAttemp && \n                            confinement.provider.value === ''}\n                        onChange={(value: DropdownChoice) => {\n                            this.props.confinement.provider = value;\n                            this.props.refreshConfinementState();\n                        }} />\n                    <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                            <DatePicker \n                                placeholder='Date Admitted' \n                                value={confinement.dateAdmitted}\n                                onChange={(value: Date) => {\n                                    this.props.confinement.dateAdmitted = value;\n                                    this.props.refreshConfinementState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Dropdown \n                                placeholder='Kind of Confinement' \n                                choices={this.confinementTypes}\n                                value={{ value: '', label: confinement.confinementKind}}\n                                error={\n                                    this.props.createTicketAttemp && \n                                    confinement.confinementKind === ''}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.confinement.confinementKind = value.label;\n                                    this.props.refreshConfinementState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={3}>\n                            <InputField \n                                placeholder='Room Type' \n                                value={confinement.roomType}\n                                error={\n                                    this.props.createTicketAttemp && \n                                    confinement.roomType === ''}\n                                onChange={(value: string) => {\n                                    this.props.confinement.roomType = value;\n                                    this.props.refreshConfinementState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={3}>\n                            <DetailedNumberField \n                                placeholder='Cost Per Day' \n                                value={confinement.costPerDay}\n                                detail={'PHP'}\n                                isFloat={true}\n                                onChange={(value: number) => {\n                                    this.props.confinement.costPerDay = value;\n                                    this.props.refreshConfinementState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Dropdown  \n                                placeholder='Admitting Physician' \n                                choices={this.props.doctors}\n                                value={confinement.doctor}\n                                error={\n                                    this.props.createTicketAttemp && \n                                    confinement.doctor.value === ''}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.confinement.doctor = value;\n                                    this.props.refreshConfinementState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <DetailedDropdown \n                                placeholder='Initial Diagnosis' \n                                choices={this.props.cptCodes}\n                                value={confinement.initialDiagnosis}\n                                error={\n                                    this.props.createTicketAttemp && \n                                    confinement.initialDiagnosis.value === ''}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.confinement.initialDiagnosis = value;\n                                    this.props.refreshConfinementState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={3}>\n                            <DetailedNumberField \n                                placeholder='Amount' \n                                value={confinement.amount}\n                                detail={'PHP'}\n                                isFloat={true}\n                                onChange={(value: number) => {\n                                    this.props.confinement.amount = value;\n                                    this.props.refreshConfinementState();\n                                }} />\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\n\ninterface IProps {\n    value: number;\n    onChange: (value: number) => void;\n\n    placeholder?: string;\n    error?: boolean;\n    isFloat?: boolean;\n    disableDelimiter?: boolean;\n}\n\ninterface IStates {\n    value: string;\n}\n\nexport class NumberField extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            value: this.props.value.toString()\n        }\n    }\n\n    componentWillReceiveProps(props: IProps) {\n        let targetNewValue = props.value ? (\n            !this.props.disableDelimiter ? \n                props.value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,') : \n                props.value.toString()) : '';\n\n        if (targetNewValue.charAt(targetNewValue.length - 4) === '.') {\n            targetNewValue = props.value.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n        }\n\n        if (targetNewValue !== this.state.value) {\n            this.setState({value: \n                this.props.isFloat && this.state.value.charAt(this.state.value.length - 1) === '.' ?\n                    `${targetNewValue}.` :\n                    targetNewValue});\n        }\n    }\n\n    render(): JSX.Element {\n        const props = this.props;\n        const dynamicStyle = {\n            borderColor: (props.error ? '#E53935' : undefined)\n        };\n\n        return (\n            <div className='input-field-container'>\n                {this.props.placeholder ? (\n                    <div className='text'>{this.props.placeholder}</div>\n                ) : null}\n                <input\n                    className='text-field'\n                    style={dynamicStyle}\n                    value={this.state.value} \n                    onFocus={() => {\n                        if (this.props.value == 0) {\n                            this.setState({value: ''});\n                        }\n                    }}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                        let value = event.target.value;\n                        let numberValue = parseFloat(value.replace(/,|-/g, ''));\n                        if (!isNaN(numberValue)) {\n                            numberValue = numberValue < 1000000000 ? numberValue : this.props.value;\n                        }\n                        let stringValue = !isNaN(numberValue) ? (\n                            this.props.isFloat && value.charAt(value.length - 1) === '.' ?\n                                `${numberValue}.` :\n                                numberValue.toString()\n                        ) : '';\n                        const newStringValue = stringValue.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n                        this.setState({value: this.props.disableDelimiter ? numberValue.toString() : newStringValue}, () => {\n                            if (this.props.isFloat) {\n                                this.props.onChange(!isNaN(numberValue) ? numberValue : 0);\n                            } else {\n                                this.props.onChange(!isNaN(numberValue) ? numberValue : 0);\n                            }\n                        });\n                    }} />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\nimport { Checkbox } from '@material-ui/core';\n\ninterface IProps {\n    placeholder?: string;\n    label?: string;\n    value: boolean;\n    disabled?: boolean;\n    onChange: (value: boolean) => void;\n}\n\nexport class CustomCheckbox extends React.Component<IProps> {\n\n    shouldComponentUpdate(props: IProps, _state: any) {\n        return (\n            (this.props.placeholder !== props.placeholder) ||\n            (this.props.value !== props.value)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='check-box-area'>\n                {this.props.placeholder ? (\n                    <div className='text'>{this.props.placeholder}</div>\n                ) : null}\n                <Checkbox\n                    className='check-box'\n                    checked={this.props.value}\n                    disabled={this.props.disabled}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                        this.props.onChange(event.target.checked);\n                    }} />\n                {this.props.label ? (\n                    <span className='text'>{this.props.label}</span>\n                ) : null}\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport {  Grid, TableCell, TableRow } from '@material-ui/core';\nimport { faMinusCircle, faPlus, faPen, faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { DetailedDropdown } from 'Pages/CustomerCarePage/Components/DetailedDropdown';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { ProcedureData, DropdownChoice, AvailmentDetails, DiagnosisData } from 'Pages/CustomerCarePage/Models';\nimport { NumberField } from 'Pages/CustomerCarePage/Components/NumberField';\nimport { CustomCheckbox } from 'Pages/CustomerCarePage/Components/CustomCheckbox';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\n\ninterface IProps {\n    availment: AvailmentDetails;\n    facilities: DropdownChoice[];\n    doctors: DropdownChoice[];\n    icd10Codes: DropdownChoice[];\n    cptCodes: DropdownChoice[];\n    createTicketAttemp: boolean;\n    refreshAvailmentState: () => void;\n}\n\ninterface IStates {\n    icd10Code: DropdownChoice;\n    doctor: DropdownChoice;\n\n    itemToEditIndex: number;\n    icd10CodeToEdit: DropdownChoice;\n    doctorToEdit: DropdownChoice;\n}\n\nexport class AvailmentSection extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            icd10Code: { value: '', label: '' },\n            doctor: { value: '', label: '' },\n\n            itemToEditIndex: -1,\n            icd10CodeToEdit: { value: '', label: '' },\n            doctorToEdit: { value: '', label: '' }\n        };\n    }\n\n    getFilteredICD10(): DropdownChoice[] {\n        let filteredICD10: DropdownChoice[] = [];\n        for (var i = 0; i < this.props.icd10Codes.length; i++) {\n            let isSame = false;\n            for (var j = 0; j < this.props.availment.diagnoses.length; j++) {\n                isSame = (\n                    this.props.availment.diagnoses[j].icd10Code.value === \n                    this.props.icd10Codes[i].value ? true : isSame);\n            }\n            if (!isSame) {\n                filteredICD10 = filteredICD10.concat(this.props.icd10Codes[i]);\n            }\n        }\n        return filteredICD10;\n    }\n\n    getProcedureCosts(procedures: ProcedureData[]) {\n        let totalCost = 0;\n        procedures.map(procedure => {\n            totalCost += procedure.amount;\n        });\n        return totalCost;\n    }\n    \n    pushBlankDiagnosis(icd10Code: DropdownChoice, doctor: DropdownChoice) {\n        this.props.availment.diagnoses.push({\n            icd10Code: icd10Code,\n            remarks: '',\n            isPrimary: false,\n            isFinal: false,\n            doctors: [{\n                id: '',\n                name: doctor.label,\n                specialization: '',\n                type: 'Admitting',\n                fee: 0,\n                noOfVisits: 0,\n                remarks: ''\n            }],\n            procedures: [{\n                cptCode: { value: '', label: '' },\n                isPHIC: false,\n                amount: 0,\n                notes: '',\n                assessmentType: 'Pending',\n                assessmentRemarks: '',\n                approvedAmount: 0,\n                doctor: '',\n                dateAdded: new Date()\n            }],\n            assessmentType: 'Pending',\n            assessmentRemarks: '',\n            approvedAmount: 0\n        });\n    }\n\n    pushBlankProcedures(diagnosisIndex: number) {\n        this.props.availment.diagnoses[diagnosisIndex].procedures.push({\n            cptCode: { value: '', label: '' },\n            isPHIC: false,\n            amount: 0,\n            notes: '',\n            assessmentType: 'Pending',\n            assessmentRemarks: '',\n            approvedAmount: 0,\n            doctor: '',\n            dateAdded: new Date()\n        });\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='availment-section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='sub-section'>\n                    <div className='header-2'>AVAILMENT DETAILS</div>\n                    <DetailedDropdown \n                        choices={this.props.facilities}\n                        placeholder='Provider'\n                        value={this.props.availment.provider}\n                        error={\n                            this.props.createTicketAttemp && \n                            this.props.availment.provider.value === ''}\n                        onChange={(value: DropdownChoice) => {\n                            this.props.availment.provider = value;\n                            this.props.refreshAvailmentState();\n                        }} />\n                </div>\n                <div className='sub-section'>\n                    <div className='header-3'>LIST OF AVAILMENTS</div>\n                    <div className='text'>\n                        Add a diagnosis first then add procedures per diagnosis after\n                    </div>\n                    <div className='sub-section'>\n                        <CustomTable\n                            rows={this.props.availment.diagnoses}\n                            renderHeader={() => this.renderTableHeader()}\n                            renderRow={(rowData: any, index: number) => \n                                this.renderTableRow(rowData, index)} />\n                    </div>\n                    {this.props.createTicketAttemp && this.props.availment.diagnoses.length === 0 ? (\n                        <div className='sub-section' style={{color: '#E53935'}}>\n                            No diagnosis. Need atleast one diagnosis.\n                        </div> \n                    ) : (null)}\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            <TableCell style={{minWidth: '300px', maxWidth: '300px'}}>\n                <DetailedDropdown \n                    choices={this.getFilteredICD10()}\n                    value={this.state.icd10Code}\n                    onChange={(value: DropdownChoice) => {\n                        this.setState({icd10Code: value});\n                    }} />\n            </TableCell>\n            <TableCell style={{minWidth: '150px', maxWidth: '150px'}}>\n                <Dropdown \n                    choices={this.props.doctors}\n                    value={this.state.doctor}\n                    onChange={(value: DropdownChoice) => {\n                        this.setState({doctor: value});\n                    }} />\n            </TableCell>\n            <TableCell style={{textAlign: 'center'}}>\n                <TextButton \n                    icon={faPlus} \n                    label=\"Add diagnosis\"\n                    onClick={() => {\n                        if (this.state.doctor.value !== '' && this.state.icd10Code.value !== '') {\n                            this.pushBlankDiagnosis(this.state.icd10Code, this.state.doctor);\n                            this.props.refreshAvailmentState();\n                            this.setState({\n                                icd10Code: { value: '', label: '' },\n                                doctor: { value: '', label: '' }\n                            });\n                        }\n                    }} />\n            </TableCell>\n            </>\n        );\n    }\n\n    renderTableRow(diagnosis: DiagnosisData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        const editIcon = { display: 'inline-block', paddingRight: '0.5rem' };\n        const deleteIcon = { display: 'inline-block' };\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell colSpan={3}>\n                    <Grid container spacing={1}>\n                        {this.state.itemToEditIndex === index ? (\n                            <>\n                            <Grid item xs={6}>\n                                <DetailedDropdown \n                                    choices={this.getFilteredICD10()}\n                                    value={this.state.icd10CodeToEdit}\n                                    onChange={(value: DropdownChoice) => {\n                                        this.setState({icd10CodeToEdit: value});\n                                    }} />\n                            </Grid>\n                            <Grid item xs={5}>\n                                <Dropdown \n                                    choices={this.props.doctors}\n                                    value={this.state.doctorToEdit}\n                                    onChange={(value: DropdownChoice) => {\n                                        this.setState({doctorToEdit: value});\n                                    }} />\n                            </Grid>\n                            <Grid item xs={1} style={{lineHeight: '2rem'}}>\n                                <div style={editIcon}>\n                                    <IconButton\n                                        icon={faCheckCircle}\n                                        onClick={() => {\n                                            this.props.availment.diagnoses[index].icd10Code = this.state.icd10CodeToEdit;\n                                            this.props.availment.diagnoses[index].doctors[0].name = this.state.doctorToEdit.label;\n                                            this.props.refreshAvailmentState();\n                                            this.setState({itemToEditIndex: -1});\n                                        }}/>\n                                </div>\n                                <div style={deleteIcon}>\n                                    <IconButton\n                                        icon={faTimesCircle}\n                                        onClick={() => {\n                                            this.setState({itemToEditIndex: -1});\n                                        }}/>\n                                </div>\n                            </Grid>\n                            </>\n                        ) : (\n                            <>\n                            <Grid item xs={6} className='header-2'>\n                                {diagnosis.icd10Code.value + ' - ' + diagnosis.icd10Code.label}\n                            </Grid>\n                            <Grid item xs={3} className='header-2'>\n                                {diagnosis.doctors[0].name}\n                            </Grid>\n                            <Grid item xs={2} className='header-2'>\n                                {GlobalFunction.formatNumber(this.getProcedureCosts(diagnosis.procedures), true) + \" PHP\"}\n                            </Grid>\n                            <Grid item xs={1}>\n                                {/* <div style={editIcon}> */}\n                                    <IconButton\n                                        icon={faPen}\n                                        onClick={() => {\n                                            this.setState({\n                                                itemToEditIndex: index,\n                                                icd10CodeToEdit: diagnosis.icd10Code,\n                                                doctorToEdit: {\n                                                    value: diagnosis.doctors[0].id,\n                                                    label: diagnosis.doctors[0].name\n                                                }\n                                            });\n                                        }}/>\n                                {/* </div>\n                                <div style={deleteIcon}> */}\n                                    <IconButton\n                                        icon={faMinusCircle}\n                                        onClick={() => {\n                                            this.props.availment.diagnoses.splice(index, 1);\n                                            this.props.refreshAvailmentState();\n                                        }}/>\n                                {/* </div> */}\n                            </Grid>\n                            </>\n                        )}\n                    </Grid>\n                    {diagnosis.procedures.map((procedure, procedureIndex) => {\n                        return this.renderProcedureDetails(procedure, index, procedureIndex);\n                    })}\n                </TableCell>\n            </TableRow>\n        );\n    }\n    \n    renderProcedureDetails(procedure: ProcedureData, diagnosisIndex: number, index: number): JSX.Element {\n        const stateProcedure = this.props.availment.diagnoses[diagnosisIndex].procedures[index];\n        const stateProcedures = this.props.availment.diagnoses[diagnosisIndex].procedures;\n        return (\n            <div style={{position: 'relative'}}>\n                <div style={{paddingTop: '0.5rem'}} />\n                <div className='line-border' />\n                <div style={{paddingTop: '0.5rem'}} />\n                <Grid container spacing={2}>\n                    <Grid item xs={8}>\n                        <DetailedDropdown \n                            placeholder='Procedure'\n                            choices={this.props.cptCodes}\n                            value={procedure.cptCode}\n                            onChange={(value: DropdownChoice) => {\n                                stateProcedure.cptCode = value;\n                                if (index === (stateProcedures.length - 1)) {\n                                    this.pushBlankProcedures(diagnosisIndex);\n                                }\n                                this.props.refreshAvailmentState();\n                            }} />\n                    </Grid>\n                    <Grid item xs={3}>\n                        <NumberField\n                            placeholder='Amount'\n                            value={procedure.amount}\n                            onChange={(value: number) => {\n                                stateProcedure.amount = value;\n                                this.props.refreshAvailmentState();\n                            }} />\n                    </Grid>\n                    <Grid item xs={1}>\n                        <CustomCheckbox\n                            placeholder='PHIC'\n                            value={procedure.isPHIC}\n                            onChange={(value: boolean) => {\n                                stateProcedure.isPHIC = value;\n                                this.props.refreshAvailmentState();\n                            }} />\n                    </Grid>\n                </Grid>\n                <div style={{position: 'absolute'}}>\n                    <TextButton \n                        label='Add procedure'\n                        icon={faPlus}\n                        onClick={() => {\n                            this.pushBlankProcedures(diagnosisIndex);\n                            this.props.refreshAvailmentState();\n                        }}/>\n                </div>\n                <div style={{paddingTop: '1rem'}} />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport Dropzone from 'react-dropzone';\nimport './component-style.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons';\n\ninterface IProps {\n    placeholder?: string;\n    accept?: string;\n    onDrop: (files: File[]) => void;\n}\n\nexport class CustomDropzone extends React.Component<IProps> {\n\n    shouldComponentUpdate(props: IProps, _state: any) {\n        return (this.props.placeholder !== props.placeholder);\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='custom-uploader'>\n                {this.props.placeholder ? (\n                    <div className='text'>{this.props.placeholder}</div>\n                ) : (null)}\n                <div className='upload-box'>\n                    <Dropzone\n                        multiple={false}\n                        onDrop={acceptedFiles => this.props.onDrop(acceptedFiles)}\n                        accept={this.props.accept}\n                        // accept=\"application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n                        >\n                        {({getRootProps, getInputProps}) => (\n                            <section>\n                                <div className='upload-file' {...getRootProps()}>\n                                    <input {...getInputProps()} />\n                                    <FontAwesomeIcon className='fa-1.5x' icon={faFileUpload} />\n                                    <div>Drag or drop file to upload a <br />supporting document</div>\n                                </div>\n                            </section>\n                        )}\n                    </Dropzone>\n                </div>\n                \n\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { TextareaAutosize } from '@material-ui/core';\nimport './component-style.scss';\n\ninterface IProps {\n    placeholder?: string;\n    value: string;\n    defaultRows?: number;\n    onChange: (value: string) => void;\n}\n\nexport class InputArea extends React.Component<IProps> {\n\n    shouldComponentUpdate(props: IProps, _state: any) {\n        return (\n            (this.props.placeholder !== props.placeholder) ||\n            (this.props.value !== props.value) ||\n            (this.props.defaultRows !== props.defaultRows)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='input-field-container'>\n                {this.props.placeholder ? (\n                    <div className='text'>{this.props.placeholder}</div>\n                ) : null}\n                <TextareaAutosize \n                    className='text-field'\n                    rows={this.props.defaultRows ? this.props.defaultRows : 4}\n                    value={this.props.value}\n                    onChange={(event: React.ChangeEvent<HTMLTextAreaElement>) => {\n                        this.props.onChange(event.target.value);\n                    }}\n                />\n            </div>\n        );\n    }\n}","\nimport * as React from 'react';\nimport './component-style.scss';\nimport { Chip } from '@material-ui/core';\n\ninterface IProps {\n    label: string;\n    value: string;\n    onDelete: (value: string) => void;\n}\n\nexport class CustomChip extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <Chip \n                className='chip'\n                label={this.props.label} \n                onDelete={() => {this.props.onDelete(this.props.value)}} />\n        );\n    }\n}","import * as React from 'react';\nimport {  Grid } from '@material-ui/core';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\nimport { TicketData, DropdownChoice, MemberData, ClientData } from 'Pages/CustomerCarePage/Models';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { CustomDropzone } from 'Pages/CustomerCarePage/Components/CustomDropzone';\nimport { InputArea } from 'Pages/CustomerCarePage/Components/InputArea';\nimport { CustomChip } from 'Pages/CustomerCarePage/Components/CustomChip';\n\ninterface IProps {\n    member?: MemberData;\n    client?: ClientData;\n    ticket: TicketData;\n    facilities: DropdownChoice[];\n    agents: DropdownChoice[];\n    createTicketAttemp: boolean;\n    refreshTicketState: () => void;\n}\nexport class TicketInfoSection extends React.Component<IProps> {\n\n    ticketChannels: DropdownChoice[];\n    ticketSources: DropdownChoice[];\n    ticketTypes: DropdownChoice[];\n    specificTypes: DropdownChoice[];\n    urgencies: DropdownChoice[];\n    agents: DropdownChoice[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.ticketChannels = [\n            { value: '1', label: 'Call' },\n            { value: '2', label: 'SMS' },\n            { value: '3', label: 'Text' },\n            { value: '4', label: 'Email' },\n            { value: '5', label: 'Walk-in' }\n        ];\n\n        this.ticketSources = [\n            { value: '1', label: 'Member' },\n            { value: '2', label: 'Corporate Client' },\n            { value: '3', label: 'Broker' },\n            { value: '4', label: 'Agent' },\n            { value: '5', label: 'Clinic/Hospital' }\n        ];\n\n        this.ticketTypes = [\n            { value: '1', label: 'Availment' },\n            { value: '2', label: 'Inquiry' }\n        ];\n\n        this.specificTypes = [\n            { value: '1', label: 'Outpatient Procedure' },\n            { value: '2', label: 'Inpatient' },\n            { value: '3', label: 'Emergency Room' },\n            { value: '4', label: 'Consultation' }\n        ];\n\n        this.urgencies = [\n            { value: '1', label: 'Low' },\n            { value: '2', label: 'Medium' },\n            { value: '3', label: 'High' }\n        ];\n\n        this.agents = [\n            { value: '', label: 'Me' }\n        ]\n    }\n\n    componentDidMount() {\n        this.agents[0].value = localStorage['user_id'];\n    }\n\n    render(): JSX.Element {\n        console.log(\"TICK INFO\");\n        const ticket = this.props.ticket;\n\n        return (\n            <div className='ticket-info'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='sub-section'>\n                    <div className='header-2'>TICKET INFORMATION</div>\n                    <Grid container spacing={1}>\n                        <Grid item xs={5}>\n                            <Dropdown \n                                placeholder='Received via'\n                                choices={this.ticketChannels}\n                                value={{ value: '', label: ticket.ticketChannel }}\n                                error={\n                                    this.props.createTicketAttemp && \n                                    ticket.ticketChannel === ''}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.ticket.ticketChannel = value.label;\n                                    this.props.refreshTicketState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={7}>\n                            <InputField \n                                placeholder='Transaction No.' \n                                value={ticket.transactionNo}\n                                disabled={true}\n                                onChange={(value: string) => {\n                                    this.props.ticket.transactionNo = value;\n                                    this.props.refreshTicketState();\n                                }} />\n                        </Grid>\n                    </Grid>\n                    <Dropdown \n                        placeholder='Received From'\n                        choices={this.ticketSources}\n                        value={{ value: '', label: ticket.ticketSource}}\n                        error={\n                            this.props.createTicketAttemp && \n                            ticket.ticketSource === ''}\n                        onChange={(value: DropdownChoice) => {\n                            this.props.ticket.ticketSource = value.label;\n                            this.props.refreshTicketState();\n                        }} />\n                    <div>\n                        {ticket.ticketSource === 'Member' ? (\n                            <div>\n                                <InputField \n                                    placeholder='Member Name'\n                                    value={ticket.memberName}\n                                    error={\n                                        this.props.createTicketAttemp && \n                                        ticket.memberName === ''}\n                                    onChange={(value: string) => {\n                                        this.props.ticket.memberName = value;\n                                        this.props.refreshTicketState();\n                                    }} />\n                            </div>\n\n                        ) : ticket.ticketSource === 'Corporate Client' ? (\n                            <div>\n                                <InputField \n                                    placeholder='Corporate Client Name'\n                                    value={ticket.clientName}\n                                    error={\n                                        this.props.createTicketAttemp && \n                                        ticket.clientName === ''}\n                                    onChange={(value: string) => {\n                                        this.props.ticket.clientName = value;\n                                        this.props.refreshTicketState();\n                                    }} />\n                            </div>\n                        \n                        ) : ticket.ticketSource === 'Broker' ? (\n                            <div>\n                                <InputField \n                                    placeholder='Broker Name'\n                                    value={ticket.brokerName}\n                                    error={\n                                        this.props.createTicketAttemp && \n                                        ticket.brokerName.trim() === ''}    \n                                    onChange={(value: string) => {\n                                        this.props.ticket.brokerName = value;\n                                        this.props.refreshTicketState();\n                                    }} />\n                            </div>\n\n                        ) : ticket.ticketSource === 'Clinic/Hospital' ? (\n                            <div>\n                                <Dropdown \n                                    placeholder='Name of Hospital'\n                                    choices={this.props.facilities}\n                                    value={ticket.facility}\n                                    error={\n                                        this.props.createTicketAttemp && \n                                        ticket.facility.value === ''}\n                                    onChange={(value: DropdownChoice) => {\n                                        this.props.ticket.facility = value;\n                                        this.props.refreshTicketState();\n                                    }} />\n                                <InputField \n                                    placeholder='Department/Section' \n                                    value={ticket.department}\n                                    error={\n                                        this.props.createTicketAttemp && \n                                        ticket.department.trim() === ''}\n                                    onChange={(value: string) => {\n                                        this.props.ticket.department = value;\n                                        this.props.refreshTicketState();\n                                    }} />\n                            </div>\n                        ) : null}\n                    </div>\n                    <InputField \n                        placeholder='Name of Caller' \n                        value={ticket.callerName}\n                        error={\n                            this.props.createTicketAttemp && \n                            ticket.callerName.trim() === ''}\n                        onChange={(value: string) => {\n                            this.props.ticket.callerName = value;\n                            this.props.refreshTicketState();\n                        }} />\n                    <InputField \n                        placeholder='Contact No.' \n                        value={ticket.contactNo}\n                        error={\n                            this.props.createTicketAttemp && \n                            ticket.contactNo.trim() === ''}\n                        onChange={(value: string) => {\n                            if (value.match(/^[0-9\\b]+$/) || value.length == 0) {\n                                this.props.ticket.contactNo = value; \n                                this.props.refreshTicketState();\n                            }\n                        }} />\n                </div>\n                \n                <div className='sub-section'>\n                    <div className='header-2'>TICKET CATEGORY</div>\n                    <Grid container spacing={1}>\n                        <Grid item xs={5}>\n                            <Dropdown \n                                placeholder='Ticket Type'\n                                choices={this.ticketTypes}\n                                value={{ value: '', label: ticket.ticketType}}\n                                error={\n                                    this.props.createTicketAttemp && \n                                    ticket.ticketType === ''}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.ticket.ticketType = value.label;\n                                    if (value.label === 'Inquiry') {\n                                        this.props.ticket.specificType = 'Not Applicable';\n                                    } else {\n                                        this.props.ticket.specificType = '';\n                                    }\n                                    this.props.refreshTicketState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={7}>\n                            <Dropdown \n                                placeholder='Specific Type'\n                                disabled={ticket.ticketType !== 'Availment'}\n                                choices={this.specificTypes}\n                                value={{ value: '', label: ticket.specificType}}\n                                error={\n                                    this.props.createTicketAttemp && \n                                    ticket.specificType === '' && \n                                    ticket.ticketType !== 'Inquiry'}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.ticket.specificType = value.label;\n                                    this.props.refreshTicketState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={5}>\n                            <Dropdown \n                                placeholder='Urgency'\n                                choices={this.urgencies}\n                                value={{ value: '', label: ticket.urgency}}\n                                error={\n                                    this.props.createTicketAttemp && \n                                    ticket.urgency === ''}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.ticket.urgency = value.label;\n                                    this.props.refreshTicketState();\n                                }} />\n                        </Grid>\n                        <Grid item xs={7}>\n                            <Dropdown \n                                placeholder='Assign To'\n                                choices={this.agents} /* Use this.props.agents later */\n                                value={{ value: ticket.agent.id, label: ticket.agent.name}}\n                                error={\n                                    this.props.createTicketAttemp && \n                                    ticket.agent.id === ''}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.ticket.agent = {\n                                        id: value.value,\n                                        name: value.label\n                                    };\n                                    this.props.refreshTicketState();\n                                }} />\n                        </Grid>\n                    </Grid>\n                </div>\n\n                <div className='sub-section'>\n                    <div className='header-2'>ADDITIONAL NOTES AND FILES</div>\n                    <InputArea\n                        placeholder='Additional Notes'\n                        value={ticket.additionalNotes}\n                        onChange={(value: string) => {\n                            this.props.ticket.additionalNotes = value;\n                            this.props.refreshTicketState();\n                        }} />\n                    <CustomDropzone\n                        accept='image/*'\n                        onDrop={(files: File[]) => {\n                            ticket.additionalFiles.push(files[0]);\n                            this.props.refreshTicketState();\n                        }} />\n                        {ticket.additionalFiles.map((file, index) => {\n                            return (\n                                <CustomChip\n                                    label={file.name}\n                                    value={index.toString()}\n                                    onDelete={(value: string) => {\n                                        ticket.additionalFiles.splice(parseInt(value), 1);\n                                        this.props.refreshTicketState();\n                                    }} />\n                            );\n                        })}\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport './component-style.scss';\nimport ChipInput from 'material-ui-chip-input';\n\ninterface IProps {\n    placeholder: string;\n    value: string[];\n    onAdd: (value: string) => void;\n    onDelete: (index: number) => void;\n}\n\nexport class InputChip extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        \n        return (\n            <div className='input-field-container'>\n                <div className='text'>{this.props.placeholder}</div>\n                <ChipInput \n                    className='text-field'\n                    value={this.props.value} \n                    fullWidthInput={false}\n                    onAdd={(chip: any) => this.props.onAdd(chip)}\n                    onDelete={(_chip: any, index: number) => this.props.onDelete(index)} />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport {  Grid, TableCell, TableRow } from '@material-ui/core';\nimport { faMinusCircle, faPlus, faPen } from '@fortawesome/free-solid-svg-icons';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { DropdownChoice, InquiryData } from 'Pages/CustomerCarePage/Models';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { CustomDropzone } from 'Pages/CustomerCarePage/Components/CustomDropzone';\nimport { CustomChip } from 'Pages/CustomerCarePage/Components/CustomChip';\nimport { InputChip } from 'Pages/CustomerCarePage/Components/InputChip';\n// import { ComplexTable } from 'Pages/CustomerCarePage/Components/ComplexTable';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\n\ninterface IProps {\n    inquiries: InquiryData[];\n    refreshInquiryState: () => void;\n}\n\ninterface IStates {\n    inquiry: DropdownChoice;\n}\n\nexport class InquirySection extends React.PureComponent<IProps, IStates> {\n\n    inquiries: DropdownChoice[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            inquiry: { value: '', label: '' }\n        };\n\n        this.inquiries = [\n            { value: '1', label: 'Member Status / Card Inquiry' },\n            { value: '2', label: 'Member Network Access Inquiry' },\n            { value: '3', label: 'Member Benefit Inquiry - General [Outpatient]' },\n            { value: '4', label: 'Member Benefit Inquiry - General [Inpatient]' },\n            { value: '5', label: 'Member Benefit Inquiry - General [Emergency]' },\n            { value: '6', label: 'Member Benefit Inquiry - General [Dental]' },\n            { value: '7', label: 'Member Benefit Inquiry - General [APE / ECU]' },\n            { value: '8', label: 'Member Benefit Inquiry - General [Riders]' },\n            { value: '9', label: 'Member Coverage Inquiry - Specific Benefit' },\n            { value: '10', label: 'Member Availment Inquiry - CanAvail' },\n            { value: '11', label: 'Member Eligibility Inquiry' },\n            { value: '12', label: 'Reimbursement Status Inquiry' },\n            { value: '13', label: 'General Affiliated Network Inquiry - Facility' },\n            { value: '14', label: 'General Affiliated Network Inquiry - Doctor' },\n            { value: '15', label: 'General Affiliated Network Inquiry - Dentist' },\n            { value: '16', label: 'Procedural Inquiry - Outpatient' },\n            { value: '17', label: 'Procedural Inquiry - Inpatient' },\n            { value: '18', label: 'Procedural Inquiry - Emergency' },\n            { value: '19', label: 'Procedural Inquiry - Dental' },\n            { value: '20', label: 'Procedural Inquiry - APE / ECU' },\n            { value: '21', label: 'Procedural Inquiry - Member Enrolment / Cancellation / Update' },\n            { value: '22', label: 'Procedural Inquiry - Reimbursement' },\n            { value: '23', label: 'Procedural Inquiry - Others' }\n        ];\n    }\n\n    onAddInquiry() {\n        if (this.state.inquiry.value !== '') {\n            this.props.inquiries.push({\n                inquiry: this.state.inquiry,\n                detail: '',\n                specificDetail: [],\n                answer: '',\n                remarks: '',\n                relatedTickets: [],\n                supportDocs: []\n            });\n            \n            this.props.refreshInquiryState();\n            this.setState({inquiry: { value: '', label: '' }});\n        }\n    }\n\n    getFilteredInquiries(): DropdownChoice[] {\n        let filteredInquiries: DropdownChoice[] = [];\n        for (var i = 0; i < this.inquiries.length; i++) {\n            let isSame = false;\n            for (var j = 0; j < this.props.inquiries.length; j++) {\n                isSame = (\n                    this.props.inquiries[j].inquiry.value === \n                    this.inquiries[i].value ? true : isSame);\n            }\n            if (!isSame) {\n                filteredInquiries = filteredInquiries.concat(this.inquiries[i]);\n            }\n        }\n        return filteredInquiries;\n    }\n    \n    onRemoveInquiry(index: number) {\n        this.props.inquiries.splice(index, 1);\n        this.props.refreshInquiryState();\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='availment-section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='sub-section'>\n                    <div className='header-2'>INQUIRY</div>\n                    <div className='text'>\n                        Add an inquiry type and then add the question and its details after\n                    </div>\n                    <div className='sub-section'>\n                        <CustomTable \n                            rows={this.props.inquiries}\n                            renderHeader={() => this.renderTableHeader()}\n                            renderRow={(rowData: any, index: number) => \n                                this.renderTableRow(rowData, index)} />\n                    </div>\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            <TableCell style={{minWidth: '400px', maxWidth: '400px'}}>\n                <Dropdown \n                    choices={this.getFilteredInquiries()}\n                    value={this.state.inquiry}\n                    onChange={(value: DropdownChoice) => {\n                        this.setState({inquiry: value});\n                    }} />\n            </TableCell>\n            <TableCell style={{minWidth: '125px', maxWidth: '125px', textAlign: 'center'}}>\n                <TextButton \n                    icon={faPlus} \n                    label=\"Add inquiry\"\n                    onClick={() => {\n                        this.onAddInquiry();\n                    }} />\n            </TableCell>\n            </>\n        );\n    }\n\n    renderTableRow(inquiry: InquiryData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell colSpan={2}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={10} className='header-2'>\n                            {inquiry.inquiry.label}\n                        </Grid>\n                        <Grid item xs={2} style={{textAlign: 'right'}}>\n                            <IconButton\n                                icon={faPen}\n                                onClick={() => {\n                                    this.onRemoveInquiry(index);\n                                }}/>\n                            <IconButton\n                                icon={faMinusCircle}\n                                onClick={() => {\n                                    this.onRemoveInquiry(index);\n                                }}/>\n                        </Grid>\n                    </Grid>\n                    <div style={{position: 'relative'}}>\n                        <div style={{paddingTop: '0.5rem'}} />\n                        <div className='line-border' />\n                        <div style={{paddingTop: '0.5rem'}} />\n                        <Grid container>\n                            <Grid item xs={1}/>\n                            <Grid item xs={11}>\n                                <div style={{margin: '8px 8px 1.5rem 8px'}}>\n                                    <InputField \n                                        placeholder='Details of inquiry (Question)'\n                                        value={inquiry.detail}\n                                        onChange={(value: string) => {\n                                            inquiry.detail = value;\n                                            this.props.refreshInquiryState();\n                                        }} />\n                                        <InputChip \n                                            placeholder='Specific Details (Type benefit/doctor/facility to describe inquiry, press enter to add)'\n                                            value={inquiry.specificDetail}\n                                            onAdd={(value: string) => {\n                                                inquiry.specificDetail.push(value);\n                                                this.props.refreshInquiryState();\n                                            }}\n                                            onDelete={(index: number) => {\n                                                inquiry.specificDetail.splice(index, 1);\n                                                this.props.refreshInquiryState();\n                                            }} />\n                                    <InputField \n                                        placeholder='Answer'\n                                        value={inquiry.answer}\n                                        onChange={(value: string) => {\n                                            inquiry.answer = value;\n                                            this.props.refreshInquiryState();\n                                        }} />\n                                    <InputField \n                                        placeholder='Remarks (Optional)'\n                                        value={inquiry.remarks}\n                                        onChange={(value: string) => {\n                                            inquiry.remarks = value;\n                                            this.props.refreshInquiryState();\n                                        }} />\n                                    <InputChip \n                                            placeholder='Related Tickets (Optional, press enter to add)'\n                                            value={inquiry.relatedTickets}\n                                            onAdd={(value: string) => {\n                                                inquiry.relatedTickets.push(value);\n                                                this.props.refreshInquiryState();\n                                            }}\n                                            onDelete={(index: number) => {\n                                                inquiry.relatedTickets.splice(index, 1);\n                                                this.props.refreshInquiryState();\n                                            }} />\n                                    <Grid container spacing={2}>\n                                        <Grid item xs={7}>\n                                            <CustomDropzone \n                                                accept='image/*'\n                                                onDrop={(files: File[]) => {\n                                                    inquiry.supportDocs.push(files[0]);\n                                                    this.props.refreshInquiryState();\n                                                }}/>\n                                        </Grid>\n                                        <Grid item xs={5}>\n                                            {inquiry.supportDocs.map((doc, index) => {\n                                                return (\n                                                    <CustomChip\n                                                        label={doc.name}\n                                                        value={index.toString()}\n                                                        onDelete={(value: string) => {\n                                                            inquiry.supportDocs.splice(parseInt(value), 1);\n                                                            this.props.refreshInquiryState();\n                                                        }} />\n                                                );\n                                            })}\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                                \n                            </Grid>\n                        </Grid>\n                    </div>\n                </TableCell>\n            </TableRow>\n        );\n    }\n}","import * as React from 'react';\nimport { ConsultationDetails, DropdownChoice } from 'Pages/CustomerCarePage/Models';\nimport { DetailedDropdown } from 'Pages/CustomerCarePage/Components/DetailedDropdown';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\n\ninterface IProps {\n    consultation: ConsultationDetails;\n    facilities: DropdownChoice[];\n    doctors: DropdownChoice[];\n    icd10Codes: DropdownChoice[];\n    createTicketAttemp: boolean;\n    refreshConsultationState: () => void;\n}\n\nexport class ConsultationSection extends React.Component<IProps> {\n\n    constructor(props: IProps) {\n        super(props);\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='availment-section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='sub-section'>\n                    <div className='header-2'>AVAILMENT DETAILS</div>\n                    <DetailedDropdown \n                        choices={this.props.facilities}\n                        placeholder='Provider'\n                        value={this.props.consultation.provider}\n                        error={\n                            this.props.createTicketAttemp && \n                            this.props.consultation.provider.value === ''}\n                        onChange={(value: DropdownChoice) => {\n                            this.props.consultation.provider = value;\n                            this.props.refreshConsultationState();\n                        }} />\n\n                    <DetailedDropdown \n                        choices={this.props.icd10Codes}\n                        placeholder='Diagnosis'\n                        value={this.props.consultation.diagnosis}\n                        error={\n                            this.props.createTicketAttemp && \n                            this.props.consultation.diagnosis.value === ''}\n                        onChange={(value: DropdownChoice) => {\n                            this.props.consultation.diagnosis = value;\n                            this.props.refreshConsultationState();\n                        }} />\n                    <Dropdown \n                        choices={this.props.doctors}\n                        placeholder='Doctor'\n                        value={this.props.consultation.doctor}\n                        error={\n                            this.props.createTicketAttemp && \n                            this.props.consultation.doctor.value === ''}\n                        onChange={(value: DropdownChoice) => {\n                            this.props.consultation.doctor = value;\n                            this.props.refreshConsultationState();\n                        }} />\n                    <InputField\n                        placeholder='Notes'\n                        value={this.props.consultation.notes}\n                        onChange={(value: string) => {\n                            this.props.consultation.notes = value;\n                            this.props.refreshConsultationState();\n                        }} />\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport {  Grid, TableCell, TableRow } from '@material-ui/core';\nimport { faMinusCircle, faPlus, faPen, faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { DetailedDropdown } from 'Pages/CustomerCarePage/Components/DetailedDropdown';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { ProcedureData, DropdownChoice, AvailmentDetails, DiagnosisData } from 'Pages/CustomerCarePage/Models';\nimport { NumberField } from 'Pages/CustomerCarePage/Components/NumberField';\nimport { CustomCheckbox } from 'Pages/CustomerCarePage/Components/CustomCheckbox';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\n\ninterface IProps {\n    availment: AvailmentDetails;\n    facilities: DropdownChoice[];\n    doctors: DropdownChoice[];\n    icd10Codes: DropdownChoice[];\n    cptCodes: DropdownChoice[];\n    createTicketAttemp: boolean;\n    refreshAvailmentState: () => void;\n}\n\ninterface IStates {\n    icd10Code: DropdownChoice;\n    doctor: DropdownChoice;\n    chiefComplaint: string;\n    history: string;\n\n    itemToEditIndex: number;\n    icd10CodeToEdit: DropdownChoice;\n    doctorToEdit: DropdownChoice;\n}\n\nexport class EmergencyRoomSection extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            icd10Code: { value: '', label: '' },\n            doctor: { value: '', label: '' },\n            chiefComplaint: '',\n            history: '',\n\n            itemToEditIndex: -1,\n            icd10CodeToEdit: { value: '', label: '' },\n            doctorToEdit: { value: '', label: '' }\n        };\n    }\n\n    getFilteredICD10(): DropdownChoice[] {\n        let filteredICD10: DropdownChoice[] = [];\n        for (var i = 0; i < this.props.icd10Codes.length; i++) {\n            let isSame = false;\n            for (var j = 0; j < this.props.availment.diagnoses.length; j++) {\n                isSame = (\n                    this.props.availment.diagnoses[j].icd10Code.value === \n                    this.props.icd10Codes[i].value ? true : isSame);\n            }\n            if (!isSame) {\n                filteredICD10 = filteredICD10.concat(this.props.icd10Codes[i]);\n            }\n        }\n        return filteredICD10;\n    }\n\n    getProcedureCosts(procedures: ProcedureData[]) {\n        let totalCost = 0;\n        procedures.map(procedure => {\n            totalCost += procedure.amount;\n        });\n        return totalCost;\n    }\n    \n    pushBlankDiagnosis(icd10Code: DropdownChoice, doctor: DropdownChoice) {\n        this.props.availment.diagnoses.push({\n            icd10Code: icd10Code,\n            remarks: '',\n            isPrimary: false,\n            isFinal: false,\n            doctors: [{\n                id: '',\n                name: doctor.label,\n                specialization: '',\n                fee: 0,\n                noOfVisits: 0,\n                remarks: '',\n                type: 'Admitting'\n            }],\n            procedures: [{\n                cptCode: { value: '', label: '' },\n                isPHIC: false,\n                amount: 0,\n                notes: '',\n                assessmentType: 'Pending',\n                assessmentRemarks: '',\n                approvedAmount: 0,\n                doctor: '',\n                dateAdded: new Date()\n            }],\n            assessmentType: 'Pending',\n            assessmentRemarks: '',\n            approvedAmount: 0\n        });\n    }\n\n    pushBlankProcedures(diagnosisIndex: number) {\n        this.props.availment.diagnoses[diagnosisIndex].procedures.push({\n            cptCode: { value: '', label: '' },\n            isPHIC: false,\n            amount: 0,\n            notes: '',\n            assessmentType: 'Pending',\n            assessmentRemarks: '',\n            approvedAmount: 0,\n            doctor: '',\n            dateAdded: new Date()\n        });\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='availment-section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='sub-section'>\n                    <div className='header-2'>AVAILMENT DETAILS</div>\n                    <DetailedDropdown \n                        choices={this.props.facilities}\n                        placeholder='Provider'\n                        value={this.props.availment.provider}\n                        error={\n                            this.props.createTicketAttemp && \n                            this.props.availment.provider.value === ''}\n                        onChange={(value: DropdownChoice) => {\n                            this.props.availment.provider = value;\n                            this.props.refreshAvailmentState();\n                        }} />\n                    <InputField\n                        placeholder='Chief Complaint'\n                        value={this.state.chiefComplaint}\n                        onChange={(value: string) => {\n                            this.setState({chiefComplaint: value});\n                        }} />\n                    <InputField\n                        placeholder='History'\n                        value={this.state.history}\n                        onChange={(value: string) => {\n                            this.setState({history: value});\n                        }} />\n                </div>\n                <div className='sub-section'>\n                    <div className='header-3'>LIST OF AVAILMENTS</div>\n                    <div className='text'>\n                        Add a diagnosis first then add procedures per diagnosis after\n                    </div>\n                    <div className='sub-section'>\n                        <CustomTable\n                            rows={this.props.availment.diagnoses}\n                            renderHeader={() => this.renderTableHeader()}\n                            renderRow={(rowData: any, index: number) => \n                                this.renderTableRow(rowData, index)} />\n                    </div>\n                    {this.props.createTicketAttemp && this.props.availment.diagnoses.length === 0 ? (\n                        <div className='sub-section' style={{color: '#E53935'}}>\n                            No diagnosis. Need atleast one diagnosis.\n                        </div> \n                    ) : (null)}\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            <TableCell style={{minWidth: '300px', maxWidth: '300px'}}>\n                <DetailedDropdown \n                    choices={this.getFilteredICD10()}\n                    value={this.state.icd10Code}\n                    onChange={(value: DropdownChoice) => {\n                        this.setState({icd10Code: value});\n                    }} />\n            </TableCell>\n            <TableCell style={{minWidth: '150px', maxWidth: '150px'}}>\n                <Dropdown \n                    choices={this.props.doctors}\n                    value={this.state.doctor}\n                    onChange={(value: DropdownChoice) => {\n                        this.setState({doctor: value});\n                    }} />\n            </TableCell>\n            <TableCell style={{textAlign: 'center'}}>\n                <TextButton \n                    icon={faPlus} \n                    label=\"Add diagnosis\"\n                    onClick={() => {\n                        if (this.state.doctor.value !== '' && this.state.icd10Code.value !== '') {\n                            this.pushBlankDiagnosis(this.state.icd10Code, this.state.doctor);\n                            this.props.refreshAvailmentState();\n                            this.setState({\n                                icd10Code: { value: '', label: '' },\n                                doctor: { value: '', label: '' }\n                            });\n                        }\n                    }} />\n            </TableCell>\n            </>\n        );\n    }\n\n    renderTableRow(diagnosis: DiagnosisData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        const editIcon = { display: 'inline-block', paddingRight: '0.5rem' };\n        const deleteIcon = { display: 'inline-block' };\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell colSpan={3}>\n                    <Grid container spacing={1}>\n                        {this.state.itemToEditIndex === index ? (\n                            <>\n                            <Grid item xs={6}>\n                                <DetailedDropdown \n                                    choices={this.getFilteredICD10()}\n                                    value={this.state.icd10CodeToEdit}\n                                    onChange={(value: DropdownChoice) => {\n                                        this.setState({icd10CodeToEdit: value});\n                                    }} />\n                            </Grid>\n                            <Grid item xs={5}>\n                                <Dropdown \n                                    choices={this.props.doctors}\n                                    value={this.state.doctorToEdit}\n                                    onChange={(value: DropdownChoice) => {\n                                        this.setState({doctorToEdit: value});\n                                    }} />\n                            </Grid>\n                            <Grid item xs={1} style={{lineHeight: '2rem'}}>\n                                <div style={editIcon}>\n                                    <IconButton\n                                        icon={faCheckCircle}\n                                        onClick={() => {\n                                            this.props.availment.diagnoses[index].icd10Code = this.state.icd10CodeToEdit;\n                                            this.props.availment.diagnoses[index].doctors[0].name = this.state.doctorToEdit.label;\n                                            this.props.refreshAvailmentState();\n                                            this.setState({itemToEditIndex: -1});\n                                        }}/>\n                                </div>\n                                <div style={deleteIcon}>\n                                    <IconButton\n                                        icon={faTimesCircle}\n                                        onClick={() => {\n                                            this.setState({itemToEditIndex: -1});\n                                        }}/>\n                                </div>\n                            </Grid>\n                            </>\n                        ) : (\n                            <>\n                            <Grid item xs={6} className='header-2'>\n                                {diagnosis.icd10Code.value + ' - ' + diagnosis.icd10Code.label}\n                            </Grid>\n                            <Grid item xs={3} className='header-2'>\n                                {diagnosis.doctors[0].name}\n                            </Grid>\n                            <Grid item xs={2} className='header-2'>\n                                {GlobalFunction.formatNumber(this.getProcedureCosts(diagnosis.procedures), true) + \" PHP\"}\n                            </Grid>\n                            <Grid item xs={1}>\n                                <div style={editIcon}>\n                                    <IconButton\n                                        icon={faPen}\n                                        onClick={() => {\n                                            this.setState({\n                                                itemToEditIndex: index,\n                                                icd10CodeToEdit: diagnosis.icd10Code,\n                                                doctorToEdit: {\n                                                    value: diagnosis.doctors[0].id,\n                                                    label: diagnosis.doctors[0].name\n                                                }\n                                            });\n                                        }}/>\n                                </div>\n                                <div style={deleteIcon}>\n                                    <IconButton\n                                        icon={faMinusCircle}\n                                        onClick={() => {\n                                            this.props.availment.diagnoses.splice(index, 1);\n                                            this.props.refreshAvailmentState();\n                                        }}/>\n                                </div>\n                            </Grid>\n                            </>\n                        )}\n                    </Grid>\n                    {diagnosis.procedures.map((procedure, procedureIndex) => {\n                        return this.renderProcedureDetails(procedure, index, procedureIndex);\n                    })}\n                </TableCell>\n            </TableRow>\n        );\n    }\n    \n    renderProcedureDetails(procedure: ProcedureData, diagnosisIndex: number, index: number): JSX.Element {\n        const stateProcedure = this.props.availment.diagnoses[diagnosisIndex].procedures[index];\n        const stateProcedures = this.props.availment.diagnoses[diagnosisIndex].procedures;\n        return (\n            <div style={{position: 'relative'}}>\n                <div style={{paddingTop: '0.5rem'}} />\n                <div className='line-border' />\n                <div style={{paddingTop: '0.5rem'}} />\n                <Grid container spacing={2}>\n                    <Grid item xs={8}>\n                        <DetailedDropdown \n                            placeholder='Procedure'\n                            choices={this.props.cptCodes}\n                            value={procedure.cptCode}\n                            onChange={(value: DropdownChoice) => {\n                                stateProcedure.cptCode = value;\n                                if (index === (stateProcedures.length - 1)) {\n                                    this.pushBlankProcedures(diagnosisIndex);\n                                }\n                                this.props.refreshAvailmentState();\n                            }} />\n                    </Grid>\n                    <Grid item xs={3}>\n                        <NumberField\n                            placeholder='Amount'\n                            value={procedure.amount}\n                            onChange={(value: number) => {\n                                stateProcedure.amount = value;\n                                this.props.refreshAvailmentState();\n                            }} />\n                    </Grid>\n                    <Grid item xs={1}>\n                        <CustomCheckbox\n                            placeholder='PHIC'\n                            value={procedure.isPHIC}\n                            onChange={(value: boolean) => {\n                                stateProcedure.isPHIC = value;\n                                this.props.refreshAvailmentState();\n                            }} />\n                    </Grid>\n                </Grid>\n                <div style={{position: 'absolute'}}>\n                    <TextButton \n                        label='Add procedure'\n                        icon={faPlus}\n                        onClick={() => {\n                            this.pushBlankProcedures(diagnosisIndex);\n                            this.props.refreshAvailmentState();\n                        }}/>\n                </div>\n                <div style={{paddingTop: '1rem'}} />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Button } from '@material-ui/core';\nimport { GlobalFunction } from './GlobalFunction';\n\ninterface IProps {\n    lastSave?: Date;\n    disableCloseTicket?: boolean;\n    disableFinalAssessment?: boolean;\n    disableAssign?: boolean;\n    disableEscalate?: boolean;\n\n    onSaveForNow?: () => void;\n    onSubmitTicket?: () => void;\n    onResolveTicket?: () => void;\n    onSummarizeAssessment?: () => void;\n    onGenerateApprovalCode?: () => void;\n\n    onAssign?: () => void;\n    onEscalate?: () => void;\n    onUpdateTicket?: () => void;\n    onFinalAssessment?: () => void;\n    onCloseTicket?: () => void;\n}\n\nexport class TicketFooter extends React.Component<IProps> {\n\n    interval?: NodeJS.Timeout;\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.setState({ time: Date.now() }), 5000);\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='footer'>\n\n                {this.props.onSaveForNow ? (\n                    <Button \n                        className='button-transparent' \n                        variant='outlined'\n                        onClick={this.props.onSaveForNow}>\n                        <div style={{display: 'block'}}>\n                            <div className='text'>Save For Now</div>\n                            {this.props.lastSave ? (\n                                <div className='small-text'>\n                                    {`Auto-saved ${GlobalFunction.getTimeDeffirence(this.props.lastSave, new Date())} ago`}\n                                </div>\n                            ) : null}\n                        </div>\n                    </Button>\n                ) : null}\n\n                {this.props.onResolveTicket ? (\n                    <Button \n                        className='button'\n                        disabled={this.props.onResolveTicket === null}\n                        onClick={this.props.onResolveTicket}>\n                        Mark as Resolved\n                    </Button>\n                ) : null}\n                \n                {this.props.onSubmitTicket ? (\n                    <Button \n                        className='button'\n                        disabled={this.props.onSubmitTicket === null}\n                        onClick={this.props.onSubmitTicket}>\n                        Submit Ticket\n                    </Button>\n                ) : null}\n\n                {this.props.onAssign ? (\n                    <Button \n                        className='button'\n                        color='default'\n                        disabled={this.props.disableAssign}\n                        onClick={this.props.onAssign}>\n                        Assign\n                    </Button>\n                ) : null}\n\n                {this.props.onEscalate ? (\n                    <Button \n                        className='button-error'\n                        disabled={this.props.disableEscalate}\n                        onClick={this.props.onEscalate}>\n                        Escalate\n                    </Button>\n                ) : null}\n\n                {this.props.onUpdateTicket ? (\n                    <Button \n                        className='button'\n                        disabled={this.props.onUpdateTicket === null}\n                        onClick={this.props.onUpdateTicket}>\n                        Update Ticket\n                    </Button>\n                ) : null}\n\n                {this.props.onFinalAssessment ? (\n                    <Button \n                        className='button'\n                        disabled={this.props.disableFinalAssessment}\n                        onClick={this.props.onFinalAssessment}>\n                        Proceed with Final Assessment\n                    </Button>\n                ) : null}\n\n                {this.props.onSummarizeAssessment ? (\n                    <Button \n                        className='button'\n                        disabled={this.props.onSummarizeAssessment === null}\n                        onClick={this.props.onSummarizeAssessment}>\n                        Summarize Assessment\n                    </Button>\n                ) : null}\n\n                {this.props.onGenerateApprovalCode ? (\n                    <Button \n                        className='button'\n                        disabled={this.props.onGenerateApprovalCode === null}\n                        onClick={this.props.onGenerateApprovalCode}>\n                        Generate Approval Code\n                    </Button>\n                ) : null}\n\n                {this.props.onCloseTicket ? (\n                    <Button \n                        className='button'\n                        disabled={this.props.disableCloseTicket}\n                        onClick={this.props.onCloseTicket}>\n                        Close Ticket\n                    </Button>\n                ) : null}\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\nimport { Tabs, Tab } from '@material-ui/core';\n\ninterface IProps {\n    tabList: { value: number, label: string }[];\n    selectedTab: number;\n    setSelectedTab: (index: number) => void;\n}\n\nexport class CustomTabs extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <Tabs\n                className='tabs' \n                value={this.props.selectedTab}\n                variant='scrollable'\n                scrollButtons='auto'\n                indicatorColor='primary'\n                onChange={(_event: React.ChangeEvent<{}>, value: number) => {\n                    this.props.setSelectedTab(value );\n                }}>\n                {this.props.tabList.map(tab => {\n                    return <Tab value={tab.value} label={tab.label} />\n                })}\n            </Tabs>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { ClientData } from 'Pages/CustomerCarePage/Models';\n\ninterface IProps {\n    client: ClientData;\n}\n\ninterface IStates {\n    \n}\n\nexport class BasicInformationSection extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    render() : JSX.Element {\n        const client = this.props.client;\n\n        const yearsAndCount = client.years ? `${new Date().getUTCFullYear() - client.years} (${client.years})` : '---';\n        const brokerName = client.salesChannel ? client.salesChannel.contactName : '---';\n        const brokerCompany = client.salesChannel ? client.salesChannel.company : '---';\n\n        return (\n            <Grid container spacing={2}>\n                {this.renderItem('CORPORATE ACCOUNT NO.', client.corporateAccountNo, 12, 'header-1')}\n                {this.renderItem('REGISTERED COMPANY NAME', client.registeredName)}\n                {this.renderItem('TRADE COMPANY NAME', client.brandName)}\n                {this.renderItem('INDUSTRY', client.industry || '---')}\n                {this.renderItem('OWNWESHIP', client.ownership || '---')}\n                {this.renderItem('CORPORATE TIN', client.tinNo || '---')}\n                {this.renderItem('SEC REGISTRATION NO.', client.secRegNo || '---')}\n                {this.renderItem('E-VAT NO.', client.evatNo || '---')}\n                {this.renderItem('ESTABLISHED (YEARS)', yearsAndCount)}\n                {this.renderItem('AUTHORIZED SIGNATORY', client.authSignatory)}\n                {this.renderItem('BROKER/BDO', brokerName)}\n                {this.renderItem('BROKER COMPANY', brokerCompany)}\n                {this.renderItem('PREVIOUS HMO', client.prevHMOProvider)}\n            </Grid>\n        );\n    }\n\n    renderItem(label: string, value?: string | number, xs?: any, className?: string): JSX.Element {\n        return (\n            <Grid item className='sub-section' xs={xs ? xs : 3} style={{padding: '16px 8px'}}>\n                {label.length > 0 ? (\n                    <div className='light-text'>{label}</div>\n                ) : null}\n                {value ? (\n                    <div className={className ? className : 'header-2'}>{value}</div>\n                ) : null}\n            </Grid>\n        )\n    }\n}","import * as React from 'react';\nimport { Grid, Paper } from '@material-ui/core';\nimport { ClientData, AddressData } from 'Pages/CustomerCarePage/Models';\n\ninterface IProps {\n    client: ClientData;\n}\n\ninterface IStates {\n    \n}\n\nexport class ContactsAndBranchesSection extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    render() : JSX.Element {\n        const client = this.props.client;\n        const mainAddress = client.mainOfficeAddress;\n        const branches = client.branches;\n\n        return (\n            <div>\n                {mainAddress ? (\n                    this.renderAddress(mainAddress, 'Head Office')\n                ) : null}\n                <div style={{paddingBottom: '0.75rem'}} />\n                {branches ? (\n                    branches.map((branch, index) => {\n                        return (\n                            <>\n                            {this.renderAddress(branch, `Branch ${index + 1}`)}\n                            <div style={{paddingBottom: '0.75rem'}} />\n                            </>\n                        )\n                    })\n                ) : null}\n            </div>\n        );\n    }\n\n    renderAddress(address: AddressData, branchName: string): JSX.Element {\n        \n        return (\n                <Paper className='section'>\n                    <Grid container spacing={2}>\n                        {this.renderItem('FLOOR / UNIT', branchName, 12, 'header-1', {\n                            borderBottom: '#3C394A22 solid 1px',\n                            padding: '8px'\n                        })}\n                        {this.renderItem('FLOOR / UNIT', `${address.floor} / ${address.unit}`)}\n                        {this.renderItem('BUILDING', address.bldgName)}\n                        {this.renderItem('STREET', address.street)}\n                        {this.renderItem('BARANGAY', address.barangay)}\n                        {this.renderItem('CITY / TOWN', address.city)}\n                        {this.renderItem('REGION / ZIP CODE', `${address.region} / ${address.zipCode}`)}\n                        {this.renderItem('TRUNKLINE / TEL. NO.', '', 6)}\n                        \n                        {address.contactPersons.length > 0 ? (\n                            <>\n                            {this.renderItem('CONTACT PERSON', undefined, 3, 'header-2', {padding: '16px 8px 0 8px'})}\n                            {this.renderItem('POSITION', undefined, 3, 'header-2', {padding: '16px 8px 0 8px'})}\n                            {this.renderItem('CONTACT NO.', undefined, 3, 'header-2', {padding: '16px 8px 0 8px'})}\n                            {this.renderItem('CONTACT EMAIL', undefined, 3, 'header-2', {padding: '16px 8px 0 8px'})}\n                            </>\n                        ) : null}\n                        \n                        {address.contactPersons.map(contact => {\n                            return (\n                                <>\n                                {this.renderItem('', contact.name, 3, 'header-2', {padding: '0 8px'})}\n                                {this.renderItem('', contact.designation, 3, 'header-2', {padding: '0 8px'})}\n                                {this.renderItem('', contact.contactNo, 3, 'header-2', {padding: '0 8px'})}\n                                {this.renderItem('', contact.email, 3, 'header-2', {padding: '0 8px'})}\n                                </>\n                            );\n                        })}\n                    </Grid>\n                </Paper>\n        );\n    }\n\n    renderItem(label: string, value?: string | number, xs?: any, className?: string, style?: React.CSSProperties): JSX.Element {\n        return (\n            <Grid item className='sub-section' xs={xs ? xs : 3} style={{padding: '16px 8px', ...style}}>\n                {label.length > 0 ? (\n                    <div className='light-text'>{label}</div>\n                ) : null}\n                {value ? (\n                    <div className={className ? className : 'header-2'}>{value}</div>\n                ) : null}\n            </Grid>\n        )\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\nimport { Tabs, Tab } from '@material-ui/core';\n\ninterface IProps {\n    tabList: { value: number, label: string }[];\n    selectedTab: number;\n    orientation?: 'horizontal' | 'vertical';\n    tabStyle?: (index: number) => React.CSSProperties;\n    tabLabel?: (index: number) => React.ReactNode;\n    setSelectedTab: (index: number) => void;\n}\n\nexport class TextTab extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <Tabs\n                className='text-tabs' \n                value={this.props.selectedTab}\n                orientation={this.props.orientation}\n                variant='scrollable'\n                scrollButtons='auto'\n                indicatorColor='primary'\n                onChange={(_event: React.ChangeEvent<{}>, value: number) => {\n                    this.props.setSelectedTab(value);\n                }}>\n                {this.props.tabList.map((tab, index) => {\n                    return (\n                        <Tab \n                            style={this.props.tabStyle ? this.props.tabStyle(index) : undefined}\n                            label={this.props.tabLabel ? this.props.tabLabel(index) : tab.label} \n                            value={tab.value} />\n                    )\n                })}\n            </Tabs>\n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\nimport { Radio } from '@material-ui/core';\n\ninterface IProps {\n    label?: string;\n    checkedCondition: boolean;\n    disabled?: boolean;\n    onChange: () => void;\n}\n\nexport class CustomRadio extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <div className='check-box-area'>\n                <Radio\n                    disabled={this.props.disabled}\n                    className='check-box'\n                    checked={this.props.checkedCondition}\n                    onChange={(_event: React.ChangeEvent<HTMLInputElement>) => {\n                        this.props.onChange();\n                    }} />\n                {this.props.label ? (\n                    <span className='text' style={{paddingLeft: '10px'}}>{this.props.label}</span>\n                ) : null}\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { ClientData } from 'Pages/CustomerCarePage/Models';\nimport { Grid } from '@material-ui/core';\nimport { CustomCheckbox } from 'Pages/CustomerCarePage/Components/CustomCheckbox';\nimport { CustomRadio } from 'Pages/CustomerCarePage/Components/CustomRadio';\n\ninterface IProps {\n    client: ClientData;\n}\n\nexport class CardSortingSection extends React.Component<IProps> {\n\n    render() : JSX.Element {\n        const sortingOfCards = this.props.client.servicingInstructions ? \n                               this.props.client.servicingInstructions.sortingOfCards : \n                               undefined;\n\n        return (\n            <div className='sub-section'>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <div className='text'>Card Sorting</div>\n                        {sortingOfCards && sortingOfCards.cardSorting ? (\n                            <div style={{boxShadow: '0px 3px 6px #00000029'}}>\n                                {sortingOfCards.cardSorting.map((i, index) => {\n                                    const backgroundColor = (index % 2 === 1 ? '#FFFFFF' : '#F6F7FA');\n                                    return <div style={{backgroundColor: backgroundColor, padding: '8px'}}>{i}</div>\n                                })}\n                            </div>\n                        ) : null}\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div className='sub-section'>\n                            <div className='text'>Card Packing</div>\n                            <CustomRadio \n                                label='Envelope'\n                                disabled\n                                checkedCondition={\n                                    sortingOfCards && \n                                    sortingOfCards.cardPacking &&\n                                    sortingOfCards.cardPacking === 'envelope' ? true : false}\n                                onChange={() => {}} />\n                            <CustomRadio \n                                label='Plastic'\n                                disabled\n                                checkedCondition={\n                                    sortingOfCards && \n                                    sortingOfCards.cardPacking &&\n                                    sortingOfCards.cardPacking === 'plastic' ? true : false}\n                                onChange={() => {}} />\n                            <CustomRadio \n                                label='With Flyer'\n                                disabled\n                                checkedCondition={\n                                    sortingOfCards && \n                                    sortingOfCards.cardPacking &&\n                                    sortingOfCards.cardPacking === 'with flyer' ? true : false}\n                                onChange={() => {}} />\n                        </div>\n                        <div className='sub-section'>\n                            <div className='text'>Pack according to</div>\n                            <CustomCheckbox\n                                label='Team Leader'\n                                disabled\n                                value={\n                                    sortingOfCards && \n                                    sortingOfCards.packAccordingTo &&\n                                    sortingOfCards.packAccordingTo.includes('team_leader') ? true : false}\n                                onChange={(_value: boolean) => {}} />\n                             <CustomCheckbox\n                                label='Family'\n                                disabled\n                                value={\n                                    sortingOfCards && \n                                    sortingOfCards.packAccordingTo &&\n                                    sortingOfCards.packAccordingTo.includes('family') ? true : false}\n                                onChange={(_value: boolean) => {}} />\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { ClientData } from 'Pages/CustomerCarePage/Models';\nimport { Grid } from '@material-ui/core';\nimport { CustomCheckbox } from 'Pages/CustomerCarePage/Components/CustomCheckbox';\n\ninterface IProps {\n    client: ClientData;\n}\n\nexport class CardPrintingSection extends React.Component<IProps> {\n\n    render() : JSX.Element {\n        const printingOfCards = this.props.client.servicingInstructions ? \n                                this.props.client.servicingInstructions.printingOfCards : \n                                undefined;\n\n        return (\n            <div className='sub-section'>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <CustomCheckbox\n                            label='1. Company Logo'\n                            disabled\n                            value={printingOfCards && printingOfCards.includes('company logo') ? true : false}\n                            onChange={(_value: boolean) => {}} />\n                        <CustomCheckbox\n                            label='2. ID Picture'\n                            disabled\n                            value={printingOfCards && printingOfCards.includes('id picture') ? true : false}\n                            onChange={(_value: boolean) => {}} />\n                        <CustomCheckbox\n                            label='3. Member Last Name, First Name, Middle Name, Extension (if any)'\n                            disabled\n                            value={printingOfCards && printingOfCards.includes('full name') ? true : false}\n                            onChange={(_value: boolean) => {}} />\n                        <CustomCheckbox\n                            label='4. Company Name'\n                            disabled\n                            value={printingOfCards && printingOfCards.includes('company name') ? true : false}\n                            onChange={(_value: boolean) => {}} />\n                        <CustomCheckbox\n                            label='5. Member Account No.'\n                            disabled\n                            value={printingOfCards && printingOfCards.includes('member account no') ? true : false}\n                            onChange={(_value: boolean) => {}} />\n                        <CustomCheckbox\n                            label='6. Card Number'\n                            disabled\n                            value={printingOfCards && printingOfCards.includes('card no') ? true : false}\n                            onChange={(_value: boolean) => {}} />\n                        <CustomCheckbox\n                            label='7. Month and Year of Birth (MM/YY)'\n                            disabled\n                            value={printingOfCards && printingOfCards.includes('birthday') ? true : false}\n                            onChange={(_value: boolean) => {}} />\n                        <CustomCheckbox\n                            label='8. Sex'\n                            disabled\n                            value={printingOfCards && printingOfCards.includes('sex') ? true : false}\n                            onChange={(_value: boolean) => {}} />\n                        <CustomCheckbox\n                            label='9. Dental Coverage — Based on the member’s plan type in the contract'\n                            disabled\n                            value={printingOfCards && printingOfCards.includes('dental coverage') ? true : false}\n                            onChange={(_value: boolean) => {}} />   \n                    </Grid>\n                    <Grid item xs={6}>\n                        <img\n                            src='si_sample_card.png'\n                            className='card'\n                            alt=\"Sample Reference Card\" />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { ClientData } from 'Pages/CustomerCarePage/Models';\nimport { Grid } from '@material-ui/core';\nimport { CustomCheckbox } from 'Pages/CustomerCarePage/Components/CustomCheckbox';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\n\ninterface IProps {\n    client: ClientData;\n} \n\nexport class BillingSection extends React.Component<IProps> {\n\n    render() : JSX.Element {\n        const billing = this.props.client.servicingInstructions ? \n                        this.props.client.servicingInstructions.billing : \n                        undefined;\n\n        const softCopy = billing && \n                         billing.sendSoaFormats ?\n                         billing.sendSoaFormats.find(i => i.format === 'soft_copy') :\n                         undefined;\n\n        return (\n            <div className='sub-section'>\n                <div className='sub-section'>\n                    <div className='text'>Additional fields to be included in SOA attachment</div>\n                    <CustomCheckbox\n                        label='Site'\n                        disabled\n                        value={billing && billing.additionalFieldsSoa.includes('site') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Sub-company'\n                        disabled\n                        value={billing && billing.additionalFieldsSoa.includes('sub-company') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Cost Center'\n                        disabled\n                        value={billing && billing.additionalFieldsSoa.includes('cost center') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Endorsement / Batch Number'\n                        disabled\n                        value={billing && billing.additionalFieldsSoa.includes('batch no') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Employee No. / Employee ID'\n                        disabled\n                        value={billing && billing.additionalFieldsSoa.includes('employee no') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Cost c/o company / Employer'\n                        disabled\n                        value={billing && billing.additionalFieldsSoa.includes('cost care of') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                </div>\n                <div className='sub-section'>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <div className='text'>SOAs Generation</div>\n                            {billing && billing.soaGeneration ? (\n                                <div style={{boxShadow: '0px 3px 6px #00000029'}}>\n                                    {billing.soaGeneration.map((i, index) => {\n                                        const text = \n                                            i === 'site' ? 'Site' :\n                                            i === 'sub-company' ? 'Sub-company' :\n                                            i === 'cost-center' ? 'Cost Center' :\n                                            i === 'batch-no' ? 'Endorsement / Batch Number' :\n                                            i === 'employee-no' ? 'Employee No. / Employee ID' :\n                                            i === 'alphabetical' ? 'Alphabetical' :\n                                            i === 'effectivity-date' ? 'Effectivity Date' :\n                                            i === 'company-paid-dependents' ? 'Company-Paid Dependents' :\n                                            i === 'employee-paid-dependents' ? 'Employee-Paid Dependents' :\n                                            i === 'principal-employees' ? 'Employees (Principal)' :\n                                            i === 'member-plan-type' ? 'Member Plan Type' : '';\n                                        const backgroundColor = (index % 2 === 1 ? '#FFFFFF' : '#F6F7FA');\n                                        return (\n                                            <div style={{backgroundColor: backgroundColor, padding: '8px'}}>\n                                                {text}\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            ) : null}\n                        </Grid>\n                        <Grid item xs={6}>\n                        <div className='text'>SOAs Sorting</div>\n                            {billing && billing.soaGeneration ? (\n                                <div style={{boxShadow: '0px 3px 6px #00000029'}}>\n                                    {billing.soaSorting.map((i, index) => {\n                                        const text = \n                                            i === 'site' ? 'Site' :\n                                            i === 'sub-company' ? 'Sub-company' :\n                                            i === 'cost-center' ? 'Cost Center' :\n                                            i === 'batch-no' ? 'Endorsement / Batch Number' :\n                                            i === 'employee-no' ? 'Employee No. / Employee ID' :\n                                            i === 'alphabetical' ? 'Alphabetical' :\n                                            i === 'effectivity-date' ? 'Effectivity Date' :\n                                            i === 'company-paid-dependents' ? 'Company-Paid Dependents' :\n                                            i === 'employee-paid-dependents' ? 'Employee-Paid Dependents' :\n                                            i === 'principal-employees' ? 'Employees (Principal)' :\n                                            i === 'member-plan-type' ? 'Member Plan Type' : '';\n                                        const backgroundColor = (index % 2 === 1 ? '#FFFFFF' : '#F6F7FA');\n                                        return (\n                                            <div style={{backgroundColor: backgroundColor, padding: '8px'}}>\n                                                {text}\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            ) : null}\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className='sub-section'>\n                    <Grid container>\n                        <Grid item xs={6}>\n                            <InputField\n                                placeholder='Employee enrollment'\n                                disabled\n                                value={billing && billing.addressSoaTo ? billing.addressSoaTo : ''}\n                                onChange={(_value: string) => {}} />\n                            <InputField\n                                placeholder='Send SOA to'\n                                disabled\n                                value={billing && billing.sendSoaTo ? billing.sendSoaTo : ''}\n                                onChange={(_value: string) => {}} />\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className='sub-section'>\n                    <div className='text'>Send SOA on specific days only</div>\n                    <CustomCheckbox\n                        label='Monday'\n                        disabled\n                        value={\n                            billing && \n                            billing.sendSoaDays && \n                            billing.sendSoaDays.includes('monday') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Tuesday'\n                        disabled\n                        value={\n                            billing && \n                            billing.sendSoaDays && \n                            billing.sendSoaDays.includes('tuesday') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Wednesday'\n                        disabled\n                        value={\n                            billing && \n                            billing.sendSoaDays && \n                            billing.sendSoaDays.includes('wednesday') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Thursday'\n                        disabled\n                        value={\n                            billing && \n                            billing.sendSoaDays && \n                            billing.sendSoaDays.includes('thursday') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Friday'\n                        disabled\n                        value={\n                            billing && \n                            billing.sendSoaDays &&\n                            billing.sendSoaDays.includes('friday') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Saturday'\n                        disabled\n                        value={\n                            billing && \n                            billing.sendSoaDays &&\n                            billing.sendSoaDays.includes('saturday') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Sunday'\n                        disabled\n                        value={\n                            billing && \n                            billing.sendSoaDays &&\n                            billing.sendSoaDays.includes('sunday') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                </div>\n                <div className='sub-section'>\n                    <div className='text'>Send SOA in the following formats</div>\n                    <CustomCheckbox\n                        label='Hard Copy'\n                        disabled\n                        value={\n                            billing && \n                            billing.sendSoaFormats &&\n                            billing.sendSoaFormats.find(i => i.format === 'hard copy') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Soft Copy'\n                        disabled\n                        value={\n                            billing && \n                            billing.sendSoaFormats &&\n                            billing.sendSoaFormats.find(i => i.format === 'soft_copy') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <Grid container>\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <CustomCheckbox\n                                label='Email'\n                                disabled\n                                value={\n                                    softCopy &&\n                                    softCopy.options &&\n                                    softCopy.options.includes('email') ? true : false}\n                                onChange={(_value: boolean) => {}} />\n                            <CustomCheckbox\n                                label='Client Portal'\n                                disabled\n                                value={\n                                    softCopy &&\n                                    softCopy.options &&\n                                    softCopy.options.includes('client portal') ? true : false}\n                                onChange={(_value: boolean) => {}} />\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className='sub-section'>\n                    <div className='text'>CM Application</div>\n                    <CustomCheckbox\n                        label='Separate SOA and CM'\n                        disabled\n                        value={\n                            billing && \n                            billing.cmApplication && \n                            billing.cmApplication.includes('separate soa and cm') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Automatic application / offset against current SOAs'\n                        disabled\n                        value={\n                            billing && \n                            billing.cmApplication && \n                            billing.cmApplication.includes('automatic application') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                </div>\n                <div className='sub-section'>\n                    <div className='text'>Additional requirements</div>\n                    <CustomCheckbox\n                        label='Billing validation required prior to sending final SOA'\n                        disabled\n                        value={\n                            billing && \n                            billing.additionalRequirements && \n                            billing.additionalRequirements.includes('billing validation') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Premium Refund not to be released until full payment of premium'\n                        disabled\n                        value={\n                            billing && \n                            billing.additionalRequirements && \n                            billing.additionalRequirements.includes('premium refund') ? true : false}\n                        onChange={(_value: boolean) => {}} />\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { ClientData } from 'Pages/CustomerCarePage/Models';\nimport { CustomCheckbox } from 'Pages/CustomerCarePage/Components/CustomCheckbox';\nimport { Grid } from '@material-ui/core';\n\ninterface IProps {\n    client: ClientData;\n}\n\nexport class EnrollmentSection extends React.Component<IProps> {\n\n    render() : JSX.Element {\n        const enrollment = this.props.client.servicingInstructions ? \n                           this.props.client.servicingInstructions.enrollment : \n                           undefined;\n\n        const memberClientEncoding = enrollment && \n                                     enrollment.dependentEntrollment ?\n                                     enrollment.dependentEntrollment.find(i => i.enrollment === 'member client encoding') :\n                                     undefined;\n\n        return (\n            <div className='sub-section'>\n                <div className='sub-section'>\n                    <div className='text'>Employee Enrollment</div>\n                    <CustomCheckbox\n                        label='HR Client uploading'\n                        disabled\n                        value={\n                            enrollment && \n                            enrollment.employeeEntrollment ? \n                            enrollment.employeeEntrollment.includes('hr client uploading') : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='HR Client encoding'\n                        disabled\n                        value={\n                            enrollment && \n                            enrollment.employeeEntrollment ? \n                            enrollment.employeeEntrollment.includes('hr client encoding') : false}\n                        onChange={(_value: boolean) => {}} />\n                </div>\n                <div className='sub-section'>\n                    <div className='text'>Dependent Enrollment</div>\n                    <CustomCheckbox\n                        label='HR Client uploading'\n                        disabled\n                        value={\n                            enrollment && \n                            enrollment.dependentEntrollment ? \n                            enrollment.dependentEntrollment.find(i => i.enrollment === 'hr client uploading') ? true : false : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='HR Client encoding'\n                        disabled\n                        value={\n                            enrollment && \n                            enrollment.dependentEntrollment ? \n                            enrollment.dependentEntrollment.find(i => i.enrollment === 'hr client encoding') ? true : false : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Member Client encoding'\n                        disabled\n                        value={\n                            enrollment && \n                            enrollment.dependentEntrollment ? \n                            enrollment.dependentEntrollment.find(i => i.enrollment === 'member client encoding') ? true : false : false}\n                        onChange={(_value: boolean) => {}} />\n                    <Grid container>\n                        <Grid item xs={1} />\n                        <Grid item xs={11}>\n                            <CustomCheckbox\n                                label='Upload supporting documents required'\n                                disabled\n                                value={\n                                    memberClientEncoding &&\n                                    memberClientEncoding.options ? \n                                    memberClientEncoding.options.includes('upload supporting') : false}\n                                onChange={(_value: boolean) => {}} />\n                            <CustomCheckbox\n                                label='Submission of physical supporting documents required'\n                                disabled\n                                value={\n                                    memberClientEncoding &&\n                                    memberClientEncoding.options ? \n                                    memberClientEncoding.options.includes('submission of physical') : false}\n                                onChange={(_value: boolean) => {}} />\n                            <CustomCheckbox\n                                label='Approval of HR through HR Client Portal required'\n                                disabled\n                                value={\n                                    memberClientEncoding &&\n                                    memberClientEncoding.options ? \n                                    memberClientEncoding.options.includes('approval of hr') : false}\n                                onChange={(_value: boolean) => {}} />\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className='sub-section'>\n                    <div className='text'>Enrollment done through</div>\n                    <CustomCheckbox\n                        label='Email'\n                        disabled\n                        value={\n                            enrollment && \n                            enrollment.enrollmentDoneThrough ? \n                            enrollment.enrollmentDoneThrough.includes('email') : false}\n                        onChange={(_value: boolean) => {}} />\n                    <CustomCheckbox\n                        label='Physical documents'\n                        disabled\n                        value={\n                            enrollment && \n                            enrollment.enrollmentDoneThrough ? \n                            enrollment.enrollmentDoneThrough.includes('physical documents') : false}\n                        onChange={(_value: boolean) => {}} />\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { ClientData } from 'Pages/CustomerCarePage/Models';\nimport { Grid } from '@material-ui/core';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { CustomRadio } from 'Pages/CustomerCarePage/Components/CustomRadio';\n\ninterface IProps {\n    client: ClientData;\n}\n\nexport class CollectionSection extends React.Component<IProps> {\n\n    render() : JSX.Element {\n        const collection = this.props.client.servicingInstructions ? \n                           this.props.client.servicingInstructions.collection : \n                           undefined;\n\n        return (\n            <div className='sub-section'>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <InputField\n                            placeholder='Employee enrollment'\n                            disabled\n                            value={\n                                collection && collection.employeeEnrollment ? \n                                collection.employeeEnrollment : ''}\n                            onChange={(_value: string) => {}} />\n                    </Grid>\n                    <Grid item xs={6}>\n                    <InputField\n                            placeholder='Contact person for follow-ups'\n                            disabled\n                            value={\n                                collection && collection.contactPersonForFollowups ? \n                                collection.contactPersonForFollowups : ''}\n                            onChange={(_value: string) => {}} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div className='text'>Preferred means of payment</div>\n                        <CustomRadio \n                            label='Bank Deposit'\n                            disabled\n                            checkedCondition={collection && collection.prefredMeansOfPayment === 'bank deposit' ? true : false}\n                            onChange={() => {}} />\n                        <Grid container>\n                            <Grid item xs={1} />\n                            <Grid item xs={5}>\n                                <InputField\n                                    placeholder='Preferred bank'\n                                    disabled\n                                    value={\n                                        collection && collection.preferedBank ? \n                                        collection.preferedBank : ''}\n                                    onChange={(_value: string) => {}} />\n                            </Grid>\n                        </Grid>\n                        \n                        <CustomRadio \n                            label='Pick-up check'\n                            disabled\n                            checkedCondition={collection && collection.prefredMeansOfPayment === 'pick-up check' ? true : false}\n                            onChange={() => {}} />\n                        <CustomRadio \n                            label='Deliver check'\n                            disabled\n                            checkedCondition={collection && collection.prefredMeansOfPayment === 'deliver check' ? true : false}\n                            onChange={() => {}} />\n                        <CustomRadio \n                            label='Pick-up cash'\n                            disabled\n                            checkedCondition={collection && collection.prefredMeansOfPayment === 'pick-up cash' ? true : false}\n                            onChange={() => {}} />\n                        <CustomRadio \n                            label='Deliver Cash'\n                            disabled\n                            checkedCondition={collection && collection.prefredMeansOfPayment === 'deliver cash' ? true : false}\n                            onChange={() => {}} />\n                        <CustomRadio \n                            label='Credit Card'\n                            disabled\n                            checkedCondition={collection && collection.prefredMeansOfPayment === 'credit card' ? true : false}\n                            onChange={() => {}} />\n                        <CustomRadio \n                            label='Wire Transfer'\n                            disabled\n                            checkedCondition={collection && collection.prefredMeansOfPayment === 'wire transfer' ? true : false}\n                            onChange={() => {}} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <InputField\n                            placeholder='Details for payment pick-up'\n                            disabled\n                            value={\n                                collection && collection.detialsForPaymentPickup ? \n                                collection.detialsForPaymentPickup : ''}\n                            onChange={(_value: string) => {}} />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { ClientData } from 'Pages/CustomerCarePage/Models';\nimport { CustomCheckbox } from 'Pages/CustomerCarePage/Components/CustomCheckbox';\n\ninterface IProps {\n    client: ClientData;\n}\n\nexport class AvailmentSection extends React.Component<IProps> {\n\n    render() : JSX.Element {\n        const availment = this.props.client.servicingInstructions ? \n                          this.props.client.servicingInstructions.availment : \n                          undefined;\n\n        return (\n            <div className='sub-section'>\n                <CustomCheckbox\n                    label='Inform member of copayment / coinsurance share'\n                    disabled\n                    value={availment && availment.includes('inform member of copayment') ? true : false}\n                    onChange={(_value: boolean) => {}} />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { ClientData, ReportorialData } from 'Pages/CustomerCarePage/Models';\nimport { TableCell, TableRow } from '@material-ui/core';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\n\ninterface IProps {\n    client: ClientData;\n}\n\ninterface IStates {\n    reportorialIsUpdated: boolean;\n}\n\nexport class ReportorialSection extends React.Component<IProps, IStates> {\n\n    reportorialData: ReportorialData[] = [\n        { available: false, frequency: 'yearly', reportType: 'summary of claims' },\n        { available: false, frequency: 'yearly', reportType: 'top facilities' },\n        { available: false, frequency: 'yearly', reportType: 'top illnesses' },\n        { available: false, frequency: 'yearly', reportType: 'detailed utilization' },\n        { available: false, frequency: 'yearly', reportType: 'detailed account renewal status report' },\n        { available: false, frequency: 'yearly', reportType: 'summary of account renewal status report' },\n        { available: false, frequency: 'yearly', reportType: 'account analysis report by industry' },\n        { available: false, frequency: 'yearly', reportType: 'account analysis report by segmentation' },\n        { available: false, frequency: 'yearly', reportType: 'active members list' },\n        { available: false, frequency: 'yearly', reportType: 'masterlist' },\n        { available: false, frequency: 'yearly', reportType: 'card summary report' },\n        { available: false, frequency: 'yearly', reportType: 'card replacement report' },\n        { available: false, frequency: 'yearly', reportType: 'account transaction report' },\n        { available: false, frequency: 'yearly', reportType: 'summary of claims report' },\n        { available: false, frequency: 'yearly', reportType: 'top utilization report' },\n        { available: false, frequency: 'yearly', reportType: 'detailed utilization report' },\n        { available: false, frequency: 'yearly', reportType: 'account renewal status report' },\n        { available: false, frequency: 'yearly', reportType: 'account analysis report' },\n        { available: false, frequency: 'yearly', reportType: 'account segmentation exception report' }\n    ];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            reportorialIsUpdated: false\n        }\n    }\n\n    componentDidMount() {\n        const reportorial = this.props.client.servicingInstructions ? \n                           this.props.client.servicingInstructions.reportorial : \n                           undefined;\n        this.reportorialData = this.reportorialData.map(data => {\n            if (reportorial) {\n                const reportorialData = reportorial.find(i => i.reportType === data.reportType);\n                console.log(reportorialData);\n                if (reportorialData) {\n                    return {\n                        reportType: data.reportType,\n                        frequency: reportorialData.frequency,\n                        available: reportorialData.available\n                    }\n                }\n            }\n            return data;\n        });\n\n        this.setState({reportorialIsUpdated: true});\n    }\n\n    render() : JSX.Element {\n\n        return (\n            <div className='sub-section'>\n                <CustomTable\n                    className='custom-table'\n                    rows={this.reportorialData}\n                    renderHeader={() => this.renderTableHeader()}\n                    renderRow={(rowData: ReportorialData, index: number) => \n                        this.renderTableRow(rowData, index)} />\n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        \n        return (\n            <>\n            <TableCell>Report Type</TableCell>\n            <TableCell>Frequency</TableCell>\n            <TableCell style={{textAlign: 'center'}}>Available?</TableCell>\n            </>\n        );\n    }\n\n    renderTableRow(field: ReportorialData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{GlobalFunction.capitalizeEachWord(field.reportType)}</TableCell>\n                <TableCell>{GlobalFunction.capitalizeEachWord(field.frequency)}</TableCell>\n                <TableCell style={{textAlign: 'center'}}>{field.available ? 'Yes' : 'No'}</TableCell>\n            </TableRow>\n        );\n    }\n}","import * as React from 'react';\nimport { ClientData } from 'Pages/CustomerCarePage/Models';\nimport { TextTab } from 'Pages/CustomerCarePage/Components/TextTab';\nimport { CardSortingSection } from './CardSortingSection';\nimport { CardPrintingSection } from './CardPrintingSection';\nimport { BillingSection } from './BillingSection';\nimport { EnrollmentSection } from './EnrollmentSection';\nimport { CollectionSection } from './CollectionSection';\nimport { AvailmentSection } from './AvailmentSection';\nimport { ReportorialSection } from './ReportorialSection';\n\ninterface IProps {\n    client: ClientData;\n}\n\ninterface IStates {\n    selectedTab: number;\n}\n\nexport class ServicingInstructionsSection extends React.Component<IProps, IStates> {\n\n    tabList = [\n        { value: 1, label: 'Sorting of Cards' },\n        { value: 2, label: 'Printing of Cards' },\n        { value: 3, label: 'Billing' },\n        { value: 4, label: 'Enrollment' },\n        { value: 5, label: 'Collection' },\n        { value: 6, label: 'Availment' },\n        { value: 7, label: 'Reportorial' }\n    ];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            selectedTab: 1\n        };\n    }\n\n    render() : JSX.Element {\n\n        return (\n            <div>\n                <div className='sub-section'>\n                    <TextTab\n                        tabList={this.tabList}\n                        selectedTab={this.state.selectedTab}\n                        tabStyle={(_index: number) => {\n                            return { padding: '0 1rem' };\n                        }}\n                        tabLabel={(index: number) => {\n                            return (\n                                <div style={{width: '100%'}}>\n                                    <div className='header-3' style={{margin: '6px 0'}}>\n                                        {this.tabList[index].label}\n                                    </div>\n                                </div>\n                            );\n                        }}\n                        setSelectedTab={(value: number) => {\n                            this.setState({selectedTab: value});\n                        }} />\n                </div>\n                {this.state.selectedTab === 1 ? (\n                    <CardSortingSection client={this.props.client} />\n                ) : this.state.selectedTab === 2 ? (\n                    <CardPrintingSection client={this.props.client} />\n                ) : this.state.selectedTab === 3 ? (\n                    <BillingSection client={this.props.client} />\n                ) : this.state.selectedTab === 4 ? (\n                    <EnrollmentSection client={this.props.client} />\n                ) : this.state.selectedTab === 5 ? (\n                    <CollectionSection client={this.props.client} />\n                ) : this.state.selectedTab === 6 ? (\n                    <AvailmentSection client={this.props.client} />\n                ) : this.state.selectedTab === 7 ? (\n                    <ReportorialSection client={this.props.client} />\n                ) : null}\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid, TableRow, TableCell } from '@material-ui/core';\nimport { ClientData, PlanTypeData } from 'Pages/CustomerCarePage/Models';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\n\ninterface IProps {\n    history: any;\n    client: ClientData;\n}\n\ninterface IStates {\n    filterName: string;\n    filterBenefits: string;\n    filterPrincipals: string;\n    filterDependents: string;\n    filterDateCreated: string;\n    filterDateUpdated: string;\n    filterVersion: string;\n}\n\nexport class HMOInformationSection extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            filterName: '',\n            filterBenefits: '',\n            filterPrincipals: '',\n            filterDependents: '',\n            filterDateCreated: '',\n            filterDateUpdated: '',\n            filterVersion: ''\n        };\n    }\n\n    render() : JSX.Element {\n        const client = this.props.client;\n        const contract = client.contract;\n        const planTypes = client.planTypes;\n\n        const startDate = contract && contract.startDate ? GlobalFunction.toShortDateString(contract.startDate) : '---';\n        const endDate = contract && contract.endDate ? GlobalFunction.toShortDateString(contract.endDate) : '---';\n        const brokerName = client.salesChannel ? client.salesChannel.contactName : '---';\n        const brokerCompany = client.salesChannel ? client.salesChannel.company : '---';\n\n        return (\n            <Grid container spacing={2}>\n                {this.renderItem('CORPORATE ACCOUNT NO.', client.corporateAccountNo)}\n                {contract ? (\n                    <>\n                    {this.renderItem('CONTRACT', contract.name, 9, \n                        () => {\n                            this.props.history.push(`#/membership/member-contract/${contract.id}`);\n                            window.location.reload();\n                        })}\n                    {this.renderItem('EFFECTIVITY DATE', startDate)}\n                    {this.renderItem('EXPIRY DATE', endDate)}\n                    {this.renderItem('REGISTERED COMPANY NAME', client.registeredName, 6)}\n                    {this.renderItem('AUTHORIZED SIGNATORY', client.authSignatory || '---')}\n                    {this.renderItem('BROKER/BDO', brokerName)}\n                    {this.renderItem('BROKER COMPANY', brokerCompany, 6)}\n                    </>\n                ) : null}\n                <Grid item xs={12} style={{overflowX: 'auto'}}>\n                    {planTypes ? (\n                        <CustomTable\n                            rows={planTypes}\n                            renderHeader={() => this.renderTableHeader()}\n                            renderRow={(rowData: any, index: number) => \n                                this.renderTableRow(rowData, index)} />\n                    ) : null}\n                </Grid>\n            </Grid>\n        );\n    }\n\n    renderItem(label: string, value: string, xs?: any, onClick?: () => void): JSX.Element {\n        return (\n            <Grid item className='sub-section' xs={xs ? xs : 3} style={{padding: '16px 8px'}}>\n                <div className='light-text'>{label}</div>\n                {onClick ? (\n                    <TextButton label={value} onClick={onClick} />\n                ) : (\n                    <div className='header-2'>{value}</div>\n                )}\n                \n            </Grid>\n        )\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            {this.renderHeaderColumn('fiterName', 'Plan Type')}\n            {this.renderHeaderColumn('filterBenefits', 'Benefits')}\n            {this.renderHeaderColumn('filterPrincipals', 'Principals')}\n            {this.renderHeaderColumn('filterDependents', 'Dependents')}\n            {this.renderHeaderColumn('filterDateCreated', 'Date Created')}\n            {this.renderHeaderColumn('filterDateUpdated', 'Date Modified')}\n            {this.renderHeaderColumn('filterVersion', 'Contract Version')}\n            </>\n        );\n    }\n\n    renderTableRow(planType: PlanTypeData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{planType.name}</TableCell>\n                <TableCell>{planType.benefits}</TableCell>\n                <TableCell>{planType.principals}</TableCell>\n                <TableCell>{planType.dependents}</TableCell>\n                <TableCell>{GlobalFunction.toShortDateString(planType.dateCreated)}</TableCell>\n                <TableCell>{GlobalFunction.toShortDateString(planType.dateUpdated)}</TableCell>\n                <TableCell>{planType.version}</TableCell>\n            </TableRow>\n        );\n    }\n\n    renderHeaderColumn(attrName: string, headerText: string, width?: string): JSX.Element {\n        return (\n            <TableCell style={{minWidth: width ? width : '150px'}}>\n                <span className='header-2'>{headerText}</span>\n                <div style={{float: 'right'}}>\n                    <IconButton \n                        icon={faSort} \n                        onClick={() => {\n                            // this.sortFacilities(attrName, true);\n                        }} />\n                </div>\n                <InputField\n                    value={this.state[attrName]}\n                    onChange={(value: string) => {\n                        // @ts-ignore\n                        this.setState({[attrName]: value});\n                    }} />\n            </TableCell>\n        );\n    }\n}","import * as React from 'react';\nimport { TableRow, TableCell } from '@material-ui/core';\nimport { ClientData, MemberData } from 'Pages/CustomerCarePage/Models';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { Payloads } from 'Pages/CustomerCarePage/Payloads';\nimport { Loading } from 'Pages/CustomerCarePage/Components/Loading';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\n\ninterface IProps {\n    client: ClientData;\n}\n\ninterface IStates {\n    members?: MemberData[];\n}\n\nexport class MembersSection extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    componentDidMount() {\n        const filter = {\n            where: {\n                client_id: this.props.client.id//'5d9af14586cd6f0349131e88'\n            }\n        };\n        API.get(`members?filter=${JSON.stringify(filter)}`,\n            (response) => {\n                console.log(response);\n                this.setState({members: Payloads.getMembers(response)});\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    render() : JSX.Element {\n\n        return (\n            <div className='sub-section' style={{overflowX: 'auto'}}>\n                {this.state.members ? (\n                    <CustomTable\n                        rows={this.state.members}\n                        renderHeader={() => this.renderTableHeader()}\n                        rowsPerPageOptions={[10, 25, 50]}\n                        renderRow={(rowData: any, index: number) => \n                            this.renderTableRow(rowData, index)} />\n                ) : (\n                    <Loading height='10rem' />\n                )}\n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            {this.renderHeaderColumn('memberId', 'Member ID')}\n            {this.renderHeaderColumn('filterBenefits', 'Name')}\n            {this.renderHeaderColumn('filterPrincipals', 'Corporate/s')}\n            {this.renderHeaderColumn('filterDependents', 'Effectivity Date')}\n            {this.renderHeaderColumn('filterDateCreated', 'Termination Date')}\n            {this.renderHeaderColumn('filterVersion', 'Status')}\n            </>\n        );\n    }\n\n    renderTableRow(member: MemberData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        const effectivityDate = member.effectivityDate ? GlobalFunction.toShortDateString(member.effectivityDate) : '---';\n        const terminationDate = member.terminationDate ? GlobalFunction.toShortDateString(member.terminationDate) : '---';\n        const name = GlobalFunction.toNameFormat(\n            member.firstName,\n            member.middleName,\n            member.lastName\n        );\n\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{member.memberId}</TableCell>\n                <TableCell>{name}</TableCell>\n                <TableCell>{member.corporateName || '---'}</TableCell>\n                <TableCell>{effectivityDate || '---'}</TableCell>\n                <TableCell>{terminationDate}</TableCell>\n                <TableCell>{member.status || '---'}</TableCell>\n            </TableRow>\n        );\n    }\n\n    renderHeaderColumn(attrName: string, headerText: string, width?: string): JSX.Element {\n        return (\n            <TableCell style={{minWidth: width ? width : '150px'}}>\n                <span className='header-2'>{headerText}</span>\n                <div style={{float: 'right'}}>\n                    <IconButton \n                        icon={faSort} \n                        onClick={() => {\n                            // this.sortFacilities(attrName, true);\n                        }} />\n                </div>\n                <InputField\n                    value={this.state[attrName]}\n                    onChange={(value: string) => {\n                        // @ts-ignore\n                        this.setState({[attrName]: value});\n                    }} />\n            </TableCell>\n        );\n    }\n}","import * as React from 'react';\nimport { ClientData, ContractData } from 'Pages/CustomerCarePage/Models';\nimport { TextTab } from 'Pages/CustomerCarePage/Components/TextTab';\nimport { API } from 'Pages/TicketList/API';\nimport { Loading } from 'Pages/CustomerCarePage/Components/Loading';\nimport { Payloads } from 'Pages/CustomerCarePage/Payloads';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { TableRow, TableCell } from '@material-ui/core';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\n\ninterface IProps {\n    client: ClientData;\n}\n\ninterface IStates {\n    selectedTab: number;\n    contracts?: ContractData[];\n    proposals?: ContractData[];\n}\n\nexport class HistorySection extends React.Component<IProps, IStates> {\n\n    tabList = [\n        { value: 1, label: 'Contracts' },\n        { value: 2, label: 'Proposals' }\n    ];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            selectedTab: 1\n        };\n    }\n\n    componentDidMount() {\n       this.loadData('contracts');\n    }\n\n    componentWillUpdate(_props: IProps, state: IStates) {\n        if (this.state.selectedTab != state.selectedTab) {\n            this.loadData(state.selectedTab === 1 ? 'contracts' : 'proposals');\n        }\n    }\n\n    loadData = (type: 'contracts' | 'proposals') => {\n        API.get(`clients/${this.props.client.id}/type/${type}`,\n            (response) => {\n                console.log(response);\n                if (type === 'contracts') {\n                    this.setState({contracts: Payloads.getContractData(response.data)});\n                } else if (type === 'proposals') {\n                    this.setState({proposals: Payloads.getContractData(response.data)});\n                }\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    render() : JSX.Element {\n\n        return (\n            <div>\n                <div>\n                    <TextTab\n                        tabList={this.tabList}\n                        selectedTab={this.state.selectedTab}\n                        tabStyle={(_index: number) => {\n                            return { padding: '0 1rem' };\n                        }}\n                        tabLabel={(index: number) => {\n                            return (\n                                <div style={{width: '100%'}}>\n                                    <div className='header-3' style={{margin: '6px 0'}}>\n                                        {this.tabList[index].label}\n                                    </div>\n                                </div>\n                            );\n                        }}\n                        setSelectedTab={(value: number) => {\n                            this.setState({selectedTab: value});\n                        }} />\n                </div>\n                <div className='sub-section' style={{overflowX: 'auto'}}>\n                    {this.state.selectedTab === 1 && this.state.contracts ? (\n                        this.renderContractTable(this.state.contracts)\n                    ) : this.state.selectedTab === 2 && this.state.proposals ? (\n                        this.renderContractTable(this.state.proposals)\n                    ) : (\n                        <Loading height='10rem' />\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    renderContractTable(data: ContractData[]): JSX.Element {\n        return (\n            <CustomTable\n                rows={data}\n                renderHeader={() => this.renderTableHeader()}\n                renderRow={(rowData: any, index: number) => \n                    this.renderTableRow(rowData, index)} />\n        )\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            {this.renderHeaderColumn('fiterName', 'Contract')}\n            {this.renderHeaderColumn('filterBenefits', 'Contract No.')}\n            {this.renderHeaderColumn('filterPrincipals', 'Contract Effectivity Date', '200px')}\n            {this.renderHeaderColumn('filterDependents', 'Contract Type')}\n            {this.renderHeaderColumn('filterDateCreated', 'Version')}\n            {this.renderHeaderColumn('filterDateUpdated', 'Modified Date')}\n            {this.renderHeaderColumn('filterVersion', 'Status')}\n            </>\n        );\n    }\n\n    renderTableRow(contract: ContractData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        const startDate = contract.startDate ? GlobalFunction.toShortDateString(contract.startDate) : '---';\n        const updateDate = contract.updateDate ? GlobalFunction.toShortDateString(contract.updateDate) : '---';\n\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{contract.name}</TableCell>\n                <TableCell>{contract.contractNo || '---'}</TableCell>\n                <TableCell>{startDate}</TableCell>\n                <TableCell>{contract.type || '---'}</TableCell>\n                <TableCell>{contract.version || '---'}</TableCell>\n                <TableCell>{updateDate}</TableCell>\n                <TableCell>{contract.status || '---'}</TableCell>\n            </TableRow>\n        );\n    }\n\n    renderHeaderColumn(attrName: string, headerText: string, width?: string): JSX.Element {\n        return (\n            <TableCell style={{minWidth: width ? width : '150px'}}>\n                <span className='header-2'>{headerText}</span>\n                <div style={{float: 'right'}}>\n                    <IconButton \n                        icon={faSort} \n                        onClick={() => {\n                            // this.sortFacilities(attrName, true);\n                        }} />\n                </div>\n                <InputField\n                    value={this.state[attrName]}\n                    onChange={(value: string) => {\n                        // @ts-ignore\n                        this.setState({[attrName]: value});\n                    }} />\n            </TableCell>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid, TableRow, TableCell } from '@material-ui/core';\nimport { ClientData, DocumentData } from 'Pages/CustomerCarePage/Models';\nimport { TextTab } from 'Pages/CustomerCarePage/Components/TextTab';\nimport { Loading } from 'Pages/CustomerCarePage/Components/Loading';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { Payloads } from 'Pages/CustomerCarePage/Payloads';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\n\ninterface IProps {\n    client: ClientData;\n}\n\ninterface IStates {\n    selectedTab: number;\n    documents?: DocumentData[];\n}\n\nexport class DocumentsSection extends React.Component<IProps, IStates> {\n\n    tabList = [\n        { value: 1, label: 'Signed Contracts' },\n        { value: 2, label: 'Signed Proposals' },\n        { value: 3, label: 'Masterlists' },\n        { value: 4, label: 'APD Endorsements' },\n        { value: 5, label: 'Corporate Guarantees' },\n        { value: 6, label: 'Letter and Requests' }\n    ];\n\n    signedContractsHeader = [\n        { label: 'Document Name',   state: 'name' },\n        { label: 'Version',         state: 'version' },\n        { label: 'Date Signed',     state: 'signedDate' },\n        { label: 'Files',           state: 'files' },\n        { label: 'Uploaded Date',   state: 'uploadDate' },\n        { label: 'Uploaded By',     state: 'uploader' },\n        { label: 'Action',          state: 'action' }\n    ];\n\n    signedProposalsHeader = [\n        { label: 'Proposal Number', state: 'proposalNo' },\n        { label: 'Version',         state: 'version' },\n        { label: 'Date Signed',     state: 'signedDate' },\n        { label: 'Files',           state: 'files' },\n        { label: 'Uploaded Date',   state: 'uploadDate' },\n        { label: 'Uploaded By',     state: 'uploader' },\n        { label: 'Action',          state: 'action' }\n    ];\n\n    masterlistsHeader = [\n        { label: 'Document Name',   state: 'name' },\n        { label: 'Batch Name',      state: 'batchName' },\n        { label: 'Files',           state: 'files' },\n        { label: 'Uploaded Date',   state: 'uploadDate' },\n        { label: 'Uploaded By',     state: 'uploader' },\n        { label: 'Action',          state: 'action' }\n    ];\n\n    apdEndorsementsHeader = [\n        { label: 'Document Name',   state: 'name' },\n        { label: 'Type',            state: 'type' },\n        { label: 'Date Endorsed',   state: 'endorseDate' },\n        { label: 'Files',           state: 'files' },\n        { label: 'Uploaded Date',   state: 'uploadDate' },\n        { label: 'Uploaded By',     state: 'uploader' },\n        { label: 'Action',          state: 'action' }\n    ];\n\n    corporateGuaranteesHeader = [\n        { label: 'Document Name',   state: 'name' },\n        { label: 'Sender',          state: 'sender' },\n        { label: 'Files',           state: 'files' },\n        { label: 'Uploaded Date',   state: 'uploadDate' },\n        { label: 'Uploaded By',     state: 'uploader' },\n        { label: 'Action',          state: 'action' }\n    ];\n\n    lettersAndRequestsHeader = [\n        { label: 'Document Name',   state: 'name' },\n        { label: 'Files',           state: 'files' },\n        { label: 'Uploaded Date',   state: 'uploadDate' },\n        { label: 'Uploaded By',     state: 'uploader' },\n        { label: 'Action',          state: 'action' }\n    ];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            selectedTab: 1\n        };\n    }\n\n    componentDidMount() {\n        this.loadData('signed_contracts');\n    }\n\n    componentWillUpdate(_props: IProps, state: IStates) {\n        if (this.state.selectedTab != state.selectedTab) {\n            if (state.selectedTab === 1) {\n                this.loadData('signed_contracts');\n            } else if (state.selectedTab === 2) {\n                this.loadData('signed_proposals');\n            } else if (state.selectedTab === 3) {\n                this.loadData('masterlists');\n            } else if (state.selectedTab === 4) {\n                this.loadData('apd_endorsements');\n            } else if (state.selectedTab === 5) {\n                this.loadData('corporate_guarantees');\n            } else if (state.selectedTab === 6) {\n                this.loadData('letters_and_requests');\n            }\n        }\n    }\n\n    loadData = (type: 'signed_contracts' | \n                      'signed_proposals' | \n                      'masterlists' | \n                      'apd_endorsements' | \n                      'corporate_guarantees' | \n                      'letters_and_requests') => {\n        const filter = {\n            where: {\n                section: type,\n                client_id: this.props.client.id\n            }\n        };\n\n        API.get(`documents?filter=${JSON.stringify(filter)}`,\n            (response) => {\n                console.log(response);\n                this.setState({documents: Payloads.getDocuments(response.documents)});\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    render() : JSX.Element {\n\n        return (\n            <Grid container spacing={2}>\n                <div>\n                    <TextTab\n                        tabList={this.tabList}\n                        selectedTab={this.state.selectedTab}\n                        tabStyle={(_index: number) => {\n                            return { padding: '0 1rem' };\n                        }}\n                        tabLabel={(index: number) => {\n                            return (\n                                <div style={{width: '100%'}}>\n                                    <div className='header-3' style={{margin: '6px 0'}}>\n                                        {this.tabList[index].label}\n                                    </div>\n                                </div>\n                            );\n                        }}\n                        setSelectedTab={(value: number) => {\n                            this.setState({selectedTab: value});\n                        }} />\n                </div>\n                <div className='sub-section' style={{overflowX: 'auto'}}>\n                    {this.state.documents ? (\n                        this.state.selectedTab === 1 ? (\n                            <CustomTable\n                                rows={this.state.documents}\n                                renderHeader={() => {\n                                    return this.renderTableHeader(this.signedContractsHeader);\n                                }}\n                                renderRow={(rowData: any, index: number) => {\n                                    return this.renderTableRow(rowData, index, this.signedContractsHeader);\n                                }} />\n                        ) : this.state.selectedTab === 2 ? (\n                            <CustomTable\n                                rows={this.state.documents}\n                                renderHeader={() => {\n                                    return this.renderTableHeader(this.signedProposalsHeader);\n                                }}\n                                renderRow={(rowData: any, index: number) => {\n                                    return this.renderTableRow(rowData, index, this.signedProposalsHeader);\n                                }} />\n                        ) : this.state.selectedTab === 3 ? (\n                            <CustomTable\n                                rows={this.state.documents}\n                                renderHeader={() => {\n                                    return this.renderTableHeader(this.masterlistsHeader);\n                                }}\n                                renderRow={(rowData: any, index: number) => {\n                                    return this.renderTableRow(rowData, index, this.masterlistsHeader);\n                                }} />\n                        ) : this.state.selectedTab === 4 ? (\n                            <CustomTable\n                                rows={this.state.documents}\n                                renderHeader={() => {\n                                    return this.renderTableHeader(this.apdEndorsementsHeader);\n                                }}\n                                renderRow={(rowData: any, index: number) => {\n                                    return this.renderTableRow(rowData, index, this.apdEndorsementsHeader);\n                                }} />\n                        ) : this.state.selectedTab === 5 ? (\n                            <CustomTable\n                                rows={this.state.documents}\n                                renderHeader={() => {\n                                    return this.renderTableHeader(this.corporateGuaranteesHeader);\n                                }}\n                                renderRow={(rowData: any, index: number) => {\n                                    return this.renderTableRow(rowData, index, this.corporateGuaranteesHeader);\n                                }} />\n                        ) : this.state.selectedTab === 6 ? (\n                            <CustomTable\n                                rows={this.state.documents}\n                                renderHeader={() => {\n                                    return this.renderTableHeader(this.lettersAndRequestsHeader);\n                                }}\n                                renderRow={(rowData: any, index: number) => {\n                                    return this.renderTableRow(rowData, index, this.lettersAndRequestsHeader);\n                                }} />\n                        ) : null\n                    ) : (\n                        <Loading height='10rem' />\n                    )}\n                </div>\n            </Grid>\n        );\n    }\n\n    renderTableHeader(headers: { label: string, state: string }[]): JSX.Element {\n        return (\n            <>\n            {headers.map(header => {\n                return this.renderHeaderColumn(header.state, header.label);\n            })}\n            </>\n        );\n    }\n\n    renderTableRow(document: DocumentData, index: number, headers: { label: string, state: string }[]): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        const signedDate = document.signedDate ? GlobalFunction.toShortDateString(document.signedDate) : '---';\n        const endorseDate = document.endorseDate ? GlobalFunction.toShortDateString(document.endorseDate) : '---';\n        const uploadDate = GlobalFunction.toShortDateString(document.uploadDate);\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                {this.renderTableCell(document.name || '---',       'name', headers)}\n                {this.renderTableCell(document.proposalNo || '---', 'proposalNo', headers)}\n                {this.renderTableCell(document.version || '---',    'version', headers)}\n                {this.renderTableCell(document.batchName || '---',  'batchName', headers)}\n                {this.renderTableCell(document.type || '---',       'type', headers)}\n                {this.renderTableCell(document.sender || '---',     'sender', headers)}\n                {this.renderTableCell(signedDate,                   'signedDate', headers)}\n                {this.renderTableCell(endorseDate,                  'endorseDate', headers)}\n                {this.renderTableCell('---',                        'files', headers)}\n                {this.renderTableCell(uploadDate,                   'uploadDate', headers)}\n                {this.renderTableCell(document.uploader,            'uploader', headers)}\n                {this.renderTableCell('---',                        'action', headers)}\n            </TableRow>\n        );\n    }\n\n    renderTableCell(value: string, conditionState: string, headers: { label: string, state: string }[]): JSX.Element | null {\n        return (\n            headers.find(header => header.state === conditionState) ? (\n                <TableCell>{value}</TableCell>\n            ) : null\n        )\n    }\n\n    renderHeaderColumn(attrName: string, headerText: string, width?: string): JSX.Element {\n        return (\n            <TableCell style={{minWidth: width ? width : '150px'}}>\n                <span className='header-2'>{headerText}</span>\n                <div style={{float: 'right'}}>\n                    <IconButton \n                        icon={faSort} \n                        onClick={() => {\n                            // this.sortFacilities(attrName, true);\n                        }} />\n                </div>\n                <InputField\n                    value={this.state[attrName]}\n                    onChange={(value: string) => {\n                        // @ts-ignore\n                        this.setState({[attrName]: value});\n                    }} />\n            </TableCell>\n        );\n    }\n}","import * as React from 'react';\nimport { TableCell, TableRow } from '@material-ui/core';\nimport { ClientData, LogData } from 'Pages/CustomerCarePage/Models';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { Loading } from 'Pages/CustomerCarePage/Components/Loading';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { Payloads } from 'Pages/CustomerCarePage/Payloads';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\n\ninterface IProps {\n    client: ClientData;\n}\n\ninterface IStates {\n    logs?: LogData[];\n}\n\nexport class AuditLogsSection extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    componentDidMount() {\n        this.getAuditLogs();\n    }\n\n    getAuditLogs = () => {\n        const filter = {\n            where: {\n                client_id: this.props.client.id\n            }\n        };\n        API.get(`audit-logs?filter=${JSON.stringify(filter)}`,\n            (response) => {\n                console.log(response);\n                this.setState({logs: Payloads.getAuditLogs(response.audit_logs)});\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    render() : JSX.Element {\n\n        return (\n            <div className='sub-section'>\n                {this.state.logs ? (\n                    <div style={{overflowX: 'auto'}}>\n                        <CustomTable\n                            rows={this.state.logs}\n                            renderHeader={() => this.renderTableHeader()}\n                            rowsPerPageOptions={[10, 25, 50]}\n                            renderRow={(rowData: any, index: number) => \n                                this.renderTableRow(rowData, index)} />\n                    </div>\n                ) : (\n                    <Loading height='10rem' />\n                )}\n               \n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            {this.renderHeaderColumn('fiterName', 'Activity ID')}\n            {this.renderHeaderColumn('filterBenefits', 'Activity')}\n            {this.renderHeaderColumn('filterPrincipals', 'User')}\n            {this.renderHeaderColumn('filterDependents', 'Date')}\n            {this.renderHeaderColumn('filterDateCreated', 'Time')}\n            </>\n        );\n    }\n\n    renderTableRow(log: LogData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{log.activityId}</TableCell>\n                <TableCell>{log.name}</TableCell>\n                <TableCell>{log.user}</TableCell>\n                <TableCell>{log.date}</TableCell>\n                <TableCell>{log.time}</TableCell>\n            </TableRow>\n        );\n    }\n\n    renderHeaderColumn(attrName: string, headerText: string, width?: string): JSX.Element {\n        return (\n            <TableCell style={{minWidth: width ? width : '150px'}}>\n                <span className='header-2'>{headerText}</span>\n                <div style={{float: 'right'}}>\n                    <IconButton \n                        icon={faSort} \n                        onClick={() => {\n                            // this.sortFacilities(attrName, true);\n                        }} />\n                </div>\n                <InputField\n                    value={this.state[attrName]}\n                    onChange={(value: string) => {\n                        // @ts-ignore\n                        this.setState({[attrName]: value});\n                    }} />\n            </TableCell>\n        );\n    }\n}","import * as React from 'react';\nimport { TableCell, TableRow } from '@material-ui/core';\nimport { ClientData, MemberFieldData } from 'Pages/CustomerCarePage/Models';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { TextTab } from 'Pages/CustomerCarePage/Components/TextTab';\n\ninterface IProps {\n    client: ClientData;\n}\n\ninterface IStates {\n    selectedTab: number;\n}\n\nexport class MemberFieldsSection extends React.Component<IProps, IStates> {\n\n    tabList = [\n        { value: 1, label: 'Client-required' },\n        { value: 2, label: 'Mandatory' }\n    ];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            selectedTab: 1\n        };\n    }\n\n    filterByType = (fieldtype: string, memberFields: MemberFieldData[]) => {\n        return memberFields.filter(field => field.type === fieldtype);\n    }\n\n    render() : JSX.Element {\n        const memberFields = this.props.client.memberFields;\n        const selectedTab = this.state.selectedTab;\n\n        return (\n            <div>\n                <div>\n                    <TextTab\n                        tabList={this.tabList}\n                        selectedTab={this.state.selectedTab}\n                        tabStyle={(_index: number) => {\n                            return { padding: '0 1rem' };\n                        }}\n                        tabLabel={(index: number) => {\n                            return (\n                                <div style={{width: '100%'}}>\n                                    <div className='header-3' style={{margin: '6px 0'}}>\n                                        {this.tabList[index].label}\n                                    </div>\n                                </div>\n                            );\n                        }}\n                        setSelectedTab={(value: number) => {\n                            this.setState({selectedTab: value});\n                        }} />\n                </div>\n                <div className='sub-section'>\n                    {memberFields ? (\n                        <CustomTable\n                            className='custom-table'\n                            rows={this.filterByType(this.tabList[selectedTab - 1].label, memberFields)}\n                            renderHeader={() => this.renderTableHeader()}\n                            renderRow={(rowData: MemberFieldData, index: number) => \n                                this.renderTableRow(rowData, index)} />\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        \n        return (\n            <>\n            <TableCell>Required?</TableCell>\n            <TableCell>Field</TableCell>\n            <TableCell>Input Type</TableCell>\n            <TableCell>Data Type</TableCell>\n            </>\n        );\n    }\n\n    renderTableRow(field: MemberFieldData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{field.isRequired ? 'Yes' : 'No'}</TableCell>\n                <TableCell>{field.fieldName}</TableCell>\n                <TableCell>{field.inputType}</TableCell>\n                <TableCell>{field.dataType}</TableCell>\n            </TableRow>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { ClientData } from 'Pages/CustomerCarePage/Models';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { Payloads } from 'Pages/CustomerCarePage/Payloads';\nimport { BasicInformationSection } from './BasicInformationSection';\nimport { Loading } from 'Pages/CustomerCarePage/Components/Loading';\nimport { ContactsAndBranchesSection } from './ContactsAndBranchesSection';\nimport { ServicingInstructionsSection } from './ServicingInstructionsSection/ServicingInstructionsSection';\nimport { HMOInformationSection } from './HMOInformationSection';\nimport { MembersSection } from './MembersSection';\nimport { HistorySection } from './HistorySection';\nimport { DocumentsSection } from './DocumentsSection';\nimport { AuditLogsSection } from './AuditLogsSection';\nimport { MemberFieldsSection } from './MemberFieldsSection';\nimport { TextTab } from 'Pages/CustomerCarePage/Components/TextTab';\n\ninterface IProps {\n    history: any;\n    clientId: string;\n}\n\ninterface IStates {\n    client?: ClientData;\n    selectedTab: number;\n}\n\nexport class ClientProfileSection extends React.Component<IProps, IStates> {\n\n    informationTabs = [\n        { value: 1, label: 'Basic Information' },\n        { value: 2, label: 'Contracts/Branches' },\n        { value: 3, label: 'Member Fields' },\n        { value: 4, label: 'Servicing Instructions' }\n    ];\n\n    accountTabs = [\n        { value: 5, label: 'HMO Information' },\n        { value: 6, label: 'Members' },\n        { value: 7, label: 'History' },\n        { value: 8, label: 'Documents' }\n    ];\n\n    activitiesTabs = [\n        { value: 9, label: 'Audit Logs' }\n    ];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            selectedTab: 1\n        };\n    }\n\n    componentDidMount() {\n        API.get(`clients/account/hmo-info/${this.props.clientId}`,\n            (response) => {\n                console.log(response);\n                this.setState({client: \n                    Payloads.getClientData(\n                        response.client, \n                        response.benefit_plan_tree,\n                        response.plan_types)});\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    render() : JSX.Element {\n        return (\n            <div className='section' style={{width: '100%'}}>\n                <div style={{paddingTop: '2.5rem'}} />\n                <Grid container className='sub-section'>\n                    {this.renderSideBar()}\n                    {this.renderMainContent()}\n                </Grid>\n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderSideBar(): JSX.Element {\n        const rightBorderStyle = {\n            borderRight: '#3C394A22 solid 1px'\n        }\n        return (\n            <Grid item xs={2} style={rightBorderStyle} spacing={5}>\n                {this.renderSideTabs('INFORMATION', this.informationTabs)}\n                {this.renderSideTabs('ACCOUNT', this.accountTabs)}\n                {this.renderSideTabs('ACTIVITIES', this.activitiesTabs)}\n            </Grid>\n        );\n    }\n\n    renderSideTabs(label: string, tabList: any[]): JSX.Element {\n        return (\n            <div className='sub-section'>\n                <div className='light-text'>{label}</div>\n                <TextTab\n                    tabList={tabList}\n                    selectedTab={this.state.selectedTab}\n                    orientation='vertical'\n                    tabLabel={(index: number) => {\n                        return (\n                            <div style={{width: '100%'}}>\n                                <div className='header-3' style={{margin: '6px 0'}}>\n                                    {tabList[index].label}\n                                </div>\n                            </div>\n                        );\n                    }}\n                    setSelectedTab={(value: number) => {\n                        this.setState({selectedTab: value});\n                    }} />\n            </div>\n        );\n    }\n\n    renderMainContent(): JSX.Element {\n        return (\n            <Grid item xs={10} className='small-section'>\n                {this.state.client ? (\n                    this.state.selectedTab == 1 ? (\n                        <BasicInformationSection client={this.state.client} />\n                    ) : this.state.selectedTab == 2 ? (\n                        <ContactsAndBranchesSection client={this.state.client} />\n                    ) : this.state.selectedTab == 3 ? (\n                        <MemberFieldsSection client={this.state.client} />\n                    ) : this.state.selectedTab == 4 ? (\n                        <ServicingInstructionsSection client={this.state.client} />\n                    ) : this.state.selectedTab == 5 ? (\n                        <HMOInformationSection client={this.state.client} history={this.props.history} />\n                    ) : this.state.selectedTab == 6 ? (\n                        <MembersSection client={this.state.client} />\n                    ) : this.state.selectedTab == 7 ? (\n                        <HistorySection client={this.state.client} />\n                    ) : this.state.selectedTab == 8 ? (\n                        <DocumentsSection client={this.state.client} />\n                    ) : this.state.selectedTab == 9 ? (\n                        <AuditLogsSection client={this.state.client} />\n                    ) : null\n                ) : (\n                    <Loading height='10rem'/>\n                )}\n                \n            </Grid>\n        );\n    }\n}","export class GlobalFunction {\n\n    static formatNumber(num: number) {\n        return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n      }\n\n\n    static getIntials(text: string) {\n        var initials = '';\n        var wordArray = text.split(' ');\n        for (var i = 0; i < wordArray.length; i++) {\n            initials += wordArray[i].substring(0,1).toUpperCase() + '.';\n        }\n        return initials;\n    }\n\n    static toCommonDateString(date: Date) {\n        if (date) {\n            const monthNames = [\n                \"January\", \"February\", \"March\",\n                \"April\", \"May\", \"June\", \"July\",\n                \"August\", \"September\", \"October\",\n                \"November\", \"December\"\n            ];\n            const day = date.getDate();\n            const monthIndex = date.getMonth();\n            const year = date.getFullYear();\n            return (monthNames[monthIndex] + \" \" + day + \", \" + year);\n        }\n\n        return \"\";\n    }\n\n    static getAge(birthDate: any) {\n        if (birthDate) {\n            var ageInMillis = Date.now() - birthDate;\n            return Math.abs(new Date(ageInMillis).getUTCFullYear() - 1970);\n        }\n\n        return null;\n    }\n\n    static getRandomValue() {\n        return Math.random().toString(36).substr(2, 6);\n    }\n}","import * as React from 'react';\nimport {\n  Grid,\n  Typography,\n  Paper,\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from '@material-ui/core/';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\n\nconst hmoitemStyles = makeStyles({\n  hmoname: {\n    fontSize: '11px',\n    fontWeight: 200,\n    color: 'rgba(39, 46, 76, 0.5)',\n    textTransform: 'uppercase',\n    paddingRight: 16,\n  },\n  hmovalue: {\n    fontSize: '0.75rem',\n    fontWeight: 600,\n    color: 'rgb(39, 46, 76)',\n  },\n  hmovaluelink: {\n    fontSize: '0.75rem',\n    fontWeight: 600,\n    color: 'rgb(39, 46, 76)',\n    textDecoration: 'underline',\n    lineHeight: 1.25,\n  },\n});\n\ninterface HMOItemProps {\n  name?: string;\n  value?: string;\n  link?: string;\n}\n\nconst HMOItem: React.FC<HMOItemProps> = (props: HMOItemProps): JSX.Element => {\n  const classes = hmoitemStyles(props);\n\n  return (\n    <Grid\n      container\n      alignItems=\"center\"\n      style={{ paddingTop: 4, paddingBottom: 4 }}\n    >\n      <Grid item xs={5}>\n        <Typography className={classes.hmoname}>{props.name}</Typography>\n      </Grid>\n      <Grid item xs={7}>\n        {props.link ? (\n          <Link to={props.link} className={classes.hmovaluelink}>\n            {props.value}\n          </Link>\n        ) : (\n          <Typography className={classes.hmovalue}>{props.value}</Typography>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\ninterface HMOInformationProps {\n  memberData?: any;\n  clientData?: any;\n  memberDependents: any[];\n  contractId?: string;\n  contractName?: string;\n  MBL?: string;\n\tABL?: string;\n\tPEC?: string;\n}\n\nconst hmoinfoStyles = makeStyles(theme => ({\n  subtitle: {\n    fontSize: '1.125rem',\n    fontWeight: 600,\n  },\n  hmocheckboxlabel: {\n    fontSize: '0.75rem',\n    color: 'rgb(39, 46, 76)',\n  },\n  hmographsubtitle: {\n    fontSize: '0.75rem',\n    textTransform: 'uppercase',\n    color: 'rgb(39, 46, 76, 0.6)',\n    marginBottom: 16,\n  },\n  hmodependentsbox: {\n    height: 175,\n    borderRadius: 0,\n    overflow: 'auto',\n    boxShadow: '0px 3px 6px #272E4C19',\n    padding: 0,\n  },\n  hmoremarksbox: {\n    height: 175,\n    borderRadius: 8,\n    backgroundColor: '#FFFFFF',\n    overflow: 'hidden',\n    border: '1px solid #272E4C4D',\n  },\n  hmodependentsbox_link: {\n    color: 'rgb(39, 46, 76)',\n  },\n  change_status_link: {\n    color: '#0D5E40',\n    cursor: 'pointer',\n    fontSize: '13px',\n    textDecoration: 'underline',\n  },\n  icons: {\n    color: '#0D5E40',\n    cursor: 'pointer',\n    fontSize: '13px',\n  },\n  popper: {\n    top: '4px',\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.9em',\n      width: '3em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '0 1em 1em 1em',\n        borderColor: `transparent transparent ${theme.palette.background.paper} transparent`,\n      },\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.9em',\n      width: '3em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 0 1em',\n        borderColor: `${theme.palette.background.paper} transparent transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.9em',\n      height: '3em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 1em 0',\n        borderColor: `transparent ${theme.palette.background.paper} transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.9em',\n      height: '3em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 0 1em 1em',\n        borderColor: `transparent transparent transparent ${theme.palette.background.paper}`,\n      },\n    },\n  },\n  arrow: {\n    position: 'absolute',\n    fontSize: 7,\n    width: '3em',\n    height: '3em',\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n    },\n  },\n  paper: {\n    padding: '15px',\n    width: 110,\n  },\n  status: {\n    padding: '5px',\n    cursor: 'pointer',\n  },\n}));\n\nexport const HMOInformation: React.FC<HMOInformationProps> = (\n  props: HMOInformationProps,\n): JSX.Element => {\n  const classes = hmoinfoStyles(props);\n  const { memberData, memberDependents, clientData, contractId, contractName , MBL, ABL, PEC} = props;\n  \n  function isValidDate(date: string) {\n    const d = new Date(date);\n    return d instanceof Date && !isNaN(d.getTime());\n  }\n  \n  return (\n    <Grid container>\n      <Grid item xs={12} md={6} style={{ paddingTop: 0, paddingBottom: 0 }}>\n        <HMOItem name=\"Member Account No.\" value=\"-\" />\n        <HMOItem\n          name=\"Member ID\"\n          value={memberData && memberData.member_id ? memberData.member_id : '-'}\n        />\n        <HMOItem\n          name=\"Contract\"\n          value={contractName ? contractName : '-'}\n          link={contractId ? '/membership/member-contract/' + contractId : '#'}\n        />\n        <HMOItem\n          name=\"Effectivity Date\"\n          value={\n            memberData && isValidDate(memberData.effectivity_date)\n              ? moment(memberData.effectivity_date).format('MMMM D, YYYY')\n              : '-'\n          }\n        />\n        <HMOItem name=\"Contract Renewal Date\" value=\"-\" />\n        <HMOItem\n          name=\"Contract Expiration Date\"\n          value={\n            memberData && isValidDate(memberData.termination_date)\n              ? moment(memberData.termination_date).format('MMMM D, YYYY')\n              : '-'\n          }\n        />\n        <HMOItem\n          name=\"VIP Member\"\n          value={memberData ? (memberData.is_vip ? 'Yes' : 'No') : '-'}\n        />\n      </Grid>\n      <Grid item xs={12} md={6} style={{ paddingTop: 0, paddingBottom: 0 }}>\n        <HMOItem\n          name=\"Type\"\n          value={memberData && memberData.member_type ? memberData.member_type : '-'}\n        />\n        <HMOItem\n          name=\"Plan Type\"\n          value={memberData && memberData.plan_type ? memberData.plan_type : '-'}\n        />\n        <HMOItem name=\"MBL\" value={MBL ? MBL : '-'} />\n        <HMOItem name=\"ABL\" value={ABL ? ABL : '-'} />\n        <HMOItem name=\"PEC\" value={PEC ? PEC : '-'} />\n        <HMOItem\n          name=\"Philhealth Rider\"\n          value={memberData ? (memberData.is_philhealth_rider ? 'Yes' : 'No') : '-'}\n        />\n        <HMOItem name=\"Batch Process No.\" value=\"-\" />\n      </Grid>\n      <Grid item xs={12} md={6} style={{ paddingTop: 0, paddingBottom: 0 }}>\n        <HMOItem\n          name=\"Date of Birth\"\n          value={\n            memberData && isValidDate(memberData.date_of_birth)\n              ? moment(memberData.date_of_birth).format('MMMM D, YYYY')\n              : '-'\n          }\n        />\n        <HMOItem\n          name=\"Age\"\n          value={\n            memberData && isValidDate(memberData.date_of_birth)\n              ? '' + moment().diff(memberData.date_of_birth, 'years', false)\n              : '-'\n          }\n        />\n        <HMOItem name=\"Gender\" value={memberData ? memberData.gender : '-'} />\n      </Grid>\n      <Grid item xs={12} md={6} style={{ paddingTop: 0, paddingBottom: 0 }}>\n        <HMOItem name=\"Civil Status\" value={memberData ? memberData.civil_status : '-'} />\n        <HMOItem\n          name=\"Title/Prefix\"\n          value={memberData && memberData.title ? memberData.title : '-'}\n        />\n        <HMOItem\n          name=\"Suffix\"\n          value={memberData && memberData.suffix ? memberData.suffix : '-'}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={6}\n        style={{ paddingTop: 48, paddingBottom: 48, paddingRight: 12 }}\n      >\n        <Typography className={classes.hmographsubtitle}>\n          Enrolled Dependents\n        </Typography>\n        <Paper className={classes.hmodependentsbox}>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Dependent Name</TableCell>\n                <TableCell>Relationship</TableCell>\n                <TableCell>Status</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {memberDependents && memberDependents.length > 0 ? (\n                memberDependents.map((row, index) => (\n                  <TableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Link to={'#'} className={classes.hmodependentsbox_link}>\n                        {row['first_name'] +\n                          ' ' +\n                          (row['middle_name']\n                            ? row['middle_name'].charAt(0) + '. '\n                            : '') +\n                          row['last_name']}\n                      </Link>\n                    </TableCell>\n                    <TableCell>{row['relationship_to_principal']}</TableCell>\n                    <TableCell>{row['member_status']}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textAlign: 'center' }}\n                    colSpan={3}\n                  >\n                    No enrolled dependents\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={6} style={{ paddingTop: 48, paddingBottom: 48 }}>\n        <Typography className={classes.hmographsubtitle}>Remarks</Typography>\n        <Box className={classes.hmoremarksbox}></Box>\n      </Grid>\n      <Grid item xs={12} md={6} style={{ paddingTop: 0, paddingBottom: 0 }}>\n        <HMOItem name=\"Corporate Acct. Name\" value={clientData && clientData['registered_name'] ? clientData['registered_name'] : '-'} />\n        <HMOItem name=\"Card Name\" value={clientData && clientData['name_on_card'] ? clientData['name_on_card'] : '-'} />\n        <HMOItem name=\"Cost Center\" value={memberData && memberData.cost_center ? memberData.cost_center : '-'} />\n        <HMOItem name=\"Financial Code\" value={memberData && memberData.financial_code ? memberData.financial_code : '-'} />\n        <HMOItem name=\"Site Assigned\" value={memberData && memberData.site ? memberData.site : '-'} />\n        <HMOItem name=\"Floor\" value={memberData && memberData.floor ? memberData.floor : '-'} />\n        <HMOItem name=\"Site Address\" value={memberData && memberData.site_address ? memberData.site_address : '-'} />\n      </Grid>\n      <Grid item xs={12} md={6} style={{ paddingTop: 0, paddingBottom: 0 }}>\n        <HMOItem name=\"Designation\" value={memberData && memberData.designation ? memberData.designation : '-'} />\n        <HMOItem name=\"Job Grade/Level\" value={memberData && memberData.job_lvl ? memberData.job_lvl : '-'} />\n        <HMOItem name=\"Supervisor\" value={memberData && memberData.supervisor ? memberData.supervisor : '-'} />\n        <HMOItem\n          name=\"Date of Hire\"\n          value={\n            memberData && isValidDate(memberData.hire_date)\n              ? moment(memberData.hire_date).format('MMMM D, YYYY')\n              : '-'\n          }\n        />\n        <HMOItem name=\"Expat\" value=\"-\" />\n      </Grid>\n    </Grid>\n  );\n};\n\nHMOInformation.defaultProps = {\n  memberData: {},\n  memberDependents: [],\n  clientData: {},\n  contractId: '',\n  contractName: '',\n  MBL: '',\n\tABL: '',\n\tPEC: '',\n};\n","//#region Global Imports\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Table,\n  TableSelection,\n  TableHeaderRow,\n  TableFilterRow,\n  Toolbar,\n  SearchPanel,\n  PagingPanel,\n  TableBandHeader,\n} from '@devexpress/dx-react-grid-material-ui';\nimport { Paper } from '@material-ui/core/';\nimport {\n  PagingState,\n  IntegratedPaging,\n  SelectionState,\n  IntegratedSelection,\n  FilteringState,\n  IntegratedFiltering,\n  SortingState,\n  IntegratedSorting,\n  SearchState,\n  DataTypeProvider,\n} from '@devexpress/dx-react-grid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSearch,\n  faCheckSquare,\n  faSort,\n  faSortUp,\n  faSortDown,\n  faExclamationCircle,\n  faFileUpload,\n} from '@fortawesome/free-solid-svg-icons';\nimport { makeStyles } from '@material-ui/styles';\nimport * as MaterialUI from '@material-ui/core';\nimport moment from 'moment';\n//import { Components } from '@hims/core';\n//#endregion Global Imports\n\nlet radioSelected = false;\nlet selectedValue = '';\nlet clickCell = false;\nlet clickValue = {};\n\nconst cellSelectStyles = makeStyles({\n  select: {\n    backgroundColor: 'transparent',\n  },\n});\n\nconst textFieldStyles = makeStyles({\n  root: {\n    '& div.MuiInputBase-root': {\n      backgroundColor: 'transparent',\n    },\n  },\n});\n\nconst checkboxStyles = makeStyles({\n  root: {\n    '&.Mui-checked': {\n      color: '#3AB77D',\n    },\n  },\n});\n\nconst Select = ({ id, value, items }: any) => {\n  const cellSelectClasses = cellSelectStyles();\n  return (\n    <MaterialUI.Select\n      id={id}\n      classes={cellSelectClasses}\n      value={value}\n      style={{ width: '100%', backgroundColor: 'transparent' }}\n      renderValue={(selected: any) => {\n        if (selected !== null) {\n          const value: any = items.find((item: any) => {\n            return item.value === selected;\n          });\n          if (value) {\n            return value.name;\n          } else {\n            return '—';\n          }\n        }\n        return '—';\n      }}\n    >\n      {items.map((item: any) => (\n        <MaterialUI.MenuItem key={item.value} value={item.value}>\n          {item.name}\n        </MaterialUI.MenuItem>\n      ))}\n    </MaterialUI.Select>\n  );\n};\n\nconst TableFilterCell = ({\n  filter,\n  onFilter,\n  filteringEnabled,\n  classes,\n}: any) => {\n  if (filteringEnabled) {\n    return (\n      <MaterialUI.TableCell\n        style={{ padding: '0px 10px 8px 10px' }}\n        classes={classes}\n      >\n        <MaterialUI.OutlinedInput\n          classes={classes}\n          style={{ width: '100%' }}\n          value={filter ? filter.value : ''}\n          labelWidth={0}\n          onChange={e =>\n            onFilter(e.target.value ? { value: e.target.value } : null)\n          }\n          placeholder=\"\"\n        />\n      </MaterialUI.TableCell>\n    );\n  } else {\n    // return null;\n    return (\n      <MaterialUI.TableCell\n        style={{ padding: '0px 10px 8px 10px' }}\n        classes={classes}\n      ></MaterialUI.TableCell>\n    );\n  }\n};\n\nconst TableRadio = ({\n  style,\n  selected,\n  onToggle,\n  classes,\n  ...restProps\n}: any) => {\n  return (\n    <MaterialUI.TableCell\n      padding=\"checkbox\"\n      style={style}\n      classes={classes}\n      {...restProps}\n    >\n      <MaterialUI.Radio\n        classes={classes}\n        checked={selected}\n        onClick={e => {\n          e.stopPropagation();\n          onToggle();\n        }}\n      />\n    </MaterialUI.TableCell>\n  );\n};\n\nconst TableCheckBox = ({\n  style,\n  selected,\n  onToggle,\n  classes,\n  ...restProps\n}: any) => {\n  return (\n    <MaterialUI.TableCell\n      padding=\"checkbox\"\n      style={style}\n      classes={classes}\n      {...restProps}\n    >\n      <MaterialUI.Checkbox\n        icon={<FontAwesomeIcon icon={faCheckSquare} />}\n        checkedIcon={<FontAwesomeIcon icon={faCheckSquare} />}\n        classes={classes}\n        checked={selected}\n        onClick={e => {\n          e.stopPropagation();\n          onToggle();\n        }}\n      />\n    </MaterialUI.TableCell>\n  );\n};\n\nconst TableSearchPanel = ({ value, onValueChange }: any) => {\n  return (\n    <MaterialUI.OutlinedInput\n      value={value ? value : ''}\n      labelWidth={0}\n      onChange={e => onValueChange(e.target.value ? e.target.value : null)}\n      placeholder=\"Search a benefit or benefit category\"\n      fullWidth\n      startAdornment={\n        <MaterialUI.InputAdornment position=\"start\">\n          <FontAwesomeIcon icon={faSearch} />\n        </MaterialUI.InputAdornment>\n      }\n    />\n  );\n};\n\nconst DefaultTableToolbar = ({ children }: any) => {\n  return <MaterialUI.Toolbar disableGutters={true} children={children} />;\n};\n\nconst SortingIcon = ({ direction }: any) =>\n  direction === 'asc' ? (\n    <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortUp} />\n  ) : (\n    <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortDown} />\n  );\n\nconst TableSortLabel = ({ column, onSort, children, direction }: any) => {\n  if (\n    column.sortingEnabled !== undefined &&\n    column.sortingEnabled !== null &&\n    column.sortingEnabled === false\n  ) {\n    return <span>{column.title}</span>;\n  } else {\n    return (\n      <MaterialUI.TableSortLabel hideSortIcon={true} onClick={onSort}>\n        {children}\n        {direction ? (\n          <SortingIcon direction={direction} />\n        ) : (\n          <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSort} />\n        )}\n      </MaterialUI.TableSortLabel>\n    );\n  }\n};\n\nconst EmptyCellFormatter = ({ value }: any) => {\n  if (value === '' || value === undefined || value === null) {\n    return (\n      <FontAwesomeIcon\n        style={{ color: '#FD5451', fontSize: '16px' }}\n        icon={faExclamationCircle}\n      />\n    );\n  } else {\n    return value;\n  }\n};\n\nconst EmptyCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={EmptyCellFormatter} {...props} />\n);\n\nconst RequiredFormatter = ({ row, value }: any) => {\n  if (\n    row['required'] === true &&\n    (value === '' || value === undefined || value === null)\n  ) {\n    return (\n      <FontAwesomeIcon\n        style={{ color: '#FD5451', fontSize: '16px' }}\n        icon={faExclamationCircle}\n      />\n    );\n  } else if (\n    row['required'] === false &&\n    (value === '' || value === undefined || value === null)\n  ) {\n    return 'N/A';\n  } else {\n    return value;\n  }\n};\n\nconst RequiredDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={RequiredFormatter} {...props} />\n);\n\nconst RequiredCheckboxFormatter = ({ column, row, value }: any) => {\n  const classes = checkboxStyles();\n  return (\n    <div>\n      <MaterialUI.FormControlLabel\n        control={\n          <MaterialUI.Checkbox\n            checked={value === true || value === 'true' ? true : false}\n            value={value}\n            style={{ padding: '5px' }}\n            className={classes.root}\n            color=\"primary\"\n            onChange={e => {\n              clickCell = true;\n              clickValue = {\n                value: e.target.checked,\n                name: column['name'],\n                id: row['id'],\n              };\n            }}\n          />\n        }\n        label=\"\"\n      />\n    </div>\n  );\n};\n\nconst RequiredCheckboxDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={RequiredCheckboxFormatter} {...props} />\n);\n\nconst ReadOnlyCheckboxFormatter = ({ value }: any) => {\n  const classes = checkboxStyles();\n  return (\n    <div>\n      <MaterialUI.FormControlLabel\n        control={\n          <MaterialUI.Checkbox\n            checked={value === true || value === 'true' ? true : false}\n            value={value}\n            disabled={true}\n            style={{ padding: '5px' }}\n            className={classes.root}\n            color=\"primary\"\n            onChange={() => {\n            }}\n          />\n        }\n        label=\"\"\n      />\n    </div>\n  );\n};\n\nconst ReadOnlyCheckboxDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={ReadOnlyCheckboxFormatter} {...props} />\n);\n\nconst UploadFileFormatter = ({ column, row }: any) => {\n  const id: string = column['name'] + '_' + row['id'];\n  return (\n    <div\n      id={id}\n      onClick={e => {\n        // e.stopPropagation();\n        console.log('e>', e);\n      }}\n    >\n      <MaterialUI.Typography color=\"textPrimary\" style={{ paddingTop: '5px' }}>\n        <span>\n          <span style={{ paddingRight: '10px', fontSize: '15px' }}>\n            <FontAwesomeIcon icon={faFileUpload} style={{ color: '#0D5E40' }} />\n          </span>\n          <span style={{ textDecoration: 'underline', color: '#0D5E40' }}>\n            Upload File\n          </span>\n        </span>\n      </MaterialUI.Typography>\n    </div>\n  );\n};\n\nconst UploadFileDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={UploadFileFormatter} {...props} />\n);\n\nconst DisapproveRadioFormatter = ({ value }: any) => {\n  const items = [\n    { value: 'approve', label: 'Approve' },\n    { value: 'for confirmation', label: 'For Confirmation' },\n  ];\n  return (\n    <div>\n      <MaterialUI.RadioGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={value}\n        onChange={e => {\n          e.stopPropagation();\n          radioSelected = true;\n          selectedValue = e.target.value;\n        }}\n        row\n      >\n        {items.map((item: any, cnt: number) => (\n          <MaterialUI.FormControlLabel\n            key={cnt}\n            value={item.value}\n            control={<MaterialUI.Radio color=\"primary\" />}\n            label={item.label}\n            labelPlacement=\"end\"\n          />\n        ))}\n      </MaterialUI.RadioGroup>\n    </div>\n  );\n};\n\nconst DisapproveRadioDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={DisapproveRadioFormatter} {...props} />\n);\n\nconst IncompleteRadioFormatter = ({ value }: any) => {\n  const items = [\n    { value: 'approve', label: 'Approve' },\n    { value: 'disapprove', label: 'Disapprove' },\n    { value: 'for confirmation', label: 'For Confirmation' },\n  ];\n  return (\n    <div>\n      <MaterialUI.RadioGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={value}\n        onChange={e => {\n          e.stopPropagation();\n          radioSelected = true;\n          selectedValue = e.target.value;\n        }}\n        row\n      >\n        {items.map((item: any, cnt: number) => (\n          <MaterialUI.FormControlLabel\n            key={cnt}\n            value={item.value}\n            control={<MaterialUI.Radio color=\"primary\" />}\n            label={item.label}\n            labelPlacement=\"end\"\n            onClick={e => {\n              radioSelected = true;\n              console.log('radio button label onclick', e);\n            }}\n            onChange={e => {\n              radioSelected = true;\n              // selectedValue = e.target.value;\n              console.log('radio button label onchange', e);\n            }}\n          />\n        ))}\n      </MaterialUI.RadioGroup>\n    </div>\n  );\n};\n\nconst IncompleteRadioDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={IncompleteRadioFormatter} {...props} />\n);\n\nconst RadioNameFormatter = ({ value }: any) => {\n  const items = [\n    { value: 'match', label: 'Match' },\n    { value: 'not', label: 'Not Match' },\n    { value: 'confirmation', label: 'For Confirmation' },\n  ];\n  console.log('Radio group value: ', value);\n  return (\n    <div>\n      <MaterialUI.RadioGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={value}\n        onChange={e => {\n          e.stopPropagation();\n          radioSelected = true;\n          selectedValue = e.target.value;\n        }}\n        row\n      >\n        {items.map((item: any, cnt: number) => (\n          <MaterialUI.FormControlLabel\n            key={cnt}\n            value={item.value}\n            control={<MaterialUI.Radio color=\"primary\" />}\n            label={item.label}\n            labelPlacement=\"end\"\n            onClick={e => {\n              radioSelected = true;\n              console.log('radio button label onclick', e);\n            }}\n            onChange={e => {\n              radioSelected = true;\n              // selectedValue = e.target.value;\n              console.log('radio button label onchange', e);\n            }}\n          />\n        ))}\n      </MaterialUI.RadioGroup>\n    </div>\n  );\n};\n\nconst RadioDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={RadioNameFormatter} {...props} />\n);\n\nconst ValuesNameFormatter = ({ value }: any) => {\n  const items = [\n    { name: '', value: '' },\n    { name: 'Married', value: 'married' },\n    { name: 'Single', value: 'single' },\n    { name: 'Widowed', value: 'widowed' },\n    { name: 'Annulled', value: 'annulled' },\n  ];\n  return <Select items={items} value={value} />;\n};\n\nconst ValuesNameDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={ValuesNameFormatter} {...props} />\n);\n\nconst SystemNameFormatter = ({ value }: any) => {\n  const items = [\n    { name: 'First Name', value: 'first_name' },\n    { name: 'Middle Name', value: 'middle_name' },\n    { name: 'Last Name', value: 'last_name' },\n    { name: 'Birthday', value: 'birthday' },\n    { name: 'Civil Status', value: 'civil_status' },\n    { name: 'Gender', value: 'gender' },\n    { name: 'Plan Type', value: 'plan_type' },\n    { name: 'Type', value: 'type' },\n  ];\n\n  return <Select items={items} value={value} />;\n};\n\nconst SystemNameDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={SystemNameFormatter} {...props} />\n);\n\nconst DataFormatter = ({ value }: any) => {\n  const items = [\n    { name: 'Civil Status', value: 'civil_status' },\n    { name: 'Gender', value: 'gender' },\n  ];\n  return <Select items={items} value={value} />;\n};\n\nconst DataDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={DataFormatter} {...props} />\n);\n\nconst NumberFormatter = ({ value }: any) => {\n  const textFieldClasses = textFieldStyles();\n  return (\n    <MaterialUI.TextField\n      value={value}\n      type={'number'}\n      classes={textFieldClasses}\n    />\n  );\n};\n\nconst NumberDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={NumberFormatter} {...props} />\n);\n\nconst TextFormatter = ({ value }: any) => {\n  const textFieldClasses = textFieldStyles();\n  return <MaterialUI.TextField value={value} classes={textFieldClasses} />;\n};\n\nconst TextDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={TextFormatter} {...props} />\n);\n\nconst DateFormatter = ({ value }: any) => {\n  let text = value;\n  if (text) {\n    try {\n      text = moment(value).format('MMM DD, YYYY');\n    } catch (error) {\n      text = value;\n    }\n  } else {\n    text = '';\n  }\n\n  return text;\n};\n\nconst DateCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={DateFormatter} {...props} />\n);\n\nconst TimeFormatter = ({ value }: any) => {\n  let text = value;\n  if (text) {\n    try {\n      text = moment(value).format('hh:mm:ss A');\n    } catch (error) {\n      text = value;\n    }\n  } else {\n    text = '';\n  }\n\n  return text;\n};\n\nconst TimeCellDataTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={TimeFormatter} {...props} />\n);\n\ninterface TableComponentProps {\n  rows: any[];\n  columns: any[];\n  columnFilteringEnabled?: boolean;\n  columnExtensions?: any[];\n  filterExtensions?: any[];\n  formattedColumns?: any;\n  columnBands?: any[] | null;\n  singleSelect?: boolean;\n  disableSearch?: boolean;\n  disablePaging?: boolean;\n  disableSelect?: boolean;\n  disableFilter?: boolean;\n  disableSort?: boolean;\n  showSelectionColumn?: boolean;\n  toolbarType?: string | null;\n  id: string;\n  message: string;\n  defaultFilter?: any[];\n  onClickRow: (row: number[]) => void;\n  onSelectedRadio?: (row: number, value: string) => void;\n  onFilterChange?: (response: any) => void;\n  onSortingChange?: (response: any) => void;\n  onClickCell?: (row: any) => void;\n  defaultSort?: any[];\n  query?: string;\n}\n\nexport const TableComponent: React.FC<TableComponentProps> = (\n  props: TableComponentProps,\n): JSX.Element => {\n  const {\n    columns,\n    formattedColumns,\n    singleSelect,\n    disablePaging,\n    disableSearch,\n    disableSelect,\n    disableSort,\n    disableFilter,\n    toolbarType,\n    columnExtensions,\n    columnBands,\n    id,\n    showSelectionColumn,\n    query,\n  } = props;\n  const [selection, setSelection] = useState<number[]>([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [pageSize, setPageSize] = useState(5);\n  const [pageSizes] = useState([5, 10, 15, 0]);\n  const [rows, setRows] = useState(props.rows);\n  useEffect(() => {\n    setRows(props.rows);\n  }, [props.rows]);\n\n  const dataTypeProviders: any[] = [];\n\n  function handleSelectionChange(newSelection: any[]) {\n    console.log('here click row');\n    if (props.onClickRow) {\n      // selectedRow = newSelection[0];\n      if (!radioSelected && !clickCell) {\n        console.log('onclickrow');\n        props.onClickRow(newSelection);\n      } else if (radioSelected) {\n        console.log('radioselected', newSelection);\n        if (props.onSelectedRadio)\n          props.onSelectedRadio(newSelection[0], selectedValue);\n        radioSelected = false;\n      } else if (clickCell) {\n        console.log(' here !!! >>>', props.onClickCell);\n        if (props.onClickCell) props.onClickCell(clickValue);\n        clickCell = false;\n        clickValue = {};\n      }\n    } else {\n      if (singleSelect) {\n        const lastSelected = newSelection.find(\n          (selected: number) => selection.indexOf(selected) === -1,\n        );\n\n        console.log(newSelection, selection, lastSelected);\n        if (lastSelected !== undefined) {\n          setSelection([lastSelected]);\n        }\n      } else {\n        setSelection(newSelection);\n      }\n    }\n  }\n  if (\n    formattedColumns !== undefined &&\n    Object.keys(formattedColumns).length > 0\n  ) {\n    if (formattedColumns['number'] !== undefined) {\n      dataTypeProviders.push(\n        <NumberDataTypeProvider for={formattedColumns.number} />,\n      );\n    }\n    if (formattedColumns['text'] !== undefined) {\n      dataTypeProviders.push(\n        <TextDataTypeProvider for={formattedColumns.text} />,\n      );\n    }\n    if (formattedColumns['system_name'] !== undefined) {\n      dataTypeProviders.push(\n        <SystemNameDataTypeProvider for={formattedColumns.system_name} />,\n      );\n    }\n    if (formattedColumns['data_name'] !== undefined) {\n      dataTypeProviders.push(\n        <DataDataTypeProvider for={formattedColumns.data_name} />,\n      );\n    }\n    if (formattedColumns['value_name'] !== undefined) {\n      dataTypeProviders.push(\n        <ValuesNameDataTypeProvider for={formattedColumns.value_name} />,\n      );\n    }\n    if (formattedColumns['required_columns'] !== undefined) {\n      dataTypeProviders.push(\n        <EmptyCellDataTypeProvider for={formattedColumns.required_columns} />,\n      );\n    }\n    if (formattedColumns['radio'] !== undefined) {\n      dataTypeProviders.push(\n        <RadioDataTypeProvider for={formattedColumns.radio} />,\n      );\n    }\n    if (formattedColumns['incomplete_radio'] !== undefined) {\n      dataTypeProviders.push(\n        <IncompleteRadioDataTypeProvider\n          for={formattedColumns.incomplete_radio}\n        />,\n      );\n    }\n    if (formattedColumns['disapprove_action'] !== undefined) {\n      dataTypeProviders.push(\n        <DisapproveRadioDataTypeProvider\n          for={formattedColumns.disapprove_action}\n        />,\n      );\n    }\n    if (formattedColumns['required_checkbox'] !== undefined) {\n      dataTypeProviders.push(\n        <RequiredCheckboxDataTypeProvider\n          for={formattedColumns.required_checkbox}\n        />,\n      );\n    }\n    if (formattedColumns['readonly_checkbox'] !== undefined) {\n      dataTypeProviders.push(\n        <ReadOnlyCheckboxDataTypeProvider\n          for={formattedColumns.readonly_checkbox}\n        />,\n      );\n    }\n    if (formattedColumns['upload_file'] !== undefined) {\n      dataTypeProviders.push(\n        <UploadFileDataTypeProvider\n          for={formattedColumns.upload_file}\n          {...props}\n        />,\n      );\n    }\n    if (formattedColumns['required_cell'] !== undefined) {\n      dataTypeProviders.push(\n        <RequiredDataTypeProvider\n          for={formattedColumns.required_cell}\n          {...props}\n        />,\n      );\n    }\n    if (formattedColumns['date'] !== undefined) {\n      dataTypeProviders.push(\n        <DateCellDataTypeProvider for={formattedColumns.date} />,\n      );\n    }\n    if (formattedColumns['time'] !== undefined) {\n      dataTypeProviders.push(\n        <TimeCellDataTypeProvider for={formattedColumns.time} />,\n      );\n    }\n  }\n\n  let toolbar = DefaultTableToolbar;\n\n  return (\n    <Paper id={id}>\n      <Grid rows={rows} columns={columns}>\n        {dataTypeProviders}\n        {/* Need to initialize paging state before paging panel */}\n        {!disablePaging ? (\n          <PagingState\n            currentPage={currentPage}\n            onCurrentPageChange={setCurrentPage}\n            pageSize={pageSize}\n            onPageSizeChange={setPageSize}\n          />\n        ) : null}\n\n        {!disablePaging ? <IntegratedPaging /> : null}\n\n        {!disableSearch || query ? <SearchState value={query} /> : null}\n\n        {!disableSort && props.defaultSort !== undefined ? (\n          <SortingState\n            defaultSorting={[]}\n            sorting={props.defaultSort !== undefined ? props.defaultSort : []}\n            onSortingChange={e => {\n              console.log('onSortingChange');\n              if (props.onSortingChange) {\n                props.onSortingChange(e);\n              }\n              if (props.onFilterChange) {\n                props.onFilterChange(props.defaultFilter);\n              }\n            }}\n          />\n        ) : !disableSort ? (\n          <SortingState\n            defaultSorting={[]}\n            onSortingChange={e => {\n              console.log('onSortingChange');\n              if (props.onSortingChange) {\n                props.onSortingChange(e);\n              }\n              if (props.onFilterChange) {\n                props.onFilterChange(props.defaultFilter);\n              }\n            }}\n          />\n        ) : <SortingState />}\n\n        {!disableSort ? <IntegratedSorting /> : null}\n\n        {!disableSelect || !showSelectionColumn ? (\n          <SelectionState\n            selection={selection}\n            onSelectionChange={handleSelectionChange}\n          />\n        ) : null}\n        {!disableSelect ? <IntegratedSelection /> : null}\n\n        {!disableFilter ? (\n          <FilteringState\n            defaultFilters={[]}\n            filters={\n              props.defaultFilter !== undefined ? props.defaultFilter : []\n            }\n            columnFilteringEnabled={props.columnFilteringEnabled}\n            columnExtensions={props.filterExtensions}\n            onFiltersChange={props.onFilterChange}\n          />\n        ) : null}\n\n        {!disableFilter ? <IntegratedFiltering /> : null}\n\n        <Table\n          columnExtensions={columnExtensions}\n          messages={{ noData: props.message }}\n        />\n\n        {!disableSelect && !showSelectionColumn ? (\n          <TableSelection\n            showSelectAll={!singleSelect ? true : false}\n            cellComponent={!singleSelect ? TableCheckBox : TableRadio}\n            headerCellComponent={TableCheckBox}\n          />\n        ) : !showSelectionColumn ? (\n          <TableSelection\n            selectByRowClick\n            showSelectionColumn={false}\n            cellComponent={!singleSelect ? TableCheckBox : TableRadio}\n            headerCellComponent={TableCheckBox}\n          />\n        ) : null}\n        <TableHeaderRow\n          showSortingControls={!disableSort}\n          sortLabelComponent={TableSortLabel}\n        />\n        {!disableFilter ? (\n          <TableFilterRow cellComponent={TableFilterCell} />\n        ) : null}\n        {columnBands ? <TableBandHeader columnBands={columnBands} /> : null}\n\n        {!disableSearch || toolbarType ? (\n          <Toolbar rootComponent={toolbar} />\n        ) : null}\n        {!disableSearch ? (\n          <SearchPanel inputComponent={TableSearchPanel} />\n        ) : null}\n\n        {!disablePaging ? <PagingPanel pageSizes={pageSizes} /> : null}\n      </Grid>\n    </Paper>\n  );\n};\n\nTableComponent.defaultProps = {\n  rows: [],\n  columns: [],\n  columnExtensions: [],\n  filterExtensions: [],\n  columnBands: null,\n  formattedColumns: {},\n  singleSelect: false,\n  disableSearch: false,\n  disablePaging: false,\n  disableSelect: false,\n  disableFilter: false,\n  disableSort: false,\n  toolbarType: null,\n  defaultFilter: [],\n  showSelectionColumn: false,\n  columnFilteringEnabled: true,\n  id: 'table-1',\n  message: 'No available data',\n  query: '',\n};\n","import * as React from 'react';\nimport { Grid, Tabs, Tab } from '@material-ui/core/';\nimport { useState } from 'react';\n\nimport { TableComponent } from 'Components/UI/TableComponent';\n\ninterface DocumentsProps {\n  all_documents_table: any;\n  uploaded_documents_table: any;\n  missing_documents_table: any;\n  documents_tab: any;\n  all_data: any;\n  all_filter: any;\n  all_sort: any;\n  uploaded_filter: any;\n  uploaded_sort: any;\n  missing_filter: any;\n  missing_sort: any;\n  applySortFilter: (params: any, tab: number, type: string) => void;\n}\n\nexport const Documents: React.FC<DocumentsProps> = (\n  props: DocumentsProps,\n): JSX.Element => {\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  function handleClickRow2() {\n\n  }\n\n  function handleFilter(filter: any) {\n    props.applySortFilter(filter, selectedTab, 'filter');\n  }\n\n  function handleSort(sorting: any) {\n    props.applySortFilter(sorting, selectedTab, 'sort');\n  }\n  \n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Tabs\n          value={selectedTab}\n          onChange={(_event: React.ChangeEvent<{}>, value: number) => {\n            setSelectedTab(value);\n          }}\n          aria-label=\"documenst tab\"\n        >\n          {props.documents_tab.map(data => (\n            <Tab\n              label={data.label + ' (' + data.count + ')'}\n              id={'view_member_documents_tab_' + data.count}\n              aria-controls={'verify-member-tabpanel-' + data.count}\n            />\n          ))}\n        </Tabs>\n      </Grid>\n      <Grid item xs={12} style={{ paddingLeft: '8px' }}>\n        {selectedTab === 0 ? (\n          <TableComponent\n            id=\"document_all_table\"\n            rows={\n              Object.keys(props.all_documents_table).length > 0\n                ? props.all_documents_table['rows']\n                : []\n            }\n            columns={\n              Object.keys(props.all_documents_table).length > 0\n                ? props.all_documents_table['columns']\n                : []\n            }\n            message=\"No available data\"\n            onClickRow={handleClickRow2}\n            disableSelect\n            disableSearch\n            columnFilteringEnabled={false}\n            formattedColumns={\n              Object.keys(props.all_documents_table).length > 0\n                ? props.all_documents_table['formattedColumns']\n                : {}\n            }\n            columnExtensions={\n              Object.keys(props.all_documents_table).length > 0\n                ? props.all_documents_table['columnExtensions']\n                : []\n            }\n            filterExtensions={\n              Object.keys(props.all_documents_table).length > 0\n                ? props.all_documents_table['filterExtensions']\n                : []\n            }\n            onFilterChange={handleFilter}\n            onSortingChange={handleSort}\n            defaultFilter={props.all_filter}\n            defaultSort={props.all_sort}\n          />\n        ) : selectedTab === 1 ? (\n          <TableComponent\n            id=\"document_uploaded_table\"\n            rows={\n              Object.keys(props.uploaded_documents_table).length > 0\n                ? props.uploaded_documents_table['rows']\n                : []\n            }\n            columns={\n              Object.keys(props.uploaded_documents_table).length > 0\n                ? props.uploaded_documents_table['columns']\n                : []\n            }\n            message=\"No available data\"\n            onClickRow={handleClickRow2}\n            disableSelect\n            disableSearch\n            columnFilteringEnabled={false}\n            formattedColumns={\n              Object.keys(props.uploaded_documents_table).length > 0\n                ? props.uploaded_documents_table['formattedColumns']\n                : {}\n            }\n            columnExtensions={\n              Object.keys(props.uploaded_documents_table).length > 0\n                ? props.uploaded_documents_table['columnExtensions']\n                : []\n            }\n            filterExtensions={\n              Object.keys(props.uploaded_documents_table).length > 0\n                ? props.uploaded_documents_table['filterExtensions']\n                : []\n            }\n            onFilterChange={handleFilter}\n            onSortingChange={handleSort}\n            defaultFilter={props.uploaded_filter}\n            defaultSort={props.uploaded_sort}\n          />\n        ) : selectedTab === 2 ? (\n          <TableComponent\n            id=\"document_missing_table\"\n            rows={\n              Object.keys(props.missing_documents_table).length > 0\n                ? props.missing_documents_table['rows']\n                : []\n            }\n            columns={\n              Object.keys(props.missing_documents_table).length > 0\n                ? props.missing_documents_table['columns']\n                : []\n            }\n            message=\"No available data\"\n            onClickRow={handleClickRow2}\n            disableSelect\n            disableSearch\n            columnFilteringEnabled={false}\n            formattedColumns={\n              Object.keys(props.missing_documents_table).length > 0\n                ? props.missing_documents_table['formattedColumns']\n                : {}\n            }\n            columnExtensions={\n              Object.keys(props.missing_documents_table).length > 0\n                ? props.missing_documents_table['columnExtensions']\n                : []\n            }\n            filterExtensions={\n              Object.keys(props.missing_documents_table).length > 0\n                ? props.missing_documents_table['filterExtensions']\n                : []\n            }\n            onFilterChange={handleFilter}\n            onSortingChange={handleSort}\n            defaultFilter={props.missing_filter}\n            defaultSort={props.missing_sort}\n          />\n        ) : null}\n      </Grid>\n    </Grid>\n  );\n};\n\nDocuments.defaultProps = {\n  all_data: {},\n  all_documents_table: {},\n  uploaded_documents_table: {},\n  missing_documents_table: {},\n  documents_tab: [],\n  all_filter: [],\n  uploaded_filter: [],\n  missing_filter: [],\n  all_sort: [],\n  uploaded_sort: [],\n  missing_sort: [],\n};\n","import * as React from 'react';\nimport {\n    Grid,\n    Box,\n    Avatar,\n} from '@material-ui/core/';\nimport clsx from 'clsx';\nimport { Loading } from 'Pages/CustomerCarePage/Components/Loading';\nimport { GlobalFunction } from 'Components/UI/GlobalFunction';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { HMOInformation } from './HMOInformation';\nimport { Documents } from './Documents';\nimport { TextTab } from 'Pages/CustomerCarePage/Components/TextTab';\n\nimport '@hims/core/dist/index.css';\n\ninterface IProps {\n    history: any;\n    memberNumber: string;\n}\n\ninterface IState {\n    loading: boolean;\n    selectedTab: number;\n    clientData: any;\n    contractId: string;\n    contractName: string;\n    memberData: any;\n    memberDependents: any[];\n    documents_tab: any;\n    documents_all_data: any;\n    documents_all_table: any;\n    documents_uploaded_table: any;\n    documents_missing_table: any;\n    documents_all_filter: any;\n    documents_uploaded_filter: any;\n    documents_missing_filter: any;\n    documents_all_sort: any;\n    documents_uploaded_sort: any;\n    documents_missing_sort: any;\n    MBL: string;\n    ABL: string;\n    PEC: string;\n}\n\ninterface Document {\n    name: string,\n    type: string,\n    url: string\n}\n\nexport class MemberProfileSection extends React.Component<IProps, IState> {\n\n    memberTabs = [\n        { value: 0, label: 'HMO Information' },\n        { value: 1, label: 'Documents' },\n        { value: 2, label: 'History' },\n    ];\n    \n    constructor(props: IProps) {\n        super(props);\n\n        const documents_tab: any = [\n        {\n            label: 'All',\n            count: 127,\n        },\n        {\n            label: 'Uploaded Documents',\n            count: 4,\n        },\n        {\n            label: 'Missing Documents',\n            count: 4,\n        },\n        ];\n\n        this.state = {\n            loading: false,\n            selectedTab: 0,\n            clientData: null,\n            contractId: '',\n            contractName: '',\n            memberData: null,\n            memberDependents: [],\n            documents_all_data: [],\n            documents_tab: documents_tab,\n            documents_all_table: {},\n            documents_uploaded_table: {},\n            documents_missing_table: {},\n            documents_all_filter: [],\n            documents_uploaded_filter: [],\n            documents_missing_filter: [],\n            documents_all_sort: [],\n            documents_uploaded_sort: [],\n            documents_missing_sort: [],\n            MBL: '',\n            ABL: '',\n            PEC: '',\n        };\n\n        this.setLoading = this.setLoading.bind(this);\n        this.generateDocumentData = this.generateDocumentData.bind(this);\n        this.handleClickCell = this.handleClickCell.bind(this);\n        this.handleSaveDocument = this.handleSaveDocument.bind(this);\n        this.setFieldValue = this.setFieldValue.bind(this);\n        this.handleDocumentFilter = this.handleDocumentFilter.bind(this);\n    }\n\n    reset = () => {\n        this.setState({\n            loading: false,\n            selectedTab: 0,\n        });\n    };\n\n    setselectedTab = (tab: number) => {\n        this.setState({\n            selectedTab: tab,\n        });\n    };\n\n    setLoading = (isLoading: boolean, callback: any = null) => {\n        if(callback){\n            this.setState({\n                loading: isLoading,\n            }, callback);\n        }\n        else{\n            this.setState({\n                loading: isLoading,\n            });\n        }\n    };\n\n    fetchMemberDependents = (tempId: string, status: string, callback: any) => {\n        let ins = this;\n\n        if (tempId && tempId !== '' && status === 'Active') {\n            const filter = JSON.stringify({\n                where: {\n                    principal_temp_id: tempId,\n                    member_status: 'Active',\n                },\n            });\n          \n            const GET_DEPENDENTS_URL = `members?filter=${filter}`;\n\n            API.get(GET_DEPENDENTS_URL,\n            (response) => {\n                if(response && response.length > 0){\n                    ins.setState({\n                        memberDependents: response\n                    });\n                }\n                callback();\n            },\n            (error) => {\n                console.log('get member dependents failed ', error);\n                callback();\n            });\n        } else {\n            callback();\n        }\n    };\n\n    loadMemberData = () => {\n        let ins = this;\n\n        ins.setLoading(true, ()=> {\n            API.get(`members?filter[where][member_id]=${ins.props.memberNumber}`,\n            (memberDataList) => {\n                if(memberDataList && memberDataList.error === undefined && memberDataList.length > 0){\n                    let memberData = memberDataList[0];\n                    ins.appendDocumentData(memberData.documents);\n                    const { client_id, temp_id, member_status } = memberData;\n                    ins.setState({\n                        memberData: memberData\n                    });\n                    ins.fetchMemberDependents(temp_id, member_status, () => {\n                        API.get(`clients/account/hmo-info/${client_id}`,\n                        (clienthmoinfo) => {\n                            if(clienthmoinfo && clienthmoinfo.error === undefined){\n                                const { client, benefit_plan_tree } = clienthmoinfo;\n                                let contract_id = client && client.contracts && client.contracts[0] ? client.contracts[0] : '';\n                                let contract_name = '';\n                                let abl = '';\n                                let mbl = '';\n                                let pec = '';\n                                if(benefit_plan_tree && benefit_plan_tree.length > 0){\n                                    benefit_plan_tree.forEach(item => {\n                                        if(item.tree_id === 'MCT'){\n                                            contract_name = item.name ? item.name : '';\n                                        }\n\n                                        if(item.tree_id === 'MCT-CT'){\n                                            let rbList = item['limits'];\n                                            if(rbList.length>0){\n                                                rbList.forEach((rblItem) => {\n                                                    switch(rblItem['type']){\n                                                    case 'ABL':\n                                                        abl = ''+rblItem['limit_unit']+' '+GlobalFunction.formatNumber(rblItem['limit']);\n                                                        break;\n                                                    case 'MBL':\n                                                        mbl = ''+rblItem['limit_unit']+' '+GlobalFunction.formatNumber(rblItem['limit']);\n                                                        break;\n                                                    case 'PEC':\n                                                        pec = ''+rblItem['limit_unit']+' '+GlobalFunction.formatNumber(rblItem['limit']);\n                                                        break;\n                                                    default: \n                                                        break;\n                                                    }\n                                                });\n                                            }\n                                        }\n                                    });\n                                }\n\n                                ins.setState({\n                                    clientData: client,\n                                    contractId: contract_id,\n                                    contractName: contract_name,\n                                    ABL: abl,\n                                    MBL: mbl,\n                                    PEC: pec,\n                                }, () => {\n                                    API.get(`members/documents/${memberData._id}`, (docResponse) => {\n                                        if(docResponse && docResponse.error === undefined){\n                                            ins.generateDocumentData(docResponse);\n                                            ins.setLoading(false);\n                                        }\n                                        else{\n                                            console.log('get member documents failed ', docResponse);\n                                            ins.setLoading(false);\n                                        }\n                                    }, (docerror) => {\n                                        console.log('get member documents failed ', docerror);\n                                        ins.setLoading(false);\n                                    });\n                                });\n                            }\n                            else{\n                                console.log('get client hmo info failed ', clienthmoinfo);\n                                ins.setLoading(false);\n                            }\n                        }, \n                        (cerror) => {\n                            console.log('get client hmo info failed ', cerror);\n                            ins.setLoading(false);\n                        });\n                    });\n                }\n                else{\n                    console.log('get member failed ', memberDataList);\n                    ins.setLoading(false);\n                }\n            },\n            (error) => {\n                console.log('get member failed ', error);\n                ins.setLoading(false);\n            });\n        });\n\n        \n    }\n\n    componentDidMount = () => {\n        this.loadMemberData();\n    };\n\n    appendDocumentData = (documents: Array<Document>) => {\n        const sample_document_data: any = [\n        {\n            _id: \"birth_certificate\",\n            name: \"Birth Certificate\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"baptismal_certificate\",\n            name: \"Baptismal Certificate\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"marriage_certificate\",\n            name: \"Marriage Certificate\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"solo_parent_id\",\n            name: \"Solo Parent ID\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"proof_of_parentage\",\n            name: \"Other proof of Parentage\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"certificate_no_marriage\",\n            name: \"Certificate of No Marriage\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"annulment_papers\",\n            name: \"Annulment Papers\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"passport\",\n            name: \"Passport\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"scanned_hmo_card\",\n            name: \"Scanned HMO Card\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"death_certificate\",\n            name: \"Death Certificate\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"employee_id\",\n            name: \"Employee ID\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"proof_overseas_employment\",\n            name: \"Proof of Overseas Employment\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        },\n        {\n            _id: \"others\",\n            name: \"Others\",\n            purpose: '',\n            files: [],\n            required: false,\n            uploaded: false,\n        }\n        ];\n        if(documents !== undefined && documents.length > 0){\n        documents.forEach((document: Document) => {\n            let type = document.type;\n            let name = type.replace('_', ' ');\n\n            sample_document_data.find(e => {\n            e.name.toLowerCase() == name && e.files.push(document)\n            })\n        });\n        }\n        this.generateDocumentData(sample_document_data);\n    }\n\n    generateDocumentData = (data: any) => {\n        const all_table: any = {\n        formattedColumns: {\n            readonly_checkbox: ['required'],\n            upload_file: ['action'],\n            required_cell: ['files'],\n        },\n        columnExtensions: [\n            {\n            columnName: 'required',\n            width: 100,\n            },\n            {\n            columnName: 'name',\n            width: 200,\n            },\n            {\n            columnName: 'purpose',\n            width: 200,\n            },\n            {\n            columnName: 'files',\n            width: 250,\n            },\n        ],\n        filterExtensions: [\n            {\n            columnName: 'required',\n            filteringEnabled: false,\n            },\n            {\n            columnName: 'name',\n            filteringEnabled: true,\n            },\n            {\n            columnName: 'purpose',\n            filteringEnabled: true,\n            },\n            {\n            columnName: 'files',\n            filteringEnabled: true,\n            },\n            \n        ],\n        columns: [\n            {\n            name: 'required',\n            title: 'Required?',\n            filteringEnabled: false,\n            sortingEnabled: false,\n            },\n            {\n            name: 'name',\n            title: 'Documents',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n            {\n            name: 'purpose',\n            title: 'Purpose of Document',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n            {\n            name: 'files',\n            title: 'File/s',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n        ],\n        rows: [],\n        };\n        const uploaded_table: any = {\n        formattedColumns: {\n            readonly_checkbox: ['required'],\n            required_cell: ['files'],\n        },\n        columnExtensions: [\n            {\n            columnName: 'required',\n            width: 100,\n            },\n            {\n            columnName: 'name',\n            width: 200,\n            },\n            {\n            columnName: 'purpose',\n            width: 200,\n            },\n            {\n            columnName: 'files',\n            width: 250,\n            },\n        ],\n        filterExtensions: [\n            {\n            columnName: 'required',\n            filteringEnabled: false,\n            },\n            {\n            columnName: 'name',\n            filteringEnabled: true,\n            },\n            {\n            columnName: 'purpose',\n            filteringEnabled: true,\n            },\n            {\n            columnName: 'files',\n            filteringEnabled: true,\n            },\n        ],\n        columns: [\n            {\n            name: 'required',\n            title: 'Required?',\n            filteringEnabled: false,\n            sortingEnabled: false,\n            },\n            {\n            name: 'name',\n            title: 'Documents',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n            {\n            name: 'purpose',\n            title: 'Purpose of Document',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n            {\n            name: 'files',\n            title: 'File/s',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n        ],\n        rows: [],\n        };\n        const missing_table: any = {\n        formattedColumns: {\n            readonly_checkbox: ['required'],\n            upload_file: ['action'],\n            required_cell: ['files'],\n        },\n        columnExtensions: [\n            {\n            columnName: 'required',\n            width: 100,\n            },\n            {\n            columnName: 'name',\n            width: 200,\n            },\n            {\n            columnName: 'purpose',\n            width: 200,\n            },\n            {\n            columnName: 'files',\n            width: 250,\n            },\n        ],\n        filterExtensions: [\n            {\n            columnName: 'required',\n            filteringEnabled: false,\n            },\n            {\n            columnName: 'name',\n            filteringEnabled: true,\n            },\n            {\n            columnName: 'purpose',\n            filteringEnabled: true,\n            },\n            {\n            columnName: 'files',\n            filteringEnabled: true,\n            },\n        ],\n        columns: [\n            {\n            name: 'required',\n            title: 'Required?',\n            filteringEnabled: false,\n            sortingEnabled: false,\n            },\n            {\n            name: 'name',\n            title: 'Documents',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n            {\n            name: 'purpose',\n            title: 'Purpose of Document',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n            {\n            name: 'files',\n            title: 'File/s',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n        ],\n        rows: [],\n        };\n        for (const cnt in data) {\n        const doc: any = data[cnt];\n        const temp_row: any = {\n            id: doc['_id'],\n            required: doc['required'],\n            name: doc['name'],\n            purpose: doc['purpose'],\n            files: '',\n        };\n        if (\n            doc['files'] &&\n            doc['files'] !== undefined &&\n            doc['files'] !== null &&\n            doc['files'].length > 0\n        ) {\n            let file_names: any = [];\n            let uploaded_file: any = [];\n            doc['files'].forEach(item => {\n            if (\n                item.filename &&\n                item.filename !== undefined &&\n                item.filename !== null\n            ) {\n                file_names.push(item.filename);\n                if (item['uploaded'] && item['uploaded'] === true) {\n                uploaded_file.push(item.filename);\n                }\n            }\n            });\n            temp_row['files'] = file_names.join(', ');\n            if (uploaded_file.length > 0) {\n            uploaded_table['rows'].push(temp_row);\n            }\n        } else if (\n            doc['required'] &&\n            doc['required'] !== undefined &&\n            doc['required'] !== null &&\n            doc['required'] === true\n        ) {\n            missing_table['rows'].push(temp_row);\n        }\n        all_table['rows'].push(temp_row);\n        }\n        const documents_tab: any = [\n        {\n            label: 'All',\n            count: all_table['rows'].length,\n        },\n        {\n            label: 'Uploaded Documents',\n            count: uploaded_table['rows'].length,\n        },\n        {\n            label: 'Missing Documents',\n            count: missing_table['rows'].length,\n        },\n        ];\n        this.setState({\n        documents_all_data: data,\n        documents_all_table: all_table,\n        documents_uploaded_table: uploaded_table,\n        documents_missing_table: missing_table,\n        documents_tab: documents_tab,\n        });\n    };\n\n    handleClickCell = (data: any) => {\n        if (Object.keys(data).length > 0) {\n        this.setLoading(true);\n        const { documents_all_data } = this.state;\n        for (const cnt in documents_all_data) {\n            const temp_data: any = documents_all_data[cnt];\n            if (temp_data['_id'] === data['id']) {\n            if (data['name'] === 'required') {\n                documents_all_data[cnt]['required'] =\n                data['value'] === 'true' || data['value'] === true;\n            } else if (data['name'] === 'action') {\n                if (\n                documents_all_data[cnt]['files'] &&\n                documents_all_data[cnt]['files'] !== undefined &&\n                documents_all_data[cnt]['files'] !== null\n                ) {\n                documents_all_data[cnt]['files'].push(data['value']);\n                } else {\n                documents_all_data[cnt]['files'] = [];\n                documents_all_data[cnt]['files'].push(data['value']);\n                }\n            }\n            break;\n            }\n        }\n        this.generateDocumentData(documents_all_data);\n        this.setLoading(false);\n        }\n    };\n\n    handleSaveDocument = () => {\n        /*\n        this.setState({\n        loading: true,\n        });\n        const payload: any = {\n        member_id: this.props.match.params.member_id,\n        documents: this.state.documents_all_data,\n        };\n        API.putMemberDocuments(payload, this.props.match.params.member_id).then(\n        response2 => {\n            this.setState({\n            loading: false,\n            });\n            if (response2 && response2.error === undefined) {\n            this.setState({\n                loading: false,\n                disableSaveBtn: true,\n            });\n            } else {\n            this.setState({\n                loading: false,\n                isOpenModal: true,\n                modalTitle: 'Error',\n                modalMessage: 'Failed to save documents.',\n            });\n            }\n        },\n        );\n        */\n    };\n\n    setFieldValue = (fieldName: string, value: any) => {\n        this.setState(state => ({\n        ...state,\n        [fieldName]: value,\n        }));\n    };\n\n    handleDocumentFilter = (params: any, tab: number, type: string) => {\n        const { documents_all_data } = this.state;\n        let table: any = {\n        formattedColumns: {\n            readonly_checkbox: ['required'],\n            required_cell: ['files'],\n        },\n        columnExtensions: [\n            {\n            columnName: 'required',\n            width: 100,\n            },\n            {\n            columnName: 'name',\n            width: 200,\n            },\n            {\n            columnName: 'purpose',\n            width: 200,\n            },\n            {\n            columnName: 'files',\n            width: 250,\n            },\n        ],\n        filterExtensions: [\n            {\n            columnName: 'required',\n            filteringEnabled: false,\n            },\n            {\n            columnName: 'name',\n            filteringEnabled: true,\n            },\n            {\n            columnName: 'purpose',\n            filteringEnabled: true,\n            },\n            {\n            columnName: 'files',\n            filteringEnabled: true,\n            },\n            {\n            columnName: 'action',\n            filteringEnabled: false,\n            },\n        ],\n        columns: [\n            {\n            name: 'required',\n            title: 'Required?',\n            filteringEnabled: false,\n            sortingEnabled: false,\n            },\n            {\n            name: 'name',\n            title: 'Documents',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n            {\n            name: 'purpose',\n            title: 'Purpose of Document',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n            {\n            name: 'files',\n            title: 'File/s',\n            filteringEnabled: true,\n            sortingEnabled: true,\n            },\n        ],\n        rows: [],\n        };\n        for (const cnt in documents_all_data) {\n        const doc: any = documents_all_data[cnt];\n        const temp_row: any = {\n            id: doc['_id'],\n            required: doc['required'],\n            name: doc['name'],\n            purpose: doc['purpose'],\n            files: '',\n        };\n        if (\n            doc['files'] &&\n            doc['files'] !== undefined &&\n            doc['files'] !== null &&\n            doc['files'].length > 0\n        ) {\n            let file_names: any = [];\n            let uploaded_file: any = [];\n            doc['files'].forEach(item => {\n            if (\n                item.filename &&\n                item.filename !== undefined &&\n                item.filename !== null\n            ) {\n                file_names.push(item.filename);\n                if (item['uploaded'] && item['uploaded'] === true) {\n                uploaded_file.push(item.filename);\n                }\n            }\n            });\n            temp_row['files'] = file_names.join(', ');\n            if (uploaded_file.length > 0 && tab === 1) {\n            table['rows'].push(temp_row);\n            }\n        } else if (\n            doc['required'] &&\n            doc['required'] !== undefined &&\n            doc['required'] !== null &&\n            doc['required'] === true &&\n            tab === 2\n        ) {\n            table['rows'].push(temp_row);\n        }\n        if (tab === 0) {\n            table['rows'].push(temp_row);\n        }\n        }\n        const {\n        documents_all_sort,\n        documents_uploaded_sort,\n        documents_missing_sort,\n        documents_all_filter,\n        documents_uploaded_filter,\n        documents_missing_filter,\n        } = this.state;\n        switch (tab) {\n        case 0:\n            if (type === 'filter') {\n            table = this.applySortFilter(table, documents_all_sort, params);\n            this.setState({\n                documents_all_filter: params,\n                documents_all_table: table,\n            });\n            } else {\n            table = this.applySortFilter(table, params, documents_all_filter);\n            this.setState({\n                documents_all_sort: params,\n                documents_all_table: table,\n            });\n            }\n            break;\n        case 1:\n            if (type === 'filter') {\n            table = this.applySortFilter(table, documents_uploaded_sort, params);\n            this.setState({\n                documents_uploaded_filter: params,\n                documents_uploaded_table: table,\n            });\n            } else {\n            table = this.applySortFilter(\n                table,\n                params,\n                documents_uploaded_filter,\n            );\n            this.setState({\n                documents_uploaded_sort: params,\n                documents_uploaded_table: table,\n            });\n            }\n            break;\n        case 2:\n            if (type === 'filter') {\n            table = this.applySortFilter(table, documents_missing_sort, params);\n            this.setState({\n                documents_missing_filter: params,\n                documents_missing_table: table,\n            });\n            } else {\n            table = this.applySortFilter(table, params, documents_missing_filter);\n            this.setState({\n                documents_missing_sort: params,\n                documents_missing_table: table,\n            });\n            }\n            break;\n        }\n    };\n\n    applySortFilter = (data: any, sorting: any, filter: any) => {\n        let filtered: any[] = [];\n        if (sorting && sorting[0] && sorting[0]['columnName']) {\n        switch (sorting[0]['columnName']) {\n            case 'name':\n            if (sorting[0]['direction'] === 'asc') {\n                data.rows.sort((a, b) => (a.name > b.name ? 1 : -1));\n            } else {\n                data.rows.sort((a, b) => (a.name > b.name ? -1 : 1));\n            }\n            break;\n            case 'purpose':\n            if (sorting[0]['direction'] === 'asc') {\n                data.rows.sort((a, b) => (a.purpose > b.purpose ? 1 : -1));\n            } else {\n                data.rows.sort((a, b) => (a.purpose > b.purpose ? -1 : 1));\n            }\n            break;\n            case 'files':\n            if (sorting[0]['direction'] === 'asc') {\n                data.rows.sort((a, b) => (a.files > b.files ? 1 : -1));\n            } else {\n                data.rows.sort((a, b) => (a.files > b.files ? -1 : 1));\n            }\n            break;\n        }\n        }\n        let filter_name: string = '';\n        let filter_purpose: string = '';\n        let filter_files: string = '';\n\n        filter.forEach(item => {\n        if (item.columnName === 'name') filter_name = item.value.toLowerCase();\n        if (item.columnName === 'purpose')\n            filter_purpose = item.value.toLowerCase();\n        if (item.columnName === 'files') filter_files = item.value.toLowerCase();\n        });\n        if (filter.length > 0) {\n        data.rows.forEach(item => {\n            if (\n            item.name !== undefined &&\n            item.name !== null &&\n            item.name.toLowerCase().includes(filter_name) &&\n            (item.purpose !== undefined &&\n                item.purpose !== null &&\n                item.purpose.toLowerCase().includes(filter_purpose)) &&\n            (item.files !== undefined &&\n                item.files !== null &&\n                item.files.toLowerCase().includes(filter_files))\n            )\n            filtered.push(item);\n        });\n        data.rows = filtered;\n        }\n        return data;\n    };\n\n    _generatePrincipalName = (currEditMemberValues) => {\n        if(currEditMemberValues){\n        let cleanFirstName = currEditMemberValues['first_name'] ? currEditMemberValues['first_name'].trim() : '';\n        let cleanMiddleName = currEditMemberValues['middle_name'] ? currEditMemberValues['middle_name'].trim() : '';\n        let cleanLastName = currEditMemberValues['last_name'] ? currEditMemberValues['last_name'].trim() : '';\n        let cleanSuffix = currEditMemberValues['suffix'] ? currEditMemberValues['suffix'].trim() : '';\n        return cleanLastName+', '+cleanFirstName+', '+cleanMiddleName+', '+cleanSuffix;\n        }\n        else{\n        return '';\n        }\n    }\n\n    public render(): JSX.Element {\n\n        const {\n            loading,\n            selectedTab,\n            documents_tab,\n            documents_all_data,\n            documents_all_table,\n            documents_all_filter,\n            documents_all_sort,\n            documents_uploaded_table,\n            documents_uploaded_filter,\n            documents_uploaded_sort,\n            documents_missing_table,\n            documents_missing_filter,\n            documents_missing_sort,\n            memberData,\n            clientData,\n            contractId,\n            contractName,\n            MBL,\n            ABL,\n            PEC,\n        } = this.state;\n\n        let is_vip = memberData && memberData.is_vip ? memberData.is_vip : false;\n\n        const BlankTemplate = () => {\n            return (\n                <Grid container>\n                    <Grid item xs={12}>\n                    </Grid>\n                </Grid>\n            );\n        };\n\n        return (\n            <div className='section' style={{width: '100%'}}>\n                <div style={{paddingTop: '2.5rem'}} />\n                <Grid container className='sub-section'>\n                    <Grid item xs={12} md={2} style={{borderRight: '#3C394A22 solid 1px'}} spacing={5}>\n                        <Box>\n                            <Avatar\n                                src=\"temp_member_photo.png\"\n                                alt=\"avatar\"\n                                className={clsx(\n                                    is_vip\n                                    ? 'side-menu-member-photo-vip'\n                                    : 'side-menu-member-photo',\n                                )}\n                                />\n                        </Box>\n                        <div className='sub-section'>\n                            <TextTab\n                                tabList={this.memberTabs}\n                                selectedTab={this.state.selectedTab}\n                                orientation='vertical'\n                                tabLabel={(index: number) => {\n                                    return (\n                                        <div style={{width: '100%'}}>\n                                            <div className='header-3' style={{margin: '6px 0'}}>\n                                                {this.memberTabs[index].label}\n                                            </div>\n                                        </div>\n                                    );\n                                }}\n                                setSelectedTab={(value: number) => {\n                                    this.setState({\n                                        selectedTab: value\n                                    });\n                                }} />\n                        </div>\n                    </Grid>\n                    <Grid item xs={10} className='small-section'>\n                        {\n                            loading ? \n                                <Loading height='10rem'/> \n                            : selectedTab === 0 ? (\n                                <HMOInformation\n                                    memberData={this.state.memberData}\n                                    memberDependents={this.state.memberDependents}\n                                    clientData={clientData}\n                                    contractId={contractId}\n                                    contractName={contractName}\n                                    ABL={ABL}\n                                    MBL={MBL}\n                                    PEC={PEC} />\n                            ) : selectedTab === 1 ? (\n                                <Documents\n                                    all_data={documents_all_data}\n                                    documents_tab={documents_tab}\n                                    all_documents_table={documents_all_table}\n                                    all_filter={documents_all_filter}\n                                    all_sort={documents_all_sort}\n                                    uploaded_documents_table={documents_uploaded_table}\n                                    uploaded_filter={documents_uploaded_filter}\n                                    uploaded_sort={documents_uploaded_sort}\n                                    missing_documents_table={documents_missing_table}\n                                    missing_filter={documents_missing_filter}\n                                    missing_sort={documents_missing_sort}\n                                    applySortFilter={this.handleDocumentFilter} />\n                            ) : (\n                                <BlankTemplate />\n                            )\n                        }\n\n                    </Grid>\n                </Grid>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid, TableRow, TableCell } from '@material-ui/core';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { faSort, faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { Loading } from 'Pages/CustomerCarePage/Components/Loading';\n\ninterface IProps {\n    clientId: string;\n}\n\ninterface IStates {\n    code: string;\n    name: string;\n    location: string;\n\n    type?: string;\n    groups: PartnerNetworkGroup[];\n    facilities: FacilityData[];\n\n    isLoaded: boolean;\n}\n\ninterface PartnerNetworkGroup {\n    checked: boolean;\n    name: string;\n    label: string;\n}\n\ninterface FacilityData {\n    code: string;\n    name: string;\n    location: string;\n}\n\nexport class PartnerNetworkSection extends React.Component<IProps, IStates> {\n\n    groupChoices: PartnerNetworkGroup[] = [\n        { checked: false, name: 'Top 5 Hospitals', label: 'top_5_hospitals' },\n        { checked: false, name: 'Top 6 Hospitals', label: 'top_6_hospitals' },\n        { checked: false, name: 'Healthway Clinics', label: 'healthway_clinics' },\n        { checked: false, name: 'Medical City Network', label: 'medical_city_network' }\n    ]\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            code: '',\n            name: '',\n            location: '',\n\n            groups: [],\n            facilities: [],\n            isLoaded: false\n        }\n    }\n\n    componentDidMount() {\n        API.get(`clients/account/hmo-info/${this.props.clientId}`,\n            (response) => {\n                constructPartnerNetworkData(response.benefit_plan_tree);\n                this.setState({isLoaded: true});\n            },\n            (error) => {\n                console.log(error);\n            });\n\n        const constructPartnerNetworkData = (response: any[]) => {\n\n            const lastElement = (array: any[]) => {\n                return array[array.length - 1];\n            }\n\n            const parentNode = response.find(node => node.level == 4 && lastElement(node.tree_path) === 'NT');\n\n            const childrenNodes = response.filter(node => {\n                return parentNode.children.includes(node._id);\n            });\n\n            const nodesWithType = childrenNodes.filter(node => {\n                return (\n                    lastElement(node.tree_path) === 'CB' ||\n                    lastElement(node.tree_path) === 'OD'\n                );\n            });\n\n            const nodeWithPNList = nodesWithType.find(node => {\n                return node.custom_metadata.partner_network_list;\n            })\n\n            console.log('childrenNodes', childrenNodes);\n            console.log('nodesWithType', nodesWithType);\n            console.log('nodeWithPNList', nodeWithPNList);\n\n            const pnGroups = parentNode.custom_metadata.groups;\n            let pnType = undefined;\n            let pnFacilities = undefined;\n\n            if (nodeWithPNList) {\n                pnType = nodeWithPNList.name;\n                pnFacilities = nodeWithPNList.custom_metadata.partner_network_list;\n            }\n            \n            console.log('pnType', pnType);\n            console.log('pnGroups', pnGroups);\n            console.log('pnFacilities', pnFacilities);\n            \n            /* Assign Type */\n            // @ts-ignore\n            this.setState({type: pnType});\n\n            /* Assign Groups */\n            if (pnGroups) {\n                this.setState({groups: this.groupChoices.map(i => i)});\n                this.state.groups.forEach(group => {\n                    group.checked = pnGroups.find(pnGroup => group.label === pnGroup)\n                })\n                this.setState({groups: this.state.groups});\n            }\n\n            /* Assign Facilities */\n            if (pnFacilities) {\n                // @ts-ignore\n                this.setState({facilities: pnFacilities.map(facility => {\n                    return {\n                        code: facility.facility_id,\n                        name: facility.name,\n                        location: '---'\n                    }\n                })});\n            }\n        }\n    }\n\n    getFilteredFacilitiesData = () => {\n        const includes = (from: string, to: string) => {\n            return from.toLowerCase().includes(to.toLowerCase());\n        };\n        const { code, name, location } = this.state;\n\n        const filteredFacilities = this.state.facilities\n            .filter(facility => code === '' || includes(facility.code, code))\n            .filter(facility => name === '' || includes(facility.name, name))\n            .filter(facility => location === '' || includes(facility.location, location));\n\n        return filteredFacilities;\n    }\n\n    sortFacilities(attrName: string, isAsc: boolean): void {\n        this.state.facilities.sort((a: any, b: any) => \n            (a[attrName].toString().toLowerCase() > b[attrName].toString().toLowerCase()) ? (isAsc ? 1 : -1) : (isAsc ? -1 : 1)\n        );\n\n        this.setState({facilities: this.state.facilities});\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='section'>\n                {!this.state.isLoaded ? (\n                    <Loading height='10rem'/>\n                ) : (\n                    this.renderMainContent()\n                )}\n            </div>\n        );\n    }\n\n    renderMainContent(): JSX.Element {\n        return (\n            <>\n            <div style={{paddingTop: '2.5rem'}} />\n            <div className='header-1'>Check Partner Network</div>\n            <div className='sub-section'>\n                <div className='header-2'>TYPE</div>\n                <div className='small-text'>{this.state.type ? this.state.type : '---'}</div>\n            </div>\n            <div className='sub-section'>\n                <div className='header-2'>GROUP</div>\n                <Grid className='sub-section' container spacing={2} style={{width: '50%'}}>\n                    {this.groupChoices.map(group => {\n                        return (\n                            <Grid item xs={6}>\n                                <span>\n                                    {group.checked ? (\n                                        <FontAwesomeIcon icon={faCheck} style={{color: '#3AB77D'}} />\n                                    ) : (\n                                        <FontAwesomeIcon icon={faTimes} style={{color: '#FD5451'}} />\n                                    )}\n                                </span>\n                                <span style={{paddingLeft: '1rem'}}>{group.name}</span>\n                            </Grid>\n                        );\n                    })}\n                </Grid>\n            </div>\n            <div className='sub-section'>\n                <Grid className='sub-section' container spacing={2}>\n                    <Grid item xs={2}>\n                        <TextButton label='Excluded Hospitals' onClick={() => {}} />\n                    </Grid>\n                    <Grid item xs={2}>\n                        <TextButton label='Included Hospitals' onClick={() => {}} />   \n                    </Grid>\n                </Grid>\n                <CustomTable\n                    rows={this.getFilteredFacilitiesData()}\n                    renderHeader={() => this.renderTableHeader()}\n                    renderRow={(rowData: any, index: number) => \n                        this.renderTableRow(rowData, index)} />\n            </div>\n            <div className='section' />\n            </>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        \n        return (\n            <>\n            {this.renderHeaderColumn('code', 'Facility Code')}\n            {this.renderHeaderColumn('name', 'Name')}\n            {this.renderHeaderColumn('location', 'Location')}\n            </>\n        );\n    }\n\n    renderTableRow(facility: any, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{facility.code}</TableCell>\n                <TableCell>{facility.name}</TableCell>\n                <TableCell>{facility.location}</TableCell>\n            </TableRow>\n        );\n    }\n\n    renderHeaderColumn(attrName: string, headerText: string): JSX.Element {\n        return (\n            <TableCell>\n                <span className='header-2'>{headerText}</span>\n                <div style={{float: 'right'}}>\n                    <IconButton \n                        icon={faSort} \n                        onClick={() => {\n                            this.sortFacilities(attrName, true);\n                        }} />\n                </div>\n                <InputField\n                    value={this.state[attrName]}\n                    onChange={(value: string) => {\n                        // @ts-ignore\n                        this.setState({[attrName]: value});\n                    }} />\n            </TableCell>\n        );\n    }\n}","import * as React from 'react';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { TableRow, TableCell, Grid } from '@material-ui/core';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\n\ninterface IStates {\n    loaId: string;\n    approvalCode: string;\n    diagnosis: string;\n    procedure: string;\n    provider: string;\n    amount: string;\n    sessions: string;\n    dateAvailed: string;\n    type: string;\n    status: string;\n}\n\n\nexport class CheckUtilizationSection extends React.Component<{}, IStates> {\n\n    dummyData = [\n        {\n            loa: { id: '9999-99999', swipe: true },\n            approvalCode: '99999999',\n            diagnosis: { code: '999.99', name: 'ICD10 Name', desc: 'Description.' },\n            procedure: { code: '999.99', name: 'CPT Name', desc: 'Description.' },\n            provider: { name: 'General Santos Doctor’s Hospitals.' },\n            amount: 0,\n            sessions: 1,\n            dateAvailed: new Date(),\n            type: 'IBNR',\n            status: 'Approved'\n        }\n    ]\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            loaId: '',\n            approvalCode: '',\n            diagnosis: '',\n            procedure: '',\n            provider: '',\n            amount: '',\n            sessions: '',\n            dateAvailed: '',\n            type: '',\n            status: ''\n        };\n    }\n    \n\n    render(): JSX.Element {\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Check Utilization</div>\n                <Grid container className='sub-section' spacing={2}>\n                    <Grid item xs={3}>\n                        <div className='light-text'>ANNUAL BENEFIT LIMIT</div>\n                        <div className='header-1'>{'PHP 0.00'}</div>\n                    </Grid>\n                    <Grid item xs={9}>\n                        <Line \n                            items={[\n                                { value: 70, color: '#3FBB7F', label1: 'UTILIZED', label2: 'PHP 38,021.35' },\n                                { value: 5, color: '#1D236F', label1: 'IBNR', label2: 'PHP 11,978.65' },\n                                { value: 25, color: '#FCB53F', label1: 'AVAILABLE', label2: 'PHP 50,001' }\n                            ]}\n                            maxValue={100} />\n                    </Grid>\n                </Grid>\n                <div className='sub-section' style={{overflowX: 'auto'}}>\n                    <CustomTable\n                        className='custom-table-scrollable'\n                        rows={this.dummyData}\n                        renderHeader={() => this.renderTableHeader()}\n                        renderRow={(rowData: any, index: number) => \n                            this.renderTableRow(rowData, index)} \n                        rowsPerPageOptions={[10, 25, 50]} />\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            {this.renderHeaderColumn('loaId', 'LOA ID', '100px')}\n            {this.renderHeaderColumn('approvalCode', 'Approval Code', '120px')}\n            {this.renderHeaderColumn('diagnosis', 'Diagnosis', '200px')}\n            {this.renderHeaderColumn('procedure', 'Procedure', '200px')}\n            {this.renderHeaderColumn('provider', 'Provider', '150px')}\n            {this.renderHeaderColumn('amount', 'Amount', '100px')}\n            {this.renderHeaderColumn('sessions', 'Sessions', '75px')}\n            {this.renderHeaderColumn('dateAvailed', 'Date Availed', '150px')}\n            {this.renderHeaderColumn('type', 'Type', '75px')}\n            {this.renderHeaderColumn('status', 'Status', '75px')}\n            </>\n        );\n    }\n\n    renderTableRow(utilization: any, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{utilization.loa.id}</TableCell>\n                <TableCell>{utilization.approvalCode}</TableCell>\n                <TableCell>{utilization.diagnosis.name}</TableCell>\n                <TableCell>{utilization.procedure.name}</TableCell>\n                <TableCell>{utilization.provider.name}</TableCell>\n                <TableCell>{utilization.amount}</TableCell>\n                <TableCell>{utilization.sessions}</TableCell>\n                <TableCell>{GlobalFunction.toCommonDateString(utilization.dateAvailed)}</TableCell>\n                <TableCell>{utilization.type}</TableCell>\n                <TableCell>{utilization.status}</TableCell>\n            </TableRow>\n        );\n    }\n\n\n    renderHeaderColumn(attrName: string, headerText: string, width: string): JSX.Element {\n        return (\n            <TableCell style={{minWidth: width, maxWidth: width}}>\n                <span className='header-2'>{headerText}</span>\n                <div style={{float: 'right'}}>\n                    <IconButton \n                        icon={faSort} \n                        onClick={() => {\n                            // this.sortTickets('urgency', true);\n                            // this.setState({ticketListUpdated: true});\n                        }} />\n                </div>\n                <InputField\n                    value={this.state[attrName]}\n                    onChange={(value: string) => {\n                        this.setState(prevState => ({...prevState, [attrName]: value}));\n                    }} />\n            </TableCell>\n        );\n    }\n}\n\n\ninterface LineProps {\n    items: {\n        value: number;\n        color: string;\n        label1: string;\n        label2: string;\n    }[]\n    maxValue: number;\n}\n\nexport class Line extends React.Component<LineProps> {\n\n    render(): JSX.Element {\n        return (\n            <div style={{width: '50%', height: 0}}>\n                {this.props.items.map(item => {\n                    return (\n                        <div \n                            style={{\n                                width: (item.value / this.props.maxValue * 100) + '%', \n                                height: '6px', \n                                display: 'inline-block',\n                                backgroundColor: item.color\n                            }} />\n                    );\n                })}\n                <div style={{padding: '0.5rem 0'}}>\n                {this.props.items.map(item => {\n                    return (\n                        <div \n                            style={{\n                                width: (1 / this.props.items.length * 100) + '%', \n                                height: '6px', \n                                display: 'inline-block'\n                            }}>\n                            <div>\n                                <div \n                                    style={{\n                                        width: '10px', \n                                        height: '10px', \n                                        backgroundColor: item.color,\n                                        display: 'inline-block',\n                                        marginRight: '1rem'\n                                    }}/>\n                                <div \n                                    className='light-text' \n                                    style={{\n                                        display: 'inline-block'\n                                    }}>\n                                    {item.label1}\n                                </div>\n                                <div \n                                    className='header-2' \n                                    style={{\n                                        color: item.color,\n                                    }}>\n                                    {item.label2}\n                                </div>\n                            </div>\n                         </div>\n                    );\n                })}\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\n// import { TicketData } from 'Pages/CustomerCarePage/Models';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { Grid } from '@material-ui/core';\nimport { TicketData, AvailmentDetails, ConfinementDetails } from 'Pages/CustomerCarePage/Models';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\n\ninterface IProps {\n    ticketId: string;\n    onCloseButtonClicked: () => void;\n}\n\ninterface IStates {\n    ticket?: TicketData;\n    availment?: AvailmentDetails;\n    confinement?: ConfinementDetails;\n}\n\nexport class TicketInfoModal extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            \n        };\n    }\n\n    componentDidMount() {\n        console.log(this.props.ticketId);\n\n        API.get('customer-care/tickets/' + this.props.ticketId, \n            (response) => {\n                const ticketCategory = response.ticket_category;\n                const availmentDetails = ticketCategory.availment_details;\n                const confinementDetails = ticketCategory.confinement_details;\n                this.setState({ticket: {\n                    ticketChannel: response.received_via,\n                    transactionNo: response.transaction_no,\n                    ticketSource: response.received_from,\n                    memberName: response.member_name,\n                    clientName: response.corporate_client,\n                    brokerName: response.broker,\n                    facility: { value: '', label: response.hospital_name },\n                    department: response.department,\n                    callerName: response.caller_name,\n                    contactNo: response.contact_no,\n                    ticketType: ticketCategory.ticket_type,\n                    specificType: ticketCategory.specific_type,\n                    urgency: ticketCategory.urgency,\n                    agent: { id: '', name: ticketCategory.assign_to },\n                    additionalNotes: response.additional_notes,\n                    additionalFiles: [],\n                    ticketNo: response.ticket_no,\n                    pmCaseId: response.pmaker_case_uid,\n                    status: response.status,\n                    createdBy: { id: response.created_by.id, name: response.created_by.name },\n                    dateCreated: new Date(response.date_created),\n                    dateUpdated: new Date(response.date_updated),\n                    dateEscalated: new Date(response.date_escalated)\n                }});\n                \n                if (availmentDetails) {\n                    const providerData = availmentDetails.provider.split(' - ');\n                    this.setState({availment: {\n                        provider: { value: providerData[0], label: providerData[1] },\n                        diagnoses: availmentDetails.availments_list.map(diagnosis => {\n                            return {\n                                icd10Code: { value: diagnosis.code, label: diagnosis.name },\n                                remarks: diagnosis.remarks,\n                                isPrimary: diagnosis.is_primary,\n                                isFinal: diagnosis.is_final,\n                                doctors: diagnosis.doctors.map(doctor => {\n                                    return {\n                                        id: doctor.id,\n                                        name: doctor.name,\n                                        specialization: doctor.specialization,\n                                        fee: doctor.fee,\n                                        noOfVisits: doctor.no_of_visits,\n                                        remarks: doctor.remarks\n                                    }\n                                }),\n                                procedures: diagnosis.procedures.map(procedure => {\n                                    return {\n                                        cptCode: { value: procedure.code, label: procedure.name },\n                                        isPHIC: procedure.phic,\n                                        amount: parseInt(procedure.amount),\n                                        notes: procedure.notes,\n                                        assessmentType: procedure.assessment_type,\n                                        assessmentRemarks: procedure.assessment_remarks\n                                    }\n                                })\n                            }\n                        })\n                    }});\n                }\n\n                if (confinementDetails) {\n                    const providerData = availmentDetails.provider.split(' - ');\n                    this.setState({availment: {\n                        provider: { value: providerData[0], label: providerData[1] },\n                        diagnoses: availmentDetails.availments_list.map(diagnosis => {\n                            return {\n                                icd10Code: { value: diagnosis.code, label: diagnosis.name },\n                                remarks: diagnosis.remarks,\n                                isPrimary: diagnosis.is_primary,\n                                isFinal: diagnosis.is_final,\n                                doctors: diagnosis.doctors.map(doctor => {\n                                    return {\n                                        id: doctor.id,\n                                        name: doctor.name,\n                                        specialization: doctor.specialization,\n                                        fee: doctor.fee,\n                                        noOfVisits: doctor.no_of_visits,\n                                        remarks: doctor.remarks\n                                    }\n                                }),\n                                procedures: diagnosis.procedures.map(procedure => {\n                                    return {\n                                        cptCode: { value: procedure.code, label: procedure.name },\n                                        isPHIC: procedure.phic,\n                                        amount: parseInt(procedure.amount),\n                                        notes: procedure.notes,\n                                        assessmentType: procedure.assessment_type,\n                                        assessmentRemarks: procedure.assessment_remarks\n                                    }\n                                })\n                            }\n                        })\n                    }});\n                }\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    getTotalAailmentProcedureCost(): number {\n        let total = 0;\n\n        if (this.state.availment) {\n            this.state.availment.diagnoses.map(diagnosis => \n                diagnosis.procedures.map(procedure => \n                    total += procedure.amount\n                )\n            )\n        }\n        \n        return total;\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='ticket-modal section'>\n                <div style={{float: 'right', marginTop: '-1rem', fontSize: '1rem'}}>\n                    <IconButton \n                        icon={faTimes} \n                        onClick={() => {\n                            this.props.onCloseButtonClicked();\n                        }} />\n                </div>\n                {this.state.ticket ? (\n                    this.renderTicketInfo(this.state.ticket)\n                ) : null}\n            </div>\n        )\n    }\n\n    renderTicketInfo(ticket: TicketData): JSX.Element {\n        return (\n            <>\n            <div className='sub-sections'>\n                <div className='header-1'>{'Ticket 0000823'}</div>\n                <div className='text'>{ticket.status + ' - ' + ticket.urgency + ', Due on May 23, 2019*'}</div>\n            </div>\n            <div className='sub-section'>\n                {/* <div className='text'>{name}</div>\n                <div className='text'>{\"Happytime Technology Inc.\"}</div>\n                <div className='text'>{'Rank and File - Principal'}</div> */}\n                <Grid container>\n                    <Grid item className='sub-section' xs={6}>\n                        <div className='light-text'>TICKET TYPE</div>\n                        <div className='small-text'>{ticket.ticketType}</div>\n                    </Grid>\n                    <Grid item className='sub-section' xs={6}>\n                        <div className='light-text'>SPECIFIC TYPE</div>\n                        <div className='small-text'>{ticket.specificType}</div>\n                    </Grid>\n                    <Grid item className='sub-section' xs={6}>\n                        <div className='light-text'>RECEIVED VIA</div>\n                        <div className='small-text'>{ticket.ticketChannel}</div>\n                    </Grid>\n                    <Grid item className='sub-section' xs={6}>\n                        <div className='light-text'>CALL TRANSACTION NO.</div>\n                        <div className='small-text'>{ticket.transactionNo}</div>\n                    </Grid>\n                    <Grid item className='sub-section' xs={6}>\n                        <div className='light-text'>RECEIVED FROM</div>\n                        <div className='small-text'>{'??? ' + '(' + ticket.ticketSource + ')'}</div>\n                    </Grid>\n                    <Grid item className='sub-section' xs={6}>\n                        <div className='light-text'>NUMBER / EMAIL</div>\n                        <div className='small-text'>{ticket.contactNo}</div>\n                    </Grid>\n                </Grid>\n                <div className='sub-section'>\n                    <div className='light-text'>ASSIGNED TO</div>\n                    <div className='small-text'>{ticket.agent.name}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>DIAGNOSIS — PROCEDURES</div>\n                    {this.state.availment ? (\n                        <Grid container spacing={2} className='sub-section'>\n                            {this.state.availment.diagnoses.map((diagnosis, index) => {\n                                return (\n                                    <>\n                                    <Grid item xs={12} className='header-2'>\n                                        {(index + 1) + '. ' +\n                                         diagnosis.icd10Code.value + ' - ' + \n                                         diagnosis.icd10Code.label}\n                                    </Grid>\n                                    {diagnosis.procedures.map((procedure, index2) => {\n                                        return (\n                                            <>\n                                            <Grid item xs={1} />\n                                            <Grid item xs={11} className='small-text'>\n                                                {(index2 + 10).toString(36) + '. ' + procedure.cptCode.label}\n                                            </Grid>\n                                            </>\n                                        );\n                                    })}\n                                    </>\n                                );\n                            })}\n                        </Grid>\n                    ) : null}\n                    {/* <div className='sub-section'> */}\n                    <div style={{paddingTop: '0.5rem'}} />\n                    <div className='header-2'>{'TOTAL: PHP ' + GlobalFunction.formatNumber(this.getTotalAailmentProcedureCost(), true)}</div>\n                {/* </div> */}\n                </div>\n                \n                <div className='sub-section'>\n                    <div className='light-text'>CREATED BY</div>\n                    <div className='small-text'>{ticket.createdBy.name}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>DATE AND TIME CREATED</div>\n                    <div className='small-text'>{GlobalFunction.toDateAndTime(ticket.dateCreated)}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>DATE AND TIME LAST UPDATED</div>\n                    <div className='small-text'>{GlobalFunction.toDateAndTime(ticket.dateUpdated)}</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>DATE AND TIME LAST ESCALATED</div>\n                    <div className='small-text'>{\"May 14, 2019 — 09:33:00 AM*\"}</div>\n                </div>\n                {/* <div className='sub-section'> */}\n                    \n                {/* </div> */}\n            </div>\n            <TextButton\n                        label='View More'\n                        onClick={() => {\n\n                        }} />\n            </>\n        )\n    }\n}","import * as React from 'react';\nimport { TableCell, TableRow } from '@material-ui/core';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\n\nimport { DropdownChoice, PartialTicketData } from 'Pages/CustomerCarePage/Models';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { TicketInfoModal } from './TicketInfoModal';\nimport { LabelDisplayedRowsArgs } from '@material-ui/core/TablePagination';\nimport { Loading } from 'Pages/CustomerCarePage/Components/Loading';\n\ninterface IProps {\n    memberId?: string;\n    clientId?: string;\n}\n\ninterface IStates {\n    urgency: number;\n    status: string;\n    ticketNo: string;\n    channel: string;\n    type: string;\n    specificType: string;\n    source: string;\n    assignee: string;\n    lastUpdate: string;\n    ticketListUpdated: boolean;\n    selectedTicketId?: string;\n}\n\nexport class ReviewTicketsSection extends React.Component<IProps, IStates> {\n\n    ticketChannels: DropdownChoice[];\n    ticketTypes: DropdownChoice[];\n    specificTypes: DropdownChoice[];\n    tickets: PartialTicketData[];\n\n    constructor(props: any) {\n        super(props);\n\n        this.ticketChannels = [\n            { value: '0', label: '' },\n            { value: '1', label: 'Call' },\n            { value: '2', label: 'SMS' },\n            { value: '3', label: 'Text' },\n            { value: '4', label: 'Email' }\n        ];\n\n        this.ticketTypes = [\n            { value: '0', label: '' },\n            { value: '1', label: 'Availment' },\n            { value: '2', label: 'Inquiry' }\n        ];\n\n        this.specificTypes = [\n            { value: '0', label: '' },\n            { value: '1', label: 'Outpatient Procedure' },\n            { value: '2', label: 'Inpatient' },\n            { value: '3', label: 'Emergency Room' },\n            { value: '4', label: 'Consultation' }\n        ];\n\n        this.state = {\n            urgency: 0,\n            status: '',\n            ticketNo: '',\n            channel: '',\n            type: '',\n            specificType: '',\n            source: '',\n            assignee: '',\n            lastUpdate: '',\n            ticketListUpdated: false,\n            selectedTicketId: undefined\n        }\n\n        this.tickets = [];\n    }\n\n    componentDidMount() {\n        API.get('customer-care/tickets',\n            (response) => {\n                this.tickets = response.map(ticket => {\n                    return {\n                        id: ticket._id,\n                        ticketNo: '---',\n                        urgency: (\n                            ticket.ticket_category.urgency === 'Low' ? 3 :\n                            ticket.ticket_category.urgency === 'Medium' ? 2 : \n                            ticket.ticket_category.urgency === 'High' ? 1 : 0),\n                        status: ticket.status,\n                        channel: ticket.received_via,\n                        type: ticket.ticket_category.ticket_type,\n                        specificType: ticket.ticket_category.specific_type,\n                        source: {\n                            value: ticket.received_from.toUpperCase(), \n                            label: (\n                                ticket.member_name ? ticket.member_name :\n                                ticket.corporate_client ? ticket.corporate_client :\n                                ticket.broker ? ticket.broker :\n                                ticket.hospital_name ? ticket.hospital_name : ''\n                            )\n                        },\n                        assignee: ticket.ticket_category.assign_to,\n                        lastUpdate: new Date(ticket.date_updated),\n                    }\n                });\n                this.setState({ticketListUpdated: true});\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    getFilteredTicketData = () => {\n        return (\n            this.tickets\n                .filter(ticket => \n                    this.state.urgency === 0 || \n                    isNaN(this.state.urgency) ||\n                    ticket.urgency === this.state.urgency)\n                .filter(ticket => \n                    this.state.status === '' || \n                    ticket.status\n                        .toLowerCase()\n                        .includes(this.state.status.toLowerCase()))\n                .filter(ticket => \n                    this.state.ticketNo === '' || \n                    ticket.ticketNo\n                        .toLowerCase()\n                        .includes(this.state.ticketNo.toLowerCase()))\n                .filter(ticket => \n                    this.state.channel === '' || \n                    ticket.channel\n                        .toLowerCase()\n                        .includes(this.state.channel.toLowerCase()))\n                .filter(ticket => \n                    this.state.type === '' || \n                    ticket.type\n                        .toLowerCase()\n                        .includes(this.state.type.toLowerCase()))\n                .filter(ticket => \n                    this.state.specificType === '' || \n                    ticket.specificType\n                        .toLowerCase()\n                        .includes(this.state.specificType.toLowerCase()))\n                .filter(ticket => \n                    this.state.source === '' || \n                    ticket.source.label\n                        .toLowerCase()\n                        .includes(this.state.source.toLowerCase()) ||\n                    ticket.source.value\n                        .toLowerCase()\n                        .includes(this.state.source.toLowerCase()))\n                .filter(ticket => \n                    this.state.assignee === '' || \n                    ticket.assignee\n                        .toLowerCase()\n                        .includes(this.state.assignee.toLowerCase()))\n                .filter(ticket => \n                    this.state.lastUpdate === '' || \n                    GlobalFunction.toShortDateString(ticket.lastUpdate)\n                        .toLowerCase()\n                        .includes(this.state.lastUpdate.toLowerCase()))\n        );\n    }\n\n    sortTickets(attrName: string, isAsc: boolean): void {\n        this.tickets.sort((a: PartialTicketData, b: PartialTicketData) => \n            (a[attrName].toString().toLowerCase() > b[attrName].toString().toLowerCase()) ? \n                (isAsc ? 1 : -1) : (isAsc ? -1 : 1)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Review Tickets</div>\n                <div className='sub-section' style={{overflowX: 'auto'}}>\n                    {this.state.ticketListUpdated ? (\n                        <CustomTable\n                            className='custom-table-selectable'\n                            rows={this.getFilteredTicketData()}\n                            renderHeader={() => this.renderTableHeader()}\n                            renderRow={(rowData: any, index: number) => \n                                this.renderTableRow(rowData, index)}\n                            onChangeInfo={(info: LabelDisplayedRowsArgs) => \n                                `${info.from}-${info.to} out of ${info.count} tickets`}\n                            labelRowsPerPage='Show'\n                            rowsPerPageOptions={[10, 25, 50]} />\n                    ) : (\n                        <Loading height='10rem'/>\n                    )}\n                </div>\n\n                {/* Modals */}\n                {this.state.selectedTicketId ? (\n                    <TicketInfoModal \n                        ticketId={this.state.selectedTicketId}\n                        onCloseButtonClicked={() => {\n                            this.setState({selectedTicketId: undefined});\n                        }} />\n                ) : null}\n                <div className='section' />\n            </div>\n        );\n    }\n\n\n\n\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            {this.renderHeaderColumn('urgency', 'Urgency')}\n            {this.renderHeaderColumn('status', 'Status')}\n            {this.renderHeaderColumn('ticketNo', 'Ticket ID')}\n            {this.renderHeaderColumn('channel', 'Channel')}\n            {this.renderHeaderColumn('type', 'Type')}\n            {this.renderHeaderColumn('specificType', 'Specific Type')}\n            {this.renderHeaderColumn('source', 'Source')}\n            {this.renderHeaderColumn('assignee', 'Assigned')}\n            {this.renderHeaderColumn('lastUpdate', 'Last Update')}\n            </>\n        );\n    }\n\n\n\n\n\n    renderTableRow = (ticket: PartialTicketData, index: number) => {\n        const backgroundColor = (index % 2 === 0 ? (\n                ticket.urgency === 1 ? '#FFF2F2' : '#FFFFFF'\n            ) : (\n                ticket.urgency === 1 ? '#F7ECEC' : '#F6F7FA'\n            ));\n\n        const urgencyColor = (\n            ticket.urgency === 3 ? '#3AB77D' :\n            ticket.urgency === 2 ? '#FAB435' :\n            ticket.urgency === 1 ? '#FD5451' : '')\n        \n        return (\n            <TableRow \n                style={{backgroundColor: backgroundColor}} \n                onClick={() => {\n                    this.setState({selectedTicketId: ticket.id});\n                }}>\n                <TableCell style={{textAlign: 'center', paddingLeft: 0}}>\n                    <div \n                        className='number-item' \n                        style={{display: 'inline-block', backgroundColor: urgencyColor}}>\n                        {ticket.urgency}\n                    </div>\n                </TableCell>\n                <TableCell>{ticket.status}</TableCell>\n                <TableCell>{ticket.ticketNo}</TableCell>\n                <TableCell>{ticket.channel}</TableCell>\n                <TableCell>{ticket.type}</TableCell>\n                <TableCell>{ticket.specificType}</TableCell>\n                <TableCell>\n                    <div className='text'>{ticket.source.label}</div>\n                    <div className='light-text' style={{fontSize: '9px'}}>\n                        {ticket.source.value}\n                    </div>\n                </TableCell>\n                <TableCell>{ticket.assignee}</TableCell>\n                <TableCell>{GlobalFunction.toDateAndTime(ticket.lastUpdate)}</TableCell>\n            </TableRow>\n        );\n    }\n\n\n\n    renderHeaderColumn(attrName: string, headerText: string): JSX.Element {\n        return (\n            <TableCell style={{minWidth: '150px'}}>\n                <span className='header-2'>{headerText}</span>\n                <div style={{float: 'right'}}>\n                    <IconButton \n                        icon={faSort} \n                        onClick={() => {\n                            this.sortTickets(attrName, true);\n                            this.setState({ticketListUpdated: true});\n                        }} />\n                </div>\n                <InputField\n                    value={this.state[attrName]}\n                    onChange={(value: string) => {\n                        this.setState(prevState => ({...prevState, [attrName]: value}));\n                    }} />\n            </TableCell>\n        );\n    }\n}\n\n\n","\nimport * as React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport './../style.scss';\nimport { LeftPanelSection } from '../LeftPanelSection/LeftPanelSection';\nimport { API } from './../API';\nimport { ConfinementSection } from './Components/ConfinementSection';\nimport { AvailmentSection } from './Components/AvailmentSection';\nimport { TicketInfoSection } from './Components/TicketInfoSection';\nimport { TicketData, MemberData, DropdownChoice, ConfinementDetails, InquiryData, AvailmentDetails, ConsultationDetails, ClientData } from '../Models';\nimport { InquirySection } from './Components/InquirySection';\nimport { Payloads } from '../Payloads';\nimport { ConsultationSection } from './Components/ConsultationSection';\nimport { Processmaker } from '../Processmaker';\nimport { EmergencyRoomSection } from './Components/EmergencyRoomSection';\nimport { TicketFooter } from '../TicketFooter';\nimport { Loading } from '../Components/Loading';\nimport { Snackbar } from '@material-ui/core';\nimport { GlobalFunction } from '../GlobalFunction';\nimport { CustomTabs } from '../Components/CustomTab';\nimport { ClientProfileSection } from './Components/ClientProfileSection/ClientProfileSection';\nimport { MemberProfileSection } from './Components/MemberProfileSection';\nimport { PartnerNetworkSection } from '../ResolveTicketPage/Components/PartnerNetworkSection';\nimport { CheckUtilizationSection } from '../ResolveTicketPage/Components/CheckUtilizationSection';\nimport { ReviewTicketsSection } from '../ResolveTicketPage/Components/ReviewTicketsSection';\nimport { CheckContractSection } from '../ResolveTicketPage/Components/CheckContractSection';\n\ninterface IProps {\n    history: any;\n}\n\ninterface IStates {\n    tabSelected: number;\n    createTicketAttemp: boolean;\n    isIcd10CodesLoaded: boolean;\n    isSaving: boolean;\n    loadedResources: number;\n    snackbarMessage: string | null;\n    lastSave?: Date;\n\n    /* Can save to tmp */\n    client?: ClientData;\n    member?: MemberData;\n    ticket: TicketData;\n    availment: AvailmentDetails;\n    confinement: ConfinementDetails;\n    consultation: ConsultationDetails;\n    inquiries: InquiryData[];\n}\n\nexport class CreateTicketPage extends React.Component<IProps, IStates> {\n\n    static RESOURCES_TO_LOAD = 1;\n\n    clientTabList = [\n        { value: 1, label: 'Ticket Details' }, \n        { value: 2, label: 'Client Profile' }, \n        { value: 3, label: 'Partner Network' }, \n        { value: 4, label: 'Exclusion' }, \n        { value: 5, label: 'Utilization' }, \n        { value: 6, label: 'Tickets' },  \n        { value: 7, label: 'Contract' }\n    ];\n\n    memberTabList = [\n        { value: 1, label: 'Ticket Details' }, \n        { value: 2, label: 'Member Profile' }, \n        /*\n        { value: 3, label: 'Partner Network' }, \n        { value: 4, label: 'Exclusion' }, \n        { value: 5, label: 'Utilization' }, \n        { value: 6, label: 'Tickets' },  \n        { value: 7, label: 'Contract' },\n        */\n    ];\n\n    icd10Codes: DropdownChoice[];\n    cptCodes: DropdownChoice[];\n    facilities: DropdownChoice[];\n    doctors: DropdownChoice[];\n    agents: DropdownChoice[];\n    \n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            tabSelected: 1,\n            createTicketAttemp: false,\n            isIcd10CodesLoaded: false,\n            isSaving: false,\n            snackbarMessage: null,\n            loadedResources: 0,\n\n            ticket: {\n                ticketChannel: 'Call',\n                transactionNo: '9999-9999',\n                ticketSource: '',\n                memberName: '',\n                clientName: '',\n                brokerName: '',\n                facility: { value: '', label: '' },\n                department: '',\n                callerName: '',\n                contactNo: '',\n                ticketType: '',\n                specificType: '',\n                urgency: 'High',\n                agent: { id: '', name: '' },\n                additionalNotes: '',\n                additionalFiles: [],\n                ticketNo: '',\n                pmCaseId: '',\n                status: 'Open',\n                createdBy: { \n                    id: localStorage['user_id'], \n                    name: `${localStorage['first_name']} ${localStorage['last_name']}` \n                },\n                dateCreated: new Date(),\n                dateUpdated: new Date(),\n                dateEscalated: null\n            },\n            availment: {\n                provider: { value: '', label: '' },\n                diagnoses: []\n            },\n            confinement: {\n                provider: { value: '', label: '' },\n                dateAdmitted: new Date(),\n                confinementKind: '',\n                roomType: '',\n                costPerDay: 0,\n                doctor: { value: '', label: '' },\n                initialDiagnosis: { value: '', label: '' },\n                amount: 0\n            },\n            consultation: {\n                provider: { value: '', label: '' },\n                diagnosis: { value: '', label: '' },\n                doctor: { value: '', label: '' },\n                notes: '',\n                assessmentRemarks: '',\n                assessmentType: 'Pending',\n                approvedAmount: 0\n            },\n            inquiries: []\n        };\n\n        this.facilities = [];\n        this.agents = [];\n        this.doctors = [];\n        this.cptCodes = [];\n        this.icd10Codes = [];\n    }\n\n    componentDidMount() {\n        API.get('facilities',\n            (response) => {\n                this.facilities = response.map(facility => {\n                    return { \n                        value: facility.facility_id,\n                        label: facility.name \n                    }\n                });\n            },\n            (error) => {\n                console.log(error);\n            });\n\n\n\n        const tempIcd10Codes = localStorage.getItem('icd10_codes');\n        if (!tempIcd10Codes) {\n            API.get('icd10-codes?filter[limit]=1000',\n                (response) => {\n                    this.icd10Codes = response.map(icd10Code => {\n                        return { \n                            value: icd10Code.full_code,\n                            label: icd10Code.abbreviated_description \n                        };\n                    });\n                    localStorage.setItem('icd10_codes', JSON.stringify(this.icd10Codes));\n                    this.setState({isIcd10CodesLoaded: true});\n                },\n                (error) => {\n                    console.log(error);\n                });\n        } else {\n            this.icd10Codes = JSON.parse(tempIcd10Codes);\n            console.log(\"Using the local copy of ICD10 Codes\");\n        }\n        \n\n\n        const tempCptCodes = localStorage.getItem('cpt_codes');\n        if (!tempCptCodes) {\n            API.get('cpts',\n                (response) => {\n                    this.cptCodes = response.map(cptCode => {\n                        return {\n                            value: cptCode.code.toString(),\n                            label: cptCode.label \n                        };\n                    });\n                    localStorage.setItem('cpt_codes', JSON.stringify(this.cptCodes));\n                }, \n                (error) => {\n                    console.log(error);\n                });\n        } else {\n            this.cptCodes = JSON.parse(tempCptCodes);\n            console.log(\"Using the local copy of CPT Codes\");\n        }\n        \n\n\n        API.get('doctors',\n            (response) => {\n                this.doctors = response.map(doctor => {\n                    return {\n                        value: doctor._id,\n                        label: ('Dr. ' + doctor.first_name +  ' ' + doctor.last_name),\n                        params: [doctor.type]\n                    };\n                });\n            }, \n            (error) => {\n                console.log(error);\n            });\n\n        API.get(`tmp?filter[where][and][0][user_id]=${localStorage['user_id']}&filter[where][and][1][module]=Customer%20Care`,\n            (response) => {\n                console.debug(response);\n                response = response.filter(item => item.process === 'Create Ticket');\n                if (response.length > 0) {\n                    this.setState({\n                        lastSave: new Date(response[0].timestamp),\n                        member: response[0].data.member,\n                        ticket: response[0].data.ticket,\n                        availment: response[0].data.availment,\n                        confinement: response[0].data.confinement,\n                        consultation: response[0].data.confinement,\n                        inquiries: response[0].data.inquiries\n                    });\n                }\n                this.setState({loadedResources: this.state.loadedResources + 1});\n            },\n            (error) => {\n                console.log(error);\n                this.setState({loadedResources: this.state.loadedResources + 1});\n            });\n    }\n\n    uploadFiles = (nextAction: Function) => {\n        let hasFiles = false;\n\n        const files = new FormData();\n        this.state.ticket.additionalFiles.forEach(file => {\n            if (!file['field']) {\n                files.append(`supported_documents`, file);\n                hasFiles = true;\n            }\n        });\n\n        this.setState({isSaving: true});\n\n        if (hasFiles) {\n            API.postFormData('tmp/upload?path=customer-care', files,\n                (uploadResponse) => {\n                    nextAction(uploadResponse);\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        isSaving: false,\n                        snackbarMessage: 'Failed to upload files.'\n                    });\n                });\n        } else {\n            nextAction([]);\n        }\n    }\n\n    submitTicket = () => {\n\n        this.setState({createTicketAttemp: true});\n        const ticket = this.state.ticket;\n        const confinement = this.state.confinement;\n        const availment = this.state.availment;\n        const consultation = this.state.consultation;\n        const inquiries = this.state.inquiries;\n        \n        if (!this.state.member && !this.state.client) return;\n\n        /* Confinement Details must have all contents */\n        if (ticket.ticketType === 'Availment' && ticket.specificType === 'Inpatient') {\n            if (confinement.provider.value === '' ||\n                confinement.confinementKind === '' ||\n                confinement.costPerDay === 0 ||\n                confinement.doctor.value === '' ||\n                confinement.initialDiagnosis.value === '' ||\n                confinement.roomType === '') {\n                return;\n            }\n        }\n\n        this.setState({isSaving: true});\n\n        this.uploadFiles((uploadResponse) => {\n            const payload = Payloads.getPostTicketPayload(\n                ticket, \n                \n                !uploadResponse.error && uploadResponse.length > 0 ? (\n                    this.state.ticket.additionalFiles\n                        .filter(file => file['field'])\n                        .concat(uploadResponse)\n                ) : (\n                    this.state.ticket.additionalFiles\n                ),\n                this.state.member,\n                this.state.client,\n                confinement, \n                availment, \n                inquiries, \n                consultation);\n            API.post('customer-care/tickets', JSON.stringify(payload),\n                (postTicketResponse) => { \n                    console.log(postTicketResponse);\n                    if (postTicketResponse['_id']) {\n                        console.log('Ticket No: '+postTicketResponse['id']);\n                        this.submitTicketProcessMaker(postTicketResponse['_id'], this.state.ticket);\n                    } else {\n                        this.setState({\n                            isSaving: false,\n                            snackbarMessage: 'Failed to create ticket.'\n                        });\n                    }  \n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        isSaving: false,\n                        snackbarMessage: 'Failed to create ticket.'\n                    });\n                });\n        });\n    }\n\n    submitTicketProcessMaker = (ticketId: string, ticket: TicketData) => {\n        let is_availment = false;\n        if (ticket.ticketType === 'Availment') {\n            is_availment=true;\n        }\n        let trigger_id = \"3905447335db2a32daafd33048658514\"; //should refer to redux createtickettrigger_id!!!\n        let body = {\n            \"pro_uid\" : \"1538417025dae8dae9ff7a9016454302\", //should refer to redux createticketproject_id!!!\n            \"tas_uid\":\"6092309955dae8db0a85907021073537\",   //should refer to redux createticketstarttask_id!!!\n            \"ticket_no\": ticketId,\n            \"can_be_resolved_imm\": 0,\n            \"is_availment\":is_availment\n        };\n        console.log('Body:', body);\n\n        Processmaker.post('cases', body,\n            (casesResponse) => {\n                if (casesResponse['app_uid']) {\n                    processmakerExecuteTrigger(\n                        casesResponse['app_uid'], \n                        casesResponse['app_number'],\n                        trigger_id\n                    );\n                }\n            }, \n            (error) => {\n                console.log(error);\n                this.setState({\n                    isSaving: false,\n                    snackbarMessage: 'Failed to create ticket.'\n                });\n            }\n        );\n        \n        const processmakerExecuteTrigger = (appUID: string, appNo: string, triggerId: string) => {\n            Processmaker.put(`cases/${appUID}/execute-trigger/${triggerId}`, body,\n                (triggerResponse) => {\n                    console.log('Trigger Response: ', triggerResponse);\n                    processmakerVariable(appUID, appNo);\n                }, \n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        isSaving: false,\n                        snackbarMessage: 'Failed to create ticket.'\n                    });\n                });\n        }\n\n        const processmakerVariable = (appUID: string, appNo: string) => {\n            Processmaker.put(`cases/${appUID}/variable`, body,\n                (variableResponse) => {\n                    console.log('Set Variable Response: ', variableResponse);\n                    patchCaseUID(appUID, appNo);\n                }, \n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        isSaving: false,\n                        snackbarMessage: 'Failed to create ticket.'\n                    });\n                });\n        }\n\n        const patchCaseUID = (appUID: string, appNo: string) => {\n            API.patch(`customer-care/tickets/${ticketId}`, { pmaker_case_uid: appUID },\n                (patchTicketResponse) => {\n                    console.log('Patch Response: ', patchTicketResponse);\n                    redirectToNextPage(appUID, appNo);\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        isSaving: false,\n                        snackbarMessage: 'Failed to create ticket.'\n                    });\n                });\n        }\n\n        const redirectToNextPage = (appUID: string, appNo: string) => {\n            const ticketNo = GlobalFunction.generateTicketNumber(ticket.ticketType, ticket.specificType, appNo);\n            const url = \n                ticket.ticketType === 'Inquiry' || ticket.specificType === 'Inpatient' ? (\n                    `#/customer-care/update-ticket/${appUID}/${ticketNo}/${ticketId}`\n                ) : (\n                    `#/customer-care/resolve-ticket/${appUID}/${ticketNo}/${ticketId}`\n                );\n            this.props.history.push(url);\n            window.location.reload();\n            this.setState({isSaving: false});\n        }\n    }\n\n    saveForNow = () => {\n        this.uploadFiles((uploadResponse) => {\n            console.log(uploadResponse);\n            const payload = {\n                user_id: localStorage['user_id'],\n                module: 'Customer Care',\n                process: 'Create Ticket',\n                timestamp: new Date(),\n                data: {\n                    member: this.state.member,\n                    ticket: {\n                        ...this.state.ticket,\n                        additionalFiles: !uploadResponse.error && uploadResponse.length > 0 ? (\n                            this.state.ticket.additionalFiles\n                                .filter(file => file['field'])\n                                .concat(uploadResponse)\n                        ) : (\n                            this.state.ticket.additionalFiles\n                        )\n                    },\n                    availment: this.state.availment,\n                    confinement: this.state.confinement,\n                    consultation: this.state.confinement,\n                    inquiries: this.state.inquiries\n                }\n            };\n            console.log('Saving this: ', payload);\n            API.post('tmp', JSON.stringify(payload),\n                (response) => {\n                    console.log(response);\n                    if (response._id) {\n                        this.setState({\n                            isSaving: false,\n                            snackbarMessage: 'Progress saved.',\n                            lastSave: new Date()\n                        });\n                    } else {\n                        this.setState({\n                            isSaving: false,\n                            snackbarMessage: 'Failed to save progress.'\n                        });\n                    }\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        isSaving: false,\n                        snackbarMessage: 'Failed to save progress.'\n                    });\n                });\n        });\n    }\n\n    render(): JSX.Element {\n        \n        return (\n            <>\n            <Grid container className='customer-care-main'>\n\n                {this.state.loadedResources !== CreateTicketPage.RESOURCES_TO_LOAD || this.state.isSaving ? (\n                    <div \n                        style={{\n                            backgroundColor: '#00000055', \n                            zIndex: 100, \n                            position: 'fixed', \n                            width: '100%', \n                            height: '100%'}}>\n                        <Loading height='15rem' size={100}/>\n                    </div>\n                    \n                ) : (null)}\n\n                <Snackbar\n\t\t\t        anchorOrigin={{vertical: 'top',horizontal: 'right'}}\n\t\t\t        open={this.state.snackbarMessage ? true : false}\n\t\t\t        autoHideDuration={6000}\n\t\t\t        onClose={() => {\n                        this.setState({snackbarMessage: null});\n                    }}\n                    message={this.state.snackbarMessage} />\n\n                <LeftPanelSection \n                    client={this.state.client}\n                    member={this.state.member}\n                    ticketStatus='Create'\n                    promptChooseMember={this.state.createTicketAttemp}\n                    onUpdateMemberStateChange={(member: MemberData) => {\n                        if (member) {\n                            const hasActiveContract = (\n                                member.contract && \n                                member.contract.status === 'Active'\n                            );\n                            if (!hasActiveContract && this.state.ticket.ticketType === 'Availment') {\n                                this.state.ticket.ticketType = '';\n                                this.setState({ticket: Object.assign({}, this.state.ticket)});\n                            }\n                        }\n\n                        this.setState({member: member});\n                    }}\n                    onUpdateClientStateChange={(client: ClientData) => {\n                        this.setState({client: client});\n                    }} />\n\n                {this.state.client ? (\n                    <>\n                    <CustomTabs \n                        tabList={this.clientTabList}\n                        selectedTab={this.state.tabSelected}\n                        setSelectedTab={(index: number) => {\n                            this.setState({tabSelected: index});\n                        }} />\n                    <div className={`main-content${this.state.tabSelected === 1 ? '-flex' : ''}`}>\n                        {this.state.tabSelected === 1 ? (\n                            this.renderMainContent()\n                        ) : this.state.tabSelected === 2 ? (\n                            <ClientProfileSection clientId={this.state.client.id} history={this.props.history} />\n                        ) : this.state.tabSelected === 3 ? (\n                            <PartnerNetworkSection clientId={this.state.client.id} />\n                        ) : this.state.tabSelected === 4 ? (\n                            <div className='header'>TAB 3</div>\n                        ) : this.state.tabSelected === 5 ? (\n                            <CheckUtilizationSection />\n                        ) : this.state.tabSelected === 6 ? (\n                            <ReviewTicketsSection clientId={this.state.client.id} />\n                        ) : this.state.tabSelected === 7 ? (\n                            <CheckContractSection clientId={this.state.client.corporateAccountNo} />\n                        ) : null}\n                    </div>\n                    </>\n                ) : this.state.member ? (\n                    <>\n                    <CustomTabs \n                        tabList={this.memberTabList}\n                        selectedTab={this.state.tabSelected}\n                        setSelectedTab={(index: number) => {\n                            this.setState({tabSelected: Math.min(index, 3)});\n                        }} />\n                    <div className={`main-content${this.state.tabSelected === 1 ? '-flex' : ''}`}>\n                        {this.state.tabSelected === 1 ? (\n                            this.renderMainContent()\n                        ) : this.state.tabSelected === 2 ? (\n                            <MemberProfileSection memberNumber={this.state.member.memberId} history={this.props.history} />\n                        ) : this.state.tabSelected === 3 ? (\n                            <PartnerNetworkSection clientId={(this.state.member.client && this.state.member.client.id ? this.state.member.client.id : '')}/>\n                        ) : this.state.tabSelected === 4 ? (\n                            <div className='header'>TAB 3</div>\n                        ) : this.state.tabSelected === 5 ? (\n                            <CheckUtilizationSection />\n                        ) : this.state.tabSelected === 6 ? (\n                            <div className='header'>TAB 5</div>\n                        ) : this.state.tabSelected === 7 ? (\n                            <div className='header'>TAB 6</div>\n                        ) : null}\n                    </div>\n                    </>\n                ) : (\n                    <div className='main-content-flex'>\n                        {this.renderMainContent()}\n                    </div>\n                )}   \n            </Grid>\n\n            <TicketFooter \n                lastSave={this.state.lastSave}\n                onSaveForNow={() => {\n                    this.saveForNow();\n                }} \n                onSubmitTicket={() => {\n                    this.submitTicket();\n                }} />\n            </>\n        );\n    }\n\n    renderMainContent(): JSX.Element {\n        return (\n            <>\n            <TicketInfoSection \n                member={this.state.member}\n                client={this.state.client}\n                ticket={this.state.ticket} \n                facilities={this.facilities}\n                agents={this.agents}\n                createTicketAttemp={this.state.createTicketAttemp}\n                refreshTicketState={() => {\n                    this.setState({ticket: Object.assign({}, this.state.ticket)});\n                }} />\n\n            {this.state.ticket.ticketType === 'Availment' ? (\n            \n                this.state.ticket.specificType === 'Outpatient Procedure' ? (  \n                    <AvailmentSection\n                        availment={this.state.availment}\n                        facilities={this.facilities}\n                        doctors={this.doctors}\n                        icd10Codes={this.icd10Codes}\n                        cptCodes={this.cptCodes}\n                        createTicketAttemp={this.state.createTicketAttemp}\n                        refreshAvailmentState={() => {\n                            this.setState({availment: Object.assign({}, this.state.availment)});\n                        }} />\n\n                ) : this.state.ticket.specificType === 'Inpatient' ? ( \n                    <ConfinementSection\n                        confinement={this.state.confinement}\n                        facilities={this.facilities}\n                        doctors={this.doctors}\n                        cptCodes={this.icd10Codes}\n                        createTicketAttemp={this.state.createTicketAttemp}\n                        refreshConfinementState={() => {\n                            this.setState({confinement: this.state.confinement});\n                        }} />\n                ) : this.state.ticket.specificType === 'Emergency Room' ? (\n                    <EmergencyRoomSection\n                        availment={this.state.availment}\n                        facilities={this.facilities}\n                        doctors={this.doctors}\n                        icd10Codes={this.icd10Codes}\n                        cptCodes={this.cptCodes}\n                        createTicketAttemp={this.state.createTicketAttemp}\n                        refreshAvailmentState={() => {\n                            this.setState({availment: this.state.availment});\n                        }} />\n                    \n                ) : this.state.ticket.specificType === 'Consultation' ? ( \n                    <ConsultationSection\n                        consultation={this.state.consultation}\n                        facilities={this.facilities}\n                        doctors={this.doctors}\n                        icd10Codes={this.icd10Codes}\n                        createTicketAttemp={this.state.createTicketAttemp}\n                        refreshConsultationState={() => {\n                            this.setState({consultation: this.state.consultation});\n                        }} />\n                ) : null\n\n            ) : this.state.ticket.ticketType === 'Inquiry' ? (\n                <InquirySection\n                    inquiries={this.state.inquiries}\n                    refreshInquiryState={() => {\n                        this.setState({inquiries: this.state.inquiries});\n                    }} />\n            ) : null}\n            </>\n        );\n    }\n}","\nimport * as React from 'react';\n\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { Grid, TableCell, TableRow } from '@material-ui/core';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { UpdateData, AccommodationData, DiagnosisData, PhysicianData, ProcedureData, ItemData } from '../UpdateTicketProps';\nimport { DropdownChoice } from 'Pages/CustomerCarePage/Models';\n\ninterface IProps {\n    ticketNo: string;\n    updates: UpdateData[];\n    accommodations: AccommodationData[];\n    diagnoses: DiagnosisData[];\n    physicians: PhysicianData[];\n    procedures: ProcedureData[];\n    items: ItemData[];\n\n    provider: DropdownChoice;\n    dateAdmitted: Date;\n    confinementKind: string;\n\n    coverage: DropdownChoice;\n    philhealthAmount: number;\n    finalBill: number;\n    dischargeDate: Date | null;\n    setTabSelected: (value: number) => void;\n}\n\nexport class SummarySection extends React.Component<IProps> {\n\n    getTotalAccommodationCost = () => {\n        let totalCost = 0;\n        this.props.accommodations.map(accommodation => {\n            totalCost += accommodation.costPerDay * accommodation.days;\n        });\n        return totalCost;\n    }\n\n    getTotalPhysicianCost = () => {\n        let totalCost = 0;\n        this.props.physicians.map(physician => {\n            totalCost += physician.amount;\n        });\n        return totalCost;\n    }\n\n    getTotalProcedureCost = () => {\n        let totalCost = 0;\n        this.props.procedures.map(procedure => {\n            totalCost += procedure.amount;\n        });\n        return totalCost;\n    }\n\n    getTotalItemCost = () => {\n        let totalCost = 0;\n        this.props.items.map(item => {\n            totalCost += item.amount;\n        });\n        return totalCost;\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='section'>\n                <div className='header-1'>Review Summary</div>\n                {this.renderSection('UPDATES', 'update', 2,\n                    <CustomTable\n                        className='custom-table'\n                        rows={this.props.updates}\n                        renderHeader={() => {\n                            return (\n                                <>\n                                <TableCell>Remarks</TableCell>\n                                <TableCell style={{width: '200px'}}>As of Date</TableCell>\n                                <TableCell style={{textAlign: 'right', width: '200px'}}>Running Hospital Bill</TableCell>\n                                </>\n                            );\n                        }}\n                        renderRow={(update: UpdateData, index: number) => {\n                            const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                            return (\n                                <TableRow style={{backgroundColor: backgroundColor}}>\n                                    <TableCell>{update.remarks}</TableCell>\n                                    <TableCell>{GlobalFunction.toCommonDateString(update.date)}</TableCell>\n                                    <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(update.hospitalBill, true)} PHP`}</TableCell>\n                                </TableRow>\n                            );\n                        }} />\n                )}\n                \n                {this.renderSection('ROOM ACCOMMODATIONS', 'room', 3, \n                    <CustomTable\n                        className='custom-table'\n                        rows={this.props.accommodations}\n                        renderHeader={() => {\n                            return (\n                                <>\n                                <TableCell>Room Type</TableCell>\n                                <TableCell style={{textAlign: 'right', width: '200px'}}>No. of Days</TableCell>\n                                <TableCell style={{textAlign: 'right', width: '300px'}}>Cost Per Day</TableCell>\n                                </>\n                            );\n                        }}\n                        renderRow={(accommodation: AccommodationData, index: number) => {\n                            const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                            return (\n                                <TableRow style={{backgroundColor: backgroundColor}}>\n                                    <TableCell>{accommodation.roomType}</TableCell>\n                                    <TableCell style={{textAlign: 'right'}}>{accommodation.days}</TableCell>\n                                    <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(accommodation.costPerDay, true)} PHP`}</TableCell>\n                                </TableRow>\n                            );\n                        }} />,\n                        this.getTotalAccommodationCost()\n                )}\n\n                {this.renderSection('DIAGNOSES', 'diagnosis', 4, \n                    <CustomTable\n                        className='custom-table'\n                        rows={this.props.diagnoses}\n                        renderHeader={() => {\n                            return (\n                                <>\n                                <TableCell style={{width: '300px'}}>Diagnosis</TableCell>\n                                <TableCell>Remarks</TableCell>\n                                <TableCell style={{textAlign: 'center', width: '100px'}}>Type</TableCell>\n                                <TableCell style={{textAlign: 'center', width: '175px'}}>Primary Diagnosis?</TableCell>\n                                </>\n                            );\n                        }}\n                        renderRow={(diagnosis: DiagnosisData, index: number) => {\n                            const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                            return (\n                                <TableRow style={{backgroundColor: backgroundColor}}>\n                                    <TableCell>{`${diagnosis.diagnosis.value} - ${diagnosis.diagnosis.label}`}</TableCell>\n                                    <TableCell>{diagnosis.remarks}</TableCell>\n                                    <TableCell style={{textAlign: 'center'}}>{diagnosis.isFinal ? 'Final' : 'Initial'}</TableCell>\n                                    <TableCell style={{textAlign: 'center'}}>{diagnosis.isPrimary ? 'Yes' : 'No'}</TableCell>\n                                </TableRow>\n                            );\n                        }} />\n                )}\n                \n                {this.renderSection('PHYSICIANS', 'physicians', 5, \n                    <CustomTable\n                        className='custom-table'\n                        rows={this.props.physicians}\n                        renderHeader={() => {\n                            return (\n                                <>\n                                <TableCell style={{width: '250px'}}>Specialization - Doctor Name</TableCell>\n                                <TableCell style={{width: '100px'}}>Diagnosis</TableCell>\n                                <TableCell>Remarks</TableCell>\n                                <TableCell style={{textAlign: 'right', width: '125px'}}>No. of Visits</TableCell>\n                                <TableCell style={{textAlign: 'right', width: '200px'}}>Amount</TableCell>\n                                </>\n                            );\n                        }}\n                        renderRow={(physician: PhysicianData, index: number) => {\n                            const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                            return (\n                                <TableRow style={{backgroundColor: backgroundColor}}>\n                                    {physician.physician.params? (\n                                        <TableCell>\n                                            <div className='text'>{`${physician.physician.params[0]} - ${physician.physician.label}`}</div>\n                                            <div className='light-text'>{`${physician.physician.params[1]} Physician`}</div>\n                                        </TableCell>\n                                    ) : ''}\n                                    <TableCell>{physician.diagnosis.value}</TableCell>\n                                    <TableCell>{physician.remarks}</TableCell>\n                                    <TableCell style={{textAlign: 'right'}}>{physician.visits}</TableCell>\n                                    <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(physician.amount, true)} PHP`}</TableCell>\n                                </TableRow>\n                            );\n                        }} />,\n                        this.getTotalPhysicianCost()\n                )}\n                \n                {this.renderSection('PROCEDURES', 'procedures', 6,\n                    <CustomTable\n                        className='custom-table'\n                        rows={this.props.procedures}\n                        renderHeader={() => {\n                            return (\n                                <>\n                                <TableCell style={{width: '200px'}}>Procedure</TableCell>\n                                <TableCell style={{width: '100px'}}>Diagnosis</TableCell>\n                                <TableCell style={{width: '175px'}}>Doctor</TableCell>\n                                <TableCell style={{width: '150px'}}>Date</TableCell>\n                                <TableCell style={{minWidth: '100px'}}>Remarks</TableCell>\n                                <TableCell style={{textAlign: 'right', width: '150px'}}>Amount</TableCell>\n                                </>\n                            );\n                        }}\n                        renderRow={(procedure: ProcedureData, index: number) => {\n                            const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                            return (\n                                <TableRow style={{backgroundColor: backgroundColor}}>\n                                    <TableCell>{`${procedure.procedure.value} - ${procedure.procedure.label}`}</TableCell>\n                                    <TableCell>{procedure.diagnosis.value}</TableCell>\n                                    <TableCell>{procedure.physician.label}</TableCell>\n                                    <TableCell>{GlobalFunction.toCommonDateString(procedure.date)}</TableCell>\n                                    <TableCell>{procedure.remarks}</TableCell>\n                                    <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(procedure.amount, true)} PHP`}</TableCell>\n                                </TableRow>\n                            );\n                        }} />,\n                        this.getTotalProcedureCost()\n                )}\n                \n                {this.renderSection('OTHER DETAILS', 'item', 8, \n                    <CustomTable \n                        className='custom-table'\n                        rows={this.props.items}\n                        renderHeader={() => {\n                            return (\n                                <>\n                                <TableCell>Item</TableCell>\n                                <TableCell style={{width: '250px'}}>Type</TableCell>\n                                <TableCell style={{textAlign: 'right', width: '250px'}}>Amount</TableCell>\n                                </>\n                            );\n                        }}\n                        renderRow={(item: ItemData, index: number) => {\n                            const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                            return (\n                                <TableRow style={{backgroundColor: backgroundColor}}>\n                                    <TableCell>{item.name}</TableCell>\n                                    <TableCell>{item.type.label}</TableCell>\n                                    <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(item.amount, true)} PHP`}</TableCell>\n                                </TableRow>\n                            );\n                        }} />,\n                        this.getTotalItemCost()\n                )}\n                \n                <div className='sub-section'>\n                    <Grid container>\n                        <Grid item xs={4}>\n                            <div className='header-2'>PHILHEALTH</div>\n                            <div className='sub-section'>\n                                <div className='light-text'>COVERAGE</div>\n                                <div className='small-text'>{this.props.coverage.label}</div>\n                            </div>\n                            <div className='sub-section'>\n                                <div className='light-text'>AMOUNT</div>\n                                <div className='small-text'>{GlobalFunction.formatNumber(this.props.philhealthAmount, true) + \" PHP\"}</div>\n                            </div>\n                            <div className='sub-section'>\n                                <div className='light-text'>TICKET NUMBER</div>\n                                <div className='small-text'>{this.props.ticketNo}</div>\n                            </div>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <div className='header-2'>CONFINEMENT</div>\n                            <div className='sub-section'>\n                                <div className='light-text'>PROVIDER</div>\n                                <div className='small-text'>{this.props.provider.value + ' - ' + this.props.provider.label}</div>\n                            </div>\n                            <div className='sub-section'>\n                                <div className='light-text'>DATE ADMITTED</div>\n                                <div className='small-text'>{GlobalFunction.toCommonDateString(this.props.dateAdmitted)}</div>\n                            </div>\n                            <div className='sub-section'>\n                                <div className='light-text'>KIND OF CONFINEMENT</div>\n                                <div className='small-text'>{this.props.confinementKind}</div>\n                            </div>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <div className='header-2'>DISCHARGE DETAILS</div>\n                            <div className='sub-section'>\n                                <div className='light-text'>FINAL HOSPITAL BILL AMOUNT</div>\n                                <div className='small-text'>{GlobalFunction.formatNumber(this.props.finalBill, true) + ' PHP'}</div>\n                            </div>\n                            <div className='sub-section'>\n                                <div className='light-text'>DISCHARGE DATE</div>\n                                <div className='small-text'>\n                                    {this.props.dischargeDate ? (\n                                        GlobalFunction.toCommonDateString(this.props.dischargeDate)\n                                    ) : '---'}\n                                </div>\n                            </div>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <TextButton \n                                label='Edit PhilHealth' \n                                onClick={() => {\n                                    window.scroll(0, -window.pageYOffset);\n                                    this.props.setTabSelected(7);\n                                }}/>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <TextButton \n                                label='Edit Confinement Details' \n                                onClick={() => {\n                                    window.scroll(0, -window.pageYOffset);\n                                    this.props.setTabSelected(3);\n                                }}/>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <TextButton\n                                label='Edit Discharge Details' \n                                onClick={() => {\n                                    window.scroll(0, -window.pageYOffset);\n                                    this.props.setTabSelected(7);\n                                }}/>\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderSection(headerName: string, miniText: string, tabIndex: number, table: JSX.Element, totalValue?: number): JSX.Element {\n        return (\n            <div className='sub-section'>\n                <div style={{float: 'right'}}>\n                    <TextButton \n                        label={`Add / Edit ${miniText}`} \n                        onClick={() => {\n                            window.scroll(0, -window.pageYOffset);\n                            this.props.setTabSelected(tabIndex);\n                        }}/>\n                </div>\n                <div className='header-2'>{headerName}</div>\n                {table}\n                {totalValue ? (\n                    <div className='sub-section'>\n                        <div style={{float: 'right'}}>\n                            <span className='small-text'>TOTAL AMOUNT</span>\n                            <span style={{marginLeft: '1rem'}} />\n                            <span className='header-2'>\n                                {GlobalFunction.formatNumber(totalValue, true) + ' PHP'}\n                            </span>\n                        </div>\n                </div>\n                ) : null}\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\nimport './../../Components/component-style.scss';\nimport { faPen, faMinusCircle, faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton } from '../../Components/IconButton';\n\ninterface IProps {\n    className: string;\n    placeholder: string;\n    cols: string[];\n    rows: string[][] | any;\n    defaultRows?: number;\n\n    onSaveEditRow: (rowIndex: number, value: any) => void;\n    onDeleteRow: (rowIndex: number) => void; \n\n    /* \n     * Use this to stylize the column cells.\n     * rowIndex: the row index you want to style.\n     * colIndex: the column index you want to style.\n     * value: give you control to manipulate the value.\n     */\n    onFormat?: (rowIndex: number, colIndex: number, value: any) => JSX.Element;\n\n    /*\n     * Use this to stylize the column headers.\n     * colIndex: the column index you want to style.\n     * name: the header name at will appear.\n     */\n    onHeaderFormat?: (colIndex: number, name: string) => JSX.Element;\n\n    /* \n     * Use this when you want to stylize the column cell edit field\n     * colIndex: the column index you want to style.\n     * value: give you control to manipulate the value.\n     * onChange: a function called when user tried to type/input.\n     * - value: \n     */\n    editField: (colIndex: number, value: any, onChange: (value: any) => void) => JSX.Element;\n}\n\ninterface IStates {\n    rowToEdit: number;\n    data: any;\n}\n\nexport class CRUDTable extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            rowToEdit: -1,\n\n            data: {}\n        }\n    }\n\n    handleOnChange = (attrName: string) => (value: any) => {\n        this.setState(prevState => ({\n            data: {\n                ...prevState.data,\n                [attrName]: value\n            }\n        }));\n    }\n\n    renderCell(row: number, column: number, attrName: string, value: any): JSX.Element {\n        return (\n            <TableCell key={column}>\n                {this.state.rowToEdit === row ? (\n                    this.props.editField ? this.props.editField(column, this.state.data[attrName], this.handleOnChange(attrName)) : value  \n                ) : (\n                    this.props.onFormat ? this.props.onFormat(row, column, value) : value\n                )}\n            </TableCell>\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <>\n            <div className='header-2'>{this.props.placeholder}</div>\n            <Table className={(this.props.className ? this.props.className : '') + ' table'}>\n                <TableHead>\n                    <TableRow>\n                        {this.props.cols.map((colName, index) => {\n                            return (\n                                this.props.onHeaderFormat ? (\n                                    this.props.onHeaderFormat(index, colName)\n                                ) : (\n                                    <TableCell key={index}>{colName}</TableCell>\n                                )\n                            );\n                        })}\n                        <TableCell className='last-column'>\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {this.props.rows.map((row, index1) => {\n                        const backgroundColor = (index1 % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                        return (\n                            <TableRow style={{backgroundColor: backgroundColor}} key={index1}>\n                                {Object.keys(row).map((attrName, index2) => {\n                                    return (this.renderCell(index1, index2, attrName, row[attrName]));\n                                })}\n                                <TableCell className='last-column'>\n                                    {this.state.rowToEdit !== index1 ? (\n                                        <>\n                                        <div style={{display: 'inline-block', paddingRight: '0.5rem'}}>\n                                            <IconButton icon={faPen} onClick={() => {\n                                                this.setState({rowToEdit: index1});\n                                                this.setState({data: row});\n                                            }} />\n                                        </div>\n                                        <div style={{display: 'inline-block'}}>\n                                            <IconButton icon={faMinusCircle} onClick={() => {\n                                                this.props.onDeleteRow(index1)\n                                            }} />\n                                        </div>\n                                        </>\n                                    ) : ( \n                                        <>\n                                        <div style={{display: 'inline-block', paddingRight: '0.5rem'}}>\n                                            <IconButton icon={faCheckCircle} onClick={() => {\n                                                this.props.onSaveEditRow(index1, this.state.data);\n                                                this.setState({rowToEdit: -1});\n                                            }} />\n                                        </div>\n                                        <div style={{display: 'inline-block'}}>\n                                            <IconButton icon={faTimesCircle} onClick={() => {\n                                                this.setState({rowToEdit: -1});\n                                            }} />\n                                        </div>\n                                        </>\n                                    )}\n                                </TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { Grid, TableCell } from '@material-ui/core';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\n\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DatePicker } from 'Pages/CustomerCarePage/Components/DatePicker';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { DetailedNumberField } from 'Pages/CustomerCarePage/Components/DetailedNumberField';\nimport { UpdateData } from '../UpdateTicketProps';\n\nimport { CRUDTable } from './CRUDTable';\nimport { CustomCheckbox } from 'Pages/CustomerCarePage/Components/CustomCheckbox';\nimport { ConfinementDetails } from '../UpdateTicketPage';\n\ninterface IProps {\n    confinement: ConfinementDetails;\n    updates: UpdateData[];\n    state: UpdateData;\n    refreshUpdatesState: () => void;\n}\n\nexport class UpdateSection extends React.Component<IProps> {\n\n    constructor(props: IProps) {\n        super(props);\n    }\n\n    onFormatTableHeader = (colIndex: number, value: any) => {\n        return (\n            colIndex === 2 ? (\n                <TableCell style={{textAlign: 'right', minWidth: '200px'}}>{value}</TableCell>\n            ) : (\n                <TableCell style={{minWidth: '150px'}}>{value}</TableCell>\n            )\n        );\n    }\n\n    onFormatCRUDTable = (colIndex: number, value: any) => {\n        return (\n            colIndex === 1 ? (\n                <div>{GlobalFunction.toCommonDateString(value)}</div>\n            ) : colIndex === 2 ? (\n                <div style={{textAlign: 'right'}}>\n                    {GlobalFunction.formatNumber(value, true) + ' PHP'}\n                </div>\n            ) : (value)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Add Update</div>\n                <div className='sub-section'>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <InputField \n                                placeholder='Remarks'\n                                value={this.props.state.remarks}\n                                error={this.props.state.remarks === ''}\n                                charLimit={100}\n                                onChange={(value: string) => {\n                                    this.props.state.remarks = value;\n                                    this.props.refreshUpdatesState();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <DatePicker \n                                placeholder='As of Date'\n                                value={this.props.state.date}\n                                onChange={(value: Date) => {\n                                    this.props.state.date = value;\n                                    this.props.refreshUpdatesState();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <DetailedNumberField \n                                placeholder='Running Hospital Bill'\n                                detail='PHP'\n                                isFloat={true}\n                                value={this.props.state.hospitalBill}\n                                error={this.props.state.hospitalBill <= 0}\n                                onChange={(value: number) => {\n                                    this.props.state.hospitalBill = value;\n                                    this.props.refreshUpdatesState();\n                                }}/>\n                        </Grid>\n                    </Grid>\n                    <div style={{paddingTop: '5px'}} />\n                    {this.props.state.remarks !== '' &&\n                    this.props.state.date !== null && \n                    this.props.state.hospitalBill !== 0 ? (\n                        <TextButton \n                            label='Add update' \n                            icon={faPlus}\n                            onClick={() => {\n                                var state = this.props.state;\n                                const tempData = {\n                                    remarks: state.remarks,\n                                    date: state.date,\n                                    hospitalBill: state.hospitalBill\n                                }\n                                this.props.updates.unshift(tempData);\n                                this.props.state.remarks = '';\n                                this.props.state.date = new Date();\n                                this.props.state.hospitalBill = 0;\n                                this.props.refreshUpdatesState();\n                            }}/>\n                    ) : null}\n                </div>\n                \n                <div className='sub-section'>\n                    <CRUDTable \n                        className='custom-table'\n                        placeholder='UPDATES'\n                        cols={['Remarks', 'As of Date', 'Running Hospital Bill']}\n                        rows={this.props.updates} \n                        onSaveEditRow={(index: number, data: any) => {\n                            this.props.updates[index] = data;\n                            this.props.refreshUpdatesState();\n                        }}\n                        onDeleteRow={(index: number) => {\n                            this.props.updates.splice(index, 1);\n                            this.props.refreshUpdatesState();\n                        }}\n                        onHeaderFormat={(colIndex: number, colName: string) => {\n                            return this.onFormatTableHeader(colIndex, colName);\n                        }} \n                        onFormat={(_rowIndex: number, colIndex: number, value: any) => {\n                            return this.onFormatCRUDTable(colIndex, value);\n                        }} \n                        editField={(colIndex: number, currentVal: any, onChange: any) => {\n                            if (colIndex === 0) {\n                                return (\n                                    <InputField\n                                        value={currentVal}\n                                        onChange={(value: string) => onChange(value)}/>\n                                );\n                            } else if (colIndex === 1) {\n                                return (\n                                    <DatePicker\n                                        value={currentVal}\n                                        onChange={(value: Date) => onChange(value)}/>\n                                );\n                            } else {\n                                return (\n                                    <DetailedNumberField\n                                        detail='PHP'\n                                        isFloat={true}\n                                        value={currentVal}\n                                        onChange={(value: number) => onChange(value)}/>\n                                );\n                            }\n                        }} />\n                </div>\n                <div className='sub-section'>\n                    <div className='header-2'>OTHER DETAILS</div>                    \n                    <CustomCheckbox \n                        label='Gift Given?'\n                        value={this.props.confinement.giftGiven}\n                        onChange={(value: boolean) => {\n                            this.props.confinement.giftGiven = value;\n                            this.props.refreshUpdatesState();\n                        }} />\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { Grid, TableCell } from '@material-ui/core';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\n\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DetailedDropdown } from 'Pages/CustomerCarePage/Components/DetailedDropdown';\nimport { NumberField } from 'Pages/CustomerCarePage/Components/NumberField';\nimport { DetailedNumberField } from 'Pages/CustomerCarePage/Components/DetailedNumberField';\nimport { CRUDTable } from 'Pages/CustomerCarePage/UpdateTicketPage/Components/CRUDTable';\nimport { DatePicker } from 'Pages/CustomerCarePage/Components/DatePicker';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { DropdownChoice } from 'Pages/CustomerCarePage/Models';\nimport { AccommodationData } from '../UpdateTicketProps';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\n\ninterface IProps {\n    accommodations: AccommodationData[];\n    state: AccommodationData;\n    facilitiesList: DropdownChoice[];\n    provider: DropdownChoice;\n    dateAdmitted: Date;\n    confinementKind: string;\n    refreshAccommodationsState: () => void;\n}\n\nexport class AccommodationsSection extends React.Component<IProps> {\n\n    confinementTypes: DropdownChoice[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.confinementTypes = [\n            { value: '1', label: 'Elective / Scheduled' },\n            { value: '2', label: 'ER leading to confinement' }\n        ];\n    }\n\n    onFormatTableHeader = (colIndex: number, value: any) => {\n        return (\n            colIndex === 1 || colIndex === 2 ? (\n                <TableCell style={{textAlign: 'right', minWidth: '200px'}}>{value}</TableCell>\n            ) : (\n                <TableCell style={{minWidth: '150px'}}>{value}</TableCell>\n            )\n        );\n    }\n\n    onFormatCRUDTable = (colIndex: number, value: any) => {\n        const textAlign = (colIndex !== 0 ? 'right' : 'left');\n        return (\n            <div style={{textAlign: textAlign}}>\n                {colIndex === 2 ? \n                    GlobalFunction.formatNumber(value, true) + ' PHP' : \n                    value}\n            </div>\n        );\n    }\n\n    getTotalCost = () => {\n        let totalCost = 0;\n        this.props.accommodations.map(accommodation => {\n            totalCost += accommodation.costPerDay * accommodation.days;\n        });\n\n        return totalCost;\n    }\n\n    renderConfinementDetails(): JSX.Element {\n        return (\n            <div className='sub-section'>\n                <div className='header-2'>CONFINEMENT DETAILS</div>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <DetailedDropdown \n                            placeholder='Provider'\n                            value={this.props.provider}\n                            choices={this.props.facilitiesList}\n                            disabled={true}\n                            onChange={(_value: DropdownChoice) => null}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <DatePicker \n                            placeholder='Date Admitted'\n                            value={this.props.dateAdmitted}\n                            disabled={true}\n                            onChange={(_value: Date) => null}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Dropdown \n                            placeholder='Kind of Confinement'\n                            value={{ value: '', label: this.props.confinementKind }}\n                            choices={this.confinementTypes}\n                            disabled={true}\n                            onChange={(_value: DropdownChoice) => null}/>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n\n    renderAddRoomAccommodation(): JSX.Element {\n        return (\n            <div className='sub-section'>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <InputField \n                            placeholder='Room Type'\n                            value={this.props.state.roomType}\n                            onChange={(value: string) => {\n                                this.props.state.roomType = value;\n                                this.props.refreshAccommodationsState();\n                            }}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <NumberField \n                            placeholder='No. of Days'\n                            value={this.props.state.days}\n                            error={this.props.state.days < 1 || isNaN(this.props.state.days)}\n                            onChange={(value: number) => {\n                                this.props.state.days = value;\n                                this.props.refreshAccommodationsState();\n                            }}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <DetailedNumberField \n                            placeholder='Cost Per Day'\n                            detail='PHP'\n                            isFloat={true}\n                            value={this.props.state.costPerDay}\n                            onChange={(value: number) => {\n                                this.props.state.costPerDay = value;\n                                this.props.refreshAccommodationsState();\n                            }}/>\n                    </Grid>\n                </Grid>\n                <div style={{paddingTop: '5px'}} />\n                {this.props.state.days > 0 ? (\n                    <TextButton \n                        label='Add room' \n                        icon={faPlus}\n                        onClick={() => {\n                            var state = this.props.state;\n                            const tempData = {\n                                roomType: state.roomType,\n                                days: state.days,\n                                costPerDay: state.costPerDay\n                            }\n                            this.props.accommodations.unshift(tempData);\n                            this.props.state.roomType = '';\n                            this.props.state.days = 0;\n                            this.props.state.costPerDay = 0;\n                            this.props.refreshAccommodationsState();\n                        }}/>\n                ) : null}\n            </div>\n        );\n    }\n\n    render(): JSX.Element {\n\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Add Room Accommodation</div>\n                {this.renderAddRoomAccommodation()}\n                <div className='sub-section' />\n                {this.renderConfinementDetails()}\n                <div className='sub-section'>\n                    <CRUDTable \n                        className='custom-table'\n                        placeholder='ROOM ACCOMMODATIONS'\n                        cols={['Room Type', 'No. of Days', 'Cost Per Day']} \n                        rows={this.props.accommodations}\n                        onSaveEditRow={(index: number, data: any) => {\n                            this.props.accommodations[index] = data;\n                            this.props.refreshAccommodationsState();\n                        }}\n                        onDeleteRow={(index: number) => {\n                            this.props.accommodations.splice(index, 1);\n                            this.props.refreshAccommodationsState();\n                        }}\n                        onHeaderFormat={(colIndex: number, colName: string) => {\n                            return this.onFormatTableHeader(colIndex, colName);\n                        }} \n                        onFormat={(_rowIndex: number, colIndex: number, value: any) => {\n                            return this.onFormatCRUDTable(colIndex, value);\n                        }}\n                        editField={(colIndex: number, currentVal: any, onChange: any) => {\n                            if (colIndex === 0) {\n                                return (\n                                    <InputField\n                                        value={currentVal}\n                                        onChange={(value: string) => onChange(value)}/>\n                                );\n                            } else if (colIndex === 1) {\n                                return (\n                                    <NumberField\n                                        value={currentVal}\n                                        onChange={(value: number) => onChange(value < 1 ? 1 : value)}/>\n                                );\n                            } else {\n                                return (\n                                    <DetailedNumberField\n                                        detail='PHP'\n                                        isFloat={true}\n                                        value={currentVal}\n                                        onChange={(value: number) => onChange(value)}/>\n                                );\n                            }\n                        }} />\n                    <div className='sub-section'>\n                        <div style={{float: 'right'}}>\n                            <span className='small-text'>TOTAL AMOUNT</span>\n                            <span style={{marginLeft: '1rem'}} />\n                            <span className='header-2'>{GlobalFunction.formatNumber(this.getTotalCost(), true) + ' PHP'}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { Grid, TableCell } from '@material-ui/core';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\n\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DetailedDropdown } from 'Pages/CustomerCarePage/Components/DetailedDropdown';\nimport { CRUDTable } from 'Pages/CustomerCarePage/UpdateTicketPage/Components/CRUDTable';\nimport { DropdownChoice } from 'Pages/CustomerCarePage/Models';\nimport { CustomCheckbox } from 'Pages/CustomerCarePage/Components/CustomCheckbox';\nimport { DiagnosisData, PhysicianData, ProcedureData } from '../UpdateTicketProps';\nimport { CustomRadio } from 'Pages/CustomerCarePage/Components/CustomRadio';\n\ninterface IProps {\n    diagnoses: DiagnosisData[];\n    state: DiagnosisData;\n    physicians: PhysicianData[];\n    procedures: ProcedureData[];\n    diagnosesList: DropdownChoice[];\n    primaryDiagnosisIndex: number;\n    refreshDiagnosisStateChange: () => void;\n    setPrimaryDiagnosisIndex: (index: number) => void;\n}\n\nexport class DiagnosesSection extends React.Component<IProps> {\n\n    getFilteredICD10Codes(): DropdownChoice[] {\n        let filteredIcd10: DropdownChoice[] = [];\n        for (var i = 0; i < this.props.diagnosesList.length; i++) {\n            let isSame = false;\n            for (var j = 0; j < this.props.diagnoses.length; j++) {\n                isSame = (\n                    this.props.diagnoses[j].diagnosis.value === \n                    this.props.diagnosesList[i].value ? true : isSame);\n            }\n            if (!isSame) {\n                filteredIcd10 = filteredIcd10.concat(this.props.diagnosesList[i]);\n            }\n        }\n        return filteredIcd10;\n    }\n\n    onFormatTableHeader = (colIndex: number, value: any) => {\n        return (\n            colIndex === 0 || colIndex === 1 ? (\n                <TableCell style={{minWidth: '200px', maxWidth: '200px'}}>{value}</TableCell>\n            ) : colIndex === 3 ? (\n                <TableCell style={{minWidth: '200px', maxWidth: '200px', textAlign: 'center'}}>{value}</TableCell>\n            ) : (\n                <TableCell style={{minWidth: '100px', maxWidth: '100px'}}>{value}</TableCell>\n            )\n        );\n    }\n\n    onFormatCRUDTable = (rowIndex: number, colIndex: number, value: any) => {\n        return (\n            colIndex === 0 ? (\n                <div style={{minWidth: '200px', maxWidth: '200px'}}>\n                    {value.value + \" - \" + value.label}\n                </div>\n            ) : colIndex === 2 ? (\n            <div>{value ? 'Final' : 'Initial'}</div>\n            ) : colIndex === 3 ? (\n                <div style={{textAlign: 'center'}}>\n                    <CustomRadio\n                        disabled={!this.props.diagnoses[rowIndex].isFinal}\n                        checkedCondition={this.props.primaryDiagnosisIndex === rowIndex}\n                        onChange={() => {\n                            this.props.setPrimaryDiagnosisIndex(rowIndex);\n                        }} />\n                </div>\n            ) : (value)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Add Diagnosis</div>\n                <div className='sub-section'>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <DetailedDropdown \n                                placeholder='Diagnosis'\n                                value={this.props.state.diagnosis}\n                                error={this.props.state.diagnosis.value === ''}\n                                choices={this.getFilteredICD10Codes()}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.state.diagnosis = value;\n                                    this.props.refreshDiagnosisStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <InputField \n                                placeholder='Remarks'\n                                value={this.props.state.remarks}\n                                charLimit={100}\n                                onChange={(value: string) => {\n                                    this.props.state.remarks = value;\n                                    this.props.refreshDiagnosisStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <CustomCheckbox \n                                label='Final Diagnosis?'\n                                value={this.props.state.isFinal}\n                                onChange={(value: boolean) => {\n                                    this.props.state.isFinal = value;\n                                    this.props.refreshDiagnosisStateChange();\n                                }}/>\n                        </Grid>\n                        \n                    </Grid>\n                    <div style={{paddingTop: '5px'}} />\n                    {this.props.state.diagnosis.value !== '' ? (\n                        <TextButton \n                            label='Add diagnosis' \n                            icon={faPlus}\n                            onClick={() => {\n                                var data = this.props.state;\n                                const tempData = {\n                                    diagnosis: data.diagnosis,\n                                    remarks: data.remarks,\n                                    isFinal: data.isFinal,\n                                    isPrimary: true\n                                }\n                                this.props.diagnoses.unshift(tempData);\n                                this.props.state.diagnosis = { value: '', label: '' };\n                                this.props.state.remarks = '';\n                                this.props.state.isFinal = false;\n                                this.props.refreshDiagnosisStateChange();\n                                this.props.setPrimaryDiagnosisIndex(this.props.primaryDiagnosisIndex + 1);\n                            }}/>\n                    ) : null}\n                </div>\n                <div className='sub-section'>\n                    <CRUDTable \n                        className='custom-table'\n                        placeholder='DIAGNOSES'\n                        \n                        cols={['Diagnosis', 'Remarks', 'Type', 'Primary Diagnosis?']} \n                        rows={this.props.diagnoses}\n                        onSaveEditRow={(index: number, data: any) => {\n                            this.props.diagnoses[index] = data;\n                            this.props.refreshDiagnosisStateChange();\n                        }}\n                        onDeleteRow={(index: number) => {\n                            this.props.physicians.filter(physician => \n                                physician.diagnosis.label !== \n                                this.props.diagnoses[index].diagnosis.label);\n                            this.props.diagnoses.splice(index, 1);\n                            this.props.refreshDiagnosisStateChange();\n                            this.props.setPrimaryDiagnosisIndex(\n                                this.props.primaryDiagnosisIndex != index ?\n                                this.props.primaryDiagnosisIndex - 1 : -1);\n                        }}\n                        onHeaderFormat={(colIndex: number, colName: string) => {\n                            return this.onFormatTableHeader(colIndex, colName);\n                        }} \n                        onFormat={(rowIndex: number, colIndex: number, value: any) => {\n                            return this.onFormatCRUDTable(rowIndex, colIndex, value);\n                        }}\n                        editField={(colIndex: number, currentVal: any, onChange: any) => {\n                            if (colIndex === 0) {\n                                return (\n                                    <DetailedDropdown\n                                        choices={this.getFilteredICD10Codes()}\n                                        value={currentVal}\n                                        onChange={(value: DropdownChoice) => onChange(value)}/>\n                                );\n                            } else if (colIndex === 1) {\n                                return (\n                                    <InputField\n                                        value={currentVal}\n                                        onChange={(value: string) => onChange(value)}/>\n                                );\n                            } else if (colIndex === 2) {\n                                return (\n                                    <CustomCheckbox \n                                        label='Is Final?'\n                                        value={currentVal}\n                                        onChange={(value: boolean) => onChange(value)}/>\n                                );\n                            } else {\n                                return (\n                                    <div></div>\n                                );\n                            }\n                        }} />\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid, Radio, TableCell } from '@material-ui/core';\nimport { PhysicianData, DiagnosisData } from '../UpdateTicketProps';\nimport { DetailedDropdown } from 'Pages/CustomerCarePage/Components/DetailedDropdown';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { NumberField } from 'Pages/CustomerCarePage/Components/NumberField';\nimport { DetailedNumberField } from 'Pages/CustomerCarePage/Components/DetailedNumberField';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { CRUDTable } from 'Pages/CustomerCarePage/UpdateTicketPage/Components/CRUDTable';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { DropdownChoice } from 'Pages/CustomerCarePage/Models';\n\ninterface IProps {\n    physicians: PhysicianData[];\n    state: PhysicianData;\n    physiciansList: DropdownChoice[];\n    diagnosesList: DiagnosisData[];\n    refreshPhysiciansStateChange: () => void;\n}\n\nexport class PhysiciansSection extends React.Component<IProps> {\n\n    onFormatTableHeader = (colIndex: number, value: any) => {\n        return (\n            colIndex === 0 ? (\n                <TableCell style={{minWidth: '250px'}}>{value}</TableCell>\n            ) : colIndex === 1 ? (\n                <TableCell style={{minWidth: '100px'}}>{value}</TableCell>\n            ) : colIndex === 3 || colIndex === 4 ? (\n                <TableCell style={{minWidth: '150px', textAlign: 'right'}}>{value}</TableCell>\n            ) : (\n                <TableCell style={{minWidth: '150px'}}>{value}</TableCell>\n            )\n        );\n    }\n\n    onFormatCRUDTable = (colIndex: number, value: any) => {\n        return (\n            colIndex === 0 ? (\n                <div>\n                    <div>{value.params[0] + ' - ' + value.label}</div>\n                    <div className='light-text'>{value.params[1] + ' Physician'}</div>\n                </div>\n            ) : colIndex === 1 ? (\n                <div>{value.value}</div>\n            ) : colIndex === 3 || colIndex === 4 ? (\n                <div style={{textAlign: 'right'}}>\n                    {colIndex === 4 ? GlobalFunction.formatNumber(value, true) + ' PHP' : value}\n                </div>\n            ) : (value)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Add Physician</div>\n                <div className='sub-section'>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <DetailedDropdown \n                                placeholder='Doctor'\n                                detail={this.props.state.physician.params ? this.props.state.physician.params[0] : ''}\n                                value={this.props.state.physician}\n                                error={this.props.state.physician.value === ''}\n                                choices={this.props.physiciansList}\n                                onChange={(value: DropdownChoice) => {\n                                    if (value.params && this.props.state.physician.params) {\n                                        this.props.state.physician = {\n                                            ...value,\n                                            params: [value.params[0], this.props.state.physician.params[1]]\n                                        };\n                                        this.props.refreshPhysiciansStateChange();\n                                    }\n                                }}/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <DetailedDropdown \n                                placeholder='Diagnosis'\n                                value={this.props.state.diagnosis}\n                                error={this.props.state.diagnosis.value === ''}\n                                choices={this.props.diagnosesList.map(value => value.diagnosis)}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.state.diagnosis = value;\n                                    this.props.refreshPhysiciansStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <InputField \n                                placeholder='Remarks'\n                                value={this.props.state.remarks}\n                                charLimit={100}\n                                onChange={(value: string) => {\n                                    this.props.state.remarks = value;\n                                    this.props.refreshPhysiciansStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <NumberField\n                                placeholder='Visits'\n                                value={this.props.state.visits}\n                                onChange={(value: number) => {\n                                    this.props.state.visits = value;\n                                    this.props.refreshPhysiciansStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <DetailedNumberField\n                                placeholder='Amount'\n                                detail='PHP'\n                                isFloat={true}\n                                value={this.props.state.amount}\n                                onChange={(value: number) => {\n                                    this.props.state.amount = value;\n                                    this.props.refreshPhysiciansStateChange();\n                                }}/>\n                        </Grid>\n                        {this.props.state.physician.params ? (\n                            <Grid item xs={3}>\n                                <div>\n                                <Grid container style={{paddingTop: '1rem'}}>\n                                    <Grid item xs={6}>\n                                        <Radio \n                                            className='check-box'\n                                            style={{height: '100%', width: 0}}\n                                            checked={this.props.state.physician.params[1] === 'Admitting'}\n                                            value={'Admitting'}\n                                            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                                                if (this.props.state.physician.params) {\n                                                    this.props.state.physician.params[1] = event.target.value;\n                                                }\n                                                this.props.refreshPhysiciansStateChange();\n                                            }} /> Admitting\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Radio \n                                            className='check-box'\n                                            style={{height: '100%', width: 0}}\n                                            checked={this.props.state.physician.params[1] === 'Attending'}\n                                            value={'Attending'}\n                                            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                                                if (this.props.state.physician.params) {\n                                                    this.props.state.physician.params[1] = event.target.value;\n                                                }\n                                                this.props.refreshPhysiciansStateChange();\n                                            }} /> Attending\n                                    </Grid>\n                                </Grid>\n                                </div>\n                            </Grid>\n                        ) : null}\n                    </Grid>\n                    <div style={{paddingTop: '5px'}} />\n                    {this.props.state.physician.value !== '' &&\n                    this.props.state.diagnosis.value !== '' ? (\n                        <TextButton \n                            label='Add physician' \n                            icon={faPlus}\n                            onClick={() => {\n                                var data = this.props.state;\n                                const tempData = {\n                                    physician: {\n                                        value: data.physician.value,\n                                        label: data.physician.label,\n                                        params: data.physician.params ? data.physician.params : undefined\n                                    },\n                                    diagnosis: data.diagnosis,\n                                    remarks: data.remarks,\n                                    visits: data.visits,\n                                    amount: data.amount\n                                };\n                                this.props.physicians.unshift(tempData);\n                                this.props.state.physician = { value: '', label: '', params: ['', 'Admitting'] };\n                                this.props.state.diagnosis = { value: '', label: '' };\n                                this.props.state.remarks = '';\n                                this.props.state.visits = 0;\n                                this.props.state.amount = 0;\n                                this.props.refreshPhysiciansStateChange();\n                            }}/>\n                     ) : null}\n                </div>\n                <div className='sub-section'>\n                    <CRUDTable \n                        className='custom-table'\n                        placeholder='PHYSICIANS'\n                        cols={['Specialization - Doctor Name', 'Diagnosis', 'Remarks', 'No. of Visits', 'Amount']} \n                        rows={this.props.physicians}\n                        onSaveEditRow={(index: number, data: any) => {\n                            // this.props.editPhysician(index, data);\n                            this.props.physicians[index] = data;\n                            this.props.refreshPhysiciansStateChange();\n                        }}\n                        onDeleteRow={(index: number) => {\n                            // this.props.deletePhysician(index);\n                            this.props.physicians.splice(index, 1);\n                            this.props.refreshPhysiciansStateChange();\n                        }}\n                        onHeaderFormat={(colIndex: number, colName: string) => {\n                            return this.onFormatTableHeader(colIndex, colName);\n                        }} \n                        onFormat={(_rowIndex: number, colIndex: number, value: any) => {\n                            return this.onFormatCRUDTable(colIndex, value);\n                        }}\n                        editField={(colIndex: number, currentVal: any, onChange: any) => {\n                            if (colIndex === 0) {\n                                return (\n                                    <DetailedDropdown\n                                        detail={currentVal.params[0]}\n                                        choices={this.props.physiciansList}\n                                        value={currentVal}\n                                        onChange={(value: DropdownChoice) => onChange({\n                                            value: value.value,\n                                            label: value.label,\n                                            params: [value.params ? value.params[0] : '', currentVal.params[1]]\n                                        })}/>\n                                );\n                            } else if (colIndex === 1) {\n                                return (\n                                <div>{currentVal.value}</div>\n                                    // <DetailedDropdown\n                                    //     choices={this.props.diagnosesList.map(value => {\n                                    //         return value.diagnosis; \n                                    //     })}\n                                    //     value={currentVal}\n                                    //     onChange={(value: DropdownChoice) => onChange(value)}/>\n                                );\n                            } else if (colIndex === 2) {\n                                return (\n                                    <InputField\n                                        value={currentVal}\n                                        onChange={(value: string) => onChange(value)}/>\n                                );\n                                \n                            } else if (colIndex === 3) {\n                                return (\n                                    <NumberField\n                                        value={currentVal}\n                                        onChange={(value: number) => onChange(value)}/>\n                                );\n                            \n                            } else {\n                                return (\n                                    <DetailedNumberField\n                                        detail='PHP'\n                                        isFloat={true}\n                                        value={currentVal}\n                                        onChange={(value: number) => onChange(value)}/>\n                                );\n                            }\n                        }} />\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { CRUDTable } from 'Pages/CustomerCarePage/UpdateTicketPage/Components/CRUDTable';\nimport { Grid, TableCell } from '@material-ui/core';\nimport { DetailedDropdown } from 'Pages/CustomerCarePage/Components/DetailedDropdown';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { DatePicker } from 'Pages/CustomerCarePage/Components/DatePicker';\nimport { DetailedNumberField } from 'Pages/CustomerCarePage/Components/DetailedNumberField';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { DropdownChoice } from 'Pages/CustomerCarePage/Models';\nimport { ProcedureData, DiagnosisData } from '../UpdateTicketProps';\n\ninterface IProps {\n    procedures: ProcedureData[];\n    state: ProcedureData;\n    proceduresList: DropdownChoice[];\n    diagnosesList: DiagnosisData[];\n    physiciansList: DropdownChoice[];\n    refreshProceduresStateChange: () => void;\n}\n\nexport class ProceduresSection extends React.Component<IProps> {\n\n    onFormatTableHeader = (colIndex: number, value: any) => {\n        return (\n            colIndex === 0 ? (\n                <TableCell style={{minWidth: '200px'}}>{value}</TableCell>\n            ) : colIndex === 1 ? (\n                <TableCell style={{minWidth: '100px'}}>{value}</TableCell>\n            ) : colIndex === 2 || colIndex === 3 ? (\n                <TableCell style={{minWidth: '150px'}}>{value}</TableCell>\n            ) : colIndex === 5 ? (\n                <TableCell style={{textAlign: 'right', minWidth: '100px'}}>{value}</TableCell>\n            ) : (\n                <TableCell style={{minWidth: '150px'}}>{value}</TableCell>\n            )\n        );\n    }\n\n    onFormatCRUDTable = (colIndex: number, value: any) => {\n        return (\n            colIndex === 0 ? (\n                <div>{value.value + ' - ' + value.label}</div>\n            ) : colIndex === 1 ? (\n                <div>{value.value}</div>\n            ) : colIndex === 2 ? (\n                <div>{value.label}</div>\n            ) : colIndex === 3 ? (\n                <div>{GlobalFunction.toCommonDateString(value)}</div>\n            ) : colIndex === 5 ? (\n                <div style={{textAlign: 'right'}}>\n                    {GlobalFunction.formatNumber(value, true) + ' PHP'}\n                </div>\n            ) : (value)\n        );\n    }\n\n    render(): JSX.Element {\n\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Add Procedure</div>\n                <div className='sub-section'>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <DetailedDropdown \n                                placeholder='Procedure'\n                                value={this.props.state.procedure}\n                                error={this.props.state.procedure.value === ''}\n                                choices={this.props.proceduresList}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.state.procedure = value;\n                                    this.props.refreshProceduresStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <DetailedDropdown \n                                placeholder='Diagnosis'\n                                value={this.props.state.diagnosis}\n                                error={this.props.state.diagnosis.value === ''}\n                                choices={this.props.diagnosesList.map(value => value.diagnosis)}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.state.diagnosis = value;\n                                    this.props.refreshProceduresStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <DetailedDropdown \n                                placeholder='Doctor'\n                                detail={this.props.state.physician.params ? this.props.state.physician.params[0] : undefined}\n                                value={this.props.state.physician}\n                                error={this.props.state.physician.value === ''}\n                                choices={this.props.physiciansList}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.state.physician = value;\n                                    this.props.refreshProceduresStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <InputField \n                                placeholder='Remarks'\n                                value={this.props.state.remarks}\n                                charLimit={100}\n                                onChange={(value: string) => {\n                                    this.props.state.remarks = value;\n                                    this.props.refreshProceduresStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <DatePicker \n                                placeholder='Date'\n                                value={this.props.state.date}\n                                onChange={(value: Date) => {\n                                    this.props.state.date = value;\n                                    this.props.refreshProceduresStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <DetailedNumberField \n                                placeholder='Amount'\n                                detail='PHP'\n                                isFloat={true}\n                                value={this.props.state.amount}\n                                onChange={(value: number) => {\n                                    this.props.state.amount = value;\n                                    this.props.refreshProceduresStateChange();\n                                }}/>\n                        </Grid>\n                    </Grid>\n                    <div style={{paddingTop: '5px'}} />\n                    {this.props.state.physician.value !== '' &&\n                    this.props.state.diagnosis.value !== '' &&\n                    this.props.state.procedure.value !== '' ? (\n                        <TextButton \n                            label='Add procedure' \n                            icon={faPlus}\n                            onClick={() => {\n                                var data = this.props.state;\n                                const tempData = {\n                                    procedure: data.procedure,\n                                    diagnosis: data.diagnosis,\n                                    physician: data.physician,\n                                    date: data.date,\n                                    remarks: data.remarks,\n                                    amount: data.amount\n                                }\n                                this.props.procedures.unshift(tempData);\n                                this.props.state.procedure = { value: '', label: '' };\n                                this.props.state.diagnosis = { value: '', label: '' };\n                                this.props.state.physician = { value: '', label: '' };\n                                this.props.state.remarks = '';\n                                this.props.state.date = new Date();\n                                this.props.state.amount = 0;\n                                this.props.refreshProceduresStateChange();\n                            }}/>\n                    ) : null}\n                </div>\n                <div className='sub-section'>\n                    <CRUDTable \n                        className='custom-table'\n                        placeholder='PROCEDURES'\n                        \n                        cols={['Procedure', 'Diagnosis', 'Doctor', 'Date', 'Remarks', 'Amount']} \n                        rows={this.props.procedures}\n                        onSaveEditRow={(index: number, data: any) => {\n                            // this.props.editProcedure(index, data);\n                            this.props.procedures[index] = data;\n                            this.props.refreshProceduresStateChange();\n                        }}\n                        onDeleteRow={(index: number) => {\n                            // this.props.deleteProcedure(index);\n                            this.props.procedures.splice(index, 1);\n                            this.props.refreshProceduresStateChange();\n                        }}\n                        onHeaderFormat={(colIndex: number, colName: string) => {\n                            return this.onFormatTableHeader(colIndex, colName);\n                        }}\n                        onFormat={(_rowIndex: number, colIndex: number, value: any) => {\n                            return this.onFormatCRUDTable(colIndex, value);\n                        }}\n                        editField={(colIndex: number, currentVal: any, onChange: any) => {\n                            if (colIndex === 0) {\n                                return (\n                                    <DetailedDropdown\n                                        choices={this.props.proceduresList}\n                                        value={currentVal}\n                                        onChange={(value: DropdownChoice) => onChange(value)}/>\n                                );\n                            } else if (colIndex === 1) {\n                                return (\n                                    <DetailedDropdown\n                                        choices={this.props.diagnosesList.map(value => {\n                                            return value.diagnosis; \n                                        })}\n                                        value={currentVal}\n                                        onChange={(value: DropdownChoice) => onChange(value)}/>\n                                );\n                            } else if (colIndex === 2) {\n                                return (\n                                    <DetailedDropdown\n                                        detail={currentVal.params[0]}\n                                        choices={this.props.physiciansList}\n                                        value={currentVal}\n                                        onChange={(value: DropdownChoice) => onChange(value)}/>\n                                ); \n                            } else if (colIndex === 3) {\n                                return (\n                                    <DatePicker\n                                        value={currentVal}\n                                        onChange={(value: Date) => onChange(value)}/>\n                                );\n                            } else if (colIndex === 4) {\n                                return (\n                                    <InputField\n                                        value={currentVal}\n                                        charLimit={100}\n                                        onChange={(value: string) => onChange(value)}/>\n                                );\n                            \n                            } else {\n                                return (\n                                    <DetailedNumberField\n                                        detail='PHP'\n                                        isFloat={true}\n                                        value={currentVal}\n                                        onChange={(value: number) => onChange(value)}/>\n                                );\n                            }\n                        }} />\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { CRUDTable } from 'Pages/CustomerCarePage/UpdateTicketPage/Components/CRUDTable';\nimport { Grid, TableCell } from '@material-ui/core';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\nimport { DetailedNumberField } from 'Pages/CustomerCarePage/Components/DetailedNumberField';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { DropdownChoice } from 'Pages/CustomerCarePage/Models';\nimport { ItemData } from '../UpdateTicketProps';\n\ninterface IProps {\n    items: ItemData[];\n    state: ItemData;\n    refreshItemsStateChange: () => void;\n}\n\nexport class OtherDetailsSection extends React.Component<IProps> {\n\n    itemTypes: DropdownChoice[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.itemTypes = [\n            { value: '1', label: 'Medicine' },\n            { value: '2', label: 'Non-coverable' },\n            { value: '3', label: 'Rooms' },\n            { value: '4', label: 'Miscellaneous' }\n        ]\n    }\n\n    onFormatTableHeader = (colIndex: number, value: any) => {\n        return (\n            colIndex === 2 ? (\n                <TableCell style={{textAlign: 'right', minWidth: '200px'}}>{value}</TableCell>\n            ) : (\n                <TableCell style={{minWidth: '300px'}}>{value}</TableCell>\n            )\n        );\n    }\n\n    onFormatCRUDTable = (colIndex: number, value: any) => {\n        return (\n            colIndex === 1 ? (\n                value.label\n            ) : colIndex === 2 ? (\n                <div style={{textAlign: 'right'}}>\n                    {GlobalFunction.formatNumber(value, true) + ' PHP'}\n                </div>\n            ) : (value)\n        );\n    }\n\n    render(): JSX.Element {\n        console.log(this.props.items);\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Add Other Details</div>\n                <div className='sub-section'>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <InputField \n                                placeholder='Item'\n                                value={this.props.state.name}\n                                error={this.props.state.name.trim().length == 0}\n                                onChange={(value: string) => {\n                                    this.props.state.name = value;\n                                    this.props.refreshItemsStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Dropdown \n                                placeholder='Type'\n                                value={this.props.state.type}\n                                choices={this.itemTypes}\n                                error={this.props.state.type.value === ''}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.state.type = value;\n                                    this.props.refreshItemsStateChange();\n                                }}/>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <DetailedNumberField \n                                placeholder='Amount'\n                                detail='PHP'\n                                isFloat={true}\n                                value={this.props.state.amount}\n                                error={this.props.state.amount == 0}\n                                onChange={(value: number) => {\n                                    this.props.state.amount = value;\n                                    this.props.refreshItemsStateChange();\n                                }}/>\n                        </Grid>\n                    </Grid>\n                    <div style={{paddingTop: '5px'}} />\n                    {this.props.state.name.trim().length != 0 &&\n                     this.props.state.type.value !== '' &&\n                     this.props.state.amount != 0 ? (\n                        <TextButton \n                            label='Add item' \n                            icon={faPlus}\n                            onClick={() => {\n                                var state = this.props.state;\n                                const tempData = {\n                                    name: state.name,\n                                    type: { value: state.type.value, label: state.type.label },\n                                    amount: state.amount\n                                }\n                                this.props.items.unshift(tempData);\n                                this.props.state.name = '';\n                                this.props.state.type = { value: '', label: '' };\n                                this.props.state.amount = 0;\n                                this.props.refreshItemsStateChange();\n                            }}/>\n                    ) : null}\n                </div>\n                <div className='sub-section'>\n                    <CRUDTable \n                        className='custom-table'\n                        placeholder='OTHER DETAILS'\n                        \n                        cols={['Item', 'Type', 'Amount']} \n                        rows={this.props.items}\n                        onSaveEditRow={(index: number, data: any) => {\n                            // this.props.editItem(index, data);\n                            this.props.items[index] = data;\n                            this.props.refreshItemsStateChange();\n                        }}\n                        onDeleteRow={(index: number) => {\n                            // this.props.deleteItem(index);\n                            this.props.items.splice(index, 1);\n                            this.props.refreshItemsStateChange();\n                        }}\n                        onHeaderFormat={(colIndex: number, colName: string) => {\n                            return this.onFormatTableHeader(colIndex, colName);\n                        }}\n                        onFormat={(_rowIndex: number, colIndex: number, value: any) => {\n                            return this.onFormatCRUDTable(colIndex, value);\n                        }}\n                        editField={(colIndex: number, currentVal: any, onChange: any) => {\n                            if (colIndex === 0) {\n                                return (\n                                    <InputField\n                                        value={currentVal}\n                                        onChange={(value: string) => onChange(value)}/>\n                                );\n                            } else if (colIndex === 1) {\n                                return (\n                                    <Dropdown\n                                        choices={this.itemTypes}\n                                        value={currentVal}\n                                        onChange={(value: DropdownChoice) => onChange(value)}/>\n                                );\n                            } else {\n                                return (\n                                    <DetailedNumberField\n                                        detail='PHP'\n                                        isFloat={true}\n                                        value={currentVal}\n                                        onChange={(value: number) => onChange(value)}/>\n                                );\n                            }\n                        }} />\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\nimport { Grid } from '@material-ui/core';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { DetailedNumberField } from 'Pages/CustomerCarePage/Components/DetailedNumberField';\nimport { DatePicker } from 'Pages/CustomerCarePage/Components/DatePicker';\nimport { DropdownChoice } from 'Pages/CustomerCarePage/Models';\n\ninterface IProps {\n    dateAdmitted: Date;\n    coverage: DropdownChoice;\n    ticketNo: string;\n    paidBy: string;\n    philhealthAmount: number;\n    finalBill: number;\n    dischargeDate: Date | null;\n    onUpdateTicketStateChange: (attrName: string, value: any) => void;\n}\n\nexport class DischargeDetailsSection extends React.Component<IProps> {\n\n    coverageList: DropdownChoice[];\n\n    constructor(props: any) {\n        super(props);\n\n        this.coverageList = [\n            { value: '1', label: 'Filed' },\n            { value: '2', label: 'Corporate Guarantee' },\n            { value: '3', label: 'Not Compensable' },\n            { value: '4', label: 'Less than 24 hours' },\n            { value: '5', label: 'Paid' },\n            { value: '6', label: 'PH Rider' },\n            { value: '7', label: 'Non-PNDF' }\n        ]\n    }\n\n\n    render(): JSX.Element {\n\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Set PhilHealth</div>\n                <div className='sub-section'>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <Dropdown \n                                placeholder='Coverage'\n                                choices={this.coverageList}\n                                value={this.props.coverage}\n                                onChange={(value: DropdownChoice) => {\n                                    this.props.onUpdateTicketStateChange('coverage', value);\n                                }} />\n                        </Grid>\n                        {this.props.coverage.label === 'Corporate Guarantee' ? (\n                            <Grid item xs={3}>\n                                <InputField \n                                    placeholder='Ticket Number'\n                                    value={this.props.ticketNo}\n                                    onChange={(value: string) => {\n                                        this.props.onUpdateTicketStateChange('ticketNo', value);\n                                    }} />\n                            </Grid>\n                        ) : null}\n                        {this.props.coverage.label === 'Paid' ? (\n                        <Grid item xs={3}>\n                            <InputField \n                                placeholder='Paid by'\n                                value={this.props.paidBy}\n                                onChange={(value: string) => {\n                                    this.props.onUpdateTicketStateChange('paidBy', value);\n                                }} />\n                        </Grid>\n                        ) : null}\n                        {this.props.coverage.label === 'Filed' ||\n                            this.props.coverage.label === 'Corporate Guarantee' ||\n                            this.props.coverage.label === 'Paid' ? (\n                            <Grid item xs={3}>\n                                <DetailedNumberField \n                                    placeholder='Amount'\n                                    detail='PHP'\n                                    isFloat={true}\n                                    value={this.props.philhealthAmount}\n                                    onChange={(value: number) => {\n                                        this.props.onUpdateTicketStateChange('philhealthAmount', value);\n                                    }} />\n                            </Grid>\n                        ) : null}\n\n                        \n                        \n                    </Grid>\n                </div>\n                <div className='header-1'>Add Discharge Details</div>\n                <div className='sub-section'>\n                    <Grid container spacing={2}>\n                        <Grid item xs={3}>\n                            <DetailedNumberField \n                                placeholder='Final Hospital Bill Amount'\n                                detail='PHP'\n                                isFloat={true}\n                                value={this.props.finalBill}\n                                onChange={(value: number) => {\n                                    this.props.onUpdateTicketStateChange('finalBill', value);\n                                }} />\n                        </Grid>\n                        <Grid item xs={3}>\n                            <DatePicker \n                                placeholder='Discharge Date'\n                                value={this.props.dischargeDate}\n                                minDate={this.props.dateAdmitted}\n                                onChange={(value: Date) => {\n                                    this.props.onUpdateTicketStateChange('dischargeDate', value);\n                                }} />\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { CRUDTable } from 'Pages/CustomerCarePage/UpdateTicketPage/Components/CRUDTable';\nimport { Grid } from '@material-ui/core';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { CustomDropzone } from 'Pages/CustomerCarePage/Components/CustomDropzone';\nimport { FileData } from '../UpdateTicketProps';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\n\ninterface IProps {\n    files: FileData[];\n    state: FileData;\n    refreshFilesStateChange: () => void;\n}\n\nexport class UploadedDocumentsSection extends React.Component<IProps> {\n\n    render(): JSX.Element {console.log(this.props.files);\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Upload Documents</div>\n                <div className='sub-section'>\n                    <Grid container>\n                        <Grid item xs={6}>\n                            <CustomDropzone\n                                accept='image/*'\n                                onDrop={(files: File[]) => {\n                                    this.props.state.file = files[0];\n                                    this.props.refreshFilesStateChange();\n                                }} />\n                            <div>{this.props.state.file ? this.props.state.file.name : null}</div>\n                            <div className='sub-section' />\n                            <InputField \n                                placeholder='Document Name' \n                                value={this.props.state.docName}\n                                onChange={(value: string) => {\n                                    this.props.state.docName = value;\n                                    this.props.refreshFilesStateChange();\n                                }} />\n                        </Grid>\n                        <Grid item xs={6} />\n                    </Grid>\n                    <div style={{paddingTop: '5px'}} />\n                    <TextButton \n                        label='Add document' \n                        icon={faPlus}\n                        onClick={() => {\n                            var state = this.props.state;\n                            if (state.file !== null) {\n                                const tempData = {\n                                    docName: state.docName,\n                                    file: state.file\n                                }\n                                this.props.files.unshift(tempData);\n                                this.props.state.docName = '';\n                                this.props.state.file = null;\n                                this.props.refreshFilesStateChange();\n                            }\n                        }}/>\n                </div>\n                \n                <div className='sub-section'>\n                    <CRUDTable \n                        className='custom-table'\n                        placeholder='UPLOADED DOCUMENTS'\n                        \n                        cols={['Document Name', 'Filename']} \n                        rows={this.props.files}\n                        onSaveEditRow={(index: number, data: any) => {\n                            // this.props.editFile(index, data);\n                            \n                            this.props.files[index] = data;\n                            this.props.refreshFilesStateChange();\n                        }}\n                        onDeleteRow={(index: number) => {\n                            // this.props.deleteFile(index);\n                            this.props.files.splice(index, 1);\n                            this.props.refreshFilesStateChange();\n                        }}\n                        onFormat={(_rowIndex: number, colIndex: number, value: any) => {\n                            return (colIndex === 1 ? (value.name) : (value));\n                        }}\n                        editField={(colIndex: number, currentVal: any, onChange: any) => {\n                            if (colIndex === 0) {\n                                return (\n                                    <InputField\n                                        value={currentVal}\n                                        onChange={(value: string) => onChange(value)}/>\n                                );\n                            }\n                            return currentVal.name;\n                        }} />\n                </div>\n\n                <div className='section' />\n            </div>\n        );\n    }\n}","\nimport * as React from 'react';\nimport { Grid, TableCell, TableRow } from '@material-ui/core';\nimport { InquiryData, DropdownChoice } from 'Pages/CustomerCarePage/Models';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { faMinusCircle, faPlus, faPen } from '@fortawesome/free-solid-svg-icons';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { InputChip } from 'Pages/CustomerCarePage/Components/InputChip';\nimport { CustomChip } from 'Pages/CustomerCarePage/Components/CustomChip';\nimport { CustomDropzone } from 'Pages/CustomerCarePage/Components/CustomDropzone';\nimport { Dropdown } from 'Pages/CustomerCarePage/Components/Dropdown';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\n\ninterface IProps {\n    inquiries: InquiryData[];\n    refreshInquiryState: () => void;\n}\n\ninterface IStates {\n    inquiry: DropdownChoice;\n}\n\nexport class UpdateInquirySection extends React.Component<IProps, IStates> {\n\n    inquiries: DropdownChoice[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            inquiry: { value: '', label: '' }\n        };\n\n        this.inquiries = [\n            { value: '1', label: 'Member Status / Card Inquiry' },\n            { value: '2', label: 'Member Network Access Inquiry' },\n            { value: '3', label: 'Member Benefit Inquiry - General [Outpatient]' },\n            { value: '4', label: 'Member Benefit Inquiry - General [Inpatient]' },\n            { value: '5', label: 'Member Benefit Inquiry - General [Emergency]' },\n            { value: '6', label: 'Member Benefit Inquiry - General [Dental]' },\n            { value: '7', label: 'Member Benefit Inquiry - General [APE / ECU]' },\n            { value: '8', label: 'Member Benefit Inquiry - General [Riders]' },\n            { value: '9', label: 'Member Coverage Inquiry - Specific Benefit' },\n            { value: '10', label: 'Member Availment Inquiry - CanAvail' },\n            { value: '11', label: 'Member Eligibility Inquiry' },\n            { value: '12', label: 'Reimbursement Status Inquiry' },\n            { value: '13', label: 'General Affiliated Network Inquiry - Facility' },\n            { value: '14', label: 'General Affiliated Network Inquiry - Doctor' },\n            { value: '15', label: 'General Affiliated Network Inquiry - Dentist' },\n            { value: '16', label: 'Procedural Inquiry - Outpatient' },\n            { value: '17', label: 'Procedural Inquiry - Inpatient' },\n            { value: '18', label: 'Procedural Inquiry - Emergency' },\n            { value: '19', label: 'Procedural Inquiry - Dental' },\n            { value: '20', label: 'Procedural Inquiry - APE / ECU' },\n            { value: '21', label: 'Procedural Inquiry - Member Enrolment / Cancellation / Update' },\n            { value: '22', label: 'Procedural Inquiry - Reimbursement' },\n            { value: '23', label: 'Procedural Inquiry - Others' }\n        ];\n    }\n\n    getFilteredInquiries(): DropdownChoice[] {\n        let filteredInquiries: DropdownChoice[] = [];\n        for (var i = 0; i < this.inquiries.length; i++) {\n            let isSame = false;\n            for (var j = 0; j < this.props.inquiries.length; j++) {\n                isSame = (\n                    this.props.inquiries[j].inquiry.value === \n                    this.inquiries[i].value ? true : isSame);\n            }\n            if (!isSame) {\n                filteredInquiries = filteredInquiries.concat(this.inquiries[i]);\n            }\n        }\n        return filteredInquiries;\n    }\n\n    onAddInquiry() {\n        if (this.state.inquiry.value !== '') {\n            this.props.inquiries.push({\n                inquiry: this.state.inquiry,\n                detail: '',\n                specificDetail: [],\n                answer: '',\n                remarks: '',\n                relatedTickets: [],\n                supportDocs: []\n            });\n            \n            this.props.refreshInquiryState();\n            this.setState({inquiry: { value: '', label: '' }});\n        }\n    }\n\n    onRemoveInquiry(index: number) {\n        this.props.inquiries.splice(index, 1);\n        this.props.refreshInquiryState();\n    }\n\n\n    render(): JSX.Element {\n        return (\n            <div className='main-content'>\n                <div className='section' style={{paddingRight: '2.5rem'}}>\n                    <div className='header-1'>Update Inquiry</div>\n                    <div className='text'>\n                        Add an inquiry type and then add the question and its details after\n                    </div>\n                    <div className='sub-section'>\n                        {true ? (\n                            <CustomTable \n                                rows={this.props.inquiries}\n                                renderHeader={() => this.renderTableHeader()}\n                                renderRow={(rowData: any, index: number) => \n                                    this.renderTableRow(rowData, index)} />\n                        ) : (null)}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            <TableCell>\n                <Dropdown \n                    choices={this.getFilteredInquiries()}\n                    value={this.state.inquiry}\n                    onChange={(value: DropdownChoice) => {\n                        this.setState({inquiry: value});\n                    }} />\n            </TableCell>\n            <TableCell style={{width: '200px', textAlign: 'center'}}>\n                <TextButton \n                    icon={faPlus} \n                    label=\"Add inquiry\"\n                    onClick={() => {\n                        this.onAddInquiry();\n                    }} />\n            </TableCell>\n            </>\n        );\n    }\n\n    renderTableRow(inquiry: InquiryData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell colSpan={2}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={11} className='header-2'>\n                            {inquiry.inquiry.label}\n                        </Grid>\n                        <Grid item xs={1} style={{textAlign: 'right'}}>\n                            <IconButton\n                                icon={faPen}\n                                onClick={() => {\n                                    this.onRemoveInquiry(index);\n                                }}/>\n                            <IconButton\n                                icon={faMinusCircle}\n                                onClick={() => {\n                                    this.onRemoveInquiry(index);\n                                }}/>\n                        </Grid>\n                    </Grid>\n                    <div style={{position: 'relative'}}>\n                        <div style={{paddingTop: '0.5rem'}} />\n                        <div className='line-border' />\n                        <div style={{paddingTop: '0.5rem'}} />\n                        <Grid container spacing={2}>\n                            <Grid item xs={6}>\n                                <InputField \n                                    placeholder='Details of inquiry (Question)'\n                                    value={inquiry.detail}\n                                    onChange={(value: string) => {\n                                        inquiry.detail = value;\n                                        this.props.refreshInquiryState();\n                                    }} />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <InputChip \n                                    placeholder='Specific Details (Type benefit/doctor/facility to describe inquiry, press enter to add)'\n                                    value={inquiry.specificDetail}\n                                    onAdd={(value: string) => {\n                                        inquiry.specificDetail.push(value);\n                                        this.props.refreshInquiryState();\n                                    }}\n                                    onDelete={(index: number) => {\n                                        inquiry.specificDetail.splice(index, 1);\n                                        this.props.refreshInquiryState();\n                                    }} />\n                            </Grid>\n                        </Grid>\n                        <InputField \n                            placeholder='Answer'\n                            value={inquiry.answer}\n                            onChange={(value: string) => {\n                                inquiry.answer = value;\n                                this.props.refreshInquiryState();\n                            }} />\n                        <InputField \n                            placeholder='Remarks (Optional)'\n                            value={inquiry.remarks}\n                            onChange={(value: string) => {\n                                inquiry.remarks = value;\n                                this.props.refreshInquiryState();\n                            }} />\n                        <Grid container spacing={2}>\n                            <Grid item xs={6}>\n                                <InputChip \n                                    placeholder='Related Tickets (Optional, press enter to add)'\n                                    value={inquiry.relatedTickets}\n                                    onAdd={(value: string) => {\n                                        inquiry.relatedTickets.push(value);\n                                        this.props.refreshInquiryState();\n                                    }}\n                                    onDelete={(index: number) => {\n                                        inquiry.relatedTickets.splice(index, 1);\n                                        this.props.refreshInquiryState();\n                                    }} />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <CustomDropzone \n                                    accept='image/*'\n                                    onDrop={(files: File[]) => {\n                                        inquiry.supportDocs.push(files[0]);\n                                        this.props.refreshInquiryState();\n                                    }}/>\n                            </Grid>\n                            <Grid item xs={2}>\n                                {inquiry.supportDocs.map((doc, index) => {\n                                    return (\n                                        <CustomChip\n                                            label={doc.name}\n                                            value={index.toString()}\n                                            onDelete={(value: string) => {\n                                                inquiry.supportDocs.splice(parseInt(value), 1);\n                                                this.props.refreshInquiryState();\n                                            }} />\n                                    );\n                                })}\n                            </Grid>\n                        </Grid>\n                    </div>\n                </TableCell>\n            </TableRow>\n        );\n    }\n}","import * as React from 'react';\nimport './component-style.scss';\nimport { Modal, Fade } from '@material-ui/core';\nimport { IconButton } from './IconButton';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\ninterface IProps {\n    className?: string;\n    isOpen: boolean;\n    renderHeader: () => JSX.Element;\n    renderContent: () => JSX.Element;\n    renderFooter: () => JSX.Element;\n    handleClose?: () => void;\n}\n\nexport class CustomModal extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <div>\n                <Modal\n                    className={`${this.props.className ? this.props.className : ''} custom-modal`}\n                    open={this.props.isOpen}\n                    onClose={this.props.handleClose}\n                    closeAfterTransition>\n                    <Fade in={this.props.isOpen}>\n                        <div className='modal'>\n                            {this.props.handleClose ? (\n                                <div style={{textAlign: 'right'}}>\n                                    <IconButton\n                                        icon={faTimes} \n                                        size='1x' \n                                        onClick={this.props.handleClose} />\n                                </div>\n                                \n                            ) : null}\n                            <div className='header'>\n                                {this.props.renderHeader()}\n                            </div>\n                            <div className='content'>\n                                {this.props.renderContent()}\n                            </div>\n                            <div className='bottom'>\n                                {this.props.renderFooter()}\n                            </div>\n                        </div>\n                    </Fade>\n                </Modal>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { match } from \"react-router-dom\";\nimport {\n    UpdateData, \n    AccommodationData, \n    DiagnosisData, \n    PhysicianData, \n    ProcedureData,\n    ItemData,\n    FileData\n} from './UpdateTicketProps';\nimport { Grid, Button, Snackbar } from '@material-ui/core';\nimport { SummarySection } from './Components/SummarySection';\nimport { UpdateSection } from './Components/UpdateSection';\nimport { API } from '../API';\nimport { AccommodationsSection } from './Components/AccommodationsSection';\nimport { DiagnosesSection } from './Components/DiagnosesSection';\nimport { PhysiciansSection } from './Components/PhysiciansSection';\nimport { ProceduresSection } from './Components/ProceduresSection';\nimport { OtherDetailsSection } from './Components/OtherDetailsSection';\nimport { DischargeDetailsSection } from './Components/DischargeDetailsSection';\nimport { UploadedDocumentsSection } from './Components/UploadedDocumentsSection';\nimport { LeftPanelSection } from '../LeftPanelSection/LeftPanelSection';\nimport { DropdownChoice, TicketData, MemberData, InquiryData, ClientData } from '../Models';\nimport { UpdateInquirySection } from './Components/UpdateInquirySection';\nimport { CustomTabs } from '../Components/CustomTab';\nimport { Payloads } from '../Payloads';\nimport { Processmaker } from '../Processmaker';\nimport { Loading } from '../Components/Loading';\nimport { CustomModal } from '../Components/CustomModal';\nimport { TicketFooter } from '../TicketFooter';\n\ninterface IProps {\n    required: string;\n    match: match<MatchParams>;\n    history: any;\n}\n\ninterface MatchParams {\n    id: string;\n}\n\ninterface IStates {\n    loadedResources: number;\n    isAssessmentModalOpen: boolean;\n    isSaving: boolean;\n    snackbarMessage: string | null;\n    lastSave?: Date;\n\n    /* Can save to tmp */\n    tabSelected: number;\n    member?: MemberData;\n    client?: ClientData;\n    ticket: TicketData;\n    confinement?: ConfinementDetails;\n    inquiries?: InquiryData[];\n\n    updateState: UpdateData;\n    accommodationState: AccommodationData;\n    diagnosisState: DiagnosisData;\n    physicianState: PhysicianData;\n    procedureState: ProcedureData;\n    otherDetailState: ItemData;\n    fileState: FileData;\n}\n\nexport interface ConfinementDetails {\n    provider: DropdownChoice;\n    dateAdmitted: Date;\n    confinementKind: string;\n    giftGiven: boolean;\n    coverage: DropdownChoice;\n    ticketNo: string;\n    paidBy: string;\n    philhealthAmount: number;\n    finalBill: number;\n    dischargeDate: Date | null;\n    primaryDiagnosisIndex: number;\n\n    updates: UpdateData[];\n    accommodations: AccommodationData[];\n    diagnoses: DiagnosisData[];\n    physicians: PhysicianData[];\n    procedures: ProcedureData[];\n    items: ItemData[];\n    files: FileData[];\n}\n\ninterface ErrorMessageFormat {\n    message: string;\n    targets: string[];\n}\n\nexport class UpdateTicketPage extends React.Component<IProps, IStates> {\n\n    static RESOURCES_TO_LOAD = 5;\n\n    tabList: { value: number, label: string }[];\n    icd10Codes: DropdownChoice[];\n    cptCodes: DropdownChoice[];\n    facilities: DropdownChoice[];\n    doctors: DropdownChoice[];\n    agents: DropdownChoice[];\n\n    errors: ErrorMessageFormat[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            tabSelected: 1,\n            loadedResources: 0,\n            isAssessmentModalOpen: false,\n            isSaving: false,\n            snackbarMessage: null,\n            ticket: {\n                ticketChannel: '',\n                transactionNo: '',\n                ticketSource: '',\n                memberName: '',\n                clientName: '',\n                brokerName: '',\n                facility: { value: '', label: '' },\n                department: '',\n                callerName: '',\n                contactNo: '',\n                ticketType: '',\n                specificType: '',\n                urgency: '',\n                agent: { id: '', name: '' },\n                additionalNotes: '',\n                additionalFiles: [],\n                ticketNo: '',\n                pmCaseId: '',\n                status: 'Open',\n                createdBy: { id: '1', name: 'Jilmer Cariaso - Static' },\n                dateCreated: new Date(),\n                dateUpdated: new Date(),\n                dateEscalated: null\n            },\n            updateState: {\n                remarks: '',\n                date: new Date(),\n                hospitalBill: 0\n            },\n            accommodationState: {\n                roomType: '',\n                days: 0,\n                costPerDay: 0\n            },\n            diagnosisState: {\n                diagnosis: { value: '', label: '' },\n                remarks: '',\n                isFinal: false,\n                isPrimary: false\n            },\n            physicianState: {\n                physician: { value: '', label: '', params: ['', 'Admitting'] },\n                diagnosis: { value: '', label: '' },\n                remarks: '',\n                visits: 0,\n                amount: 0\n            },\n            procedureState: {\n                procedure: { value: '', label: '' },\n                diagnosis: { value: '', label: '' },\n                physician: { value: '', label: '' },\n                remarks: '',\n                date: new Date(),\n                amount: 0\n            },\n            otherDetailState: {\n                name: '',\n                type: { value: '', label: '' },\n                amount: 0\n            },\n            fileState: {\n                docName: '',\n                file: null\n            }\n        };\n\n        this.tabList = [\n            { value: 1, label: 'Summary' }, \n            { value: 2, label: 'Updates' }, \n            { value: 3, label: 'Room Accommodations' }, \n            { value: 4, label: 'Diagnoses' }, \n            { value: 5, label: 'Physicians' }, \n            { value: 6, label: 'Procedures' },  \n            { value: 7, label: 'PhilHealth & Discharge Details' }, \n            { value: 8, label: 'Other Details' }, \n            { value: 9, label: 'Uploaded Documents' }\n        ];\n\n        this.facilities = [];\n        this.agents = [];\n        this.doctors = [];\n        this.cptCodes = [];\n        this.icd10Codes = [];\n        this.errors = [];\n    }\n\n    componentDidMount() {\n        // this.loadTicketData(`customer-care/tickets/${this.props.match.params['ticketId']}`);\n        API.get(`tmp?` +\n            `filter[where][and][0][user_id]=${localStorage['user_id']}&` +\n            `filter[where][and][1][module]=Customer%20Care&` + \n            `filter[where][and][2][ticket_no]=${this.props.match.params['ticketId']}`,\n            (response) => {\n                if (response.length > 0) {\n                    this.setState({\n                        lastSave: new Date(response[0].timestamp),\n                        loadedResources: this.state.loadedResources + 1,\n                        tabSelected: response[0].data.tab_selected,\n                        member: response[0].data.member,\n                        ticket: response[0].data.ticket,\n                        confinement: response[0].data.confinement,\n                        inquiries: response[0].data.inquiries,\n                        updateState: response[0].data.update_state,\n                        accommodationState: response[0].data.accommodation_state,\n                        diagnosisState: response[0].data.diagnosis_state,\n                        physicianState: response[0].data.physician_state,\n                        procedureState: response[0].data.procedure_state,\n                        otherDetailState: response[0].data.other_detail_state,\n                        fileState: response[0].data.file_state\n                    });\n                } else {\n                    this.loadTicketData(`customer-care/tickets/${this.props.match.params['ticketId']}`);\n                }\n            },\n            (error) => {\n                console.log(error);\n                this.loadTicketData(`customer-care/tickets/${this.props.match.params['ticketId']}`);\n            });\n\n        API.get('facilities',\n            (response) => {\n                this.setState({loadedResources: this.state.loadedResources + 1});\n                this.facilities = response.map(facility => {\n                    return { \n                        value: facility.facility_id,\n                        label: facility.name \n                    }\n                });\n            },\n            (error) => {\n                console.log(error);\n            });\n\n        API.get('icd10-codes?filter[limit]=1000',\n            (response) => {\n                console.log(response);  \n                this.setState({loadedResources: this.state.loadedResources + 1});\n                this.icd10Codes = response.map(icd10Code => {\n                    return { \n                        value: icd10Code.full_code,\n                        label: icd10Code.abbreviated_description \n                    };\n                });\n            },\n            (error) => {\n                console.log(error);\n            });\n\n        API.get('cpts?filter[limit]=1000',\n            (response) => {\n                this.setState({loadedResources: this.state.loadedResources + 1});\n                this.cptCodes = response.map(cptCode => {\n                    return {\n                        value: cptCode.code,\n                        label: cptCode.label \n                    };\n                });\n            }, \n            (error) => {\n                console.log(error);\n            });\n\n        API.get('doctors',\n            (response) => {\n                this.setState({loadedResources: this.state.loadedResources + 1});\n                this.doctors = response.map(doctor => {\n                    return {\n                        value: doctor._id,\n                        label: ('Dr. ' + doctor.first_name +  ' ' + doctor.last_name),\n                        params: [doctor.type]\n                    };\n                });\n            }, \n            (error) => {\n                console.log(error);\n            });\n    }\n\n    loadTicketData = (url: string) => {\n        API.get(url, \n            (response) => {\n                console.log(response);\n                this.setState({loadedResources: this.state.loadedResources + 1});\n                const ticketCategory = response.ticket_category;\n                const confinement = ticketCategory.confinement_details;\n                const inquiry = ticketCategory.inquiry_details;\n\n                this.setState({ticket: Payloads.getTicketData(response, this.props.match.params['appNo'])});\n\n                if (confinement) {\n                    this.setState({confinement: Payloads.getConfinementData(confinement, response)});\n                }\n                \n                if (inquiry) {\n                    this.setState({inquiries: inquiry.inquiry_list.map(value => {\n                        return {\n                            inquiry: { value: '', label: value.inquiry },\n                            detail: value.value,\n                            specificDetail: value.specific_detail,\n                            answer: value.answer,\n                            remarks: value.remarks,\n                            relatedTickets: value.related_tickets,\n                            supportDocs: value.support_docs\n                        };\n                    })});\n                }\n\n                if (response.member_id.length > 0) {\n                    API.get(`customer-care/members/${response.member_id}`, \n                        (response) => {\n                            this.setState({member: Payloads.getMemberData(response)});\n                            API.get(`customer-care/members/${response.member_id}/benefits`,\n                                (response) => {\n                                    console.log(response);\n                                },\n                                (error) => {\n                                    console.log(error);\n                                });\n                        },\n                        (error) => {\n                            console.log(error);\n                        });\n                }\n\n                if (response.client_id.length > 0) {\n                    API.get(`customer-care/clients/${response.client_id}`,\n                        (response) => {\n                            this.setState({client: Payloads.getClientData(response)});\n                        },\n                        (error) => {\n                            console.log(error);\n                        });\n                }\n                \n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    getErrorList = () => {\n        let errors: ErrorMessageFormat[] = [];\n\n        const confinement = this.state.confinement;\n        \n        if (confinement) {\n\n            /* Check if there's a physician assigned to each diagnosis */\n            let errorDiagnosis = confinement.diagnoses.filter(diagnosis => {\n                let matched = false;\n                confinement.physicians.map(physician => {\n                    matched = physician.diagnosis.value === diagnosis.diagnosis.value ? true : matched;\n                });\n                return !matched;\n            });\n\n            if (errorDiagnosis.length > 0) {\n                errors.push({\n                    message: 'Please assign a physician for the following diagnoses before proceding:',\n                    targets: errorDiagnosis.map(diagnosis => {\n                        return `${diagnosis.diagnosis.value} ${diagnosis.diagnosis.label}`\n                    })\n                });\n                this.setState({tabSelected: 5});\n            }\n        }\n        return errors;\n    }\n\n    uploadFiles = (fileData: FileData[], nextAction: Function) => {\n        let hasFiles = false;\n\n        const files = new FormData();\n        fileData.forEach(file => {\n            if (file.file && file.file['path'] && !file.file['field']) {\n                files.append(`supported_documents`, file.file);\n                hasFiles = true;\n            }\n        });\n\n        this.setState({isSaving: true});\n\n        if (hasFiles) {\n            API.postFormData('tmp/upload?path=customer-care', files,\n                (uploadResponse) => {\n                    nextAction(uploadResponse);\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        isSaving: false,\n                        snackbarMessage: 'Failed to upload files.'\n                    });\n                });\n        } else {\n            nextAction([]);\n        }\n    }\n\n    apiUpdateTicket = (onSuccess: Function) => {\n        const confinement = this.state.confinement;\n        const inquiries = this.state.inquiries;\n\n        if ((!this.state.member && !this.state.client) || (!confinement && !inquiries)) return;\n\n        const fileData = this.state.confinement ? (\n            this.state.confinement.files.filter(file => file.file ? !file.file['field'] : false) \n        ) : [];\n        \n        this.uploadFiles(fileData, (uploadResponse) => {\n            const payload = Payloads.getPutTicketPayload(\n                this.state.ticket,\n                !uploadResponse.error && uploadResponse.length > 0 ? (\n                    confinement ? (\n                        confinement.files\n                            .map(file => { \n                                return {\n                                    ...file.file,\n                                    docName: file.docName\n                                }\n                            })\n                            .filter(file => file ? file['field'] : false)\n                            .concat(\n                                uploadResponse.map((response, index) => {\n                                    return {\n                                        ...response,\n                                        docName: fileData[index].docName\n                                    }\n                                })\n                            )\n                    ) : [] \n                ) : (\n                    confinement ? (\n                        confinement.files.map(file => {\n                            return {\n                                ...file.file,\n                                docName: file.docName\n                            }\n                        })\n                    ) : []\n                ),\n                this.state.member, \n                this.state.client,\n                this.state.confinement,\n                this.state.inquiries\n            );\n\n            console.log(payload);\n            API.put(`customer-care/tickets/${this.props.match.params['ticketId']}`, payload,\n                (response) => {\n                    console.log(response);\n                    processmakerGetCase(this.props.match.params['caseId']);\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        isSaving: false,\n                        snackbarMessage: 'Failed to update ticket.'\n                    });\n                });\n            \n\n            const processmakerGetCase = (caseId: string) => {\n                Processmaker.get(`cases/${caseId}`,\n                    (response) => {\n                        console.log(response);\n                        if (response['current_task'][0]['tas_title'] === 'Create Ticket') {\n                            processmakerRouteCase(caseId);\n                        } else {\n                            onSuccess();\n                        }\n                    },\n                    (error) => {\n                        console.log(error);\n                        this.setState({\n                            isSaving: false,\n                            snackbarMessage: 'Failed to update ticket.'\n                        });\n                    }\n                );\n            }\n\n            const processmakerRouteCase = (caseId: string) => {\n                Processmaker.put(`cases/${caseId}/route-case`, {},\n                    (response) => {\n                        console.log(response);\n                        onSuccess();\n                    },\n                    (error) => {\n                        console.log(error);\n                        this.setState({\n                            isSaving: false,\n                            snackbarMessage: 'Failed to update ticket.'\n                        });\n                    }\n                );\n            }\n        });\n    }\n\n    saveForNow = () => {\n        const member = this.state.member;\n        const confinement = this.state.confinement;\n        const inquiries = this.state.inquiries;\n\n        if (!member || (!confinement && !inquiries)) return;\n\n        const fileData = this.state.confinement ? this.state.confinement.files : [];\n\n        this.uploadFiles(fileData, (uploadResponse) => {\n            if (!this.state.member) {\n                return;\n            }\n\n            const payload = {\n                user_id: localStorage['user_id'],\n                ticket_no: this.state.ticket.id,\n                module: 'Customer Care',\n                process: 'Update Ticket',\n                timestamp: new Date(),\n                data: {\n                    tab_selected: this.state.tabSelected,\n                    member: this.state.member,\n                    ticket: this.state.ticket,\n                    confinement: confinement ? {\n                        ...confinement,\n                        files: confinement.files\n                            .filter(file => file.file ? file.file['field'] : [])\n                            .concat(\n                                uploadResponse.map(file => {\n                                    return {\n                                        docName: file.name,\n                                        file: file\n                                    }\n                                })\n                            )\n                    } : undefined,\n                    inquiries: this.state.inquiries,\n                    update_state: this.state.updateState,\n                    accommodation_state: this.state.accommodationState,\n                    diagnosis_state: this.state.diagnosisState,\n                    physician_state: this.state.physicianState,\n                    procedure_state: this.state.procedureState,\n                    other_detail_state: this.state.otherDetailState,\n                    file_state: this.state.fileState\n                }\n            };\n            \n            API.post('tmp', JSON.stringify(payload),\n                (response) => {\n                    console.log(response);\n                    if (response._id) {\n                        this.setState({\n                            isSaving: false,\n                            snackbarMessage: 'Progress saved.',\n                            lastSave: new Date()\n                        });\n                    } else {\n                        this.setState({\n                            isSaving: false,\n                            snackbarMessage: 'Failed to save progress.'\n                        });\n                    }\n                },\n                (error) => {\n                    console.log(error);\n                    this.setState({\n                        isSaving: false,\n                        snackbarMessage: 'Failed to save progress.'\n                    });\n                });\n        });\n    }\n\n    render(): JSX.Element {\n        return (\n            <Grid container className='customer-care-main'>\n                {this.state.loadedResources !== UpdateTicketPage.RESOURCES_TO_LOAD || this.state.isSaving ? (\n                    <div \n                        style={{\n                            backgroundColor: '#00000055', \n                            zIndex: 100, \n                            position: 'fixed', \n                            width: '100%', \n                            height: '100%'}}>\n                        <Loading height='10rem'/>\n                    </div>\n                    \n                ) : (null)}\n\n                <Snackbar\n\t\t\t        anchorOrigin={{\n\t\t\t          vertical: 'top',\n\t\t\t          horizontal: 'right',\n\t\t\t        }}\n\t\t\t        open={this.state.snackbarMessage ? true : false}\n\t\t\t        autoHideDuration={6000}\n\t\t\t        onClose={() => {\n                        this.setState({snackbarMessage: null});\n                    }}\n                    message={this.state.snackbarMessage} />\n\n                <CustomModal\n                    className='modal'\n                    isOpen={this.state.isAssessmentModalOpen}\n                    handleClose={() => this.setState({isAssessmentModalOpen: false})}\n                    renderHeader={() => {\n                        return <>Missing Information</>\n                    }}\n                    renderContent={() => {\n                        return (\n                            <div className='header-2'>\n                                {this.errors.map(error => {\n                                    return (\n                                        <>\n                                        <p>{error.message}</p>\n                                        <p>\n                                            {error.targets.map(target => {\n                                                return <div>{`- ${target}`}</div>\n                                            })}\n                                        </p>\n                                        </>\n                                    );\n                                })}\n                            </div>\n                        );\n                    }}\n                    renderFooter={() => {\n                        return (\n                            <Button \n                                variant='outlined' \n                                color='primary'\n                                onClick={() => {this.setState({isAssessmentModalOpen: false})}}>\n                                Okay\n                            </Button>\n                        );\n                    }} />\n                \n                <LeftPanelSection \n                    member={this.state.member}\n                    client={this.state.client}\n                    ticket={this.state.ticket}\n                    ticketStatus='Update'\n                    disableRecentTickets\n                    disableLinkedTickets />\n\n                {this.state.confinement ? (\n                    this.renderInpatientContent(this.state.confinement)\n                ) : this.state.inquiries ? (\n                    this.renderInquiryContent(this.state.inquiries)\n                ) : null}\n\n                <TicketFooter\n                    disableFinalAssessment={this.state.ticket.ticketType === 'Inquiry'}\n                    disableAssign\n                    disableEscalate\n                    lastSave={this.state.lastSave}\n                    onSaveForNow={() => {\n                        this.saveForNow();\n                    }} \n                    onAssign={ () => null}\n                    onEscalate={() => null}\n                    onFinalAssessment={ () => {\n                        this.errors = this.getErrorList();\n                        if (this.errors.length == 0) {\n                            this.apiUpdateTicket(() => {\n                                this.props.history.push(\n                                    '#/customer-care/resolve-ticket/' +\n                                    this.props.match.params['caseId'] + '/' +\n                                    this.props.match.params['appNo'] + '/' +\n                                    this.props.match.params['ticketId']);\n                                window.location.reload();\n                            });\n                        } else {\n                            this.setState({isAssessmentModalOpen: true});\n                        }\n                    }}\n                    onUpdateTicket={() => {\n                        this.apiUpdateTicket(() => {\n                            this.props.history.push('#/customer-care/tickets');\n                            window.location.reload();\n                        });\n                    }} />\n            </Grid>\n        );\n    }\n\n    renderInpatientContent(confinement: ConfinementDetails): JSX.Element {\n        return (\n            <div className='main-content'>\n                <CustomTabs \n                    tabList={this.tabList}\n                    selectedTab={this.state.tabSelected}\n                    setSelectedTab={(index: number) => {\n                        this.setState({tabSelected: index});\n                    }} />\n                    \n                {this.state.tabSelected === 1 ? (\n                    <SummarySection \n                        ticketNo={this.state.ticket.ticketNo} \n                        updates={confinement.updates}\n                        accommodations={confinement.accommodations}\n                        diagnoses={confinement.diagnoses}\n                        physicians={confinement.physicians}\n                        procedures={confinement.procedures}\n                        items={confinement.items}\n                        provider={confinement.provider}\n                        dateAdmitted={confinement.dateAdmitted}\n                        confinementKind={confinement.confinementKind}\n                        coverage={confinement.coverage}\n                        philhealthAmount={confinement.philhealthAmount}\n                        finalBill={confinement.finalBill}\n                        dischargeDate={confinement.dischargeDate}\n                        setTabSelected={(value: number) => this.setState({tabSelected: value})}/>\n                    \n\n                ) : this.state.tabSelected === 2 ? (\n                    <UpdateSection \n                        confinement={confinement}\n                        updates={confinement.updates}\n                        state={this.state.updateState}\n                        refreshUpdatesState={() => {\n                            this.setState({confinement: confinement});\n                        }} /> \n\n                ) : this.state.tabSelected === 3 ? (\n                    this.state.ticket ? (\n                        <AccommodationsSection\n                            accommodations={confinement.accommodations}\n                            state={this.state.accommodationState}\n                            facilitiesList={this.facilities}\n                            provider={confinement.provider}\n                            dateAdmitted={confinement.dateAdmitted}\n                            confinementKind={confinement.confinementKind}\n                            refreshAccommodationsState={() => {\n                                this.setState({confinement: confinement});\n                            }} />\n                    ) : null\n\n                ) : this.state.tabSelected === 4 ? (\n                    this.state.ticket ? (\n                        <DiagnosesSection \n                            diagnoses={confinement.diagnoses}\n                            state={this.state.diagnosisState}\n                            physicians={confinement.physicians}\n                            procedures={confinement.procedures}\n                            diagnosesList={this.icd10Codes}\n                            primaryDiagnosisIndex={confinement.primaryDiagnosisIndex}\n                            refreshDiagnosisStateChange={() => {\n                                this.setState({confinement: confinement});\n                            }}\n                            setPrimaryDiagnosisIndex={(index: number) => {\n                                this.setState(prevState => ({\n                                    ...prevState,\n                                    confinement: {\n                                        ...confinement,\n                                        primaryDiagnosisIndex: index\n                                    }\n                                }));\n                            }} />\n                    ) : null\n\n                ) : this.state.tabSelected === 5 ? (\n                    <PhysiciansSection \n                        physicians={confinement.physicians}\n                        state={this.state.physicianState}\n                        physiciansList={this.doctors}\n                        diagnosesList={confinement.diagnoses}\n                        refreshPhysiciansStateChange={() => {\n                            this.setState({confinement: confinement});\n                        }} />\n\n                ) : this.state.tabSelected === 6 ? (\n                    <ProceduresSection\n                        procedures={confinement.procedures}\n                        state={this.state.procedureState}\n                        proceduresList={this.cptCodes}\n                        diagnosesList={confinement.diagnoses}\n                        physiciansList={this.doctors}\n                        refreshProceduresStateChange={() => {\n                            this.setState({confinement: confinement});\n                        }} />\n\n                ) : this.state.tabSelected === 7 ? (\n                    <DischargeDetailsSection \n                        dateAdmitted={confinement.dateAdmitted}\n                        coverage={confinement.coverage} \n                        ticketNo={confinement.ticketNo} \n                        paidBy={confinement.paidBy} \n                        philhealthAmount={confinement.philhealthAmount}\n                        finalBill={confinement.finalBill} \n                        dischargeDate={confinement.dischargeDate}\n                        onUpdateTicketStateChange={(attrName: string, value: any) => {\n                            this.setState(prevState => ({\n                                ...prevState,\n                                confinement: {\n                                    ...confinement,\n                                    [attrName]: value\n                                }\n                            }));\n                        }} />\n                    \n                ) : this.state.tabSelected === 8 ? (\n                    <OtherDetailsSection \n                        items={confinement.items}\n                        state={this.state.otherDetailState}\n                        refreshItemsStateChange={() => {\n                            this.setState({confinement: confinement});\n                        }} />\n                    \n                ) : this.state.tabSelected === 9 ? (\n                    <UploadedDocumentsSection \n                        files={confinement.files}\n                        state={this.state.fileState}\n                        refreshFilesStateChange={() => {\n                            this.setState({confinement: confinement});\n                        }} />\n                    \n                    \n                    \n                ) : null}\n            </div>\n        );\n    }\n\n    renderInquiryContent(inquiries: InquiryData[]): JSX.Element {\n        return (\n            <UpdateInquirySection \n                inquiries={inquiries}\n                refreshInquiryState={() => {\n                    this.setState({inquiries: inquiries});\n                }} />\n        );\n    }\n}","/**\n * Asynchronously loads the component for FeaturePage\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Components, Utils } from '@hims/core';\nconst { loadable } = Utils;\nconst { LoadingIndicator } = Components.UI;\n\n\nexport default loadable(async () => {\n  let {HomePage,  mapStateToProps, mapDispatchToProps} = await import('./HomePage');\n  const Component = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(HomePage);\n  return {default: Component};\n}, {\n  fallback: <LoadingIndicator />,\n});\n","import * as React from 'react';\nimport { Grid } from '@material-ui/core';\n\ninterface IProps {\n    data: any[];\n    renderHeader: () => JSX.Element;\n    renderRow: (rowData: any, index: number) => JSX.Element;\n}\n\nexport class ComplexTable extends React.Component<IProps> {\n\n    render(): JSX.Element {\n        return (\n            <div className='complex-table'>\n                <Grid className='header' container spacing={1}>\n                    {this.props.renderHeader()}\n                </Grid>\n                \n                {this.props.data.map((rowData, index) => {\n                    const backColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                    return (\n                        <div className='item' style={{backgroundColor: backColor}}>\n                            {this.props.renderRow(rowData, index)}\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { ComplexTable } from 'Pages/CustomerCarePage/Components/ComplexTable';\nimport { Grid } from '@material-ui/core';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { ProcedureData, AvailmentDetails, DiagnosisData } from 'Pages/CustomerCarePage/Models';\nimport { InputArea } from 'Pages/CustomerCarePage/Components/InputArea';\nimport { CustomRadio } from 'Pages/CustomerCarePage/Components/CustomRadio';\nimport { NumberField } from 'Pages/CustomerCarePage/Components/NumberField';\n\ninterface IProps {\n    availment: AvailmentDetails;\n    refreshAvailmentState: () => void;\n}\n\n\nexport class ApproveAvailmentSection extends React.Component<IProps> {\n\n    constructor(props: IProps) {\n        super(props);\n    }\n\n    getProceduresCost = (diagnosis: DiagnosisData) => {\n        let total = 0;\n        diagnosis.procedures.map(procedure => {\n            total += procedure.amount;\n        });\n        return total;\n    }\n\n    getApprovedAvailmentsCost = () => {\n        let total = 0;\n        this.props.availment.diagnoses.map(diagnosis => {\n            diagnosis.procedures.map(procedure => {\n                total += (procedure.assessmentType === 'Approved' ? procedure.amount : 0);\n            });\n        });\n        return total;\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Approve or Disapprove Availments</div>\n                <div className='sub-section'>\n                    <div className='light-text'>PROVIDER</div>\n                    <div className='small-text'>\n                        {this.props.availment.provider.value + ' - ' + this.props.availment.provider.label}\n                    </div>\n                    <div style={{float: 'right'}}>\n                        <span className='small-text'>TOTAL AMOUNT</span>\n                        <span style={{marginLeft: '1rem'}} />\n                        <span className='header-2'>\n                            {'PHP ' + GlobalFunction.formatNumber(this.getApprovedAvailmentsCost(), true)}\n                        </span>\n                    </div>\n                </div>\n                <div className='sub-section'>\n                    <ComplexTable \n                        data={this.props.availment.diagnoses}\n                        renderHeader={() => this.renderHeader()}\n                        renderRow={(rowData: any, index: number) => \n                            this.renderRow(rowData, index)} />\n                </div>\n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderHeader(): JSX.Element {\n        const headerNameStyle = {\n            margin: 0,\n            padding: '12px 0 12px 0'\n        };\n\n        return (\n            <>\n                <Grid item xs={4}>\n                    <div className='header-2' style={headerNameStyle}>Diagnosis</div>\n                </Grid>\n                <Grid item xs={3}>\n                    <div className='header-2' style={headerNameStyle}>Doctor</div>\n                </Grid>\n                <Grid item xs={2}>\n                    <div className='header-2' style={headerNameStyle}>Professional Fee</div>\n                </Grid>\n                <Grid item xs={3}>\n                    <div className='header-2' style={{...headerNameStyle, textAlign: 'right'}}>\n                        Total Amt. of Procedures\n                    </div>\n                </Grid>\n            </>\n        );\n    }\n\n    renderRow(diagnosis: DiagnosisData, _index: number): JSX.Element {\n        return (\n            <>\n                <Grid className='small-section' container>\n                    <Grid item xs={4}>\n                        {diagnosis.icd10Code.value + ' - ' + diagnosis.icd10Code.label}\n                    </Grid>\n                    <Grid item xs={3}>\n                        {diagnosis.doctors[0].name}\n                    </Grid>\n                    <Grid item xs={2}>\n                        {'PHP ' + GlobalFunction.formatNumber(diagnosis.doctors[0].fee, true)}\n                    </Grid>\n                    <Grid item xs={3} style={{fontWeight: 'bold', textAlign: 'right'}}>\n                        {'PHP ' + GlobalFunction.formatNumber(this.getProceduresCost(diagnosis), true)}\n                    </Grid>\n                </Grid>\n                <div className='line-border' />\n                {diagnosis.procedures.map((procedure, index) => {\n                    return this.renderProcedure(procedure, index);\n                })}\n            </>\n        );\n    }\n\n    renderProcedure(procedure: ProcedureData, index: number): JSX.Element {\n        return (\n            <>\n            <div className='line-border' />\n            <div className='section' >\n                \n                <Grid container>\n                    <Grid item xs={4}>\n                        <div>\n                            <Grid container>\n                                <Grid item xs={2} style={{padding: '0 0.5rem', marginTop: '-3px'}}>\n                                    <div className='number-item'>{index + 1}</div>\n                                </Grid>\n                                <Grid item xs={10} className='header-2'>\n                                    {procedure.cptCode.value + ' - ' + procedure.cptCode.label}\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n                <Grid container spacing={1}>\n                    <Grid item xs={4}>\n                        <div>\n                            <Grid container>\n                                <Grid item xs={2} />\n                                <Grid item xs={10}>\n                                    <div className='sub-section'>\n                                        <div className='light-text'>AMOUNT</div>\n                                        <div className='small-text'>{'PHP ' + GlobalFunction.formatNumber(procedure.amount, true)}</div>\n                                    </div>\n                                    <div className='sub-section'>\n                                        <div className='light-text'>PHILHEALTH REQUIRED?</div>\n                                        <div className='small-text'>{procedure.isPHIC ? 'Yes' : 'No'}</div>\n                                    </div>\n                                    <div className='sub-section'>\n                                        <div className='light-text'>DATE OF AVAILMENT</div>\n                                        <div className='small-text'>{GlobalFunction.toCommonDateString(procedure.dateAdded)}</div>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <div className='sub-section'>\n                            <div className='light-text'>SYSTEM ASSESSMENT</div>\n                            <div className='small-text'>{'Approve *'}</div>\n                        </div>\n                        <div className='sub-section'>\n                            <div className='light-text'>REMAINING BALANCE</div>\n                            <div className='small-text'>{'PHP ' + 0 + '.00 *'}</div>\n                        </div>\n                        <div className='sub-section'>\n                            <div className='light-text'>CLAUSE</div>\n                            <div className='small-text'>{'Laboratory tests, x-rays, and other diagnostic examinations prescribed by the INTELLICARE physician*'}</div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <div className='sub-section'>\n                            <div className='light-text'>Choose Assessment</div>\n                            <CustomRadio \n                                label='Approve'\n                                checkedCondition={procedure.assessmentType === 'Approved'}\n                                onChange={() => {\n                                    procedure.assessmentType = 'Approved';\n                                    this.props.refreshAvailmentState();\n                                }} />\n                            {procedure.assessmentType === 'Approved' ? (\n                                <NumberField\n                                    value={procedure.approvedAmount}\n                                    placeholder='Partial (optional)'\n                                    isFloat\n                                    onChange={(value: number) => {\n                                        procedure.approvedAmount = value;\n                                        this.props.refreshAvailmentState();\n                                    }} />\n                            ) : null}\n                            <CustomRadio \n                                label='Disapprove'\n                                checkedCondition={procedure.assessmentType === 'Disapproved'}\n                                onChange={() => {\n                                    procedure.assessmentType = 'Disapproved';\n                                    this.props.refreshAvailmentState();\n                                }} />\n                            <CustomRadio \n                                label='Pending'\n                                checkedCondition={procedure.assessmentType === 'Pending'}\n                                onChange={() => {\n                                    procedure.assessmentType = 'Pending';\n                                    this.props.refreshAvailmentState();\n                                }} />\n                        </div>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <div className='sub-section'>\n                            <div className='light-text'>Remarks</div>\n                            <InputArea\n                                value={procedure.assessmentRemarks}\n                                defaultRows={5}\n                                onChange={(value: string) => {\n                                    procedure.assessmentRemarks = value;\n                                    this.props.refreshAvailmentState();\n                                }} />\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid, TableCell, TableRow } from '@material-ui/core';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { API } from 'Pages/CustomerCarePage/API';\nimport { PartialBenefitData } from 'Pages/CustomerCarePage/Models';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { LabelDisplayedRowsArgs } from '@material-ui/core/TablePagination';\nimport { Loading } from 'Pages/CustomerCarePage/Components/Loading';\n\ninterface IProps {\n    memberId: string;\n}\n\ninterface IStates {\n    benefitCategory: string;\n    benefitName: string;\n    limitType: string;\n    limit: string;\n\n    benefitListUpdated: boolean;\n}\n\n\nexport class CheckBenefitSection extends React.Component<IProps, IStates> {\n\n    benefits: PartialBenefitData[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            benefitCategory: '',\n            benefitName: '',\n            limitType: '',\n            limit: '',\n            benefitListUpdated: false\n        }\n\n        this.benefits = [];\n    }\n\n    componentDidMount() {\n        this.loadBenefitsData();\n    }\n\n    loadBenefitsData(): void {\n        API.get(`customer-care/members/${this.props.memberId}/benefits`, \n            (response) => {\n                console.log(response);\n                this.benefits = this.combineNodes(\n                        response.filter(benefit => benefit.level == 6),\n                        response.filter(benefit => benefit.level == 7)\n                    ).map(benefit => {\n                        return {\n                            category: benefit.parent_name,\n                            name: benefit.name,\n                            limitType: (benefit.limits.length > 0 ? benefit.limits[0].type : 'None'),\n                            limit: (benefit.limits.length > 0 ? (\n                                benefit.limits[0].limit + ' ' + benefit.limits[0].limit_unit\n                            ) : '---')\n                        }\n                    });\n                this.setState({benefitListUpdated: true});\n\n                /* Testing only */\n                console.log(\n                    this.combineNodes(\n                        response.filter(benefit => benefit.level == 6),\n                        response.filter(benefit => benefit.level == 7)\n                    )\n                );\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    combineNodes = (parentNodes, childNodes) => {\n        const nodes = parentNodes.reduce ((result, parent) => {\n            parent.children.map ((child) => {\n            let foundChild = childNodes.find ((childNode) => child === childNode._id);\n        \n            if (foundChild) {\n                let child = Object.assign({}, foundChild);\n        \n                child['parent_name'] = parent.name;\n                child['parent_code'] = parent.code;\n                child['disabled'] = false;\n                result.push(child);\n            }\n            });\n        \n            return result;\n        }, new Array());\n        \n        return nodes;\n    };\n\n    getFilteredBenefitsData = () => {\n        return (\n            this.benefits\n                .filter(benefit => \n                    this.state.benefitCategory === '' || \n                    benefit.category.toLowerCase().includes(this.state.benefitCategory.toLowerCase()))\n                .filter(benefit => \n                    this.state.benefitName === '' || \n                    benefit.name.toLowerCase().includes(this.state.benefitName.toLowerCase()))\n                .filter(benefit => \n                    this.state.limitType === '' || \n                    benefit.limitType.toLowerCase().includes(this.state.limitType.toLowerCase()))\n                .filter(benefit => \n                    this.state.limit === '' || \n                    benefit.limit.toLowerCase().includes(this.state.limit.toLowerCase()))\n        );\n    }\n    \n    sortBenefits(attrName: string, isAsc: boolean): void {\n        this.benefits.sort((a: PartialBenefitData, b: PartialBenefitData) => \n            (a[attrName] && b[attrName] && a[attrName].toString().toLowerCase() > b[attrName].toString().toLowerCase()) ? \n                (isAsc ? 1 : -1) : (isAsc ? -1 : 1)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='section'>\n\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Check Benefits</div>\n                <div className='sub-section' />\n                <Grid container className='sub-section' spacing={5}>\n                    {this.renderSideBar()}\n\n                    {this.state.benefitListUpdated ? (\n                        this.renderBenefitsList()\n                    ) : (\n                        <Grid item xs={10}>\n                            <Loading height='10rem'/>\n                        </Grid>\n                    )}\n                    \n                </Grid>\n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderSideBar(): JSX.Element {\n        const rightBorderStyle = {\n            borderRight: '#3C394A22 solid 1px'\n        }\n        return (\n            <Grid item xs={2} style={rightBorderStyle}>\n                    <div className='small-text'>Contract ID</div>\n                    <div className='header-1'>{'2019-0928*'}</div>\n                <div className='sub-section'>\n                    <div className='small-text'>Room and Board</div>\n                </div>\n                <div className='sub-section'>\n                    <div className='light-text'>COVERAGE</div>\n                    <div className='sub-section'>\n                        <TextButton \n                            label='APE' \n                            onClick={() => {\n                                this.setState({benefitListUpdated: false});\n                                this.loadBenefitsData();\n                            }} />\n                    </div>\n                    <div className='sub-section'>\n                        <TextButton \n                            label='PPE' \n                            onClick={() => {\n                                this.setState({benefitListUpdated: false});\n                                this.loadBenefitsData();\n                            }} />\n                    </div>\n                    <div className='sub-section'>\n                        <TextButton \n                            label='Inpatient' \n                            onClick={() => {\n                                this.setState({benefitListUpdated: false});\n                                this.loadBenefitsData();\n                            }} />\n                    </div>\n                    <div className='sub-section'>\n                        <TextButton \n                            label='Outpatient' \n                            onClick={() => {\n                                this.setState({benefitListUpdated: false});\n                                this.loadBenefitsData();\n                            }} />\n                    </div>\n                    <div className='sub-section'>\n                        <TextButton \n                            label='Emergency' \n                            onClick={() => {\n                                this.setState({benefitListUpdated: false});\n                                this.loadBenefitsData();\n                            }} />\n                    </div>\n                </div>\n\n                <div className='sub-section'>\n                    <div className='header-1 light-text'>RIDERS</div>\n                </div>\n\n            </Grid>\n        );\n    }\n\n    renderBenefitsList(): JSX.Element {\n\n        return (\n            <Grid item xs={10}>\n                <div className='sub-section'>\n                    <CustomTable\n                        rows={this.getFilteredBenefitsData()}\n                        renderHeader={() => this.renderTableHeader()}\n                        renderRow={(rowData: any, index: number) => \n                            this.renderTableRow(rowData, index)}\n                        onChangeInfo={(info: LabelDisplayedRowsArgs) => \n                            `${info.from}-${info.to} out of ${info.count} benefits`}\n                        labelRowsPerPage='Show'\n                        rowsPerPageOptions={[10, 25, 50]} />\n                </div>\n\n            </Grid>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n\n        return (\n            <>\n            {this.renderHeaderColumn('benefitCategory', 'Benefit Category', '150px')}\n            {this.renderHeaderColumn('benefitName', 'Benefit', '250px')}\n            {this.renderHeaderColumn('limitType', 'Limit Type', '100px')}\n            {this.renderHeaderColumn('limit', 'Limit', '100px')}\n            </>\n        );\n    }\n\n    renderTableRow(benefit: PartialBenefitData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{benefit.category}</TableCell>\n                <TableCell>{benefit.name}</TableCell>\n                <TableCell>{benefit.limitType}</TableCell>\n                <TableCell>{benefit.limit}</TableCell>\n            </TableRow>\n        );\n    }\n\n    renderHeaderColumn(attrName: string, headerText: string, width: string): JSX.Element {\n        return (\n            <TableCell style={{width: width}}>\n                <span className='header-2'>{headerText}</span>\n                <div style={{float: 'right'}}>\n                    <IconButton \n                        icon={faSort} \n                        onClick={() => {\n                            this.sortBenefits(attrName, true);\n                            this.setState({benefitListUpdated: true});\n                        }} />\n                </div>\n                <InputField\n                    value={this.state[attrName]}\n                    onChange={(value: string) => {\n                        this.setState(prevState => ({...prevState, [attrName]: value}));\n                    }} />\n            </TableCell>\n        );\n    }\n}","import * as React from 'react';\nimport { ComplexTable } from 'Pages/CustomerCarePage/Components/ComplexTable';\nimport { Grid, TableCell, TableRow } from '@material-ui/core';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { ProcedureData, AvailmentDetails, DiagnosisData, LOAData, DropdownChoice } from 'Pages/CustomerCarePage/Models';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\nimport { NumberField } from 'Pages/CustomerCarePage/Components/NumberField';\nimport { DatePicker } from 'Pages/CustomerCarePage/Components/DatePicker';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { faPlus, faMinusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { IconButton } from 'Pages/CustomerCarePage/Components/IconButton';\nimport { ConfinementDetails } from '../ResolveTicketPage';\n\ninterface IProps {\n    availment?: AvailmentDetails;\n    loas: LOAData[];\n    loaToDelete: string[];\n    canEditLOAs: boolean;\n    refreshLOAStates: () => void;\n}\n\ninterface IStates {\n    loaNumber: number;\n    status: DropdownChoice;\n    amount: number;\n    loaDate: Date;\n    notes: string;\n}\n\nexport class SummaryAvailmentSection extends React.Component<IProps, IStates> {\n\n    APPROVED = 'Approved';\n    DISAPPROVED = 'Disapproved';\n    PENDING = 'Pending';\n\n    loaTypes: DropdownChoice[];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            loaNumber: 0,\n            status: { value: '', label: '' },\n            amount: 0,\n            loaDate: new Date(),\n            notes: ''\n        }\n\n        this.loaTypes = [\n            { value: '1', label: 'Pending' },\n            { value: '2', label: 'Claimed' },\n            { value: '3', label: 'Disapproved' }\n        ]\n    }\n\n    getProceduresCost = (diagnosis: DiagnosisData) => {\n        let total = 0;\n        diagnosis.procedures.map(procedure => {\n            total += procedure.amount;\n        })\n        return total;\n    }\n\n    getApprovedAvailments = (availment: AvailmentDetails | ConfinementDetails) => {\n        const approvedAvailments = availment.diagnoses.map(diagnosis => {\n            return {\n                ...diagnosis,\n                procedures: diagnosis.procedures\n                    .filter(procedure => procedure.assessmentType === this.APPROVED)\n                    .map(procedure => {return procedure;})\n            };\n        });\n        return approvedAvailments.filter(availment => availment.procedures.length > 0);\n    }\n\n    getDisapprovedAvailments = (availment: AvailmentDetails | ConfinementDetails) => {\n        const disapprovedAvailments = availment.diagnoses.map(diagnosis => {\n            return {\n                ...diagnosis,\n                procedures: diagnosis.procedures\n                    .filter(procedure => procedure.assessmentType === this.DISAPPROVED)\n                    .map(procedure => {return procedure;})\n            };\n        });\n        return disapprovedAvailments.filter(availment => availment.procedures.length > 0);\n    }\n\n    getApprovedAvailmentsCost = (availment: AvailmentDetails | ConfinementDetails) => {\n        let total = 0;\n        availment.diagnoses.map(diagnosis => {\n            diagnosis.procedures.map(procedure => {\n                total += (procedure.assessmentType === this.APPROVED ? procedure.amount : 0);\n            });\n        });\n        return total;\n    }\n\n    render(): JSX.Element {\n        if (this.props.availment) {\n            return this.renderAvailment(this.props.availment);\n        } else {\n            return <div>WALANG AVAILMENT</div>\n        }\n    }\n\n    renderAvailment(availment: AvailmentDetails | ConfinementDetails): JSX.Element {\n        const approvedAvailments = this.getApprovedAvailments(availment);\n        const disapprovedAvailments = this.getDisapprovedAvailments(availment);\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Summary of Approved Availments</div>\n                <div className='sub-section'>\n                    <div className='light-text'>PROVIDER</div>\n                    <div className='small-text'>\n                        {availment.provider.value + ' - ' + availment.provider.label}\n                    </div>\n                    <div style={{float: 'right'}}>\n                        <span className='small-text'>TOTAL AMOUNT</span>\n                        <span style={{marginLeft: '1rem'}} />\n                        <span className='header-2'>\n                            {'PHP ' + GlobalFunction.formatNumber(this.getApprovedAvailmentsCost(availment), true)}\n                        </span>\n                    </div>\n                </div>\n                {approvedAvailments.length > 0 ? (\n                    <div className='sub-section'>\n                        <ComplexTable \n                            data={this.getApprovedAvailments(availment)}\n                            renderHeader={() => this.renderHeader()}\n                            renderRow={(rowData: any, index: number) => \n                                this.renderRow(rowData, index)} />\n                    </div>\n                ) : null}\n                <div className='sub-section'>\n                    <CustomTable\n                        className={!this.props.canEditLOAs ? 'custom-table' : undefined}\n                        rows={this.props.loas}\n                        renderHeader={() => this.renderLOAHeader(this.props.canEditLOAs)}\n                        renderRow={(rowData: any, index: number) => \n                            this.renderLOARow(rowData, index)} />\n                </div>\n                <div className='sub-section' />\n                {disapprovedAvailments.length > 0 ? (\n                    <>\n                    <div className='header-1' style={{color: '#FD5451'}}>Disapproved Availments</div>\n                    <div className='sub-section'>\n                        <ComplexTable \n                            data={this.getDisapprovedAvailments(availment)}\n                            renderHeader={() => this.renderHeader()}\n                            renderRow={(rowData: any, index: number) => \n                                this.renderRow(rowData, index)} />\n                    </div>\n                    </>\n                ) : null}\n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderHeader(): JSX.Element {\n        const headerNameStyle = {\n            margin: 0,\n            padding: '12px 0 12px 0'\n        };\n\n        return (\n            <>\n                <Grid item xs={4}>\n                    <div className='header-2' style={headerNameStyle}>Diagnosis</div>\n                </Grid>\n                <Grid item xs={4}>\n                    <div className='header-2' style={headerNameStyle}>Doctor</div>\n                </Grid>\n                <Grid item xs={2}>\n                    <div className='header-2' style={headerNameStyle}>Professional Fee</div>\n                </Grid>\n                <Grid item xs={2}>\n                    <div className='header-2' style={{...headerNameStyle, textAlign: 'right'}}>\n                        Total Amt. of Procedures\n                    </div>\n                </Grid>\n            </>\n        );\n    }\n\n    renderRow(diagnosis: DiagnosisData, _index: number): JSX.Element {\n        return (\n            <>\n                <Grid className='small-section' container>\n                    <Grid item xs={4}>\n                        {diagnosis.icd10Code.value + ' - ' + diagnosis.icd10Code.label}\n                    </Grid>\n                    <Grid item xs={4}>\n                        {diagnosis.doctors[0].id + ' - ' + diagnosis.doctors[0].name}\n                    </Grid>\n                    <Grid item xs={2}>\n                        {'PHP ' + GlobalFunction.formatNumber(diagnosis.doctors[0].fee, true)}\n                    </Grid>\n                    <Grid item xs={2} style={{fontWeight: 'bold', textAlign: 'right'}}>\n                        {'PHP ' + GlobalFunction.formatNumber(this.getProceduresCost(diagnosis), true)}\n                    </Grid>\n                </Grid>\n                <div className='line-border' />\n                {diagnosis.procedures.map((procedure, index) => {\n                    return this.renderProcedure(procedure, index);\n                })}\n            </>\n        );\n    }\n\n    renderProcedure(procedure: ProcedureData, index: number): JSX.Element {\n\n        return (\n            <>\n            <div className='line-border' />\n            <div className='section' >\n                <Grid container>\n                    <Grid item xs={4}>\n                        <div>\n                            <Grid container>\n                                <Grid item xs={2} style={{padding: '0 0.5rem', marginTop: '-3px'}}>\n                                    <div className='number-item'>\n                                    {index + 1}\n                                    </div>\n                                </Grid>\n                                <Grid item xs={10} className='header-2'>\n                                    {procedure.cptCode.value + ' - ' + procedure.cptCode.label}\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={4}>\n                        <div>\n                            <Grid container>\n                                <Grid item xs={2} />\n                                <Grid item xs={10}>\n                                    <div className='sub-section'>\n                                        <div className='light-text'>AMOUNT</div>\n                                        <div className='small-text'>{'PHP ' + GlobalFunction.formatNumber(procedure.amount, true)}</div>\n                                    </div>\n                                    <div className='sub-section'>\n                                        <div className='light-text'>PHILHEALTH REQUIRED?</div>\n                                        <div className='small-text'>{procedure.isPHIC ? 'Yes' : 'No'}</div>\n                                    </div>\n                                    <div className='sub-section'>\n                                        <div className='light-text'>DATE OF AVAILMENT</div>\n                                        <div className='small-text'>{GlobalFunction.toCommonDateString(procedure.dateAdded)}</div>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <div className='sub-section'>\n                            <div className='light-text'>SYSTEM ASSESSMENT</div>\n                            <div className='small-text'>{'Approve *'}</div>\n                        </div>\n                        <div className='sub-section'>\n                            <div className='light-text'>REMAINING BALANCE</div>\n                            <div className='small-text'>{'PHP ' + 0 + '.00 *'}</div>\n                        </div>\n                        <div className='sub-section'>\n                            <div className='light-text'>CLAUSE</div>\n                            <div className='small-text'>{'Laboratory tests, x-rays, and other diagnostic examinations prescribed by the INTELLICARE physician*'}</div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <div className='sub-section'>\n                            <div className='light-text'>ASSESSMENT</div>\n                            <div className='header-2'>{procedure.assessmentType}</div>\n                        </div>\n                        <div className='sub-section'>\n                            <div className='light-text'>REMARKS</div>\n                            <div className='small-text'>\n                                {procedure.assessmentRemarks ? procedure.assessmentRemarks : 'NONE'}\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n            </>\n        );\n    }\n\n    renderLOAHeader(canEdit: boolean): JSX.Element {\n        if (canEdit) {\n            return (\n                <>\n                <TableCell style={{minWidth: '100px', maxWidth: '100px'}}>\n                    <div className='header-2'>LOA Number</div>\n                    <NumberField\n                        value={this.state.loaNumber}\n                        disableDelimiter={true}\n                        onChange={(value: number) => this.setState({loaNumber: value})} />\n                        \n                </TableCell>\n                <TableCell style={{minWidth: '100px', maxWidth: '100px'}}>\n                    <div className='header-2'>Amount</div>\n                    <NumberField\n                        value={this.state.amount}\n                        onChange={(value: number) => this.setState({amount: value})} />\n                </TableCell>\n                <TableCell style={{minWidth: '100px', maxWidth: '100px'}}>\n                    <div className='header-2'>Date</div>\n                    <DatePicker\n                        value={this.state.loaDate}\n                        onChange={(value: Date) => this.setState({loaDate: value})} />\n                </TableCell>\n                <TableCell>\n                    <div className='header-2'>Notes</div>\n                    <InputField\n                        value={this.state.notes}\n                        onChange={(value: string) => this.setState({notes: value})} />\n                </TableCell>\n                <TableCell style={{width: '100px', textAlign: 'center'}}>\n                    <TextButton \n                        label='Add LOA'\n                        icon={faPlus}\n                        onClick={() => {\n                            this.props.loas.push({\n                                loaNo: this.state.loaNumber,\n                                amount: this.state.amount,\n                                date: this.state.loaDate,\n                                notes: this.state.notes\n                            });\n                            this.props.refreshLOAStates();\n                            this.setState({\n                                loaNumber: 0, \n                                status: { value: '', label: '' },\n                                amount: 0,\n                                loaDate: new Date(),\n                                notes: ''\n                            });\n                        }}/>\n                </TableCell>\n                </>\n            );\n        }\n\n        return (\n            <>\n            <TableCell style={{minWidth: '100px', maxWidth: '100px'}}>LOA Number</TableCell>\n            <TableCell style={{minWidth: '100px', maxWidth: '100px'}}>Amount</TableCell>\n            <TableCell style={{minWidth: '100px', maxWidth: '100px'}}>Date</TableCell>\n            <TableCell>Notes</TableCell>\n            </>\n        );\n    }\n\n    renderLOARow(loa: LOAData, index: number): JSX.Element {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{loa.loaNo}</TableCell>\n                <TableCell>{`${GlobalFunction.formatNumber(loa.amount)} PHP`}</TableCell>\n                <TableCell>{GlobalFunction.toShortDateString(loa.date)}</TableCell>\n                <TableCell>{loa.notes}</TableCell>\n                {this.props.canEditLOAs ? (\n                    <TableCell>\n                        <Grid container>\n                            <Grid item xs={6} />\n                            <Grid item xs={6}>\n                                <IconButton\n                                    icon={faMinusCircle}\n                                    onClick={() => {\n                                        if (loa.id) {\n                                            this.props.loaToDelete.push(loa.id);\n                                        }\n                                        this.props.loas.splice(index, 1);\n                                        this.props.refreshLOAStates();\n                                    }}/>\n                            </Grid>\n                        </Grid>\n                    </TableCell>\n                ) : null}\n            </TableRow>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid, TableCell, TableRow, Tabs, Tab } from '@material-ui/core';\nimport { ConfinementDetails } from '../ResolveTicketPage';\nimport { GlobalFunction } from 'Pages/CustomerCarePage/GlobalFunction';\nimport { DiagnosisData, ProcedureData, DoctorData } from 'Pages/CustomerCarePage/Models';\nimport { TextButton } from 'Pages/CustomerCarePage/Components/TextButton';\nimport { CustomTable } from 'Pages/CustomerCarePage/Components/CustomTable';\nimport { AccommodationData } from 'Pages/CustomerCarePage/UpdateTicketPage/UpdateTicketProps';\nimport { CustomRadio } from 'Pages/CustomerCarePage/Components/CustomRadio';\nimport { ComplexTable } from 'Pages/CustomerCarePage/Components/ComplexTable';\nimport { InputArea } from 'Pages/CustomerCarePage/Components/InputArea';\n\ninterface IProps {\n    confinement: ConfinementDetails;\n    refreshConfinementState: () => void;\n}\n\ninterface IStates {\n    selectedTab: any;\n}\n\n\nexport class ApproveInpatientSection extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            selectedTab: 0\n        }\n    }\n\n    getTotalAccommodationCost = (diagnosis: DiagnosisData) => {\n        let totalCost = 0;\n        if (diagnosis.isPrimary) {\n            this.props.confinement.accommodations.map(accommodation => {\n                totalCost += accommodation.costPerDay * accommodation.days;\n            });\n        }\n        return totalCost;\n    }\n\n    getProceduresCost = (diagnosis: DiagnosisData) => {\n        let total = 0;\n        diagnosis.procedures.map(procedure => {\n            total += procedure.amount;\n        });\n        return total;\n    }\n\n    getAttendingPhysicianCost = (diagnosis: DiagnosisData) => {\n        let total = 0;\n        diagnosis.doctors\n            .filter(doctor => doctor.type === 'Attending')\n            .map(doctor => {\n                total += doctor.fee;\n            });\n        return total;\n    }\n\n    getAvailmentCost = (diagnosis: DiagnosisData) => {\n        return (\n            this.getProceduresCost(diagnosis) +\n            this.getAttendingPhysicianCost(diagnosis) +\n            this.getTotalAccommodationCost(diagnosis)\n        );\n    }\n\n    getAllAvailmentsCost = () => {\n        let total = 0;\n        this.props.confinement.diagnoses.map(diagnosis => {\n            total += this.getAvailmentCost(diagnosis);\n        });\n        return total;\n    }\n\n    getAllProceduresCount = () => {\n        let total = 0;\n        this.props.confinement.diagnoses.map(diagnosis => {\n            total += diagnosis.procedures.length;\n        });\n        return total;\n    }\n\n    render(): JSX.Element {\n        const confinement = this.props.confinement;\n        return (\n            <div className='section'>\n                <div style={{paddingTop: '2.5rem'}} />\n                <div className='header-1'>Approve or Disapprove Inpatient</div>\n                <Grid container spacing={2}>\n                    <Grid item xs={4}>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>PROVIDER</div>\n                            <div className='small-text'>\n                                {`${confinement.provider.value} - ${confinement.provider.label}`}\n                            </div>\n                        </div>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>KIND OF CONFINEMENT</div>\n                            <div className='small-text'>{confinement.confinementKind}</div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>DATE ADMITTED</div>\n                            <div className='small-text'>\n                                {GlobalFunction.toCommonDateString(confinement.dateAdmitted)}\n                            </div>\n                        </div>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>PHILHEALTH</div>\n                            <div className='small-text'>{confinement.coverage.label}</div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>LINKED TICKETS</div>\n                            <div className='small-text'>{'---*'}</div>\n                        </div>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>GIFT GIVEN</div>\n                            <div className='small-text'>{confinement.giftGiven ? 'Yes' : 'No'}</div>\n                        </div>\n                    </Grid>\n                </Grid>\n                {this.renderTabs()}\n                {this.state.selectedTab === 0 ? (\n                    this.renderSummarySection(confinement)\n                ) : (\n                    this.renderDiagnosisSection(\n                        confinement.diagnoses.filter(diagnosis => \n                            diagnosis.icd10Code.value === this.state.selectedTab\n                        )[0]\n                    )\n                )}\n                \n                <div className='section' />\n            </div>\n        );\n    }\n\n    renderTabs(): JSX.Element {\n        return (\n            <div className='sub-section'>\n                <Tabs\n                    className='custom-tabs' \n                    value={this.state.selectedTab}\n                    variant='scrollable'\n                    scrollButtons='auto'\n                    indicatorColor='primary'\n                    onChange={(_event: React.ChangeEvent<{}>, value: number) => {\n                        this.setState({selectedTab: value});\n                    }}>\n                        <Tab \n                            value={0} \n                            label={\n                                <div>\n                                    <div className='header-2'>SUMMARY OF DIAGNOSIS</div>\n                                    <div className='smaller-text'>\n                                        {`${GlobalFunction.formatNumber(this.getAllAvailmentsCost(), true)} PHP \n                                        (${this.getAllProceduresCount()} Procedures)`}\n                                    </div>\n                                </div>\n                            } />\n                        {this.props.confinement.diagnoses\n                            .filter(diagnosis => diagnosis.isPrimary)\n                            .map(diagnosis => {\n                                const totalCost = this.getAvailmentCost(diagnosis);\n                                const proceduresCount = diagnosis.procedures.length;\n                                return (\n                                    <Tab \n                                        value={diagnosis.icd10Code.value} \n                                        label={\n                                            <div>\n                                                <div className='header-2'>PRIMARY DIAGNOSIS</div>\n                                                <div className='smaller-text'>\n                                                    {`${GlobalFunction.formatNumber(totalCost, true)} PHP \n                                                    (${proceduresCount} Procedure${proceduresCount > 1 ? 's' : ''})`}\n                                                </div>\n                                            </div>\n                                        } />\n                                );\n                            })}\n                        {this.props.confinement.diagnoses\n                            .filter(diagnosis => !diagnosis.isPrimary)\n                            .map((diagnosis, index) => {\n                                const totalCost = this.getAvailmentCost(diagnosis);\n                                const proceduresCount = diagnosis.procedures.length;\n                                return (\n                                    <Tab \n                                        value={diagnosis.icd10Code.value} \n                                        label={\n                                            <div>\n                                            <div className='header-2'>{`DIAGNOSIS ${index + 1}`}</div>\n                                            <div className='smaller-text'>\n                                                {`${GlobalFunction.formatNumber(totalCost, true)} PHP \n                                                (${proceduresCount} Procedure${proceduresCount > 1 ? 's' : ''})`}\n                                            </div>\n                                            </div>\n                                        } />\n                                );\n                            })}\n                </Tabs>\n                <div style={{borderBottom: '2px solid #1E2071'}} />\n            </div>\n        );\n    }\n\n    renderSummarySection(confinement: ConfinementDetails): JSX.Element {\n        return (\n            <div>\n                {confinement.diagnoses\n                    .filter(diagnosis => diagnosis.isPrimary)\n                    .map(diagnosis => {\n                        return this.renderDiagnosisInfo(diagnosis, 0);    \n                    })}\n                {confinement.diagnoses\n                    .filter(diagnosis => !diagnosis.isPrimary)\n                    .map((diagnosis, index)=> {\n                        return this.renderDiagnosisInfo(diagnosis, index + 1);    \n                    })}\n            </div>\n        );\n    }\n\n    renderDiagnosisInfo(diagnosis: DiagnosisData, index: number): JSX.Element {\n        const procedureCost = this.getProceduresCost(diagnosis);\n        const accommodationCost = this.getTotalAccommodationCost(diagnosis);\n        const attendingPhysicianCost = this.getAttendingPhysicianCost(diagnosis);\n        return (\n            <Grid container className='sub-section'>\n                <div style={{width: '2rem'}}>\n                    <div className='number-item'>{index + 1}</div>\n                </div>\n                <div style={{width: 'calc(100% - 2rem)'}}>\n                    <div style={{marginBottom: '1rem'}}>\n                        <div className='text'>\n                            {`${diagnosis.icd10Code.value} — ${diagnosis.icd10Code.label}`}\n                            {diagnosis.isPrimary ? (\n                                <span className='header-2'>{' (PRIMARY)'}</span>\n                            ) : null}\n                        </div>\n                        {diagnosis.doctors.filter(doctor => doctor.type === 'Admitting')\n                            .map(doctor => {\n                                return (\n                                    <>\n                                    <div className='small-text'>{`${doctor.id} - ${doctor.name}`}</div>\n                                    <div className='small-text'>\n                                        {`PHP ${GlobalFunction.formatNumber(doctor.fee, true)}`}\n                                    </div>\n                                    </>\n                                );\n                            })\n                        }\n                        \n                        <div className='small-text'>\n                            {`Remarks: ${diagnosis.remarks ? diagnosis.remarks : 'None'}`}\n                        </div>\n                        <div className='small-text'>\n                            {`PHIC: No*`}\n                        </div>\n                        <div className='header-2'>\n                            {`TOTAL AMOUNT: ${GlobalFunction.formatNumber(\n                                procedureCost + accommodationCost + attendingPhysicianCost, true\n                            )} PHP`}\n                        </div>\n                        <TextButton \n                            label='Approve/Disapprove Diagnosis' \n                            onClick={() => {\n                                window.scroll(0, -window.pageYOffset);\n                                this.setState({selectedTab: diagnosis.icd10Code.value});\n                            }} />\n                    </div>\n\n                    {this.renderTableSection('PROCEDURES',\n                        <CustomTable\n                            className='custom-table'\n                            rows={diagnosis.procedures}\n                            renderHeader={() => {\n                                return (\n                                    <>\n                                    <TableCell>Procedure</TableCell>\n                                    <TableCell style={{textAlign: 'right', width: '150px'}}>Amount</TableCell>\n                                    <TableCell style={{width: '150px'}}>Date</TableCell>\n                                    <TableCell style={{width: '250px'}}>Clause</TableCell>\n                                    <TableCell style={{textAlign: 'right', width: '150px'}}>Remaining Bal.</TableCell>\n                                    </>\n                                );\n                            }}\n                            renderRow={(procedure: ProcedureData, index: number) => {\n                                const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                                return (\n                                    <TableRow style={{backgroundColor: backgroundColor}}>\n                                        <TableCell>{`${procedure.cptCode.value} — ${procedure.cptCode.label}`}</TableCell>\n                                        <TableCell style={{textAlign: 'right'}}>\n                                            {`${GlobalFunction.formatNumber(procedure.amount, true)} PHP`}\n                                        </TableCell>\n                                        <TableCell>{GlobalFunction.toShortDateString(procedure.dateAdded)}</TableCell>\n                                        <TableCell>{`This is the clause*`}</TableCell>\n                                        <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(9999, true)} PHP*`}</TableCell>\n                                    </TableRow>\n                                );\n                            }} />,\n                            procedureCost\n                    )}\n\n                    {diagnosis.isPrimary ? (\n                        this.renderTableSection('ROOM ACCOMMODATIONS',\n                            <CustomTable\n                                className='custom-table'\n                                rows={this.props.confinement.accommodations}\n                                renderHeader={() => {\n                                    return (\n                                        <>\n                                        <TableCell>Room Type</TableCell>\n                                        <TableCell style={{textAlign: 'right', width: '200px'}}>No. of days</TableCell>\n                                        <TableCell style={{textAlign: 'right', width: '200px'}}>Cost per day</TableCell>\n                                        <TableCell style={{textAlign: 'center', width: '200px'}}>HIMS Assessment</TableCell>\n                                        </>\n                                    );\n                                }}\n                                renderRow={(accommodations: AccommodationData, index: number) => {\n                                    const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                                    return (\n                                        <TableRow style={{backgroundColor: backgroundColor}}>\n                                            <TableCell>{accommodations.roomType}</TableCell>\n                                            <TableCell style={{textAlign: 'right'}}>{accommodations.days}</TableCell>\n                                            <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(accommodations.costPerDay, true)} PHP`}</TableCell>\n                                            <TableCell style={{textAlign: 'center'}}>{`Approve*`}</TableCell>\n                                        </TableRow>\n                                    );\n                                }} />,\n                                accommodationCost\n                        )\n                    ) : null}\n\n                    {this.renderTableSection('ATTENDING PHYSICIANS',\n                        <CustomTable\n                            className='custom-table'\n                            rows={diagnosis.doctors.filter(doctor => doctor.type === 'Attending')}\n                            renderHeader={() => {\n                                return (\n                                    <>\n                                    <TableCell>Name of Doctor</TableCell>\n                                    <TableCell style={{width: '200px'}}>Specialization</TableCell>\n                                    <TableCell style={{textAlign: 'right', width: '125px'}}>No. of Visits</TableCell>\n                                    <TableCell style={{textAlign: 'right', width: '200px'}}>Amount</TableCell>\n                                    </>\n                                );\n                            }}\n                            renderRow={(doctor: DoctorData, index: number) => {\n                                const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                                return (\n                                    <TableRow style={{backgroundColor: backgroundColor}}>\n                                        <TableCell>{doctor.name}</TableCell>\n                                        <TableCell>{doctor.specialization}</TableCell>\n                                        <TableCell style={{textAlign: 'right'}}>{doctor.noOfVisits}</TableCell>\n                                        <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(doctor.fee, true)} PHP`}</TableCell>\n                                    </TableRow>\n                                );\n                            }} />,\n                            attendingPhysicianCost\n                    )}\n                </div>\n            </Grid>\n        );\n    }\n\n    renderTableSection(headerName: string, table: JSX.Element, totalValue?: number): JSX.Element {\n        return (\n            <div className='sub-section'>\n                <div className='header-2'>{headerName}</div>\n                {table}\n                {totalValue ? (\n                    <div className='sub-section'>\n                        <div style={{float: 'right'}}>\n                            <span className='small-text'>TOTAL AMOUNT</span>\n                            <span style={{marginLeft: '1rem'}} />\n                            <span className='header-2'>\n                                {GlobalFunction.formatNumber(totalValue, true) + ' PHP'}\n                            </span>\n                        </div>\n                </div>\n                ) : null}\n            </div>\n        );\n    }\n\n    renderDiagnosisSection(diagnosis: DiagnosisData): JSX.Element {\n        console.log(this.props.confinement.diagnoses);  \n        const procedureCost = this.getProceduresCost(diagnosis);\n        const accommodationCost = this.getTotalAccommodationCost(diagnosis);\n        const attendingPhysicianCost = this.getAttendingPhysicianCost(diagnosis);\n        return (\n            <div className='sub-section' style={{marginLeft: '1rem'}}>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <div className='text'>\n                            {`${diagnosis.icd10Code.value} — ${diagnosis.icd10Code.label}`}\n                            {diagnosis.isPrimary ? (\n                                <span className='header-2'>{' (PRIMARY)'}</span>\n                            ) : null}\n                        </div>\n                        {diagnosis.doctors.filter(doctor => doctor.type === 'Admitting')\n                            .map(doctor => {\n                                return (\n                                    <>\n                                    <div className='small-text'>{`${doctor.id} - ${doctor.name}`}</div>\n                                    <div className='small-text'>\n                                        {`PHP ${GlobalFunction.formatNumber(doctor.fee, true)}`}\n                                    </div>\n                                    </>\n                                );\n                            })\n                        }\n                        \n                        <div className='small-text'>\n                            {`Remarks: ${diagnosis.remarks ? diagnosis.remarks : 'None'}`}\n                        </div>\n                        <div className='small-text'>\n                            {`PHIC: No*`}\n                        </div>\n                        <div className='header-2'>\n                            {`TOTAL AMOUNT: ${GlobalFunction.formatNumber(\n                                procedureCost + accommodationCost + attendingPhysicianCost, true\n                            )} PHP`}\n                        </div>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <div className='light-text'>Choose Assessment</div>\n                        <CustomRadio \n                            label='Approve'\n                            checkedCondition={diagnosis.assessmentType === 'Approved'}\n                            onChange={() => {\n                                diagnosis.assessmentType = 'Approved';\n                                this.props.refreshConfinementState();\n                            }} />\n                        <CustomRadio \n                            label='Disapprove'\n                            checkedCondition={diagnosis.assessmentType === 'Disapproved'}\n                            onChange={() => {\n                                diagnosis.assessmentType = 'Disapproved';\n                                this.props.refreshConfinementState();\n                            }} />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <div className='light-text'>Remarks</div>\n                        <InputArea\n                            value={diagnosis.assessmentRemarks}\n                            onChange={(value: string) => {\n                                diagnosis.assessmentRemarks = value;\n                                this.props.refreshConfinementState();\n                            }} />\n                    </Grid>\n                    \n                </Grid>\n                <div className='sub-section'>\n                    <ComplexTable \n                        data={diagnosis.procedures}\n                        renderHeader={() => this.renderHeader()}\n                        renderRow={(rowData: any, index: number) => \n                            this.renderRow(rowData, index)} />\n                </div>\n\n                {diagnosis.isPrimary ? (\n                    this.renderTableSection('ROOM ACCOMMODATIONS',\n                        <CustomTable\n                            className='custom-table'\n                            rows={this.props.confinement.accommodations}\n                            renderHeader={() => {\n                                return (\n                                    <>\n                                    <TableCell>Room Type</TableCell>\n                                    <TableCell style={{textAlign: 'right', width: '200px'}}>No. of days</TableCell>\n                                    <TableCell style={{textAlign: 'right', width: '200px'}}>Cost per day</TableCell>\n                                    <TableCell style={{textAlign: 'center', width: '200px'}}>HIMS Assessment</TableCell>\n                                    </>\n                                );\n                            }}\n                            renderRow={(accommodations: AccommodationData, index: number) => {\n                                const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                                return (\n                                    <TableRow style={{backgroundColor: backgroundColor}}>\n                                        <TableCell>{accommodations.roomType}</TableCell>\n                                        <TableCell style={{textAlign: 'right'}}>{accommodations.days}</TableCell>\n                                        <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(accommodations.costPerDay, true)} PHP`}</TableCell>\n                                        <TableCell style={{textAlign: 'center'}}>{`Approve*`}</TableCell>\n                                    </TableRow>\n                                );\n                            }} />,\n                            accommodationCost\n                    )\n                ) : null}\n\n                {this.renderTableSection('ATTENDING PHYSICIANS',\n                    <CustomTable\n                        className='custom-table'\n                        rows={diagnosis.doctors.filter(doctor => doctor.type === 'Attending')}\n                        renderHeader={() => {\n                            return (\n                                <>\n                                <TableCell>Name of Doctor</TableCell>\n                                <TableCell style={{width: '200px'}}>Specialization</TableCell>\n                                <TableCell style={{textAlign: 'right', width: '125px'}}>No. of Visits</TableCell>\n                                <TableCell style={{textAlign: 'right', width: '200px'}}>Amount</TableCell>\n                                </>\n                            );\n                        }}\n                        renderRow={(doctor: DoctorData, index: number) => {\n                            const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n                            return (\n                                <TableRow style={{backgroundColor: backgroundColor}}>\n                                    <TableCell>{doctor.name}</TableCell>\n                                    <TableCell>{doctor.specialization}</TableCell>\n                                    <TableCell style={{textAlign: 'right'}}>{doctor.noOfVisits}</TableCell>\n                                    <TableCell style={{textAlign: 'right'}}>{`${GlobalFunction.formatNumber(doctor.fee, true)} PHP`}</TableCell>\n                                </TableRow>\n                            );\n                        }} />,\n                        attendingPhysicianCost\n                )}\n                <div className='section' />\n            </div>\n        );\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n    renderHeader(): JSX.Element {\n        const headerNameStyle = {\n            margin: 0,\n            padding: '12px 0 12px 0'\n        };\n\n        return (\n            <>\n                <Grid item xs={4}>\n                    <div className='header-2' style={headerNameStyle}>Procedure Details</div>\n                </Grid>\n                <Grid item xs={4}>\n                    <div className='header-2' style={headerNameStyle}>System Details</div>\n                </Grid>\n                <Grid item xs={4}>\n                    <div className='header-2' style={headerNameStyle}>Assessment</div>\n                </Grid>\n            </>\n        );\n    }\n\n    renderRow(procedure: ProcedureData, index: number): JSX.Element {\n        return (\n            <div className='section' >\n                \n                <Grid container>\n                    <Grid item xs={4}>\n                        <div>\n                            <Grid container>\n                                <Grid item xs={2} style={{padding: '0 0.5rem', marginTop: '-3px'}}>\n                                    <div className='number-item'>{index + 1}</div>\n                                </Grid>\n                                <Grid item xs={10} className='header-2'>\n                                    {procedure.cptCode.value + ' - ' + procedure.cptCode.label}\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n                <Grid container>\n                    <Grid item xs={4}>\n                        <div>\n                            <Grid container>\n                                <Grid item xs={2} />\n                                <Grid item xs={10}>\n                                    <div className='sub-section-2'>\n                                        <div className='light-text'>AMOUNT</div>\n                                        <div className='small-text'>{'PHP ' + GlobalFunction.formatNumber(procedure.amount, true)}</div>\n                                    </div>\n                                    <div className='sub-section-2'>\n                                        <div className='light-text'>PHILHEALTH REQUIRED?</div>\n                                        <div className='small-text'>{procedure.isPHIC ? 'Yes' : 'No'}</div>\n                                    </div>\n                                    <div className='sub-section-2'>\n                                        <div className='light-text'>DATE OF AVAILMENT</div>\n                                        <div className='small-text'>{GlobalFunction.toCommonDateString(procedure.dateAdded)}</div>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>SYSTEM ASSESSMENT</div>\n                            <div className='small-text'>{'Approve *'}</div>\n                        </div>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>REMAINING BALANCE</div>\n                            <div className='small-text'>{'PHP ' + 0 + '.00 *'}</div>\n                        </div>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>CLAUSE</div>\n                            <div className='small-text'>{'Laboratory tests, x-rays, and other diagnostic examinations prescribed by the INTELLICARE physician*'}</div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>Choose Assessment</div>\n                            <CustomRadio \n                                label='Approve'\n                                checkedCondition={procedure.assessmentType === 'Approved'}\n                                onChange={() => {\n                                    procedure.assessmentType = 'Approved';\n                                    this.props.refreshConfinementState();\n                                }} />\n                            <CustomRadio \n                                label='Disapprove'\n                                checkedCondition={procedure.assessmentType === 'Disapproved'}\n                                onChange={() => {\n                                    procedure.assessmentType = 'Disapproved';\n                                    this.props.refreshConfinementState();\n                                }} />\n                        </div>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <div className='sub-section-2'>\n                            <div className='light-text'>Remarks</div>\n                            <InputArea\n                                value={procedure.assessmentRemarks}\n                                onChange={(value: string) => {\n                                    procedure.assessmentRemarks = value;\n                                    this.props.refreshConfinementState();\n                                }} />\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport {  ConsultationDetails } from 'Pages/CustomerCarePage/Models';\nimport { CustomRadio } from 'Pages/CustomerCarePage/Components/CustomRadio';\nimport { Grid } from '@material-ui/core';\nimport { InputField } from 'Pages/CustomerCarePage/Components/InputField';\n\ninterface IProps {\n    consultation: ConsultationDetails;\n    refreshConsultationState: () => void;\n}\n\ninterface IStates {\n    selectedTab: any;\n}\n\nexport class ApproveConsultationSection extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            selectedTab: 0\n        }\n    }\n\n    render(): JSX.Element {\n        console.log(this.props.consultation)\n        const consultation = this.props.consultation;\n        return (\n            <Grid container className='section'>\n                <Grid item xs={6}>\n                    <div style={{paddingTop: '2.5rem'}} />\n                    <div className='header-1'>Resolve Consultation</div>\n                    <div className='sub-section-2'>\n                        <div className='light-text'>PROVIDER</div>\n                        <div className='small-text'>\n                            {`${consultation.provider.value} - ${consultation.provider.label}`}\n                        </div>\n                    </div>\n                    <div className='sub-section-2'>\n                        <div className='light-text'>DIAGNOSIS</div>\n                        <div className='small-text'>\n                            {`${consultation.diagnosis.value} - ${consultation.diagnosis.label}`}\n                        </div>\n                    </div>\n                    <div className='sub-section-2'>\n                        <div className='light-text'>DOCTOR</div>\n                        <div className='small-text'>\n                            {consultation.doctor.label}\n                        </div>\n                    </div>\n                    <div className='sub-section-2'>\n                        <div className='light-text'>NOTES</div>\n                        <div className='small-text'>{consultation.notes ? consultation.notes : 'None'}</div>\n                    </div>\n                    <div className='sub-section'>\n                    <div className='header-2'>ASSESSMENT</div>\n                        <CustomRadio \n                            label='Approve'\n                            checkedCondition={consultation.assessmentType === 'Approved'}\n                            onChange={() => {\n                                consultation.assessmentType = 'Approved';\n                                this.props.refreshConsultationState();\n                            }} />\n                        <CustomRadio \n                            label='Disapprove'\n                            checkedCondition={consultation.assessmentType === 'Disapproved'}\n                            onChange={() => {\n                                consultation.assessmentType = 'Disapproved';\n                                this.props.refreshConsultationState();\n                            }} />\n                        <CustomRadio \n                            label='Pending'\n                            checkedCondition={consultation.assessmentType === 'Pending'}\n                            onChange={() => {\n                                consultation.assessmentType = 'Pending';\n                                this.props.refreshConsultationState();\n                            }} />\n                        <InputField\n                            placeholder='Reason'\n                            value={consultation.assessmentRemarks}\n                            onChange={(value: string) => {\n                                consultation.assessmentRemarks = value;\n                                this.props.refreshConsultationState();\n                            }} />\n                    </div>\n                    <div className='section' />\n                </Grid>\n            </Grid>\n        );\n    }\n}","\nimport * as React from 'react';\nimport { match } from \"react-router-dom\";\nimport { API } from '../API';\nimport { MemberData, TicketData, AvailmentDetails, LOAData, DropdownChoice, DiagnosisData, ConsultationDetails, ClientData } from '../Models';\nimport { LeftPanelSection } from '../LeftPanelSection/LeftPanelSection';\nimport { CustomTabs } from '../Components/CustomTab';\nimport { Grid } from '@material-ui/core';\nimport { ApproveAvailmentSection } from './Components/ApproveAvailmentSection';\nimport { CheckBenefitSection } from './Components/CheckBenefitSection';\nimport { PartnerNetworkSection } from './Components/PartnerNetworkSection';\nimport { SummaryAvailmentSection } from './Components/SummaryAvailmentSection';\nimport { ReviewTicketsSection } from './Components/ReviewTicketsSection';\nimport { Payloads } from '../Payloads';\nimport { CheckUtilizationSection } from './Components/CheckUtilizationSection';\nimport { CheckContractSection } from './Components/CheckContractSection';\nimport { Processmaker } from '../Processmaker';\nimport { AccommodationData } from '../UpdateTicketPage/UpdateTicketProps';\nimport { ApproveInpatientSection } from './Components/ApproveInpatientSection';\nimport { Loading } from '../Components/Loading';\nimport { ApproveConsultationSection } from './Components/ApproveConsultationSection';\nimport { TicketFooter } from '../TicketFooter';\n\ninterface IProps {\n    required: string;\n    match: match<MatchParams>;\n    history: any;\n}\n\ninterface MatchParams {\n    id: string;\n}\n\ninterface IStates {\n    tabSelected: number;\n    isSummarizing: boolean;\n    loadedResources: number;\n\n    member?: MemberData;\n    client?: ClientData;\n    ticket: TicketData;\n\n    availment?: AvailmentDetails;\n    confinement?: ConfinementDetails;\n    consultation?: ConsultationDetails;\n\n    pmId: string;\n    loas: LOAData[];\n    loaToDelete: string[];\n}\n\nexport interface ConfinementDetails {\n    provider: DropdownChoice;\n    dateAdmitted: Date;\n    confinementKind: string;\n    giftGiven: boolean;\n    coverage: DropdownChoice;\n    philhealthAmount: number;\n    finalBill: number;\n    dischargeDate: Date | null;\n\n    updates: any;\n    others: any;\n    diagnoses: DiagnosisData[];\n    accommodations: AccommodationData[];\n}\n\nexport class ResolveTicketPage extends React.Component<IProps, IStates> {\n\n    static RESOURCES_TO_LOAD = 2;\n\n    tabList = [\n        { value: 1, label: 'Availments' }, \n        { value: 2, label: 'Benefits' }, \n        { value: 3, label: 'Partner Network' }, \n        { value: 4, label: 'Exclusion' }, \n        { value: 5, label: 'Utilization' }, \n        { value: 6, label: 'Tickets' },  \n        { value: 7, label: 'Contract' }\n    ];\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            tabSelected: 1,\n            isSummarizing: false,\n            loadedResources: 0,\n            ticket: {\n                ticketChannel: '',\n                transactionNo: '',\n                ticketSource: '',\n                memberName: '',\n                clientName: '',\n                brokerName: '',\n                facility: { value: '', label: '' },\n                department: '',\n                callerName: '',\n                contactNo: '',\n                ticketType: '',\n                specificType: '',\n                urgency: '',\n                agent: { id: '', name: '' },\n                additionalNotes: '',\n                additionalFiles: [],\n                ticketNo: '',\n                pmCaseId: '',\n                status: 'Open',\n                createdBy: { id: '1', name: 'Jilmer Cariaso - Static' },\n                dateCreated: new Date(),\n                dateUpdated: new Date(),\n                dateEscalated: null\n            },\n            pmId: '',\n            loas: [],\n            loaToDelete: []\n        };\n    }\n\n    componentDidMount() {\n        API.get('customer-care/tickets/' + this.props.match.params['ticketId'],\n            (response) => {\n                //console.log('resp: '+JSON.stringify(response,null,2));\n                this.setState({loadedResources: this.state.loadedResources + 1});\n\n                const ticketCategory = response.ticket_category;\n                const availment = ticketCategory.availment_details;\n                const confinement = ticketCategory.confinement_details;\n                const consultation = ticketCategory.consultation_details;\n\n\n                this.setState({ticket: Payloads.getTicketData(response, this.props.match.params['appNo'])});\n\n                if (availment) {\n                    const providerData = availment.provider.split(' - ');\n                    this.setState({availment: {\n                        provider: { value: providerData[0], label: providerData[1] },\n                        diagnoses: availment.availments_list[0].diagnosis.map(diagnosis => {\n                            return {\n                                icd10Code: { value: diagnosis.icd10code, label: diagnosis.diagnosis },\n                                remarks: diagnosis.remarks,\n                                isPrimary: diagnosis.is_primary,\n                                isFinal: diagnosis.is_final,\n                                doctors: diagnosis.doctors.map(doctor => {\n                                    return {\n                                        id: doctor.id,\n                                        name: doctor.name,\n                                        specialization: doctor.specialization,\n                                        fee: doctor.fee,\n                                        noOfVisits: doctor.no_of_visits,\n                                        remarks: doctor.remarks\n                                    }\n                                }),\n                                procedures: diagnosis.procedures.map(procedure => {\n                                    return {\n                                        cptCode: { value: procedure.cpt_code, label: procedure.procedure_name },\n                                        isPHIC: procedure.phic,\n                                        amount: parseInt(procedure.amount),\n                                        notes: procedure.notes,\n                                        doctor: { value: '', label: procedure.doctor },\n                                        dateAdded: new Date(procedure.date_added),\n                                        assessmentType: procedure.assessment_type,\n                                        assessmentRemarks: procedure.assessment_remarks,\n                                        approvedAmount: procedure.approved_amount\n                                    }\n                                })\n                            }\n                        })\n                    }});\n                }\n\n                if (confinement) {\n                    const providerData = confinement.provider.split(' - ');\n                    this.setState({confinement: {\n                        provider: { value: providerData[0], label: providerData[1] },\n                        dateAdmitted: new Date(confinement.date_admitted),\n                        confinementKind: confinement.confinement_kind,\n                        giftGiven: confinement.gift_given,\n                        coverage: { value: '', label: confinement.coverage },\n                        philhealthAmount: confinement.philhealth_amount,\n                        finalBill: confinement.final_bill,\n                        dischargeDate: new Date(confinement.discharge_date),\n                        diagnoses: confinement.diagnoses.map(diagnosis => {\n                            return {\n                                icd10Code: { value: diagnosis.icd10code, label: diagnosis.diagnosis },\n                                remarks: diagnosis.remarks,\n                                isPrimary: diagnosis.is_primary,\n                                isFinal: diagnosis.is_final,\n                                assessmentType: diagnosis.assessment_type,\n                                assessmentRemarks: diagnosis.assessment_remarks,\n                                approvedAmount: diagnosis.approved_amount,\n                                doctors: diagnosis.doctors.map(doctor => {\n                                    return {\n                                        id: doctor.id,\n                                        name: doctor.name,\n                                        specialization: doctor.specialization,\n                                        type: doctor.type,\n                                        fee: doctor.fee,\n                                        noOfVisits: doctor.no_of_visits,\n                                        remarks: doctor.remarks\n                                    }\n                                }),\n                                procedures: diagnosis.procedures.map(procedure => {\n                                    return {\n                                        cptCode: { value: procedure.cpt_code, label: procedure.procedure_name },\n                                        isPHIC: procedure.phic,\n                                        amount: parseInt(procedure.amount),\n                                        notes: procedure.notes,\n                                        doctor: procedure.doctor,\n                                        dateAdded: new Date(procedure.date_added),\n                                        assessmentType: procedure.assessment_type,\n                                        assessmentRemarks: procedure.assessment_remarks,\n                                        approvedAmount: procedure.approved_amount\n                                    }\n                                })\n                            }\n                        }),\n                        accommodations: confinement.room_accommodation.map(accommodation => {\n                            return {\n                                roomType: accommodation.room_type,\n                                days: parseInt(accommodation.no_of_days),\n                                costPerDay: accommodation.amount\n                            }\n                        }),\n                        updates: confinement.updates,\n                        others: confinement.others\n                    }});\n\n                    this.tabList[0].label = 'Inpatient';\n                }\n\n                if (consultation) {\n                    const providerData = consultation.provider.split(' - ');\n                    const diagnosisData = consultation.diagnosis.split(' - ');\n                    const doctorData = consultation.doctor.split(' - ');\n                    this.setState({consultation: {\n                        provider: { value: providerData[0], label: providerData[1] },\n                        diagnosis: { value: diagnosisData[0], label: diagnosisData[1] },\n                        doctor: { value: doctorData[0], label: doctorData[1] },\n                        notes: consultation.notes,\n                        assessmentType: consultation.assessment_type,\n                        assessmentRemarks: consultation.assessment_remarks,\n                        approvedAmount: consultation.approved_amount\n                    }});\n                    this.tabList[0].label = 'Consultation Details';\n                }\n\n                this.setState({loas: response.loa.map(loa => {\n                    return {\n                        id: loa._id,\n                        loaNo: loa.loa_no,\n                        amount: loa.amount,\n                        date: new Date(loa.date),\n                        notes: loa.notes\n                    }\n                })});\n\n                if (response.member_id.length > 0) {\n                    API.get(`customer-care/members/${response.member_id}`, \n                        (response) => {\n                            this.setState({member: Payloads.getMemberData(response)});\n                            API.get(`customer-care/members/${response.member_id}/benefits`,\n                                (response) => {\n                                    console.log(response);\n                                    this.setState({loadedResources: this.state.loadedResources + 1});\n                                },\n                                (error) => {\n                                    console.log(error);\n                                });\n                        },\n                        (error) => {\n                            console.log(error);\n                        });\n                }\n\n                if (response.client_id.length > 0) {\n                    API.get(`customer-care/clients/${response.client_id}`,\n                        (response) => {\n                            this.setState({client: Payloads.getClientData(response)});\n                            this.setState({loadedResources: this.state.loadedResources + 1});\n                        },\n                        (error) => {\n                            console.log(error);\n                        });\n                }\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    onUpdateAssessment = () => {\n\n        if (!this.state.member && !this.state.client) {\n            return;\n        }\n\n        const payload = Payloads.getPutUpdateAssessmentPayload(\n            this.state.ticket,\n            this.state.loas,\n            this.state.member,\n            this.state.client,\n            this.state.availment,\n            this.state.confinement,\n            this.state.consultation\n        );\n        \n        console.log(JSON.stringify(payload));\n        API.delete('customer-care/tickets/loa', this.state.loaToDelete,\n            (response) => {\n                console.log(response);\n                API.put(`customer-care/tickets/${this.props.match.params['ticketId']}`, payload,\n                    (response) => {\n                        console.log(response);\n                        this.state.ticket.approvalCode = response.approval_code;\n                        this.setState({ticket: this.state.ticket});\n                        window.location.reload();\n                    },\n                    (error) => {\n                        console.log(error);\n                    });\n            },\n            (error) => {\n                console.log(error);\n            });\n    }\n\n    onResolve = () => {\n        API.patch(`customer-care/tickets/${this.props.match.params['ticketId']}`, { status: 'Resolved' },\n                (patchTicketResponse) => {\n                    console.log('Patch Response: ', patchTicketResponse);\n                    onResolveProcessmaker();\n                },\n                (error) => {\n                    console.log(error);\n                });\n    \n        const onResolveProcessmaker = () => {\n            Processmaker.get(`cases/${this.props.match.params['caseId']}`,\n                (response) => {                               \n                    if (this.state.availment || this.state.confinement || this.state.consultation) {\n                        if (response['current_task'][0]['tas_title'] === 'Approve / Disapprove Availment') {\n                            processmakerRouteCase(() => {\n                                returnToTicketList();\n                            });\n                        } else if (response['current_task'][0]['tas_title'] === 'Modify / Update Ticket') {\n                            processmakerRouteCase(() => {\n                                processmakerRouteCase(() => {\n                                    returnToTicketList();\n                                });\n                            });\n                        } else if (response['current_task'][0]['tas_title'] === 'Create Ticket') {\n                            processmakerRouteCase(() => {\n                                processmakerRouteCase(() => {\n                                    processmakerRouteCase(() => {\n                                        returnToTicketList();\n                                    });\n                                });\n                            });\n                        }\n                    } else {\n                        returnToTicketList();\n                    }\n                },\n                (error) => {\n                    console.log(error);\n                }\n            );\n        }\n\n        const processmakerRouteCase = (onSuccess: Function) => {\n            Processmaker.put(`cases/${this.props.match.params['caseId']}/route-case`, {},\n                (response) => {\n                    console.log(response);\n                    onSuccess();\n                },\n                (error) => {\n                    console.log(error);\n                }\n            );\n        }\n\n        const returnToTicketList = () => {\n            this.props.history.push('#/customer-care/tickets');\n            window.location.reload();\n        }\n    }\n\n    allAvailmentIsDisapproved = () => {\n        if (this.state.availment) {\n            for (const diagnosis of this.state.availment.diagnoses) {\n                for (const procedure of diagnosis.procedures) {\n                    if (procedure.assessmentType !== 'Disapproved') {\n                        return false;\n                    }\n                }\n            }\n        }\n        if (this.state.confinement) {\n            for (const diagnosis of this.state.confinement.diagnoses) {\n                for (const procedure of diagnosis.procedures) {\n                    if (procedure.assessmentType !== 'Disapproved') {\n                        return false;\n                    }\n                }\n            }\n        }\n        if (this.state.consultation) {\n            if (this.state.consultation.assessmentType !== 'Disapproved') {\n                return true;\n            }\n        }\n        return true;\n    }\n\n\n    render(): JSX.Element {\n        return (\n            <Grid container className='customer-care-main'>\n                {this.state.loadedResources !== ResolveTicketPage.RESOURCES_TO_LOAD ? (\n                    <div \n                        style={{\n                            backgroundColor: '#00000055', \n                            zIndex: 100, \n                            position: 'fixed', \n                            width: '100%', \n                            height: '100%'}}>\n                        <Loading height='10rem'/>\n                    </div>\n                    \n                ) : (null)}\n\n                <LeftPanelSection \n                    member={this.state.member}\n                    client={this.state.client}\n                    ticket={this.state.ticket}\n                    ticketStatus='Resolve'\n                    disableRecentTickets\n                    disableLinkedTickets />\n\n                <CustomTabs \n                    tabList={this.tabList}\n                    selectedTab={this.state.tabSelected}\n                    setSelectedTab={(index: number) => {\n                        this.setState({tabSelected: index});\n                    }} />\n\n                <div className='main-content'>\n                    {this.state.tabSelected === 1 ? (\n\n                        this.state.availment ? (\n                            this.renderOutpatientContent(this.state.availment)\n\n                        ) : this.state.confinement ? (\n                            this.renderInpatientContent(this.state.confinement)\n\n                        ) : this.state.consultation ? (\n                            this.renderConsultationContent(this.state.consultation)\n\n                        ) : null\n                        \n                    ) : this.state.tabSelected === 2 && this.state.member ? (\n                        <CheckBenefitSection\n                            memberId={this.state.member.memberId} />\n                    ) : this.state.tabSelected === 3 && (this.state.member || this.state.client) ? (\n                        <PartnerNetworkSection \n                            clientId={\n                                this.state.member && this.state.member.client ? this.state.member.client.id : \n                                this.state.client ? this.state.client.id : ''} />\n                    ) : this.state.tabSelected === 5 ? (\n                        <CheckUtilizationSection />\n                    ) : this.state.tabSelected === 6 ? (\n                        <ReviewTicketsSection />\n                    ) : this.state.tabSelected === 7 && this.state.member ? (\n                        <CheckContractSection \n                            memberId={this.state.member.memberId} />\n                    ) : null}\n                </div>\n\n                <TicketFooter\n                    disableCloseTicket\n                    disableAssign\n                    disableEscalate\n                    onAssign={() => {}}\n                    onEscalate={() => {}}\n                    onSummarizeAssessment={\n                        !this.state.ticket.approvalCode &&\n                        !this.state.consultation && \n                        !this.state.isSummarizing ? () => {\n                            this.setState({isSummarizing: true});\n                        } : undefined}\n                    onGenerateApprovalCode={\n                        !this.state.ticket.approvalCode && \n                        (this.state.consultation || this.state.isSummarizing) &&\n                        !this.allAvailmentIsDisapproved() ? () => {\n                            this.onUpdateAssessment();\n                        } : undefined}\n                    onResolveTicket={\n                        this.state.ticket.status !== 'Resolved' &&\n                        (this.state.ticket.approvalCode ||\n                        this.allAvailmentIsDisapproved()) ? () => {\n                            this.onResolve();\n                        } : undefined}\n                    onCloseTicket={\n                        this.state.ticket.status === 'Resolved' ? () => null : undefined} />\n            </Grid>\n        );\n    }\n\n    renderOutpatientContent(availment: AvailmentDetails): JSX.Element {\n        return (\n            !this.state.isSummarizing && !this.state.ticket.approvalCode ? (\n                <ApproveAvailmentSection \n                    availment={availment}\n                    refreshAvailmentState={() => {\n                        this.setState({availment: this.state.availment});\n                    }} />\n            ) : (\n                <SummaryAvailmentSection \n                    availment={availment}\n                    loas={this.state.loas}\n                    loaToDelete={this.state.loaToDelete}\n                    canEditLOAs={!this.state.ticket.approvalCode}\n                    refreshLOAStates={() => {\n                        this.setState({\n                            loas: this.state.loas,\n                            loaToDelete: this.state.loaToDelete\n                        });\n                    }} />\n            )\n        );\n    }\n\n    renderInpatientContent(confinement: ConfinementDetails): JSX.Element {\n        return (\n            !this.state.isSummarizing && !this.state.ticket.approvalCode ? (\n                <ApproveInpatientSection\n                    confinement={confinement}\n                    refreshConfinementState={() => {\n                        this.setState({confinement: this.state.confinement});\n                    }} />\n            \n            ) : (\n                <SummaryAvailmentSection \n                    availment={confinement}\n                    loas={this.state.loas}\n                    loaToDelete={this.state.loaToDelete}\n                    canEditLOAs={!this.state.ticket.approvalCode}\n                    refreshLOAStates={() => {\n                        this.setState({\n                            loas: this.state.loas,\n                            loaToDelete: this.state.loaToDelete\n                        });\n                    }} />\n            )\n        );\n    }\n\n    renderConsultationContent(consultation: ConsultationDetails): JSX.Element {\n        return (\n            <div>\n                <ApproveConsultationSection \n                    consultation={consultation}\n                    refreshConsultationState={() => {\n                        this.setState({consultation: this.state.consultation});\n                    }} />\n            </div>\n        );\n    }\n}","/**\n * Asynchronously loads the component for FeaturePage\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Components, Utils } from '@hims/core';\nconst { loadable } = Utils;\nconst { LoadingIndicator } = Components.UI;\n\nexport default loadable(\n  async () => {\n    const {\n      TicketListPage,\n      mapStateToProps,\n      mapDispatchToProps,\n    } = await import('./TicketListPage');\n\n    const Component = connect(\n      mapStateToProps,\n      mapDispatchToProps,\n    )(TicketListPage);\n    return { default: Component };\n  },\n  {\n    fallback: <LoadingIndicator />,\n  },\n);\n","import * as React from 'react';\nimport './component-style.scss';\n\ninterface IProps {\n    placeholder: string;\n    value: string;\n    detail: string;\n    onChange: (value: string) => void;\n}\n\nexport class DetailedInputField extends React.Component<IProps> {\n\n    shouldComponentUpdate(props: IProps, _state: any) {\n        return (\n            (this.props.placeholder !== props.placeholder) ||\n            (this.props.value !== props.value) ||\n            (this.props.detail !== props.detail)\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='detailed-input-field'>\n                <div className='text'>{this.props.placeholder}</div>\n                <div className='input-field'>\n                    <input \n                        className='text-field left' \n                        value={this.props.value}\n                        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                            this.props.onChange(event.target.value);\n                        }} />\n                    <div className='detail right'>{this.props.detail}</div>\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Grid, TableCell, TableRow } from '@material-ui/core';\nimport './../style.scss';\nimport { CustomTable } from '../Components/CustomTable';\nimport { InputField } from '../Components/InputField';\nimport { IconButton } from '../Components/IconButton';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { LabelDisplayedRowsArgs } from '@material-ui/core/TablePagination';\nimport { CustomRadio } from '../Components/CustomRadio';\nimport { Dropdown } from '../Components/Dropdown';\nimport { DropdownChoice } from '../Models';\nimport { DetailedDropdown } from '../Components/DetailedDropdown';\nimport { DetailedInputField } from '../Components/DetailedInputField';\n\ninterface IProps {\n\n}\n\ninterface IStates {\n    \n}\n\nexport class AdvanceSearch extends React.Component<IProps, IStates> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n    \n    render(): JSX.Element {\n        return (\n            <Grid container className='customer-care-main'>\n                <div className='section'>\n                    <div className='header'>Advanced Search</div>\n\n                    <div className='bordered-section'>\n                        <Grid container spacing={10}>\n                            <Grid item xs={3}>\n                                <div className='header-2'>SEARCH FOR A</div>\n                                <DetailedDropdown\n                                    value={{value:'Testing adjustable width', label: ''}}\n                                    choices={[{value:'', label: ''}]}\n                                    onChange={(_value: DropdownChoice) => {\n\n                                    }} />\n                                <DetailedInputField\n                                    placeholder=''\n                                    value=''\n                                    detail='Testing here'\n                                    onChange={(_value: string) => {\n\n                                    }} />\n\n                                <CustomRadio\n                                    label='Member'\n                                    checkedCondition={true}\n                                    onChange={() => {}} />\n                                <CustomRadio\n                                    label='Corporate Client'\n                                    checkedCondition={false}\n                                    onChange={() => {}} />\n                            </Grid>\n                            <Grid item xs={3}>\n                                <div className='header-2'>SEARCH BY COMPANY</div>\n                                <Dropdown \n                                    placeholder='Member Type'\n                                    value={{value:'', label: ''}}\n                                    choices={[{value:'', label: ''}]}\n                                    onChange={(_value: DropdownChoice) => {\n\n                                    }} />\n                                <Dropdown \n                                    placeholder='Member Status'\n                                    value={{value:'', label: ''}}\n                                    choices={[{value:'', label: ''}]}\n                                    onChange={(_value: DropdownChoice) => {\n\n                                    }} />\n                            </Grid>\n                            <Grid item xs={3}>\n                                <div className='header-2'>SEARCH BY MEMBER DETAILS</div>\n                            </Grid>\n                            <Grid item xs={3}>\n                                \n                            </Grid>\n                        </Grid>\n                    </div>\n\n\n                    <div className='sub-section'>\n                        <div className='header-3'>{`SEARCH RESULTS (${9999})`}</div>\n                        <CustomTable\n                            className='custom-table-selectable'\n                            rows={[[0,0,0,0],[0,0,0,0]]}\n                            renderHeader={() => this.renderTableHeader()}\n                            renderRow={(rowData: any, index: number) => \n                                this.renderTableRow(rowData, index)}\n                            onChangeInfo={(info: LabelDisplayedRowsArgs) => \n                                `${info.from}-${info.to} out of ${info.count} results`}\n                            labelRowsPerPage='Show'\n                            rowsPerPageOptions={[10, 25, 50]} />\n                        {/* <div className='text'>\n                            Add a diagnosis first then add procedures per diagnosis after\n                        </div>\n                        <div className='sub-section'>\n                            <CustomTable\n                                rows={this.props.availment.diagnoses}\n                                renderHeader={() => this.renderTableHeader()}\n                                renderRow={(rowData: any, index: number) => \n                                    this.renderTableRow(rowData, index)} />\n                        </div>\n                        {this.props.createTicketAttemp && this.props.availment.diagnoses.length === 0 ? (\n                            <div className='sub-section' style={{color: '#E53935'}}>\n                                No diagnosis. Need atleast one diagnosis.\n                            </div> \n                        ) : (null)} */}\n                    </div>\n                </div>\n                \n            </Grid>\n        );\n    }\n\n    renderTableHeader(): JSX.Element {\n        return (\n            <>\n            {this.renderHeaderColumn('cardNo', 'Member ID')}\n            {this.renderHeaderColumn('name', 'Name')}\n            {this.renderHeaderColumn('corporates', 'Corporate/s')}\n            {this.renderHeaderColumn('planType', 'Plan Type')}\n            {this.renderHeaderColumn('', 'Action', '60px')}\n            </>\n        );\n    }\n\n\n\n\n\n    renderTableRow = (_data: any, index: number) => {\n        const backgroundColor = (index % 2 === 0 ? '#FFFFFF' : '#F6F7FA');\n\n        return (\n            <TableRow style={{backgroundColor: backgroundColor}}>\n                <TableCell>{'ticket.status'}</TableCell>\n                <TableCell>{'ticket.ticketNo'}</TableCell>\n                <TableCell>{'ticket.channel'}</TableCell>\n                <TableCell>{'ticket.type'}</TableCell>\n                <TableCell></TableCell>\n            </TableRow>\n        );\n    }\n\n\n\n    renderHeaderColumn(attrName: string, headerText: string, width?: string): JSX.Element {\n        return (\n            <TableCell style={{width: width}}>\n                <span className='header-2'>{headerText}</span>\n                \n                {attrName !== '' ? (\n                    <>\n                    <div style={{float: 'right'}}>\n                        <IconButton \n                            icon={faSort} \n                            onClick={() => {\n                                // this.sortTickets(attrName, true);\n                                // this.setState({ticketListUpdated: true});\n                            }} />\n                    </div>\n                    <InputField\n                        value={this.state[attrName]}\n                        onChange={(_value: string) => {\n                            // this.setState(prevState => ({...prevState, [attrName]: value}));\n                        }} />\n                    </>\n                ) : null}\n                \n            </TableCell>\n        );\n    }\n    \n}","/**\n *\n * App\n *\n * This component is the skeleton around the actual pages, and should only\n * contain code that should be seen on all pages. (e.g. navigation bar)\n */\n\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { renderRoutes } from 'react-router-config';\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport { Containers, Components } from '@hims/core';\nimport { createBrowserHistory } from 'history';\n// import { HomePage } from 'Pages/Home/HomePage';\n\n\nimport { CreateTicketPage } from 'Pages/CustomerCarePage/CreateTicketPage/CreateTicketPage';\nimport { UpdateTicketPage } from 'Pages/CustomerCarePage/UpdateTicketPage/UpdateTicketPage';\nimport HomePage from 'Pages/Home/Loadable';\nimport { ResolveTicketPage } from 'Pages/CustomerCarePage/ResolveTicketPage/ResolveTicketPage';\nimport TicketListPage from 'Pages/TicketList/Loadable';\nimport { AdvanceSearch } from 'Pages/CustomerCarePage/AdvanceSearch/AdvanceSearch';\n// import LoginPage from 'Pages/Login/LoginPage';\n\nconst history = createBrowserHistory();\nconst NotFoundPage = Containers.NotFoundPage;\n// import ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nlet routes = [\n  {\n    path: '/home',\n    component: HomePage,\n  },\n  {\n    path: '/tickets',\n    component: TicketListPage,\n  },\n  // {\n  //   path: \"/login\",\n  //   component: LoginPage\n  // },\n  {\n    path: \"/\",\n    component: CreateTicketPage,\n    exact: true\n  },\n  {\n    path: \"/search\",\n    component: AdvanceSearch\n  },\n  {\n    path: \"/update-ticket/:caseId/:appNo/:ticketId\",\n    component: UpdateTicketPage\n  },\n  {\n    path: \"/resolve-ticket/:caseId/:appNo/:ticketId\",\n    component: ResolveTicketPage\n  }\n];\nconst prefix = '/customer-care';\nroutes.map(route => (route.path = `${prefix}${route.path}`));\n\nexport default function App() {\n\n  return (\n    <div>\n      \n      <Helmet\n        titleTemplate=\"NEO - %s\"\n        defaultTitle=\"NEO\"\n      >\n        <meta name=\"description\" content=\"NEO application\" />\n      </Helmet>\n      \n      <div className='side-bar'>\n        <Components.UI.PageLayout history={history} page={\"customer care\"} />\n      </div>\n      <div className='main'>\n        <Switch>\n          {renderRoutes(routes)}\n          <Route path=\"\" component={NotFoundPage} />\n        </Switch>\n      </div>\n      \n        \n      {/* </Components.UI.PageLayout> */}\n    </div>\n  );\n}","/**\n * i18n.js\n *\n * This will setup the i18n language files and locale data for the app.\n *\n *   IMPORTANT: This file is used by the internal build\n *   script `extract-intl`, and must use CommonJS module syntax\n *   You CANNOT use import/export in this file.\n */\n\n// prettier-ignore\nimport { Containers } from '@hims/core';\nconst enTranslationMessages = require('Messages/en.json');\n\nexport const translationMessages = {\n  en: Containers.Message.formatTranslationMessages('en', enTranslationMessages),\n};\n","/**\n * AppConstants\n * Each action has a corresponding type, which the reducer knows and picks up on.\n * To avoid weird typos between the reducer and the actions, we save them as\n * constants here. We prefix them with 'yourproject/YourComponent' so we avoid\n * reducers accidentally picking up actions they shouldn't.\n *\n */\n\nenum ActionTypes {\n    LOAD_REPOS = 'boilerplate/App/LOAD_REPOS',\n    LOAD_REPOS_SUCCESS = 'boilerplate/App/LOAD_REPOS_SUCCESS',\n    LOAD_REPOS_ERROR = 'boilerplate/App/LOAD_REPOS_ERROR',\n}\n  \nexport {};\nexport default ActionTypes;\n  ","import { ContainerState, ContainerActions } from './types';\nimport ActionTypes from './constants';\n\n// The initial state of the App\nexport const initialState: ContainerState = {\n  loading: false,\n  error: false,\n  currentUser: '',\n  userData: {\n    repositories: [],\n  },\n};\n\n// Take this container's state (as a slice of root state), this container's actions and return new state\nfunction appReducer(\n  state: ContainerState = initialState,\n  action: ContainerActions,\n): ContainerState {\n  switch (action.type) {\n    case ActionTypes.LOAD_REPOS:\n      return {\n        currentUser: state.currentUser,\n        loading: true,\n        error: false,\n        userData: {\n          repositories: [],\n        },\n      };\n    case ActionTypes.LOAD_REPOS_SUCCESS:\n      return {\n        currentUser: action.payload.username,\n        loading: false,\n        error: state.error,\n        userData: {\n          repositories: action.payload.repos,\n        },\n      };\n    case ActionTypes.LOAD_REPOS_ERROR:\n      const { error, loading, ...rest } = state;\n      return {\n        error: action.payload,\n        loading: false,\n        ...rest,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default appReducer;\n","/**\n * app.ts\n *\n * This is the entry file for the application, only setup and boilerplate\n * code.\n */\n\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\n// Import all the third party stuff\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport FontFaceObserver from 'fontfaceobserver';\nimport 'sanitize.css/sanitize.css';\n\n\n\n// Import root app\nimport App from 'Containers/App';\n\n// Import Language Provider\n// import MessageProvider from 'Containers/LanguageProvider';\n\n// Load the favicon and the .htaccess file\n// import '!file-loader?name=[name].[ext]!./images/favicon.ico';\n// import 'file-loader?name=.htaccess!./.htaccess';\n\nimport { Components, Containers, Utils } from '@hims/core';\n// import { Containers, Utils } from '@hims/core';\nimport { translationMessages } from 'i18n';\nimport createReducer from './reducers';\n\nconst { configureStore, history } = Utils;\nconst MessageProvider = Containers.Message.Provider;\nconst { ServiceWorker } = Components.Services;\n\n// Import i18n messages\n\n// Observe loading of Open Sans (to remove open sans, remove the <link> tag in\n// the index.html file and this observer)\nconst openSansObserver = new FontFaceObserver('Open Sans', {});\n\n// Create redux store with history\nconst initialState = {};\nconst store = configureStore(createReducer, initialState, history);\nconst MOUNT_NODE = document.getElementById('app') as HTMLElement;\n\nconst render = (messages: any, Component = App) => {\n  const Document: React.ComponentType<Containers.Document.IProps<any, any>> = Containers.Document.Component;\n  ReactDOM.render(\n    // tslint:disable-next-line:jsx-wrap-multiline\n      <Document Component={Component} store={store} componentProps={{}}>\n        <MessageProvider messages={messages}>\n          <Component />\n        </MessageProvider>\n      </Document>\n    ,\n    MOUNT_NODE,\n  );\n};\n\ndeclare const module: any;\n\nexport default ()=>{\n  // When Open Sans is loaded, add a font-family using Open Sans to the body\n  openSansObserver.load(undefined, 60000).then(() => {\n    document.body.classList.add('fontLoaded');\n  });\n\n  if (module.hot) {\n    module.hot.accept(['./i18n', './Containers/App'], () => {\n      ReactDOM.unmountComponentAtNode(MOUNT_NODE);\n      // tslint:disable-next-line:max-line-length\n      const App = require('./Containers/App').default; // https://github.com/webpack/webpack-dev-server/issues/100\n      render(translationMessages, App);\n    });\n    // Make reducers hot reloadable, see http://mxs.is/googmo\n    /* istanbul ignore next */\n    module['hot'].accept('./reducers', () => {\n      store.replaceReducer(createReducer(store.injectedReducers));\n    });\n  }\n  // Chunked polyfill for browsers without Intl support\n  if (!(window as any).Intl) {\n    new Promise(resolve => {\n      resolve(import('intl'));\n    })\n      .then(() =>\n        Promise.all([\n          import('intl/locale-data/jsonp/en.js'),\n          import('intl/locale-data/jsonp/de.js'),\n        ]),\n      )\n      .then(() => render(translationMessages))\n      .catch(err => {\n        throw err;\n      });\n  } else {\n    render(translationMessages);\n  }\n\n  // Install ServiceWorker and AppCache in the end since\n  // it's not most important operation and if main code fails,\n  // we do not want it installed\n  // if (process.env.NODE_ENV === 'production') {\n  //   require('offline-plugin/runtime').install();\n  // }\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  ServiceWorker.register();\n}\n","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport { Containers, Utils } from '@hims/core';\nimport globalReducer from 'Containers/App/reducer';\n\n/**\n * Merges the main reducer with the router state and dynamically injected reducers\n */\nexport default function createReducer(injectedReducers = {}) {\n  const { history } = Utils;\n  const rootReducer = combineReducers({\n    global: globalReducer,\n    language: Containers.Message.messageProviderReducer,\n    router: connectRouter(history),\n    ...injectedReducers,\n  });\n\n  return rootReducer;\n}\n"],"sourceRoot":""}