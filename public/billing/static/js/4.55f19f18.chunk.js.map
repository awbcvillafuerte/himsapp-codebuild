{"version":3,"sources":["SharedComponents/DashboardTileComponent/DashboardTileComponent.js","Pages/Protected/Claims/Components/ViewList2/ViewList.js","Pages/Protected/Claims/Components/Tiles/CreatedBundlesTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedBundlesTile.js","SharedComponents/TicketListComponent/TicketListComponent.js","Services/Api/BatchEncodingServices.js","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.js","SharedComponents/AutoComplete/AutoComplete.js","SharedComponents/DatePicker/DatePicker.js","SharedComponents/TextFieldNumber/TextFieldNumber.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.js","SharedComponents/DropDown/DropDown.js","Constant/claimTypes.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchFormValidator.js","Pages/Protected/Claims/Store/contants.js","Pages/Protected/Claims/Store/actions/BatchEncoding/index.js","Pages/Protected/Claims/Store/actions/BatchEncoding/batch.js","Pages/Protected/Claims/Store/actions/BatchEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claim.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/grandTotal.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dentalProcedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claim.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/discrepancy.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/error.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/escalation.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/inquiry.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reject.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/recon.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/utilization.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/RcsSoaValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.js","Services/Api/ClaimsEncodingServices.js","Controllers/SoaEtlController.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Parser/index.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.js","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.js","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/UploadSoaPage.js","Pages/Protected/Claims/Components/TransmittalReport/Footer/Footer.js","Services/Api/CustomerCareServices.js","Services/Api/ClaimsServices.js","Services/Api/MedicalConsultantServices.js","Services/Api/UserManagementServices.js","Services/ArrayToCSV.js","Pages/Protected/Claims/Components/TransmittalReport/helper/constants.js","Pages/Protected/Claims/Components/TransmittalReport/TransmittalReport.js","Pages/Protected/Claims/Components/TransmittalReport/helper/staticHeaderFooter.js","Utilities/SafeAccess.js","Pages/Protected/Claims/Components/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.js","Services/Api/ClaimsAdjudicationServices.js","Services/Api/ClaimsReconServices.js","Pages/Protected/Claims/Routes/BatchEncoder.js","Pages/Protected/Claims/Components/Tiles/BatchAndEncoderTile.js","Pages/Protected/Claims/Components/Tiles/ForReconciliationClaimsTile.js","Services/Api/BatchEncodingSupervisoryServices.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.js","Utilities/ArrayCompare.js","SharedComponents/ClientMemberLookup/ClientMemberLookup.js","SharedComponents/ClientMemberLookup/ClientMemberModal.js","Services/Api/CustomerCareService.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/InPatient.js","Utilities/RenameProperty.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/index.js","Pages/Protected/Claims/Constant/ClaimTypes.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.js","SharedComponents/CustomTable/CustomTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.js","Utilities/Total.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ReconValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.js","SharedComponents/TextFieldSubmit/TextFieldSubmit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.js","SharedComponents/CustomTabs/CustomTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/Unit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/DefaultValue.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitHeaders.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitFooters.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/pagination.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/sortBy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/pagination.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/mapData.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators2.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","SharedComponents/ContractRange/ContractRange.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/3.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/4.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/TeethFactory.js","Pages/Protected/Claims/Components/DentalChart/TeethGroup.js","Pages/Protected/Claims/Components/DentalChart/DentalChart.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ReimbursementInfo/ReimbursementInfo.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.js","SharedComponents/DashboardRedirect/DashboardRedirect.js","Pages/Protected/Claims/Components/ClaimsViewer/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsViewer/index.js","Pages/Protected/Claims/Routes/BatchEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/OpenBatchesTile.js","Pages/Protected/Claims/Components/Tiles/MyBatchesTile.js","Pages/Protected/Claims/Components/Tiles/CompletedBatchesTile.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/InPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Emergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Reimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Pharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators2.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/SoftValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoder.js","Pages/Protected/Claims/Components/Tiles/ClaimsEncoderTile.js","Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/ForAdjudicationTile.js","Pages/Protected/Claims/Components/Tiles/MyClaimsTile.js","Pages/Protected/Claims/Components/ViewList/ViewList.js","Pages/Protected/Claims/Components/Tiles/SubmittedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ReturnedEscalatedClaimsTile.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsAnalyst.js","Pages/Protected/Claims/Components/Tiles/ForPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/OverrideClaimTile.js","Services/Api/PaymentRequestServices.js","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.js","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.js","Pages/Protected/Claims/Routes/PaymentRequest.js","Pages/Protected/Claims/Components/Tiles/SubmittedPrSupervisorTile.js","Services/Api/PaymentRequestSupervisorServices.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.js","Pages/Protected/Claims/Routes/PaymentRequestSupervisor.js","Pages/Protected/Claims/Components/MedicalConsultant/ViewList/ViewList.js","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/MedicalConsultant.js","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/UtilizationReport/style/theme.js","Pages/Protected/Claims/Components/UtilizationReport/data/legend.js","Pages/Protected/Claims/Components/UtilizationReport/config/months.js","Pages/Protected/Claims/Components/UtilizationReport/UtilizationReport.js","Pages/Protected/Claims/Components/PRCheckReport/PRCheckReport.js","Pages/Protected/Claims/Components/TreasuryTransmittalReport/TreasuryTransmittalReport.js","Pages/Protected/Claims/Routes/ClaimsRecon.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.js","Services/Api/ClaimsVerifierSupervisorServices/ClaimsAdjudicationServices.js","Services/Api/ClaimsVerifierSupervisorServices/MedicalCollectiblesServices.js","Services/Api/ClaimsVerifierSupervisorServices/index.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.js","Pages/Protected/Claims/Components/Tiles/RejectedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsVerifierTile.js","Pages/Protected/Claims/Components/Tiles/ReconciledClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsForApprovalTile.js","Pages/Protected/Claims/Components/Tiles/MedicalCollectiblesTile.js","Pages/Protected/Claims/Components/Tiles/ReimbursementClaimTile.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsVerifierSupervisor.js","Services/Api/ClaimsManagerServices/ClaimsManagerServices.js","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.js","Services/Api/ClaimsMaintainerServices.js","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.js","Pages/Protected/Claims/Routes/ClaimsManager.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/bundlesReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/batchReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/grandTotalReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dentalProcedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/discrepancyReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/errorReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/escalationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/inquiryReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/rejectReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reconReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/utilizationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/index.js","Pages/Protected/Claims/Store/reducers/index.js","Pages/Protected/Claims/index.js","Utilities/TextFormatter.js","Services/ExtractValidationResult.js","SharedComponents/Alert/Alert.js","SharedComponents/Table/Table.js","SharedComponents/SearchTextComponent/SearchTextComponent.js","SharedComponents/TextFieldCurrency/TextFieldCurrency.js","SharedComponents/TaskTrayComponent/TaskTrayComponent.js","Pages/Protected/Claims/Components/DentalChart/Teeth/style.module.scss","SharedComponents/EnhancedTable/EnhancedTable.js","SharedComponents/Table/Table.module.scss","SharedComponents/TaskTrayComponent/TaskTrayComponent.module.scss","SharedComponents/TextFieldCurrency/TextFieldCurrency.module.scss","SharedComponents/DashboardTileComponent/DashboardTileComponent.module.scss","Pages/Protected/Claims/Components/ViewList2/ViewList.module.scss","SharedComponents/TicketListComponent/TicketListComponent.module.scss","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.module.scss","SharedComponents/AutoComplete/AutoComplete.module.scss","SharedComponents/DatePicker/DatePicker.module.scss","SharedComponents/TextFieldNumber/TextFieldNumber.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.module.scss","SharedComponents/DropDown/DropDown.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.module.scss","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.module.scss","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.module.scss","Pages/Protected/Claims/Components/TransmittalReport/Footer/Footer.module.scss","Pages/Protected/Claims/Components/TransmittalReport/TransmittalReport.module.scss","Pages/Protected/Claims/Components/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.module.scss","SharedComponents/ClientMemberLookup/ClientMemberLookup.module.scss","SharedComponents/ClientMemberLookup/ClientMemberModal.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.module.scss","SharedComponents/CustomTable/CustomTable.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.module.scss","SharedComponents/TextFieldSubmit/TextFieldSubmit.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.module.scss","SharedComponents/CustomTabs/CustomTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","SharedComponents/ContractRange/ContractRange.module.scss","Pages/Protected/Claims/Components/DentalChart/DentalChart.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ReimbursementInfo/ReimbursementInfo.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.module.scss","SharedComponents/DashboardRedirect/Error.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.module.scss","Pages/Protected/Claims/Components/MedicalConsultant/ViewList/ViewList.module.scss","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/UtilizationReport/style/UtilizationReport.module.scss","Pages/Protected/Claims/Components/PRCheckReport/PRCheckReport.module.scss","Pages/Protected/Claims/Components/TreasuryTransmittalReport/TreasuryTransmittalReport.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.module.scss","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.module.scss"],"names":["DashboardTileComponent","children","count","header","title","viewList","actionHeader","onFilterChange","isFilterShown","id","React","useState","filter","setFilter","Paper","className","classes","root","wrapper","Typography","variant","color","value","FormControl","Select","onChange","event","target","MenuItem","input","selected","action","list","Children","map","child","displayName","CustomizedDialogs","columns","searchTextPlaceHolder","setViewList","onViewListChange","body","handleOnClose","p","show","debounce","setDebounce","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","open","PaperProps","style","height","display","DialogTitle","disableTypography","IconButton","aria-label","button","onClick","DialogContent","dividers","content","search","SearchTextComponent","e","clearTimeout","setTimeout","page","placeholder","TableContainerProps","overflow","position","TableProps","stickyHeader","head","headCell","TableCell","key","sortField","TableSortLabel","active","orderBy","direction","order","sort","name","args","field","match","handleColumnFiltering","align","data","limit","rowsPerPageOptions","CreatedBundlesTile","props","services","sizes","items","setItems","initialValue","useEffect","Promise","all","getBundles","category","range","getBundleCount","then","values","batchResponse","batchCountResponse","results","Fragment","state","Button","createBundle","res","history","push","prevState","size","TableHead","item","index","bundle_number","DateFormatter","date","due","facility","to","params","_params","_data","row","SubmittedBundlesTile","TicketListComponent","viewAllLink","Grid","container","spacing","xs","caption","axios","instance","BatchEncodingServices","url","method","batch_number","on","headers","ExcludeErrorConstants","Dashboard","PageTitleService","BreadcrumbsService","setSelectedItems","tiles","sm","float","AutoComplete","label","required","readOnly","suggestions","error","other","focus","setFocus","_error","setError","trim","onBlur","currentTarget","contains","relatedTarget","InputBase","autoComplete","onFocus","square","suggestion","handleItemClick","DatePicker","format","disableComponents","tabindex","noMargin","setOpen","selectedDate","setSelectedDate","InputRef","useRef","Date","handleOnFocus","current","handleOnBlur","utils","MomentUtils","TextFieldComponent","disabled","inputProps","ref","icon","TextFieldNumber","customInput","isNumericString","displayType","allowLeadingZeros","onValueChange","floatValue","isAllowed","formattedValue","BundleDetails","details","errors","isReadOnly","disableControls","medicalPartner","doctorPartner","setSuggestions","getMedicalPartnerSuggestions","by","length","lookups","query","_items","d","getDoctorPartnerSuggestions","handleOnChangeAutosuggest","fieldName","fieldValue","handleOnChangeMedicalPartner","isSuggestionClick","selectedIndex","i","term","earliest_term","parseInt","isNaN","newDate","moment","date_received","add","full_name","ex","lg","md","total_rcs","due_date","soa_number","TextFieldCurrency","total_soa_amt","facility_id","facility_name","doctor_id","doctor_name","reassign_notes","multiline","rows","headCells","numeric","disablePadding","BatchList","batches","onDelete","openDialog","onCancel","canEdit","openError","onEdit","setForDeletion","forDeletion","isBundleCompleted","searchFilter","selectStatus","batch","setBatch","includes","claim","type","toLowerCase","parseFloat","loading","indeterminate","undefined","checked","batch_numbers","changeSelectAllState","_batches","selected_count","batchNumbers","b","EnhancedTable","handleSelectAllClick","checkAll","padding","Checkbox","Boolean","_index","handleClick","buttonWrapper","Alert","message","deleteMessage","getMessage","cancelLabel","okLabel","onOk","DropDown","addNew","text","select","types","prefix","Reimbursement","Emergency","Dental","APE","ECU","Pharmacy","PPE","schema","Joi","object","claim_type","string","claim_source","number","integer","min","amount_billed","less","greater","messages","notes","allow","when","is","otherwise","options","abortEarly","validate","ExtractValidationResult","BATCH_ENCODING","CLAIMS_ENCODING","CLAIMS_ANALYSIS","payload","for","constants","dasdas","setShowBatchForm","actions","setSelectedBatch","claim_types","ClaimTypes","claim_sources","BatchForm","close","onSave","bundle","onChangeDoctor","dispatch","useDispatch","useSelector","BatchEncoding","saveControl","showPrompt","setShowPrompt","confirmAction","setConfirmAction","setErrors","CustomTextField","doctor","DialogActions","BatchFormValidator","keys","max","bundle_soa","batches_soa","valid","bundle_rcs","batches_rcs","setBatchAction","initSuggestions","resetSuggestionObject","setSuggestionObject","setSaveBatchControl","BundlePage","originalState","setOriginalState","setBundle","setBatches","setIsReadOnly","setSearchFilter","setOpenDialog","openBundleDialog","setOpenBundleDialog","openRCSDialog","setOpenRCSDialog","setOpenError","submitStatus","setsubmitStatus","isSupervisor","user_id","setDisableComponents","disabledSubmit","setDisabledSubmit","LoadingService","getBundleDetails","getBundle","_status","status","received","soa","amount","getBatches","cancelBundle","path","handleOnSubmit","submitBundle","getDoctorSuggestions","handleOnDeleteBatch","BundleValidator","validateSoaRcs","reduce","accu","curr","RcsSoaValidator","join","newBatch","updateBatch","f","createBatch","split","updateBundle","handleOnOk","deleteMultipleBatch","catch","onOpen","source","NewBundlePage","setDisableControls","openAlert","setOpenAlert","due_date_adjustment","newBundle","setNewBundle","form","inputs","save","toISOString","NewBundleValidator","ClaimsEncodingServices","claim_number","responseType","Accept","SoaEtlController","MINIMUM_KEYS","BUNDLE_SOA_NUM","BUNDLE_RCS_NUM","BUNDLE_RCS_DATE","BUNDLE_FACILITY_NAME","BUNDLE_FACILITY_CODE","BATCH_CLAIMS_SOURCE","BATCH_CLAIM_TYPE","CLAIM_DATE_AVAILMENT","CLAIM_DATE_ADMITTED","CLAIM_DATE_DISCHARGE","CLAIM_APPROVAL_CODE","CLAIM_MEMBER_NUM","CLAIM_MEMBER_NAME","CLAIM_DIAGNOSIS_NAME","CLAIM_DIAGNOSIS_CODE","CLAIM_DOCTOR_NAME","CLAIM_DOCTOR_AMOUNT","CLAIM_PROCEDURE_NAME","CLAIM_PROCEDURE_AMOUNT","CLAIM_HOSPITAL_ITEM_NAME","CLAIM_HOSPITAL_ITEM_AMOUNT","COLUMN_TEMPLATES","DEFAULT","transform","dataRows","dataMapping","defaults","console","log","fields","prepData","_transformPreviewDataToPrepData","_transformPrepDataToHierarchicalData","JSON","stringify","loadToApi","successCallback","resolve","reject","bundleNumber","bundleParam","addBatchPromises","batchParam","claims","resolveBatchPromise","rejectBatchPromise","a","addClaim","addClaims","outputEntries","forEach","dataEntry","outputEntry","hasSingleValue","Object","columnKey","dataValue","outputKey","fieldKey","prepDataRows","currentBatch","currentClaim","soaNumber","rcsTotal","dateReceived","claimType","approvalCode","nameParts","member_account_number","member_first_name","member_middle_name","member_last_name","approval_code","loa_number","diagnosis","professional_fees","hospital_items","procedures","date_from","date_to","claim_sub_type","claim_sub_sub_type","with_corporate_guarantee","loa_notes","room_type","room_rate","pro_id","pro_name","diagnosisName","diagnosisCode","flag","code","description","primary","lineItem","lineAmount","gross_amount","specialization","vat_amount","amount_paid_by_member","philhealth_amount_paid","philhealth_remarks","amount_not_covered","reason","amount_due_from_member","reason_for_charging_member","item_code","DEBUG","test","file","onComplete","reader","FileReader","onload","workbook","XLSX","read","result","sheet","Sheets","SheetNames","sheet_to_json","raw","shift","_item","readAsBinaryString","Progress","withStyles","borderRadius","backgroundColor","bar","LinearProgress","UploadSpace","onSelectFile","dialogRef","dragged","setDragged","fileLoaded","setFileLoaded","progress","setProgress","handleOnDrag","preventDefault","stopPropagation","handleParse","Parser","fileName","onDrop","dataTransfer","files","onDragOver","onDragLeave","clickable","click","warning","accept","DynamicTable","onRemoveFile","onDetectDataRows","tableState","setTableState","selectedItems","handleOnChangeItems","endAt","__index__","table","flex","DataPair","targets","sources","onClickRemove","onChangeSource","onChangeTarget","autoFocus","DataPairContainer","onClickAddNew","dropdown_source","dropdown_target","FieldMapper","claimSources","ApiService","onSaveSuccess","onChangeHeaderInputs","onChangeClaimTypeDataMapping","facilityTemplate","setFacilityTemplate","isDefault","template","setTemplate","templates","setTemplates","dialog","setDialog","mesage","alertDialog","setAlertDialog","getTemplates","_default","find","is_default","_id","handleOnChangeFacility","getFacilitySuggestions","handleOnChangeDialog","section","groups","_template","t","handleOnChangeTemplate","_fields","last","onClickAddField","splice","onRemoveField","storeTemplate","template_name","storeFacilityTemplate","template_id","FormControlLabel","control","default","footer","UploadSoaPage","setData","headerInputs","setHeaderInputs","claimTypeValues","setClaimTypeValues","setDataRows","handleOnCancelUpload","claimTypeMap","element","onSuccess","ClaimsUtilLedgerReport","username","total","CurrencyFormatter","ar_amount","signatories","CustomerCareServices","account_number","mct_id","where","skip","offset","client_account_no","ClaimsAdjudicationServices","client","MedicalConsultantServices","member_account_no","icd_code","filters","UserManagementServices","role_name","this","getUsers","Download","extension","statics","newLine","c_header","c_footer","_rows","joined","currentValue","slice","blob","Blob","FileSaver","saveAs","class","TransmittalReport","from","setClaims","registered_name","corporate_account_no","setClient","returnClient","setReturnClient","setTotal","setUsername","localStorage","getItem","getUserById","handleClientOnChange","getClientSuggestions","getClientInfo","fetchTransmittalItems","ClaimsServices","transmittalReport","_totam_amout","c","total_amount","_ar_amount","total_due_from_member","handleOnPaginate","handleGenerateReport","member","last_name","first_name","middle_name","contracts","static_header","static_footer","staticHeaderFooter","ArrayToCSV","column","submit","PdfViewer2Service","service","getTransmittalReportPdf","fontSize","typo","maxHeight","no","left","right","handling","colSpan","pagination","SafeAccess","def","delimeter","obj","completeColumns","dataColumns","hideReport","hideHeader","dateRange","refresh","setColumns","handleOnFilter","fetchLedger","utilizationLegder","_claims","date_admission_from","date_admission_to","date_service","date_service_from","date_service_to","contract_from","contract_to","filtered","entry","indexOf","formatData","output","property","col","claimIndex","colIndex","claimNo","getClaimResponse","analyzeRespone","analysis_results","ClaimsReconServices","sideBarItems","breadcrumbs","dashboard","specificBundle","uploadSoa","reports","transmittal","BatchEncoderRoutes","SideBarService","exact","component","render","BatchAndEncoderTile","getBatchEncoderWork","getBatchEncoderWorkCount","batchEncoders","total_bundle","total_batch","ForReconciliationClaimsTile","for_recon","ticket","getClaims","getClaimCount","claimResponse","claimCountResponse","allClaims","allClaimsCount","BatchEncodingSupervisoryServices","note","assignee","AssignDialog","setShow","onSubmit","reassign","setReassign","showAlert","setShowAlert","users","setUsers","reassignErrors","setReassignErrors","response","comment","assign","ReassignValidator","aria-describedby","columnss","CreatedBundlesPage","batchEncoderId","setBatchEncoderId","openModal","setOpenModal","activeAssigning","setActiveAssigning","headerCheckBox","setHeaderCheckBox","_batchEncoderId","handleOnViewListChange","marginTop","TextFieldStyle","margin","selectedCount","handleOnItemSelect","bundle_numbers","reassignBundles","DiscrepancyBase","discrepancy","iconStyle","others","retainSpace","autoWidth","anchorEl","setAnchorEl","setMessage","Array","isArray","flat","Infinity","m","spreadResult","handleClose","Popover","anchorOrigin","vertical","horizontal","transformOrigin","whiteSpace","includesAny","s1","s2","ClientMemberLookup","allSearch","allSearchText","allSearchFields","mode","onRecordSet","apiData","setApiData","finalRows","setFinalRows","setSelected","colFilters","setColFilters","fetchData","lodash","translateRows","filterData","fetches","responses","colIdx","some","val","cell","handleOnSort","handleColumnFilter","hover","role","tabIndex","renderRows","_row","entries","revertRow","ClientMemberModal","CustomerCareService","setClaimBaseDetails","setDropDown","setClaimFacility","addSuggestionToArray","renameProp","oldProp","newProp","old","AutoFillInitializer","AutoFill","loa","member_info","member_name","first_middle","given_name","pop","common","loa_no","member_id","loa_details","room","rate","pro","has_corp_guarantee","remarks","rooms","InPatient","proc","prof","customer_account_number","client_id","company_name","client_name","partner_id","partner_name","MedicineAllowance","other_name","subType","BaseDetails","onChangeReimbursementType","handleMemberAccountNumber","permissions","requiredFields","reimbursement_type","showReimbursement","showApprovalCode","showContractRange","showClaimSource","showLoaNumber","showCompany","isDental","showMemberAccountNumber","ClaimsAnalysis","memberAccountNumber","setMemberAccountNumber","memberModal","setMemberModal","clientModal","setClientModal","handleFetchContracts","accountNumber","getContractList","latest_contract","custom_metadata","coverage_start_date","coverage_end_date","years","getLoaDetails","update","client_account_number","client_account_name","contract","getMembers","handleSetMember","getClients","handleSetClient","ICDTextFields","delete","ICDTextField","codeId","onChangeDescription","onChangeCode","onChangePrimary","onDeleteDiagnosis","tooltipOpen","setTooltipOpen","Tooltip","Radio","addClaimDiagnosis","removeClaimDiagnosis","removeSuggestionToArray","setClaimPrimaryDiagnosis","setClaimDiagnosis","resetSuggestionArray","setSuggestionOnArray","DiagnosisList","openDeleteDialog","setOpenDeleteDialog","handleOnClickAddDiagnosis","defaultBehaviour","lastEntry","handleOnChangeIcd10","icd10","getIcd10Suggestions","IcdCptStorageServices","handleOnConfirmDelete","create","Table","_children","toArray","cloneElement","TableHeader","width","textAlign","TableBody","TableRow","expanded","expandable","setExpandable","cells","setCells","TableRowExpandable","setProcedure","addClaimProcedure","updateClaimProcedure","removeClaimProcedure","ProcedureForm","doValidate","showAmountPaidByMember","showPhilhealthField","showAmountNotCovered","showAmountDueFromMember","procedure","dropDown","_errors","prop","hasOwnProperty","handleOnChangeCpt","cpt","toString","getCptSuggestions","handleOnChangeDiagnosis","_field","diagnosi","diagnosis_code","diagnosis_description","handleOnChange","tooth_number","reason_charging","buttons","handleOnUpdate","handleOnRemoveConfirm","handleOnRemove","Item","List","lineItems","dental_procedures","grand","ProcedureList","handleClickLineDiscrepancy","Set","expand","center","Total","setHospitalItem","addClaimHospitalItem","updateClaimHospitalItem","removeClaimHospitalItem","resetError","HospitalItemForm","showPhilhealthRemarks","hospitalItem","handleOnChangeHospitalItem","getHospitalItemSuggestions","hospital_item","handleOnSave","handleOCancel","HospitalItemList","setProfessionalFee","addClaimProfessionalFee","updateClaimProfessionalFee","removeClaimProfessionalFee","ProfessionalFeeForm","professionalFee","pfSuggestions","pfDoctor","handleOnChangeDoctor","main","major","professional_fee","ProfessionalFeeList","resetEscalation","setEscalationMessage","setEscalationAssignee","resetReassign","setReassignMessage","setReassignAssignee","ClaimFooter","doReject","doViewAnalysisSheet","doViewLetterOfAdvice","doReassign","doSave","doEscalate","doApprove","doCancel","isReimbursement","doRemove","doViewClaimNotice","reimbursement_info","grandTotal","userManagementService","escalations","rejectStatus","confirm","escalateModal","setEscalateModal","reassignModal","setReassignModal","rejectModal","setRejectModal","approveModal","setApproveModal","saveModal","setSaveModal","cancelModal","setCancelModal","removeModal","setRemoveModal","validateModal","setValidateModal","dropDownUsers","setDropDownUsers","escalationErrors","setEscalationErrors","initDropdownUsers","roles","getUsersByRole","user","sortBy","doValidateMiddleware","return_advice","goBack","analysis_sheet","enabled","visible","letter_of_advice","escalate","return","approve","AuthorityMatrix","modalProps","other_types","selected_amount","handleOnShowModal","remove","modals","EscalateValidator","doValidateEscalation","ReconValidator","doValidateReassign","DisapprovedLabel","reasons","disapproved","substring","generateMessage","TextFieldSubmit","ChatBox","confirmMessage","onSubmitComment","lastDate","confirmSubmitDialog","setConfirmSubmitDialog","setComment","isMe","timestamp","sdate","doDateSplit","balloon","sender","me","receive","mheader","time","mbody","ExcalateValidator","TabPanel","hidden","CustomTabs","defaultIndex","containerSyles","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","CustomTab","SideBar","contractId","nodes","onItemClick","TreeView","defaultCollapseIcon","defaultExpandIcon","node","TreeItem","nodeId","planPackage","benefitCategory","benefits","tree_id","ValueField","FloatingFields","elements","setFields","elem","layout","unit","Functions","parent_name","limit_type","limits","age_limit","max_availee","DefaultValue","no_of_days","time_from","time_to","member_type","plan_type","peso_limit_amt","no_of_members","peso_limit","payment","availment","limit_unit","DigitFormatter","Unit","rollover","UpperWord","eligible_availees","days_deployed","eligibility","empty","RB","EM","IP","OP","PV","SD","MT","OM","CC","number_of_days","DNT","SH","ADD","mobile_ape_availees","partner","rb_limit_type","abl_mbl","rb_limit","rb_mode_of_payment","annual","semiannual","quarterly","monthly","mode_of_payment","rb_pec_limit_type","pec","PHP","Months","rb_pec_limit","rb_pec_limit_specify","time_based_limit","number_mount","day_based","billing_arangement","billingArrangement","premium","billback","rider_fee","imputed_in_premiums","billback_net","fixed_rate_rider","fixed_rate_personnel","soa_rate","soa_actual_cost","billback_fee","billback_type","rider_fee_unit","s","waiting_period","waiting_period_type","waitin_period_unit","limit_for_all","limit_for_all_unit","availment_per_year","voluntary_upgrading_type","voluntary_upgrading_amount","involuntary_upgrading_type","except_suite_room","involuntary_upgrading_amount","Benefits","isMember","setRows","setTable","setContractId","planType","setPlanType","setPlanPackage","setBenefitCategory","lastRoomAndBoard","setLastRoomAndBoard","roomAndBoard","setRoomAndBoard","coverages","setCoverages","riders","setRiders","rootNode","setRootNode","benefitNode","setBenefitNode","setHeaders","footers","setFooters","info","MCT","benefit_tree","toUpperCase","rnb","_keys","_name","getRows","BenefitTable","getHeaders","getFooters","_columns","parent_keys","pkey","sub_node","acc","BenefitHeaders","BenefitFooters","handleTableSort","handleTableFilter","selectedPlan","setSelectedPlan","planTypes","setPlanTypes","allExclusions","setAllExclusions","exclusionList","setExclusionList","getExclusions2","handleOnSetItem","plan_types","plan_types_keys","planTypeKey","ex_nodes","exclusionKey","inner_node","innerKey","is_excluded","item_name","parent_code","handleOnSearch","benefit","queriedData","mutable_data","_search","onQuery","exc","take","chunk","setPaginate","sortedData","Link","headCellsDoctors","PartnerNetwork","partnerService","doctorService","partnerId","setPartnerId","partnerName","setPartnerName","partnerLocation","setPartnerLocation","partners","setPartners","doctors","setDoctors","anySearch","setAnySearch","fetchAll","require","queryColumn","collection","searchObj","address","any","_partners","sorted","unit_no","floor","building_no","building_name","street","barangay","district","city","region","zip_code","fetchDoctors","first","middle","sub","schedule","mapData","claim_no","diagnoses","primary_diagnosis","icd10_code","primary_icd10_code","provider","partner_doctor_name","grand_total","session","date_admitted","date_issued","concat","setLimitType","resetLimitType","headCellsComplete","randomRange","Math","random","Utilization","fetchService","utilizationLoa","hideSearchBar","hideActionColumn","setHeadCells","allList","setAllList","filteredRows","setFilteredRows","utilized","ibnr","graph","setGraph","benefit_limits","icd","category_code","_utilizationLoa","startsWith","procedure_name","cpt_code","itemFilter","handleSearchChange","background","Contract","getMemberContract","getClientContract","setFileName","setTitle","setService","NameFormatter","format2","brand_name","pdf","initialPageNumber","initialScale","RightPanelTabs","onReturnEscalate","onReturnInquire","memberFetchStatus","clientFetchStatus","getUtilizations","getPartners","getDoctors","inquiries","recon","CircularProgress","tabs","communication","comments","ClaimsRemarks","selected_fields","available_fields","boolean","anesthesiologist_id","anesthesiologist_name","contract_year_from","contract_year_to","department","recommendation","medicine_category","reimbursement_category","official_receipt_number","claim_remarks","getValidators","getValidators2","hasPrimary","itemError","not","setClaimFields","setClaimRoom","initDropDowns","ClaimInPatient","onEscalate","onViewAnalysisSheet","onViewLetterOfAdvice","onReject","onReassign","onApprove","onChangeFacility","onChangePro","onRemove","_type","getClaimDetails","hasError","setHasError","allowedFields","setAllowedFields","setlineItemFields","getReason","_allowedFields","_lineItemFields","getRooms","claim_sub","sub_type","doValidateProcedure","ProcedureValidator","diagnosisError","ProcedureDiagnosisValidator","doValidateHospitalItem","HospitalItemValidator","HospitalItemDiagnosisValidator","doValidateProfessionalFee","ProfessionalFeeValidator","ProfessionalFeeDiagnosisValidator","group","groupEnd","base","startOf","constainerStyle","base_errors","MainValidator","doValidateBase","DiagnosisListValidator","invalid","ClaimOutPatientProcedure","onChangeAnaesthesiologist","anesthesiologist","ClaimOutPatientConsultation","ClaimEmergency","ClaimMedicineAllowance","account_name","ContractRange","hasDiscrepancy","handleOnItemClick","Incisor1","viewBox","crown","gums","fill","Incisor2","Incisor3","Incisor4","Canine1","Canine2","Premolar1","Molar1","Molar2","TeethFactory","flipY","circle","teeth","flipX","TeethGroup","states","setDetails","_details","startAt","reverse","uppper","lower","DentalChart","chart","upper","ClaimDental","contract_year","constructDentalStates","ClaimAPE","ClaimECU","setRejectStatus","ClaimPharmacy","setGrandTotal","totalAmount","sum","ClaimPPE","ppe_packagers","ppe_packages","ListItem","ListItemText","ClaimMedicalSupplies","ClaimClinicManagement","ReimbursementInfo","canPrintNotice","setShowModal","lookup","reimbursement_info_analysts","showAdd","setShowAdd","reasonDropdown","setReasonDropdown","showCell","handleOnClickCancel","handleOnClickUpdate","handleOnItemSave","date_created","prepared_by","date_encoded","released_to","date_released","date_return","handleOnClickSave","scrollTo","top","scrollHeight","behavior","ItemForm","defaultFunction","setItem","today","handleOnLookup","handleOnChangeReason","tempReasons","other_details","__index","other_fields","AdditionalFields","additional_fields","exist","ClaimReimbursement","onViewClaimNotice","batchNumber","setBatchNumber","initialAllowedFields","setInitialAllowedFields","showReimbursementModal","setShowReimbursementModal","_claim","reimbursement_details","endOf","permission","DashboardRedirect","counter","setCounter","_counter","interval","setInterval","clearInterval","GetClaimComponent","_props","SelectecClaimType","resetClaim","setClaimType","setClaimDoctor","initDiscrepancy","setDiscrepancy","setEscalationMessages","setInquiryMessages","setClaimPro","resetRecon","setReconNotes","ClaimAnalysis","fetching","setFetching","setMember","setMemberFetchStatus","setClientFetchStatus","setUtilizationLoa","breadCrumbsList","isManager","claimNumber","setClaimNumber","getClaim","_claim_type","__type","getDiscrepancy","getClaimType","getEscalationLogs","getInquiryLogs","getReconNotes","getMember","getMemberUtilizationLoa","err","getClient","adjudicationResults","fieldIndex","item_type","item_id","getComments","getInquiries","getNotes","getReport","getAnalysisSheet","getReports","getLetterOfAdvice","getLetterNotice","callback","anaesthesiologist","getAnaesthesiologistSuggestions","inquire","receiver_id","onInquire","employee_id","proUsersLookup","getProSuggestions","removeClaim","createdBundles","specificClaim","utilization","contact","BatchEncoderSupervisorRoutes","OpenBatchesTile","getBatchCount","openBatches","openBatchCount","handleOnEncode","assignBatch","MyBatchesTile","myBatches","myBatchCount","CompletedBatchesTile","completedBatches","completedBatchCount","openTickets","BatchesPage","BatchDetails","ClaimListHeader","onClickAdd","onClickProviderSchedule","inputChange","cmHeadCells","prManagerheadCells","ClaimList","selectedClaimNumber","onConfirm","actionItems","setActionItems","submittedBatch","setPagination","setOrder","setOrderBy","claim_numbers","claimNumbers","handleRequestSort","rowsLength","allowCheck","allowCheckDisabled","ProviderSchedule","header1","fontStyle","partition","BatchPage","apiService","setSelectedClaimNumber","claimCount","setClaimCount","showProviderSchedule","setShowProviderSchedule","cancelDialog","setCancelDialog","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","getClaimsAndCount","_batchNumber","getBatch","submitBatch","deleteMultipleClaim","diag","date_admitted_date","now","date_discharged_date","partner_doctor_id","OutPatientProcedure","pshilhealth_amount_paid","OutPatientConsultation","MedicalSupplies","reqApprovalCode","reqLoaNumber","ClaimsEncoding","setApprovalCode","handleOnRemoveDiagnosis","CptTextFields","CptTextField","unsubscribe","subscribe","procedureICD","handleOnChangeProcedureForm","baseError","ProcedureFormValidator","DiagnosisValidator","HospitalItemTextFields","HospitalItemTextField","onChangeName","hospitalItemICD","handleOnChangeHospitalForm","HospitalItemFormValidator","professionalFeeICD","handleOnChangeProfessionalFeeForm","ProfessionalFeeFormValidator","setDentalProcedure","showProcedureForm","generateKey","showHospitalItemForm","showProfessionalFeeForm","_setDialog","_resolve","SoftValidatorAlertComponent","SoftValidatorService","isAdd","setIsAdd","lineItemFields","doValidateAll","_claimNumber","updateClaim","ToothNumber","DentalProcedureForm","dentalProcedure","DentalProcedureFormValidator","setType","initial_values","resetGrandTotal","ClaimPage","pageTitle","breadCrumbs","getBatchDetails","specificBatch","ClaimsDetailsEncoderRoutes","ClaimsEncoderTile","getEncoders","getEncodersBatches","param","startCase","total_batches","ClaimsEncoderSupervisorServices","setReassignNotes","handleOnSubmitReassign","alert","handleOnCancel","CreatedBatchesPage","setSelectStatus","headcell","setId","getEncoderBatches","handleTableRenderer","handleSelectAll","handleItemSelect","date_due","cesFooter","prev_user","getEncoderBatch","assigned","ClaimsDetailsEncoderSupervisorRoutes","BatchePage","ForAdjudicationTile","handleOnAnalyze","assignClaim","handleFilterChange","MyClaimsTile","my","aria-controls","aria-haspopup","SubmittedClaimsTile","disableLoaButton","setDisableLoaButton","handleClickSubmitted","has_amount_concerns","submitted","handleOnShowPdf","Menu","keepMounted","zIndex","ITEM_HEIGHT","ReturnedEscalatedClaimsTile","escalated","analyze","exclusions","ClaimsAnalystRoutes","ForPaymentRequestTile","mTitle","paymentRequestClaims","paymentRequestClaimCount","SubmittedPaymentRequestTile","OverrideClaimTile","PaymentRequestServices","pendingHeadCells","submittedHeadCells","PaymentRequestPage","setBundleNumber","pending","getPaymentRequest","getPaymentRequestBatches","resetBatches","approved_amount","utilization_amount","pr_amount","selectedBatches","_batch","getSelectedPending","checkboxColor","requestBatch","should_include","supervisor","approved_by_uid","paymentRequest","specificPaymentRequest","submittedPaymentRequest","PaymentRequestRoutes","SubmittedPaymentRequestPage","SubmittedPrSupervisorTile","getSubmittedPaymentRequest","bundleResponse","submittedRequestClaims","submittedRequestClaimCount","verifierName","total_bundles","processor_id","PaymentRequestSupervisorServices","pr_officer","getPaymentRequestBundles","handleOnSearchColumn","SubmittedPaymentRequestList","for_review","handleOnReview","review","MedicalConsultantRoutes","theme","ClinicManagement","mockData","months","clientColumns","memberDataColumns","UtilizationReport","setReports","reportType","setReportType","initial","actual","graphData","setGraphData","graphFilter","setGraphFilter","account_no","fetchTable","newData","newChild","percentage","getPercentage","childContainer","utilizationClientTable","RadioGroup","utilizationClient","getClientUtilization","getClientUtilizationLoa","graphClientRes","clientUtilRes","clientUtilLoaRes","utilAmount","loaAmount","total_utilization_amount","total_ibnr_amount","legend","mark","tooltip","bottom","LargeNumberFormatter","month","year","minHeight","toFixed","cases","availed_by_principals","availed_by_dependents","memberinfo","memberinfoRow","memberInfoLabel","memberInfoValue","diff","PRCheckReport","fetchReport","_reports","report","date_requested","check_date","TreasuryTransmittalReport","treasury","pr","ClaimsReconcilationRoutes","reassignData","setReassignData","getClaimsAnalyst","claimsCount","ClaimsReimbursementServices","MedicalCollectiblesServices","ClaimsPage","userId","setClaimsCount","ClaimsVerifierSupervisorServices","getItems","handleUnselectAll","handleOnSearchAll","RejectedClaimsTile","getItemCount","ClaimsVerifierTile","verifiers","setVerifiers","getSubordinatesCount","getClaimsBySubbordinateCount","getSubordinates","usersCount","prev","handleOnReviewUser","totalBatches","totalClaims","ReconTIle","ClaimsForApprovalTile","MedicalCollectiblesTile","ReimbursementClaimTile","showTitle","ReconciledClaimsTile","reconciled","forApproval","view","reimbursement","forAdjudicationPermissions","forApprovalPermissions","checkThreshold","forReconciledPermissions","viewPermission","reviewPermission","rejectedPermissions","ClaimsSupervisorRoutes","ClaimsList","ClaimsManagerServices","BatchDetailsPage","UserManagementApi","setClaim","forOverride","setForOverride","getBatchAndClaims","getApprovedClaims","batchRes","claimsRes","getClaimsVerifierSupervisors","analystRes","supervisorRes","overrideClaims","initialItem","deactivate","MaintenancePage","setLookup","showAddItem","setShowAddItem","ClaimsMaintainerServices","isActive","activate","initialLookup","storeLookups","updateLookups","handleOnEditItem","maintenance","submittedSpecificPaymentRequest","prManagerPermissions","ClaimsManagerRoutes","initialState","bundlesReducer","batchReducer","suggestionsReducer","combineReducers","bundles","claimReducer","claimTypeReducer","dropDownReducer","procedureReducer","hospitalItemReducer","professionalFeeReducer","grandTotalReducer","dentalProcedureReducer","reassignReducer","discrepancyReducer","errorReducer","escalationReducer","inquiryReducer","rejectReducer","reconReducer","utilizationReducer","reducers","createStore","ClaimsModule","userRole","setUserRole","isLoading","setIsLoading","document","store","Store","removeItem","batchEncoderLogic","PaymentRequestSupervisorRoutes","ClaimsReconRoutes","ClaimsVerifierSupervisorRoutes","numeral","sentence","charAt","_value","isValid","DateFormatterByAbbreviation","abr","lastName","firstName","middleName","format1","extract","useStyles1","makeStyles","flexShrink","marginLeft","TablePaginationActions","useTheme","ceil","CustomTable","SelectProps","native","ActionsComponent","useStyles","alignItems","minWidth","border","borderColor","iconButton","divider","currency","thousandSeparator","decimalScale","fixedDecimalScale","TaskTrayComponent","_sizes","itemSize","module","exports","paddingLeft","paddingRight","highlight","palette","secondary","lighten","light","dark","spacer","paper","marginBottom","analystTable","tableWrapper","overflowX","visuallyHidden","clip","sorter","analyst","sortDirection"],"mappings":"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","file":"static/js/4.55f19f18.chunk.js","sourcesContent":["import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\n// CSS Classes\nimport classes from './DashboardTileComponent.module.scss'\n\n/**\n * Create dashboard tile component\n *\n * @param children child components\n * @param count count value to be displayed; keys: color, value\n * @param header tile header label; keys: color, value\n * @param title title string\n * @param viewList view list\n * @param onFilterChange change filter handler\n * @param isFilterShown flag for showing filter\n */\nconst DashboardTileComponent = ({\n  children,\n  count,\n  header,\n  title,\n  viewList,\n  actionHeader = null,\n  onFilterChange,\n  isFilterShown = true,\n  id\n}) => {\n  const [filter, setFilter] = React.useState('this-week')\n  const handleFilterChange = event => {\n    setFilter(event.target.value)\n    if (typeof onFilterChange === 'function') onFilterChange(event.target.value)\n  }\n\n  return (\n    <Paper className={classes.root} id={id}>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          {header && (\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${header.color}`}>\n                {header.value}\n              </Typography>\n            </div>\n          )}\n\n          <div className={classes['first-row']}>\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${count.color}`} id={count.id}>\n                {count.value || 0}\n              </Typography>\n            </div>\n            {isFilterShown && (\n              <div className={classes.filter}>\n                <span>\n                  <FormControl>\n                    <Select\n                      className={classes['select']}\n                      value={filter}\n                      onChange={handleFilterChange}\n                      id={`${id}-filter`}\n                    >\n                      <MenuItem value='today' id={`${id}-today`}>\n                        <Typography className={classes.input}>Today</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-week' id={`${id}-this-week`} selected>\n                        <Typography className={classes.input}>This Week</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-month' id={`${id}-this-month`}>\n                        <Typography className={classes.input}>This Month</Typography>\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className={classes['second-row']}>\n            <div className={classes.title}>\n              <Typography variant='subtitle2'>{title}</Typography>\n            </div>\n            <div className={classes.action}>{actionHeader || ''}</div>\n          </div>\n        </div>\n\n        <div className={classes.list}>\n          {React.Children.map(children, child => {\n            return child\n          })}\n        </div>\n\n        <div className={classes.action}>{viewList || ''}</div>\n      </div>\n    </Paper>\n  )\n}\n\nDashboardTileComponent.displayName = 'DashboardTileComponent'\n\nexport default DashboardTileComponent\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\nexport default function CustomizedDialogs ({\n  columns,\n  searchTextPlaceHolder,\n  viewList,\n  setViewList,\n  onViewListChange,\n  body\n}) {\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    // console.log(args)\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    onViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose} id='close'>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent id='search' onChange={handleSearchChange} placeholder={searchTextPlaceHolder} />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {columns.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  <TextField\n                    onChange={event => {\n                      const search = event.target.value\n                      clearTimeout(debounce)\n                      setDebounce(\n                        setTimeout(() => {\n                          handleColumnFiltering({\n                            field: headCell.sortField,\n                            value: search,\n                            match: headCell.match\n                          })\n                        }, 500)\n                      )\n                    }}\n                  />\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={body(viewList.data)}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CreatedBundlesTile = props => {\n  const { services, sizes } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  const generateBundleNumber = () => {\n    services.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n    })\n  }\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBundles({\n        category: 'created',\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'created' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    services\n      .getBundles({\n        category: 'created',\n        range: value,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Created Bundles' })\n    services\n      .getBundles({ category: 'created', limit: 10, sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'created',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBundles(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'created-count' }}\n        sizes={sizes}\n        title='Created Bundles'\n        id='created-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='created-view-list'\n          >\n            View List\n          </Typography>\n        }\n        actionHeader={\n          <Button\n            variant='contained'\n            color='primary'\n            className='button-neutral'\n            onClick={generateBundleNumber}\n            id='create-new-bundle'\n          >\n            Create New Bundle\n          </Button>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                <TableCell id={`created-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`created-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`created-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                      Update\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCreatedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default CreatedBundlesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst SubmittedBundlesTile = props => {\n  const { services, sizes } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBundles({\n        category: 'submitted',\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    services\n      .getBundles({\n        category: 'submitted',\n        range: value,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Submitted Bundles' })\n    services\n      .getBundles({ category: 'submitted', limit: 10, sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBundles(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'submitted-count' }}\n        sizes={sizes}\n        title='Submitted Bundles'\n        id='submitted-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-view-list'\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                <TableCell id={`submitted-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`submitted-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`submitted-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedBundlesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { Link } from 'react-router-dom'\n\n// CSS Classes\nimport classes from './TicketListComponent.module.scss'\n\n/**\n * Create ticket list component\n *\n * @param children child components \n * @param count count value to be displayed; keys: color, value\n * @param title title string\n * @param viewAllLink view all link\n * @param isFilterShown flag for showing filter\n */\nexport default function TicketListComponent ({ children, count, title, viewAllLink, isFilterShown = true }) {\n  const [filter, setFilter] = React.useState('all')\n  const handleChange = event => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <Grid container className={classes.root}>\n      <Typography variant='subtitle1' className={classes.title}>\n        TICKET LIST\n      </Typography>\n      <Grid container className={classes.wrapper} spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.content}>\n            <div className={classes.wrapper}>\n              <div className={classes.header}>\n                <div className={classes.count}>\n                  <Typography variant='h5' className='color-7'>\n                    {count}\n                  </Typography>\n                </div>\n                { isFilterShown ? (\n                  <div className={classes.filter}>\n                    <span>\n                      <FormControl>\n                        <Select className={classes['select']} value={filter} onChange={handleChange}>\n                          <MenuItem value={'all'}>\n                            <Typography className={classes.input}>Assigned to All</Typography>\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                    </span>\n                  </div>\n                ) : '' }\n              </div>\n              <Typography variant='subtitle2' className={classes.title}>\n                {title}\n              </Typography>\n              <div className={classes.list}>{children}</div>\n              <div className={classes.action}>\n                <Link to={viewAllLink.to} className='text-link'>\n                  <Typography variant='caption' className='bold'>\n                    {viewAllLink.caption}\n                  </Typography>\n                </Link>\n              </div>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/be')\n\nexport default class BatchEncodingServices {\n  static getBundles (params) {\n    return axios({\n      url: '/bundles',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundleCount (params) {\n    return axios({\n      url: `/bundles/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static createBundle () {\n    return axios({\n      url: `/bundles`,\n      method: 'POST'\n    })\n  }\n\n  static updateBundle ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static submitBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getBatches ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'GET'\n    })\n  }\n\n  static updateBatch ({ bundle_number, batch_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static createBatch ({ data, bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static deleteBatch ({ bundle_number, batch_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleBatch ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <CreatedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './AutoComplete.module.scss'\nexport default function AutoComplete (props) {\n  const { label = '', required, readOnly, suggestions = [], onChange, error, ...other } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event.target.value)\n  }\n\n  const handleItemClick = index => {\n    setFocus(false)\n    setError()\n    if (typeof onChange === 'function') onChange(suggestions[index], true, index)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <InputBase\n                className={classes.input}\n                onChange={handleOnChange}\n                {...other}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n              {focus && (\n                <Paper id={`${props.id}-suggestion`} className={classes.suggestions} square>\n                  {suggestions.map((suggestion, index) => (\n                    <MenuItem\n                      id={`${props.id}-suggestion-${index}`}\n                      key={`${props.id}-suggestion-${index}`}\n                      onClick={() => {\n                        setFocus(true)\n                        handleItemClick(index)\n                      }}\n                    >\n                      {suggestion}\n                    </MenuItem>\n                  ))}\n                </Paper>\n              )}\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './DatePicker.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\nexport default function DatePicker (props) {\n  const {\n    id,\n    label,\n    required,\n    value,\n    format,\n    disableComponents = false,\n    readOnly,\n    onChange,\n    error,\n    tabindex,\n    noMargin = false,\n    ...other\n  } = props\n  const [open, setOpen] = React.useState(false)\n  const [selectedDate, setSelectedDate] = React.useState()\n\n  const InputRef = React.useRef()\n  const [focus, setFocus] = React.useState()\n\n  React.useEffect(() => {\n    setSelectedDate(new Date(value))\n  }, [value])\n\n  const handleOnClose = () => {\n    setOpen(false)\n    handleOnFocus()\n  }\n  const handleDateChange = date => {\n    setOpen(false)\n    setSelectedDate(date)\n    if (typeof onChange === 'function') onChange(date)\n\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n    setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <KeyboardDatePicker\n              TextFieldComponent={p => (\n                <React.Fragment>\n                  <Paper\n                    className={`${classes['text-field']} ${noMargin ? classes['no-margin'] : ''}  ${\n                      error ? classes['has-error'] : focus && classes.focus\n                    } box-shadow-field ${disableComponents && classes.disabled}`}\n                    onBlur={handleOnBlur}\n                  >\n                    <InputBase\n                      id={id}\n                      inputProps={{ ref: InputRef }}\n                      className={classes.input}\n                      value={p.value}\n                      onFocus={handleOnFocus}\n                      disabled={disableComponents}\n                    />\n\n                    <div className={classes['date-button']}>\n                      <IconButton\n                        id={`${id}-date-button`}\n                        className={classes.button}\n                        disabled={disableComponents}\n                        size='small'\n                        onClick={() => setOpen(true)}\n                      >\n                        <FontAwesomeIcon icon='calendar-day' className={classes.icon} />\n                      </IconButton>\n                    </div>\n                  </Paper>\n                  {error && <span className={classes.error}>{error}</span>}\n                </React.Fragment>\n              )}\n              value={selectedDate}\n              format={'MM/DD/YYYY' || format}\n              open={open}\n              onClose={handleOnClose}\n              onChange={handleDateChange}\n              {...other}\n            />\n          </MuiPickersUtilsProvider>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\n\nimport classes from './TextFieldNumber.module.scss'\nexport default function TextFieldNumber (props) {\n  const { label = '', required, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {other.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={() => setFocus(false)}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { formattedValue, floatValue } = values\n                  return formattedValue === '' || floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport moment from 'moment'\n\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n\n// Services\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\nimport classes from './BundleDetails.module.scss'\n\nexport default function BundleDetails ({ details, errors, isReadOnly, onChange, disableControls }) {\n  // const [newBundle, setNewBundle] = React.useState({\n  //   bundle_number: '',\n  //   total_rcs: '',\n  //   soa_number: '',\n  //   facility_id: '',\n  //   facility_name: '',\n  //   doctor_id: '',\n  //   doctor_name: '',\n  //   date_received: moment(),\n  //   due_date: moment()\n  // })\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    doctorPartner: {\n      id: [],\n      name: [],\n      data: []\n    }\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, doctorPartner: { ...state.doctorPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = args => {\n    const { value, field } = args\n    // setNewBundle(state => ({ ...state, [field]: value }))\n\n    onChange({ fieldName: field, fieldValue: value })\n\n    handleOnChangeMedicalPartner(args)\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    // console.log(value, field)\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: {\n        id: [],\n        name: [],\n        data: []\n      },\n      doctorPartner: {\n        id: [],\n        name: [],\n        data: []\n      }\n    }))\n\n    if (field === 'facility_id' || field === 'facility_name') {\n      if (isSuggestionClick) {\n        for (let i of suggestions.medicalPartner.data) {\n          if (value === i.id || value === i.name) {\n            // setNewBundle(state => ({ ...state, facility_id: i.id, facility_name: i.name }))\n            // Compute due date based on date received and earliest term found\n            // Fallback term is 30 days\n            let term = 30\n            if (i.earliest_term) {\n              term = parseInt(i.earliest_term)\n              if (isNaN(term) || term < 0) {\n                term = 30\n              }\n            }\n            let newDate = moment(details.date_received)\n              .add(term, 'days')\n              .format('MM/DD/YYYY')\n            onChange({ fieldName: 'facility_id', fieldValue: i.id })\n            onChange({ fieldName: 'facility_name', fieldValue: i.name })\n            onChange({ fieldName: 'due_date', fieldValue: newDate })\n          }\n        }\n      } else {\n        switch (field) {\n          case 'facility_id':\n            getMedicalPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'facility_name':\n            getMedicalPartnerSuggestions({ value, by: 'name' })\n            break\n\n          default:\n            break\n        }\n      }\n    } else if (field === 'doctor_id' || field === 'doctor_name') {\n      if (isSuggestionClick) {\n        if (!isNaN(selectedIndex)) {\n          try {\n            const i = suggestions.doctorPartner.data[selectedIndex]\n            // setNewBundle(state => ({ ...state, doctor_id: i.id, doctor_name: i.full_name }))\n\n            // onChange({ fieldName: 'doctor_id', fieldValue: 'dasdsdasds' })\n            onChange({ fieldName: 'doctor_name', fieldValue: i.full_name })\n            onChange({ fieldName: 'doctor_id', fieldValue: i.id })\n          } catch (ex) {}\n        }\n      } else {\n        switch (field) {\n          case 'doctor_id':\n            getDoctorPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'doctor_name':\n            getDoctorPartnerSuggestions({ value, by: 'full_name' })\n            break\n\n          default:\n            break\n        }\n      }\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField required readOnly='true' label='Bundle No.' id='bundle-no' value={details.bundle_number} />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldNumber\n            required\n            readOnly={isReadOnly}\n            id='total-rcs'\n            label='Total No. of RCS'\n            value={details.total_rcs}\n            onChange={e => onChange({ fieldName: 'total_rcs', fieldValue: e.target.value })}\n            error={errors.total_rcs}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            id='date-received'\n            label='Date Received'\n            readOnly={isReadOnly}\n            value={details.date_received}\n            onChange={e => onChange({ fieldName: 'date_received', fieldValue: moment(e).format('MM/DD/YYYY') })}\n            error={errors.date_received}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            readOnly={isReadOnly}\n            id='due-date'\n            label='Due Date'\n            value={details.due_date}\n            onChange={e => onChange({ fieldName: 'due_date', fieldValue: moment(e).format('MM/DD/YYYY') })}\n            error={errors.due_date}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField\n            readOnly={isReadOnly}\n            id='soa-no'\n            label='SOA No.'\n            value={details.soa_number}\n            onChange={e => onChange({ fieldName: 'soa_number', fieldValue: e.target.value })}\n            error={errors.soa_number}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldCurrency\n            required\n            readOnly={isReadOnly}\n            id='total-soa-amt'\n            label='Total SOA Amount'\n            value={details.total_soa_amt}\n            onChange={e => onChange({ fieldName: 'total_soa_amt', fieldValue: e.target.value })}\n            error={errors.total_soa_amt}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-id'\n            label='Medical Partner ID'\n            value={details.facility_id}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.id}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n            }\n            error={errors.facility_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-name'\n            label='Medical Partner Name (Facility)'\n            value={details.facility_name}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.name}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_name', value, isSuggestionClick })\n            }\n            error={errors.facility_name}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-partner-id'\n            label='Medical Partner ID'\n            value={details.doctor_id}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.id}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_id', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-name'\n            label='Medical Partner Name (Doctor)'\n            value={details.doctor_name}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.full_name}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_name', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_name}\n          />\n        </Grid>\n      </Grid>\n\n      {details.reassign_notes && (\n        <Grid container spacing={3}>\n          <Grid item sm={6} xs={12}>\n            <TextField\n              multiline\n              rows={3}\n              id='reassign-notes'\n              label='Reassign Notes'\n              value={details.reassign_notes}\n              readOnly\n            />\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Components\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Style\nimport classes from './BatchList.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, disablePadding: false, label: 'Batch No' },\n  { id: 'batch-claim-type', numeric: false, disablePadding: false, label: 'Claim Type' },\n  { id: 'batch-total-rcs', numeric: false, disablePadding: false, label: 'Total No. of RCS' },\n  {}\n]\n\nexport default function BatchList (props) {\n  const {\n    batches,\n    onDelete,\n    openDialog,\n    onCancel,\n    canEdit,\n    openError,\n    onEdit,\n    setForDeletion,\n    forDeletion,\n    isBundleCompleted = false,\n    searchFilter = '',\n    selectStatus = true\n  } = props\n  const [batch, setBatch] = React.useState([])\n\n  const getMessage = batches => {\n    let deleteMessage = 'Are you sure you want to delete this batch?'\n    if (batches.batch_numbers.length > 1) {\n      deleteMessage = 'Are you sure you want to delete these batches?'\n    }\n    return deleteMessage\n  }\n\n  React.useEffect(() => {\n    const data = batches\n      .filter(i => {\n        if (i.batch_number.includes(searchFilter)) return true\n        if (i.claim.type.toLowerCase().includes(searchFilter.toLowerCase())) return true\n        if (i.total_rcs === parseFloat(searchFilter)) return true\n      })\n      .map(i => ({\n        ...i,\n        selected: false\n      }))\n    setBatch({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setForDeletion({ batch_numbers: [] }) // Resets the batch list.\n  }, [batches, searchFilter])\n\n  const handleClick = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleSelectAllClick = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.selected = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.selected) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n    setForDeletion({ batch_numbers: batchNumbers })\n  }\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        // handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        checkAll={canEdit}\n        indeterminate={!!batch.indeterminate}\n        checked={!!batch.checked}\n        selectStatus={selectStatus}\n        // allowCheck\n        // allowCheckDisabled={Boolean(isBundleCompleted)}\n      >\n        <TableBody>\n          {batch.data &&\n            batch.data.map((i, index) => (\n              <TableRow key={i.batch_number}>\n                {canEdit && (\n                  <TableCell id={`checkbox-${i}`} padding='checkbox'>\n                    <Checkbox\n                      color='default'\n                      disabled={Boolean(isBundleCompleted)}\n                      checked={i.selected}\n                      onClick={event => handleClick({ index, batch })}\n                    />\n                  </TableCell>\n                )}\n                <TableCell id={`batch-no-${index}`}>{i.batch_number}</TableCell>\n                <TableCell id={`batch-claim-type-${i.claim.type}`}>{i.claim.type}</TableCell>\n                <TableCell id={`batch-total-rcs-${i.total_rcs}`}>{i.total_rcs}</TableCell>\n                {canEdit && (\n                  <TableCell className={classes.buttonWrapper} align='right'>\n                    <Button variant='contained' color='primary' className='button-neutral' onClick={() => onEdit(i)}>\n                      Edit\n                    </Button>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      <Alert\n        open={openDialog}\n        message={getMessage(forDeletion)}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={onCancel}\n        onOk={onDelete}\n      />\n      <Alert\n        open={openError}\n        message='Delete Error: This batch has existing claim records'\n        cancelLabel='Ok'\n        onCancel={onCancel}\n      />\n    </React.Fragment>\n  )\n}\n","import Select from '@material-ui/core/Select'\n\nimport React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Link } from 'react-router-dom'\n\nimport classes from './DropDown.module.scss'\n\n/**\n * Props\n * id required\n * label\n * required\n * value\n * items array {value, text}\n * onChange\n *\n */\nexport default function DropDown (props) {\n  const {\n    id,\n    label = '',\n    required,\n    items = [],\n    readOnly,\n    onChange,\n    disableComponents = false,\n    addNew = { show: false, value: 'add-new', text: 'Add New' },\n    error,\n    ...other\n  } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['select-container']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field ${disableComponents && classes.disabled} box-shadow-field`}\n            >\n              {items && (\n                <Select\n                  id={id}\n                  onChange={handleChange}\n                  onFocus={() => setFocus(true)}\n                  onBlur={() => setFocus(false)}\n                  classes={{ root: classes.select }}\n                  input={<InputBase className={classes.input} />}\n                  {...other}\n                  disabled={disableComponents}\n                >\n                  {items.map((item, index) => (\n                    <MenuItem key={`${id}-items${index}`} id={`${id}-items${index}`} value={item.value}>\n                      {item.text}\n                    </MenuItem>\n                  ))}\n                  {addNew.show && (\n                    <MenuItem key={`${id}-items-add-new`} id={`${id}-items-add-new`} value={addNew.value}>\n                      {addNew.text}\n                    </MenuItem>\n                  )}\n                </Select>\n              )}\n            </Paper>\n\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","const types = {\n  'In Patient': { prefix: 'IP' },\n  'Out Patient Procedure': { prefix: 'OP' },\n  'Out Patient Consultation': { prefix: 'PF' },\n  Reimbursement: { prefix: 'RM' },\n  Emergency: { prefix: 'ER' },\n  Dental: { prefix: 'DN' },\n  'Medicine Allowance': { prefix: 'MA' },\n  APE: { prefix: 'AP' },\n  ECU: { prefix: 'EC' },\n  Pharmacy: { prefix: 'PH' },\n  PPE: { prefix: 'PE' },\n  'Medical Supplies': { prefix: 'MS' },\n  'Clinic Management': { prefix: 'CM' }\n}\n\nconst dropdown = () => {\n  const list = []\n  for (const type in types) {\n    list.push({ text: type, value: type })\n  }\n  return list\n}\n\nexport default { types, dropdown }\n\n// 1. IP\n// 2. OP\n// 3. PF\n// 4. Reimbursement\n// 5. Emergency\n// 6. Dental\n// 7. Medicine Allowance\n// 8. APE\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  claim_type: Joi.string()\n    .trim()\n    .label('Claim Type')\n    .required(),\n  claim_source: Joi.string()\n    .trim()\n    .label('Claim Source')\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0)\n    .required(),\n  amount_billed: Joi.number()\n    .label('Billed Amount')\n    .less(100000000)\n    .greater(-1)\n    .messages({\n      'number.less': `Billed Amount should be less than {#limit}`,\n      'number.greater': 'Billed Amount should be greater than 0'\n    }),\n  notes: Joi.string()\n    .trim()\n    .label('Notes/Comments')\n    .allow('', null),\n  doctor_id: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` }),\n  doctor_name: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner (Doctor) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","export default {\n  for: { BATCH_ENCODING: 'BATCH_ENCODING', CLAIMS_ENCODING: 'CLAIMS_ENCODING', CLAIMS_ANALYSIS: 'CLAIMS_ANALYSIS' }\n}\n","import { setBundleItems, addBundle, setSelectedBundle, setBundleBatches, addBatch } from './bundles'\nimport { setSelectedBatch, setShowBatchForm, setBatchAction, setSaveBatchControl } from './batch'\nimport { initSuggestions, setSuggestionObject, resetSuggestionObject } from './suggestion'\n\nexport default {\n  setBundleItems,\n  addBundle,\n  setSelectedBundle,\n  setBundleBatches,\n  addBatch,\n  //* Batch\n  setSelectedBatch,\n  setShowBatchForm,\n  setBatchAction,\n  // *Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setSaveBatchControl\n}\n","import constants from './../../contants'\n\nexport const setSelectedBatch = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SELECTED_BATCH',\n    payload\n  }\n}\n\nexport const setBatchAction = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_BATCH_ACTION',\n    payload\n  }\n}\n\nexport const setShowBatchForm = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SHOW_BATCH_FORM',\n    payload\n  }\n}\n\nexport const setSaveBatchControl = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SAVE_BATCH_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload,\n    dasdas: 'dasdasd'\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\n\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\nimport { setGrandTotal, resetGrandTotal } from './grandTotal'\nimport { setDentalProcedure } from './dentalProcedure'\nimport { resetReassign, setReassignNotes, setReassignAssignee } from './reassign'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // Grand Total\n  setGrandTotal,\n  resetGrandTotal,\n  // Dental Procedure\n  setDentalProcedure,\n  setClaimPro,\n  resetReassign,\n  setReassignNotes,\n  setReassignAssignee\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setGrandTotal = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_GRAND_TOTAL',\n    payload\n  }\n}\n\nexport const resetGrandTotal = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_GRAND_TOTAL'\n  }\n}\n","import constants from './../../contants'\n\nexport const setDentalProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DENTAL_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\n\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\n\nimport { initDiscrepancy, setDiscrepancy } from './discrepancy'\n\nimport { resetError, setError } from './error'\n\nimport {\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee\n} from './escalation'\n\nimport { resetInquiry, addInquiryMessages, setInquiryMessages, setInquiryMessage, setInquiryAssignee } from './inquiry'\n\nimport {\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee\n} from './reassign'\n\nimport { setRejectStatus } from './reject'\n\nimport { resetRecon, setReconNotes } from './recon'\n\nimport { setLimitType, resetLimitType } from './utilization'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // * Discrepancy\n  initDiscrepancy,\n  setDiscrepancy,\n  // * Errror\n  resetError,\n  setError,\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetInquiry,\n  addInquiryMessages,\n  setInquiryMessages,\n  setInquiryMessage,\n  setInquiryAssignee,\n  // * Reassign\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee,\n  setRejectStatus,\n  setClaimPro,\n  // Recon\n  resetRecon,\n  setReconNotes,\n  setLimitType,\n  resetLimitType\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DISCREPANCY',\n    payload\n  }\n}\n\nexport const setDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DISCREPANCY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetEscalation = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_SHOW',\n    payload\n  }\n}\n\nexport const addEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGE',\n    payload\n  }\n}\n\nexport const setEscalationAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetInquiry = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const addInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGE',\n    payload\n  }\n}\n\nexport const setInquiryAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_SHOW',\n    payload\n  }\n}\n\nexport const addReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGE',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setRejectStatus = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REJECT_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetRecon = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_RECON_NOTES',\n    payload\n  }\n}\n\nexport const setReconNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_RECON_NOTES',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_LIMIT_TYPE',\n    payload\n  }\n}\n\nexport const resetLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_LIMIT_TYPE',\n    payload\n  }\n}\n","import React from 'react'\n// import Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport moment from 'moment'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Constant\nimport ClaimTypes from 'Constant/claimTypes'\n\n// Styles\nimport classes from './BatchForm.module.scss'\n\n// Validator\nimport BatchFormValidator from './BatchFormValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setShowBatchForm, setSelectedBatch } = actions\n\nconst claim_types = ClaimTypes.dropdown()\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nexport default function BatchForm ({\n  close,\n  open,\n  onSave,\n  bundle,\n  onChange,\n  disableControls,\n  onChangeDoctor,\n  disableComponents\n}) {\n  const dispatch = useDispatch()\n  const batch = useSelector(({ BatchEncoding: state }) => state.batch.selected)\n  const show = useSelector(({ BatchEncoding: state }) => state.batch.show)\n  const action = useSelector(({ BatchEncoding: state }) => state.batch.action)\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n  const saveControl = useSelector(({ BatchEncoding: state }) => state.batch.saveControl)\n  const [showPrompt, setShowPrompt] = React.useState(false)\n  const [confirmAction, setConfirmAction] = React.useState({\n    show: false,\n    message: 'Are you sure you want to save this batch?'\n  })\n\n  const [errors, setErrors] = React.useState({})\n  React.useEffect(() => {\n    setErrors({})\n  }, [])\n\n  const validate = () => {\n    const { error } = BatchFormValidator({\n      claim_type: batch.claim_type,\n      claim_source: batch.claim_source,\n      total_rcs: batch.total_rcs,\n      amount_billed: batch.amount_billed,\n      notes: batch.notes,\n      doctor_id: batch.doctor_id,\n      doctor_name: batch.doctor_name\n    })\n    setErrors(error || {})\n    if (error) setShowPrompt(true)\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      <Dialog open={show}>\n        <DialogTitle>{action}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3} className={classes.root}>\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Bundle No.' value={bundle.bundle_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='SOA No.' value={bundle.soa_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField\n                readOnly='true'\n                label='Date Received'\n                value={moment(bundle.date_received).format('MM/DD/YYYY')}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Due Date' value={moment(bundle.due_date).format('MM/DD/YYYY')} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner ID' value={bundle.facility_id} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner Name (Facility)' value={bundle.facility_name} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-id'\n                label='Medical Partner ID'\n                value={batch.doctor_id}\n                disabled={disableControls}\n                suggestions={suggestions.doctor.id}\n                onChange={(value, isSuggestionClick) =>\n                  onChangeDoctor({\n                    field: 'doctor_id',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n                error={errors.doctor_id}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-name'\n                label='Medical Partner Name (Doctor)'\n                value={batch.doctor_name}\n                disabled={disableControls}\n                suggestions={suggestions.doctor.full_name}\n                onChange={(value, isSuggestionClick) =>\n                  onChangeDoctor({\n                    field: 'doctor_name',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n                error={errors.doctor_name}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-type'\n                label='Claim Type'\n                required\n                items={claim_types}\n                value={batch.claim_type || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_type: event.target.value }))}\n                error={errors.claim_type}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-source'\n                label='Claim Source'\n                required\n                items={claim_sources}\n                value={batch.claim_source || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_source: event.target.value }))}\n                error={errors.claim_source}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldNumber\n                id='total-rcs'\n                label={'Total No. of RCS'}\n                required\n                value={batch.total_rcs}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ total_rcs: event.target.value }))}\n                error={errors.total_rcs}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldCurrency\n                id='billed-amount'\n                label='Billed Amount'\n                value={batch.amount_billed || 0}\n                disabled={disableControls}\n                // currency={false}\n                required\n                onChange={event => dispatch(setSelectedBatch({ amount_billed: event.target.value }))}\n                error={errors.amount_billed}\n              />\n            </Grid>\n\n            <Grid item xs={12} className={classes.input}>\n              <CustomTextField\n                id='notes-comments'\n                multiline\n                rows={6}\n                label='Notes/Comments'\n                value={batch.notes || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ notes: event.target.value }))}\n                error={errors.notes}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            id='cancel'\n            variant='contained'\n            color='primary'\n            className='button-negative'\n            onClick={() => {\n              dispatch(setShowBatchForm(false))\n              setErrors({})\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            disabled={saveControl}\n            onClick={() => !validate() && setConfirmAction(state => ({ ...state, show: true }))}\n          >\n            Save\n          </Button>\n          <Alert\n            open={confirmAction.show}\n            message={confirmAction.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setConfirmAction(state => ({ ...state, show: false }))}\n            onOk={() => {\n              setConfirmAction(state => ({ ...state, show: false }))\n              onSave(batch)\n            }}\n          />\n          <Alert\n            open={showPrompt}\n            message={'Please ensure that all fields are filled-up except for Notes and Comments.'}\n            okLabel='Ok'\n            onOk={() => setShowPrompt(false)}\n          />\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object()\n  .keys({\n    bundle_number: Joi.number()\n      .label('Bundle Number')\n      .integer()\n      .greater(0)\n      .required(),\n    total_rcs: Joi.number()\n      .label('Total No. of RCS')\n      .required()\n      .integer()\n      .min(0),\n    date_received: Joi.date()\n      .label('Date Received')\n      .required()\n      .max('now'),\n    due_date: Joi.date()\n      .label('Due Date')\n      .required()\n      .min(Joi.ref('date_received'))\n      .messages({\n        'date.min': `\"Due Date\" should have a maximum length of Date Received`\n      }),\n    soa_number: Joi.string()\n      .trim()\n      .label('SOA No')\n      .allow('')\n      .required(),\n    total_soa_amt: Joi.number()\n      .label('Total SOA Amount')\n      .greater(0)\n      .less(100000000)\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Facility)')\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .allow('')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Doctor)')\n      .allow('')\n      .required()\n  })\n  .options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_soa: Joi.number()\n    .label('Total Bundle Soa Amount')\n    .required(),\n  batches_soa: Joi.number()\n    .label('Total Batches Soa Amount')\n    .valid(Joi.ref('bundle_soa'))\n    .required(),\n  bundle_rcs: Joi.number()\n    .label('Total No. of Bundle RCS')\n    .required(),\n  batches_rcs: Joi.number()\n    .label('Total No. of Batches RCS')\n    .valid(Joi.ref('bundle_rcs'))\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\n\n//  Components\nimport BundleDetails from './Components/BundleDetails/BundleDetails'\nimport BatchList from './Components/BatchList/BatchList'\nimport BatchForm from './Components/BatchForm/BatchForm'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Style\nimport classes from './BundlePage.module.scss'\nimport Typography from '@material-ui/core/Typography'\n\n// Validator\nimport BundleValidator from './BundleValidator'\nimport RcsSoaValidator from './RcsSoaValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setShowBatchForm,\n  setSelectedBatch,\n  setBatchAction,\n  initSuggestions,\n  resetSuggestionObject,\n  setSuggestionObject,\n  setSaveBatchControl\n} = actions\n\nexport default function BundlePage (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [originalState, setOriginalState] = React.useState({})\n  const [bundle, setBundle] = React.useState(null)\n  const [batches, setBatches] = React.useState([])\n  const [isReadOnly, setIsReadOnly] = React.useState(true)\n  const [searchFilter, setSearchFilter] = React.useState('')\n  const [openDialog, setOpenDialog] = React.useState(false)\n  const [openBundleDialog, setOpenBundleDialog] = React.useState({})\n  const [openRCSDialog, setOpenRCSDialog] = React.useState({})\n\n  const [openError, setOpenError] = React.useState(false)\n  const [submitStatus, setsubmitStatus] = React.useState(false)\n  const { bundle_number, user_id: isSupervisor } = props.match.params\n  const [disableComponents, setDisableComponents] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [disableControls] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ batch_numbers: [] })\n  const [disabledSubmit, setDisabledSubmit] = React.useState(true)\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getBundleDetails(bundle_number)\n    dispatch(initSuggestions())\n  }, [props.match.params.bundle_number])\n\n  React.useEffect(() => {\n    setDisabledSubmit(batches.length <= 0)\n  }, [batches])\n\n  const getBundleDetails = bundle_number => {\n    BatchEncodingServices.getBundle({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Submitted',\n          color: 'green'\n        }\n        setsubmitStatus(true)\n      }\n\n      PageTitleService(`Bundle No. ${bundle_number}`, {\n        text: _status.text,\n        color: _status.color\n      })\n\n      const { user_id } = props.match.params\n      if (user_id) {\n        BreadcrumbsService.setSelectedItems([\n          'dashboard',\n          `createdBundles:${user_id}`,\n          `specificBundle:${bundle_number}`\n        ])\n      } else {\n        BreadcrumbsService.setSelectedItems(['dashboard', `specificBundle:${bundle_number}`])\n      }\n\n      setBundle({\n        bundle_number,\n        total_rcs: data.total_rcs,\n        date_received: data.date.received,\n        due_date: data.date.due,\n        soa_number: data.soa.number,\n        total_soa_amt: data.soa.amount,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        doctor_id: data.doctor.id,\n        doctor_name: data.doctor.name,\n        status: data.status,\n        reassign_notes: data.reassign_notes\n      })\n\n      getBatches(bundle_number)\n    })\n  }\n\n  const getBatches = bundle_number => {\n    BatchEncodingServices.getBatches({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(data)\n      LoadingService.loading(false)\n    })\n  }\n\n  const createBundle = () => {\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n    })\n  }\n\n  const cancelBundle = () => {\n    const { user_id } = props.match.params\n    const path = user_id ? `/batch-encoder-work/${user_id}` : '/'\n    props.history.push(path)\n  }\n\n  const handleOnSubmit = () => {\n    LoadingService.loading(true)\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: false\n    }))\n\n    BatchEncodingServices.submitBundle({\n      bundle_number: bundle.bundle_number\n    }).then(({ data: res }) => {\n      LoadingService.loading(false)\n      // getBundleDetails(bundle.bundle_number)\n      cancelBundle()\n    })\n  }\n\n  const [debounce, setDebounce] = React.useState({ doctor: null })\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setSelectedBatch({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setSelectedBatch({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'doctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnSaveBatch = newBatch => {\n    const { batch_number, ...data } = newBatch\n    dispatch(setSaveBatchControl(true))\n    if (batch_number) {\n      BatchEncodingServices.updateBatch({\n        bundle_number: bundle.bundle_number,\n        batch_number,\n        data\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state =>\n            state.map(i => {\n              if (i.batch_number === batch_number) {\n                for (let f in data) i[f] = data[f]\n                i.batch_number = data.batch_number\n              }\n              return i\n            })\n          )\n          dispatch(setSelectedBatch({}))\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    } else {\n      BatchEncodingServices.createBatch({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state => [...state, data])\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    }\n  }\n\n  const handleOnConfirmDeleteBatch = () => {\n    BatchEncodingServices.deleteMultipleBatch({\n      bundle_number: bundle_number,\n      data: forDeletion\n    })\n      .then(({ data: res }) => {\n        getBatches(bundle_number)\n        setOpenDialog(false)\n        setForDeletion({ batch_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDialog(false)\n        setOpenError(true)\n      })\n  }\n\n  const handleOnCancelDeleteBatch = () => {\n    setOpenDialog(false)\n    setOpenError(false)\n  }\n\n  const handleOnDeleteBatch = batch => {\n    setOpenDialog(true)\n  }\n\n  const handleOnEditBatch = batch => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(true)\n    dispatch(setBatchAction('Update Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: batch.batch_number,\n        doctor_id: batch.doctor.id,\n        doctor_name: batch.doctor.name,\n        claim_type: batch.claim.type,\n        claim_source: batch.claim.source,\n        total_rcs: batch.total_rcs,\n        amount_billed: batch.amount_billed,\n        notes: batch.notes\n      })\n    )\n  }\n\n  const handleOnchangeBundleDetails = ({ fieldName, fieldValue }) => {\n    setBundle(state => ({ ...state, [fieldName]: fieldValue }))\n  }\n\n  const handleOnSaveBundleDetails = () => {\n    let data = { ...bundle }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) return\n\n    const onOk = () => {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: false\n      }))\n\n      LoadingService.loading(true)\n\n      delete data.status\n      BatchEncodingServices.updateBundle({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(() => {\n        LoadingService.loading(false)\n        setIsReadOnly(true)\n      })\n    }\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: true,\n      message: 'Are you sure you want to update?',\n      handleOnOk: onOk\n    }))\n  }\n\n  const handleOnCancelBundleDetails = () => {\n    setErrors({})\n    setBundle(originalState)\n    setIsReadOnly(true)\n  }\n\n  const handleOnNewBatch = () => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(false)\n    dispatch(setBatchAction('New Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: null,\n        doctor_id: bundle.doctor_id,\n        doctor_name: bundle.doctor_name,\n        claim_type: '',\n        claim_source: '',\n        total_rcs: 0,\n        amount_billed: 0,\n        notes: ''\n      })\n    )\n  }\n\n  const ValidateBundle = () => {\n    if (validateSoaRcs()) {\n      setOpenRCSDialog(state => ({\n        ...state,\n        show: true\n        // message:\n        //   'The Total No. of RCS and Total SOA Amount of the Bundle details and the Total No. of RCS and Total Billed Amount of the Batch details do not match.'\n      }))\n    } else {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: true,\n        message: 'Are you sure you want to Submit this?',\n        handleOnOk: handleOnSubmit\n      }))\n    }\n  }\n\n  const validate = value => {\n    const { error } = BundleValidator(value)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const validateSoaRcs = () => {\n    const batches_rcs = batches.reduce((accu, curr) => accu + curr.total_rcs, 0)\n    const batches_soa = batches.reduce((accu, curr) => accu + curr.amount_billed, 0)\n    const { error } = RcsSoaValidator({\n      bundle_rcs: bundle.total_rcs,\n      batches_rcs,\n      bundle_soa: bundle.total_soa_amt,\n      batches_soa\n    })\n    let messages = []\n    if (error) {\n      if (error.batches_rcs) messages.push('The Total No. of RCS')\n      if (error.batches_soa) messages.push('The Total SOA Amount')\n      setOpenRCSDialog(state => ({\n        ...state,\n        message: messages.length > 0 ? messages.join(' and ') + ' of Bundle Details and Batch details do not match' : ''\n      }))\n    }\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      {bundle && (\n        <div className={classes.root}>\n          <BatchForm\n            bundle={bundle}\n            disableControls={disableControls}\n            onSave={handleOnSaveBatch}\n            onChangeDoctor={handleOnChangeDoctor}\n            disableComponents={disableComponents}\n          />\n\n          <Paper className={classes['bundle-details']}>\n            <BundleDetails\n              details={bundle}\n              errors={errors}\n              isReadOnly={isReadOnly}\n              onChange={handleOnchangeBundleDetails}\n            />\n            {!submitStatus && !isSupervisor && (\n              <Grid item className={classes['actions']}>\n                {isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='add-new-bundle'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={createBundle}\n                    >\n                      Add New Bundle\n                    </Button>\n                    <Button\n                      id='update-details'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={() => {\n                        setOriginalState(bundle)\n                        setIsReadOnly(false)\n                      }}\n                    >\n                      Update Details\n                    </Button>\n                  </React.Fragment>\n                )}\n\n                {!isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='cancel-update'\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                      onClick={handleOnCancelBundleDetails}\n                    >\n                      Cancel\n                    </Button>\n\n                    <Button\n                      id='save'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={handleOnSaveBundleDetails}\n                    >\n                      Save\n                    </Button>\n                  </React.Fragment>\n                )}\n              </Grid>\n            )}\n          </Paper>\n          <Typography className={classes['list-header']} variant='h6'>\n            Batches\n          </Typography>\n          <Paper className={classes['table-container']}>\n            <Grid item className={classes['actions']}>\n              <SearchTextComponent onChange={event => setSearchFilter(event.target.value)} />\n              {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-neutral'\n                  id='add-new-batch'\n                  onClick={handleOnNewBatch}\n                >\n                  Add New Batch\n                </Button>\n              )}\n            </Grid>\n            <BatchList\n              batches={batches}\n              bundle_number={bundle_number}\n              onDelete={handleOnConfirmDeleteBatch}\n              openDialog={openDialog}\n              onCancel={handleOnCancelDeleteBatch}\n              onOpen={handleOnDeleteBatch}\n              openError={openError}\n              canEdit={!submitStatus && !isSupervisor}\n              onEdit={handleOnEditBatch}\n              forDeletion={forDeletion}\n              setForDeletion={setForDeletion}\n              isBundleCompleted={bundle && bundle.status && bundle.status === 'SUBMITTED' ? 1 : false}\n              searchFilter={searchFilter}\n            />\n          </Paper>\n          <div align='right' className={classes.buttonWrapper}>\n            {bundle && bundle.status && bundle.status !== 'SUBMITTED' && forDeletion.batch_numbers.length > 0 ? (\n              <Button\n                variant='contained'\n                color='primary'\n                className={`${'button-negative'} ${classes['delete-button']}`}\n                onClick={() => {\n                  handleOnDeleteBatch(true)\n                }}\n                id='cancel'\n              >\n                Delete\n              </Button>\n            ) : (\n              ''\n            )}\n            <Button variant='contained' color='primary' className='button-negative' id='cancel' onClick={cancelBundle}>\n              Cancel\n            </Button>\n\n            {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n              <Button\n                id='submit'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                disabled={disabledSubmit}\n                onClick={ValidateBundle}\n              >\n                Submit\n              </Button>\n            )}\n          </div>\n        </div>\n      )}\n\n      <Alert\n        open={openBundleDialog.show}\n        message={openBundleDialog.message}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenBundleDialog(state => ({ ...state, show: false }))}\n        onOk={openBundleDialog.handleOnOk}\n      />\n\n      <Alert\n        open={openRCSDialog.show}\n        message={openRCSDialog.message}\n        cancelLabel='Close'\n        onCancel={() => setOpenRCSDialog(state => ({ ...state, show: false }))}\n      />\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object()\n  .keys({\n    bundle_number: Joi.number()\n      .label('Bundle Number')\n      .integer()\n      .greater(0)\n      .required(),\n    total_rcs: Joi.number()\n      .label('Total No. of RCS')\n      .integer()\n      .min(0)\n      .required(),\n    date_received: Joi.date()\n      .label('Date Received')\n      .required()\n      .max('now'),\n    due_date: Joi.date()\n      .label('Due Date')\n      .required()\n      .min(Joi.ref('date_received'))\n      .messages({\n        'date.min': `The \"Due Date\" should be later than the Date Received`\n      }),\n    soa_number: Joi.string()\n      .trim()\n      .label('SOA No')\n      .allow('')\n      .required(),\n    total_soa_amt: Joi.number()\n      .label('Total SOA Amount')\n      .greater(0)\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Facility)')\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .allow('')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Doctor)')\n      .allow('')\n      .required()\n  })\n  .options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport moment from 'moment'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Style\nimport classes from './NewBundlePage.module.scss'\n\n// Validator\nimport NewBundleValidator from './NewBundleValidator'\nexport default function NewBundlePage (props) {\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [newBundle, setNewBundle] = React.useState({\n    bundle_number: '',\n    total_rcs: 0,\n    soa_number: '',\n    facility_id: '',\n    facility_name: '',\n    total_soa_amt: 0,\n    doctor_id: '',\n    doctor_name: '',\n    date_received: moment(),\n    due_date_adjustment: 0,\n    due_date: moment().add(30, 'days')\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    doctorPartner: {\n      id: [],\n      name: [],\n      data: []\n    }\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, doctorPartner: { ...state.doctorPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = args => {\n    const { value, field } = args\n    setNewBundle(state => ({ ...state, [field]: value }))\n    handleOnChangeMedicalPartner(args)\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: {\n        id: [],\n        name: [],\n        data: []\n      },\n      doctorPartner: {\n        id: [],\n        name: [],\n        data: []\n      }\n    }))\n\n    if (field === 'facility_id' || field === 'facility_name') {\n      if (isSuggestionClick) {\n        for (let i of suggestions.medicalPartner.data) {\n          if (value === i.id || value === i.name) {\n            // Compute due date based on date received and earliest term found\n            // Fallback term is 30 days\n            let term = 30\n            if (i.earliest_term) {\n              term = parseInt(i.earliest_term)\n              if (isNaN(term) || term < 0) {\n                term = 30\n              }\n            }\n            let newDate = moment(newBundle.date_received).add(term, 'days')\n\n            setNewBundle(state => ({\n              ...state,\n              facility_id: i.id,\n              facility_name: i.name,\n              due_date: newDate,\n              due_date_adjustment: term\n            }))\n          }\n        }\n      } else {\n        switch (field) {\n          case 'facility_id':\n            getMedicalPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'facility_name':\n            getMedicalPartnerSuggestions({ value, by: 'name' })\n            break\n\n          default:\n            break\n        }\n      }\n    } else if (field === 'doctor_id' || field === 'doctor_name') {\n      if (isSuggestionClick) {\n        if (!isNaN(selectedIndex)) {\n          try {\n            const i = suggestions.doctorPartner.data[selectedIndex]\n            setNewBundle(state => ({ ...state, doctor_id: i.id, doctor_name: i.full_name }))\n          } catch (ex) {}\n        }\n      } else {\n        switch (field) {\n          case 'doctor_id':\n            getDoctorPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'doctor_name':\n            getDoctorPartnerSuggestions({ value, by: 'full_name' })\n            break\n\n          default:\n            break\n        }\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    PageTitleService(`Create New Bundle`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'newBundle'])\n    setNewBundle(state => ({ ...state, bundle_number: props.match.params.bundle_number }))\n  }, [props.match.params.bundle_number])\n\n  const validate = value => {\n    const { error } = NewBundleValidator(value)\n    setErrors(error || {})\n    return !!error\n  }\n  const handleOnSave = () => {\n    setDisableControls(true)\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n\n    const data = {\n      ...newBundle,\n      date_received: newBundle.date_received.toISOString(),\n      due_date: newBundle.due_date.toISOString()\n    }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) {\n      setDisableControls(false)\n      return\n    }\n    // return validate({ total_rcs: data.total_rcs })\n\n    LoadingService.loading(true)\n\n    // Remove date due adjustment; it will cause an error on server\n    delete data.due_date_adjustment\n\n    BatchEncodingServices.updateBundle({\n      data,\n      bundle_number: newBundle.bundle_number\n    }).then(res => {\n      props.history.push(`/bundles/${newBundle.bundle_number}`)\n    })\n  }\n\n  const cancel = () => props.history.push(`/`)\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['upload-container']}>\n        <Link to={`/bundles/upload-soa`}>\n          <Typography id='upload-soa-button' variant='subtitle2' className={`bold text-link ${classes.label}`}>\n            + Upload SOA\n          </Typography>\n        </Link>\n      </div>\n\n      <Paper className={classes.form}>\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-bundle-number'\n              label='Bundle No.'\n              value={newBundle.bundle_number}\n              fullWidth\n              disabled\n              error={errors.bundle_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldNumber\n              id='create-new-bundle-total-rcs'\n              required\n              label='Total No. of RCS'\n              value={newBundle.total_rcs}\n              fullWidth\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_rcs: e.target.value }))}\n              error={errors.total_rcs}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-date-received'\n              label='Date Received'\n              value={newBundle.date_received}\n              disabled={disableControls}\n              onChange={date => {\n                // Adjust due date accordingly to date received and term adjustment\n                const due_date = moment(date).add(newBundle.due_date_adjustment, 'days')\n\n                setNewBundle(state => ({ ...state, date_received: date, due_date: due_date }))\n              }}\n              error={errors.date_received}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-due-date'\n              label='Due Date'\n              disabled={disableControls}\n              value={newBundle.due_date}\n              onChange={date => setNewBundle(state => ({ ...state, due_date: date }))}\n              error={errors.due_date}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-soa-number'\n              label='SOA No.'\n              fullWidth\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, soa_number: e.target.value }))}\n              error={errors.soa_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldCurrency\n              id='create-new-bundle-total-soa'\n              required\n              label='Total SOA Amount'\n              fullWidth\n              value={newBundle.total_soa_amt}\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_soa_amt: e.target.value }))}\n              error={errors.total_soa_amt}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-id'\n              required\n              label='Medical Partner ID'\n              value={newBundle.facility_id}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner.id}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n              }\n              error={errors.facility_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-name'\n              required\n              label='Medical Partner Name (Facility)'\n              value={newBundle.facility_name}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner.name}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeAutosuggest({ field: 'facility_name', value, isSuggestionClick })\n              }\n              error={errors.facility_name}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-docotr-partner-id'\n              label='Medical Partner ID'\n              value={newBundle.doctor_id}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner.id}\n              onChange={(value, isSuggestionClick, selectedIndex) =>\n                handleOnChangeAutosuggest({ field: 'doctor_id', value, isSuggestionClick, selectedIndex })\n              }\n              error={errors.doctor_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-doctor-name'\n              label='Medical Partner Name (Doctor)'\n              value={newBundle.doctor_name}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner.full_name}\n              onChange={(value, isSuggestionClick, selectedIndex) =>\n                handleOnChangeAutosuggest({ field: 'doctor_name', value, isSuggestionClick, selectedIndex })\n              }\n              error={errors.doctor_name}\n            />\n          </Grid>\n        </Grid>\n\n        <div className={classes.actions}>\n          <Button variant='contained' color='primary' className='button-negative' onClick={cancel} id='cancel'>\n            Cancel\n          </Button>\n\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={() =>\n              setOpenAlert(state => ({\n                ...state,\n                show: true,\n                message: 'Are you sure you want to save this?'\n              }))\n            }\n            disabled={disableControls}\n            id='save'\n          >\n            Save\n          </Button>\n\n          <Alert\n            open={openAlert.show}\n            message={openAlert.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenAlert(state => ({ ...state, show: false }))}\n            onOk={handleOnSave}\n          />\n        </div>\n      </Paper>\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ce')\n\nexport default class ClaimsEncodingServices {\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getLetterNotice ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // static getDropdown (params) {\n  //   return axios({\n  //     url: '/lookups/dropdown',\n  //     method: 'GET',\n  //     params,\n  //     headers: { [ExcludeErrorConstants['all']]: 1 }\n  //   })\n  // }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","// TODO: Uncomment\nimport moment from 'moment'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport claimTypes from 'Constant/claimTypes'\n\n/**\n * SOA ETL Controller. \n * An ETL (Extract Transform Load) controller \"prototype/function\" class intended to contain ETL\n * logic for extracting, transforming and loading SOA import data.\n *\n * As of the moment, extraction and loading is being done elsewhere outside this\n * utility. So this class is currently only performing the \"Transformation phase\"\n */\nfunction SoaEtlController() { }\n\nSoaEtlController.MINIMUM_KEYS = {\n  BUNDLE_SOA_NUM: 'BUNDLE_SOA_NUM',\n  BUNDLE_RCS_NUM: 'BULDE_RCS_NUM',\n  BUNDLE_RCS_DATE: 'BUNDLE_RCS_DATE',\n\n  BUNDLE_FACILITY_NAME: 'BUNDLE_FACILITY_NAME',\n  BUNDLE_FACILITY_CODE: 'BUNDLE_FACILITY_CODE',\n\n  BATCH_CLAIMS_SOURCE: 'BATCH_CLAIMS_SOURCE',\n  BATCH_CLAIM_TYPE: 'BATCH_CLAIM_TYPE',\n\n  CLAIM_DATE_AVAILMENT: 'CLAIM_DATE_AVAILMENT',\n  CLAIM_DATE_ADMITTED: 'CLAIM_DATE_ADMITTED',\n  CLAIM_DATE_DISCHARGE: 'CLAIM_DATE_DISCHARGE',\n  CLAIM_APPROVAL_CODE: 'CLAIM_APPROVAL_CODE',\n  CLAIM_MEMBER_NUM: 'CLAIM_MEMBER_NUM',\n  CLAIM_MEMBER_NAME: 'CLAIM_MEMBER_NAME',\n  CLAIM_DIAGNOSIS_NAME: 'CLAIM_DIAGNOSIS_NAME',\n  CLAIM_DIAGNOSIS_CODE: 'CLAIM_DIAGNOSIS_CODE',\n\n  CLAIM_DOCTOR_NAME: 'CLAIM_DOCTOR_NAME',\n  CLAIM_DOCTOR_AMOUNT: 'CLAIM_DOCTOR_AMOUNT',\n\n  CLAIM_PROCEDURE_NAME: 'CLAIM_PROCEDURE_NAME',\n  CLAIM_PROCEDURE_AMOUNT: 'CLAIM_PROCEDURE_AMOUNT',\n\n  CLAIM_HOSPITAL_ITEM_NAME: 'CLAIM_HOSPITAL_ITEM_NAME',\n  CLAIM_HOSPITAL_ITEM_AMOUNT: 'CLAIM_HOSPITAL_ITEM_AMOUNT'\n}\n\nSoaEtlController.COLUMN_TEMPLATES = {\n  DEFAULT:\n  {\n    // Bundle fields\n    'SOA No.': SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM,\n    'RCSNum': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM,\n    'RCS Date': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE,\n\n    // Batch fields\n    'Claim Type': SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE,\n\n    // Claim fields\n\n    // Claim fields - date\n    'Date of Availment': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_AVAILMENT,\n    'Date Admitted': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED,\n    'Date Discharge': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE,\n\n    'Approval Code / LOE No.': SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE,\n\n    'Member Number': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM,\n    'Patient Name': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME,\n\n    'Diagnosis': SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME,\n    'ICD10 Code': SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE,\n\n    // Claim fields - line items\n    'Doctors Name': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME,\n    'PF Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT,\n\n    'Procedure': SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME,\n    'Proc Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT,\n\n    'Hospital Item': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME,\n    'HospItem Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT\n  }\n}\n\n/**\n * Performs transformation of specified data rows using the specified data mapping\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n */\nSoaEtlController.transform = function (dataRows, dataMapping, defaults = {}) {\n  console.log('soa_etl', 'transform')\n\n  // Initial check parameters\n  if (!dataRows || !dataMapping || !dataMapping.columns || !dataMapping.fields[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]) throw { error: 'invalid parameters' }\n\n  const prepData = SoaEtlController._transformPreviewDataToPrepData(dataRows, dataMapping, defaults)\n  console.log(prepData)\n\n  const bundle = SoaEtlController._transformPrepDataToHierarchicalData(prepData)\n  console.log(JSON.stringify(bundle, null, 2))\n\n  return bundle\n}\n\n/** \n * Loads the specified bundle data unto the Claims server by invoking the appropriate API calls\n * for the bundle, batch and claims information found in the bundle data.\n * \n * @param bundle bundle data from transform()\n */\nSoaEtlController.loadToApi = function (bundle, successCallback) {\n\n  let promise = new Promise(function (resolve, reject) {\n    // TODO: refactor; callback hell\n\n    // Invoke Create Bundle\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      const bundleNumber = data\n      console.log(bundleNumber)\n\n      bundle.bundle_number = bundleNumber\n\n      const bundleParam = { ...bundle }\n      delete bundleParam.batches\n\n      // Invoke Update Bundle\n      BatchEncodingServices.updateBundle({ bundle_number: bundleNumber, data: bundleParam }).then(res => {\n\n        // Create promise for each add batch operation (which contains add-claims operation)\n        const addBatchPromises = bundle.batches.map(batch => {\n          const batchParam = { ...batch }\n          delete batchParam.claims\n\n          // Create single promise for add batch\n          const promise = new Promise((resolveBatchPromise, rejectBatchPromise) => {\n\n            // Call create batch API\n            BatchEncodingServices.createBatch({ data: batchParam, bundle_number: bundleNumber })\n              .then(res => {\n                const { data } = res.data\n                batch.batch_number = data.batch_number\n\n                async function addClaims() {\n                  for (let i = 0; i < batch.claims.length; i++) {\n                    const claim = batch.claims[i]\n                    // Invoke create claim\n                    await ClaimsEncodingServices.addClaim({ batch_number: batch.batch_number, data: claim })\n                  }\n                  resolveBatchPromise()\n                }\n\n                // Create claims for batch\n                addClaims()\n\n              })\n              .catch(() => {\n                rejectBatchPromise('Batch creation failed')\n              })\n          })\n\n          return promise\n        })\n\n        // Note: VNI requirement, is to not perform automatic bundle submission \n        //       and consequentially, no automatic claims creation for claims under the\n        //       automatically created batches. That is the function requirement. \n        //       The technical operation however, needs claims to be created but just \n        //       NOT visible as of yet to claims encoders (and up).\n        // // Todo: refactor to wait for all batches to be created before submitting bundle\n        // BatchEncodingServices.submitBundle({ bundle_number: bundleNumber }).then(res => {\n        //   if (successCallback) { successCallback();} \n        //   resolve()\n        //   // batch.claims.forEach(element => {\n        //   //   let claim = element\n        //   // })\n        // }).catch(() => {\n        //   reject('Bundle submission failed')\n        // })\n\n\n        // PromiseUtil.executeInSequence(addBatchPromises)\n        Promise.all(addBatchPromises)\n          .then(() => {\n            console.log('success SOA loading unto API')\n            //alert('success SOA loading unto API')\n            resolve()\n          })\n\n      }).catch(() => {\n        console.log('failed SOA loading unto API')\n        //alert('failed SOA loading unto API')\n        reject('Bundle creation failed')\n      })\n\n    })\n  });\n\n  return promise\n}\n\n\n/**\n * Performs transformation of \"preview data rows\" to \"preparation data rows\"\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n *\n * @return mapped-out data rows\n */\nSoaEtlController._transformPreviewDataToPrepData = function (dataRows, dataMapping, defaults = {}) {\n  const outputEntries = []\n  let prevEntry = {}\n  dataRows.forEach(dataEntry => {\n    const outputEntry = {}\n    let hasSingleValue = false\n    Object.keys(dataMapping.columns).forEach(columnKey => {\n      let dataValue = dataEntry[columnKey]\n      let outputKey = dataMapping.columns[columnKey]\n\n      // If no value for the key\n      if (!dataValue || dataValue.trim().length === 0) {\n        dataValue = ''\n        // Attempt to use previous row's value\n        // dataValue = prevEntry[outputKey]\n        // if (!dataValue) dataValue = ''\n      } else {\n        hasSingleValue = true\n      }\n\n      // Store upon output entry\n      outputEntry[outputKey] = dataValue.trim()\n    })\n\n    if (hasSingleValue) {\n      if (defaults) {\n        Object.keys(defaults).forEach(key => {\n          outputEntry[key] = defaults[key]\n        })\n      }\n\n      Object.keys(dataMapping.fields).forEach(fieldKey => {\n        let value = outputEntry[fieldKey]\n        if (value && value.length > 0) outputEntry[fieldKey] = dataMapping.fields[fieldKey][value]\n      })\n\n      outputEntries.push(outputEntry)\n    }\n\n    // Keep track of previews row\n    prevEntry = outputEntry\n  })\n\n  return outputEntries\n}\n\n/** \n * Transforms Preparation Data into Hierarchical Data (bundle, batches and claims).\n * \n * @param prepDataRows output from _transformPreviewDataToPrepData()\n * \n * @return bundle object which includes underneath batches and claims objects\n */\nSoaEtlController._transformPrepDataToHierarchicalData = function (prepDataRows) {\n  let prevPrepEntry = {}\n\n  let bundle = null\n  let currentBatch = null\n  let currentClaim = null\n  let totalGrossAmount = 0\n\n  prepDataRows.forEach(dataEntry => {\n\n    const soaNumber = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM]\n    if (!bundle) {\n      let rcsTotal = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM]\n      try {\n        rcsTotal = parseInt(rcsTotal)\n      } catch {\n        throw 'Error: Invalid Total RCS (' + rcsTotal + ')'\n      }\n\n      // bundle = {\n      //   soa: { number: soaNumber, amount: 0.0 },\n      //   date: { received: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE] },\n      //   facility: {\n      //     id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n      //     name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]\n      //   },\n      //   total_rcs: rcsTotal,\n      //   batches: []\n      // }\n      const dateReceived = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]\n      bundle = {\n        soa_number: soaNumber,\n        total_soa_amt: 0.0,\n\n        // TODO: uncomment\n        date_received: moment(dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]).format('MM/DD/YYYY'),\n        due_date: moment(dateReceived).add(30, 'days').format('MM/DD/YYYY'),\n\n        facility_id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n        facility_name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME],\n        total_rcs: rcsTotal,\n        doctor_id: '',\n        doctor_name: '',\n        batches: []\n      }\n    }\n\n    // Enforce there is only SOA number\n    if (soaNumber !== '' && soaNumber !== bundle.soa_number) {\n      throw 'Error: Another SOA Number found (' + soaNumber + ')'\n    }\n\n    // Fetch claim type and check if there is a change\n    const claimType = dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]\n    if (!currentBatch || (claimType != '' && claimType != currentBatch.claim_type)) {\n      // currentBatch = {\n      //   claim: {\n      //     type: claimType,\n      //     source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n      //   },\n      //   claims: []\n      // }\n\n      currentBatch = {\n        claim_type: claimType,\n        claim_source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n        doctor_id: '',\n        doctor_name: '',\n        total_rcs: 0,\n        amount_billed: 0.0,\n        notes: \"SYSTEM GENERATED BATCH VIA SOA UPLOAD\\n\",\n        claims: []\n      }\n\n      bundle.batches.push(currentBatch)\n    }\n\n    // Fetch approval code and check if there is a change\n    const approvalCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE]\n    if (!currentClaim || (approvalCode != '' && approvalCode != currentClaim[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE])) {\n\n      // Increment total RCS for the parent batch\n      currentBatch.total_rcs += 1\n\n      const memberName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME]\n      const nameParts = memberName.split(',')\n\n      // currentClaim = {\n      //   member: {\n      //     account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n      //     last_name: nameParts[0].trim(),\n      //     first_name: nameParts[1].trim(),\n      //     middle_name: '',\n      //   },\n      //   approval_code: approvalCode,\n      //   professional_fees: [],\n      //   hospital_items: [],\n      //   procedures: []\n      // }\n\n      currentClaim = {\n        member_account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n        member_first_name: nameParts[1].trim(),\n        member_middle_name: '',\n        member_last_name: nameParts[0].trim(),\n\n        facility_id: bundle.facility_id,\n        facility_name: bundle.facility_name,\n\n        approval_code: approvalCode,\n        loa_number: '',\n\n        diagnosis: [],\n        professional_fees: [],\n        hospital_items: [],\n        procedures: [],\n\n        date_from: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED],\n        date_to: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE],\n\n        claim_sub_type: 'Surgical',\n        claim_sub_sub_type: 'Physical',\n\n        with_corporate_guarantee: '',\n        loa_notes: '',\n\n      }\n\n      if (currentBatch.claim_type === 'In Patient') {\n        currentClaim.room_type = 'WARD'\n        currentClaim.room_rate = 0.0\n        currentClaim.pro_id = 'N/A'\n        currentClaim.pro_name = 'N/A'\n      }\n\n      currentBatch.claims.push(currentClaim)\n    }\n\n    // Check for diagnosis entries  \n    const diagnosisName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME]\n    const diagnosisCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE]\n    if (diagnosisName && diagnosisCode) {\n      const flag = currentClaim.diagnosis.length == 0\n      currentClaim.diagnosis.push({ code: diagnosisCode, description: diagnosisName, primary: flag })\n    }\n\n    let lineItem = null\n    let lineAmount = null\n\n    // Check for line item - professional fee \n    lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME]\n    lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT]\n    if (lineItem && lineAmount) {\n      try {\n        lineAmount = parseFloat(lineAmount)\n      } catch {\n        lineAmount = 0.0\n      }\n \n      bundle.total_soa_amt += lineAmount\n      currentBatch.amount_billed += lineAmount\n      \n      currentClaim.professional_fees.push({\n        doctor_name: lineItem, doctor_id: \"unknown\", gross_amount: lineAmount,\n        specialization: \"unknown\", vat_amount: 0, amount_paid_by_member: 0,\n        philhealth_amount_paid: 0, philhealth_remarks: \"\", amount_not_covered: 0, reason: \"\", amount_due_from_member: 0, reason_for_charging_member: \"\"\n      })\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Procedure') {\n      // Check for line item - hospital item \n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.hospital_items.push({\n          name: lineItem, item_code: \"unknown\", gross_amount: lineAmount,\n          vat_amount: 0, amount_paid_by_member: 0, philhealth_amount_paid: 0, philhealth_remarks: \"\", amount_not_covered: 0, reason: \"\", amount_due_from_member: 0, reason_for_charging_member: \"\"\n        })\n      }\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Consultation') {\n        // Check for line item - procedure\n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.professional_fees.push({\n          description: lineItem, gross_amount: lineAmount,\n          code: \"unknown\", vat_amount: 0, amount_paid_by_member: 0, philhealth_amount_paid: 0, philhealth_remarks: \"\"\n        })\n      }\n    }\n\n  })\n\n  return bundle\n}\n\n\n// TODO: set to false on normal operation; set to true only for debugging purposes\nSoaEtlController.DEBUG = false\n\nif (SoaEtlController.DEBUG) {\n  SoaEtlController.test = function () {\n\n    const dataRows = [\n      {\n        'SOA No.': 'SOA0001',\n        'RCSNum': '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '5556',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Yu, Eusebio',\n        'Diagnosis': 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 0\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': 'Cardiac Arrest',\n        'ICD10 Code': 'C0055',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 1\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': 'Dr. ABC',\n        'PF Amt': '500',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 2\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': 'X-Ray',\n        'Proc Amt': '1000',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 3\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': 'Dextrose',\n        'HospItem Amt': ' 850.00 ',\n        '__index__': 4\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 5\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 6\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 7\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 8\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 9\n      },\n      {\n        'SOA No.': 'SOA0001',\n        'RCSNum': '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '6667',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Conan, Detective',\n        'Diagnosis': 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': 'Dr. Evil',\n        'PF Amt': '100000.00',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 10\n      },\n    ]\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]:\n        {\n          'IP': 'In Patient',\n          'OPP': 'Out Patient Procedure',\n          'OPC': 'Out Patient Consultation'\n        }\n\n      }\n    }\n    console.log(dataMapping)\n\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: 'Hospital',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: 'HOS000012',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: 'Davao Doctors Hospital',\n    }\n\n    const bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n    SoaEtlController.loadToApi(bundle)\n  }\n\n  // TODO: comment out\n  // SoaEtlController.test()\n}\n\n// TODO: Uncomment\nexport default SoaEtlController\n","import XLSX from 'xlsx'\n\nexport default async function XLSXParser ({ file, onComplete }) {\n  let headers = null\n  const results = []\n\n  var reader = new FileReader()\n  reader.onload = function (e) {\n    const workbook = XLSX.read(e.target.result, { type: 'binary' })\n\n    const sheet = workbook.Sheets[workbook.SheetNames[0]]\n    const data = XLSX.utils.sheet_to_json(sheet, { raw: false, header: 1 })\n    headers = data.shift()\n\n    for (let index = 0; index < data.length; index++) {\n      const _item = {}\n      headers.map(i => (_item[i] = ''))\n\n      data[index].map((value, index) => (_item[headers[index]] = value))\n\n      if (index === data.length - 1 && !data[index].length) continue\n\n      results.push(_item)\n    }\n\n    onComplete({ headers, results })\n  }\n\n  reader.readAsBinaryString(file)\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport Parser from './../../Parser'\n\n// Style\nimport classes from './UploadSpace.module.scss'\n\nconst Progress = withStyles({\n  root: {\n    height: 15,\n    borderRadius: 20,\n    backgroundColor: '#c7c7c7'\n  },\n  bar: {\n    borderRadius: 20,\n    backgroundColor: '#00ab00'\n  }\n})(LinearProgress)\n\nexport default function UploadSpace (props) {\n  const { onSelectFile } = props\n  const dialogRef = React.useRef()\n\n  const [dragged, setDragged] = React.useState(false)\n  const [fileLoaded, setFileLoaded] = React.useState()\n  const [progress, setProgress] = React.useState(0)\n\n  const handleOnClick = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    dialogRef.current.click()\n  }\n\n  const handleOnChangeFile = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    const file = event.target.files[0]\n\n    if (!file) return\n\n    handleParse(file)\n  }\n\n  const handleOnDrag = state => e => {\n    e.preventDefault()\n    e.stopPropagation()\n    setDragged(state)\n  }\n\n  const handleDrop = e => {\n    setDragged(false)\n    e.preventDefault()\n    e.stopPropagation()\n\n    // TODO if multiple file and invalid file type\n    const [file] = e.dataTransfer.files\n\n    handleParse(file)\n  }\n\n  const handleParse = file => {\n    setFileLoaded(true)\n\n    console.log(file)\n    Parser({\n      file,\n      onComplete: ({ results, headers }) => {\n        setProgress(100)\n        setTimeout(() => onSelectFile({ items: results, headers, fileName: file.name }), 1000)\n      }\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {!fileLoaded && (\n        <div\n          className={`${classes.root} ${dragged && classes.dragged}`}\n          onDrop={handleDrop}\n          onDragOver={handleOnDrag(true)}\n          onDragLeave={handleOnDrag(false)}\n        >\n          <div className={`${classes.container} ${classes.clickable}`} onClick={handleOnClick}>\n            <FontAwesomeIcon icon='file-upload' className={classes.icon} />\n            <Typography variant='subtitle2' className={classes.label}>\n              Click or drag/drop filte to preview\n            </Typography>\n\n            <div className={classes.warning}>\n              <Typography variant='subtitle2' className={classes.label}>\n                Make sure the dates are in the format where the\n              </Typography>\n              <Typography variant='subtitle2' className={classes.label}>\n                <span>month is written first</span> (ex. MM/DD/YYYY or YYYY/MM/DD)\n              </Typography>\n            </div>\n          </div>\n\n          <input\n            id='file-dialog'\n            type='file'\n            ref={dialogRef}\n            style={{ display: 'none' }}\n            accept='.xlsx, .xls, .csv'\n            onChange={handleOnChangeFile}\n          />\n        </div>\n      )}\n\n      {fileLoaded && (\n        <div className={classes.root}>\n          <div className={classes.container}>\n            <div className={classes['progress-container']}>\n              <Progress variant='determinate' value={progress} />\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\n\n// Styles\nimport classes from './DynamicTable.module.scss'\n\nexport default function DynamicTable (props) {\n  const { headers, items, fileName } = props.data\n  const { onRemoveFile } = props\n  const { onDetectDataRows } = props\n\n  const [tableState, setTableState] = React.useState({\n    limit: 10,\n    page: 1\n  })\n\n  const [selectedItems, setSelectedItems] = React.useState([])\n\n  React.useEffect(() => {\n    handleOnChangeItems({})\n  }, [])\n\n  React.useEffect(() => {\n    onDetectDataRows(selectedItems)\n  }, [selectedItems])\n\n  const handleOnTableChange = params => {\n    setTableState(state => ({ ...state, ...params }))\n    handleOnChangeItems(params)\n  }\n\n  const handleOnChangeItems = ({ page = 1, limit = 10 }) => {\n    const _items = []\n\n    const startAt = (page - 1) * limit\n    const endAt = page * limit\n\n    for (let index = startAt; index < endAt; index++) {\n      const item = items[index]\n      if (!item) break\n\n      _items.push({ ...item, __index__: index })\n    }\n\n    setSelectedItems(_items)\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['file-name-container']}>\n        <Typography id='file-name' variant='subtitle2' className={classes['file-name']}>\n          {fileName}\n        </Typography>\n\n        <IconButton size='small'>\n          <FontAwesomeIcon icon='minus-circle' className={classes.icon} onClick={onRemoveFile} />\n        </IconButton>\n      </div>\n\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              <TableCell id={`column-row-number`}>#</TableCell>\n\n              {headers.map(item => (\n                <TableCell key={item} id={`column-${item}`}>\n                  {item}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          body={selectedItems.map(item => (\n            <TableRow key={`${JSON.stringify(item)}-${item.__index__}`}>\n              <TableCell id={`row-${item.__index__}`}>{item.__index__ + 1}</TableCell>\n\n              {headers.map(header => (\n                <TableCell key={`item-${header}-${item.__index__}`}>{item[header]}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n          count={items.length}\n          page={tableState.page}\n          limit={tableState.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={handleOnTableChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\n// Shared Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './DataPairs.module.scss'\nimport { Typography } from '@material-ui/core'\n\nconst DataPair = props => {\n  const { index, sources, targets, source, target } = props\n  const { onClickRemove, onChangeSource, onChangeTarget } = props\n\n  return (\n    <div className={classes.child}>\n      <div className={classes.source}>\n        {/* <DropDown items={sources} value={source} onChange={onChangeSource} /> */}\n        <TextField\n          className={classes.name}\n          id={`input-source-${index}`}\n          value={source}\n          onChange={onChangeSource}\n          autoFocus\n          fullWidth\n        />\n      </div>\n      <div className={classes.target}>\n        <DropDown items={targets} value={target} onChange={onChangeTarget} />\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickRemove}>Remove</Button>\n      </div>\n    </div>\n  )\n}\nexport default function DataPairContainer (props) {\n  const { headers = ['Source', 'Target'], fields = [], sources, targets } = props\n  const { onClickAddNew, onClickRemove, onChangeSource, onChangeTarget } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        {headers.map((head, index) => (\n          <Typography key={`heade-${index}`} variant='h6'>\n            {head}\n          </Typography>\n        ))}\n      </div>\n      <div className={classes.children}>\n        {fields.map((field, index) => (\n          <DataPair\n            key={`field-${index}`}\n            index={index}\n            sources={sources}\n            targets={targets}\n            source={field.source || ''}\n            target={field.target || ''}\n            onChangeSource={event => onChangeSource({ index, value: event.target.value })}\n            onChangeTarget={event => onChangeTarget({ index, value: event.target.value })}\n            onClickRemove={event => onClickRemove({ index })}\n          />\n        ))}\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickAddNew}>Add New</Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n// Shared Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport DataPairContainer from './DataPairs/DataPairs'\n\n// Styles\nimport classes from './FieldMapper.module.scss'\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nconst dropdown_source = [\n  { value: 'OP', text: 'OP' },\n  { value: 'PF', text: 'PF' },\n  { value: 'IP', text: 'IP' }\n]\n\nconst dropdown_target = [\n  { value: 'In Patient', text: 'In Patient' },\n  { value: 'Out Patient Procedure', text: 'Out Patient Procedure' },\n  { value: 'Out Patient Consultation', text: 'Out Patient Consultation' },\n  { value: 'Reimbursement', text: 'Reimbursement' },\n  { value: 'Emergency', text: 'Emergency' },\n  { value: 'Dental', text: 'Dental' },\n  { value: 'Medicine Allowance', text: 'Medicine Allowance' },\n  { value: 'APE', text: 'APE' },\n  { value: 'ECU', text: 'ECU' },\n  { value: 'Pharmacy', text: 'Pharmacy' },\n  { value: 'PPE', text: 'PPE' },\n  { value: 'Medical Supplies', text: 'Medical Supplies' },\n  { value: 'Clinic Management', text: 'Clinic Management' }\n]\n\nexport default function FieldMapper (props) {\n  // Variables\n  const { sources = dropdown_source, targets = dropdown_target, claimSources = claim_sources } = props\n\n  // Services\n  const { ApiService } = props\n\n  // Callbacks\n  const { onSaveSuccess } = props\n  const { onChangeHeaderInputs } = props\n  const { onChangeClaimTypeDataMapping } = props\n\n  // Local Variables\n  const [facilityTemplate, setFacilityTemplate] = React.useState({\n    facility_id: '',\n    facility_name: '',\n    claim_source: ''\n  })\n  const [template, setTemplate] = React.useState({\n    id: '',\n    name: '',\n    isDefault: false,\n    fields: []\n  })\n\n  const [templates, setTemplates] = React.useState([])\n\n  const [suggestions, setSuggestions] = React.useState({\n    facility: {}\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null\n  })\n\n  const [dialog, setDialog] = React.useState({\n    show: false,\n    name: '',\n    isDefault: false,\n    error: {}\n  })\n\n  const [alertDialog, setAlertDialog] = React.useState({\n    show: false,\n    mesage: '',\n    okLabel: 'Okay'\n  })\n\n  // Listeners\n  React.useEffect(() => {\n    getTemplates()\n  }, [])\n\n  React.useEffect(() => {\n    onChangeHeaderInputs(facilityTemplate)\n  }, [facilityTemplate])\n\n  React.useEffect(() => {\n    onChangeClaimTypeDataMapping(template.fields)\n  }, [template])\n\n  // Fetchers\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestions(state => ({ ...state, facility: { [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getTemplates = () => {\n    ApiService.getTemplates().then(res => {\n      const { data } = res.data\n      setTemplates(data.map(data => ({ ...data, value: data.name, text: data.name })))\n      const _default = data.find(d => d.is_default === true)\n      if (_default) {\n        setTemplate({ id: _default._id, name: _default.name, fields: _default.fields, isDefault: _default.is_default })\n      }\n    })\n  }\n\n  // Events\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setFacilityTemplate(state => ({ ...state, [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          setFacilityTemplate(state => ({ ...state, facility_id: i.id, facility_name: i.name }))\n        }\n      }\n    } else {\n      setSuggestions(state => ({ ...state, facility: [] }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const handleOnClickAddNewTemplate = () => {\n    setDialog({ show: true, name: '', isDefault: false, error: {} })\n  }\n\n  const handleOnChangeTemplate = ({ value, text }) => {\n    const _template = templates.find(t => t.value === value)\n    setTemplate({ id: _template._id, name: _template.name, fields: _template.fields, isDefault: _template.is_default })\n  }\n\n  const handleOnChangeDialog = ({ field, value }) => {\n    setDialog(state => ({ ...state, [field]: value }))\n  }\n\n  const onClickAddField = () => {\n    const _fields = template.fields\n    const last = _fields[_fields.length - 1]\n    if (last && (last.source === '' || last.target === '')) return\n    _fields.push({ source: '', target: '' })\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onRemoveField = ({ index }) => {\n    const _fields = template.fields\n    _fields.splice(index, 1)\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeSource = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], source: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeTarget = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], target: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const doValidateTemplate = () => {\n    if (dialog.name === '') return false\n\n    return true\n  }\n\n  const doValidateFacilityTemplate = () => {\n    if (template.fields.length < 1) return false\n    template.fields.forEach(field => {\n      if (field.source === '' || field.target === '') {\n        return false\n      }\n    })\n\n    return true\n  }\n\n  const handleOnSaveTemplateDialog = () => {\n    if (!doValidateTemplate()) {\n      setAlertDialog({\n        show: true,\n        message: 'Enter Template Name',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: dialog.isDefault, fields: [] },\n      template_name: dialog.name\n    }).then(res => {\n      const { data } = res.data\n      setDialog({\n        show: false,\n        name: '',\n        isDefault: false,\n        error: {}\n      })\n      getTemplates()\n      setTemplate({ id: data._id, name: data.name, isDefault: data.is_default, fields: data.fields })\n    })\n  }\n\n  const handleOnSaveFacilityTemplate = () => {\n    if (!doValidateFacilityTemplate()) {\n      setAlertDialog({\n        show: true,\n        message:\n          'SOA details and mapping of data is required. Please complete first the SOA details and mapping of data to continue.',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: template.isDefault, fields: template.fields },\n      template_name: template.name\n    }).then(res => {\n      const { data } = res.data\n      ApiService.storeFacilityTemplate({\n        data: {\n          facility_name: facilityTemplate.facility_name,\n          claim_source: facilityTemplate.claim_source,\n          template_id: data._id\n        },\n        facility_id: facilityTemplate.facility_id\n      }).then(res => {\n        setAlertDialog({\n          show: true,\n          message: 'SOA details mapping of data successfully saved.',\n          okLabel: 'Okay'\n        })\n        onSaveSuccess({ template, facility: facilityTemplate })\n      })\n    })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-id'\n              required\n              label='Medical Partner ID'\n              value={facilityTemplate.facility_id}\n              suggestions={suggestions.facility.id}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeFacility({\n                  field: 'facility_id',\n                  value,\n                  isSuggestionClick\n                })\n              }\n            />\n          </div>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-facility-name'\n              required\n              label='Medical Partner (Facility) Name'\n              value={facilityTemplate.facility_name}\n              suggestions={suggestions.facility.name}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeFacility({\n                  field: 'facility_name',\n                  value,\n                  isSuggestionClick\n                })\n              }\n            />\n          </div>\n          <div className={classes['input']}>\n            <DropDown\n              id='claim-source'\n              label='Claim Source'\n              required\n              items={claimSources}\n              value={facilityTemplate.claim_source}\n              onChange={event => setFacilityTemplate(state => ({ ...state, claim_source: event.target.value }))}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <Typography variant='h6' className={classes.title}>\n            Data Values\n          </Typography>\n        </div>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <DropDown\n              id='data-templates'\n              label='Data Mapping Template'\n              required\n              items={templates}\n              value={template.name}\n              onChange={event =>\n                event.target.value !== 'add-new'\n                  ? handleOnChangeTemplate({ value: event.target.value, text: event.target.text })\n                  : handleOnClickAddNewTemplate()\n              }\n              addNew={{\n                show: true,\n                text: '+ Add New Data Map',\n                value: 'add-new'\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes.field}>\n            <div className={classes.label}>\n              <Typography>Claim Type</Typography>\n            </div>\n            <div className={classes.table}>\n              <DataPairContainer\n                headers={['Values', 'Data Column']}\n                sources={sources}\n                targets={targets}\n                fields={template.fields}\n                onClickAddNew={() => onClickAddField()}\n                onClickRemove={({ index }) => onRemoveField({ index })}\n                onChangeSource={({ index, value }) => onChangeSource({ index, value })}\n                onChangeTarget={({ index, value }) => onChangeTarget({ index, value })}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.groups}>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            onClick={handleOnSaveFacilityTemplate}\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n      <Dialog\n        fullWidth\n        maxWidth='sm'\n        onClose={() => setDialog(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={dialog.show}\n        className={classes.dialog}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Define Data Map\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDialog(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.input}>\n            <TextField\n              className={classes.name}\n              id='data-map-name'\n              value={dialog.name}\n              autoFocus\n              fullWidth\n              placeholder='Template Name'\n              onChange={event => handleOnChangeDialog({ field: 'name', value: event.target.value })}\n              error={dialog.error.name}\n            />\n          </div>\n          <div className={classes.input}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  className={classes.default}\n                  id='data-map-default'\n                  checked={dialog.isDefault}\n                  value={dialog.isDefault}\n                  onChange={event => handleOnChangeDialog({ field: 'isDefault', value: event.target.checked })}\n                />\n              }\n              label={'Set as default template'}\n            />\n          </div>\n          <div className={classes.footer}>\n            <div className={classes.action}>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, show: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={handleOnSaveTemplateDialog}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Save\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      <Alert\n        open={alertDialog.show}\n        message={alertDialog.message}\n        okLabel={alertDialog.okLabel}\n        onOk={() => {\n          setAlertDialog(state => ({ ...state, show: false }))\n        }}\n      />\n    </Paper>\n  )\n}\n","import React, { Fragment } from 'react'\n// import Grid from '@material-ui/core/Grid'\n// import Paper from '@material-ui/core/Paper'\n// import moment from 'moment'\nimport Button from '@material-ui/core/Button'\n// import Typography from '@material-ui/core/Typography'\n\n// Controller\nimport SoaEtlController from 'Controllers/SoaEtlController'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport UploadSpace from './Components/UploadSpace/UploadSpace'\nimport DynamicTable from './Components/DynamicTable/DynamicTable'\nimport FieldMapper from '../../FieldMapper/FieldMapper'\n// import CustomTextField from 'SharedComponents/TextField/CustomTextField'\n// import DatePicker from 'SharedComponents/DatePicker/DatePicker'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n// import Alert from 'SharedComponents/Alert/Alert'\n\n// // Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// Style\nimport classes from './UploadSoaPage.module.scss'\nimport claimTypes from 'Constant/claimTypes'\n\nexport default function UploadSoaPage (props) {\n  const { ApiService } = props\n  const [data, setData] = React.useState()\n  const [headerInputs, setHeaderInputs] = React.useState({})\n  const [claimTypeValues, setClaimTypeValues] = React.useState([])\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [dataRows, setDataRows] = React.useState([])\n\n  React.useEffect(() => {\n    PageTitleService(`Upload SOA File`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'uploadSoa'])\n  }, [])\n\n  const handleOnSelectFile = data => setData(data)\n\n  const handleOnRemoveFile = () => setData()\n\n  const handleOnCancelUpload = () => setData()\n\n  const handleProceedUpload = () => {\n    if (!claimTypeValues || claimTypeValues.length === 0) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Data Mapping'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_id) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner ID'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_name) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner Name'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.claim_source) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Claim Source'\n      }))\n      return\n    }\n\n    LoadingService.loading(true)\n\n    // Construct data mapping for Transformation\n    const claimTypeMap = {}\n    claimTypeValues.forEach(element => {\n      claimTypeMap[element.source] = element.target\n    })\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: claimTypeMap\n      }\n    }\n\n    // Construct defaults for Transformation\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: headerInputs.claim_source,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: headerInputs.facility_id,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: headerInputs.facility_name\n    }\n\n    // Invoke transformation\n    const bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n\n    const onSuccess = function () {\n      // alert('SOA Upload successful')\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'SOA Upload successful'\n      }))\n\n      handleOnCancelUpload()\n    }\n\n    // Invoke loading unto Claims API\n    SoaEtlController.loadToApi(bundle, onSuccess)\n      .then(() => {\n        onSuccess()\n        LoadingService.loading(false)\n      })\n      .catch(() => {\n        LoadingService.loading(false)\n        setOpenAlert(state => ({\n          ...state,\n          show: true,\n          message: 'SOA Upload failed'\n        }))\n      })\n  }\n\n  const handleOnClose = () => {\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n  }\n\n  const handleOnCancel = () => {\n    handleOnCancelUpload()\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {SoaEtlController.DEBUG && (\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-negative'\n          id='test-etl'\n          onClick={SoaEtlController.test}\n        >\n          Test ETL\n        </Button>\n      )}\n\n      {!data && <UploadSpace onSelectFile={handleOnSelectFile} />}\n\n      {data && (\n        <DynamicTable\n          data={data}\n          onRemoveFile={handleOnRemoveFile}\n          onDetectDataRows={dataRows => {\n            setDataRows(dataRows)\n          }}\n        />\n      )}\n\n      {data && (\n        <Fragment>\n          <FieldMapper\n            ApiService={ApiService}\n            onSaveSuccess={({ template, facility }) => {\n              console.log('Field Mapper Saved!', { template, facility })\n            }}\n            onChangeHeaderInputs={headerInputs => {\n              setHeaderInputs(headerInputs)\n            }}\n            onChangeClaimTypeDataMapping={fields => {\n              setClaimTypeValues(fields)\n            }}\n          />\n\n          {/* TODO: replace evil quick-fix */}\n          <br />\n\n          <div align='right'>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel-upload'\n              onClick={handleOnCancel}\n            >\n              Cancel\n            </Button>\n            {/* TODO: replace evil quick-fix */}\n            &nbsp; &nbsp;\n            <Button\n              id='proceed-upload'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={handleProceedUpload}\n            >\n              Upload\n            </Button>\n          </div>\n        </Fragment>\n      )}\n\n      <Alert open={openAlert.show} message={openAlert.message} okLabel='Close' onOk={handleOnClose} />\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Component\nimport { Typography } from '@material-ui/core'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Footer.module.scss'\n\nexport default function ClaimsUtilLedgerReport (props) {\n  const { username, total = {} } = props\n\n  // TODO For refactoring :(( )\n  return (\n    <div className={classes.footer}>\n      <hr />\n      <div className={classes.total}>\n        <div className={classes['total-row']}>\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AMOUNT: ${CurrencyFormatter(total.amount)}`}</p>\n          </div>\n\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AR: ${CurrencyFormatter(total.ar_amount)}`}</p>\n          </div>\n        </div>\n      </div>\n      <div className={classes['all-signatories']}>\n        <div className={classes.signatories}>\n          <Typography>Transmitted by: </Typography>\n          <Typography className={classes.username}>{username}</Typography>\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Noted by: </Typography>\n          <div className={classes['line-note']} />\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Received by: </Typography>\n          <div className={classes['line-received']} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/x/cc')\n\nexport default class CustomerCareServices {\n  static getMember ({ account_number }) {\n    return axios({\n      url: `/member`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getClient ({ account_number }) {\n    return axios({\n      url: `/client`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getMemberUtilizationLoa ({ account_number }) {\n    return axios({\n      url: `/members/${account_number}/utilization-loa`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // PRO User lookup\n  static proUsersLookup ({ value, field }) {\n    return axios({\n      url: '/users/pro',\n      method: 'GET',\n      params: { [field]: value }\n    })\n  }\n\n  static getMemberContract ({ mct_id }) {\n    return axios({\n      url: `/member/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getClientContract ({ mct_id }) {\n    return axios({\n      url: `/client/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getClientInfo ({ value, field }) {\n    return axios({\n      url: `/client-info`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { [field]: value }\n    })\n  }\n\n  static getClients ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/clients`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getMembers ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/members`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getClientUtilizationLoa ({ client_account_no }) {\n    return axios({\n      url: `/client/${client_account_no}/utilization-loa`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import instance from './instance'\n// import { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/c')\n\nexport default class ClaimsAdjudicationServices {\n  static utilizationLegder (params) {\n    return axios({\n      url: `/utilization-ledger`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static transmittalReport (params, client) {\n    return axios({\n      url: '/transmittal-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getTransmittalReportPdf (params) {\n    return axios({\n      url: '/transmittal-report/reports',\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' },\n      params\n    })\n  }\n\n  static utilizationClient (params) {\n    return axios({\n      url: '/utilization-ledger/client',\n      method: 'GET',\n      params\n    })\n  }\n\n  static utilizationClientTable (params) {\n    return axios({\n      url: '/utilization-ledger/client/table',\n      method: 'GET',\n      params\n    })\n  }\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/md')\n\nexport default class MedicalConsultantServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import MedicalConsultantServices from './MedicalConsultantServices'\nimport instance from './instance'\nconst axios = instance('/client')\n\nexport default class UserManagementServices {\n  static getUsers (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getUsersByRole (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getClaimsVerifierSupervisors () {\n    return this.getUsers('CLAIMS_VERIFIER_SUPERVISOR')\n  }\n\n  static getClaimsAnalyst () {\n    return this.getUsers('CLAIMS_ANALYST')\n  }\n\n  static getUserById (id) {\n    return axios({\n      url: `http://18.138.94.224:4101/api/users/${id}`,\n      method: 'GET'\n    })\n  }\n}\n","import FileSaver from 'file-saver'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nexport default function Download ({ fileName = 'CSV', header = [], rows = [], extension = 'csv', statics = [] }) {\n  const valueSeperator = ','\n  const newLine = '\\r\\n'\n  const [c_header = [], c_footer = []] = statics\n\n  const _rows = [\n    ...c_header,\n    header.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n    newLine,\n    ...rows.map(row =>\n      [\n        row.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n        newLine\n      ].join('')\n    ),\n    ...c_footer\n  ]\n  const blob = new Blob(_rows, { type: 'data:text/csv;charset=utf-8' })\n  FileSaver.saveAs(blob, `${fileName}.${extension}`)\n}\n","export default {\n  header: ['Company:', 'Account No.:', 'Contract:', 'Date:'],\n  footer: ['Total', 'Transmitted by:', 'Noted by:', 'Received by:']\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport PrintIcon from '@material-ui/icons/Print'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Footer from './Footer/Footer'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { staticHeaderFooter } from './helper/staticHeaderFooter'\n\n// Styles\nimport classes from './TransmittalReport.module.scss'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { initSuggestions, resetSuggestionObject, setSuggestionObject } = actions\n\nconst columns = [\n  { label: 'NO.', sortField: 'number', sort: false, align: 'left', class: 'h_no' },\n  { label: 'LOA NO.', sortField: 'latest.loa_number', sort: true, align: 'left', class: 'h_loa' },\n  { label: 'DATE', sortField: 'status_date', sort: true, align: 'left', class: 'h_date' },\n  { label: 'MEMBER', sortField: 'latest.member.last_name', sort: true, align: 'left', class: 'h_member' },\n  { label: 'AMOUNT', sortField: 'total_amount', sort: false, align: 'right', class: 'h_amount' },\n  { label: 'AR', sortField: 'total_due_from_member', sort: false, align: 'right', class: 'h_ar' }\n]\n\nexport default function TransmittalReport (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [claims, setClaims] = React.useState({\n    raw: [],\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'loa_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [client, setClient] = React.useState({\n    registered_name: '',\n    corporate_account_no: ''\n  })\n\n  const [returnClient, setReturnClient] = React.useState({})\n\n  const [total, setTotal] = React.useState({\n    amount: 0,\n    ar_amount: 0\n  })\n\n  const [username, setUsername] = React.useState('')\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    PageTitleService('Transmittal Report')\n    BreadcrumbsService.setSelectedItems(['transmittal'])\n\n    // TODO is this right?\n    const _id = localStorage.getItem('user_id')\n    UserManagementServices.getUserById(_id).then(res => {\n      const { username = '' } = res.data\n      setUsername(username)\n    })\n  }, [])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleClientOnChange = ({ value, field, isSuggestionClick }) => {\n    setClient(state => ({ ...state, [field]: value }))\n    if (isSuggestionClick) {\n      for (const i of suggestions.client.data) {\n        if (value === i.registered_name || value === i.corporate_account_no) {\n          dispatch(resetSuggestionObject({ field: 'client' }))\n          setClient(state => ({\n            ...state,\n            registered_name: i.registered_name,\n            corporate_account_no: i.corporate_account_no\n          }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'client' }))\n      getClientSuggestions({ value, field })\n    }\n  }\n\n  const getClientSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getClientInfo({ value, field }).then(res => {\n            const { data = [] } = res.data\n\n            const item = []\n            for (const d of data) {\n              item.push(d[field])\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'client',\n                suggestion: { [field]: item, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const fetchTransmittalItems = params => {\n    if (client.registered_name === '' || client.corporate_account_no === '') {\n      return setClaims(state => ({ ...state, data: [] }))\n    }\n\n    ClaimsServices.transmittalReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      client\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page, client = {} } = res.data.data\n      const _totam_amout = raw.reduce((a, c) => a + c.total_amount, 0)\n      const _ar_amount = raw.reduce((a, c) => a + c.total_due_from_member, 0)\n\n      setReturnClient(client)\n      setClaims(state => ({ ...state, data: results, raw, count, page, limit }))\n      setTotal(state => ({\n        ...state,\n        amount: !_totam_amout <= 0 ? _totam_amout : 0,\n        ar_amount: !_ar_amount <= 0 ? _ar_amount : 0\n      }))\n    })\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...claims,\n      ...args\n    }\n\n    setClaims(state => ({ ...state, ...args }))\n    fetchTransmittalItems(params)\n  }\n\n  const handlePrintReport = params => {\n    if (!claims.data.length) return\n\n    PdfViewer2Service({\n      name: 'Transmittal Report',\n      fileName: 'transmittal_report',\n      service: ClaimsServices.getTransmittalReportPdf({\n        range: params.range,\n        sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n        client\n      }),\n      open: true\n    })\n  }\n\n  const handleGenerateReport = () => {\n    if (!claims.raw.length) return\n\n    const header = columns.map(i => i.label)\n    const rows = []\n\n    claims.raw.forEach(item => {\n      item.member = `${item.member.last_name}, ${item.member.first_name} ${item.member.middle_name}`\n      item.date = DateFormatter(item.date)\n      rows.push(Object.values(item))\n    })\n\n    const statics = staticHeaderFooter({ ...returnClient, ...total, username })\n\n    ArrayToCSV({ fileName: `${client.registered_name} Transmittal Report`, header, rows, statics })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes['search-header']}>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Company:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by company name'\n                  id='company-name'\n                  value={client.registered_name}\n                  suggestions={suggestions.client.registered_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'registered_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Account No.:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by account number'\n                  id='account-number'\n                  value={client.corporate_account_no}\n                  suggestions={suggestions.client.corporate_account_no}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'corporate_account_no',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={event =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: DateFormatter(event)\n                    }\n                  }))\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={event =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: DateFormatter(event)\n                    }\n                  }))\n                }\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => fetchTransmittalItems(claims)}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='print-report' onClick={() => handlePrintReport(claims)} disabled={!claims.data.length}>\n              <PrintIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Print Report\n              </Typography>\n            </Button>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <TableSortLabel\n                        active={claims.orderBy === headCell.sortField}\n                        direction={claims.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell className={classes.left} align='left'>\n                      {item.loa_number}\n                    </TableCell>\n                    <TableCell className={classes.left} align='left'>\n                      {DateFormatter(item.date)}\n                    </TableCell>\n                    <TableCell\n                      className={classes.member}\n                      align='left'\n                    >{`${item.member.last_name}, ${item.member.first_name} ${item.member.middle_name}`}</TableCell>\n                    <TableCell className={classes.right} align='right'>\n                      {CurrencyFormatter(!item.total_amount <= 0 ? item.total_amount : 0)}\n                    </TableCell>\n                    <TableCell className={classes.right} align='right'>\n                      {CurrencyFormatter(!item.total_due_from_member <= 0 ? item.total_due_from_member : 0)}\n                    </TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n          <Footer username={username} total={total} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import constants from './constants'\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport moment from 'moment'\n\nexport const staticHeaderFooter = args => {\n  const { registered_name, corporate_account_no, contracts = [], amount, ar_amount, username } = args\n\n  const static_header = constants.header.map(i => {\n    switch (i) {\n      case 'Company:':\n        return [i, registered_name, '\\r\\n']\n      case 'Account No.:':\n        return [i, corporate_account_no, '\\r\\n']\n      case 'Contract:':\n        return [i, contracts.length, '\\r\\n']\n      case 'Date:':\n        return [i, `${DateFormatter(new Date())} ${moment().format('LTS')}`, '\\r\\n']\n    }\n  })\n\n  const static_footer = constants.footer.map(i => {\n    switch (i) {\n      case 'Total':\n        return ['', '', '', i, amount, ar_amount, '\\r\\n']\n      case 'Transmitted by:':\n        return [i, username, '\\r\\n']\n      case 'Noted by:':\n        return [i, '--', '\\r\\n']\n      case 'Received by:':\n        return [i, '--', '\\r\\n']\n    }\n  })\n\n  return [\n    [...static_header, '\\r\\n'],\n    ['\\r\\n', ...static_footer]\n  ]\n}\n","// Received Path as Array\n// Received Path as String\n\nconst SafeAccess = (value, path, def = undefined, delimeter = '.') => {\n  if (typeof path === 'object') {\n    return path.reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n  } else if (typeof path === 'string') {\n    return (\n      path.split(delimeter).reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n    )\n  }\n} // pass in your object structure as array elements\n\nexport { SafeAccess }\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ClaimsUtilLedgerReport.module.scss'\n\nconst columns0 = [\n  { label: 'Claim No.', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Approval Code', data: 'approval_code', search: true, match: 'start' },\n  { label: 'Claim ID', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, match: 'any' },\n  { label: 'Client ID', data: 'client_id', search: true, match: 'any' },\n  { label: 'Client Name', data: 'client_name', search: true, match: 'any' },\n  { label: 'Contract ID', data: 'contract_id', search: true, match: 'any' },\n  { label: 'Company Name', data: 'company_name', search: true, match: 'any' },\n  { label: 'Date Admitted', type: 'date', data: 'date_admitted', search: true, match: 'date' },\n  { label: 'Date Discharged', type: 'date', data: 'date_discharged', search: true, match: 'date' },\n  { label: 'Date Issued', type: 'date', data: 'date_issued', search: true, match: 'date' },\n  { label: 'Diagnosis Description', data: 'diagnosis', search: true, match: 'any' }\n]\n\nconst completeColumns = [\n  { label: 'Batch No.', data: 'batch_number', search: true, match: 'any' },\n  { label: 'Claim No.', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, match: 'any' },\n  { label: 'Approval Code', data: 'approval_code', search: true, match: 'start' },\n  { label: 'Loa No.', data: 'loa_number', search: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, match: 'any' },\n  { label: 'Member Account No.', data: 'member_account_number', search: true, match: 'any' },\n  { label: 'Member Last Name', data: 'member_last_name', search: true, match: 'any' },\n  { label: 'Member First Name', data: 'member_first_name', search: true, match: 'any' },\n  { label: 'Member Middle Name', data: 'member_middle_name', search: true, match: 'any' },\n  { label: 'Client Account Number', data: 'client_account_number', search: true, match: 'any' },\n  { label: 'Client Account Name', data: 'client_name', search: true, match: 'any' },\n  { label: 'Customer (Company) Account Number', data: 'customer_company_account_number', search: true, match: 'any' },\n  { label: 'Company Name', data: 'company_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Facility) Name', data: 'facility_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'doctor_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Doctor) Name', data: 'doctor_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID (Anesthesiologist)', data: 'anesthesiologist_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Anesthesiologist) Name', data: 'anesthesiologist_name', search: true, match: 'any' },\n  { label: 'Admission (From)', type: 'date', data: 'date_admission_from', search: true, match: 'date' },\n  { label: 'Admission (To)', type: 'date', data: 'date_admission_to', search: true, match: 'date' },\n  { label: 'Date of Service', type: 'date', data: 'date_service', search: true, match: 'date' },\n  { label: 'Date of Service (From)', type: 'date', data: 'date_service_from', search: true, match: 'date' },\n  { label: 'Date of Service (To)', type: 'date', data: 'date_service_to', search: true, match: 'date' },\n  { label: 'Contract Year (From)', type: 'date', data: 'contract_from', search: true, match: 'date' },\n  { label: 'Contract Year (To)', type: 'date', data: 'contract_to', search: true, match: 'date' },\n  { label: 'Department', data: 'department', search: true, match: 'any' },\n  { label: 'Recommendation', data: 'recommendation', search: true, match: 'any' },\n  { label: 'Room Type', data: 'room_type', search: true, match: 'any' },\n  { label: 'Room Rate', data: 'room_rate', search: true, match: 'exact' },\n  { label: 'PRO ID', data: 'pro_id', search: true, match: 'any' },\n  { label: 'PRO Name', data: 'pro_name', search: true, match: 'any' },\n  { label: 'Claim Sub Type', data: 'claim_sub_type', search: true, match: 'any' },\n  { label: 'Claim Sub-sub Type', data: 'claim_sub_sub_type', search: true, match: 'any' },\n  { label: 'With Corporate Guaranty', data: 'with_corporate_guaranty', search: true, match: 'any' },\n  { label: 'Medicine Category', data: 'medicine_category', search: true, match: 'any' },\n  { label: 'Reimbursement Type', data: 'reimbursement_type', search: true, match: 'any' },\n  { label: 'Reimbursement Category', data: 'reimbursement_category', search: true, match: 'any' },\n  { label: 'Official Receipt Number', data: 'receipt_number', search: true, match: 'any' },\n  { label: 'APE/PPE Package/s', data: 'ape_ppe_packages', search: true, match: 'any' },\n  { label: 'ICD10 Description', type: 'array', data: 'diagnosis.description', search: true, match: 'any' },\n  { label: 'ICD10 Code', type: 'array', data: 'diagnosis.code', search: true, match: 'any' },\n  { label: 'ICD10 Primary', type: 'array', data: 'diagnosis.primary', search: true, match: 'any' },\n  { label: 'LOA Notes', data: 'loa_notes', search: true, match: 'any' },\n  { label: 'Tooth Number', type: 'array', data: 'dental_procedures.tooth_number', search: true, match: 'exact' },\n  { label: 'Procedure Name', type: 'array', data: 'procedures.description', search: true, match: 'any' },\n  { label: 'CPT Code', type: 'array', data: 'procedures.code', search: true, match: 'any' },\n  { label: '(Procedures) Gross Amount', type: 'array', data: 'procedures.gross_amount', search: true, match: 'exact' },\n  { label: '(Procedures) Vat Amount', type: 'array', data: 'procedures.vat_amount', search: true, match: 'exact' },\n  {\n    label: '(Procedures) Amount Paid by Member',\n    type: 'array',\n    data: 'procedures.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'procedures.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Remarks',\n    type: 'array',\n    data: 'procedures.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Procedures) Amount not Covered',\n    type: 'array',\n    data: 'procedures.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Procedures) Reason', type: 'array', data: 'procedures.reason', search: true, match: 'any' },\n  {\n    label: '(Procedures) Amount due From Member',\n    type: 'array',\n    data: 'procedures.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) Reason for Charging Member',\n    type: 'array',\n    data: 'procedures.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Hospital Item Name', type: 'array', data: 'hospital_items.name', search: true, match: 'any' },\n  { label: 'Item Code', type: 'array', data: 'hospital_items.item_code', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Gross Amount',\n    type: 'array',\n    data: 'hospital_items.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Vat Amount',\n    type: 'array',\n    data: 'hospital_items.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Amount Paid by Member',\n    type: 'array',\n    data: 'hospital_items.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'hospital_items.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Remarks',\n    type: 'array',\n    data: 'hospital_items.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Hospital Items) Amount not Covered',\n    type: 'array',\n    data: 'hospital_items.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Hospital Items) Reason', type: 'array', data: 'hospital_items.reason', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Amount due From Member',\n    type: 'array',\n    data: 'hospital_items.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Reason for Charging Member',\n    type: 'array',\n    data: 'hospital_items.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Medical Partner ID', type: 'array', data: 'professional_fees.doctor_id', search: true, match: 'any' },\n  { label: 'Doctor Name', type: 'array', data: 'professional_fees.doctor_name', search: true, match: 'any' },\n  { label: 'Specialization', type: 'array', data: 'professional_fees.specialization', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Gross Amount',\n    type: 'array',\n    data: 'professional_fees.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Vat Amount',\n    type: 'array',\n    data: 'professional_fees.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Amount Paid by Member',\n    type: 'array',\n    data: 'professional_fees.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'professional_fees.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Remarks',\n    type: 'array',\n    data: 'professional_fees.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Professional Fee) Amount not Covered',\n    type: 'array',\n    data: 'professional_fees.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Professional Fee) Reason', type: 'array', data: 'professional_fees.reason', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Amount due From Member',\n    type: 'array',\n    data: 'professional_fees.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Reason for Charging Member',\n    type: 'array',\n    data: 'professional_fees.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  { label: 'Claim Remarks', data: 'claim_remarks', search: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ClaimsUtilLedgerReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange, refresh } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  // const [allClaims, setAllClaims] = React.useState({\n  //   data: [],\n  //   columns: columns.map(value => ({\n  //     name: value.name,\n  //     type: value.type\n  //   }))\n  // })\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchLedger = () => {\n    console.log(claims)\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to)\n        // date_admission_from: DateFormatter(claim.date_admitted),\n        // date_discharged: DateFormatter(claim.date_discharged),\n        // date_issued: DateFormatter(claim.date_issued),\n        // diagnosis: claim.diagnosis && claim.diagnosis.length > 0 ? claim.diagnosis.shift().description : null\n      }))\n      setClaims(state => ({ ...state, data: _claims, count }))\n    })\n  }\n\n  const fetchCSV = () => {\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to)\n      }))\n\n      const rows = _claims.map(claim => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: claim, field: col.data }))\n          return formatData({ type: col.type, source: claim, field: col.data })\n        })\n      })\n      // console.log(rows)\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Utilization Ledger Report', header, rows })\n    })\n  }\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Ledger Report')\n    BreadcrumbsService.setSelectedItems(['reports'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchLedger()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={event =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: DateFormatter(event)\n                    }\n                  }))\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={event =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: DateFormatter(event)\n                    }\n                  }))\n                }\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => fetchLedger()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: DateFormatter(event),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ca')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // static getDropdown (params) {\n  //   return axios({\n  //     url: '/lookups/dropdown',\n  //     method: 'GET',\n  //     params,\n  //     headers: { [ExcludeErrorConstants['all']]: 1 }\n  //   })\n  // }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/c/cr')\n\nexport default class ClaimsReconServices extends ClaimsAdjudicationServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getClientUtilization ({ client_account_no }) {\n    return axios({\n      url: `/claims/client/${client_account_no}/utilizations`,\n      method: 'GET'\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static removeClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/destroy`,\n      method: 'DELETE',\n      data: { claim_number }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getTemplates () {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'GET'\n    })\n  }\n\n  static getTemplate ({ template_name }) {\n    return axios({\n      url: `/data-map/templates/${template_name}`,\n      method: 'GET'\n    })\n  }\n\n  static storeTemplate ({ template_name, data }) {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'POST',\n      params: { template_name },\n      data\n    })\n  }\n\n  static getFacilityTemplate ({ facility_id }) {\n    return axios({\n      url: `/data-map/templates/${facility_id}`,\n      method: 'GET'\n    })\n  }\n\n  static storeFacilityTemplate ({ facility_id, data }) {\n    return axios({\n      url: `/data-map/facilities`,\n      method: 'POST',\n      params: { facility_id },\n      data\n    })\n  }\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport Dashboard from './../Components/BatchEncoder/Dashboard/Dashboard'\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\nimport TransmittalReport from './../Components/TransmittalReport/TransmittalReport'\nimport ClaimsUtilLedgerReport from './../Components/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: [\n      { label: 'Generate Utilization Ledger', to: '/util-ledger' },\n      { label: 'Transmittal Report', to: '/transmittal-report' }\n    ]\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  },\n  reports: {\n    text: 'Reports'\n  },\n  transmittal: {\n    text: 'Transmittal Report'\n  }\n}\nfunction BatchEncoderRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/transmittal-report' exact render={() => <TransmittalReport />} />\n        <Route path='/util-ledger' exact render={() => <ClaimsUtilLedgerReport />} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n      </Switch>\n    </React.Fragment>\n  )\n}\n\nexport default BatchEncoderRoutes\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\nconst columns = [\n  { id: 'encoder-name', name: 'Encoder Name', sortField: 'name' },\n  { id: 'total-bundle', name: 'Total Bundle', sortField: 'total_bundle' },\n  { id: 'total-batch', name: 'Total Batch', sortField: 'total_batch' }\n]\n\nconst BatchAndEncoderTile = props => {\n  const { services, sizes } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBatchEncoderWork({ category: 'created', limit: 10, sort: 'name|asc' }),\n      services.getBatchEncoderWorkCount()\n    ]).then(values => {\n      const [batchEncoders, count] = values\n      setItems({ data: batchEncoders.data.data.results, count: count.data.data })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Bundle and Batch Encoder' })\n    services.getBatchEncoderWork({ limit: 10, sort: 'name|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getBatchEncoderWork(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'bundle-and-batch-encoder-count' }}\n        sizes={sizes}\n        title='Bundle and Batch Encoder'\n        id='bundle-and-batch-encoder'\n        isFilterShown={false}\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='bundle-and-batch-encoder-view-list'\n          >\n            View List\n          </Typography>\n        }\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={item.id}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.data.map((item, index) => (\n              <TableRow key={item.user_id}>\n                <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n                <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n                <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n                <TableCell id={`view-work-${index}`}>\n                  <Link to={`/batch-encoder-work/${item.user_id}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for encoder name, total bundle or total batch'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.user_id}>\n              <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n              <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n              <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n              <TableCell id={`view-work-${index}`}>\n                <Link to={`/batch-encoder-work/${item.user_id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nBatchAndEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default BatchAndEncoderTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { name: 'SOA No.', sortField: 'soa_number', match: 'any' },\n  { name: 'Bundle', sortField: 'bundle_number', match: 'any' },\n  { name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ForReconciliationClaimsTile = props => {\n  const { services, sizes } = props\n  const [claims, setClaims] = React.useState({\n    for_recon: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const [viewList, setViewList] = React.useState({\n    category: 'for-recon',\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'for-recon',\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getClaimCount({ category: 'for-recon' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for_recon'\n\n    services\n      .getClaims({\n        category,\n        range: value,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = `Claims for Reconciliation`\n    const category = 'for_recon'\n\n    setViewList(p => ({ ...p, show: true, title, category }))\n    services\n      .getClaims({ category, limit: viewList.limit, sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: claims.for_recon.count }}\n        sizes={sizes}\n        title='Claims for Reconciliation'\n        viewList={\n          <Typography id='fr-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map((item, index) => (\n                <TableCell\n                  key={index}\n                  // id={item.id}\n                >\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.for_recon.data.map((item, index) => (\n              <TableRow key={`${item.claim_number}-${index}`}>\n                <TableCell>{item.claim_number}</TableCell>\n                <TableCell>{item.soa.number}</TableCell>\n                <TableCell>{item.bundle_number}</TableCell>\n                <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell>{item.facility.name}</TableCell>\n                <TableCell id={`view-review-${index}`}>\n                  <Link to={`/claims/recon/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View Claim\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell>{item.claim_number}</TableCell>\n              <TableCell>{item.soa.number}</TableCell>\n              <TableCell>{item.bundle_number}</TableCell>\n              <TableCell>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell>{item.facility.name}</TableCell>\n              <TableCell id={`view-review-${index}`}>\n                <Link to={`/claims/recon/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View Claim\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForReconciliationClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default ForReconciliationClaimsTile\n","import instance from './instance'\n// import { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/bes')\n\nexport default class BatchEncodingSupervisoryServices {\n  static getBatchEncoderWork (params) {\n    return axios({\n      url: '/batch-encoder-work',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchEncoderWorkCount () {\n    return axios({\n      url: '/batch-encoder-work/count',\n      method: 'GET'\n    })\n  }\n\n  static getBundles ({ user_id, params }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassignBundles ({ user_id, data }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\nimport BatchEncodingSupervisoryServices from 'Services/Api/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 8 }} title='Bundle And Batch Encoding'>\n            <CreatedBundlesTile services={BatchEncodingServices} sizes={{ sm: 6 }} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} sizes={{ sm: 6 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }} title='Items to Monitor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} sizes={{ sm: 6 }} {...props} />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} sizes={{ sm: 6 }} {...props} />\n          </TaskTray>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { show, setShow, services, onSubmit } = props\n\n  const [reassign, setReassign] = React.useState({})\n  const [showAlert, setShowAlert] = React.useState()\n  const [users, setUsers] = React.useState([])\n\n  const [reassignErrors, setReassignErrors] = React.useState({})\n\n  React.useEffect(() => {\n    setReassign({})\n    setReassignErrors({})\n    setUsers([])\n    setShowAlert()\n\n    if (show) {\n      services.getUsers('BATCH_ENCODER').then(({ data: response }) => {\n        setUsers(\n          response.map(item => ({\n            value: item._id,\n            text: `${item.first_name} ${item.last_name}`\n          }))\n        )\n      })\n    }\n  }, [show])\n\n  const validate = () => {\n    const { error } = ReassignValidator(reassign)\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (!validate()) setShowAlert(true)\n  }\n\n  const handleOnClose = () => {\n    setShow()\n  }\n\n  const handleOnAlertConfirm = () => {\n    setShow()\n    onSubmit({ ...reassign })\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={show || false}\n          onClose={handleOnClose}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                onChange={event => {\n                  const note = event.target.value\n                  setReassign(state => ({\n                    ...state,\n                    note\n                  }))\n                }}\n                id=''\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {users && users.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='dropdown-assign-to'\n                  items={users}\n                  value={reassign.assignee || ''}\n                  error={reassignErrors.assignee}\n                  onChange={event =>\n                    setReassign(state => ({\n                      ...state,\n                      assignee: event.target.value\n                    }))\n                  }\n                  disableComponents={!!(users && users.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button onClick={handleOnClose} variant='contained' color='primary' className='button-negative'>\n                  Cancel\n                </Button>\n                <Button onClick={handleOnSubmit} variant='contained' color='primary' className='button-positive'>\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={showAlert || false}\n          onClose={setShowAlert}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Bundle/SOA to Batch Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Bundle/SOA to the selected Batch Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This Bundle/SOA will be sent to the assigned Batch Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button onClick={() => setShowAlert()} variant='contained' color='primary' className='button-negative'>\n                Cancel\n              </Button>\n              <Button onClick={handleOnAlertConfirm} variant='contained' color='primary' className='button-positive'>\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/BatchEncodingSupervisoryServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Styles\nimport classes from './CreatedBundlesPage.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columnss = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Received', sortField: 'date_received', match: 'date' },\n  { id: 'date-due', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nexport default function CreatedBundlesPage (props) {\n  const [bundle, setBundle] = React.useState({\n    data: [],\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  const [batchEncoderId, setBatchEncoderId] = React.useState()\n  const [openModal, setOpenModal] = React.useState()\n  const [activeAssigning, setActiveAssigning] = React.useState()\n  const [headerCheckBox, setHeaderCheckBox] = React.useState({})\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    const _batchEncoderId = props.match.params.user_id\n    setBatchEncoderId(_batchEncoderId)\n\n    PageTitleService('Created Bundles')\n    // BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${_batchEncoderId}`])\n    BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${' '}`])\n\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: _batchEncoderId,\n      params: { limit: 10, sort: `${bundle.orderBy}|${bundle.order ? 'desc' : 'asc'}` }\n    }).then(({ data: response }) => {\n      const { results: data } = response.data\n      setBundle(state => ({ ...state, ...response.data, data }))\n    })\n  }, [])\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setBundle(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setBundle(p => ({ ...p, orderBy, order: !bundle.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${bundle.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: bundle.limit,\n      page: bundle.page,\n      search: bundle.search,\n      sort: `${bundle.orderBy}|${bundle.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: batchEncoderId,\n      params: _params\n    }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setBundle(state => ({ ...state, data: results, count, limit, page }))\n\n      setHeaderCheckBox({})\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnItemSelect = index => {\n    setBundle(state => {\n      const data = state.data\n      data[index].selected = !data[index].selected\n\n      const selectedCount = data.filter(i => i.selected).length\n      setHeaderCheckBox({ checked: !!selectedCount, indeterminate: selectedCount && selectedCount !== data.length })\n\n      return { ...state, data }\n    })\n  }\n\n  const handleOnSelectAllItem = () => {\n    const { checked, indeterminate } = headerCheckBox\n\n    setBundle(state => {\n      return {\n        ...state,\n        data: state.data.map(i => ({\n          ...i,\n          selected: checked && indeterminate ? true : !(checked && !indeterminate)\n        }))\n      }\n    })\n\n    setHeaderCheckBox({ checked: (checked && indeterminate) || !checked })\n  }\n\n  const handleOnSubmit = ({ note, assignee }) => {\n    LoadingService.loading(true)\n\n    const bundle_numbers = []\n    bundle.data.filter(i => i.selected && bundle_numbers.push(i.bundle_number))\n\n    BatchEncodingSupervisoryServices.reassignBundles({\n      user_id: batchEncoderId,\n      data: {\n        note,\n        assignee,\n        bundle_numbers\n      }\n    }).then(res => {\n      handleOnViewListChange({})\n    })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setBundle(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...bundle.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.content}>\n        <div className={classes['first-container']}>\n          <div className={classes.action}>\n            <Button\n              id='cancelreassign-btn'\n              variant='contained'\n              color='primary'\n              className='button-neutral'\n              onClick={() => setActiveAssigning(true)}\n              disabled={!!activeAssigning}\n            >\n              Re-Assign\n            </Button>\n          </div>\n\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for bundle number, date or facility name'\n            />\n          </div>\n        </div>\n\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      style={{ marginTop: '30px' }}\n                      disabled={!bundle.data.length}\n                      checked={headerCheckBox.checked || false}\n                      indeterminate={headerCheckBox.indeterminate || false}\n                      onChange={handleOnSelectAllItem}\n                    />\n                  </TableCell>\n                )}\n\n                {columnss.map(column => (\n                  <TableCell key={column.sortField} id={column.id}>\n                    <TableSortLabel\n                      active={bundle.orderBy === column.sortField}\n                      direction={bundle.order ? 'asc' : 'desc'}\n                      onClick={handleOnSort(column.sortField)}\n                    >\n                      {column.name}\n                    </TableSortLabel>\n\n                    <TextField\n                      id={`text-field-${column.id}`}\n                      // value={newBundle.bundle_number}\n                      TextFieldStyle={{ margin: 0 }}\n                      fullWidth\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: column.sortField,\n                              value: search,\n                              match: column.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={bundle.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      onChange={() => handleOnItemSelect(index)}\n                      checked={item.selected || false}\n                    />\n                  </TableCell>\n                )}\n\n                <TableCell id={`bundle-number-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`received-date-${index}`}>{DateFormatter(item.date.received)}</TableCell>\n                <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`view-work-${index}`}>\n                  <Link to={`/batch-encoder-work/${batchEncoderId}/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n            count={bundle.count}\n            page={bundle.page}\n            limit={bundle.limit}\n            rowsPerPageOptions={[10, 15, 20]}\n            onChange={handleOnViewListChange}\n          />\n        </div>\n\n        <div className={classes.footer}>\n          {activeAssigning && (\n            <Typography variant='subtitle2' className={classes.title}>\n              Total Bundle Selected: {bundle.data.filter(i => i.selected).length}\n            </Typography>\n          )}\n\n          <div className={classes.actions}>\n            {activeAssigning ? (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => {\n                    setActiveAssigning()\n                  }}\n                  id='cancel'\n                >\n                  Cancel\n                </Button>\n\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className={`${classes.save} button-positive`}\n                  onClick={() => setOpenModal(true)}\n                  disabled={!(headerCheckBox.checked || false)}\n                  id='save'\n                >\n                  Assign\n                </Button>\n              </React.Fragment>\n            ) : (\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push('/')}\n                id='cancel'\n              >\n                Close\n              </Button>\n            )}\n          </div>\n        </div>\n      </Paper>\n      <AssignDialog\n        show={openModal}\n        setShow={setOpenModal}\n        services={UserManagementServices}\n        onSubmit={handleOnSubmit}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DiscrepancyBase.module.scss'\n\nexport default function DiscrepancyBase (props) {\n  // INIT\n  const { discrepancy, id = '', children, iconStyle = {}, ...others } = props\n\n  // Breaking down props\n  const { result } = discrepancy\n  const { retainSpace = false, noMargin = false, autoWidth = false } = others\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n          list = list.flat(Infinity)\n        }\n      }\n\n      // const uniqOnly = Array.from(new Set(list))\n      // uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n\n      list.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  React.useEffect(() => {\n    spreadResult(result)\n  }, [result])\n\n  const open = Boolean(anchorEl)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const icon = ({ iconStyle }) => {\n    return (\n      <div\n        className={`${classes['discrepancy-icon']} ${\n          message === '' ? (retainSpace ? classes['display-hidden'] : classes['display-none']) : ''\n        } ${noMargin ? classes['no-margin'] : classes['with-margin']}`}\n      >\n        <FontAwesomeIcon\n          id={`exc-circle-${id}`}\n          style={iconStyle}\n          icon='exclamation-circle'\n          className={`${classes['icon']}`}\n          onClick={handleClick}\n        />\n        <Popover\n          id={`simple-popover`}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'left'\n          }}\n        >\n          <Typography style={{ whiteSpace: 'pre-line' }} className={classes['message']}>\n            {message}\n          </Typography>\n        </Popover>\n      </div>\n    )\n  }\n\n  return (\n    <div id={id} className={`${classes[`root`]}`}>\n      <div\n        className={`${classes[`input-wrapper`]} ${autoWidth ? classes['auto-width'] : classes['max-width']} ${\n          message !== '' ? classes['discrepancy'] : ''\n        }`}\n      >\n        {children}\n      </div>\n      {icon({ iconStyle })}\n      {/* {message !== '' && icon({ iconStyle })} */}\n    </div>\n  )\n}\n","const includesAny = (s1 = '', s2 = '') => {\n  return s1.toLowerCase().includes(s2.toLowerCase())\n}\n\nconst compare = (list, find, comparer = includesAny, fields = []) => {\n  if (Array.isArray(list)) {\n    return list.some(item => {\n      for (const field of fields) {\n        if (comparer(item[field], find)) return true\n      }\n    })\n  } else {\n    if (comparer(list, find)) return true\n  }\n  return false\n}\n\nexport { compare, includesAny }\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport lodash from 'lodash'\n\n// Styles\nimport classes from './ClientMemberLookup.module.scss'\n\nexport default function ClientMemberLookup (props) {\n  // Variables\n  const { columns = [], allSearch = '', allSearchText = '', allSearchFields, mode = '' } = props\n  // Services\n  const { service } = props\n  // Events\n  // Callbacks\n  const { onRecordSet } = props\n\n  // Local Variables\n  const [apiData, setApiData] = React.useState({\n    rows: [],\n    search: '',\n    order: '',\n    limit: 10\n    // count: 0,\n    // page: 1,\n    // rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [finalRows, setFinalRows] = React.useState([])\n  const [selected, setSelected] = React.useState(-1)\n  const [debounce, setDebounce] = React.useState(null)\n  const [colFilters, setColFilters] = React.useState({})\n\n  React.useEffect(() => {\n    setApiData(state => ({ ...state, search: allSearch }), fetchData(allSearch))\n  }, [])\n\n  React.useEffect(() => {\n    const order = apiData.order.split(' ')\n    let _rows = lodash.orderBy(apiData.rows, [order[0]], [order[1]])\n    _rows = translateRows(_rows)\n    _rows = filterData(_rows)\n    setFinalRows(_rows)\n  }, [apiData.rows, apiData.order, colFilters])\n\n  const fetchData = search => {\n    if (search === '') return\n    LoadingService.loading(true)\n    let fields = {}\n    for (const col of columns) {\n      fields[col.id] = true\n    }\n    const order = apiData.order === '' ? `${columns[0].id} asc` : apiData.order\n    setApiData(state => ({ ...state, rows: [], order }))\n    let fetches = []\n    for (const field of allSearchFields) {\n      fetches.push(\n        new Promise((resolve, reject) => {\n          service({\n            where: { [field.id]: { value: search, match: field.match } },\n            order,\n            fields,\n            limit: apiData.limit\n          }).then(res => resolve(res))\n        })\n      )\n    }\n    Promise.all(fetches).then(responses => {\n      for (const res of responses) {\n        if (!res) return\n        const { data } = res.data\n        setApiData(state => ({ ...state, rows: [...state.rows, ...data[mode]] }))\n      }\n      LoadingService.loading(false)\n    })\n  }\n\n  const translateRows = rows => {\n    return rows.map(row => columns.map((col, colIdx) => col.value(row)))\n  }\n\n  const revertRow = row => {\n    if (!row) return\n    const _row = {}\n    for (const [index, cell] of Object.entries(row)) {\n      _row[columns[index].id] = cell\n    }\n    return _row\n  }\n\n  const filterData = rows => {\n    let _rows = rows\n    // _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, filters.all)).some(val => val))\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!colFilters[index]) return true\n            return includesAny(`${col}`, colFilters[index])\n          })\n          .some(val => val === false)\n    )\n    return _rows\n  }\n\n  const renderRows = rows => {\n    if (!rows) return\n    return rows.map((row, index) => (\n      <TableRow\n        id={`member-row-${index}`}\n        key={`member-${index}`}\n        hover\n        role='checkbox'\n        tabIndex={-1}\n        className={selected && selected[0] === row[0] ? classes.selected : classes['default-override']}\n      >\n        {columns.map((col, colIdx) => (\n          <TableCell key={`${col.id}-${colIdx}`} id={`${col.id}-${colIdx}`} onClick={() => handleItemClick(row)}>\n            {row[colIdx]}\n          </TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const handleOnSort = id => {\n    const [, direction] = apiData.order.split(' ')\n    setApiData(state => ({ ...state, order: `${id} ${direction !== 'asc' ? 'asc' : 'desc'}` }))\n  }\n\n  const handleColumnFilter = ({ id, index, value }) => {\n    setColFilters(state => ({ ...state, [index]: value }))\n  }\n\n  const handleItemClick = row => {\n    if (!selected) setSelected(row)\n    else if (row[0] === selected[0]) setSelected()\n    else setSelected(row)\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.search}>\n        <SearchTextComponent\n          id='search'\n          value={apiData.search}\n          onChange={event => {\n            const search = event.target.value\n            setApiData(state => ({ ...state, search }))\n            clearTimeout(debounce)\n            setDebounce(\n              setTimeout(() => {\n                fetchData(search)\n              }, 500)\n            )\n          }}\n          placeholder={allSearchText}\n        />\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { height: '300px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {columns.map((cell, colIdx) => (\n                <TableCell key={cell.id} id={cell.id}>\n                  <TableSortLabel\n                    active={apiData.order.split(' ')[0] === cell.id}\n                    direction={apiData.order.split(' ')[1] === 'asc' ? 'asc' : 'desc'}\n                    onClick={() => handleOnSort(cell.id)}\n                  >\n                    {cell.label}\n                  </TableSortLabel>\n                  <TextField\n                    onChange={event => {\n                      const search = event.target.value\n                      clearTimeout(debounce)\n                      setDebounce(\n                        setTimeout(() => {\n                          handleColumnFilter({\n                            id: cell.id,\n                            index: colIdx,\n                            value: search\n                          })\n                        }, 250)\n                      )\n                    }}\n                  />\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={renderRows(finalRows)}\n          pagination={false}\n          // count={count}\n          // page={page}\n          // limit={limit}\n          // rowsPerPageOptions={rowsPerPageOptions}\n          // onChange={onPaginate}\n        />\n      </div>\n      <div className={classes.footer}>\n        <Button\n          variant='contained'\n          color='primary'\n          id='select'\n          className='button-positive'\n          onClick={() => selected && onRecordSet(revertRow(selected))}\n        >\n          Select\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport MemberLookup from './ClientMemberLookup'\n\n// Styles\nimport classes from './ClientMemberModal.module.scss'\n\nexport default function ClientMemberModal (props) {\n  // Variables\n  const { show, title = '' } = props\n  // Services\n  // Events\n  // Callbacks\n  const { onClose } = props\n  // Local Variables\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={onClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <MemberLookup {...props} />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/client')\nexport default class CustomerCareService {\n  static getLoaDetails ({ approval_code }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa/approval/${approval_code}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n\n  static getUtilizationLoa ({ params }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa`,\n      method: 'GET',\n      params: {\n        filter: params\n      }\n    })\n  }\n\n  static getContractList ({ member_account_number }) {\n    return axios({\n      url: `api/customer-care/members/${member_account_number}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let details = {\n    ...common,\n    date_from: loa.loa_details[0].date.from,\n    date_to: loa.loa_details[0].date.to,\n    room_type: loa.loa_details[0].room.type,\n    room_rate: loa.loa_details[0].room.rate,\n    pro_id: loa.loa_details[0].pro.id,\n    pro_name: loa.loa_details[0].pro.name,\n    claim_sub_type: loa.loa_details[0].claim_sub_type ? loa.loa_details[0].claim_sub_type : '',\n    claim_sub_sub_type: loa.loa_details[0].claim_sub_sub_type ? loa.loa_details[0].claim_sub_sub_type : '',\n    with_corporate_guarantee: loa.has_corp_guarantee ? 'Yes' : 'No',\n    diagnosis: loa.loa_details[0].diagnosis,\n    loa_notes: loa.remarks,\n    procedures: loa.loa_details[0].procedures,\n    hospital_items: loa.loa_details[0].hospital_items,\n    professional_fees: loa.loa_details[0].professional_fees\n  }\n\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  dispatch(setClaimFacility({ facility_id: loa.loa_details[0].facility_id }))\n  dispatch(setClaimFacility({ facility_name: loa.loa_details[0].facility_name }))\n  console.log(loa.rooms)\n  dispatch(setDropDown({ rooms: loa.rooms }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","const renameProp = (\n  oldProp,\n  newProp,\n  { [oldProp]: old, ...others }\n) => ({\n  [newProp]: old,\n  ...others\n})\n\nexport { renameProp }\n","import { renameProp } from 'Utilities/RenameProperty'\n\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import InPatient from './InPatient'\nimport MedicineAllowance from './MedicineAllowance'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\n\nconst AutoFill = ({ loa, claim_type }) => {\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n  switch (claim_type) {\n    case 'IN_PATIENT':\n      InPatient({ common, loa, dispatch })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n\n    default:\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","export default {\n  'In Patient': { prefix: 'IP', other_name: 'InPatient' },\n  'Out Patient Procedure': { prefix: 'OP', other_name: 'OutPatientProcedure' },\n  'Out Patient Consultation': { prefix: 'PF', other_name: 'OutPatientConsultation' },\n  Emergency: { prefix: 'ER', other_name: 'Emergency' },\n  Dental: { prefix: 'DN', other_name: 'Dental' },\n  'Medicine Allowance': { prefix: 'MA', other_name: 'MedicineAllowance' },\n  APE: { prefix: 'AP', other_name: 'APE' },\n  ECU: { prefix: 'EC', other_name: 'ECU' },\n  Pharmacy: { prefix: 'PH', other_name: 'Pharmacy' },\n  PPE: { prefix: 'PE', other_name: 'PPE' },\n  'Medical Supplies': { prefix: 'MS', other_name: 'MedicalSupplies' },\n  'Clinic Management': { prefix: 'CM', other_name: 'ClinicManagement' },\n  Reimbursement: {\n    prefix: 'RM',\n    other_name: 'Reimbursement',\n    subType: [\n      { text: 'In Patient', value: 'InPatient' },\n      { text: 'Out Patient', value: 'OutPatient' },\n      { text: 'Professional Fee', value: 'ProfessionalFee' },\n      { text: 'Maternity Assistance', value: 'MaternityAssistance' },\n      { text: 'OPD Medicine', value: 'OPDMedicine' },\n      { text: 'Optical', value: 'Optical' },\n      { text: 'Dental', value: 'Dental' }\n    ]\n  }\n}\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\n\n// Components\nimport DiscrepancyBase from './..//DiscrepancyBase/DiscrepancyBase'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\n\n// Services\nimport CustomerCareService from 'Services/Api/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../../AutoFill'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\n// import ReimbursementTypes from 'Constant/reimbursementTypes'\n// Constants\nimport ClaimTypes from '../../../../Constant/ClaimTypes'\n\n// On Init\n// const reimbursementTypes = ReimbursementTypes.dropdown()\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } = actions\n\nexport default function BaseDetails (props) {\n  const {\n    onChange,\n    claim,\n    disableControls,\n    onChangeReimbursementType = () => {},\n    handleMemberAccountNumber,\n    permissions,\n    requiredFields = {\n      approval_code: true,\n      loa_number: true,\n      reimbursement_type: true\n    },\n    showReimbursement = false,\n    showApprovalCode = true,\n    showContractRange = false,\n    showClaimSource = false,\n    showLoaNumber = true,\n    showCompany = false,\n    isDental = false,\n    showMemberAccountNumber = true\n  } = props\n\n  const dispatch = useDispatch()\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const errors = useSelector(({ ClaimsAnalysis: state }) => state.error)\n\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  const handleLoaDetails = event => {\n    const { value } = event.target\n    if (value.trim()) {\n      CustomerCareService.getLoaDetails({ approval_code: value }).then(res => {\n        const loa = res.data.data\n        if (loa) {\n          AutoFill({\n            loa,\n            claim_type\n          })\n        }\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-approval-code'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.approval_code\n                  }}\n                >\n                  <TextField\n                    id='approval-code'\n                    required={!!requiredFields.approval_code}\n                    label='Approval Code'\n                    placeholder={claim.approval_code || 'Pending'}\n                    value={claim.approval_code}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                    onBlur={handleLoaDetails}\n                    error={errors.approval_code}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-loa-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.loa_number\n                  }}\n                >\n                  <TextField\n                    id='loa-number'\n                    required={!!requiredFields.loa_number}\n                    label='LOA No.'\n                    placeholder={claim.loa_number || 'Pending'}\n                    value={claim.loa_number}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                    error={errors.loa_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showReimbursement && (\n              <div className={classes['input']}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  required={!!requiredFields.reimbursement_type}\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n\n            {showCompany && (\n              <React.Fragment>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-customer-account-number'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.client_account_number\n                    }}\n                  >\n                    <TextField\n                      id='company-account-number'\n                      label='Customer (Company) Account Number'\n                      value={claim.client_account_number}\n                      disabled={disableControls}\n                      required\n                      onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                      error={errors.client_account_number}\n                      readOnly={!permissions.update}\n                    />\n                    {permissions.update && (\n                      <div className={classes.wrapper}>\n                        <IconButton\n                          aria-label='close'\n                          className={`${classes.button} ${classes['no-pad']}`}\n                          onClick={handleOnClickClientLookup}\n                        >\n                          <SearchIcon />\n                        </IconButton>\n                      </div>\n                    )}\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-company-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.client_account_name\n                    }}\n                  >\n                    <TextField\n                      id='company-name'\n                      label='Company Name'\n                      value={claim.client_account_name}\n                      disabled={disableControls}\n                      required\n                      onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                      error={errors.client_account_name}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </React.Fragment>\n            )}\n            {showClaimSource && (\n              <div className={classes['input']}>\n                <TextField\n                  id='claim-source'\n                  label='Claim Source'\n                  required\n                  value={claim.claim_source}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n                  error={errors.claim_source}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={classes.groups}>\n            {showMemberAccountNumber && (\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-member-account-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.member_account_number\n                  }}\n                >\n                  <TextField\n                    id='member-account-number'\n                    required\n                    label='Member Account No.'\n                    value={claim.member_account_number}\n                    disabled={disableControls}\n                    onChange={event =>\n                      onChange({\n                        field: 'member_account_number',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.member_account_number}\n                    readOnly={!permissions.update}\n                  />\n\n                  {permissions.update && (\n                    <div className={classes.wrapper}>\n                      <IconButton\n                        aria-label='close'\n                        className={`${classes.button} ${classes['no-pad']}`}\n                        onClick={handleOnClickMemberLookup}\n                      >\n                        <SearchIcon />\n                      </IconButton>\n                    </div>\n                  )}\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-last-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_last_name\n                }}\n              >\n                <TextField\n                  id='member-last-name'\n                  required\n                  label='Member Last Name'\n                  value={claim.member_last_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                  error={errors.member_last_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-first-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_first_name\n                }}\n              >\n                <TextField\n                  id='member-first-name'\n                  required\n                  label='Member First Name'\n                  value={claim.member_first_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_first_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_first_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-middle-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_middle_name\n                }}\n              >\n                <TextField\n                  id='member-middle-name'\n                  required={!!isDental}\n                  label='Member Middle Name'\n                  value={claim.member_middle_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_middle_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_middle_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n      <AutoFillInitializer />\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Member Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Member Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'Member First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Member Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = props => {\n  const { children, required } = props\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.delete}>\n          {''}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.discrepancy}>\n          {''}\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    onDeleteDiagnosis,\n    error = { description: '', code: '' },\n    permissions\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.delete}>\n        {permissions.delete && (\n          <IconButton id='delete-icd' onClick={index => onDeleteDiagnosis({ index })}>\n            <DeleteIcon fontSize='small' />\n          </IconButton>\n        )}\n      </div>\n\n      <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={description}>\n        <div className={`${classes['description']}`}>\n          <AutoComplete\n            id={id}\n            value={description}\n            suggestions={suggestions.description}\n            onChange={(value, isSuggestionClick) => onChangeDescription({ value, isSuggestionClick })}\n            error={error.description}\n            readOnly={!permissions.update}\n          />\n        </div>\n      </Tooltip>\n      <div className={`${classes['code']}`}>\n        <AutoComplete\n          id={codeId}\n          value={code}\n          suggestions={suggestions.code}\n          onChange={(value, isSuggestionClick) => onChangeCode({ value, isSuggestionClick })}\n          error={error.code}\n          readOnly={!permissions.update}\n        />\n      </div>\n      <div className={classes.primary}>\n        <Radio color='primary' checked={primary} onClick={onChangePrimary} disabled={!permissions.update} />\n      </div>\n    </div>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  resetSuggestionArray,\n  setSuggestionOnArray,\n  setError\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, error, permissions, id } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n\n  const handleOnClickAddDiagnosis = (defaultBehaviour = true) => {\n    const lastEntry = items.length !== 0 ? items[items.length - 1] : null\n    if (defaultBehaviour && lastEntry && (!lastEntry.code.length || !lastEntry.description.length)) {\n      return false\n    }\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnConfirmDelete = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    setOpenDeleteDialog({ show: false, index: null })\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(setError({ diagnosis: {} }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n    if (items.length === 1 && index !== null) {\n      handleOnClickAddDiagnosis(false)\n    }\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, isSuggestionClick, index } = args\n\n    dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      for (let i of suggestions.icd10[index].data) {\n        if (value === i[field]) {\n          dispatch(\n            setClaimDiagnosis({\n              index,\n              data: { description: i.description, code: i.code }\n            })\n          )\n        }\n      }\n    } else getIcd10Suggestions({ value, by: field, index })\n\n    dispatch(resetSuggestionArray({ field: 'icd10', index }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const getIcd10Suggestions = ({ value, by, index }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'icd-10',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n\n            dispatch(\n              setSuggestionOnArray({\n                field: 'icd10',\n                index,\n                by,\n                suggestion: _items,\n                data\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.groups} id={id}>\n          <div className={`${classes['diagnosis-list']} ${error['list'] && classes['has-error']}`}>\n            <Typography variant='h6' className={classes.title}>\n              Diagnosis List\n            </Typography>\n            <ICDTextFields required>\n              {items.map((item, index) => (\n                <DiscrepancyBase\n                  id={`dp-icd-description-${index}`}\n                  key={`icd-${index}`}\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.diagnosis[index]\n                  }}\n                  retainSpace\n                  noMargin\n                >\n                  <ICDTextField\n                    key={`icd-${index} ${error[index]}`}\n                    id={`icd-description-${index}`}\n                    codeId={`icd-code-${index}`}\n                    error={error.error && error.items[index]}\n                    description={item.description}\n                    suggestions={suggestions.icd10[index]}\n                    code={item.code}\n                    primary={item.primary}\n                    onChangeDescription={args => handleOnChangeIcd10({ field: 'description', index, ...args })}\n                    onChangeCode={args => handleOnChangeIcd10({ field: 'code', index, ...args })}\n                    onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                    onDeleteDiagnosis={() => handleOnConfirmDelete(index)}\n                    permissions={permissions}\n                  />\n                </DiscrepancyBase>\n              ))}\n            </ICDTextFields>\n            {permissions.create && (\n              <Button\n                id='add-diagnosis-button'\n                className={classes['add-diagnosis-button']}\n                onClick={handleOnClickAddDiagnosis}\n              >\n                + Add a diagnosis\n              </Button>\n            )}\n          </div>\n          {error.error && <span className={classes.error}>{error.list}</span>}\n          <Alert\n            open={openDeleteDialog.show}\n            message='Are you sure you want to delete this diagnosis?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n            onOk={() => handleOnRemoveDiagnosis(openDeleteDialog.index)}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './CustomTable.module.scss'\n\nconst Table = ({ children }) => {\n  const _children = React.Children.toArray(children)\n\n  const headers = []\n  const body = []\n  _children.filter((item, index) => {\n    if (item.type.displayName === 'TableHeader') {\n      headers.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n\n    if (item.type.displayName === 'TableBody') {\n      body.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n  })\n\n  return (\n    <table className={classes.table}>\n      {headers}\n      {body}\n    </table>\n  )\n}\n\nconst TableHeader = ({ items = [] }) => {\n  return (\n    <thead>\n      <tr>\n        {items.map((i, index) => (\n          <th key={i.name} style={{ width: `${i.width}px`, textAlign: i.align }}>\n            {i.name}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\nTableHeader.displayName = 'TableHeader'\n\nconst TableBody = ({ children }) => {\n  return <tbody>{children}</tbody>\n}\nTableBody.displayName = 'TableBody'\n\nconst TableRow = ({ children, className, onClick, expanded, id }) => {\n  const _children = React.Children.toArray(children)\n  // const [open, setOpen] = React.useState(expanded)\n  const [expandable, setExpandable] = React.useState([])\n  const [cells, setCells] = React.useState([])\n\n  React.useEffect(() => {\n    _children.filter((item, index) => {\n      if (item.type === 'td') {\n        setCells(state => [\n          ...state,\n          React.cloneElement(item, {\n            key: index\n          })\n        ])\n      }\n\n      if (item.type) {\n        if (item.type.displayName === 'TableRowExpandable') {\n          setExpandable(state => [\n            ...state,\n            React.cloneElement(item, {\n              key: index\n            })\n          ])\n        }\n      }\n    })\n  }, [])\n\n  const handleOnClick = () => {\n    // setOpen(!open)\n    if (typeof onClick === 'function') onClick()\n  }\n\n  return (\n    <React.Fragment>\n      <tr id={id} onClick={handleOnClick} className={className}>\n        {cells}\n      </tr>\n      <tr id={id} className={classes.expandable}>\n        <td colSpan={cells.length}>\n          <div className={`${classes.container} ${expanded ? classes.open : ''}`}>\n            <div className={classes.content}>{expandable}</div>\n          </div>\n        </td>\n      </tr>\n    </React.Fragment>\n  )\n}\nTableRow.displayName = 'TableRow'\n\nconst TableRowExpandable = ({ children }) => {\n  return children\n}\nTableRowExpandable.displayName = 'TableRowExpandable'\n\nexport { Table, TableHeader, TableBody, TableRow, TableRowExpandable }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function ProcedureForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    isDental,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState(null)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  // ***** EVENTS\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(setProcedure({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } }))\n  }\n\n  // ***** FETCHING\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ ...procedure })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProcedure(procedure.details))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ ...procedure })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProcedure({ index, details: procedure.details }))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProcedure({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Procedure Form')} */}\n      {/* {console.log('Data', procedure)} */}\n      {/* {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', procedure.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {procedure.show && procedure.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={procedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={procedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_code}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-description'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { code: discrepancy.code, description: discrepancy.description }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    id={`procedure-description-autocomplete`}\n                    required\n                    label={'Procedure Details'}\n                    value={procedure.details.description}\n                    suggestions={suggestions.cpt.description}\n                    onChange={(value, isSuggestionClick, selectedIndex) =>\n                      handleOnChangeCpt({\n                        field: 'description',\n                        value,\n                        isSuggestionClick,\n                        selectedIndex\n                      })\n                    }\n                    error={_errors.description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n\n                <div className={classes.code}>\n                  <AutoComplete\n                    id={`procedure-code-autocomplete`}\n                    required\n                    label={'CPT Code'}\n                    value={procedure.details.code}\n                    suggestions={suggestions.cpt.code}\n                    onChange={(value, isSuggestionClick, selectedIndex) =>\n                      handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                    }\n                    error={_errors.code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {isDental && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-tooth-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.tooth_number\n                  }}\n                  autoWidth\n                >\n                  <Typography variant='subtitle2' className={classes['label']}>\n                    {`Tooth Number *`}\n                  </Typography>\n                  <TextField\n                    id='tooth-number'\n                    value={procedure.details.tooth_number}\n                    onChange={event => {\n                      handleOnChange({\n                        field: 'tooth_number',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.tooth_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={procedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={procedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='procedure-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={procedure.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={procedure.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_not_covered\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-not-covered'\n                    label='Amount Not Covered'\n                    value={procedure.details.amount_not_covered}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        procedure.details.reason = ''\n                        setErrors(state => ({ ...state, reason: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_not_covered',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_not_covered}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered-reason'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason\n                  }}\n                >\n                  <DropDown\n                    id='amount-not-covered-reason'\n                    label='Reason'\n                    required={procedure.details.amount_not_covered > 0}\n                    disableComponents={procedure.details.amount_not_covered === 0}\n                    value={procedure.details.reason}\n                    items={dropDown.reason}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-due-from-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_due_from_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-due-from-member'\n                    label='Amount Due from Member'\n                    value={procedure.details.amount_due_from_member}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        procedure.details.reason_for_charging_member = ''\n                        setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_due_from_member',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_due_from_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospital-item'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason_for_charging_member\n                  }}\n                >\n                  <DropDown\n                    id='hospital-item'\n                    label='Reason for Charging Member'\n                    required={procedure.details.amount_due_from_member > 0}\n                    disableComponents={procedure.details.amount_due_from_member === 0}\n                    value={procedure.details.reason_for_charging_member}\n                    items={dropDown.reason_charging}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason_for_charging_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason_for_charging_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(procedure.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='procedure-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(procedure.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`procedure-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(procedure.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this procedure?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(procedure.index)}\n      />\n    </React.Fragment>\n  )\n}\n","const Item = item => {\n  // fields from Encoder\n  const { gross_amount = 0, vat_amount = 0, amount_paid_by_member = 0, philhealth_amount_paid = 0 } = item\n  // fields from Analyst\n  const { amount_not_covered = 0, amount_due_from_member = 0 } = item\n\n  return (\n    parseFloat(gross_amount) +\n    parseFloat(vat_amount) -\n    (parseFloat(amount_not_covered) +\n      parseFloat(philhealth_amount_paid) +\n      parseFloat(amount_due_from_member) +\n      parseFloat(amount_paid_by_member))\n  )\n}\n\nconst List = items => {\n  return items.reduce((current, item) => current + Item(item), 0)\n}\n\nconst Grand = lineItems => {\n  const { procedures, dental_procedures, hospital_items, professional_fees } = lineItems || {}\n  let grand = 0\n  if (procedures) grand += List(procedures)\n  if (dental_procedures) grand += List(dental_procedures)\n  if (hospital_items) grand += List(hospital_items)\n  if (professional_fees) grand += List(professional_fees)\n  return grand\n}\n\nexport default { Item, List, Grand }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.procedure)\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.procedure)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProcedure({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-procedure'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProcedure({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Procedure\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Procedure List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${procedure ? procedure.show : ''}`}\n                id={`procedure-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={procedure.index === index ? procedure.show : false}\n              >\n                <td\n                  id={`procedure-row-description-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.description}\n                </td>\n                <td\n                  id={`procedure-row-code-${index}`}\n                  className={`${classes.align} ${classes.center}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.code}\n                </td>\n                <td\n                  id={`procedure-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {procedure.mode === 'add' && (\n              <TableRow\n                key={`add ${procedure ? procedure.show : ''} `}\n                id={`procedure-add`}\n                className={`${classes['row']}`}\n                expanded={procedure.mode === 'add' ? procedure.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'procedure-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setHospitalItem,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetError\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthRemarks = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  // ***** EVENTS\n\n  const handleOnChangeHospitalItem = ({ value, field, isSuggestionClick }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.hospitalItem.data) {\n        if (value === i.name || value === i.item_code) {\n          dispatch(\n            setHospitalItem({\n              details: {\n                id: i.id,\n                name: i.name,\n                item_code: i.item_code\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } })\n    )\n  }\n\n  // ***** FETCHING\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'hospitalItem',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ ...hospitalItem })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimHospitalItem(hospitalItem.details))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ ...hospitalItem })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimHospitalItem({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOCancel = index => {\n    dispatch(resetError({ index }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Hospital Item Form')} */}\n      {/* {console.log('Data', hospitalItem)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', hospitalItem.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {hospitalItem.show && hospitalItem.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={hospitalItem.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={hospitalItem.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_code}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospital-item'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { item_code: discrepancy.item_code, name: discrepancy.name }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    label={'Item Name'}\n                    required\n                    id={`hospital-item-name`}\n                    value={hospitalItem.details.name}\n                    suggestions={suggestions.hospitalItem.name}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeHospitalItem({ field: 'name', value, isSuggestionClick })\n                    }\n                    error={_errors.name}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.code}>\n                  <AutoComplete\n                    label={'Item Code'}\n                    required\n                    id={`hospital-item-code`}\n                    value={hospitalItem.details.item_code}\n                    suggestions={suggestions.hospitalItem.item_code}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeHospitalItem({ field: 'item_code', value, isSuggestionClick })\n                    }\n                    error={_errors.item_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={hospitalItem.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-vat-amount'\n                  label='VAT Amount'\n                  value={hospitalItem.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospitalItem-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='hospital-item-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={hospitalItem.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-philhealth-amount-paid'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_amount_paid\n                }}\n              >\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={hospitalItem.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_amount_paid}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={hospitalItem.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n          </div>\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_not_covered\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-not-covered'\n                    label='Amount Not Covered'\n                    value={hospitalItem.details.amount_not_covered}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        hospitalItem.details.reason = ''\n                        setErrors(state => ({ ...state, reason: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_not_covered',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_not_covered}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered-reason'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason\n                  }}\n                >\n                  <DropDown\n                    id='amount-not-covered-reason'\n                    label='Reason'\n                    required={hospitalItem.details.amount_not_covered > 0}\n                    disableComponents={hospitalItem.details.amount_not_covered === 0}\n                    value={hospitalItem.details.reason}\n                    items={dropDown.reason}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-due-from-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_due_from_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-due-from-member'\n                    label='Amount Due from Member'\n                    value={hospitalItem.details.amount_due_from_member}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        hospitalItem.details.reason_for_charging_member = ''\n                        setErrors(state => ({ ...state, reason_for_charging_member: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_due_from_member',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_due_from_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-reason-for-charging-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason_for_charging_member\n                  }}\n                >\n                  <DropDown\n                    id='reason-for-charging-member'\n                    label='Reason for Charging Member'\n                    required={hospitalItem.details.amount_due_from_member > 0}\n                    disableComponents={hospitalItem.details.amount_due_from_member === 0}\n                    value={hospitalItem.details.reason_for_charging_member}\n                    items={dropDown.reason_charging}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason_for_charging_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason_for_charging_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnSave(hospitalItem.index)}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {hospitalItem.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='hospital-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(hospitalItem.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`hospital-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOCancel(hospitalItem.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this hospital item?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(hospitalItem.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setHospitalItem } = actions\n\nexport default function HospitalItemList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.hospital_item)\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.hospital_item)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setHospitalItem({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-hospital-item'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setHospitalItem({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Items\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Hospital List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', hospitalItem)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospital-item-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={hospitalItem.index === index ? hospitalItem.show : false}\n              >\n                <td id={`hospital-item-row-name-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>\n                  {i.name}\n                </td>\n                <td\n                  id={`hospital-item-row-code${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                  className={`${classes.align} ${classes.center}`}\n                >\n                  {i.item_code}\n                </td>\n                <td\n                  id={`hospital-item-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {hospitalItem.mode === 'add' && (\n              <TableRow\n                key={`add ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospitalItem-add`}\n                className={`${classes['row']}`}\n                expanded={hospitalItem.mode === 'add' ? hospitalItem.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'hospital-item-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProfessionalFee,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setError\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  // ***** EVENTS\n\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.pfDoctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                doctor_id: i.id,\n                doctor_name: i.full_name,\n                specialization: i.specialization.main + ', ' + i.specialization.major\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } })\n    )\n  }\n\n  // ***** FETCHING\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'pfDoctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ ...professionalFee })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProfessionalFee(professionalFee.details))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ ...professionalFee })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('ProfessionalFee Form')} */}\n      {/* {console.log('Data', professionalFee)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', professionalFee.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {professionalFee.show && professionalFee.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={professionalFee.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={professionalFee.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_code}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-medical-partner-id'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_id\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={professionalFee.details.doctor_id}\n                  suggestions={pfSuggestions.pfDoctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={_errors.doctor_id}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-doctor-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_name\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-doctor-name'\n                  required\n                  label='Doctor Name'\n                  value={professionalFee.details.doctor_name}\n                  suggestions={pfSuggestions.pfDoctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={_errors.doctor_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-specialization'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.specialization\n                }}\n              >\n                <TextField\n                  id='professional-fee-specialization'\n                  required\n                  label='Specialization'\n                  value={professionalFee.details.specialization}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'specialization',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.specialization}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={professionalFee.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-vat-amount'\n                  label='VAT Amount'\n                  value={professionalFee.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-professional-fee-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='professional-fee-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={professionalFee.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={professionalFee.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={professionalFee.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_not_covered\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-not-covered'\n                    label='Amount Not Covered'\n                    value={professionalFee.details.amount_not_covered}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        professionalFee.details.reason = ''\n                        setErrors(state => ({ ...state, reason: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_not_covered',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_not_covered}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered-reason'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason\n                  }}\n                >\n                  <DropDown\n                    id='amount-not-covered-reason'\n                    label='Reason'\n                    required={professionalFee.details.amount_not_covered > 0}\n                    disableComponents={professionalFee.details.amount_not_covered === 0}\n                    value={professionalFee.details.reason}\n                    items={dropDown.reason}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-due-from-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_due_from_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-due-from-member'\n                    label='Amount Due from Member'\n                    value={professionalFee.details.amount_due_from_member}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        professionalFee.details.reason_for_charging_member = ''\n                        setErrors(state => ({ ...state, reason_for_charging_member: '' }))\n                      }\n                      handleOnChange({\n                        field: 'amount_due_from_member',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_due_from_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospital-item'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason_for_charging_member\n                  }}\n                >\n                  <DropDown\n                    id='hospital-item'\n                    label='Reason for Charging Member'\n                    required={professionalFee.details.amount_due_from_member > 0}\n                    disableComponents={professionalFee.details.amount_due_from_member === 0}\n                    value={professionalFee.details.reason_for_charging_member}\n                    items={dropDown.reason_charging}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason_for_charging_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason_for_charging_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {professionalFee.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='professional-fee-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(professionalFee.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`professional-fee-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(professionalFee.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this professional fee?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(professionalFee.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProfessionalFee } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.professional_fee)\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.professional_fee)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProfessionalFee({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-professional-fee'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProfessionalFee({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Professional Fee\n            </Typography>\n          )}\n        </div>\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Professional Fee List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${professionalFee ? professionalFee.show : ''}`}\n                id={`professional-fee-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={professionalFee.index === index ? professionalFee.show : false}\n              >\n                <td\n                  id={`professional-fee-row-doctor-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.doctor_name}\n                </td>\n                <td\n                  id={`professional-fee-row-specialization-${index}`}\n                  className={classes.specialization}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.specialization}\n                </td>\n                <td\n                  id={`professional-fee-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {professionalFee.mode === 'add' && (\n              <TableRow\n                key={`add ${professionalFee ? professionalFee.show : ''}`}\n                id={`professionalFee-add`}\n                className={`${classes['row']}`}\n                expanded={professionalFee.mode === 'add' ? professionalFee.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'professional-fee-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string().trim()\n    .label('Escalation Message')\n    .messages({ 'string.empty': `Please enter reason of escalation.` })\n    .required(),\n  assignee: Joi.string().trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' }),\n  assignee: Joi.string()\n    .trim()\n    .label('Assignee')\n    .required()\n    .messages({ 'string.empty': 'Please select a name from the Assigned To field.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport Button from '@material-ui/core/Button'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\n// Validations\nimport EscalateValidator from './EscalateValidator'\nimport ReconValidator from './ReconValidator'\n\n// lodash\nimport { sortBy } from 'lodash'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  resetEscalation,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetReassign,\n  setReassignMessage,\n  setReassignAssignee\n} = actions\n\nexport default function ClaimFooter (props) {\n  // Events\n  const {\n    doValidate,\n    doReject,\n    doViewAnalysisSheet,\n    doViewLetterOfAdvice,\n    doReassign,\n    doSave,\n    doEscalate,\n    doApprove,\n    doCancel,\n    isReimbursement,\n    doRemove,\n    doViewClaimNotice\n  } = props\n  // Variables\n  const { disabled, permissions, reimbursement_info = [] } = props\n  // Services\n  const { grandTotal, claimType, userManagementService = () => {} } = props\n\n  const dispatch = useDispatch()\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n  const rejectStatus = useSelector(({ ClaimsAnalysis: state }) => state.rejectStatus)\n\n  const [escalateModal, setEscalateModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [reassignModal, setReassignModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [approveModal, setApproveModal] = React.useState({ message: '', show: false })\n  const [saveModal, setSaveModal] = React.useState(false)\n  const [cancelModal, setCancelModal] = React.useState(false)\n  const [removeModal, setRemoveModal] = React.useState(false)\n  const [validateModal, setValidateModal] = React.useState(false)\n\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  const [escalationErrors, setEscalationErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  // Init functions\n  const initDropdownUsers = async ({ roles }) => {\n    userManagementService.getUsersByRole(roles[0]).then(({ data }) => {\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  // Validators\n  const doValidateEscalation = () => {\n    const { error } = EscalateValidator({\n      message: escalations.message,\n      assignee: escalations.assignee.id\n    })\n\n    setEscalationErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReassign = () => {\n    const { error } = ReconValidator({\n      message: reassign.message,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  // UI Functions\n  const handleEscalateDialog = () => {\n    dispatch(resetEscalation())\n    initDropdownUsers({ roles: permissions.escalate.options.roles })\n    setEscalationErrors({ message: '', assignee: '' })\n    dispatch(setEscalationMessage(''))\n    setEscalateModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleReassignDialog = () => {\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: permissions.reassign.options.roles })\n    setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignMessage(''))\n    setReassignModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowModal = () => {\n    const { AuthorityMatrix } = permissions.approve.options\n\n    const modalProps = { show: true }\n\n    if (AuthorityMatrix) {\n      const { other_types } = AuthorityMatrix\n\n      const selected_amount = AuthorityMatrix[claimType] === undefined ? other_types : AuthorityMatrix[claimType]\n\n      if (grandTotal > selected_amount) {\n        modalProps.message =\n          'The billed amount to be approved is higher than the threshold. Are you sure you want to approve this claim?'\n      }\n    }\n\n    setApproveModal(modalProps)\n    return true\n  }\n\n  const handleOnClickReject = () => {\n    if (!doValidateMiddleware()) {\n      if (isReimbursement) doReject()\n      else setRejectModal(true)\n    }\n  }\n\n  const doValidateMiddleware = () => {\n    if (doValidate()) {\n      setValidateModal(true)\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.left}>\n        {SafeAccess(permissions.return_advice, ['visible']) && reimbursement_info.length > 0 && (\n          <Button\n            variant='contained'\n            color='secondary'\n            className='button-positive'\n            onClick={() => doViewClaimNotice({ goBack: false })}\n            disabled={disabled && permissions.analysis_sheet.enabled}\n          >\n            Return Advice\n          </Button>\n        )}\n      </div>\n      <div className={classes.center} />\n      <div className={classes.right}>\n        {permissions.visible && (\n          <React.Fragment>\n            {SafeAccess(permissions.analysis_sheet, ['visible']) && (\n              <Button\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && doViewAnalysisSheet({ goBack: false })}\n                disabled={disabled && permissions.analysis_sheet.enabled}\n              >\n                View Analysis Sheet\n              </Button>\n            )}\n            {SafeAccess(permissions.letter_of_advice, ['visible']) && (\n              <Button\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && doViewLetterOfAdvice({ goBack: false })}\n                disabled={disabled && permissions.letter_of_advice.enabled}\n              >\n                View Letter of Advice\n              </Button>\n            )}\n            {SafeAccess(permissions.escalate, ['visible']) && (\n              <Button\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleEscalateDialog()}\n                disabled={disabled && permissions.escalate.enabled}\n              >\n                Escalate\n              </Button>\n            )}\n            {SafeAccess(permissions.reject, ['visible']) && (\n              <Button\n                variant='contained'\n                color='secondary'\n                onClick={handleOnClickReject}\n                disabled={rejectStatus && !isReimbursement}\n              >\n                Reject\n              </Button>\n            )}\n\n            {SafeAccess(permissions.return, ['visible']) && (\n              <Button\n                id='btn-return'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                // onClick={() => setApproveModal(true)}\n                // disabled={disabled && permissions.return.enabled}\n              >\n                Return\n              </Button>\n            )}\n\n            {SafeAccess(permissions.approve, ['visible']) && (\n              <Button\n                id='approve'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleOnShowModal()}\n                disabled={disabled && permissions.approve.enabled}\n              >\n                Approve\n              </Button>\n            )}\n            {SafeAccess(permissions.save, ['visible']) && (\n              <Button\n                id='save-for-now'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && setSaveModal(true)}\n                disabled={disabled && permissions.save.enabled}\n              >\n                Save for now\n              </Button>\n            )}\n            {SafeAccess(permissions.remove, ['visible']) && (\n              <Button\n                id='remove'\n                variant='contained'\n                color='secondary'\n                onClick={() => setRemoveModal(true)}\n                disabled={disabled && permissions.remove.enabled}\n              >\n                Remove\n              </Button>\n            )}\n          </React.Fragment>\n        )}\n        <Button id='cancel' variant='contained' color='secondary' onClick={() => setCancelModal(true)}>\n          {permissions.close ? 'Close' : 'Cancel'}\n        </Button>\n        {permissions.visible && (\n          <React.Fragment>\n            {SafeAccess(permissions.reassign, ['visible']) && (\n              <Button\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleReassignDialog()}\n                disabled={disabled && permissions.reassign.enabled}\n              >\n                Reassign\n              </Button>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n      <div className={classes.modals}>\n        {SafeAccess(permissions.escalate, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={escalateModal.dialog}\n              className={classes.escalate}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reason For Escalation\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={escalations.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                    error={escalationErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                    </Typography>\n                    <DropDown\n                      id='escalate-to'\n                      items={dropDownUsers}\n                      value={escalations.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setEscalationAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={escalationErrors.assignee}\n                      disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() =>\n                        !doValidateEscalation() && setEscalateModal(state => ({ ...state, confirm: true }))\n                      }\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={escalateModal.confirm}\n              message='Are you sure you want to escalate claim?'\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setEscalateModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setEscalateModal(state => ({ ...state, dialog: false, confirm: false }))\n                doEscalate({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reassign, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setReassignModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={reassignModal.dialog}\n              className={classes.reassign}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reassign\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={reassign.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setReassignMessage(event.target.value))}\n                    error={reassignErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      Assign To:\n                    </Typography>\n                    <DropDown\n                      id='reassign-to'\n                      items={dropDownUsers}\n                      value={reassign.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setReassignAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={reassignErrors.assignee}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => !doValidateReassign() && setReassignModal(state => ({ ...state, confirm: true }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={reassignModal.confirm}\n              message={\n                permissions.reassign && permissions.reassign.message\n                  ? permissions.reassign.message\n                  : 'Are you sure you want to re-assign claim?'\n              }\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setReassignModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setReassignModal(state => ({ ...state, dialog: false, confirm: false }))\n                doReassign({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reject, ['enabled']) && (\n          <Alert\n            open={rejectModal}\n            message='Are you sure you want to reject this claim?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setRejectModal(false)}\n            onOk={() => {\n              setRejectModal(false)\n              doReject({ goBack: false })\n            }}\n          />\n        )}\n\n        {SafeAccess(permissions.approve, ['enabled']) && (\n          <Alert\n            open={approveModal.show}\n            message={approveModal.message || 'Are you sure you want to approve the claim?'}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setApproveModal({ show: false })}\n            onOk={() => {\n              setApproveModal({ show: false })\n              doApprove({ goBack: false })\n            }}\n          />\n        )}\n\n        <Alert\n          open={validateModal}\n          message='Please input all mandatory fields'\n          okLabel='Ok'\n          onOk={() => {\n            setValidateModal(false)\n          }}\n        />\n\n        <Alert\n          open={saveModal}\n          message='Are you sure you want to save the changes?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setSaveModal(false)}\n          onOk={() => {\n            setSaveModal(false)\n            doSave(true)\n          }}\n        />\n\n        <Alert\n          open={cancelModal}\n          message='Are you sure you want to cancel?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setCancelModal(false)}\n          onOk={() => {\n            setCancelModal(false)\n            doCancel({ goBack: true })\n          }}\n        />\n\n        <Alert\n          open={removeModal}\n          message='Are you sure you want to remove this claim?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setRemoveModal(false)}\n          onOk={() => {\n            setRemoveModal(false)\n            doRemove({ goBack: true })\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DisapprovedLabel.module.scss'\n\nexport default function DisapprovedLabel(props) {\n  // INIT\n  const { reasons, ...other } = props\n\n  // Breaking down props\n  let { id } = props\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  // FUNCTIONS\n\n  function generateMessage(results) {\n    if (typeof results === 'string') {\n      return '\\u2022 ' + results\n    } else if (typeof results === 'object') {\n      let message = ''\n      results.map((value, index) => {\n        message += '\\u2022 ' + value + '\\n'\n      })\n      return message.substring(0, message.length - 1)\n    }\n  }\n\n  const open = Boolean(anchorEl)\n  id = open ? 'simple-popover' : id\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n  return (\n    <React.Fragment>\n      {reasons && reasons.length > 0 ? (\n        <div className={`${classes[`root`]} ${reasons.length > 0 ? classes.disapproved : ''}`}>\n          <div id={id} className={`${classes[`input-wrapper`]}`}>\n            <Typography\n              id={props.id}\n              variant='h6'\n              className={`${classes.label} ${classes['read-only-value']}`}\n              {...other}\n            >\n              {props.value}\n            </Typography>\n            {reasons.length > 0 ? (\n              <div id={`container-${id}`} className={classes['icon-container']}>\n                <FontAwesomeIcon\n                  id={`exc-circle-${id}`}\n                  icon='exclamation-circle'\n                  className={classes.icon}\n                  onClick={handleClick} />\n                <Popover\n                  id={id}\n                  open={open}\n                  anchorEl={anchorEl}\n                  onClose={handleClose}\n                  anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'center',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n                    {generateMessage(reasons)}\n                  </Typography>\n                </Popover>\n              </div>\n            ) : (\n                ''\n              )}\n          </div>\n        </div>\n      ) : (\n          ''\n        )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport classes from './TextFieldSubmit.module.scss'\nexport default function TextFieldSubmit (props) {\n  const { label = '', required, readOnly, error, onSubmit, ...other } = props\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {props.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${error && classes['has-error']}`}>\n              <InputBase className={classes.input} {...other} autoComplete='no' />\n              <Button\n                className={`button-positive ${classes.submit}`}\n                onClick={onSubmit}\n                variant='contained'\n                color='primary'\n                autoFocus\n              >\n                Send\n              </Button>\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  comment: Joi.string()\n    .trim()\n    .label('Comment')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextFieldSubmit from 'SharedComponents/TextFieldSubmit/TextFieldSubmit'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ChatBox.module.scss'\n\n// Validator\nimport ExcalateValidator from './EscalateValidator'\n\nexport default function ChatBox (props) {\n  let {\n    messages = [],\n    title,\n    permissions,\n    placeholder = 'Compose Message',\n    confirmMessage = 'Are you sure you want to reply to the escalated claim?',\n    okLabel = 'Send',\n    cancelLabel = 'Cancel',\n    onSubmitComment = () => {},\n    confirm = false\n  } = props\n\n  if (permissions.options) {\n    confirmMessage = permissions.options.confirmMessage\n    okLabel = permissions.options.okLabel\n    cancelLabel = permissions.options.cancelLabel\n    confirm = permissions.options.confirm\n  }\n\n  let lastDate = ''\n\n  const [confirmSubmitDialog, setConfirmSubmitDialog] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [comment, setComment] = React.useState('')\n\n  const isMe = args => {\n    const user_id = localStorage.getItem('user_id')\n    return args._id === user_id\n  }\n\n  const doDateSplit = date => {\n    const sdate = DateFormatter(date)\n\n    if (lastDate !== sdate) {\n      lastDate = sdate\n      return true\n    }\n    return false\n  }\n\n  const doValidate = () => {\n    const { error } = ExcalateValidator({ comment })\n    if (error) {\n      setErrors(error)\n      return !!error\n    }\n  }\n\n  const doSubmit = () => {\n    if (confirm) setConfirmSubmitDialog(true)\n    else onSubmitComment(comment)\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.root}>\n          <Paper className={classes.wrapper}>\n            {title && (\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  {title}\n                </Typography>\n              </div>\n            )}\n\n            <div className={classes.body}>\n              {messages.length <= 0 ? (\n                <div className={classes.placeholder}>\n                  <Typography variant='subtitle2'>No Message</Typography>\n                </div>\n              ) : (\n                <div className={classes.messages}>\n                  {messages.map((m, index) => (\n                    <React.Fragment key={`${m.timestamp.object}`}>\n                      {doDateSplit(m.timestamp.object) && (\n                        <Typography variant='subtitle2' className={classes.split}>\n                          {DateFormatter(m.timestamp.object)}\n                        </Typography>\n                      )}\n                      <div\n                        key={`${index}`}\n                        className={`${classes.balloon} ${isMe(m.sender) ? classes.me : classes.receive} `}\n                      >\n                        <div className={classes.mheader}>\n                          <Typography variant='subtitle2' className={classes.sender}>\n                            {m.sender.username}\n                          </Typography>\n                          <Typography variant='subtitle2' className={classes.time}>\n                            {DateFormatter(m.timestamp.object, 'hh:mm A')}\n                          </Typography>\n                        </div>\n                        <div className={classes.mbody}>\n                          <Typography\n                            variant='subtitle2'\n                            style={{ whiteSpace: 'pre-line' }}\n                            className={classes.content}\n                          >\n                            {m.message}\n                          </Typography>\n                        </div>\n                      </div>\n                    </React.Fragment>\n                  ))}\n                </div>\n              )}\n            </div>\n            <div className={classes.action}>\n              {permissions.create && (\n                <div className={classes['comment-box']}>\n                  <TextFieldSubmit\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={comment}\n                    autoFocus\n                    fullWidth\n                    placeholder={placeholder}\n                    onChange={event => setComment(event.target.value)}\n                    onSubmit={event => !doValidate() && doSubmit()}\n                    error={errors.comment}\n                  />\n                </div>\n              )}\n            </div>\n          </Paper>\n          <Alert\n            open={confirmSubmitDialog}\n            message={confirmMessage}\n            cancelLabel={cancelLabel}\n            okLabel={okLabel}\n            onCancel={() => setConfirmSubmitDialog(false)}\n            onOk={() => {\n              setConfirmSubmitDialog(false)\n              onSubmitComment(comment)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './CustomTabs.module.scss'\n\nfunction TabPanel (props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      key={`tab-${index}`}\n      {...other}\n    >\n      <div>{children}</div>\n    </Typography>\n  )\n}\n\nconst CustomTabs = props => {\n  const { children, defaultIndex = 0, containerSyles = {} } = props\n  const [value, setValue] = React.useState(defaultIndex)\n\n  let items = React.Children.toArray(children)\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'CustomTab') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n  function handleChange (event, newValue) {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root} style={containerSyles}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor='primary'\n        textColor='primary'\n        variant='scrollable'\n        scrollButtons='auto'\n        aria-label='scrollable auto tabs example'\n        className={classes['header']}\n      >\n        {items.map((item, index) => (\n          <Tab\n            id={`${item.props.id}-control`}\n            key={`${item.props.label}-tab-label`}\n            className={classes['item']}\n            label={item.props.label}\n          />\n        ))}\n      </Tabs>\n\n      {items.map((item, index) => (\n        <TabPanel\n          id={item.props.id}\n          key={`${item.props.label}-tab-content`}\n          className={classes['panels']}\n          value={value}\n          index={index}\n        >\n          {item}\n        </TabPanel>\n      ))}\n    </div>\n  )\n}\n\nconst CustomTab = ({ children }) => {\n  return children\n}\nCustomTab.displayName = 'CustomTab'\n\nexport { CustomTabs, CustomTab }\n","import React from 'react'\n\n// Components\nimport TreeView from '@material-ui/lab/TreeView'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport TreeItem from '@material-ui/lab/TreeItem'\n\n// Styles\nimport classes from './SideBar.module.scss'\n\nexport default function SideBar (props) {\n  const { contractId, nodes = [], onItemClick } = props\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['contract-id']}>\n        <span>CONTRACT ID</span>\n        <span className={classes.id}>{contractId}</span>\n      </div>\n      <div className={classes['plan-types']}>\n        <TreeView defaultCollapseIcon={<ExpandMoreIcon />} defaultExpandIcon={<ChevronRightIcon />}>\n          {nodes.map(node =>\n            node.type === 'item' ? (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes.node}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n                onClick={() => onItemClick({ planPackage: node.planPackage, benefitCategory: node.benefitCategory })}\n              />\n            ) : (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes['benefit-label']}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n              >\n                {node.benefits &&\n                  Object.keys(node.benefits).map(key => (\n                    <TreeItem\n                      id={`node-coverages-${node.benefits[key].details.tree_id}-control`}\n                      key={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      className={classes.node}\n                      nodeId={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      label={node.benefits[key].details.name}\n                      onClick={() =>\n                        onItemClick({\n                          planPackage: node.planPackage,\n                          benefitCategory: node.benefits[key].details.code\n                        })\n                      }\n                    />\n                  ))}\n              </TreeItem>\n            )\n          )}\n        </TreeView>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport classes from './ValueField.module.scss'\nimport { Typography } from '@material-ui/core'\n\nexport default function ValueField (props) {\n  const { title = '', label = '', value = '' } = props\n\n  return (\n    <div className={`${classes.root}`}>\n      {title !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {title}\n        </Typography>\n      )}\n      {label !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n        </Typography>\n      )}\n      <Typography variant='subtitle2' className={classes.value}>\n        {value}\n      </Typography>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport ValueField from '../ValueField/ValueField'\n\nimport classes from './FloatingFields.module.scss'\n\nexport default function FloatingFields (props) {\n  // Variables\n  const { elements, node } = props\n  // Events\n\n  const [fields, setFields] = React.useState([])\n\n  React.useEffect(() => {\n    if (!elements) return\n    const values = elements.map(elem => ({ ...elem, value: elem.data(node) }))\n    setFields(values)\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        {fields.map(\n          field =>\n            field.value && (\n              <div key={field.id} className={classes[field.layout ? `w-${field.layout}` : 'w-100']}>\n                <ValueField\n                  key={`${field.id}`}\n                  id={field.id}\n                  title={field.title}\n                  label={field.label}\n                  value={field.value}\n                />\n              </div>\n            )\n        )}\n      </div>\n    </div>\n  )\n}\n","export default function (unit) {\n  if (!unit) return ''\n\n  switch (unit.toLowerCase()) {\n    case 'percentage':\n    case 'percent':\n      return '%'\n    case 'amount_limit':\n      return 'Amount Limit'\n    case 'max_session':\n      return 'Max Session'\n    case 'max_amount':\n      return 'Max Amount'\n    case 'percent_mbl':\n      return 'Percent of MBL'\n    case 'percent_abl':\n      return 'Percent of ABL'\n    case 'no_visits':\n      return 'No. of Visits'\n    default:\n      return unit\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  name: ({ nodes, details }) => details.name,\n  parent_name: ({ nodes, details }) => details.parent_name,\n  title: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.title', '-'),\n  limit_type: ({ nodes, details }) => details.limits.map(limit => limit.type).join('\\r\\n'),\n  age_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.age_limit', 0),\n  max_availee: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.max_availee', 0),\n  number: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.number', 0),\n  required: ({ nodes, details }) => DefaultValue(SafeAccess(details, 'custom_metadata.required') || false),\n  no_of_days: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_days', ''),\n  time_from: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_from', ''),\n  time_to: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_to', ''),\n  member_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.member_type', ''),\n  plan_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.plan_type', ''),\n  peso_limit_amt: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit_amt', ''),\n  no_of_members: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_members', 0),\n  peso_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit', ''),\n\n  // Arrays\n  payment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.payment', ''),\n  availment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.availment', ''),\n  limit: ({ nodes, details }) =>\n    details.limits\n      .map(limit => limit.limit && limit.limit_unit && `${DigitFormatter(limit.limit)} ${Unit(limit.limit_unit)}`)\n      .join('\\r\\n'),\n  rollover: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.rollover', '')),\n  refresh: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.refresh', '')),\n  eligible_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligible_availees', ''),\n  days_deployed: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.days_deployed', ''),\n  eligibility: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligibility', ''),\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true },\n    { id: 'rollover', name: 'Rollover', data: Functions.rollover, search: true },\n    { id: 'refresh', name: 'Refresh', data: Functions.refresh, search: true }\n  ],\n  // COVERAGE\n  EM: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  IP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'inner-limit-type',\n      name: 'Inner Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'inner-limit',\n      name: 'Inner Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'daily-inner-limit', name: 'Daily Inner Limit', data: Functions.empty, search: true }\n  ],\n  OP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'benefit', name: 'Benefit', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  PV: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  APE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum-age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  PPE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum_age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  SD: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true }\n  ],\n\n  // RIDERS\n  MT: [\n    { id: 'provision', name: 'Provision', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'availment-type', name: 'Availment Type', data: Functions.availment, search: true }\n  ],\n  OM: [\n    {\n      id: 'excluded-medicine',\n      name: 'Excluded Medicine',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    {\n      id: 'availment-type',\n      name: 'Availment Type',\n      data: Functions.availment,\n      search: true\n    }\n  ],\n  CC: [\n    {\n      id: 'personnel',\n      name: 'Personnel',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'no-of-days',\n      name: 'No. of Days',\n      data: Functions.number_of_days,\n      search: true\n    },\n    {\n      id: 'days-deployed',\n      name: 'Days Deployed',\n      data: Functions.days_deployed,\n      search: true\n    },\n    {\n      id: 'time-from',\n      name: 'Time From',\n      data: Functions.time_from,\n      search: true\n    },\n    {\n      id: 'time-to',\n      name: 'Time To',\n      data: Functions.time_to,\n      search: true\n    }\n  ],\n  DNT: [\n    {\n      id: 'category',\n      name: 'Category',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  SH: [\n    {\n      id: 'plan',\n      name: 'Plan',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    }\n  ],\n  ADD: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    },\n    {\n      id: 'plan-type',\n      name: 'Plan Type',\n      data: Functions.plan_type,\n      search: true\n    },\n    {\n      id: 'peso-limit-amount',\n      name: 'Peso Limit Amount',\n      data: Functions.peso_limit_amt,\n      search: true\n    }\n  ],\n  ECU: [\n    {\n      id: 'benefit',\n      name: 'Benefit',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'eligibility',\n      name: 'Eligibility',\n      data: Functions.eligibility,\n      search: true\n    },\n    {\n      id: 'no-of-members',\n      name: 'No. of Members',\n      data: Functions.no_of_members,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'peso-limit',\n      name: 'Peso Limit',\n      data: Functions.peso_limit,\n      search: true\n    }\n  ]\n}\n","export default function (value) {\n  switch (typeof value) {\n    case 'boolean':\n      return value ? 'Yes' : 'Optional'\n    case 'number':\n      return value\n    default:\n      return '--'\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  partner: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.dental_form_partner', '-'),\n  rate: ({ nodes, details }) => `${DigitFormatter(SafeAccess(details, 'custom_metadata.dental_form_rate', 0))} PHP`,\n  rb_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.type ? abl_mbl.type : ''\n  },\n  rb_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.limit ? `${DigitFormatter(abl_mbl.limit)} ${Unit(abl_mbl.limit_unit)}` : ''\n  },\n  rb_mode_of_payment: ({ nodes, details }) => {\n    const modeOfPayment = {\n      annual: 'Annual',\n      semiannual: 'Semi-Annual',\n      quarterly: 'Quarterly',\n      monthly: 'Monthly'\n    }\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return modeOfPayment[data.mode_of_payment] || ''\n  },\n  rb_pec_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    const units = {\n      PHP: 'Peso',\n      Months: 'Time-based'\n    }\n    return units[pec.limit_unit] || ''\n  },\n  rb_pec_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (!['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    return `${DigitFormatter(pec.limit)} ${pec.limit_unit}`\n  },\n  rb_pec_limit_specify: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    if (!pec.time_based_limit) return ''\n    const lines = pec.time_based_limit.map(\n      item => `After ${item.number_mount} ${item.day_based}: ${item.limit} ${Unit(item.limit_type)}`\n    )\n    return lines.join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'limit-type',\n      title: 'Limit Type',\n      label: '',\n      data: Functions.rb_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: '',\n      data: Functions.rb_limit,\n      layout: '30'\n    },\n    {\n      id: 'mode-of-payment',\n      title: 'Mode of Payment',\n      label: '',\n      data: Functions.rb_mode_of_payment,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit-type',\n      title: 'PEC Limit Type',\n      label: '',\n      data: Functions.rb_pec_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit',\n      title: 'PEC  Limit',\n      label: '',\n      data: Functions.rb_pec_limit,\n      layout: '30'\n    },\n    {\n      id: 'specify-limit',\n      title: 'Specify  Limit*',\n      label: '',\n      data: Functions.rb_pec_limit_specify,\n      layout: '30'\n    }\n  ],\n  // COVERAGE\n  EM: [],\n  IP: [],\n  OP: [],\n  PV: [],\n  APE: [],\n  PPE: [],\n  SD: [],\n\n  // RIDERS\n  MT: [],\n  OM: [],\n  CC: [],\n  DNT: [\n    {\n      id: 'partner',\n      title: 'Partner',\n      label: '',\n      data: Functions.partner,\n      layout: '50'\n    },\n    {\n      id: 'rate-person',\n      title: 'Rate/Person',\n      label: '',\n      data: Functions.rate,\n      layout: '50'\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  billing_arangement: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    const billingArrangement = {\n      premium: 'Imputed in premiums',\n      billback: 'Bill back with admin fee',\n      rider_fee: '1-time rider fee to be upon enrollment',\n      imputed_in_premiums: 'Imputed in premiums',\n      billback_net: 'Bill back, net of APE cost with admin fee',\n      fixed_rate_rider: 'Scheduled fixed rate for the entire rider',\n      fixed_rate_personnel: 'Scheduled fixed rate per personnel deployed',\n      soa_rate: 'Scheduled SOA based on fixed rate/hour/personnel deployed',\n      soa_actual_cost: 'Scheduled SOA based on actual cost of personnel deployed'\n    }\n    // CC\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   fixed_rate_rider: \"Scheduled fixed rate for the entire rider\",\n    //   fixed_rate_personnel: \"Scheduled fixed rate per personnel deployed\",\n    //   soa_rate: \"Scheduled SOA based on fixed rate/hour/personnel deployed\",\n    //   soa_actual_cost: \"Scheduled SOA based on actual cost of personnel deployed\",\n    //   rider_fee: \"1-time rider fee to be upon start of contract\",\n    // }\n    // ECU\n    // const billingArrangement = {\n    //   imputed_in_premiums: 'Imputed in premiums',\n    //   billback: 'Bill back with admin fee',\n    //   billback_net: 'Bill back, net of APE cost with admin fee',\n    //   rider_fee: '1-time rider fee to be upon enrollment'\n    // }\n    // MT\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   billback: \"Bill back with admin fee\",\n    //   rider_fee: \"1-time rider fee to be upon enrollment\"\n    // }\n    if (!data) return ''\n    if (!billingArrangement[data.billing_arangement]) return ''\n    return [\n      billingArrangement[data.billing_arangement],\n      data.billback_fee ? `${data.billback_fee} ${Unit(data.billback_type)}` : '',\n      data.rider_fee ? `${data.rider_fee} ${Unit(data.rider_fee_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  waiting_period: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data || !data.waiting_period_type) return ''\n    return [\n      data.waiting_period_type === 'effectivity' ? 'Waiting period after effectivity of member' : '',\n      data.waiting_period_type === 'date_of_hire' ? 'Waiting period after date of hire' : '',\n      data.waiting_period ? `${data.waiting_period} ${Unit(data.waitin_period_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  limit: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit ? `${data.limit} ${Unit(data.limit_unit)}` : ''\n  },\n  limit_for_all: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit_for_all ? `${data.limit_for_all} ${Unit(data.limit_for_all_unit)}` : ''\n  },\n  availment_per_year: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.availment_per_year ? `${DigitFormatter(data.availment_per_year)}` : ''\n  },\n  voluntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.voluntary_upgrading_type) return ''\n    switch (data.voluntary_upgrading_type) {\n      case 'paid_by_member':\n        return 'Room and Board difference is paid by the Member'\n      case 'first_hours_free':\n        return data.voluntary_upgrading_amount\n          ? `First ${data.voluntary_upgrading_amount} hours free`\n          : 'First 0 hour free'\n      case 'rate':\n        return data.voluntary_upgrading_amount ? `Rate: ${data.voluntary_upgrading_amount} %` : 'Rate: 0%'\n    }\n  },\n  involuntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.involuntary_upgrading_type) return ''\n    return [\n      data.except_suite_room && data.except_suite_room === true ? 'Except Suite Room' : '',\n      data.involuntary_upgrading_type === 'paid_by_member' ? 'Room and Board difference is paid by the Member' : '',\n      data.involuntary_upgrading_type === 'first_hours_free'\n        ? `First ${data.involuntary_upgrading_amount ? `${data.involuntary_upgrading_amount} hours` : '0 hour'} free`\n        : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'involuntary-room-upgrading',\n      title: 'Involuntary Room Upgrading',\n      label: '',\n      data: Functions.involuntary_upgrading_type\n    },\n    {\n      id: 'voluntary-room-upgrading',\n      title: 'Voluntary Room Upgrading',\n      label: '',\n      data: Functions.voluntary_upgrading_type\n    }\n  ],\n  // COVERAGE\n  EM: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  IP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  OP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  PV: [],\n  APE: [\n    {\n      id: 'mobile-ape',\n      title: 'Mobile APE',\n      label: 'Min no. of availees in a shift (8 hrs)',\n      data: Functions.mobile_ape_availees\n    }\n  ],\n  PPE: [],\n  SD: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    }\n  ],\n\n  // RIDERS\n  MT: [\n    {\n      id: 'availment-per-year',\n      title: 'Availment Per Year',\n      label: '',\n      data: Functions.availment_per_year\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  OM: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  CC: [\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  DNT: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import React from 'react'\n\n// Components\n\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport SideBar from './Components/SideBar/SideBar'\nimport FloatingFields from './Components/FloatingFields/FloatingFields'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Mapper\nimport BenefitTable from './Mapper/BenefitTable'\nimport BenefitHeaders from './Mapper/BenefitHeaders'\nimport BenefitFooters from './Mapper/BenefitFooters'\n\n// Styles\nimport classes from './Benefits.module.scss'\n\nexport default function Benefits (props) {\n  // Events\n\n  // Variables\n  const { isMember, member, client } = props\n\n  // Collections\n  const [columns, setColumns] = React.useState([])\n  const [rows, setRows] = React.useState([])\n\n  // Table Variables\n  const [table, setTable] = React.useState({\n    count: 0,\n    orderBy: 0,\n    order: 'asc',\n    limit: 5,\n    filters: { all: '', fields: {} },\n    page: 1,\n    rowsPerPageOptions: [5, 10, 15, 20]\n  })\n\n  // Local Variables\n  const [contractId, setContractId] = React.useState('')\n  const [planType, setPlanType] = React.useState('')\n  const [planPackage, setPlanPackage] = React.useState('')\n  const [benefitCategory, setBenefitCategory] = React.useState('')\n  const [lastRoomAndBoard, setLastRoomAndBoard] = React.useState('')\n\n  // Nodes\n  const [roomAndBoard, setRoomAndBoard] = React.useState({})\n  const [coverages, setCoverages] = React.useState({})\n  const [riders, setRiders] = React.useState({})\n\n  const [rootNode, setRootNode] = React.useState({})\n  const [benefitNode, setBenefitNode] = React.useState({})\n\n  const [headers, setHeaders] = React.useState([])\n  const [footers, setFooters] = React.useState([])\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      if (!member.latest_contract) return\n      let { plan_type } = member.info\n      const { MCT } = member.benefit_tree\n      plan_type = plan_type\n        .toUpperCase()\n        .split(' ')\n        .join('')\n\n      setContractId(member.latest_contract._id)\n      setPlanType(plan_type)\n      setRootNode(MCT)\n\n      const rnb = SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RB`)\n      setRoomAndBoard(rnb)\n      setCoverages(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.CV.nodes`))\n      setRiders(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RI.nodes`))\n\n      const _keys = Object.keys(rnb.nodes).sort()\n      const _name = _keys[_keys.length - 1]\n      setLastRoomAndBoard(_name)\n      setPlanPackage('RB')\n      setBenefitCategory(_name)\n    } else {\n    }\n  }, [isMember, member, client])\n\n  React.useEffect(() => {\n    if (planType === '' || planPackage === '' || benefitCategory === '') return\n    setBenefitNode(SafeAccess(rootNode, `nodes.CT.nodes.${planType}.nodes.${planPackage}.nodes.${benefitCategory}`))\n  }, [rootNode, planType, planPackage, benefitCategory])\n\n  React.useEffect(() => {\n    if (!benefitNode) return\n    const _rows = getRows()\n    setRows(_rows)\n    setColumns(BenefitTable[planPackage === 'RB' ? 'RB' : benefitCategory] || [])\n    setTable(state => ({ ...state, count: _rows.length }))\n\n    setHeaders(getHeaders())\n    setFooters(getFooters())\n  }, [benefitNode])\n\n  const getRows = () => {\n    let _columns = BenefitTable[benefitCategory]\n    const { nodes } = benefitNode\n\n    let parent_keys = []\n    if (benefitCategory === lastRoomAndBoard) {\n      if (!benefitNode) return []\n\n      if (Object.keys(benefitNode).length <= 0) {\n        return []\n      }\n    } else if (lastRoomAndBoard === '') {\n      return []\n    } else {\n      if (!nodes) return []\n\n      if (Object.keys(nodes).length <= 0) return []\n\n      parent_keys = Object.keys(nodes).sort()\n    }\n\n    let _rows = []\n    switch (benefitCategory) {\n      case lastRoomAndBoard:\n        _columns = BenefitTable['RB']\n        _rows = [_columns.map(col => col.data(benefitNode))]\n        break\n      case 'EM':\n      case 'PV':\n      case 'SD':\n      case 'ADD':\n        _rows = parent_keys.map((key, index) => _columns.map(col => col.data(nodes[key])))\n        break\n      default:\n        _rows = parent_keys\n          .map((pkey, index) =>\n            Object.keys(nodes[pkey].nodes)\n              .sort()\n              .map(key => {\n                const sub_node = nodes[pkey].nodes[key]\n                sub_node.details.parent_name = nodes[pkey].details.name\n                return _columns.map(col => col.data(sub_node))\n              })\n          )\n          .reduce((acc, curr) => [...acc, ...curr], [])\n\n        break\n    }\n\n    return _rows\n  }\n\n  const renderRows = () => {\n    if (!rows) return\n    const { all, fields } = table.filters\n\n    let _rows = rows\n\n    const ascending = (a, b) => a[table.orderBy].length - b[table.orderBy].length\n\n    const descending = (a, b) => b[table.orderBy].length - a[table.orderBy].length\n\n    _rows = table.order === 'asc' ? rows.sort(ascending) : rows.sort(descending)\n\n    _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, all)).some(val => val))\n\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!fields[index]) return true\n            return includesAny(`${col}`, fields[index])\n          })\n          .some(val => val === false)\n    )\n\n    return _rows.slice((table.page - 1) * table.limit, table.page * table.limit).map((row, index) => (\n      <TableRow key={`limits-row-${index}`}>\n        {columns.map((col, index) => (\n          <TableCell key={`limits-row-${index}-column-${col.id}`}>{row[index]}</TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const getHeaders = () => {\n    if (planPackage === 'RB') return BenefitHeaders['RB']\n    return BenefitHeaders[benefitCategory]\n  }\n\n  const getFooters = () => {\n    if (planPackage === 'RB') return BenefitFooters['RB']\n    return BenefitFooters[benefitCategory]\n  }\n\n  const handleSidebarItemClick = args => {\n    const { planPackage, benefitCategory } = args\n    setPlanPackage(planPackage)\n    setBenefitCategory(benefitCategory)\n  }\n\n  const handleTableSort = ({ id, index }) => {\n    const order = table.order === 'asc' ? 'desc' : 'asc'\n    setTable(state => ({ ...state, orderBy: index, order }))\n  }\n\n  const handleTableFilter = ({ id, value, index }) => {\n    setTable(state => ({\n      ...table,\n      filters: { ...state.filters, fields: { ...state.filters.fields, [index]: value } }\n    }))\n  }\n\n  const handleOnChangeSearchBox = value => {\n    setTable(state => ({ ...table, filters: { ...state.filters, all: value } }))\n  }\n\n  const handleOnPaginate = args => {\n    setTable(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes['left-side']}>\n          <Typography className={classes.title}>Member Benefits</Typography>\n          <SideBar\n            contractId={contractId}\n            nodes={[\n              {\n                id: 'room_and_board',\n                label: 'Room and Board',\n                type: 'item',\n                planPackage: 'RB',\n                benefitCategory: lastRoomAndBoard\n              },\n              {\n                id: 'coverage',\n                label: 'Coverage',\n                type: 'list',\n                planPackage: 'CV',\n                benefits: coverages\n              },\n              {\n                id: 'riders',\n                label: 'Riders',\n                type: 'list',\n                planPackage: 'RI',\n                benefits: riders\n              }\n            ]}\n            onItemClick={handleSidebarItemClick}\n          />\n        </div>\n        <div className={classes['right-side']}>\n          <div className={classes.header}>\n            <FloatingFields elements={headers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n          {planPackage !== 'RB' && (\n            <div className={classes['table-header']}>\n              <div className={classes.search}>\n                <SearchTextComponent onChange={event => handleOnChangeSearchBox(event.target.value)} />\n              </div>\n              <div className={classes.contract}>\n                <span>Contract Type</span>\n                <span>---</span>\n              </div>\n            </div>\n          )}\n\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {columns.map((cell, index) => (\n                    <TableCell key={cell.data}>\n                      <TableSortLabel\n                        active={table.orderBy === cell.id || table.orderBy === index}\n                        direction={table.order === 'asc' ? 'asc' : 'desc'}\n                        onClick={event => handleTableSort({ id: cell.id, index })}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          id={`${cell.id}-input`}\n                          className={`${classes.search}`}\n                          onChange={event => handleTableFilter({ value: event.target.value, id: cell.id, index })}\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={renderRows()}\n              pagination\n              count={table.count}\n              page={table.page}\n              limit={table.limit}\n              rowsPerPageOptions={table.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n          <div className={classes.footer}>\n            <FloatingFields elements={footers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { setPaginate } from './Utils/pagination'\nimport { sort } from './Utils/sortBy'\nimport { onQuery } from './Utils/query'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './Exclusions.module.scss'\n\nlet columns = [\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Item', sortField: 'item_name', search: true }\n]\n\nexport default function Benefits (props) {\n  const { isMember, member, client } = props\n\n  const [selectedPlan, setSelectedPlan] = React.useState('BASE')\n  const [planTypes, setPlanTypes] = React.useState([])\n  const [rows, setRows] = React.useState([])\n  const [allExclusions, setAllExclusions] = React.useState([])\n  const [exclusionList, setExclusionList] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    count: 0,\n    page: 1,\n    limit: 5,\n    filter: {},\n    search: {},\n    plan_type: '',\n    rowsPerPageOptions: [5, 10, 15]\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      // getExclusions(member.benefit_tree)\n      const _rows = getExclusions2(member.benefit_tree)\n\n      setAllExclusions(_rows)\n      setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n      setRows(_rows.slice(0, exclusionList.limit))\n      handleOnSetItem(selectedPlan)\n    }\n  }, [member, isMember, client])\n\n  const getExclusions = nodes => {\n    const { MCT } = nodes\n    let arr_list = []\n\n    if (Object.keys(nodes).length) {\n      let plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n      let plan_type_keys = Object.keys(plan_types)\n\n      setPlanTypes(plan_type_keys)\n\n      for (const type of plan_type_keys) {\n        Object.keys(plan_types[type].nodes).forEach(i => {\n          if (i === 'EX') {\n            let child_node = Object.keys(plan_types[type].nodes[i].nodes)\n              .map(c => plan_types[type].nodes[i].nodes[c])\n              .filter(i => Object.keys(i.nodes).length)\n              .map(outer_node => {\n                if (Object.keys(outer_node.nodes).length) {\n                  return Object.values(outer_node.nodes)\n                    .filter(i => i.details.custom_metadata.is_excluded)\n                    .map(inner_node => ({\n                      item_name: inner_node.details.name,\n                      plan_type: type,\n                      type: outer_node.details.name,\n                      code: inner_node.details.code,\n                      parent_code: outer_node.details.code\n                    }))\n                }\n              })\n            arr_list = [].concat.apply([], child_node)\n          }\n        })\n      }\n    }\n    let _rows = arr_list.filter(benefit => benefit.plan_type === selectedPlan)\n\n    setAllExclusions(arr_list)\n    setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n    setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const getExclusions2 = nodes => {\n    const { MCT } = nodes\n    const plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n\n    const plan_types_keys = Object.keys(plan_types)\n    setPlanTypes(plan_types_keys)\n\n    let rows = []\n    plan_types_keys.forEach(planTypeKey => {\n      const ex_nodes = SafeAccess(plan_types, `${planTypeKey}.nodes.EX.nodes`, null)\n      if (ex_nodes) {\n        Object.keys(ex_nodes).map(exclusionKey => {\n          const inner_node = ex_nodes[exclusionKey]\n          Object.keys(inner_node.nodes).map(innerKey => {\n            const { details } = inner_node.nodes[innerKey]\n            if (details.custom_metadata.is_excluded) {\n              rows.push({\n                item_name: details.name,\n                plan_type: planTypeKey,\n                type: inner_node.details.name,\n                code: details.code,\n                parent_code: inner_node.details.code\n              })\n            }\n          })\n        })\n      }\n    })\n    return rows\n  }\n  // TODO will park this for now\n  // const handleOnSearchAll = args => {\n  //   const { search, page } = args\n\n  //   const queriedData = onQueryAll({\n  //     search: search.toLowerCase(),\n  //     data: allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n  //   })\n\n  //   setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n  //   setRows(queriedData.slice(0, exclusionList.limit))\n  // }\n  const handleOnSearch = args => {\n    const { search, page, range } = args\n    const _data = allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n\n    if (range !== 'all') {\n      exclusionList.filter[range] = search\n    } else {\n      exclusionList.search[range] = search\n    }\n\n    const queriedData = onQuery({ filter: exclusionList.filter, search: exclusionList.search, data: _data })\n\n    setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n    setRows(queriedData.slice(0, exclusionList.limit))\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: exclusionList })\n    setExclusionList(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const handleOnSetItem = item => {\n    let _rows = allExclusions.filter(benefit => benefit.plan_type === item)\n\n    setSelectedPlan(item)\n    setExclusionList(state => ({\n      ...state,\n      data: _rows,\n      count: _rows.length,\n      page: 1,\n      limit: state.rowsPerPageOptions[0]\n    }))\n    setRows(_rows.slice(0, exclusionList.rowsPerPageOptions[0]))\n\n    // TODO\n    // setExclusionList(state => ({ ...state, data: _rows, count: _rows.length, page: 1 }))\n    // setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const handleOnSort = args => {\n    const { data: sortedData } = sort({ data: rows, field: args.orderBy, direction: args.order })\n\n    setRows(sortedData.slice(0, exclusionList.limit))\n    setExclusionList(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header} />\n      <div className={classes.body}>\n        <div className={classes[`plan-types`]}>\n          {planTypes.map((item, index) => (\n            <Typography key={`plan-${index}`} className={classes.type}>\n              <Link onClick={() => handleOnSetItem(item)}>\n                <span>{item}</span>\n              </Link>\n            </Typography>\n          ))}\n        </div>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-exclusion'\n            onChange={e => {\n              const search = e.target.value\n              clearTimeout(debounce)\n              setDebounce(\n                setTimeout(() => {\n                  handleOnSearch({ search, page: 1, range: 'all' })\n                }, 500)\n              )\n            }}\n            placeholder='Search'\n          />\n        </div>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map(headCell => (\n                  <TableCell key={headCell.sortField}>\n                    <TableSortLabel\n                      active={exclusionList.orderBy === headCell.sortField}\n                      direction={exclusionList.order ? 'asc' : 'desc'}\n                      onClick={event => handleOnSort({ orderBy: headCell.sortField, order: !exclusionList.order })}\n                    >\n                      {headCell.name}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <TextField\n                        id={`${headCell.sortField}-input`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={e => {\n                          const search = e.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearch({ search, page: 1, range: headCell.sortField })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              rows.length ? (\n                rows.map((row, index) => (\n                  <TableRow id={`exlusions-tab-row-${index}`} key={`ex-${index}`}>\n                    <TableCell id={`exlusions-tab-row-item-${index}-type`}>{row.type}</TableCell>\n                    <TableCell id={`exlusions-tab-row-item-${index}-name`}>{row.item_name}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={2}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={exclusionList.count}\n            page={exclusionList.page}\n            limit={exclusionList.limit}\n            rowsPerPageOptions={exclusionList.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const onQuery = args => {\n  const { filter, search, data } = args\n  let mutable_data = []\n\n  if (search.all) {\n    const _search = search.all.toLowerCase()\n    mutable_data = data.filter(\n      i => i.item_name.toLowerCase().includes(_search) || i.type.toLowerCase().includes(_search)\n    )\n  } else {\n    mutable_data = data\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const fields = Object.keys(filter)\n    fields.forEach((field, index) => {\n      const search = filter[field].toLowerCase()\n\n      if (index === 0) {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      } else {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      }\n    })\n  }\n\n  return mutable_data\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import lodash from 'lodash'\n\nexport const sort = args => {\n  return { data: lodash.orderBy(args.data, [args.field], [args.direction ? 'asc' : 'desc']) }\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Typography from '@material-ui/core/Typography'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n\n// Styles\nimport classes from './PartnerNetwork.module.scss'\n\nconst headCells = [\n  { name: 'Code', sortField: 'id', search: true },\n  { name: 'Name', sortField: 'name', search: true },\n  { name: 'Location', sortField: 'address', search: true },\n  // { name: 'Type', sortField: 'type', search: true },\n  // { name: 'Groupings', sortField: 'groups', search: true },\n  { name: '', sortField: 'affiliated_doctors', search: false }\n]\n\nconst headCellsDoctors = [\n  { name: 'Medical Partner ID', sortField: 'id', search: true },\n  { name: 'Doctor Name', sortField: 'name', search: true },\n  { name: 'Specialization', sortField: 'specialization', search: true },\n  { name: 'Schedule', sortField: 'schedule', search: true },\n  { name: 'Remarks', sortField: 'remarks', search: false }\n]\n\nexport default function PartnerNetwork (props) {\n  const { partnerService, doctorService, memberAccountNumber } = props\n  const [partnerId, setPartnerId] = React.useState('')\n  const [partnerName, setPartnerName] = React.useState('')\n  const [partnerLocation, setPartnerLocation] = React.useState('')\n\n  const [partners, setPartners] = React.useState({\n    data: [],\n    category: 'all',\n    search: '',\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [doctors, setDoctors] = React.useState({\n    show: false,\n    facility_id: '',\n    data: [],\n    filtered: [],\n    filters: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [anySearch, setAnySearch] = React.useState('')\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const fetchAll = () => {\n    partnerService({\n      member_account_no: memberAccountNumber,\n      params: { limit: partners.limit, page: 1, sort: 'name|asc', search: '', category: 'all' }\n    }).then(res => {\n      const { data } = res.data\n      setPartners(state => ({\n        ...state,\n        data: data.results,\n        count: data.count,\n        page: 1,\n        orderBy: 'name',\n        order: true\n      }))\n    })\n  }\n\n  const fetchDoctors = ({ facility_id, filters }) => {\n    doctorService({\n      member_account_no: memberAccountNumber,\n      params: { limit: partners.limit, page: 1, sort: 'name|asc', search: '', category: 'all' },\n      facility_id,\n      filters\n    }).then(res => {\n      const { data } = res.data\n      setDoctors(state => ({\n        ...state,\n        ...data,\n        show: true,\n        facility_id,\n        data: data.results,\n        filtered: data.results,\n        filters\n      }))\n    })\n  }\n\n  const lodash = require('lodash')\n\n  React.useEffect(() => {\n    if (memberAccountNumber) fetchAll()\n  }, [memberAccountNumber])\n\n  React.useEffect(() => {\n    let filtered = doctors.data\n    for (const filter in doctors.filters) {\n      filtered = filtered.filter(item => {\n        if (typeof item[filter] !== 'object') {\n          return includesAny(item[filter], doctors.filters[filter])\n        } else {\n          for (const field in item[filter]) {\n            if (includesAny(item[filter][field], doctors.filters[filter])) return true\n          }\n        }\n      })\n    }\n    filtered = lodash.sortBy(filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n    setDoctors(state => ({ ...state, filtered }))\n  }, [doctors.filters])\n\n  const queryColumn = (collection, { search, field }) => {\n    setPartners(state => ({ ...state, search, category: field }))\n    if (collection === 'partners') {\n      clearTimeout(debounce)\n      setDebounce(\n        setTimeout(() => {\n          let searchObj = search\n          let category = field\n          if (field === 'id') {\n            setPartnerId(search)\n            if (partnerName || partnerLocation) {\n              searchObj = {\n                id: search,\n                name: partnerName,\n                address: partnerLocation\n              }\n              category = 'and'\n            }\n          }\n          if (field === 'name') {\n            setPartnerName(search)\n            if (partnerId || partnerLocation || anySearch) {\n              searchObj = {\n                id: partnerId,\n                name: search,\n                address: partnerLocation,\n                any: anySearch\n              }\n              category = 'and'\n            }\n          }\n          if (field === 'address') {\n            setPartnerLocation(search)\n            if (partnerId || partnerName || anySearch) {\n              searchObj = {\n                id: partnerId,\n                name: partnerName,\n                address: search,\n                any: anySearch\n              }\n              category = 'and'\n            }\n          }\n          if (field === 'any') {\n            // Workaround for adding support for \"inclusive any\"\n\n            setAnySearch(search)\n\n            let obj = {\n              id: partnerId,\n              name: partnerName,\n              address: partnerLocation\n            }\n\n            let flag = false\n            // Check if the other fields have values and include them in the search\n            Object.entries(obj).forEach(value => {\n              if (value[1] && value[1].length > 1) {\n                if (flag === false) {\n                  searchObj = {\n                    any: search\n                  }\n                  category = 'and'\n                  flag = true\n                }\n                searchObj[value[0]] = value[1]\n              }\n            })\n          }\n          if (search.length >= 3 || (!search && category === 'and')) {\n            setPartners(state => ({ ...state, search: searchObj }))\n            partnerService({\n              member_account_no: memberAccountNumber,\n              params: {\n                limit: partners.limit,\n                page: partners.page,\n                sort: `${partners.orderBy}|${partners.order ? 'asc' : 'desc'}`,\n                search: searchObj,\n                category: category\n              }\n            }).then(res => {\n              const { data } = res.data\n              setPartners(state => ({\n                ...state,\n                data: data.results,\n                count: data.count,\n                page: 1,\n                orderBy: 'name',\n                order: true\n              }))\n            })\n          } else fetchAll()\n        }, 500)\n      )\n    } else {\n      setDoctors(state => ({ ...state, filters: { [field]: search } }))\n    }\n  }\n\n  const handleOnSort = (collection, orderBy) => e => {\n    if (collection === 'partners') {\n      let _partners = () => {\n        let _partners = partners\n        delete _partners.data\n        return _partners\n      }\n\n      let _params = {\n        ..._partners(),\n        orderBy,\n        order: !partners.order,\n        sort: `${orderBy}|${partners.order ? 'asc' : 'desc'}`\n        // category: orderBy\n      }\n\n      if (typeof partners.search !== 'string') {\n        _params = {\n          ..._params,\n          category: 'and'\n        }\n      }\n      partnerService({\n        member_account_no: memberAccountNumber,\n        params: _params\n      }).then(res => {\n        const { data } = res.data\n        setPartners(state => ({\n          ...state,\n          ..._params,\n          data: data.results,\n          count: data.count\n        }))\n      })\n    } else {\n      const sorted = lodash.sortBy(doctors.filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n      setDoctors(state => ({ ...state, filtered: sorted }))\n    }\n  }\n\n  const handleOnPaginate = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        category: partners.category,\n        limit: partners.limit,\n        page: partners.page,\n        search: partners.search,\n        sort: `${partners.orderBy}|${partners.order ? 'asc' : 'desc'}`,\n        ...params\n      }\n      partnerService({\n        member_account_no: memberAccountNumber,\n        params: _params\n      }).then(res => {\n        const { data } = res.data\n        setPartners(state => ({\n          ...state,\n          ..._params,\n          data: data.results,\n          count: data.count\n        }))\n      })\n    } else {\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-partner'\n            onChange={event => queryColumn('partners', { search: event.target.value, field: 'any' })}\n            placeholder='Search for Partner Network Code, Name, and Location'\n          />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={partners.orderBy === headCell.sortField}\n                    direction={partners.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort('partners', headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  {headCell.search && (\n                    <TextField\n                      id={`pn-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event =>\n                        queryColumn('partners', { search: event.target.value, field: headCell.sortField })\n                      }\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={partners.data.map((row, index) => (\n            <TableRow id={`pn-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n              <TableCell id={`pn-code-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.id}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-name-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.name}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-location-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    {[\n                      row.address.unit_no,\n                      row.address.floor,\n                      row.address.building_no,\n                      row.address.building_name,\n                      row.address.street,\n                      row.address.barangay,\n                      row.address.district,\n                      row.address.city,\n                      row.address.region,\n                      row.address.zip_code\n                    ]\n                      .filter(Boolean)\n                      .join(' ')}\n                  </span>\n                </div>\n              </TableCell>\n\n              <TableCell id={`pn-view-link-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    <Typography\n                      id={`pn-view-link-${index}-control`}\n                      variant='caption'\n                      className={`text-link `}\n                      onClick={() => {\n                        fetchDoctors({ facility_id: row.id, filters: [] })\n                      }}\n                    >\n                      View Affiliated Doctors\n                    </Typography>\n                  </span>\n                </div>\n              </TableCell>\n            </TableRow>\n          ))}\n          pagination\n          count={partners.count}\n          page={partners.page}\n          limit={partners.limit}\n          rowsPerPageOptions={partners.rowsPerPageOptions}\n          onChange={args => handleOnPaginate('partners', args)}\n        />\n      </div>\n\n      <Dialog\n        fullWidth\n        maxWidth='md'\n        onClose={() => setDoctors(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={doctors.show}\n        className={classes.doctors}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Affiliated Doctors\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDoctors(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCellsDoctors.map(cell => (\n                    <TableCell key={cell.sortField}>\n                      <TableSortLabel\n                        active={doctors.orderBy === cell.sortField}\n                        direction={doctors.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort('doctors', cell.sortField)}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          className={`${classes.search}`}\n                          onChange={event =>\n                            queryColumn('doctors', { search: event.target.value, field: cell.sortField })\n                          }\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                doctors.filtered.length <= 0 ? (\n                  <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                    <TableCell id={`no-record`} colSpan={5}>\n                      <div className={`${classes.cell} ${classes.center}`}>\n                        <span>No Records</span>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  doctors.filtered.map((row, index) => (\n                    <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n                      <TableCell id={`doctor-id-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.id}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-name-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{[row.name.first, row.name.middle, row.name.last].join(' ')}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-specialization-${index}`}>\n                        <div className={classes.cell}>\n                          <span>\n                            {[\n                              row.specialization.main,\n                              row.specialization.major,\n                              row.specialization.sub,\n                              row.specialization.other\n                            ]\n                              .filter(Boolean)\n                              .join(', ')}\n                          </span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-schedule-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.schedule}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-remarks-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.remarks}</span>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )\n              }\n              pagination\n              count={doctors.count}\n              page={doctors.page}\n              limit={doctors.limit}\n              rowsPerPageOptions={doctors.rowsPerPageOptions}\n              onChange={args => handleOnPaginate('doctors', args)}\n            />\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import { DateFormatter } from 'Utilities/TextFormatter'\n\nexport const mapData = ({ data }) => {\n  return data.map(i => {\n    return {\n      claim_no: i.claim_no || '',\n      diagnosis: i.diagnosis || i.diagnoses || [{ diagnosis: i.primary_diagnosis || '', icd10_code: i.primary_icd10_code || '' }],\n      procedures: i.procedures || [], // partner_doctor_name\n      provider: { facility: [i.partner_name] || '', doctor: i.doctors ? setDoctors(i.doctors, i.partner_doctor_name) : i.partner_doctor_name ? [i.partner_doctor_name] : [] },\n      amount: i.total_amount || i.grand_total || 0,\n      session: i.session || 1,\n      date: DateFormatter(i.date_admitted) || DateFormatter(i.date_issued),\n      type: i.type,\n      status: i.status\n    }\n  })\n}\n\nconst setDoctors = (doctors = [], partner_name) => {\n  if (partner_name == undefined) return doctors.map(i => (i.name))\n  return doctors.map(i => (i.name)).concat([partner_name])\n}\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n// import TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport { setPaginate } from './Utils/pagination'\nimport { mapData } from './Utils/mapData'\nimport { itemFilter } from './Utils/query'\n\n// Styles\nimport classes from './Utilization.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setLimitType, resetLimitType } = actions\n\nconst headCellsComplete = [\n  { name: 'Claim ID', sortField: 'claim_no', search: true },\n  { name: 'Diagnosis', sortField: 'diagnosis', search: true },\n  { name: 'Procedure', sortField: 'procedures', search: true },\n  { name: 'Provider', sortField: 'provider', search: true },\n  { name: 'Amount', sortField: 'amount', search: true },\n  { name: 'Session', sortField: 'session', search: true },\n  { name: 'Date', sortField: 'date', search: true },\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Status', sortField: 'status', search: true }\n]\n\nconst randomRange = (min, max) => {\n  return Math.random() * (max - min) + min\n}\n\nexport default function Utilization (props) {\n  const dispatch = useDispatch()\n  const title = useSelector(({ ClaimsAnalysis: state }) => state.title)\n\n  const {\n    fetchService,\n    diagnosis,\n    isMember = true,\n    member = {},\n    utilizationLoa = [],\n    hideSearchBar = false,\n    hideActionColumn = false,\n    dataColumns\n  } = props\n\n  const [headCells, setHeadCells] = React.useState(headCellsComplete)\n  const [rows, setRows] = React.useState([])\n  const [allList, setAllList] = React.useState([])\n  const [filteredRows, setFilteredRows] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    category: 'all',\n    search: '',\n    filter: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = headCellsComplete\n    } else {\n      filtered = headCellsComplete.filter(entry => dataColumns.indexOf(entry.sortField) > -1)\n    }\n    setHeadCells(filtered)\n  }, [dataColumns])\n\n  React.useEffect(() => {\n    if (member) {\n      let type\n      let limit\n\n      if (member.benefit_limits) {\n        type = member.benefit_limits[0].type\n        limit = member.benefit_limits[0].limit\n      }\n\n      if (type === 'ABL') {\n        dispatch(setLimitType('Annual Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        fetchService({\n          member_account_no: member.info.member_id,\n          type: '',\n          icd_code: ''\n        }).then(res => {\n          const { data } = res.data\n\n          const list = mapData({ data: [...utilizationLoa.map(i => ({ ...i, type: 'IBNR' })), ...data.map(i => ({ ...i, status: 'Approved' }))] })\n\n          setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n          setRows(list.slice(0, filteredRows.limit))\n          setAllList(list)\n\n          let ibnr = 0\n          let utilized = 0\n\n          utilizationLoa.map(item => (ibnr += item.total_amount))\n          data.map(item => (utilized += item.grand_total))\n\n          setGraph(state => ({\n            ...state,\n            ibnr,\n            utilized\n          }))\n        })\n      } else if (type === 'MBL') {\n        dispatch(setLimitType('Maximum Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        let primary = (diagnosis && diagnosis.filter(icd => icd.primary === true)[0]) || {\n          code: '',\n          description: '',\n          category_code: ''\n        }\n\n        IcdCptStorageServices.lookups({\n          on: 'icd-10',\n          params: { query: primary.code, by: 'code' }\n        }).then(res => {\n          const { data } = res.data\n          const { diagnosis_code } = data[0] || []\n          primary.category_code = diagnosis_code\n\n          fetchService({\n            member_account_no: member.info.member_id,\n            type: 'mbl',\n            icd_code: primary.category_code\n          }).then(res => {\n            const { data } = res.data\n\n            // ICD Screening\n            let _utilizationLoa = utilizationLoa.filter(item => {\n              if (item.primary_icd10_code) {\n                return item.primary_icd10_code.startsWith(primary.category_code)\n              }\n            })\n\n            const list = mapData({ data: [..._utilizationLoa.map(i => ({ ...i, type: 'IBNR' })), ...data.map(i => ({ ...i, status: 'Approved' }))] })\n\n            setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n            setRows(list.slice(0, filteredRows.limit))\n            setAllList(list)\n\n            let ibnr = 0\n            let utilized = 0\n\n            _utilizationLoa.map(item => (ibnr += item.total_amount))\n            data.map(item => (utilized += item.grand_total))\n\n            setGraph(state => ({\n              ...state,\n              ibnr,\n              utilized\n            }))\n          })\n        })\n      }\n    } else {\n      dispatch(setLimitType('Member Not Found'))\n    }\n  }, [member, diagnosis])\n\n  React.useEffect(() => {\n    dispatch(resetLimitType())\n  }, [])\n\n  React.useEffect(() => {\n    // console.log(list)\n    const _data = itemFilter({ search: filteredRows.search, filter: filteredRows.filter, data: allList })\n\n    setFilteredRows(state => ({ ...state, count: _data.length, data: _data, page: 1 }))\n    setRows(_data.slice(0, filteredRows.limit))\n  }, [filteredRows.search, filteredRows.filter])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = args => {\n    const { event, field, type } = args\n    const search = event.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (type === 'all') setFilteredRows(state => ({ ...state, search }))\n        else setFilteredRows(state => ({ ...state, filter: { ...state.filter, [field]: search } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: filteredRows })\n    setFilteredRows(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const renderRows = ({ rows = [] }) => {\n    return rows.map((row, index) => (\n      <TableRow id={`utilization-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n        {headCells.map(headCell => {\n          switch (headCell.sortField) {\n            case 'claim_no':\n              return (\n                <TableCell key={`${index}-claim-no`} id={`utilization-claim_no-${index}`}>\n                  <div className={classes.cell}>\n                    <span>{row.claim_no}</span>\n                    <span className={classes.label}>SWIPE</span>\n                    <span>YES</span>\n                  </div>\n                </TableCell>\n              )\n\n            case 'diagnosis':\n              return (\n                <TableCell key={`${index}-diagnosis`} id={`utilization-diagnosis-${index}`}>\n                  {row.diagnosis.map((row, index) => (\n                    <div key={`icd-${index}`} className={classes.cell}>\n                      <span>{row.diagnosis}</span>\n                      <span className={classes.label}>ICD 10 CODE</span>\n                      <span>{row.icd10_code}</span>\n                    </div>\n                  ))}\n                </TableCell>\n              )\n\n            case 'procedures':\n              return (\n                <TableCell key={`${index}-procedures`} id={`utilization-procedures-${index}`}>\n                  <div className={classes.cell}>\n                    {row.procedures.map((row, index) => (\n                      <div key={`procedure-${index}`} className={classes.cell}>\n                        <span>{row.procedure_name}</span>\n                        <span className={classes.label}>CPT CODE</span>\n                        <span>{row.cpt_code}</span>\n                      </div>\n                    ))}\n                  </div>\n                </TableCell>\n              )\n\n            case 'provider':\n              return (\n                <TableCell key={`${index}-provider`} id={`utilization-partner_name-${index}`}>\n                  <div className={classes.cell}>\n                    <div className={classes.cell}>\n                      {row.provider.facility.map((row, index) => (\n                        <span key={`facility-${index}`}>{row}</span>\n                      ))}\n                      {row.provider.doctor.length !== 0 && <span className={classes.label}>MEDICAL DOCTOR</span>}\n                      {row.provider.doctor.map((row, index) => (\n                        <span key={`doctor-${index}`}>{`${row},`}</span>\n                      ))}\n                    </div>\n                  </div>\n                </TableCell>\n              )\n\n            case 'amount':\n              return (\n                <TableCell key={`${index}-amount`} align='right' id={`utilization-grand_total-${index}`}>\n                  <span>{CurrencyFormatter(row.amount)}</span>\n                </TableCell>\n              )\n\n            case 'session':\n              return (\n                <TableCell key={`${index}-session`} align='right' id={`utilization-session-${index}`}>\n                  <span>{row.session}</span>\n                </TableCell>\n              )\n\n            case 'date':\n              return (\n                <TableCell key={`${index}-date_admitted`} id={`utilization-date_admitted-${index}`}>\n                  <span>{row.date}</span>\n                </TableCell>\n              )\n\n            case 'type':\n              return (\n                <TableCell key={`${index}-type`} id={`utilization-type-${index}`}>\n                  <span>{row.type}</span>\n                </TableCell>\n              )\n\n            case 'status':\n              return (\n                <TableCell key={`${index}-status`} align='center' id={`utilization-status-${index}`}>\n                  <span>{row.status}</span>\n                </TableCell>\n              )\n          }\n        })}\n\n        {hideActionColumn === false && (\n          <TableCell key={`${index}-icon`} align='center' id={`utilization-action-${index}`}>\n            <FontAwesomeIcon icon='file-alt' size='lg' className={classes.icon} />\n          </TableCell>\n        )}\n      </TableRow>\n    ))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.graph}>\n          <div className={classes['anual-benefit']}>\n            <Typography variant='button'>{title}</Typography>\n            <Typography id='utilization-graph-total' variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n          </div>\n\n          <div className={classes['line-graph']}>\n            <div className={classes.container}>\n              <div className={classes['line-container']}>\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.utilized / graph.total) * 100}%`, background: '#4fb083' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.ibnr / graph.total) * 100}%`, background: '#2a2b6e' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{\n                    width: `${\n                      ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                        ? 0\n                        : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                    }%`,\n                    background: '#f8b439'\n                  }}\n                />\n              </div>\n              <div className={classes['line-details']}>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#4fb083' }} />\n                    <Typography variant='button'>UTILIZED</Typography>\n                  </div>\n                  <Typography id='utilization-graph-utilized' variant='button' style={{ color: '#4fb083' }}>\n                    {`PHP ${CurrencyFormatter(graph.utilized)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#2a2b6e' }} />\n                    <Typography variant='button'>IBNR</Typography>\n                  </div>\n                  <Typography id='utilization-graph-ibnr' variant='button' style={{ color: '#2a2b6e' }}>\n                    {`PHP ${CurrencyFormatter(graph.ibnr)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#f8b439' }} />\n                    <Typography variant='button'>AVAILABLE</Typography>\n                  </div>\n                  <Typography id='utilization-graph-available' variant='button' style={{ color: '#f8b439' }}>\n                    {`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.search} style={{ display: hideSearchBar === true ? 'none' : 'block' }}>\n          <SearchTextComponent\n            id='search-utilization'\n            onChange={event => handleSearchChange({ event, field: 'all', type: 'all' })}\n            placeholder='Search'\n          />\n        </div>\n        <div style={{ display: hideSearchBar === false ? 'none' : 'block' }}>\n          {/* TODO: replace with filler */}\n          <br />\n          <br />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  {headCell.name}\n                  {headCell.search && (\n                    <TextField\n                      id={`utilization-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event => handleSearchChange({ event, field: headCell.sortField, type: 'column' })}\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              {hideActionColumn === false && <TableCell align='center' />}\n            </TableRow>\n          }\n          body={renderRows({ rows: rows })}\n          pagination\n          count={filteredRows.count}\n          page={filteredRows.page}\n          limit={filteredRows.limit}\n          rowsPerPageOptions={filteredRows.rowsPerPageOptions}\n          onChange={args => handleOnPaginate(args)}\n        />\n      </div>\n    </div>\n  )\n}\n","export const itemFilter = args => {\n  const { search, filter, data = [] } = args\n  let _data = data\n\n  if (search) {\n    const _search = search.toLowerCase()\n    _data = _data.filter(i => {\n      return i.claim_no.toLowerCase().includes(_search) ||\n        i.diagnosis.some(i => i.diagnosis.toLowerCase().includes(_search) || i.icd10_code.toLowerCase().includes(_search)) ||\n        i.procedures.some(i => i.procedure_name.toLowerCase().includes(_search) || i.cpt_code.toLowerCase().includes(_search)) ||\n        i.provider.doctor.some(i => i.toLowerCase().includes(_search)) ||\n        i.provider.facility.some(i => i.toLowerCase().includes(_search)) ||\n        i.amount.toString().toLowerCase().includes(_search) ||\n        i.session.toString().toLowerCase().includes(_search) ||\n        i.date.toLowerCase().includes(_search) ||\n        i.type.toLowerCase().includes(_search) ||\n        i.status.toLowerCase().includes(_search)\n    })\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const _fields = Object.keys(filter)\n\n    for (const f of _fields) {\n      let value = filter[f].toLowerCase()\n      if (value && f === 'diagnosis') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.diagnosis.toLowerCase().includes(value) || i.icd10_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'procedures') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.procedure_name.toLowerCase().includes(value) || i.cpt_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'provider') {\n        _data = _data.filter(i => {\n          return i[f].doctor.some(i => i.toLowerCase().includes(value)) || i[f].facility.some(i => i.toLowerCase().includes(value))\n        })\n      } else if (value) {\n        _data = _data.filter(i => {\n          return i[f].toString().toLowerCase().includes(value)\n        })\n      }\n    }\n  }\n  return _data\n}\n","import React from 'react'\n\n// Component\nimport { PdfView2Component } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Utilities\nimport { NameFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Contract.module.scss'\n\nexport default function Contract (props) {\n  // Service\n  const { getMemberContract, getClientContract } = props\n  // Variables\n  const { isMember, member, client } = props\n\n  const [fileName, setFileName] = React.useState('')\n  const [title, setTitle] = React.useState('')\n  const [service, setService] = React.useState(null)\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      const mct_id = member.benefit_tree.MCT.details._id\n      setService(getMemberContract({ mct_id }))\n      setFileName(`${NameFormatter(member.info).format2} Contract`)\n      setTitle('Member Contract')\n    } else {\n      if (!client) return\n      const mct_id = client.benefit_tree.MCT.details._id\n      setService(getClientContract({ mct_id }))\n      setFileName(`${client.info.brand_name} Contract`)\n      setTitle('Client Contract')\n    }\n  }, [isMember, member, client])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes.pdf}>\n          <PdfView2Component\n            name={title}\n            fileName={fileName}\n            initialPageNumber={1}\n            initialScale={1.5}\n            service={service}\n            enabled\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Button, Typography } from '@material-ui/core'\n\n// Components\nimport ChatBox from '../ChatBox/ChatBox'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { CustomTabs, CustomTab } from 'SharedComponents/CustomTabs/CustomTabs'\n\n// Compare Tabs\nimport Benefits from '../Benefits/Benefits'\nimport Exclusions from '../Exclusions/Exclusions'\nimport PartnerNetwork from '../PartnerNetwork/PartnerNetwork'\nimport Utilization from '../Utilization/Utilization'\nimport Contract from '../Contract/Contract'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Styles\nimport classes from './RightPanelTabs.module.scss'\n\nexport default function RightPanelTabs (props) {\n  // Events\n  const { onReturnEscalate, onReturnInquire = () => {} } = props\n  // Variables\n  const { claim, permissions, isMember, member, memberFetchStatus, client, clientFetchStatus, utilizationLoa } = props\n  // Services\n  const { getUtilizations, getPartners, getDoctors, getMemberContract, getClientContract } = props\n\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  return (\n    <CustomTabs id='medical-partner-tabs' defaultIndex={0}>\n      {SafeAccess(permissions, ['tabs', 'benefits', 'read']) && (\n        <CustomTab id='benefits-tab' label='BENEFITS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>{'Internal Server Error'}</Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Benefits isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'exclusions', 'read']) && (\n        <CustomTab id='exclusions-tab' label='EXCLUSIONS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>{'Internal Server Error'}</Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Exclusions isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'partner', 'read']) && (\n        <CustomTab id='partner-network-tab' label='PARTNER NETWORK'>\n          <PartnerNetwork\n            partnerService={getPartners}\n            doctorService={getDoctors}\n            memberAccountNumber={claim.member_account_number || '-'}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'utilization', 'read']) && (\n        <CustomTab id='utilization-tab' label='UTILIZATION'>\n          <Utilization\n            fetchService={getUtilizations}\n            utilizationLoa={utilizationLoa}\n            isMember={isMember}\n            member={member}\n            client={client}\n            diagnosis={claim.diagnosis || []}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'communication', 'read']) && (\n        <CustomTab id='communication-tab' label='COMMUNICATION'>\n          <ChatBox\n            messages={inquiries.messages}\n            title='Communication Logs'\n            onSubmitComment={comment => onReturnInquire({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.communication}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'contact', 'read']) && (\n        <CustomTab id='contract-tab' label='CONTRACT'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>{'Internal Server Error'}</Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Contract\n              isMember={isMember}\n              member={member}\n              client={client}\n              getMemberContract={getMemberContract}\n              getClientContract={getClientContract}\n            />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'comments', 'read']) && (\n        <CustomTab id='comment-tab' label='COMMENTS'>\n          <ChatBox\n            messages={escalations.messages}\n            title='Escalation Logs'\n            onSubmitComment={comment => onReturnEscalate({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.comments}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'notes', 'read']) && (\n        <CustomTab id='notes-tab' label='NOTES'>\n          <ChatBox messages={recon.messages} permissions={permissions.tabs.notes} />\n        </CustomTab>\n      )}\n    </CustomTabs>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data, permissions, onChange } = props\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data}\n          readOnly={permissions}\n          onChange={onChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .required(),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .required(),\n\n    // TODO Claim Source here\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Name')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer (Company) Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n      .required(),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .required(),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .allow('', null),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer (Company) Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required(),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required(),\n  specialization: Joi.string()\n    .trim()\n    .label('Specialization')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Description')\n    .required(),\n  code: Joi.string()\n    .trim()\n    .label('Code')\n    .required(),\n  tooth_number: Joi.string()\n    .label('Tooth Number')\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n    .messages({\n      'string.empty': `\"Tooth Number\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  flag: Joi.boolean().default(false)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangePro,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  //* Room\n\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n            text: item.type,\n            value: item.type,\n            rate: item.rate\n          }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_type\n                    }}\n                  >\n                    <DropDown\n                      id='room-type'\n                      required\n                      label='Room Type'\n                      items={dropDown.rooms}\n                      value={claim.room_type}\n                      onChange={handleOnChangeRoomType}\n                      error={error.room_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-rate'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_rate\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='room-rate'\n                      required\n                      label='Room Rate'\n                      value={claim.room_rate}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'room_rate'\n                          })\n                        )\n                      }}\n                      error={error.room_rate}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangeDoctor,\n    onChangeAnaesthesiologist,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          department: data.department,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-department'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.department\n                    }}\n                  >\n                    <TextField\n                      id='department'\n                      label='Department'\n                      value={claim.department}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'department'\n                          })\n                        )\n                      }\n                      error={error.department}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={suggestions.anesthesiologist.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangeDoctor,\n    onChangeAnaesthesiologist,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          recommendation: data.recommendation,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-facility-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-facility-id'\n                      required\n                      label='Medical Facility ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-recommendation'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.recommendation\n                    }}\n                  >\n                    <TextField\n                      id='recommendation'\n                      label='Recommendation'\n                      value={claim.recommendation}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'recommendation'\n                          })\n                        )\n                      }\n                      error={error.recommendation}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={[]}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangePro,\n    onChangeDoctor,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_name: data.doctor.name,\n          doctor_id: data.doctor.id,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Controller\nimport ConfigController from 'Controllers/ConfigController2'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: [],\n      hospital_items: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          medicine_category: data.medicine_category,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n      // ConfigController.getUserManagementData().then(res => {\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: new Date().toISOString(),\n      //       field: 'approved_date'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: res.user_id,\n      //       field: 'approved_id'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: `${res.first_name} ${res.last_name}`,\n      //       field: 'approved_name'\n      //     })\n      //   )\n      // })\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data }, true)\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                showCompany\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      required\n                      error={error.medicine_category}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showAmountPaidByMember={false}\n                  showPhilhealthField={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showAmountPaidByMember={false}\n                  showPhilhealthRemarks={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ContractRange.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nexport default function ContractRange (props) {\n  const {\n    contract_year_from,\n    contract_year_to,\n    suggestions,\n    error,\n    required,\n    // disableControls = false,\n    onChange = () => {},\n    readOnly = false,\n    hasDiscrepancy = false\n  } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (!(contract_year_from || contract_year_to)) {\n      setError(error)\n    }\n  }, [error, contract_year_from, contract_year_to])\n\n  const handleOnItemClick = ({ event, item }) => {\n    onChange(item)\n    setTimeout(() => setFocus(false), 10)\n  }\n  return (\n    <div className={classes['root']}>\n      <div\n        className={`${classes.container} ${_error ? classes['has-error'] : focus && classes.focus} box-shadow-field`}\n        tabIndex={0}\n        onFocus={() => setFocus(true)}\n        onClick={() => setFocus(true)}\n        onBlur={() => setFocus(false)}\n      >\n        <div className={classes.label}>\n          <Typography variant='subtitle2'>{`${!readOnly && required ? '* ' : ''}Contract Year:`}</Typography>\n        </div>\n\n        <div className={classes['values']}>\n          <Typography variant={hasDiscrepancy ? 'subtitle2' : 'subtitle1'}>\n            <span>From: </span>\n            {contract_year_from ? DateFormatter(contract_year_from) : '----------'} <span>To: </span>\n            {contract_year_to ? DateFormatter(contract_year_to) : '----------'}\n          </Typography>\n        </div>\n\n        {!readOnly && focus && (\n          <Paper className={`${classes.suggestions} ${error && classes['add-margin']}`} square>\n            <div className={classes.header}>\n              <Typography variant='subtitle2'>Member Contract Period</Typography>\n            </div>\n\n            <div className={classes['values-container']}>\n              <div className={classes.message}>\n                <Typography variant='body2'>Please select contract period for this claim</Typography>\n              </div>\n\n              <div className={classes.list}>\n                {suggestions.map((item, index) => (\n                  <div key={index} className={classes.item} onClick={event => handleOnItemClick({ event, item })}>\n                    {DateFormatter(item.from)} To {DateFormatter(item.to)}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </Paper>\n        )}\n\n        {_error && <span className={classes.error}>\"Contract Year\" is required.</span>}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <path\n          className={classes.crown}\n          d='M256.5,66.8c0,0,13.6,48.5,11.2,91.9c-2.5,43.4-8.7,93.1-11.2,103c-2.5,9.9-14.9,33.5-11.2,40.9s1.2,24.8,5,34.7c3.7,9.9,0,37.9,0,46.2s-6.2,24.5-12.4,24.5c-6.2,0-21.8-1.2-28.5,0c-6.7,1.2-29.8-2.5-39.7,0c-9.9,2.5-40.9,12.4-38.5-5s-6.2-22.3,5-47.2c11.2-24.8,26.1-54.6,29.8-59.6c3.7-5,12.4-2.5,17.4-19.9c5-17.4,12.6-67,19.3-80.7c6.7-13.6,21.6-62,24.1-72c2.5-9.9,11.2-42.2,14.9-47.2C245.3,71.9,254.9,60.9,256.5,66.8z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M245.3,302.7c-3.7-7.4,8.7-31,11.2-40.9c2.5-9.9,8.7-59.6,11.2-103c2.5-43.4-11.2-91.9-11.2-91.9c-1.5-5.9-11.2,5.1-14.9,10c-3.7,5-12.4,37.2-14.9,47.2c-2.5,9.9-17.4,58.3-24.1,72c-6.7,13.6-14.4,63.3-19.3,80.7c-5,17.4-13.6,14.9-17.4,19.9c-1.7,2.2-5.5,9.4-10.3,18.8c10.9,2.2,80.1,15.2,95.6,25.7c-0.2-1.3-0.5-2.5-0.9-3.5C246.5,327.5,249,310.1,245.3,302.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <path\n          className={classes.crown}\n          d='M297.4,405.6c0,0-19.9-6.2-7.4-31c12.4-24.8,21.1-40.9,27.3-57.1c6.2-16.1,3.7-37.2,12.4-50.9c8.7-13.6,27.3-65.8,29.8-85.6c2.5-19.9,14.9-91.8,22.3-96.8c7.4-5,16.1,9.9,17.4,17.4c1.2,7.4,1.2,69.5,0,75.7c-1.2,6.2-5,67-6.2,79.4c-1.2,12.4-9.9,39.7-9.9,49.6c0,9.9,1.2,33.5,1.2,45.9c0,12.4-1.2,39.7-8.7,45.9c-7.4,6.2-10.6,7.4-32.6,7.4C321,405.6,297.4,405.6,297.4,405.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M393,256.7c1.2-12.4,5-73.2,6.2-79.4c1.2-6.2,1.2-68.2,0-75.7c-1.2-7.4-9.9-22.3-17.4-17.4c-7.4,5-19.9,76.9-22.3,96.8c-2.5,19.9-21.1,72-29.8,85.6c-8.7,13.6-6.2,34.7-12.4,50.9c-3.4,8.9-7.6,17.9-12.8,28.3c7.1-6.1,14.5-11.8,22.8-16.1c15.5-7.8,36.3-9,48.5,3.3c3.1,3.1,5.7,7.1,8.3,10.9c-0.3-12.7-1.1-29.6-1.1-37.6C383,296.4,391.7,269.1,393,256.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor3 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.1712341308594)'>\n        <path\n          className={classes.crown}\n          d='M239.7,459c4.1,11.8,5.9,37.2,5.9,43.1c0,5.9,1.8,29,0,35.5c-1.8,6.5-8.3,15.4-7.1,21.3c1.2,5.9,3,30.9,2.4,32.6c-0.6,1.7,0,20.6,1.2,25.3c1.2,4.7,8.3,50.2,10,55.6c1.8,5.3,8.3,34.9,8.3,36.6c0,1.8-2.4,8.3-8.9,7.1c-6.5-1.2-17.7-11.8-18.6-16c-0.9-4.1-18-38.4-21-45.5c-3-7.1-8.3-24.2-12.4-40.2c-4.1-16-11.2-42-11.2-43.7c0-1.8,2.4-13.6-5.9-27.2c-8.3-13.6-16.5-37.2-17.1-39.6c-0.6-2.4-3.5-26-3.5-33.7c0-7.7-2.4-17,5.9-18C175.8,451.3,235.5,447.2,239.7,459z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.2712097167969)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M188.2,570.7c0,1.8,7.1,27.8,11.2,43.7c4.1,16,9.5,33.1,12.4,40.2c3,7.1,20.1,41.4,21,45.5c0.9,4.1,12.1,14.8,18.6,16c6.5,1.2,8.9-5.3,8.9-7.1s-6.5-31.3-8.3-36.6c-1.8-5.3-8.9-50.8-10-55.6c-1.2-4.7-1.8-23.6-1.2-25.3c0.6-1.7-1.2-26.7-2.4-32.6c-1.1-5.5,4.4-13.5,6.6-19.8c-16.2,9.5-37.6,9.9-54,0.6c-4.9-2.8-10-6.5-15.2-8.3c2,4.4,4.2,8.7,6.4,12.2C190.6,557.1,188.2,569,188.2,570.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor4 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.1224517822266)'>\n        <path\n          className={classes.crown}\n          d='M279.9,455.5c-0.6,5.3-4.7,6.5-3.5,16.5c1.2,10,3,33.1,6.5,38.4c3.5,5.3,8.8,23.6,13.6,40.2c4.7,16.5,13,41.4,15.4,56.2c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c3.5-2.4,7.1-19.5,7.1-29.6s-1.8-39.6-2.4-42c-0.6-2.4-1.2-18.3-7.7-18.3C343.7,454.9,280.5,450.2,279.9,455.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.2224884033203)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M311.8,606.8c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c1.9-1.3,3.8-6.7,5.1-12.9c-5.7,7.2-11.9,13.7-20.1,15.3c-20,3.8-33.6-23.8-51.9-29.2c3.1,8.2,6.8,21,10.2,32.8C301.1,567.2,309.4,592,311.8,606.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <path\n          className={classes.crown}\n          d='M455,426.7c-2.5-3.7-22.3-25-31-37.3s2.5-50.8,8.7-60.7c6.2-9.9,19.9-22.3,22.3-31c2.5-8.7,6.2-39.7,8.7-44.7c2.5-5,7.4-37,7.4-46.4c0-9.4,6.2-72.7,16.1-87.6c9.9-14.9,21.1-29.7,23.6-40.9c2.5-11.3,6.2-32.3,12.4-27.3c6.2,5,12.4,3.5,12.4,16s-1.2,33.6,0,49.7c1.2,16.1,0,67,0,73.2s2.3,35,0.6,54.7c-1.8,19.7-9.2,32.1-9.2,44.5s-6.2,27.3,0,39.7c6.2,12.4,9.9,39.7,9.9,50.9c0,11.2-3.7,14.9-11.2,19.9c-7.4,5-16.1,0-22.3,6.2c-6.2,6.2-27.3,17.4-29.8,21.1C471.1,430.5,455,426.7,455,426.7z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M527,289c0-12.4,7.4-24.8,9.2-44.5c1.8-19.7-0.6-48.5-0.6-54.7s1.2-57.1,0-73.2c-1.2-16.1,0-37.2,0-49.7c0-12.5-6.2-11.1-12.4-16c-6.2-5-9.9,16-12.4,27.3c-2.5,11.3-13.6,26.1-23.6,40.9c-9.9,14.9-16.1,78.2-16.1,87.6c0,9.4-5,41.4-7.4,46.4c-2.5,5-6.2,36-8.7,44.7c-2.4,8.3-14.9,19.9-21.4,29.6c11.8-15,29.5-25.3,48.5-28c9.2-1.3,19.2-0.7,26.6,4.9c12.2,9.3,13.2,28.8,23.3,39.4c-1.4-5.8-3.1-11-5-14.9C520.8,316.3,527,301.4,527,289z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.4396057128906)'>\n        <path\n          className={classes.crown}\n          d='M446,430.6c0,0,7.9,14.3,14.3,17.8c6.4,3.5,24.7,12.4,27.7,20.7c3,8.3,1.8,34.3,0,46.7c-1.8,12.4-11.2,31.3-12.4,39c-1.2,7.7-6.5,57.9,0,70.9c6.5,13,6.5,31.3,8.3,49.1c1.8,17.7,8.3,69.4,5.9,72.1c-2.4,2.7-14.8,14.3-21.6,2.7c-6.8-11.6-14.5-45.3-18-50.6c-3.5-5.3-24.8-46.1-26-53.2c-1.2-7.1-16.5-95.2-20.7-99.3c-4.1-4.1-11.8-33.7-13.6-52.6c-1.8-18.9-1.2-29.6,4.7-35.5c5.9-5.9,26-21.3,27.8-23.6c1.8-2.4,15.7-5.6,15.7-5.6S443.6,426.6,446,430.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.5395812988281)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M424.1,645.8c1.2,7.1,22.5,47.9,26,53.2c3.5,5.3,11.2,39,18,50.6c6.8,11.6,19.2,0,21.6-2.7c2.4-2.7-4.2-54.4-5.9-72.1c-1.8-17.7-1.8-36.1-8.3-49.1c-6.5-13-1.2-63.2,0-70.9c1-6.6,8.2-21.6,11.3-33.5c-3.8,3.2-7,7.3-10.9,10.6c-21,17.6-53.5,4.3-73.9-14c-3-2.7-6.1-5.6-9.7-7.3c3.1,16.2,8.1,32.9,11.1,36C407.5,550.6,422.9,638.7,424.1,645.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.0228881835938)'>\n        <path\n          className={classes.crown}\n          d='M700.7,708.5c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c5.6-2.4,14.5-16,14.5-29c0-13-5.9-41.4-13-46.1c-7.1-4.7-30.1-3.5-37.2,0c-7.1,3.5-11.2,8.9-19.5,4.1c-8.3-4.7-17.1-20.8-34.3-17.5c-17.1,3.3-17.1,5.1-23.1,9.8c-5.9,4.7-14.2,8.9-21.3,9.5c-7.1,0.6-26.6,0-27.2,4.1c-0.6,4.1-3,7.7-3,18.9c0,11.2-1.2,18.9,0,27.2c1.2,8.3,5.9,27.2,10,31.9c4.1,4.7,11.2,13,11.2,20.7c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7s13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7C685.9,710.8,698.9,714.5,700.7,708.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.1229248046875)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M559.4,561.3c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7c9.5,0,13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7c1.2,4.7,14.2,8.4,16,2.4c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c3.2-1.3,7.3-6.2,10.4-12.5c-17.3-1-31.9,11.9-46.7,21c-38.6,23.8-80.4,14.6-117.8-10.9c-2.1-1.4-4.6-2.8-7.2-4c2,7.9,4.8,16.4,7.4,19.3C552.3,545.3,559.4,553.6,559.4,561.3z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 814.9726867675781)'>\n        <path\n          className={classes.crown}\n          d='M832.9,453.6c0,0-7.1-13.6-17.7-9.5c-10.6,4.1-23.6,2.8-27.8,4.3c-4.1,1.6-14.8,4.5-14.2,12.2c0.6,7.7-4.2,23.6,0,35.5c4.2,11.8,11.3,34.9,18.3,40.8c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c7.1-5.3,21.4-24.2,19.9-46.7c-1.6-22.5-3.3-41.4-7.5-45.5c-4.1-4.1-17.1-3-20.1,0c-3,3-14.8,7.1-16,4.1c-1.2-3-20.1-18.3-25.4-15.4c-5.3,3-21.3,3.5-28.4,8.9C851.2,442.9,832.9,453.6,832.9,453.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 815.0726623535156)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M791.5,536.9c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c3.3-2.5,8.2-7.9,12.3-15.3c-7.5-0.5-15.3,0.3-22.8,1.1c-42.2,4.5-84.4,9.1-126.6,13.6c-6.7,0.7-9.8-0.1-12.2-1.7C788.1,533,789.8,535.5,791.5,536.9z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <path\n          className={classes.crown}\n          d='M667.2,244.5c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4s22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-6.2,6.2-16.1,27.3-17.4,34.7c-1.2,7.4-11.4,42.9-6.3,51.2c5.1,8.3,11.3,10.8,21.2,17c9.9,6.2,23.6,17.6,29.8,12.5c6.2-5.1,37.2-18.7,43.4-17.5c6.2,1.2,24.8,5,28.5,9.9c3.7,5,14.9,5,24.8,0c9.9-5,16.1-6.8,17.4-22c1.2-15.2,3.7-47.5,0-54.9c-3.7-7.4-18.6-22.3-14.9-31c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7c0-18.6-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64C678.3,210.8,671.1,249.8,667.2,244.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M742.9,297.7c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7s-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64c1,4.2-6.3,43.1-10.2,37.8c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4c6.3,11.1,22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-2.4,2.4-5.3,7-8.1,12.1c17.6-9.8,38.4-14,58.6-12.6c26.6,1.8,52.2,12.7,73.9,28.3c6,4.3,11.9,9,18.8,11.7c-0.3-3.8-0.8-6.8-1.7-8.5C754,321.3,739.1,306.4,742.9,297.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar2 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <path\n          className={classes.crown}\n          d='M863.6,231.4c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-6.6,8.3-21.5,33.6-21,43.6c0.6,9.9-6.1,35.3,0,39.7c6.1,4.4,12.7,4.4,17.7,5c5,0.6,8.3,5,11,5c2.8,0,43.6-22.6,48.5-22.1c5,0.6,18.2,10.5,25.4,12.1c7.2,1.7,27.6,5,37.5,0c9.9-5,14.9-11,16-33.1c1.1-22.1-4.4-48.5-8.3-51.8c-3.9-3.3-7.7-3.3-11-14.9c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2s-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5C869.1,223.2,865,236.5,863.6,231.4z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M946.3,292.1c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2c-4.4-3.9-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5c-1.7,5-5.7,18.4-7.2,13.2c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-1.9,2.3-4.4,6-7,10.3c5.1-2.9,10.2-5.7,15.3-8c20-9,42.5-10.4,64.3-11.6c19.1-1.1,40.2-1.5,55.5,9.4c-0.4-0.8-0.8-1.4-1.2-1.8C953.5,303.7,949.6,303.7,946.3,292.1z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\nimport Incisor1 from './Incisor/1'\nimport Incisor2 from './Incisor/2'\nimport Incisor3 from './Incisor/3'\nimport Incisor4 from './Incisor/4'\nimport Canine1 from './Canine/1'\nimport Canine2 from './Canine/2'\nimport Premolar1 from './Premolar/1'\nimport Premolar2 from './Premolar/2'\nimport Molar1 from './Molar/1'\nimport Molar2 from './Molar/2'\n\nimport classes from './style.module.scss'\n\nexport default function TeethFactory (props) {\n  const { type, index, transform = {}, state = [] } = props\n\n  return (\n    <div className={classes.root}>\n      {transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <div className={classes.circle} />\n            <span>{index + 1}</span>\n          </div>\n        </React.Fragment>\n      )}\n\n      <div\n        className={`${classes.teeth} ${classes[state]}  ${transform.flipX && classes['flip-x']} ${transform.flipY &&\n          classes['flip-y']}`}\n      >\n        <React.Fragment>\n          {type === 'Incisor1' && <Incisor1 state={state} />}\n          {type === 'Incisor2' && <Incisor2 state={state} />}\n          {type === 'Incisor3' && <Incisor3 state={state} />}\n          {type === 'Incisor4' && <Incisor4 state={state} />}\n\n          {type === 'Canine1' && <Canine1 state={state} />}\n          {type === 'Canine2' && <Canine2 state={state} />}\n\n          {type === 'Premolar1' && <Premolar1 state={state} />}\n          {type === 'Premolar2' && <Premolar2 state={state} />}\n\n          {type === 'Molar1' && <Molar1 state={state} />}\n          {type === 'Molar2' && <Molar2 state={state} />}\n        </React.Fragment>\n      </div>\n      {!transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <span>{index + 1}</span>\n            <div className={classes.circle} />\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport TeethFactory from './Teeth/TeethFactory'\n\nexport default function TeethGroup (props) {\n  const { number, teeth, states = {} } = props\n\n  const [details, setDetails] = React.useState()\n\n  React.useEffect(() => {\n    let _details = {}\n\n    switch (number) {\n      case 1:\n        _details = {\n          startAt: 0,\n          transform: {\n            flipX: 1\n          }\n        }\n        break\n\n      case 2:\n        _details = {\n          startAt: 8\n        }\n        break\n\n      case 3:\n        _details = {\n          startAt: 31,\n          reverse: true,\n          transform: {\n            flipX: 1,\n            flipY: 1\n          }\n        }\n        break\n\n      case 4:\n        _details = {\n          startAt: 23,\n          reverse: true,\n          transform: {\n            flipY: 1\n          }\n        }\n        break\n\n      default:\n        break\n    }\n\n    setDetails(_details)\n  }, [number])\n\n  return (\n    <React.Fragment>\n      {details && (\n        <React.Fragment>\n          {teeth.map((type, index) => {\n            const _index = !details.reverse ? details.startAt + index : details.startAt - index\n            return (\n              <TeethFactory\n                key={_index}\n                transform={details.transform}\n                type={type}\n                index={_index}\n                state={states[_index]}\n              />\n            )\n          })}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport TeethGroup from './TeethGroup'\n\n// Styles\nimport classes from './DentalChart.module.scss'\n\nconst teeth = {\n  uppper: {\n    left: ['Molar2', 'Molar1', 'Premolar1', 'Canine2', 'Canine1', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Canine1', 'Canine2', 'Premolar1', 'Molar1', 'Molar2']\n  },\n  lower: {\n    left: ['Molar2', 'Premolar2', 'Premolar1', 'Canine1', 'Incisor4', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Incisor4', 'Canine1', 'Premolar1', 'Premolar2', 'Molar2']\n  }\n}\n\n// props\n// states Object {\n//  enum: 'filled, extracted, default\n// }\n\nexport default function DentalChart (props) {\n  const { states } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='h6'>Dental Examination Chart</Typography>\n      </div>\n      <div className={classes.container}>\n        <div className={classes.chart}>\n          <div className={classes.upper}>\n            <TeethGroup number={1} teeth={teeth.uppper.left} states={states} />\n            <TeethGroup number={2} teeth={teeth.uppper.right} reverse states={states} />\n          </div>\n\n          <div className={classes.lower}>\n            <TeethGroup number={3} teeth={teeth.lower.left} states={states} />\n            <TeethGroup number={4} teeth={teeth.lower.right} states={states} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport DentalChart from '../../../DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangeDoctor,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const [flag, setFlag] = React.useState({ flag: true })\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.dental_procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields, ...flag }))({ ...data, ...flag })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      tooth_number: details.tooth_number,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member,\n      flag: true\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                isDental\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={`${classes.groups} ${classes.chart}`}>\n                <DentalChart states={constructDentalStates(claim.procedures)} />\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  isDental\n                  showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields }))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      required\n                      readOnly={!permissions.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangePro,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          claim_sub_type: data.claim_sub.type,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields }))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                // showContractRange\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO/ECU Specialist ID'\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO/ECU Specialist Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      required\n                      readOnly={!permissions.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Controller\nimport ConfigController from 'Controllers/ConfigController2'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: [],\n      hospital_items: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          claim_source: data.claim_source,\n          medicine_category: data.medicine_category,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n      // ConfigController.getUserManagementData().then(res => {\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: new Date().toISOString(),\n      //       field: 'approved_date'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: res.user_id,\n      //       field: 'approved_id'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: `${res.first_name} ${res.last_name}`,\n      //       field: 'approved_name'\n      //     })\n      //   )\n      // })\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data }, true)\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <div className={classes.root}>\n              <Paper className={classes['first-container']}>\n                <BaseDetails\n                  claim={claim}\n                  showClaimSource\n                  onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                  permissions={permissions.base}\n                />\n                <div className={classes.groups}>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-of-service'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='date-of-service'\n                        required\n                        label='Date of Service'\n                        value={claim.date_to}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }}\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medical-partner-id'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.facility_id\n                      }}\n                    >\n                      <AutoComplete\n                        id='medical-partner-id'\n                        required\n                        label='Medical Partner ID'\n                        value={claim.facility_id}\n                        suggestions={suggestions.facility.id}\n                        onChange={(value, isSuggestionClick) =>\n                          handleOnChangeFacility({\n                            field: 'facility_id',\n                            value,\n                            isSuggestionClick\n                          })\n                        }\n                        error={error.facility_id}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medical-partner-facility-name'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.facility_name\n                      }}\n                    >\n                      <AutoComplete\n                        id='medical-partner-facility-name'\n                        required\n                        label='Medical Partner (Facility) Name'\n                        value={claim.facility_name}\n                        suggestions={suggestions.facility.name}\n                        onChange={(value, isSuggestionClick) =>\n                          handleOnChangeFacility({\n                            field: 'facility_name',\n                            value,\n                            isSuggestionClick\n                          })\n                        }\n                        error={error.facility_name}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        required\n                        error={error.medicine_category}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </div>\n              </Paper>\n            </div>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showAmountPaidByMember={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showAmountPaidByMember={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packagers: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          ppe_packagers: data.ppe_packages || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields }))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                showMemberAccountNumber={false}\n                showCompany\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-from'\n                      required\n                      label='Date of Service (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-to'\n                      required\n                      label='Date of Service (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['packages']}`}>\n                  <Typography>PPE Package/s:</Typography>\n                  <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                    <List>\n                      {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                        <ListItem key={index}>\n                          <ListItemText primary={`Package ${index + 1}`} />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Paper>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .messages({ 'string.empty': `\"Approval Code\" is required.` })\n    .required(),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .messages({ 'string.empty': `\"LOA No.\" is required.` })\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow('', null),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .allow('', null),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Controller\nimport ConfigController from 'Controllers/ConfigController2'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport MainValidator from './ClaimMedicalSuppliesValidator'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: [],\n      hospital_items: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n      // ConfigController.getUserManagementData().then(res => {\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: new Date().toISOString(),\n      //       field: 'approved_date'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: res.user_id,\n      //       field: 'approved_id'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: `${res.first_name} ${res.last_name}`,\n      //       field: 'approved_name'\n      //     })\n      //   )\n      // })\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(data)\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <div className={classes.root}>\n              <Paper className={classes['first-container']}>\n                <BaseDetails\n                  claim={claim}\n                  onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                  permissions={permissions.base}\n                />\n                <div className={classes.groups}>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-of-service'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='date-of-service'\n                        required\n                        label='Date of Service'\n                        value={claim.date_to}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }}\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medical-partner-id'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.facility_id\n                      }}\n                    >\n                      <AutoComplete\n                        id='medical-partner-id'\n                        label='Medical Partner ID'\n                        value={claim.facility_id}\n                        suggestions={suggestions.facility.id}\n                        onChange={(value, isSuggestionClick) =>\n                          handleOnChangeFacility({\n                            field: 'facility_id',\n                            value,\n                            isSuggestionClick\n                          })\n                        }\n                        error={error.facility_id}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medical-partner-facility-name'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.facility_name\n                      }}\n                    >\n                      <AutoComplete\n                        id='medical-partner-facility-name'\n                        label='Medical Partner (Facility) Name'\n                        value={claim.facility_name}\n                        suggestions={suggestions.facility.name}\n                        onChange={(value, isSuggestionClick) =>\n                          handleOnChangeFacility({\n                            field: 'facility_name',\n                            value,\n                            isSuggestionClick\n                          })\n                        }\n                        error={error.facility_name}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </div>\n              </Paper>\n            </div>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showAmountPaidByMember={false}\n                  showPhilhealthField={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showAmountPaidByMember={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Controller\nimport ConfigController from 'Controllers/ConfigController2'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: [],\n      hospital_items: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n      // ConfigController.getUserManagementData().then(res => {\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: new Date().toISOString(),\n      //       field: 'approved_date'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: res.user_id,\n      //       field: 'approved_id'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: `${res.first_name} ${res.last_name}`,\n      //       field: 'approved_name'\n      //     })\n      //   )\n      // })\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data }, true)\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-client-account-number'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.client_account_number\n                    }}\n                  >\n                    <TextField\n                      id='client-account-number'\n                      label='Client Account Number'\n                      value={claim.client_account_number}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'client_account_number'\n                          })\n                        )\n                      }\n                      error={error.client_account_number}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-client-account-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.client_account_number\n                    }}\n                  >\n                    <TextField\n                      id='client-account-name'\n                      label='Client Account Name'\n                      value={claim.client_account_name}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'client_account_name'\n                          })\n                        )\n                      }\n                      error={error.client_account_number}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showAmountPaidByMember={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showAmountPaidByMember={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfo.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfo (props) {\n  const {\n    show,\n    canPrintNotice = true,\n    setShowModal,\n    handleOnSave,\n    doReject,\n    doViewClaimNotice = () => {},\n    service,\n    lookup\n  } = props\n  const {\n    batch_number,\n    member_last_name,\n    member_first_name,\n    member_middle_name,\n    reimbursement_info_analysts: data = []\n  } = props.claim\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [items, setItems] = React.useState([])\n  const [reasonDropdown, setReasonDropdown] = React.useState([])\n\n  React.useEffect(() => {\n    setItems(data)\n  }, [data])\n\n  React.useEffect(() => {\n    if (showAdd) {\n      service\n        .lookups({\n          on: 'dropdown',\n          params: { field: lookup }\n        })\n        .then(res => {\n          const { data } = res.data\n          setReasonDropdown(\n            data.map(item => ({\n              value: item.reason,\n              text: item.reason\n            }))\n          )\n        })\n    }\n  }, [showAdd])\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnClickAdd = () => {\n    setShowAdd(true)\n\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  const handleOnClickSave = ({ item }) => {\n    setItems(items => {\n      const _items = [...items, item]\n      handleOnItemSave(_items)\n      return _items\n    })\n    setShowAdd()\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    items[index] = item\n    setItems(items => {\n      let _items = items.map((_item, _index) => {\n        if (_index === index) _item = { ...item, show: false, showCell: false }\n        return _item\n      })\n\n      handleOnItemSave(_items)\n      return _items\n    })\n  }\n\n  const handleOnClose = () => {\n    setShowModal(false)\n    setItems(items => {\n      return items.map((item, _index) => {\n        item.show = false\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          item.showCell = false\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n\n    handleOnSave(_items)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <ItemForm\n                      reasonDropdown={reasonDropdown}\n                      index={index}\n                      item={item}\n                      handleOnClickCancel={handleOnClickCancel}\n                      handleOnClickUpdate={handleOnClickUpdate}\n                      service={service}\n                      lookup={lookup}\n                      setReasonDropdown={setReasonDropdown}\n                    />\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <ItemForm\n                  index='add'\n                  reasonDropdown={reasonDropdown}\n                  item={{}}\n                  handleOnClickSave={handleOnClickSave}\n                  handleOnClickCancel={handleOnClickCancel}\n                  service={service}\n                  lookup={lookup}\n                  setReasonDropdown={setReasonDropdown}\n                />\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => setRejectModal(true)}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n          {canPrintNotice && (\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={() => doViewClaimNotice({ goBack: false })}\n            >\n              Print Notice\n            </Button>\n          )}\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n  const { index, item: _item, readOnly, reasonDropdown, service, lookup, setReasonDropdown } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction\n  } = props\n\n  const [item, setItem] = React.useState({})\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setItem({\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: today,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) item[field] = value\n        return item\n      })\n    }))\n  }\n\n  const handleOnLookup = args => {\n    const { save = false, update = false } = args\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n        if (save || update) {\n          let hasError = false\n          const reasons = item.reasons\n          const tempReasons = []\n          reasons.map(reason => {\n            const existing = data.filter(i => i.reason === reason.value)\n            if (existing.length === 0) {\n              tempReasons.push({...reason, value: '', error: 'Please Input a Valid Reason'})\n              hasError = true\n            } else tempReasons.push(reason)\n          })\n          setItem({...item, reasons: tempReasons})\n          if (hasError) {\n            return false\n          }\n          if (save) handleOnClickSave({ index, item })\n          if (update) handleOnClickUpdate({ index, item })\n        }\n      })\n  }\n\n  const _handleOnClickUpdate = () => {\n    handleOnLookup({ update: true })\n  }\n\n  const _handleOnClickSave = () => {\n    handleOnLookup({ save: true })\n  }\n\n  return (\n    <TableRow key={`collapsible-${index}`}>\n      <TableCell colSpan={headCells.length} id={`collabsible-cell-${index}`} className={classes['collapsible-cell']}>\n        <div className={`${classes.container} ${!item.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n          <div className={classes.cell}>\n            <Typography variant='h6' className={classes.label}>\n              {index === 'add' ? 'Add Item' : 'Update Item'}\n            </Typography>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-created-${index}`}\n                  label='Date Created'\n                  value={item.date_created}\n                  onChange={event => handleOnChange({ field: 'date_created', value: event.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`prepared-by-${index}`}\n                  label='Prepared By'\n                  value={item.prepared_by || ''}\n                  onChange={event => handleOnChange({ field: 'prepared_by', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-encoded-${index}`}\n                  label='Date Encoded'\n                  value={item.date_encoded}\n                  onChange={event => handleOnChange({ field: 'date_encoded', value: event.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`released-to-${index}`}\n                  label='Released To'\n                  value={item.released_to || ''}\n                  onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-released-${index}`}\n                  label='Date Released'\n                  value={item.date_released}\n                  onChange={event => handleOnChange({ field: 'date_released', value: event.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`return-date-${index}`}\n                  label='Return Date'\n                  value={item.date_return}\n                  disableComponents\n                  onChange={event => handleOnChange({ field: 'date_return', value: event.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']} style={{ width: '50%' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1 }}\n                  multiline\n                  rows={3}\n                  id='remarks'\n                  label='Remarks'\n                  value={item.remarks || ''}\n                  onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n                />\n              </div>\n            </div>\n\n            <div className={classes['reasons-container']}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Reasons\n                </Typography>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Other Details\n                </Typography>\n\n                <div className={classes.delete} />\n              </div>\n\n              {/* Reasons */}\n              {(item.reasons || []).map((item, _index) => (\n                <div className={classes.reasons} key={`reason-${_index}`}>\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <DropDown\n                      items={reasonDropdown}\n                      id={`reason-text-${_index}`}\n                      value={item.value || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })\n                      }\n                      error={item.error}\n                    />\n                  </div>\n\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <TextField\n                      id={`reason-other-details-${_index}`}\n                      value={item.other_details || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                      }\n                    />\n                  </div>\n\n                  <div className={classes.delete}>\n                    <IconButton id='delete-reason'>\n                      <DeleteIcon fontSize='small' onClick={() => handleOnClickRemoveReason(_index)} />\n                    </IconButton>\n                  </div>\n                </div>\n              ))}\n\n              <Typography\n                variant='body2'\n                className={`${classes['add-link']} ${(item.reasons || []).length ? '' : classes['empty-reasons']}`}\n                onClick={() => handleOnClickAddReason()}\n              >\n                + Add a reason\n              </Typography>\n              {/* Reasons */}\n            </div>\n\n            <div className={classes.footer}>\n              <React.Fragment>\n                {!readOnly && (\n                  <React.Fragment>\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      id='cancel'\n                      className='button-negative'\n                      onClick={() => handleOnClickCancel(index)}\n                    >\n                      Cancel\n                    </Button>\n                    {index === 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickSave}\n                        >\n                          Save\n                        </Button>\n                      </React.Fragment>\n                    )}\n                    {index !== 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickUpdate}\n                        >\n                          Update\n                        </Button>\n                      </React.Fragment>\n                    )}\n                  </React.Fragment>\n                )}\n              </React.Fragment>\n            </div>\n          </div>\n        </div>\n      </TableCell>\n    </TableRow>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n\n  const additional_fields = type === 'InPatient' ? InPatient : other_fields\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ReimbursementInfo from '../ReimbursementInfo/ReimbursementInfo'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Controller\n// import ConfigController from 'Controllers/ConfigController2'\nimport AdditionalFields from './AdditionalFields'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onViewClaimNotice,\n    onChangeDoctor = () => {},\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {}, onChangePro } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  //\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  // const [openDialog, setOpenDialog] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  //\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      reimbursement_type: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      diagnosis: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(undefined) })\n      setInitialAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n\n      let _claim = {\n        batch_number: data.batch_number,\n        approval_code: data.approval_code,\n        loa_number: data.loa_number,\n        reimbursement_type: data.reimbursement_details.type,\n        member_account_number: data.member.account_number,\n        member_last_name: data.member.last_name,\n        member_first_name: data.member.first_name,\n        member_middle_name: data.member.middle_name,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        date_from: data.date.from,\n        medicine_category: data.medicine_category,\n        reimbursement_category: data.reimbursement_details.category,\n        official_receipt_number: data.reimbursement_details.official_receipt_number,\n        diagnosis: data.diagnosis || [],\n        procedures: data.procedures || [],\n        professional_fees: data.professional_fees || [],\n        hospital_items: data.hospital_items || [],\n        reimbursement_info: data.reimbursement_info || [],\n        reimbursement_info_analysts: data.reimbursement_info_analysts || [],\n        claim_remarks: data.claim_remarks\n      }\n\n      if (data.reimbursement_details.type === 'InPatient') {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate || 0,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name\n        }\n      } else {\n        _claim = {\n          ..._claim,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          department: data.department\n        }\n      }\n\n      dispatch(setClaimFields(_claim))\n      setAllowedFields({\n        ..._allowedFields,\n        ...AdditionalFields(data.reimbursement_details.type === 'InPatient' ? 'InPatient' : '')\n      })\n\n      setBatchNumber(data.batch_number)\n\n      // ConfigController.getUserManagementData().then(res => {\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: new Date().toISOString(),\n      //       field: 'approved_date'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: res.user_id,\n      //       field: 'approved_id'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: `${res.first_name} ${res.last_name}`,\n      //       field: 'approved_name'\n      //     })\n      //   )\n      // })\n    })\n  }, [])\n\n  //* Room\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const [data] = res.data.data\n\n      let rooms = []\n      if (data) {\n        rooms = (data.rooms || []).map(item => ({\n          text: item.type,\n          value: item.type,\n          rate: item.rate\n        }))\n      }\n\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(allowedFields))({ ...data })\n    console.log(error)\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n\n    if (value === 'InPatient') {\n      dispatch(\n        setClaimFields({\n          ...claim,\n          date_to: moment(claim.date_from)\n            .endOf('day')\n            .toISOString()\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              permissions={permissions.base}\n              showReimbursement\n              requiredFields={{ reimbursement_type: true }}\n            />\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-id'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_id\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-id'\n                    required\n                    label='Medical Partner ID'\n                    value={claim.facility_id}\n                    suggestions={suggestions.facility.id}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeFacility({\n                        field: 'facility_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={error.facility_id}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-facility-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_name\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-facility-name'\n                    required\n                    label='Medical Partner (Facility) Name'\n                    value={claim.facility_name}\n                    suggestions={suggestions.facility.name}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeFacility({\n                        field: 'facility_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={error.facility_name}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='dp-medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-from'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_from\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-from'\n                        required\n                        label='Admission Date (From)'\n                        value={claim.date_from}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: moment(event.toISOString())\n                                .startOf('day')\n                                .toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }\n                        error={error.date_from}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-to'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-to'\n                        required\n                        label='Admission Date (To)'\n                        value={claim.date_to}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-type'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_type\n                      }}\n                    >\n                      <DropDown\n                        id='room-type'\n                        label='Room Type'\n                        items={dropDown.rooms}\n                        value={claim.room_type}\n                        onChange={handleOnChangeRoomType}\n                        error={error.room_type}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-rate'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_rate\n                      }}\n                    >\n                      <TextFieldCurrency\n                        id='room-rate'\n                        label='Room Rate'\n                        value={claim.room_rate}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'room_rate'\n                            })\n                          )\n                        }}\n                        error={error.room_rate}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-of-service'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='date-of-service'\n                        required\n                        label='Date of Service'\n                        value={claim.date_to}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-department'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.department\n                      }}\n                    >\n                      <TextField\n                        id='department'\n                        label='Department'\n                        value={claim.department}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'department'\n                            })\n                          )\n                        }\n                        error={error.pro_id}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        required\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      readOnly={!permissions.base.update}\n                      error={error.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <div className={classes['input']}>\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </div>\n                  </DiscrepancyBase>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-reimbursement-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.reimbursement_category\n                      }}\n                    >\n                      <TextField\n                        id='reimbursement-category'\n                        label='Reimbursement Category'\n                        value={claim.reimbursement_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'reimbursement_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.reimbursement_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n              <DiscrepancyBase\n                id='dp-official-receipt-number'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.official_receipt_number\n                }}\n              >\n                <div className={classes['input']}>\n                  <TextField\n                    id='official-receipt-number'\n                    label='Official Receipt Number'\n                    value={claim.official_receipt_number}\n                    required\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'official_receipt_number'\n                        })\n                      )\n                    }\n                    readOnly={!permissions.base.update}\n                    error={error.official_receipt_number}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['child-container']}>\n              <div className={classes['left-side']}>\n                {permissions.diagnosis.read && (\n                  <DiagnosisList\n                    id='diagnosis-list'\n                    permissions={permissions.diagnosis}\n                    items={claim.diagnosis}\n                    error={error.diagnosis}\n                  />\n                )}\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doViewClaimNotice={onViewClaimNotice}\n            doReject={() => setShowReimbursementModal(true)}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n            isReimbursement\n            reimbursement_info={claim.reimbursement_info}\n          />\n          <ReimbursementInfo\n            claim={{\n              ...claim,\n              batch_number: batchNumber\n            }}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            service={ClaimsAdjudicationServices}\n            permission={permissions.reimbursement_info}\n            canPrintNotice={false}\n            doViewClaimNotice={onViewClaimNotice}\n            handleOnSave={data =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: data,\n                  field: 'reimbursement_info_analysts'\n                })\n              )\n            }\n            doReject={() => onReject({ goBack: true })}\n            lookup={'reject-reason'}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport { useHistory } from 'react-router-dom'\n\n// Styles\nimport classes from './Error.module.scss'\n\nlet history = null\n\nconst DashboardRedirect = props => {\n  const { title = `Page not found`, body = `We cant seem to find the page you're looking for.` } = props\n  const [counter, setCounter] = React.useState()\n\n  React.useEffect(() => {\n    let _counter = 10\n    setCounter(_counter)\n    let interval = setInterval(() => {\n      if (_counter) {\n        _counter--\n        setCounter(_counter)\n      } else {\n        clearInterval(interval)\n        history.push('/')\n      }\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='h4' className={classes.title}>\n        {title}\n      </Typography>\n      <Typography variant='body1' className={classes.message}>\n        {body}\n      </Typography>\n\n      <div className={classes['action-messages']}>\n        <Typography variant='body2' className={classes.message}>\n          You will be redirected to Dashboard in {counter}\n        </Typography>\n        <Typography variant='body2' className={classes.message}>\n          Click the button below to go to that page.\n        </Typography>\n      </div>\n\n      <Button variant='contained' color='primary' className='button-neutral' onClick={() => history.push('/')}>\n        Go to Dashboard\n      </Button>\n    </div>\n  )\n}\n\nconst DashboardRedirectInit = props => {\n  history = useHistory()\n  return ''\n}\n\nconst DashboardRedirectService = {\n  redirect: () => {\n    history.push('/404')\n  }\n}\n\nexport { DashboardRedirectInit, DashboardRedirect, DashboardRedirectService }\n","import React from 'react'\n\n// Services\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport { DashboardRedirect } from 'SharedComponents/DashboardRedirect/DashboardRedirect'\n\nexport default function GetClaimComponent (_props) {\n  const { _type } = _props\n  const props = _props\n\n  const SelectecClaimType = selected => {\n    // const type = ClaimTypes[selected].other_name\n    switch (selected) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        LoadingService.loading(false)\n        return <DashboardRedirect title='Claim Type Under Development' />\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import React from 'react'\n\n// Components\nimport GetClaimComponent from './GetClaimComponent'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  resetClaim,\n  setClaimType,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setClaimFacility,\n  setClaimDoctor,\n  addSuggestionToArray,\n  initDiscrepancy,\n  setDiscrepancy,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setEscalationMessages,\n  setInquiryMessages,\n  setClaimPro,\n  resetRecon,\n  setReconNotes,\n  setRejectStatus\n} = actions\n\nexport default function ClaimAnalysis (props) {\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsAnalysis: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n\n  const [fetching, setFetching] = React.useState(true)\n\n  const [isMember, setIsMember] = React.useState(true)\n\n  const [member, setMember] = React.useState(null)\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n  const [client, setClient] = React.useState(null)\n  const [clientFetchStatus, setClientFetchStatus] = React.useState('')\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n\n  const { ApiService, breadCrumbsList, isManager = false } = props\n\n  const [claimNumber, setClaimNumber] = React.useState('')\n\n  const REPORT_LETTER_OF_ADVICE = 1\n  const REPORT_ANALYSIS_SHEET = 2\n  const REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE = 3\n  const NOTICE = 4\n\n  const getClaimType = ({ claim_number }) => {\n    setFetching(true)\n    BreadcrumbsService.setSelectedItems(breadCrumbsList)\n\n    ApiService.getClaim({ claim_number }).then(res => {\n      const { data } = res.data\n      const _claim_type = data.__type\n      dispatch(setClaimType(_claim_type))\n      dispatch(setDiscrepancy(getDiscrepancy(data.analysis_results.result)))\n      setFetching(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    dispatch(initDiscrepancy())\n    dispatch(resetError())\n    dispatch(resetRecon())\n    LoadingService.loading(true)\n    const { claim_number } = props.match.params\n\n    getClaimType({ claim_number })\n    getEscalationLogs({ claim_number })\n    getInquiryLogs({ claim_number })\n    getReconNotes({ claim_number })\n\n    return () => {\n      dispatch(setClaimType(''))\n    }\n  }, [props.match.params.claim_number])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    setGrandTotal(grand)\n    dispatch(setRejectStatus(!(grand === 0)))\n  }, [claim])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const getClaimDetails = callback => {\n    const { claim_number } = props.match.params\n    setClaimNumber(claim_number)\n    dispatch(\n      setProcedure({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setHospitalItem({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setProfessionalFee({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n\n    ApiService.getClaim({\n      claim_number\n    }).then(res => {\n      const { data } = res.data\n      // Set Diagnosis Suggestions\n      const diagnosis = data.diagnosis || []\n      diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n      callback(data)\n\n      // FETCH Member from Customer Care\n      if (data.member && data.member.account_number) {\n        const member_account_no = data.member.account_number\n        const client_account_number = data.member.customer_account_number\n        if (isMember) {\n          getMember({ member_account_no })\n        } else {\n          getClient({ client_account_number })\n        }\n      }\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'facility',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'doctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // pro user lookup\n          CustomerCareServices.proUsersLookup({ value, field }).then(res => {\n            // limit temporary - no limit in api seer\n            const limit = []\n            for (let i = 0; i < 10; i++) {\n              if (!res.data.data[i]) break\n              limit.push(res.data.data[i])\n            }\n\n            const data = limit.map(elem => {\n              let full_name = `${elem.first_name} ${elem.last_name}`\n              delete elem.first_name\n              delete elem.last_name\n              return { ...elem, name: full_name }\n            })\n\n            let _items = []\n\n            if (field === 'pro_id') {\n              for (let d of data) {\n                _items.push(d[`employee_${field.split('_')[1]}`])\n              }\n            } else {\n              for (let d of data) {\n                _items.push(d['name'])\n              }\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'pro',\n                suggestion: { [`${field.split('_')[1]}`]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getUtilizations = args => ApiService.getUtilizations(args)\n\n  const getPartners = args => ApiService.getPartners(args)\n\n  const getDoctors = args => ApiService.getDoctors(args)\n\n  const getUsers = args => ApiService.getUsers(args)\n\n  const getMember = ({ member_account_no }) => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: member_account_no }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: member_account_no })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        console.log(err)\n        const { data } = err.response\n        // status === 404\n        setMemberFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getClient = ({ client_account_number }) => {\n    setClientFetchStatus('fetching')\n    CustomerCareServices.getClient({ account_number: client_account_number })\n      .then(res => {\n        const { data } = res.data\n        setClientFetchStatus('success')\n        setClient(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setClientFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getMemberContract = args => CustomerCareServices.getMemberContract(args)\n\n  const getClientContract = args => CustomerCareServices.getClientContract(args)\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'anesthesiologist',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getDiscrepancy = adjudicationResults => {\n    const debug = false\n    if (debug) console.group('Discrepancy Check')\n    let discrepancy = {}\n    let diagnosis = {}\n    let procedures = {}\n    let hospital_items = {}\n    let professional_fees = {}\n    if (debug) console.log(adjudicationResults)\n\n    if (adjudicationResults) {\n      adjudicationResults.map((result, index) => {\n        result.fields.map((field, fieldIndex) => {\n          if (field.item_type === 'procedures') {\n            if (!procedures[field.item_id]) procedures[field.item_id] = {}\n            if (!procedures[field.item_id][field.id]) procedures[field.item_id][field.id] = []\n            procedures = {\n              ...procedures,\n              [field.item_id]: {\n                ...procedures[field.item_id],\n                [field.id]: [...procedures[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'hospital_items') {\n            if (!hospital_items[field.item_id]) hospital_items[field.item_id] = {}\n            if (!hospital_items[field.item_id][field.id]) hospital_items[field.item_id][field.id] = []\n            hospital_items = {\n              ...hospital_items,\n              [field.item_id]: {\n                ...hospital_items[field.item_id],\n                [field.id]: [...hospital_items[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'professional_fees') {\n            if (!professional_fees[field.item_id]) professional_fees[field.item_id] = {}\n            if (!professional_fees[field.item_id][field.id]) professional_fees[field.item_id][field.id] = []\n            professional_fees = {\n              ...professional_fees,\n              [field.item_id]: {\n                ...professional_fees[field.item_id],\n                [field.id]: [...professional_fees[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else {\n            if (!discrepancy[field.id]) discrepancy[field.id] = []\n            discrepancy = { ...discrepancy, [field.id]: [...discrepancy[field.id], field.message] }\n          }\n        })\n      })\n    }\n    discrepancy = {\n      ...discrepancy,\n      diagnosis: diagnosis,\n      procedure: procedures,\n      hospital_item: hospital_items,\n      professional_fee: professional_fees\n    }\n    if (debug) console.log(discrepancy)\n    if (debug) console.groupEnd()\n    return discrepancy\n  }\n\n  const getEscalationLogs = ({ claim_number }) => {\n    ApiService.getComments({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setEscalationMessages({ messages: data }))\n    })\n  }\n\n  const getInquiryLogs = ({ claim_number }) => {\n    ApiService.getInquiries({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setInquiryMessages({ messages: data }))\n    })\n  }\n\n  const getReconNotes = ({ claim_number }) => {\n    const { permissions } = props\n    if (SafeAccess(permissions.tabs.notes, ['read'])) {\n      ApiService.getNotes({ claim_number }).then(res => {\n        const { data } = res.data\n        dispatch(setReconNotes({ messages: data }))\n      })\n    }\n  }\n\n  const getReport = mode => {\n    LoadingService.loading(true)\n    ApiService.getClaim({ claim_number: claimNumber }).then(value => {\n      LoadingService.loading(false)\n      // const hasAmount = value.data.data.has_amount_concerns\n\n      let pdf = {}\n\n      switch (mode) {\n        case REPORT_ANALYSIS_SHEET:\n          pdf = {\n            name: 'Analysis Sheet',\n            fileName: 'analysis_sheet',\n            service: ApiService.getAnalysisSheet({ claimNo: claimNumber })\n          }\n          break\n\n        case REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Reports',\n            fileName: 'reports',\n            service: ApiService.getReports({ claimNo: claimNumber }),\n            onClose: () => props.history.push('/')\n          }\n          break\n\n        case REPORT_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Letter of Advice',\n            fileName: 'letter_of_advice',\n            service: ApiService.getLetterOfAdvice({ claimNo: claimNumber })\n          }\n          break\n\n        case NOTICE:\n          pdf = {\n            name: 'Claims Notice',\n            fileName: 'claim_notice',\n            service: ApiService.getLetterNotice({ claimNo: claimNumber }),\n            onClose: () => props.history.push('/')\n          }\n          break\n      }\n\n      PdfViewer2Service({ ...pdf, open: true })\n    })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimFacility({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          dispatch(setClaimFacility({ facility_id: i.id, facility_name: i.name }))\n          dispatch(resetSuggestionObject({ field: 'facility' }))\n          return i.rooms\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'facility' }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimPro({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.pro.data) {\n        if (value === i.employee_id || value === i.name) {\n          dispatch(setClaimPro({ pro_name: i.name, pro_id: i.employee_id }))\n          dispatch(resetSuggestionObject({ field: 'pro' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    }\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.anesthesiologist.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ anesthesiologist_id: i.id, anesthesiologist_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by })\n    }\n  }\n\n  const handleOnEscalate = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = escalations.assignee\n      ApiService.escalate({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: escalations.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnInquire = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = inquiries.assignee\n      ApiService.inquire({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: inquiries.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReject = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.reject({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnReassign = ({ goBack = true }) => {\n    LoadingService.loading(true)\n\n    const { id } = reassign.assignee\n\n    ApiService.reassign({\n      claim_number: claimNumber,\n      data: { receiver_id: id, message: reassign.message }\n    }).then(res => {\n      if (goBack) props.history.push('/')\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnApprove = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.approve({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnViewAnalysisSheet = () => {\n    getReport(REPORT_ANALYSIS_SHEET)\n  }\n\n  const handleOnViewLetterOfAdvice = () => {\n    getReport(REPORT_LETTER_OF_ADVICE)\n  }\n\n  const handleOnViewClaimNotice = ({ goBack = false }) => {\n    getReport(NOTICE)\n  }\n\n  const handleOnSave = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnCancel = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    if (goBack && !isManager) props.history.push('/')\n    else {\n      const { bundle_number, batch_number } = props.match.params\n      props.history.push(`/payment-request/${bundle_number}/submitted/${batch_number}`)\n    }\n    LoadingService.loading(false)\n  }\n\n  const handleOnReturnEscalate = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.comment({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnReturnInquire = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.inquire({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnRemove = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.removeClaim({ claim_number: claimNumber }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type && !fetching && (\n        <GetClaimComponent\n          // #region VARIABLES\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          isMember={isMember}\n          member={member}\n          memberFetchStatus={memberFetchStatus}\n          client={client}\n          clientFetchStatus={clientFetchStatus}\n          utilizationLoa={utilizationLoa}\n          grandTotal={grandTotal}\n          //  #endregion\n          //  #region FETCHING\n          getClaimDetails={getClaimDetails}\n          getUtilizations={getUtilizations}\n          getUsers={getUsers}\n          getPartners={getPartners}\n          getDoctors={getDoctors}\n          getMember={getMember}\n          getClient={getClient}\n          getMemberContract={getMemberContract}\n          getClientContract={getClientContract}\n          //  #endregion\n          //  #region EVENTS\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          onReturnEscalate={handleOnReturnEscalate}\n          onReturnInquire={handleOnReturnInquire}\n          onEscalate={handleOnEscalate}\n          onInquire={handleOnInquire}\n          onViewAnalysisSheet={handleOnViewAnalysisSheet}\n          onViewLetterOfAdvice={handleOnViewLetterOfAdvice}\n          onViewClaimNotice={handleOnViewClaimNotice}\n          onReject={handleOnReject}\n          onReassign={handleOnReassign}\n          onApprove={handleOnApprove}\n          onSave={handleOnSave}\n          onCancel={handleOnCancel}\n          onChangePro={handleOnChangePro}\n          onRemove={handleOnRemove}\n          //  #endregion\n          //  #region SERVICES\n          userManagementService={UserManagementServices}\n          //  #endregion\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\n// import FieldMapper from '../Components/FieldMapper/FieldMapper'\nimport TransmittalReport from './../Components/TransmittalReport/TransmittalReport'\nimport ClaimsUtilLedgerReport from './../Components/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\n\n// Pages of Batch Encoder Supervisor\nimport Dashboard from './../Components/BatchEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: [\n      { label: 'Generate Utilization Ledger', to: '/util-ledger' },\n      { label: 'Transmittal Report', to: '/transmittal-report' }\n    ]\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  },\n  reports: {\n    text: 'Reports'\n  },\n  transmittal: {\n    text: 'Transmittal Report'\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'] }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nfunction BatchEncoderSupervisorRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n        <Route path='/transmittal-report' exact render={() => <TransmittalReport />} />\n        <Route path='/util-ledger' exact render={() => <ClaimsUtilLedgerReport />} />\n        <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n        <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n        <Route\n          path='/claims/recon/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n              {...props}\n              permissions={permissions}\n              ApiService={ClaimsReconServices}\n            />\n          )}\n        />\n      </Switch>\n    </React.Fragment>\n  )\n}\n\nexport default BatchEncoderSupervisorRoutes\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst OpenBatchesTile = props => {\n  const { services, sizes } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBatches({\n        category: 'open',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'open' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setBatches({ data: openBatches, count: openBatchCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'open'\n    services.getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnEncode = batch_number => {\n    services.assignBatch({ batch_number }).then(({ data: res }) => {\n      props.history.push(`/batches/${batch_number}`)\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'open'\n    setViewList({ ...initialValue, show: true, title: `Open Batches`, category })\n    services.getBatches({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'open',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBatches(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='open-batches'\n        sizes={sizes}\n        count={{ color: 3, value: batches.count, id: 'open-batches-count' }}\n        title='Open Batches'\n        viewList={\n          <Typography id='ob-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`op-${item.id}`} id={`op-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={item.batch_number}>\n                <TableCell id={`ob-batch-no-${index}`}>{item.batch_number}</TableCell>\n                <TableCell id={`ob-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`ob-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Typography\n                    id={`encode-batch-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnEncode(item.batch_number)}\n                  >\n                    Encode\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  onClick={() => handleOnEncode(item.batch_number)}\n                >\n                  Encode\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOpenBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default OpenBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' },\n  { id: 'status', name: ' Status', sortField: 'status', match: '' }\n]\n\nconst MyBatchesTile = props => {\n  const { services, sizes } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    //* My Batches\n    Promise.all([\n      services.getBatches({\n        category: 'my',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'my' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const myBatches = batchResponse.data.data.results\n      const myBatchCount = batchCountResponse.data.data\n      setBatches({ data: myBatches, count: myBatchCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'my'\n    services.getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'my'\n    setViewList({ ...initialValue, show: true, title: `My Batches`, category })\n    services.getBatches({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'my',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBatches(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-batches'\n        sizes={sizes}\n        count={{ color: 8, value: batches.count, id: 'my-batches-count' }}\n        title='My Batches'\n        viewList={\n          <Typography id='mb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`mb-${item.id}`} id={`mb-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={item.batch_number}>\n                <TableCell id={`mb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                <TableCell id={`mb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`mb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`mb-status-${index}`}>In Progress</TableCell>\n                <TableCell>\n                  <Link to={`/batches/${item.batch_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                      Update\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns.filter(i => i.id !== 'status')}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default MyBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CompletedBatchesTile = props => {\n  const { services, sizes } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBatches({\n        category: 'completed',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'completed' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const completedBatches = batchResponse.data.data.results\n      const completedBatchCount = batchCountResponse.data.data\n      setBatches({ data: completedBatches, count: completedBatchCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'completed'\n    services.getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'completed'\n    setViewList({ ...initialValue, show: true, title: `Completed Batches`, category })\n    services.getBatches({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'completed',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBatches(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='completed-batches'\n        sizes={sizes}\n        count={{ color: 5, value: batches.count, id: 'completed-batches-count' }}\n        title='Completed Batches'\n        viewList={\n          <Typography id='cb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`cb-${item.id}`} id={`cb-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={item.batch_number}>\n                <TableCell id={`cb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                <TableCell id={`cb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`cb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/batches/${item.batch_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCompletedBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default CompletedBatchesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [openTickets] = React.useState({ count: 0, data: [] })\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <OpenBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList\n                count={openTickets.count}\n                title='Open Tickets'\n                viewAllLink={{ to: '/batches', caption: 'View all' }}\n              >\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {openTickets.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchesPage.module.scss'\n\nexport default function BatchesPage () {\n  PageTitleService('Batches')\n  BreadcrumbsService.setSelectedItems(['dashboard', 'batches'])\n\n  return (\n    <div className={classes.root}>\n      <span>My batches</span>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails ({ details, reassign_notes = true }) {\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n        {reassign_notes && (\n          <div className={classes['input']}>\n            <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n          </div>\n        )}\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const {\n    onClickAdd,\n    onClickProviderSchedule,\n    count,\n    status,\n    type = '',\n    inputChange = null,\n    disabled = false,\n    isManager = false\n  } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims</Typography>\n        <Typography id={'claim-count'} variant='subtitle2'>{`(${count})`}</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n\n        {status !== 'Completed' && !isManager && (\n          <React.Fragment>\n            {(type === 'APE' || type === 'ECU' || type === 'PPE') && (\n              <Button\n                id={`${type.toLowerCase()}-schedule`}\n                variant='contained'\n                color='primary'\n                className={`${classes.button} button-positive`}\n                onClick={onClickProviderSchedule}\n              >\n                Provider's {type} Schedule\n              </Button>\n            )}\n\n            <Button\n              id='add-claim'\n              variant='contained'\n              color='primary'\n              className={`${classes.button} button-positive`}\n              onClick={onClickAdd}\n              disabled={disabled}\n            >\n              Add Claim\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n// import IconButton from '@material-ui/core/IconButton'\n// import DeleteIcon from '@material-ui/icons/Delete'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\nconst cmHeadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'client-account-number', numeric: false, disablePadding: false, label: 'Client Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst prManagerheadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({\n  items,\n  selectedClaimNumber,\n  onItemClick,\n  type,\n  onConfirm,\n  openDialog,\n  onCancel,\n  // forDeletion,\n  actionItems,\n  setActionItems,\n  // setForDeletion,\n  submittedBatch,\n  setSelected,\n  pagination,\n  setPagination,\n  isManager = false,\n  selectStatus = true\n}) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  const getMessage = claims => {\n    let message = 'Are you sure you want to delete this claim?'\n    if (claims.claim_numbers.length > 1) {\n      message = 'Are you sure you want to delete these claims?'\n    }\n    return message\n  }\n\n  React.useEffect(() => {\n    const data = items.map(i => ({\n      ...i,\n      selected: false\n    }))\n    setClaims({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setActionItems({ claim_numbers: [] })\n    setSelected([])\n  }, [items, selectStatus])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleClick = ({ claims, index }) => {\n    const _claims = {\n      ...claims,\n      data: claims.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n  const handleSelectAllClick = event => {\n    let _claims = claims\n\n    if (_claims.data) {\n      _claims.data.map(i => {\n        i.selected = _claims.indeterminate ? true : !_claims.checked\n        return i\n      })\n    }\n\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _claims = data || claims\n    let selected_count = 0\n    let claimNumbers = []\n    if (_claims.data) {\n      for (let c of _claims.data) {\n        if (c.selected) {\n          selected_count++\n          claimNumbers.push(c.claim_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _claims.data.length : false\n    let checked = selected_count ? selected_count === _claims.data.length : false\n    _claims = { ..._claims, indeterminate, checked }\n    setClaims(_claims)\n\n    setActionItems({ claim_numbers: claimNumbers })\n    setSelected(state => [...claimNumbers])\n  }\n  const handleItemClick = index => onItemClick(index)\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={type === 'Clinic Management' ? cmHeadCells : !isManager ? headCells : prManagerheadCells}\n        handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        pagination={pagination}\n        rowsLength={rows.length}\n        checkAll\n        indeterminate={!!claims.indeterminate}\n        checked={!!claims.checked}\n        allowCheck\n        allowCheckDisabled={submittedBatch}\n        selectStatus={selectStatus}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow\n                className={`${\n                  selectedClaimNumber === row.claim_number ? classes.selected : classes['default-override']\n                }`}\n                selected={selectedClaimNumber === row.claim_number}\n                role='checkbox'\n                tabIndex={-1}\n                key={row.claim_number}\n              >\n                {selectStatus ? (\n                  <TableCell padding='checkbox'>\n                    <Checkbox\n                      disabled={submittedBatch}\n                      checked={row.selected}\n                      color='default'\n                      onClick={event => handleClick({ index, claims })}\n                    />\n                  </TableCell>\n                ) : null}\n\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number || ''}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number || ''}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code || ''}\n                </TableCell>\n                <TableCell id={`member-name-${index}`} onClick={() => handleItemClick(index)}>{`${\n                  row.member ? row.member.first_name : ''\n                } ${row.member ? row.member.last_name : ''}`}</TableCell>\n                {type === 'Clinic Management' || type === 'PPE' ? (\n                  <React.Fragment>\n                    {type === 'Clinic Management' && (\n                      <TableCell id={`client-account-name-${index}`} onClick={() => handleItemClick(index)}>\n                        {row.client.account_name}\n                      </TableCell>\n                    )}\n                    <TableCell id={`client-account-number-${index}`} onClick={() => handleItemClick(index)}>\n                      {row.client.account_number}\n                    </TableCell>\n                  </React.Fragment>\n                ) : !isManager ? (\n                  <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.member.account_number}\n                  </TableCell>\n                ) : (\n                  <TableCell id={`account-name-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.client.account_name}\n                  </TableCell>\n                )}\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n                {isManager && (\n                  <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                    <Link\n                      to={`/payment-request/${row.bundle_number}/submitted/${row.batch_number}/claim/${row.claim_number}`}\n                    >\n                      <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                        View Claim\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      {!isManager ? (\n        <Alert\n          open={openDialog}\n          message={getMessage(actionItems)}\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={onCancel}\n          onOk={onConfirm}\n        />\n      ) : null}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ProviderSchedule.module.scss'\n\n// Validations\n\n// Store\n\nconst headCells = [\n  { id: '1', name: 'Reference No.', sortField: '' },\n  { id: '2', name: 'Inclusive Dates', sortField: '' },\n  { id: '3', name: 'Account Name', sortField: '' },\n  { id: '3', name: 'Prepared By', sortField: '' }\n]\n\nexport default function ProviderSchedule (props) {\n  // Events\n  const { type, facility, dialog, setDialog } = props\n  // Variables\n  // Services\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={() => setDialog(false)}\n      aria-labelledby='customized-dialog-title'\n      open={dialog}\n      className={classes.root}\n      PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header1}>\n          <Typography variant='h6' className={classes.title}>\n            {facility.name}\n          </Typography>\n          <div className={classes.search}>\n            <SearchTextComponent id='search' onChange={() => {}} placeholder='Search for ' />\n          </div>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.body}>\n        <div className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map((headCell, index) => (\n                    <TableCell key={`${headCell.sortField} ${index}`} id={headCell.id}>\n                      <TableSortLabel active={false} direction={'asc'} onClick={() => {}}>\n                        {type} {headCell.name}\n                      </TableSortLabel>\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                  <TableCell id={`no-record`} colSpan={5}>\n                    <div\n                      className={`${classes.cell} ${classes.center}`}\n                      style={{\n                        textAlign: 'center',\n                        fontStyle: 'italic'\n                      }}\n                    >\n                      <span>No Records</span>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              }\n              pagination={false}\n            />\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.partition}>\n              <Typography>{type} Package/s:</Typography>\n              <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                <List>\n                  {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                    <ListItem key={index}>\n                      <ListItemText primary={`Package ${index + 1}`} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </div>\n            <div className={classes.partition}>\n              <Typography>Notes:</Typography>\n              <Paper style={{ height: '200px', overflow: 'auto' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                  multiline\n                  rows={3}\n                  id='notes'\n                  value={''}\n                  disabled={false}\n                  readOnly\n                  onChange={event => {}}\n                />\n              </Paper>\n            </div>\n          </div>\n        </div>\n        <div className={classes.action}>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-negative'>\n            Close\n          </Button>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-positive'>\n            Add Claim\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\nimport ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\nimport Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const { apiService } = props\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [selectedClaimNumber, setSelectedClaimNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [submitStatus, setsubmitStatus] = React.useState('')\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [openDialog, setOpenDialog] = React.useState({})\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n  const [showProviderSchedule, setShowProviderSchedule] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [debounce, setDebounce] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n  const [cancelDialog, setCancelDialog] = React.useState({})\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        // getClaimsAndCount({ batch_number: batchNumber, search })\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  const getClaimsAndCount = ({ batch_number }, test) => {\n    apiService\n      .getClaims({\n        batch_number,\n        params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n      })\n      .then(res => {\n        const { results, count, page, limit } = res.data.data\n        setClaims(results)\n        setClaimCount(count)\n        setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n      })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const _batchNumber = props.match.params._batchNumber\n    setBatchNumber(_batchNumber)\n\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      setDetails(data)\n      LoadingService.loading(false)\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Completed',\n          color: 'green'\n        }\n      }\n\n      setsubmitStatus(_status.text)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', 'batches', `specificBatch:${_batchNumber}`])\n\n      PageTitleService(`Batch No. ${_batchNumber}`, {\n        text: _status.text,\n        color: _status.color\n      })\n    })\n    getClaimsAndCount({ batch_number: _batchNumber })\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const handleOnItemClick = index => {\n    const { claim_number } = claims[index]\n    setSelectedClaimNumber(claim_number)\n\n    // if (submitStatus === 'Completed') return\n\n    // props.history.push(`/batches/${batchNumber}/claims/${claim_number}`)\n  }\n\n  const handleOnUpdate = () => {\n    if (submitStatus === 'Completed') return\n\n    // if (selected.length > 1) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select ONLY one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // } else if (!selected.length) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // }\n    console.log(selectedClaimNumber)\n    if (!selectedClaimNumber || selectedClaimNumber === '') {\n      return setDialog({\n        open: true,\n        message: 'Please select one claim to update.',\n        okLabel: 'OK',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    props.history.push(`/batches/${batchNumber}/claims/${selectedClaimNumber}`)\n  }\n\n  const handleOnSubmit = index => {\n    LoadingService.loading(true)\n    setOpenDialog(state => ({ ...state, show: false }))\n\n    apiService.submitBatch({ batch_number: batchNumber }).then(res => {\n      LoadingService.loading(false)\n      props.history.push(`/`)\n    })\n  }\n\n  const onOpenDelete = claim => {\n    // setselectedClaim(claim)\n    setOpenDeleteDialog(true)\n  }\n\n  const onCancelDelete = () => {\n    setOpenDeleteDialog(false)\n  }\n\n  const onConfirmDelete = () => {\n    console.log(forDeletion)\n    apiService\n      .deleteMultipleClaim({\n        batch_number: batchNumber,\n        data: forDeletion\n      })\n      .then(() => {\n        getClaimsAndCount({ batch_number: batchNumber })\n        setOpenDeleteDialog(false)\n        setForDeletion({ claim_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDeleteDialog(false)\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader\n            batchNumber={batchNumber}\n            type={details.claim.type}\n            onClickProviderSchedule={() => setShowProviderSchedule(true)}\n            // onClickPPESchedule={() => setShowPPESchedule(true)}\n            onClickAdd={() => props.history.push(`/batches/${batchNumber}/claims/add`)}\n            count={claimCount}\n            status={submitStatus}\n            inputChange={handleSearchChange}\n            disabled={!!(details.claim.type === 'Reimbursement' && claims.length > 0)}\n          />\n          <ClaimList\n            pagination={pagination}\n            setPagination={setPagination}\n            items={claims}\n            selectedClaimNumber={selectedClaimNumber}\n            onItemClick={handleOnItemClick}\n            type={details.claim.type}\n            onConfirm={onConfirmDelete}\n            openDialog={openDeleteDialog}\n            onCancel={onCancelDelete}\n            actionItems={forDeletion}\n            setActionItems={setForDeletion}\n            setSelected={setSelected}\n            submittedBatch={submitStatus === 'Completed'}\n            selectStatus\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {submitStatus === 'In Progress' && (\n                <React.Fragment>\n                  {forDeletion.claim_numbers.length > 0 && (\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      className={`${'button-negative'} ${classes['delete-button']}`}\n                      onClick={() => {\n                        onOpenDelete(true)\n                      }}\n                      id='cancel'\n                    >\n                      Delete\n                    </Button>\n                  )}\n\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() =>\n                      setCancelDialog({\n                        open: true,\n                        message: 'Are you sure you want to cancel?',\n                        okLabel: 'Yes',\n                        cancelLabel: 'No',\n                        onCancel: () => setCancelDialog(state => ({ ...state, open: false })),\n                        onOk: () => props.history.push('/')\n                      })\n                    }\n                  >\n                    Cancel\n                  </Button>\n                  <Button variant='contained' color='primary' className='button-positive' onClick={handleOnUpdate}>\n                    Update Claim\n                  </Button>\n                  <Button\n                    id='submit-batch'\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() =>\n                      setOpenDialog(state => ({\n                        ...state,\n                        show: true,\n                        message: 'Are you sure you want to submit this batch?',\n                        handleOnOk: handleOnSubmit\n                      }))\n                    }\n                  >\n                    Submit\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {submitStatus === 'Completed' && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => props.history.push('/')}\n                >\n                  Close\n                </Button>\n              )}\n            </div>\n          </div>\n          <ProviderSchedule\n            type={details.claim.type}\n            facility={details.facility}\n            dialog={showProviderSchedule}\n            setDialog={setShowProviderSchedule}\n          />\n\n          <Alert\n            open={openDialog.show}\n            message={openDialog.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(state => ({ ...state, show: false }))}\n            onOk={openDialog.handleOnOk}\n          />\n        </React.Fragment>\n      )}\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n      <Alert\n        open={!!cancelDialog.open}\n        message={cancelDialog.message}\n        cancelLabel={cancelDialog.cancelLabel}\n        okLabel={cancelDialog.okLabel}\n        onOk={cancelDialog.onOk}\n        onCancel={cancelDialog.onCancel}\n      />\n    </div>\n  )\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  const room_type = loa.room ? loa.room[0].room_type : ''\n  const room_rate = loa.room ? loa.room[0].total_amount : ''\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    // room_type: room_type,\n    // room_rate: room_rate,\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => {\n        if (item.text === room_type) {\n          dispatch(setClaimBaseDetails({ field: 'room_type', value: room_type }))\n          dispatch(setClaimBaseDetails({ field: 'room_rate', value: room_rate }))\n        }\n        return {\n          text: item.type,\n          value: item.type,\n          rate: item.rate\n        }\n      })\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].pshilhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  if (diagnosis.length === 0) {\n    diagnosis.push({\n      description: primary_diagnosis,\n      code: primary_icd10_code,\n      primary: true\n    })\n  } else {\n    diagnosis.map((diag, i) => {\n      let primary = false\n      if (diag.icd10_code === primary_icd10_code) primary = true\n      diagnosis[i].primary = primary\n      diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n      diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n    })\n  }\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    room_type: loa.room ? loa.room[0].room_type : '',\n    room_rate: loa.room ? loa.room[0].total_amount : '',\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    room_type: loa.room ? loa.room[0].room_type : '',\n    room_rate: loa.room ? loa.room[0].total_amount : '',\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    claim_source: '',\n    medicine_category: '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\nimport MedicalSupplies from './MedicalSupplies'\nimport Pharmacy from './Pharmacy'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\nconst AutoFill = ({ loa, claim_type }) => {\n  const type = ClaimTypes[claim_type].other_name\n\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n  switch (type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n    case 'MedicalSupplies':\n      MedicalSupplies({ common, loa, dispatch })\n      break\n    case 'Pharmacy':\n      Pharmacy({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\n\n// Services\nimport CustomerCareService from 'Services/Api/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../AutoFill'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\n// Libraries\n\nconst { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } = actions\n\nexport default function BaseDetails (props) {\n  const defaultFunction = () => {}\n\n  const {\n    onChange,\n    onChangeReimbursementType = defaultFunction,\n    handleMemberAccountNumber,\n    claim,\n    errors,\n    disableControls,\n    showReimbursement = false,\n    showCompany = false,\n    // showContractRange = false,\n    showClaimSource = false,\n    showApprovalCode = true,\n    reqApprovalCode = false,\n    showLoaNumber = true,\n    reqLoaNumber = false,\n    isDental = false,\n    showMemberAccountNumber = true\n  } = props\n\n  const dispatch = useDispatch()\n\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const [approvalCode, setApprovalCode] = React.useState('')\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleLoaDetails = event => {\n    const value = event.target.value.trim()\n\n    if (value && value !== approvalCode) {\n      setApprovalCode(value)\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value }).then(res => {\n        const loa = res.data\n        if (loa) {\n          AutoFill({\n            loa,\n            claim_type\n          })\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <div className={classes.groups}>\n        {showApprovalCode && (\n          <div className={classes['input']}>\n            <TextField\n              id='approval-code'\n              label='Approval Code'\n              required={reqApprovalCode}\n              value={claim.approval_code}\n              disabled={disableControls}\n              onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n              onBlur={handleLoaDetails}\n              error={errors.approval_code}\n            />\n          </div>\n        )}\n        {showLoaNumber && (\n          <div className={classes['input']}>\n            <TextField\n              id='loa-number'\n              label='LOA No.'\n              required={reqLoaNumber}\n              value={claim.loa_number}\n              disabled={disableControls}\n              onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n              error={errors.loa_number}\n            />\n          </div>\n        )}\n        {showReimbursement && (\n          <div className={classes['input']}>\n            <DropDown\n              id='reimbursement-type'\n              label='Reimbursement Type'\n              items={ClaimTypes.Reimbursement.subType}\n              value={claim.reimbursement_type}\n              disabled={disableControls}\n              required\n              onChange={event => onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })}\n              error={errors.reimbursement_type}\n            />\n          </div>\n        )}\n        {showCompany && (\n          <React.Fragment>\n            <div className={classes['input']}>\n              <TextField\n                id='company-account-number'\n                label='Customer (Company) Account Number'\n                value={claim.client_account_number}\n                disabled={disableControls}\n                required\n                onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                error={errors.client_account_number}\n              />\n              <div className={classes.wrapper}>\n                <IconButton\n                  aria-label='close'\n                  className={`${classes.button} ${classes['no-pad']}`}\n                  onClick={handleOnClickClientLookup}\n                >\n                  <SearchIcon />\n                </IconButton>\n              </div>\n            </div>\n            <div className={classes['input']}>\n              <TextField\n                id='company-name'\n                label='Company Name'\n                required\n                value={claim.client_account_name}\n                disabled={disableControls}\n                onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                error={errors.client_account_name}\n              />\n            </div>\n          </React.Fragment>\n        )}\n        {showClaimSource && (\n          <div className={classes['input']}>\n            <TextField\n              id='claim-source'\n              label='Claim Source'\n              required\n              value={claim.claim_source}\n              disabled={disableControls}\n              onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n              error={errors.claim_source}\n            />\n          </div>\n        )}\n      </div>\n      <div className={classes.groups}>\n        {showMemberAccountNumber && (\n          <div className={classes['input']}>\n            <TextField\n              id='member-account-number'\n              required\n              label='Member Account No.'\n              value={claim.member_account_number}\n              disabled={disableControls}\n              onChange={event =>\n                onChange({\n                  field: 'member_account_number',\n                  value: event.target.value\n                })\n              }\n              error={errors.member_account_number}\n            />\n            <div className={classes.wrapper}>\n              <IconButton\n                aria-label='close'\n                className={`${classes.button} ${classes['no-pad']}`}\n                onClick={handleOnClickMemberLookup}\n              >\n                <SearchIcon />\n              </IconButton>\n            </div>\n          </div>\n        )}\n\n        <div className={classes['input']}>\n          <TextField\n            id='member-last-name'\n            required\n            label='Member Last Name'\n            value={claim.member_last_name}\n            disabled={disableControls}\n            onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n            error={errors.member_last_name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='member-first-name'\n            required\n            label='Member First Name'\n            value={claim.member_first_name}\n            disabled={disableControls}\n            onChange={event =>\n              onChange({\n                field: 'member_first_name',\n                value: event.target.value\n              })\n            }\n            error={errors.member_first_name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='member-middle-name'\n            label='Member Middle Name'\n            required={!!isDental}\n            value={claim.member_middle_name}\n            disabled={disableControls}\n            onChange={event =>\n              onChange({\n                field: 'member_middle_name',\n                value: event.target.value\n              })\n            }\n            error={errors.member_middle_name}\n          />\n        </div>\n      </div>\n      <AutoFillInitializer />\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Member Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Member Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'Member First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Member Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <div className={classes.actions} />\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    errors = { description: '', code: '' },\n    onDeleteDiagnosis\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes['sub-wrapper']}>\n          <div className={classes.actions}>\n            <IconButton id='delete-icd' onClick={() => setOpenDialog(true)}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          </div>\n\n          <Tooltip\n            onClose={() => setTooltipOpen(false)}\n            onOpen={handleTooltipOpen}\n            open={tooltipOpen}\n            title={description}\n          >\n            {/* {console.log('error ', errors)} */}\n            <div className={`${classes['description']}`}>\n              <AutoComplete\n                id={id}\n                value={description}\n                suggestions={suggestions.description}\n                onChange={(value, isSuggestionClick) => onChangeDescription({ value, isSuggestionClick })}\n                error={errors.description}\n              />\n            </div>\n          </Tooltip>\n\n          <div className={`${classes['code']}`}>\n            <AutoComplete\n              id={codeId}\n              value={code}\n              suggestions={suggestions.code}\n              onChange={(value, isSuggestionClick) => onChangeCode({ value, isSuggestionClick })}\n              error={errors.code}\n            />\n          </div>\n\n          <div className={classes.primary}>\n            <Radio color='primary' checked={primary} onClick={onChangePrimary} />\n          </div>\n        </div>\n      </div>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to delete this diagnosis?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={() => {\n          setOpenDialog(false)\n          onDeleteDiagnosis()\n        }}\n      />\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  addClaimDiagnosis,\n  addSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  removeSuggestionToArray,\n  resetSuggestionArray,\n  setSuggestionOnArray,\n  removeClaimDiagnosis\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, errors = [] } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const handleOnClickAddDiagnosis = () => {\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, isSuggestionClick, index } = args\n\n    dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      for (let i of suggestions.icd10[index].data) {\n        if (value === i[field]) {\n          dispatch(\n            setClaimDiagnosis({\n              index,\n              data: { description: i.description, code: i.code }\n            })\n          )\n        }\n      }\n    } else getIcd10Suggestions({ value, by: field, index })\n\n    dispatch(resetSuggestionArray({ field: 'icd10', index }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const getIcd10Suggestions = ({ value, by, index }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'icd-10',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n\n            dispatch(\n              setSuggestionOnArray({\n                field: 'icd10',\n                index,\n                by,\n                suggestion: _items,\n                data\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n  }\n\n  React.useEffect(() => items && items.length === 0 && handleOnClickAddDiagnosis(), [])\n\n  return (\n    <div className={classes.groups}>\n      <div className={`${classes['diagnosis-list']} ${errors.error && classes['has-error']}`}>\n        <Typography variant='h6' className={classes.title}>\n          Diagnosis List\n        </Typography>\n        <ICDTextFields>\n          {items.map((item, index) => {\n            let error = null\n\n            try {\n              error = errors.items[index]\n            } catch (_error) {}\n\n            return (\n              <ICDTextField\n                key={`icd-${index}`}\n                id={`icd-description-${index}`}\n                codeId={`icd-code-${index}`}\n                errors={error || {}}\n                description={item.description}\n                suggestions={suggestions.icd10[index]}\n                code={item.code}\n                primary={item.primary}\n                onChangeDescription={args => handleOnChangeIcd10({ field: 'description', index, ...args })}\n                onChangeCode={args => handleOnChangeIcd10({ field: 'code', index, ...args })}\n                onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                onDeleteDiagnosis={() => handleOnRemoveDiagnosis(index)}\n              />\n            )\n          })}\n        </ICDTextFields>\n\n        <Button\n          id='add-diagnosis-button'\n          className={classes['add-diagnosis-button']}\n          onClick={handleOnClickAddDiagnosis}\n        >\n          + Add a diagnosis\n        </Button>\n      </div>\n      {errors.error && <span className={classes.error}>{errors.list}</span>}\n    </div>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './CptTextField.module.scss'\n\nconst CptTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Procedure Details *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          CPT Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst CptTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    errors,\n    description = '',\n    code = '',\n    suggestions = [],\n    onChangeDescription,\n    onChangeCode = () => {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions.description}\n              onChange={onChangeDescription}\n              error={errors.description}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions.code}\n            onChange={onChangeCode}\n            error={errors.code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { CptTextFields, CptTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    // .less(Joi.ref('gross_amount'))\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProcedureFormValidator from './ProcedureFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure\n} = actions\n\nexport default function ProcedureForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthField = true, diagnosis } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const procedure = useSelector(({ ClaimsEncoding: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('procedure.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const procedureICD = procedure.details.diagnosis_code\n      const existing = diagnosis.find(item => item.code === procedureICD)\n      if (!existing) dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n    }\n  }, [diagnosis])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(setProcedure({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } }))\n  }\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const validate = () => {\n    const baseError = ProcedureFormValidator({\n      description: procedure.details.description,\n      code: procedure.details.code.toString(),\n      gross_amount: procedure.details.gross_amount,\n      vat_amount: procedure.details.vat_amount,\n      amount_paid_by_member: procedure.details.amount_paid_by_member,\n      philhealth_amount_paid: procedure.details.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (diagnosis) {\n      diagnosisError = DiagnosisValidator({\n        diagnosis_description: procedure.details.diagnosis_description || '',\n        diagnosis_code: procedure.details.diagnosis_code || ''\n      })\n    }\n    const error = { ...baseError.error, ...diagnosisError.error }\n    console.log(error)\n    setErrors(error || {})\n    return !!Object.keys(error).length\n  }\n\n  const handleOnSaveProcedure = () => {\n    if (validate()) return\n\n    dispatch(addClaimProcedure(procedure.details))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    if (validate()) return\n\n    dispatch(updateClaimProcedure({ index, details: procedure.details }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setProcedure({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    procedure.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={procedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={procedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <CptTextFields>\n            <CptTextField\n              id={`procedure-description-autocomplete`}\n              codeId={`procedure-code-autocomplete`}\n              description={procedure.details.description}\n              suggestions={suggestions.cpt}\n              code={procedure.details.code}\n              onChangeDescription={(value, isSuggestionClick, selectedIndex) =>\n                handleOnChangeCpt({\n                  field: 'description',\n                  value,\n                  isSuggestionClick,\n                  selectedIndex\n                })\n              }\n              onChangeCode={(value, isSuggestionClick, selectedIndex) =>\n                handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n              }\n              errors={errors}\n            />\n          </CptTextFields>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-gross-amount'\n                label='Gross Amount'\n                value={procedure.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-vat-amount'\n                label='VAT Amount'\n                value={procedure.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={procedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={procedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n\n              <div className={classes.input}>\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={procedure.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                />\n              </div>\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProcedure}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='procedure-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProcedure({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProcedure(procedure.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='procedure-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this procedure?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProcedure(procedure.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './HospitalItemTextField.module.scss'\n\nconst HospitalItemTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Item Name *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          Item Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst HospitalItemTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    name = '',\n    item_code = '',\n    errors,\n    suggestions = [],\n    onChangeName,\n    onChangeCode = () => {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!name.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={name}>\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              required\n              value={name}\n              suggestions={suggestions.name}\n              onChange={onChangeName}\n              error={errors.name}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            required\n            value={item_code}\n            suggestions={suggestions.item_code}\n            onChange={onChangeCode}\n            error={errors.item_code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { HospitalItemTextFields, HospitalItemTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required()\n    .messages({\n      'string.empty': `\"Item Name\" is required.`\n    }),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required()\n    .messages({\n      'string.empty': `\"Item Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { HospitalItemTextFields, HospitalItemTextField } from '../HospitalItemTextField/HospitalItemTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport HospitalItemFormValidator from './HospitalItemFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n/// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setHospitalItem,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetSuggestionObject,\n  setSuggestionObject\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthRemarks = true, diagnosis } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const hospitalItem = useSelector(({ ClaimsEncoding: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('hospitalItem.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const hospitalItemICD = hospitalItem.details.diagnosis_code\n      const existing = diagnosis.find(item => item.code === hospitalItemICD)\n      if (!existing) dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n    }\n  }, [diagnosis])\n\n  const handleOnChangeHospitalItem = ({ value, field, isSuggestionClick }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.hospitalItem.data) {\n        if (value === i[field]) {\n          dispatch(\n            setHospitalItem({\n              details: {\n                id: i.id,\n                name: i.name,\n                item_code: i.item_code\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } })\n    )\n  }\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'hospitalItem',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeHospitalForm = args => {\n    const { value, field } = args\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const validate = () => {\n    const baseError = HospitalItemFormValidator({\n      name: hospitalItem.details.name,\n      item_code: hospitalItem.details.item_code.toString(),\n      gross_amount: hospitalItem.details.gross_amount,\n      vat_amount: hospitalItem.details.vat_amount,\n      amount_paid_by_member: hospitalItem.details.amount_paid_by_member,\n      philhealth_amount_paid: hospitalItem.details.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (diagnosis) {\n      diagnosisError = DiagnosisValidator({\n        diagnosis_description: hospitalItem.details.diagnosis_description || '',\n        diagnosis_code: hospitalItem.details.diagnosis_code || ''\n      })\n    }\n    const error = { ...baseError.error, ...diagnosisError.error }\n    console.log(error)\n    setErrors(error || {})\n    return !!Object.keys(error).length\n  }\n\n  const handleOnSaveHospitalItem = () => {\n    if (validate()) return\n\n    dispatch(addClaimHospitalItem(hospitalItem.details))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnUpdateHospitalItem = index => {\n    if (validate()) return\n\n    dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnRemoveHospitalItem = index => {\n    dispatch(removeClaimHospitalItem({ index }))\n    dispatch(setHospitalItem({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    hospitalItem.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={hospitalItem.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={hospitalItem.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <HospitalItemTextFields>\n            <HospitalItemTextField\n              id='hospital-item-name'\n              codeId={`hospital-item-code`}\n              name={hospitalItem.details.name || ''}\n              item_code={hospitalItem.details.item_code || ''}\n              suggestions={suggestions.hospitalItem}\n              onChangeName={(value, isSuggestionClick) =>\n                handleOnChangeHospitalItem({ field: 'name', value, isSuggestionClick })\n              }\n              onChangeCode={(value, isSuggestionClick) =>\n                handleOnChangeHospitalItem({ field: 'item_code', value, isSuggestionClick })\n              }\n              errors={errors}\n            />\n          </HospitalItemTextFields>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-gross-amount'\n                label='Gross Amount'\n                value={hospitalItem.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-vat-amount'\n                label='VAT Amount'\n                value={hospitalItem.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='hospital-item-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={hospitalItem.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={hospitalItem.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={hospitalItem.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveHospitalItem}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='hospital-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setHospitalItem({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {hospitalItem.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateHospitalItem(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='hospital-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this hospital item?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveHospitalItem(hospitalItem.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required()\n    .messages({\n      'string.empty': `\"Medical Partner ID\" is required.`\n    }),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Name\" is required.`\n    }),\n  specialization: Joi.string()\n    .trim()\n    .label('Doctor Specialization')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Specialization\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProfessionalFeeFormValidator from './ProfessionalFeeFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProfessionalFee,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  resetSuggestionObject,\n  setSuggestionObject\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const { diagnosis } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const professionalFee = useSelector(({ ClaimsEncoding: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('professionalFee.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const professionalFeeICD = professionalFee.details.diagnosis_code\n      const existing = diagnosis.find(item => item.code === professionalFeeICD)\n      if (!existing) dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n    }\n  }, [diagnosis])\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.pfDoctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                doctor_id: i.id,\n                doctor_name: i.full_name,\n                specialization: i.specialization.main + ', ' + i.specialization.major\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'pfDoctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeProfessionalFeeForm = args => {\n    const { value, field } = args\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } })\n    )\n  }\n\n  const validate = () => {\n    const baseError = ProfessionalFeeFormValidator({\n      doctor_id: professionalFee.details.doctor_id,\n      doctor_name: professionalFee.details.doctor_name,\n      specialization: professionalFee.details.specialization,\n      gross_amount: professionalFee.details.gross_amount,\n      vat_amount: professionalFee.details.vat_amount,\n      amount_paid_by_member: professionalFee.details.amount_paid_by_member,\n      philhealth_amount_paid: professionalFee.details.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (diagnosis) {\n      diagnosisError = DiagnosisValidator({\n        diagnosis_description: professionalFee.details.diagnosis_description || '',\n        diagnosis_code: professionalFee.details.diagnosis_code || ''\n      })\n    }\n    const error = { ...baseError.error, ...diagnosisError.error }\n    console.log(error)\n    setErrors(error || {})\n    return !!Object.keys(error).length\n  }\n\n  const handleOnSaveProfessionalFee = () => {\n    if (validate()) return\n\n    dispatch(addClaimProfessionalFee(professionalFee.details))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnUpdateProfessionalFee = index => {\n    if (validate()) return\n\n    dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnRemoveProfessionalFee = index => {\n    dispatch(removeClaimProfessionalFee({ index }))\n    dispatch(setProfessionalFee({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    professionalFee.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={professionalFee.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={professionalFee.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={`${classes.groups} `}>\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-medical-partner-id'\n                required\n                label='Medical Partner ID'\n                value={professionalFee.details.doctor_id || ''}\n                suggestions={pfSuggestions.pfDoctor.id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeDoctor({ field: 'doctor_id', value, isSuggestionClick })\n                }\n                error={errors.doctor_id}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-doctor-name'\n                required\n                label='Doctor Name'\n                value={professionalFee.details.doctor_name || ''}\n                suggestions={pfSuggestions.pfDoctor.full_name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeDoctor({ field: 'doctor_name', value, isSuggestionClick })\n                }\n                error={errors.doctor_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                id='professional-fee-specialization'\n                required\n                label='Specialization'\n                value={professionalFee.details.specialization}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'specialization',\n                    value: event.target.value\n                  })\n                }\n                error={errors.specialization}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-gross-amount'\n                label='Gross Amount'\n                value={professionalFee.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-vat-amount'\n                label='VAT Amount'\n                value={professionalFee.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-amount-paid-by-member'\n                label='Amount Paid by Member'\n                value={professionalFee.details.amount_paid_by_member}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'amount_paid_by_member',\n                    value: event.target.value\n                  })\n                }\n                error={errors.amount_paid_by_member}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={professionalFee.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                multiline\n                rows={3}\n                id='philhealth-remarks'\n                label='PhilHealth Remarks'\n                value={professionalFee.details.philhealth_remarks}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_remarks',\n                    value: event.target.value\n                  })\n                }\n              />\n            </div>\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProfessionalFee}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='professional-fee-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProfessionalFee({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {professionalFee.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProfessionalFee(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='professional-fee-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this professional fee?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProfessionalFee(professionalFee.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProcedure, setProfessionalFee, setHospitalItem, resetSuggestionObject, setDentalProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, isDental = false } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    if (isDental) return dispatch(setDentalProcedure({ show: false }))\n\n    dispatch(setProcedure({ show: false }))\n  }, [])\n\n  const showProcedureForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n\n    if (isDental) {\n      dispatch(setDentalProcedure(params))\n    } else {\n      dispatch(setProcedure(params))\n    }\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const generateKey = i =>\n    `${i.description} ${i.code} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProcedureForm({ show: true, mode: 'add' })}\n          >\n            + Add Procedure\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`procedure-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProcedureForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`procedure-row-description-${index}`}>{i.description}</td>\n                <td id={`procedure-row-code-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.code}\n                </td>\n                <td id={`procedure-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setHospitalItem, setProcedure, setDentalProcedure, setProfessionalFee, resetSuggestionObject } = actions\n\nexport default function HospitalItemList (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setHospitalItem({ show: false }))\n  }, [])\n\n  const showHospitalItemForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n    dispatch(setHospitalItem(params))\n\n    // TODO currently creating baseform\n    dispatch(setProcedure({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const generateKey = i =>\n    `${i.name} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showHospitalItemForm({ show: true, mode: 'add' })}\n          >\n            + Add Items\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`hospital-item-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']} `}\n                onClick={showHospitalItemForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`hospital-item-row-name-${index}`}>{i.name}</td>\n                <td id={`hospital-item-row-code${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.item_code}\n                </td>\n                <td id={`hospital-item-row-amount${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProfessionalFee, setHospitalItem, setProcedure, setDentalProcedure, resetSuggestionObject } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data } = props\n\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setProfessionalFee({ show: false }))\n  }, [])\n\n  const showProfessionalFeeForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n    dispatch(setProfessionalFee(params))\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n  }\n  const generateKey = i =>\n    `${i.doctor_name} ${i.specialization} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProfessionalFeeForm({ show: true, mode: 'add' })}\n          >\n            + Add Professional Fee\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`professional-fee-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProfessionalFeeForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`professional-fee-row-doctor-${index}`}>{i.doctor_name}</td>\n                <td id={`professional-fee-row-specialization-${index}`}>{i.specialization}</td>\n                <td id={`professional-fee-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data}\n          onChange={event =>\n            dispatch(\n              setClaimBaseDetails({\n                value: event.target.value,\n                field: 'claim_remarks'\n              })\n            )\n          }\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\nexport default function ClaimFooter (props) {\n  const { handleOnSave, setOpenDialog, openDialog, onOk, setShowReimbursementModal } = props\n  return (\n    <div className={classes.root}>\n      {setShowReimbursementModal && (\n        <Button\n          variant='contained'\n          color='primary'\n          id='save-for-now'\n          className='button-positive'\n          onClick={() => setShowReimbursementModal(true)}\n        >\n          Return\n        </Button>\n      )}\n\n      <Button\n        variant='contained'\n        color='primary'\n        id='save-for-now'\n        className='button-positive'\n        onClick={() => handleOnSave(true)}\n      >\n        Save for now\n      </Button>\n      <Button variant='contained' color='primary' className='button-positive' onClick={() => handleOnSave(false)}>\n        Save and Close\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        id='cancel'\n        className='button-negative'\n        onClick={() => setOpenDialog(true)}\n      >\n        Cancel\n      </Button>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to cancel?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={onOk}\n      />\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .allow('', null),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer (Company) Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .default('')\n      .allow('', null),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .default('')\n      .allow('', null),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .default('')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .allow('', null),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .messages({ 'string.empty': `\"Claim Sub Type\" is required.` })\n      .required(),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer (Company) Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Alert from 'SharedComponents/Alert/Alert'\n\nlet _setDialog = null\nlet _resolve = null\nconst SoftValidatorAlertComponent = () => {\n  const [dialog, setDialog] = React.useState({})\n\n  React.useState(() => {\n    setDialog(state => ({ ...state, show: false }))\n    _setDialog = setDialog\n  }, [])\n\n  const action = t => {\n    setDialog(state => ({ ...state, show: false }))\n    _resolve(t)\n  }\n\n  return (\n    <Alert\n      open={dialog.show}\n      message={dialog.message}\n      cancelLabel='No'\n      okLabel='Yes'\n      onCancel={() => action()}\n      onOk={() => action(true)}\n    />\n  )\n}\n\nconst SoftValidatorService = ({ fields = [] }) => {\n  const _fields = []\n\n  fields.map(i => {\n    const [key] = Object.keys(i)\n    if (!i[key].trim()) _fields.push(key)\n  })\n\n  if (!_fields.length) return true\n\n  let message = 'Missing'\n  const length = _fields.length\n\n  for (let i = 0; i < length; i++) {\n    if (i && i === length - 1) message = `${message} and`\n    else if (i && i < length - 1) message = `${message},`\n\n    message = `${message} ${_fields[i]}`\n  }\n\n  message = `${message}. Are you sure you want to proceed?`\n\n  return new Promise(resolve => {\n    _resolve = resolve\n    _setDialog({ show: true, message })\n  })\n}\n\nexport { SoftValidatorAlertComponent, SoftValidatorService }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string().trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string().trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, onChangePro, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0].rooms || []).map(room => ({\n              text: room.type,\n              value: room.type,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='room-type'\n                  required\n                  label='Room Type'\n                  items={dropDown.rooms}\n                  value={claim.room_type}\n                  disabled={disableControls}\n                  onChange={handleOnChangeRoomType}\n                  error={errors.room_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='room-rate'\n                  required\n                  label='Room Rate'\n                  value={claim.room_rate}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'room_rate'\n                      })\n                    )\n                  }\n                  error={errors.room_rate}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  required\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  required\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm diagnosis={claim.diagnosis} />\n                  <HospitalItemForm diagnosis={claim.diagnosis} />\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            department: data.department,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='department'\n                  label='Department'\n                  value={claim.department}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'department'\n                      })\n                    )\n                  }\n                  error={errors.department}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm diagnosis={claim.diagnosis} />\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            recommendation: data.recommendation,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='recommendation'\n                  label='Recommendation'\n                  value={claim.recommendation}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'recommendation'\n                      })\n                    )\n                  }\n                  error={errors.recommendation}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions, setGrandTotal } = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails, onChangePro, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  required\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  required\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  required\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm diagnosis={claim.diagnosis} />\n                  <HospitalItemForm diagnosis={claim.diagnosis} />\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .greater(-1)\n    .required(),\n  tooth_number: Joi.string()\n    .label('Tooth Number')\n    .required()\n    .messages({\n      'string.empty': `\"Tooth Number\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ToothNumber.module.scss'\n\nexport default function ToothNumber (props) {\n  const { label = '', readOnly, error, onChange, value = '', required = false } = props\n  return (\n    <div className={classes['root']}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {`${label} ${required ? '*' : ''}`}\n      </Typography>\n      <div>\n        <TextField value={value} id='tooth-number' onChange={onChange} readOnly={readOnly} error={error} />\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DentalProcedureFormValidator from './DentalProcedureFormValidator'\nimport ToothNumber from '../ToothNumber/ToothNumber'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './DentalProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setDentalProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure\n} = actions\n\nexport default function DentalProcedureForm (props) {\n  const { diagnosis } = props\n  const dispatch = useDispatch()\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const dentalProcedure = useSelector(({ ClaimsEncoding: state }) => state.dentalProcedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('dentalProcedure.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setDentalProcedure({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } })\n    )\n  }\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setDentalProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const validate = () => {\n    const baseError = DentalProcedureFormValidator({\n      description: dentalProcedure.details.description,\n      code: dentalProcedure.details.code.toString(),\n      tooth_number: dentalProcedure.details.tooth_number,\n      gross_amount: dentalProcedure.details.gross_amount,\n      vat_amount: dentalProcedure.details.vat_amount,\n      amount_paid_by_member: dentalProcedure.details.amount_paid_by_member\n    })\n    let diagnosisError = {}\n    if (diagnosis) {\n      diagnosisError = DiagnosisValidator({\n        diagnosis_description: dentalProcedure.details.diagnosis_description || '',\n        diagnosis_code: dentalProcedure.details.diagnosis_code || ''\n      })\n    }\n    const error = { ...baseError.error, ...diagnosisError.error }\n    console.log(error)\n    setErrors(error || {})\n    return !!Object.keys(error).length\n  }\n\n  const handleOnSaveProcedure = () => {\n    if (validate()) return\n\n    dispatch(addClaimProcedure(dentalProcedure.details))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    if (validate()) return\n\n    dispatch(updateClaimProcedure({ index, details: dentalProcedure.details }))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  return (\n    <React.Fragment>\n      {dentalProcedure.show && (\n        <React.Fragment>\n          <Paper className={classes.root}>\n            <div className={classes.groups}>\n              {diagnosis && (\n                <React.Fragment>\n                  <div className={classes.input}>\n                    <DropDown\n                      id='icd10-description'\n                      required\n                      label='ICD10 Description'\n                      items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                      value={dentalProcedure.details.diagnosis_description}\n                      onChange={event =>\n                        handleOnChangeDiagnosis({\n                          field: 'diagnosis_description',\n                          value: event.target.value\n                        })\n                      }\n                      error={errors.diagnosis_description}\n                    />\n                  </div>\n                  <div className={classes.input}>\n                    <DropDown\n                      id='icd10-code'\n                      required\n                      label='ICD10 Code'\n                      items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                      value={dentalProcedure.details.diagnosis_code}\n                      onChange={event =>\n                        handleOnChangeDiagnosis({\n                          field: 'diagnosis_code',\n                          value: event.target.value\n                        })\n                      }\n                      error={errors.diagnosis_code}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={dentalProcedure.details.description}\n                suggestions={suggestions.cpt}\n                code={dentalProcedure.details.code}\n                onChangeDescription={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    isSuggestionClick,\n                    selectedIndex\n                  })\n                }\n                onChangeCode={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                }\n                errors={errors}\n              />\n            </CptTextFields>\n\n            <div className={classes.groups}>\n              <ToothNumber\n                id='tooth-number'\n                label='Tooth Number'\n                required\n                value={dentalProcedure.details.tooth_number}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'tooth_number',\n                    value: event.target.value\n                  })\n                }\n                error={errors.tooth_number}\n              />\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  label='Gross Amount'\n                  value={dentalProcedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.gross_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={dentalProcedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.vat_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={dentalProcedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.buttons}`}>\n              {dentalProcedure.mode === 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={handleOnSaveProcedure}\n                  >\n                    Save\n                  </Button>\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    onClick={() => dispatch(setDentalProcedure({ show: false }))}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n              {dentalProcedure.mode !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() => handleOnUpdateProcedure(dentalProcedure.index)}\n                  >\n                    Update\n                  </Button>\n                  <Button variant='contained' color='secondary' onClick={() => setOpenDialog(true)}>\n                    Delete\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </Paper>\n\n          <Alert\n            open={openDialog}\n            message='Are you sure you want to delete this procedure?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(false)}\n            onOk={() => handleOnRemoveProcedure(dentalProcedure.index)}\n          />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\n// import ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport DentalChart from 'Pages/Protected/Claims/Components/DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\n// Libraries\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [flag] = React.useState({\n    flag: true\n  })\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_last_name: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.dental_procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields, ...flag }))({ ...data, ...flag })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(base_errors)\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    data['date_to'] = data.date_from\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n              isDental\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.chart}`}>\n              <DentalChart states={constructDentalStates(claim.procedures)} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <DentalProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      date_to: new Date().toISOString(),\n      date_from: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: new Date(data.date.to).toISOString(),\n            date_to: new Date(data.date.to).toISOString(),\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            hospital_items: data.hospital_items || [],\n            loa_number: data.loa_number,\n            medicine_category: data.medicine_category,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            procedures: data.procedures || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data }, true)\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(state => ({ ...state, ...base_errors }))\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push('/')\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              reqLoaNumber\n              reqApprovalCode\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category'\n                  value={claim.medicine_category}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\n// Libraries\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(allowedFields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(base_errors)\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    data['date_to'] = data.date_from\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, onChangePro, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            claim_sub_type: data.claim_sub.type,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(allowedFields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(base_errors)\n    return !!Object.keys(base_errors).length\n  }\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-id'\n                  required\n                  label='PRO/ECU Specialist ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-name'\n                  required\n                  label='PRO/ECU Specialist Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packagers: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        console.log(data)\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            ppe_packagers: data.ppe_packages || [],\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields }))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(state => ({ ...state, ...base_errors }))\n    return !!Object.keys(base_errors).length\n  }\n\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              showMemberAccountNumber={false}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-from'\n                  required\n                  label='Date of Service (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-to'\n                  required\n                  label='Date of Service (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>PPE Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store./ClaimPharmacyValidator\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\n// import moment from 'moment'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initSuggestions } = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            claim_source: data.claim_source,\n            medicine_category: data.medicine_category,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: new Date(data.date.to).toISOString(),\n            date_to: new Date(data.date.to).toISOString(),\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = () => {\n    const data = {}\n    const { ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data }, true)\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(state => ({ ...state, ...base_errors }))\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n    if (hasError) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push('/')\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showClaimSource\n              reqApprovalCode\n              reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={errors.date_from}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category *'\n                  value={claim.medicine_category}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .messages({ 'string.empty': `\"Approval Code\" is required.` })\n    .required(),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .messages({ 'string.empty': `\"LOA No.\" is required.` })\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport MainValidator from './ClaimMedicalSuppliesValidator'\n\n// Store./ClaimMedicalSuppliesValidator\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\n// import moment from 'moment'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: new Date(data.date.to).toISOString(),\n            date_to: new Date(data.date.to).toISOString(),\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = () => {\n    const data = {}\n    const { ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n    const { error = {} } = MainValidator(data)\n    return error\n  }\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(state => ({ ...state, ...base_errors }))\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n    if (hasError) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push('/')\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              reqApprovalCode\n              reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  const { claim, getClaimDetails, apiService } = props\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      client_account_number: '',\n      client_account_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data }, true)\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(base_errors)\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextField\n                  id='client-account-number'\n                  label='Client Account Number *'\n                  value={claim.client_account_number}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'client_account_number'\n                      })\n                    )\n                  }\n                  error={errors.client_account_number}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='client-account-name'\n                  label='Client Account Name *'\n                  value={claim.client_account_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'client_account_name'\n                      })\n                    )\n                  }\n                  error={errors.client_account_name}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfo.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfo (props) {\n  const { show, setShowModal, handleOnSave, doReject, doViewClaimNotice = () => {}, service, lookup } = props\n  const {\n    batch_number,\n    member_last_name,\n    member_first_name,\n    member_middle_name,\n    reimbursement_info: data = []\n  } = props.claim\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [items, setItems] = React.useState([])\n  const [reasonDropdown, setReasonDropdown] = React.useState([])\n\n  React.useEffect(() => {\n    setItems(data)\n  }, [data])\n\n  React.useEffect(() => {\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n      })\n  }, [])\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnClickAdd = () => {\n    setShowAdd(true)\n\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  const handleOnClickSave = ({ item }) => {\n    setItems(items => {\n      const _items = [...items, item]\n      handleOnItemSave(_items)\n      return _items\n    })\n    setShowAdd()\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    items[index] = item\n\n    setItems(items => {\n      let _items = items.map((_item, _index) => {\n        if (_index === index) _item = { ...item, show: false, showCell: false }\n        return _item\n      })\n      handleOnItemSave(_items)\n      return _items\n    })\n  }\n\n  const handleOnClose = () => {\n    setShowModal(false)\n    setItems(items => {\n      return items.map((item, _index) => {\n        item.show = false\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          item.showCell = false\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n\n    handleOnSave(_items)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <ItemForm\n                      reasonDropdown={reasonDropdown}\n                      index={index}\n                      item={item}\n                      handleOnClickCancel={handleOnClickCancel}\n                      handleOnClickUpdate={handleOnClickUpdate}\n                      service={service}\n                      lookup={lookup}\n                      setReasonDropdown={setReasonDropdown}\n                    />\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <ItemForm\n                  index='add'\n                  reasonDropdown={reasonDropdown}\n                  item={{}}\n                  handleOnClickSave={handleOnClickSave}\n                  handleOnClickCancel={handleOnClickCancel}\n                  service={service}\n                  lookup={lookup}\n                  setReasonDropdown={setReasonDropdown}\n                />\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => setRejectModal(true)}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n          <Button\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            onClick={() => doViewClaimNotice({ goBack: false })}\n          >\n            Print Notice\n          </Button>\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n  const { index, item: _item, readOnly, reasonDropdown, service, lookup, setReasonDropdown } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction\n  } = props\n\n  const [item, setItem] = React.useState({})\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setItem({\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: today,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) {\n          item[field] = value\n          item.error = ''\n        }\n        return item\n      })\n    }))\n  }\n\n  const handleOnLookup = args => {\n    const { save = false, update = false } = args\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n        if (save || update) {\n          let hasError = false\n          const reasons = item.reasons\n          const tempReasons = []\n          reasons.map(reason => {\n            const existing = data.filter(i => i.reason === reason.value)\n            if (existing.length === 0) {\n              tempReasons.push({...reason, value: '', error: 'Please Input a Valid Reason'})\n              hasError = true\n            } else tempReasons.push(reason)\n          })\n          setItem({...item, reasons: tempReasons})\n          if (hasError) {\n            return false\n          }\n          if (save) handleOnClickSave({ index, item })\n          if (update) handleOnClickUpdate({ index, item })\n        }\n      })\n  }\n\n  const _handleOnClickUpdate = () => {\n    handleOnLookup({ update: true })\n  }\n\n  const _handleOnClickSave = () => {\n    handleOnLookup({ save: true })\n  }\n\n  return (\n    <TableRow key={`collapsible-${index}`}>\n      <TableCell colSpan={headCells.length} id={`collabsible-cell-${index}`} className={classes['collapsible-cell']}>\n        <div className={`${classes.container} ${!item.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n          <div className={classes.cell}>\n            <Typography variant='h6' className={classes.label}>\n              {index === 'add' ? 'Add Item' : 'Update Item'}\n            </Typography>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-created-${index}`}\n                  label='Date Created'\n                  value={item.date_created}\n                  onChange={event => handleOnChange({ field: 'date_created', value: event.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`prepared-by-${index}`}\n                  label='Prepared By'\n                  value={item.prepared_by || ''}\n                  onChange={event => handleOnChange({ field: 'prepared_by', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-encoded-${index}`}\n                  label='Date Encoded'\n                  value={item.date_encoded}\n                  onChange={event => handleOnChange({ field: 'date_encoded', value: event.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`released-to-${index}`}\n                  label='Released To'\n                  value={item.released_to || ''}\n                  onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-released-${index}`}\n                  label='Date Released'\n                  value={item.date_released}\n                  onChange={event => handleOnChange({ field: 'date_released', value: event.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`return-date-${index}`}\n                  label='Return Date'\n                  value={item.date_return}\n                  disableComponents\n                  onChange={event => handleOnChange({ field: 'date_return', value: event.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']} style={{ width: '50%' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1 }}\n                  multiline\n                  rows={3}\n                  id='remarks'\n                  label='Remarks'\n                  value={item.remarks || ''}\n                  onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n                />\n              </div>\n            </div>\n\n            <div className={classes['reasons-container']}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Reasons\n                </Typography>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Other Details\n                </Typography>\n\n                <div className={classes.delete} />\n              </div>\n\n              {/* Reasons */}\n              {(item.reasons || []).map((item, _index) => (\n                <div className={classes.reasons} key={`reason-${_index}`}>\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <DropDown\n                      items={reasonDropdown}\n                      id={`reason-text-${_index}`}\n                      value={item.value || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })\n                      }\n                      error={item.error}\n                    />\n                  </div>\n\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <TextField\n                      id={`reason-other-details-${_index}`}\n                      value={item.other_details || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                      }\n                    />\n                  </div>\n\n                  <div className={classes.delete}>\n                    <IconButton id='delete-reason'>\n                      <DeleteIcon fontSize='small' onClick={() => handleOnClickRemoveReason(_index)} />\n                    </IconButton>\n                  </div>\n                </div>\n              ))}\n\n              <Typography\n                variant='body2'\n                className={`${classes['add-link']} ${(item.reasons || []).length ? '' : classes['empty-reasons']}`}\n                onClick={() => handleOnClickAddReason()}\n              >\n                + Add a reason\n              </Typography>\n              {/* Reasons */}\n            </div>\n\n            <div className={classes.footer}>\n              <React.Fragment>\n                {!readOnly && (\n                  <React.Fragment>\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      id='cancel'\n                      className='button-negative'\n                      onClick={() => handleOnClickCancel(index)}\n                    >\n                      Cancel\n                    </Button>\n                    {index === 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickSave}\n                        >\n                          Save\n                        </Button>\n                      </React.Fragment>\n                    )}\n                    {index !== 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickUpdate}\n                        >\n                          Update\n                        </Button>\n                      </React.Fragment>\n                    )}\n                  </React.Fragment>\n                )}\n              </React.Fragment>\n            </div>\n          </div>\n        </div>\n      </TableCell>\n    </TableRow>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst Dental = ['doctor_id', 'doctor_name', 'date_from', 'department']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n\n  const additional_fields = type === 'InPatient' ? InPatient : type === 'Dental' ? Dental : other_fields\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ReimbursementInfo from './../../../../ReimbursementInfo/ReimbursementInfo'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\nimport AdditionalFields from './AdditionalFields'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setDentalProcedure,\n  setProfessionalFee,\n  setHospitalItem\n} = actions\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, onChangeDoctor, onChangePro, apiService, doViewClaimNotice = () => {} } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  const [type, setType] = React.useState('')\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      reimbursement_type: props.isAdd ? 'InPatient' : '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      diagnosis: [],\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(props.isAdd ? 'InPatient' : undefined) })\n      setlineItemFields(_lineItemFields)\n      setInitialAllowedFields(_allowedFields)\n\n      const initial_values = { ..._allowedFields, ..._lineItemFields }\n\n      if (props.isAdd) initial_values['date_to'] = new Date().toISOString()\n\n      dispatch(setClaimFields(initial_values))\n\n      // if (result['date_to'] !== undefined)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        setType(data.reimbursement_details.type)\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0].rooms || []).map(room => ({\n              text: room.type,\n              value: room.type,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        let _claim = {\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          reimbursement_type: data.reimbursement_details.type,\n          member_account_number: data.member.account_number,\n          member_last_name: data.member.last_name,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          medicine_category: data.medicine_category,\n          reimbursement_category: data.reimbursement_details.category,\n          official_receipt_number: data.reimbursement_details.official_receipt_number,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          hospital_items: data.hospital_items || [],\n          reimbursement_info: data.reimbursement_info || [],\n          batch_number: data.batch_number,\n          claim_remarks: data.claim_remarks\n\n        }\n\n        if (data.reimbursement_details.type === 'InPatient') {\n          _claim = {\n            ..._claim,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate || 0,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name\n          }\n        } else {\n          _claim = {\n            ..._claim,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            department: data.department\n          }\n        }\n\n        dispatch(setClaimFields(_claim))\n        setAllowedFields({\n          ..._allowedFields,\n          ...AdditionalFields(\n            data.reimbursement_details.type === 'InPatient'\n              ? 'InPatient'\n              : data.reimbursement_details.type === 'Dental'\n                ? 'Dental'\n                : ''\n          )\n        })\n      })\n    }\n    setType(_allowedFields.reimbursement_type)\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({\n      ...data\n    })\n    return error\n  }\n\n  // const validateDiagnosis = () => {\n  //   if (type === 'Dental') {\n  //     return {}\n  //   }\n  //   return DiagnosisListValidator(claim.diagnosis)\n  // }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f] || ''\n\n    if (!data.date_to) {\n      data.date_to = new Date().toISOString()\n    }\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n    setType(value)\n\n    if (value === 'InPatient') {\n      dispatch(\n        setClaimFields({\n          ...claim,\n          date_to: new Date().toISOString()\n        })\n      )\n    } else if (value === 'Dental') {\n      dispatch(\n        setClaimFields({\n          ...claim,\n          reimbursement_type: 'Dental',\n          date_from: new Date().toISOString(),\n          doctor_id: '',\n          doctor_name: ''\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  React.useEffect(() => {\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }, [type])\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showReimbursement\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              // handleMemberAccountNumber={type === 'Dental'}\n              // isDental={type === 'Dental'}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-id'\n                    label='Medical Partner ID'\n                    value={claim.doctor_id}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor.id}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangeDoctor({\n                        field: 'doctor_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.doctor_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-name'\n                    label='Medical Partner (Doctor) Name'\n                    value={claim.doctor_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor.full_name}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangeDoctor({\n                        field: 'doctor_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.doctor_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={errors.date_from}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={errors.date_to}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'date_from') && !(type === 'InPatient') && (\n                <div className={classes['input']}>\n                  <DatePicker\n                    id='date-of-service'\n                    required\n                    label='Date of Service'\n                    value={claim.date_from}\n                    disabled={disableControls}\n                    onChange={event => {\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.toISOString(),\n                          field: 'date_from'\n                        })\n                      )\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.toISOString(),\n                          field: 'date_to'\n                        })\n                      )\n                    }}\n                    error={errors.date_from}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'department') && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='department'\n                    label='Department'\n                    value={claim.department}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'department'\n                        })\n                      )\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <div className={classes['input']}>\n                  <DropDown\n                    id='room-type'\n                    required\n                    label='Room Type'\n                    items={dropDown.rooms}\n                    value={claim.room_type}\n                    disabled={disableControls}\n                    onChange={handleOnChangeRoomType}\n                    error={errors.room_type}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='room-rate'\n                    required\n                    label='Room Rate'\n                    value={claim.room_rate}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'room_rate'\n                        })\n                      )\n                    }\n                    error={errors.room_rate}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-id'\n                    required\n                    label='PRO ID'\n                    value={claim.pro_id}\n                    suggestions={suggestions.pro.id}\n                    disabled={disableControls}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangePro({\n                        field: 'pro_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-name'\n                    required\n                    label='PRO Name'\n                    value={claim.pro_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.pro.name}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangePro({\n                        field: 'pro_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.pro_name}\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              <div className={classes['input']}>\n                <TextField\n                  id='official-receipt-number'\n                  label='Official Receipt Number'\n                  value={claim.official_receipt_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'official_receipt_number'\n                      })\n                    )\n                  }\n                  error={errors.official_receipt_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental={type === 'Dental'} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  {/* temporary dental proc  dental_procedure */}\n                  <DentalProcedureForm diagnosis={claim.diagnosis} />\n                  <ProcedureForm diagnosis={claim.diagnosis} />\n                  <HospitalItemForm diagnosis={claim.diagnosis} />\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            setShowReimbursementModal={setShowReimbursementModal}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <ReimbursementInfo\n            claim={claim}\n            doViewClaimNotice={doViewClaimNotice}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            service={apiService}\n            handleOnSave={reimbursement_info =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: reimbursement_info,\n                  field: 'reimbursement_info'\n                })\n              )\n            }\n            lookup={'return-reason'}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport ClaimTypes from '../../../Constant/ClaimTypes'\n\nexport default function GetClaimComponent (_props) {\n  const { _type, ...props } = _props\n\n  const SelectecClaimType = selected => {\n    const type = ClaimTypes[selected].other_name\n\n    switch (type) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        break\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport GetClaimComponent from './GetClaimComponent'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\nconst {\n  resetClaim,\n  setGrandTotal,\n  setClaimType,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setClaimFacility,\n  setClaimDoctor,\n  addSuggestionToArray,\n  resetGrandTotal,\n  setClaimPro\n} = actions\n\nexport default function ClaimPage (props) {\n  const { apiService } = props\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsEncoding: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const getBatchDetails = ({ _batchNumber }) => {\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      dispatch(setClaimType(data.claim.type))\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    LoadingService.loading(true)\n    const { _batchNumber, _claimNumber } = props.match.params\n\n    let pageTitle = ''\n    let breadCrumbs = ['dashboard', 'batches', `specificBatch:${_batchNumber}`]\n    if (props.isAdd) {\n      pageTitle = 'Add new claim'\n      breadCrumbs = [...breadCrumbs, 'addClaim']\n    } else {\n      pageTitle = `Update Claim No. ${_claimNumber}`\n      breadCrumbs = [...breadCrumbs, 'updateClaim']\n    }\n\n    PageTitleService(pageTitle)\n    BreadcrumbsService.setSelectedItems(breadCrumbs)\n    getBatchDetails({ _batchNumber })\n\n    return () => {\n      dispatch(setClaimType(''))\n      dispatch(resetClaim())\n      dispatch(resetGrandTotal())\n    }\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    dispatch(setGrandTotal(grand))\n  }, [claim])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const getClaimDetails = callback => {\n    const { _batchNumber, _claimNumber } = props.match.params\n    apiService\n      .getClaim({\n        batch_number: _batchNumber,\n        claim_number: _claimNumber\n      })\n      .then(res => {\n        const { data } = res.data\n        // Set Diagnosis Suggestions\n        const { diagnosis = [] } = data\n        diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n\n        callback(data)\n      })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimFacility({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          dispatch(setClaimFacility({ facility_id: i.id, facility_name: i.name }))\n          dispatch(resetSuggestionObject({ field: 'facility' }))\n          return i.rooms\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'facility' }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'medical-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionObject({\n                  field: 'facility',\n                  suggestion: { [by]: _items, data }\n                })\n              )\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionObject({\n                  field: 'doctor',\n                  suggestion: { [by]: _items, data }\n                })\n              )\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimPro({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.pro.data) {\n        if (value === i.employee_id || value === i.name) {\n          dispatch(setClaimPro({ pro_name: i.name, pro_id: i.employee_id }))\n          dispatch(resetSuggestionObject({ field: 'pro' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // PRO User lookup\n          CustomerCareServices.proUsersLookup({ value, field }).then(res => {\n            // limit temporary - no limit in api seer\n            const limit = []\n            for (let i = 0; i < 10; i++) {\n              if (!res.data.data[i]) break\n              limit.push(res.data.data[i])\n            }\n\n            const data = limit.map(elem => {\n              let full_name = `${elem.first_name} ${elem.last_name}`\n              delete elem.first_name\n              delete elem.last_name\n              return { ...elem, name: full_name }\n            })\n\n            let _items = []\n\n            if (field === 'pro_id') {\n              for (let d of data) {\n                _items.push(d[`employee_${field.split('_')[1]}`])\n              }\n            } else {\n              for (let d of data) {\n                _items.push(d['name'])\n              }\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'pro',\n                suggestion: { [`${field.split('_')[1]}`]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.anesthesiologist.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ anesthesiologist_id: i.id, anesthesiologist_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by })\n    }\n  }\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionObject({\n                  field: 'anesthesiologist',\n                  suggestion: { [by]: _items, data }\n                })\n              )\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Report: Claim Notice\n  const handleOnViewClaimNotice = mode => {\n    LoadingService.loading(true)\n    const { _claimNumber } = props.match.params\n    const pdf = {\n      name: 'Claims Notice',\n      fileName: 'claim_notice',\n      service: apiService.getLetterNotice({ claim_number: _claimNumber })\n    }\n    PdfViewer2Service({ ...pdf, open: true })\n    LoadingService.loading(false)\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type && (\n        <GetClaimComponent\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n          onChangePro={handleOnChangePro}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          doViewClaimNotice={handleOnViewClaimNotice}\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder\nimport Dashboard from './../Components/ClaimsDetailsEncoder/Dashboard/Dashboard'\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nfunction ClaimsDetailsEncoderRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n    </Switch>\n  )\n}\n\nexport default ClaimsDetailsEncoderRoutes\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\nconst columns = [\n  { id: 's-encoder-name', name: ' Encoder Name', sortField: 'username', match: 'start' },\n  { id: 's-total-batches', name: ' Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'any' }\n]\nconst ClaimsEncoderTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    getEncoders('CLAIMS_DETAILS_ENCODER')\n  }, [])\n\n  const getEncoders = role => {\n    services\n      .getEncodersBatches({ role, param: { limit: 10, sort: 'name|asc' } })\n      .then(res => {\n        const { result } = res.data.data.data\n        const { count } = res.data.data\n        setBatches(state => ({ ...state, count, data: result }))\n      })\n      .catch(err => {\n        console.error(err)\n        setBatches(state => ({ ...state, count: 0, data: [] }))\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    setViewList({ ...initialValue, show: true, title: startCase(`${category} Batches`), category })\n    services\n      .getEncodersBatches({ role: 'CLAIMS_DETAILS_ENCODER', param: { limit: 10, sort: 'name|asc' } })\n      .then(({ data: res }) => {\n        const { result, count } = res.data.data\n        setViewList(state => ({ ...state, data: result, count }))\n        // setViewList(state => ({ ...state, page, limit }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n    services.getEncodersBatches({ role: 'CLAIMS_DETAILS_ENCODER', param: { ..._params } }).then(({ data: res }) => {\n      const { result, count } = res.data.data\n      const { limit, page } = res.data\n      setViewList(state => ({ ...state, data: result, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-encoder'\n        count={{ color: 3, value: batches.count, id: 'claims-encoder-count' }}\n        isFilterShown={false}\n        title='Claims Encoder'\n        sizes={sizes}\n        viewList={\n          <Typography\n            id='ob-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('claim-encoder')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={() => {}}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`ces-${item.id}`} id={`ces-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`ces-encoder-name-${index}`}>{item.username}</TableCell>\n                <TableCell id={`ces-total-batches-${index}`}>{item.total_batches}</TableCell>\n                <TableCell id={`ces-total-rcs-${index}`}>{item.total_rcs}</TableCell>\n                <TableCell>\n                  <Link to={`/batches/assigned/${item.id}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for encoder name, total bundle or total batch'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.id}>\n              <TableCell id={`batch-number-${index}`}>{item.username}</TableCell>\n              <TableCell id={`date-received-${index}`}>{item.total_batches}</TableCell>\n              <TableCell id={`due-date-${index}`}>{item.total_rcs}</TableCell>\n              <TableCell id={`view-encoder-${index}`}>\n                <Link to={`/batches/assigned/${item.id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsEncoderTile\n","import instance from '../instance'\n// import ClaimsEncodingServices from '../ClaimsEncodingServices'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ces')\n\nexport default class ClaimsEncoderSupervisorServices {\n  static getEncodersBatches (params) {\n    return axios({\n      url: `/batches/encoders`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatches (params) {\n    return axios({\n      url: `/batches/encoders/assigned`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatch (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderClaims (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign (params) {\n    return axios({\n      url: `/batches/encoders/reassign`,\n      method: 'POST',\n      params\n    })\n  }\n\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={`${classes.tiles} ${classes.row}`} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 8 }} title='Claims Encoding'>\n            <OpenBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n\n          <Grid item className={classes['task-tray-monitor']}>\n            <TaskTray sizes={{ xs: 8 }} title='Items to Monitor'>\n              <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            </TaskTray>\n          </Grid>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell id='cvs-ticket-no'>Ticket #</TableCell>\n                      <TableCell id='cvs-date'>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell id={`cvs-ticket-no-${index}`}>2334324343</TableCell>\n                        <TableCell id={`cvs-date-${index}`}>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nconst { setReassignAssignee, setReassignNotes } = actions\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n  const dispatch = useDispatch()\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => dispatch(setReassignNotes(event.target.value))}\n                // onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.assignee.id}\n                  // onChange={event =>\n                  //   dispatch(\n                  //     setEscalationAssignee({\n                  //       id: event.target.value,\n                  //       name: event.target.value\n                  //     })\n                  //   )\n                  // }\n                  onChange={event => {\n                    dispatch(\n                      setReassignAssignee({\n                        id: event.target.value,\n                        name: event.target.value\n                      })\n                    )\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n          {/*\n          <DialogActions>\n            <Button\n              onClick={() => setDialog(false)}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-negative'\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {}}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-positive'\n            >\n              Submit\n            </Button>\n          </DialogActions> */}\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign SOA to Claim Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the SOA to the selected Claim Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This SOA will be sent to the assigned Claim Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign()\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// lodash\nimport { sortBy } from 'lodash'\n\n// Component\nimport AssignDialog from '../AssignDialog/AssignDialog'\n\nconst { resetReassign, setReassignNotes } = actions\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmitReassign = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    UserManagementServices = () => {},\n    count,\n    _id = ''\n  } = props\n\n  const dispatch = useDispatch()\n  // const [count, setCount] = React.useState(0)\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  // const reassign = useSelector(({ClaimsEncoding: state}) =>  state.reassign)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  const initDropdownUsers = async ({ roles }) => {\n    UserManagementServices.getUsersByRole(roles).then(({ data = [] }) => {\n      let users = data\n        .map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n        .filter(i => i.value !== _id)\n\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  // const handleOnsubmitReassign = (batches, user_id) => {\n  //   console.log(batches)\n  //   console.log(user_id)\n  // }\n\n  const handleOnOpenDialog = () => {\n    if (count === 0) return\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: 'CLAIMS_DETAILS_ENCODER' })\n    // setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignNotes(''))\n    // setReassignModal(state => ({ ...state, dialog: true }))\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography variant='subtitle2'>Total Batches Selected: {count} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                disabled={count < 1}\n                color='primary'\n                id='btn-assign'\n                className='button-positive'\n                onClick={() => handleOnOpenDialog()}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='btn-cancel'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitReassign}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Paper from '@material-ui/core/Paper'\n\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\n\n// Styles\nimport classes from './CreatedBatchesPage.module.scss'\n\nexport default function CreatedBatchesPage (props) {\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const [headcell, setHeadCell] = React.useState([\n    { id: 's-batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'any' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'date_received', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n    { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'number' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n  ])\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    // data: [],\n    filter: {},\n    orderBy: 'batch_number',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  }\n\n  // const [viewList, setViewList] = React.useState(initialValue)\n\n  const [batch, setBatch] = React.useState({})\n  const [batches, setBatches] = React.useState(initialValue)\n  const [id, setId] = React.useState(null)\n  const [selected, setSelected] = React.useState({ batch_numbers: [] })\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Created Batches')\n    BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${props.match.params._id}`])\n    LoadingService.loading(true)\n\n    const _id = props.match.params._id\n    getBatches(batches)\n    setId(_id)\n  }, [props.match.params.id])\n\n  const getBatches = params => {\n    ClaimsEncoderSupervisorServices.getEncoderBatches({\n      id: props.match.params._id,\n      search: params.search,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      filter: params.filter,\n      limit: params.limit\n    })\n      .then(res => {\n        const { results = [], count, limit, page } = res.data.data\n        setBatches(state => ({ ...state, count, limit, page }))\n\n        const data = results.map(batch => ({ ...batch, checked: false }))\n\n        // if (data) setSelectStatus(false)\n        setSelected({ batch_numbers: [] })\n        setBatch({\n          data: data,\n          loading: false,\n          indeterminate: undefined,\n          checked: undefined\n        })\n        LoadingService.loading(false)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }\n\n  const handleSelectAll = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.checked = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleItemSelect = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.checked = !i.checked\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.checked) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n\n    setSelected({ batch_numbers: batchNumbers })\n  }\n\n  const handleOnCancel = () => {\n    let _data = batch.data.map(i => ({ ...i, checked: false }))\n\n    setBatch(state => ({ ...state, data: _data, checked: false, indeterminate: undefined }))\n    setSelectStatus(false)\n    setSelected({ batch_numbers: [] })\n  }\n\n  const handleOnSubmitReassign = () => {\n    LoadingService.loading(true)\n    ClaimsEncoderSupervisorServices.reassign({\n      selected: selected.batch_numbers,\n      id: reassign.assignee.id,\n      notes: reassign.note,\n      prev_user: id\n    }).then(() => {\n      setSelected({ batch_numbers: [] })\n      getBatches(batches)\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnSearchAllChange = args => {\n    getBatches({ ...batches, ...args })\n  }\n\n  const handleOnSearch = args => {\n    const { field, value, match } = args\n    const params = {\n      ...batches,\n      filter: { [field]: { value, match } }\n    }\n    getBatches(params)\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...batches,\n      ...args\n    }\n    setBatches(state => ({ ...state, ...args }))\n    getBatches(params)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox\n                color='default'\n                indeterminate={!!batch.indeterminate}\n                checked={!!batch.checked}\n                onClick={event => handleSelectAll()}\n              />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={batches.orderBy === headCell.sortField}\n                direction={batches.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !batches.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              <TextField\n                id={`column-filter-${headCell.id}`}\n                // className={`${classes.search}`}\n                TextFieldStyle={{ margin: 0 }}\n                fullWidth\n                onChange={event => {\n                  const search = event.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      handleOnSearch({\n                        field: headCell.sortField,\n                        value: search,\n                        match: headCell.match\n                      })\n                    }, 500)\n                  )\n                }}\n              />\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return batch.data\n        ? batch.data.map((row, index) => (\n          <TableRow key={index}>\n            {selectStatus ? (\n              <TableCell padding='checkbox'>\n                <Checkbox\n                  checked={row.checked}\n                  color='default'\n                  onClick={event => handleItemSelect({ index, batch })}\n                />\n              </TableCell>\n            ) : null}\n            <TableCell id={`batch-number-${index}`}>{row.batch_number}</TableCell>\n            <TableCell id={`date-received-${index}`}>{DateFormatter(row.date_received)}</TableCell>\n            <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n            <TableCell align='center' id={`total-rcs-${index}`}>\n              {row.total_rcs}\n            </TableCell>\n            <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n            <TableCell id={`view-encoder-${index}`}>\n              <Typography\n                variant='caption'\n                className='text-link underline'\n                onClick={() => props.history.push(`/batches/assigned/${id}/${row.batch_number}`)}\n              >\n                  View\n              </Typography>\n            </TableCell>\n          </TableRow>\n        ))\n        : null\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                id='reassign-btn'\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => {\n                  const search = e.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      handleOnSearchAllChange({ search, page: 1 })\n                      setBatches(state => ({ ...state, search }))\n                    }, 500)\n                  )\n                }}\n                placeholder='Search for batch number, date or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={batches.count}\n              page={batches.page}\n              limit={batches.limit}\n              pagination\n              rowsPerPageOptions={batches.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            count={selected.batch_numbers.length ? selected.batch_numbers.length : 0}\n            handleOnSubmitReassign={handleOnSubmitReassign}\n            UserManagementServices={UserManagementServices}\n            handleOnCancel={() => handleOnCancel()}\n            handleOnClose={() => props.history.push(`/`)}\n            _id={id}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails (props) {\n  const { details = {} } = props\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const { count, inputChange = null } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims ({count})</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({ items, type, pagination, setPagination }) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  React.useEffect(() => {\n    setClaims({\n      data: items\n    })\n  }, [items])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleItemClick = index => {}\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        handleRequestSort={handleRequestSort}\n        pagination={pagination}\n        rowsLength={rows.length}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow tabIndex={-1} key={row.claim_number}>\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code}\n                </TableCell>\n                <TableCell\n                  id={`member-name-${index}`}\n                  onClick={() => handleItemClick(index)}\n                >{`${row.member.first_name} ${row.member.last_name}`}</TableCell>\n                <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.member.account_number}\n                </TableCell>\n\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ProviderSchedule from '../../../ClaimsDetailsEncoder/Components/ProviderSchedule/ProviderSchedule'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [debounce, setDebounce] = React.useState(null)\n  const [id, setId] = React.useState()\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const getClaimsAndCount = ({ batch_number }) => {\n    ClaimsEncoderSupervisorServices.getClaims({\n      batch_number,\n      params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n    }).then(res => {\n      const { results, count, page, limit } = res.data.data\n      setClaims(results)\n      setClaimCount(count)\n      setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n    })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const batch_number = props.match.params._batchNumber\n    const _id = props.match.params._id\n    setId(_id)\n    setBatchNumber(batch_number)\n\n    ClaimsEncoderSupervisorServices.getEncoderBatch({ id: _id }, batch_number).then(res => {\n      const { data } = res.data\n\n      setDetails(data)\n      LoadingService.loading(false)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${_id}`, `specificBatch:${batch_number}`])\n\n      PageTitleService(`Batch No. ${batch_number}`, {\n        text: 'In Progress',\n        color: 'blue'\n      })\n\n      getClaimsAndCount({ batch_number: batch_number })\n    })\n  }, [props.match.params._batchNumber, props.match.params._id])\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader inputChange={handleSearchChange} count={claimCount} />\n          <ClaimList pagination={pagination} setPagination={setPagination} items={claims} type={details.claim.type} />\n\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push(`/batches/assigned/${id}`)}\n              >\n                Close\n              </Button>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder Supervisor\nimport Dashboard from './../Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Details Encoder\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nfunction ClaimsDetailsEncoderSupervisorRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n    </Switch>\n  )\n}\n\nexport default ClaimsDetailsEncoderSupervisorRoutes\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport { Link } from 'react-router-dom'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'latest.date.due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'latest.facility.name', match: 'any' }\n]\n\nconst ForAdjudicationTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({\n    open: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'open',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'open' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, open: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnAnalyze = claim_number => {\n    services.assignClaim({ claim_number }).then(({ data: res }) => {\n      props.history.push(`/claims/${claim_number}/analyze`)\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-adjudication'\n        count={{ color: 3, value: claims.open.count, id: 'for-adjudication-count' }}\n        sizes={sizes}\n        title='For Adjudication'\n        viewList={\n          <Typography\n            id='fa-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('open')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('open')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='fa-claim-no'>Claim No.</TableCell>\n              <TableCell id='fa-due-date'>Due Date</TableCell>\n              <TableCell id='fa-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.open.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  {/* { item.claim_number.startsWith('IP') && */}\n                  <Typography\n                    id={`analyze-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnAnalyze(item.claim_number)}\n                  >\n                    Analyze\n                  </Typography>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList2\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`analyze-cell-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  id={`analyze-claim-${index}`}\n                  onClick={() => {\n                    handleOnAnalyze(item.claim_number)\n                  }}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForAdjudicationTile.displayName = 'DashboardTileComponent'\n\nexport default ForAdjudicationTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'latest.date.due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'latest.facility.name', match: 'any' }\n]\n\nconst MyClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    my: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'my',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'my' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, my: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-claims'\n        count={{ color: 3, value: claims.my.count, id: 'my-claims-count' }}\n        sizes={sizes}\n        title='My Claims'\n        viewList={\n          <Typography\n            id='mc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('my')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('my')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='mc-claim-no'>Claim No.</TableCell>\n              <TableCell id='mc-due-date'>Due Date</TableCell>\n              <TableCell id='mc-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.my.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`mc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`mc-facility-name${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  {/* { item.claim_number.startsWith('IP') && */}\n                  <Link to={`/claims/${item.claim_number}/analyze`}>\n                    <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                      Update\n                    </Typography>\n                  </Link>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList2\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`update-cell-${index}`}>\n                <Link to={`/claims/${item.claim_number}/analyze`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-claim-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default MyClaimsTile\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\nimport PrintIcon from '@material-ui/icons/Print'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'latest.claim_number' },\n  { id: 'due-date', name: ' Due Date', sortField: 'latest.date.due' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange, onItemClick }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell\n                id={\n                  category === 'open'\n                    ? `analyze-claim-${index}`\n                    : category === 'my'\n                    ? `update-claim-${index}`\n                    : category === 'submitted'\n                    ? `print-${index}`\n                    : `update-esc-claim-${index}`\n                }\n              >\n                {category === 'submitted' && (\n                  <React.Fragment>\n                    <IconButton\n                      id={`print-${index}`}\n                      aria-label='more'\n                      aria-controls='long-menu'\n                      aria-haspopup='true'\n                      onClick={event =>\n                        onItemClick({ category, claim_number: row.claim_number, event: event, claim: row })\n                      }\n                    >\n                      <PrintIcon />\n                    </IconButton>\n                  </React.Fragment>\n                )}\n\n                {category !== 'submitted' && (\n                  <Typography\n                    variant='caption'\n                    className='text-link underline'\n                    onClick={() => onItemClick({ category, claim_number: row.claim_number })}\n                  >\n                    {category === 'open' && 'Analyze'}\n                    {category === 'my' && 'Update'}\n                    {category === 'escalated' && 'Update'}\n                  </Typography>\n                )}\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Print from '@material-ui/icons/Print'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst SubmittedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claimNumber, setClaimNumber] = React.useState(false)\n  const [claimType, setClaimType] = React.useState(null)\n  const [disableLoaButton, setDisableLoaButton] = React.useState(false)\n  const ITEM_HEIGHT = 48\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const open = Boolean(anchorEl)\n\n  function handleClickSubmitted (event, claim) {\n    setAnchorEl(event.currentTarget)\n    setClaimNumber(claim.claim_number)\n    setClaimType(claim._type)\n    setDisableLoaButton(!claim.has_amount_concerns)\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const [claims, setClaims] = React.useState({\n    submitted: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, submitted: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    handleClickSubmitted(event, claim)\n  }\n\n  const handleOnShowPdf = ({ claim_number, type }) => {\n    setAnchorEl()\n\n    let pdf = {}\n\n    switch (type) {\n      case 'letter_of_advice':\n        pdf = {\n          name: 'Letter of Advice',\n          service: services.getLetterOfAdvice({ claimNo: claim_number })\n        }\n        break\n\n      case 'analysis_sheet':\n        pdf = {\n          name: 'Analysis Sheet',\n          service: services.getAnalysisSheet({ claimNo: claim_number })\n        }\n\n        break\n\n      case 'notice':\n        pdf = {\n          name: 'Claim Notice',\n          service: services.getLetterNotice({ claimNo: claim_number })\n        }\n        break\n    }\n\n    PdfViewer2Service({ ...pdf, open: true, fileName: type })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-claims'\n        count={{ color: 5, value: claims.submitted.count, id: 'submitted-claims-count' }}\n        sizes={sizes}\n        title='Submitted Claims'\n        viewList={\n          <Typography\n            id='sc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('submitted')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('submitted')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='sc-claim-no'>Claim No.</TableCell>\n              <TableCell id='sc-due-date'>Due Date</TableCell>\n              <TableCell id='sc-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.submitted.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`sc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`sc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`sc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <IconButton\n                    id={`print${index}`}\n                    aria-label='more'\n                    aria-controls='long-menu'\n                    aria-haspopup='true'\n                    onClick={e => handleClickSubmitted(e, item)}\n                  >\n                    <Print />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n            <Menu\n              id='long-menu'\n              anchorEl={anchorEl}\n              keepMounted\n              open={open}\n              onClose={handleClose}\n              style={{\n                zIndex: 1310\n              }}\n              PaperProps={{\n                style: {\n                  maxHeight: ITEM_HEIGHT * 4.5,\n                  width: claimType === 'Reimbursement' ? 280 : 200\n                }\n              }}\n            >\n              <MenuItem onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'analysis_sheet' })}>\n                {claimType === 'Reimbursement' ? 'Approved Reimbursement Letter' : 'Analysis Sheet'}\n              </MenuItem>\n              {/* {disableLoaButton ? ( */}\n              <MenuItem\n                disabled={disableLoaButton}\n                onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'letter_of_advice' })}\n              >\n                {claimType === 'Reimbursement' ? 'Rejected Reimbursement Letter' : 'Letter Of Advice'}\n              </MenuItem>\n            </Menu>\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedClaimsTile.displayName = 'DashboardTileComponent'\nexport default SubmittedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ReturnedEscalatedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    escalated: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'escalated',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'escalated' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, escalated: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Returned Escalated Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    props.history.push(`/claims/${claim_number}/analyze`)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='returned-escalated'\n        count={{ color: 3, value: claims.escalated.count, id: 'returned-escalated-count' }}\n        sizes={sizes}\n        title='Returned Escalated Claims'\n        viewList={\n          <Typography\n            id='re-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('escalated')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('escalated')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='re-claim-no'>Claim No.</TableCell>\n              <TableCell id='re-due-date'>Due Date</TableCell>\n              <TableCell id='re-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.escalated.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`re-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`re-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`re-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`re-update-claim-${index}`}>\n                  <Link to={`/claims/${item.claim_number}/analyze`}>\n                    <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                      Update\n                    </Typography>\n                  </Link>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nReturnedEscalatedClaimsTile.displayName = 'DashboardTileComponent'\nexport default ReturnedEscalatedClaimsTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from '../../Tiles/ForAdjudicationTile'\nimport MyClaimsTile from '../../Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from '../../Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from '../../Tiles/ReturnedEscalatedClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForAdjudicationTile services={ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <ReturnedEscalatedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Analyst\nimport Dashboard from './../Components/ClaimsAnalyst/Dashboard/Dashboard'\n\n// Components\nimport ClaimsViewer from './../Components/ClaimsViewer'\nimport ClaimsUtilLedgerReport from './../Components/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  },\n  {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: [{ label: 'Generate Utilization Ledger', to: '/reports' }]\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  reports: {\n    text: 'Reports'\n  }\n}\n\nconst permissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  reimbursement_info: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    return_advice: { visible: true, enabled: true, options: {} },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nfunction ClaimsAnalystRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/reports' exact render={() => <ClaimsUtilLedgerReport />} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsAdjudicationServices}\n          />\n        )}\n      />\n    </Switch>\n  )\n}\n\nexport default ClaimsAnalystRoutes\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nconst ForPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'payment-request',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'payment-request' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const paymentRequestClaims = batchResponse.data.data.results\n      const paymentRequestClaimCount = batchCountResponse.data.data\n      setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'For Payment Request'\n    const category = 'payment-request'\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'payment-request'\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'payment-request',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-payment-request'\n        count={{ color: 3, value: claims.count, id: 'for-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'For Payment Request' : mTitle}\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`for-pr-${item.id}`} id={`for-pr-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-request/${item.bundle_number}`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                      Request Payment\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default ForPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nconst SubmittedPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const paymentRequestClaims = batchResponse.data.data.results\n      const paymentRequestClaimCount = batchCountResponse.data.data\n      setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Submitted PR'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'submitted'\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-pr'\n        count={{ color: 3, value: claims.count, id: 'submitted-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'Submitted PR' : mTitle}\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='submitted-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`submitted-pr-${item.id}`} id={`submitted-pr-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nconst OverrideClaimTile = props => {\n  const { services, sizes } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'override',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'override' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const paymentRequestClaims = batchResponse.data.data.results\n      const paymentRequestClaimCount = batchCountResponse.data.data\n      setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Override Claim'\n    const category = 'override'\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'override'\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'override',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='override-claim'\n        count={{ color: 5, value: claims.count, id: 'override-claim-count' }}\n        sizes={sizes}\n        title='Override Claim'\n        viewAllLink={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`oc-${item.id}`} id={`oc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell>{item.claim_number}</TableCell>\n                <TableCell>{item.soa.number || item.bundle_number}</TableCell>\n                <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-request/${item.bundle_number}`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                      Request Payment\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`oc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`oc-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`oc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`oc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOverrideClaimTile.displayName = 'DashboardTileComponent'\n\nexport default OverrideClaimTile\n","import instance from './instance'\nconst axios = instance('/c/pr')\n\nexport default class PaymentRequestServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequest ({ bundle_number }) {\n    return axios({\n      url: `/payment-request/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getPaymentRequestBatches ({ bundle_number, params }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static submit ({ bundle_number, data }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/submit`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPaymentRequestTile from './../../../Components/Tiles/SubmittedPaymentRequestTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// CSS\nimport classes from './PaymentRequestPage.module.scss'\n\nconst pendingHeadCells = [\n  { id: 'pending-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n  { id: 'pending-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'pending-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'pending-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  {\n    id: 'pending-discount-amount',\n    numeric: true,\n    center: true,\n    disablePadding: false,\n    label: 'Hospital Discount Amount'\n  }\n]\nconst submittedHeadCells = [\n  { id: 'submitted-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n  { id: 'submitted-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'submitted-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'submitted-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  {\n    id: 'submitted-discount-amount',\n    numeric: true,\n    center: true,\n    disablePadding: false,\n    label: 'Hospital Discount Amount'\n  }\n]\nexport default function PaymentRequestPage (props) {\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n\n  const [batches, setBatches] = React.useState({\n    pending: { data: [], header: {}, loading: true },\n    submitted: { data: [], header: {}, loading: true }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n\n    PageTitleService(`Request for Payment: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Pending Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'pending' } }).then(\n      ({ data: res }) => resetBatches({ type: 'pending', data: res.data, bundle })\n    )\n\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = `${data.length} / ${bundle.total_batch}`\n    const total_rcs = `${data.reduce((acc, batch) => acc + batch.claims.length, 0)} / ${bundle.total_rcs}`\n\n    data = data.map(i => ({\n      ...i,\n      selected: false,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          approved_amount,\n          pr_amount: 0\n        },\n        loading: false,\n        indeterminate: undefined,\n        checked: undefined\n      }\n    }))\n  }\n\n  const handleClick = ({ index, batches: selectedBatches }) => {\n    const _batch = {\n      ...batches[selectedBatches],\n      data: batches[selectedBatches].data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const handleSelectAllClick = ({ batches: selectedBatches }) => {\n    let _batch = batches[selectedBatches]\n\n    _batch.data.map(i => {\n      i.selected = _batch.indeterminate ? true : !_batch.checked\n      return i\n    })\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const changeSelectAllState = ({ batches: selectedBatches, data }) => {\n    let _batch = data || batches[selectedBatches]\n\n    let selected_count = 0\n    let pr_amount = 0\n    for (let b of _batch.data) {\n      if (b.selected) {\n        pr_amount += b.total_amount\n        selected_count++\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batch.data.length : false\n    let checked = selected_count ? selected_count === _batch.data.length : false\n\n    _batch = { ..._batch, indeterminate, checked, header: { ..._batch.header, pr_amount } }\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n  }\n\n  const handleOnSubmit = () => {\n    let selected = getSelectedPending(batches.pending.data)\n\n    if (!selected.length) {\n      return setDialog({\n        open: true,\n        // message: 'Please select a batch for submission to Treasury Department.',\n        message: 'User must select first a batch for submission.',\n        okLabel: 'Close',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    const onOk = () => {\n      LoadingService.loading(true)\n      setDialog(state => ({ ...state, open: false }))\n      const requestBatch = []\n\n      for (let select of selected) {\n        const claims = select.claims.map(claim => {\n          return claim.claim_number\n        })\n        requestBatch.push(PaymentRequestServices.submit({ bundle_number, data: { claims } }))\n      }\n\n      Promise.all(requestBatch).then(\n        ({ data: res }) => {\n          const data = batches.pending.data.filter((i, index) => {\n            let should_include = true\n            for (let s of selected) {\n              if (s.index === index) {\n                should_include = false\n                break\n              }\n            }\n            if (should_include) return i\n          })\n          resetBatches({ type: 'pending', data, bundle })\n          resetBatches({ type: 'submitted', data: [...selected, ...batches.submitted.data], bundle })\n          LoadingService.loading(false)\n        },\n        err => {\n          console.log(err)\n        }\n      )\n    }\n\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to submit?',\n      okLabel: 'Yes',\n      cancelLabel: 'No',\n      onCancel: () => setDialog(state => ({ ...state, open: false })),\n      onOk\n    })\n  }\n\n  const handleOnCancel = () => {\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to cancel?',\n      okLabel: 'Yes',\n      onOk: () => props.history.push(`/`),\n      cancelLabel: 'Close',\n      onCancel: () => setDialog(state => ({ ...state, open: false }))\n    })\n  }\n\n  const getSelectedPending = data => {\n    return data.filter((i, index) => {\n      if (i.selected) {\n        i.index = index\n        return i\n      }\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {bundle ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header}>Total Batches: {batches.pending.header.total_batches}</Typography>\n              <Typography className={classes.header}>Total RCS: {batches.pending.header.total_rcs}</Typography>\n              <Typography className={classes.header}>\n                Total Approved Amount: PHP{' '}\n                <span id='total-approved-amount'>{CurrencyFormatter(batches.pending.header.approved_amount)}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total PR Amount: PHP{' '}\n                <span id='total-pr-amount'>{CurrencyFormatter(batches.pending.header.pr_amount)}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total Discount Amount: PHP{' 0.00'}\n                {/* <span id='total-discount-amount'>{CurrencyFormatter(batches.pending.header.discount_amount)}</span> */}\n              </Typography>\n            </div>\n\n            <EnhancedTable\n              className={classes.table}\n              headCells={pendingHeadCells}\n              handleSelectAllClick={() => handleSelectAllClick({ batches: 'pending' })}\n              indeterminate={!!batches.pending.indeterminate}\n              checked={!!batches.pending.checked}\n              checkAll\n              checkboxColor='default'\n              selectStatus\n            >\n              <TableBody>\n                {batches.pending.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      onClick={event => handleClick({ index, batches: 'pending' })}\n                      role='checkbox'\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell padding='checkbox'>\n                        <Checkbox checked={batch.selected} color='default' />\n                      </TableCell>\n                      <TableCell align='left' id={`pending-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`pending-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`pending-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`pending-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`pending-discount-amount-${index}`}>\n                        {/* {CurrencyFormatter(batch.discoun_amount)} */}\n                        0.00\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n                {!batches.pending.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              onClick={handleOnCancel}\n              id='cancel'\n            >\n              Cancel\n            </Button>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={handleOnSubmit}\n              id='submit'\n            >\n              Submit\n            </Button>\n          </div>\n\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes['submit-header']}>Submitted Batches</Typography>\n            </div>\n            <EnhancedTable className={classes.table} headCells={submittedHeadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      // hover\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell align='left' id={`submitted-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`submitted-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`submitted-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`submitted-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`submitted-discount-amount-${index}`}>\n                        {/* {CurrencyFormatter(batch.discount_amount)} */}\n                        0.00\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\n\n// CSS\nimport classes from './SubmittedPaymentRequestPage.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: false, center: true, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: false, center: true, disablePadding: false, label: 'Hospital Discount Amount' }\n]\n\nconst prManagerheadCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: false, center: true, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: false, center: true, disablePadding: false, label: 'Hospital Discount Amount' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const { supervisor, isManager } = props\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n\n  const [batches, setBatches] = React.useState({\n    submitted: { data: [], header: {} }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n    PageTitleService(`Submmited PR: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = data.length\n    const total_rcs = data.reduce((acc, batch) => acc + batch.claims.length, 0)\n\n    data = data.map(i => ({\n      ...i,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          pr_amount: approved_amount\n        }\n      }\n    }))\n  }\n  const approved_by_uid = bundle ? bundle.approved_by_uid : ''\n\n  return (\n    <div className={classes.root}>\n      {bundle && approved_by_uid ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header} align='center'>\n                Total Batches: {batches.submitted.header.total_batches}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total RCS: {batches.submitted.header.total_rcs}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total PR Amount: PHP{' '}\n                <span id='total-pr-amount'>{CurrencyFormatter(batches.submitted.header.pr_amount)}</span>\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total Discount Amount: PHP{' 0.00'}\n                {/* <span id='total-discount-amount'>{CurrencyFormatter(batches.submitted.header.discount_amount)}</span> */}\n              </Typography>\n            </div>\n\n            <EnhancedTable className={classes.table} headCells={!isManager ? headCells : prManagerheadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow>\n                      <TableCell align='center' id={`batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell align='center' id={`total-rcs-${index}`}>\n                        {batch.claims.length}\n                      </TableCell>\n                      <TableCell align='right' id={`billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`discount-amount-${index}`}>\n                        {/* {CurrencyFormatter(batch.discount_amount)} */}\n                        0.00\n                      </TableCell>\n                      {isManager && (\n                        <TableCell align='right' id={`discount-amount-${index}`}>\n                          <Link\n                            // to={`/payment-requests/${item.id}/list`}\n                            to={`/payment-request/${bundle_number}/submitted/${batch.batch_number}`}\n                          >\n                            <Typography\n                              variant='caption'\n                              className={`text-link underline`}\n                              id={`submmited-pr-${index}`}\n                            >\n                              View\n                            </Typography>\n                          </Link>\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              onClick={() =>\n                supervisor || isManager\n                  ? props.history.push(`/payment-requests/${approved_by_uid}/list`)\n                  : props.history.push('/')\n\n              }\n              id='cancel'\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport Dashboard from './../Components/PaymentRequest/Dashboard/Dashboard'\nimport PaymentRequestPage from './../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nfunction PaymentRequestRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route path='/payment-request/:bundle_number/submitted' exact component={SubmittedPaymentRequestPage} />\n    </Switch>\n  )\n}\n\nexport default PaymentRequestRoutes\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\nconst columns = [\n  { id: 'approved-by', name: 'PR Processor', sortField: 'approved_by', match: 'start' },\n  { id: 'total-bundles', name: 'Total Bundle/SOA', sortField: 'total_bundles', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' }\n]\n\nconst SubmittedPrSupervisorTile = props => {\n  const { services, sizes } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([services.getSubmittedPaymentRequest({ limit: 10, sort: '' }), services.getBundleCount()]).then(\n      values => {\n        const bundleResponse = values\n        const submittedRequestClaims = bundleResponse[0].data.data.results\n        const submittedRequestClaimCount = bundleResponse[1].data.data\n        setClaims({ data: submittedRequestClaims, count: submittedRequestClaimCount })\n      }\n    )\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Submitted PR'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services.getSubmittedPaymentRequest({ limit: 10, sort: '' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page, category }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getSubmittedPaymentRequest(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page, category: 'submitted' }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-pr'\n        count={{ color: 3, value: claims.count, id: 'submitted-claim-count' }}\n        sizes={sizes}\n        title='Submitted PR'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-pr-view-list'\n          >\n            View List\n          </Typography>\n        }\n        isFilterShown={false}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell>PR Processor</TableCell>\n              <TableCell>Total Bundle/SOA</TableCell>\n              <TableCell>Total Batches</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n                <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n                <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-requests/${item.id}/list`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for PR Processor'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n              <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n              <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n              <TableCell>\n                <Link to={`/payment-requests/${item.id}/list`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPrSupervisorTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPrSupervisorTile\n","import instance from './instance'\nconst axios = instance('/c/prs')\n\nexport default class PaymentRequestServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequestBundles ({ processor_id }, params) {\n    return axios({\n      url: `/payment-requests/${processor_id}/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport PaymentRequestSupervisorServices from 'Services/Api/PaymentRequestSupervisorServices'\n\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ sm: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPrSupervisorTile services={PaymentRequestSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={8} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestSupervisorServices from 'Services/Api/PaymentRequestSupervisorServices'\n\n// CSS\nimport classes from './SubmittedPaymentRequestList.module.scss'\n\n// UTIL\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Recieved', sortField: 'date.received', match: 'date' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const processor_id = props.match.params.pr_officer\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'date.due',\n    order: true,\n    sort: 'date.due|desc'\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Submitted PR')\n    BreadcrumbsService.setSelectedItems(['dashboard', 'submittedPaymentRequest'])\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, initialValue).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }, [])\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, _params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSearchColumn = args => {\n    const { field, value, match } = args\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      {viewList.data ? (\n        <React.Fragment>\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for Bundle Number, Date or Facility Name'\n            />\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map(headCell => (\n                    <TableCell key={headCell.sortField} id={headCell.id}>\n                      <TableSortLabel\n                        active={viewList.orderBy === headCell.sortField}\n                        direction={viewList.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort(headCell.sortField)}\n                      >\n                        {headCell.name}\n                      </TableSortLabel>\n                      <TextField\n                        id={`column-filter-${headCell.id}`}\n                        // className={`${classes.search}`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearchColumn({\n                                field: headCell.sortField,\n                                value: search,\n                                match: headCell.match\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </TableCell>\n                  ))}\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <React.Fragment>\n                  {viewList.data.map((row, index) => (\n                    <TableRow key={`${row.claim_number}-${index}`}>\n                      <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n                      <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n                      <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n                      <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/payment-request/${row.bundle_number}/submitted`}>\n                          <Typography variant='caption' className={`text-link underline`}>\n                            View\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </React.Fragment>\n              }\n              count={viewList.count}\n              page={viewList.page}\n              limit={viewList.limit}\n              rowsPerPageOptions={[10, 15, 20]}\n              onChange={handleOnViewListChange}\n            />\n          </div>\n          <div align='right' className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel'\n              onClick={() => props.history.push(`/`)}\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// Pages of Payment Request Officer Supervisor\nimport Dashboard from './../Components/PaymentRequestSupervisor/Dashboard/Dashboard'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nfunction PaymentRequestRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route path='/payment-request/:bundle_number/submitted' exact render={props => (<SubmittedPaymentRequestPage supervisor {...props} />)} />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n    </Switch>\n  )\n}\n\nexport default PaymentRequestRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { name: 'Claim Number', sortField: 'latest.claim_number' },\n  { name: 'Due Date', sortField: 'latest.date.due' },\n  { name: 'Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map(row => (\n            <TableRow key={row.claim_number}>\n              <TableCell>{row.claim_number}</TableCell>\n              <TableCell>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/claims/review/${row.claim_number}`}>\n                  <Typography variant='caption' className={`text-link underline`}>\n                    Review\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/MedicalConsultantServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [claims, setClaims] = React.useState({\n    for_review: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Claims\n    Promise.all([\n      MedicalConsultantServices.getClaims({\n        category: 'for-review',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      MedicalConsultantServices.getClaimCount({ category: 'for-review' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_review: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    MedicalConsultantServices.getClaims({\n      category,\n      range: value,\n      limit: 10,\n      sort: 'latest.due.date|desc'\n    }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/review/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'for_review') title = 'For Review'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    MedicalConsultantServices.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    MedicalConsultantServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'for_review') handleOnReview(claim_number)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.for_review.count }}\n              sizes={{ sm: 12 }}\n              title='Escalated Claims'\n              viewList={\n                <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList('for-review')}>\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('for_review')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.for_review.data.map((item, index) => (\n                    <TableRow key={item.claim_number}>\n                      <TableCell>{item.claim_number}</TableCell>\n                      <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnReview(item.claim_number)}\n                        >\n                          Review\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {claims.ticket.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/MedicalConsultant/Dashboard/Dashboard'\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/MedicalConsultantServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  review: {\n    text: 'Review',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    communication: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nfunction MedicalConsultantRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'review']}\n            {...props}\n            permissions={permissions}\n            ApiService={MedicalConsultantServices}\n          />\n        )}\n      />\n    </Switch>\n  )\n}\n\nexport default MedicalConsultantRoutes\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForReconciliationClaimsTile services={ClaimsReconServices} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","/**\n * Graph Color Theme\n */\nconst theme = {\n  InPatient: '#EDEDED',\n  OutPatientProcedure: '#DEDEDE',\n  OutPatientConsultation: '#9EA3AC',\n  Reimbursement: '#0D5E40',\n  Emergency: '#FAB435',\n  Dental: '#8034AD',\n  MedicineAllowance: '#1AB1C4',\n  APE: '#3AB77D',\n  ECU: '#FD5451',\n  Pharmacy: '#62FFB7',\n  PPE: '#1E2071',\n  MedicalSupplies: '#E6A8E4',\n  ClinicManagement: '#66AFBE'\n}\nexport default theme\n","const mockData = [\n  { description: 'In Patient', type: 'InPatient' },\n  { description: 'Out Patient Procedure', type: 'OutPatientProcedure' },\n  { description: 'Out Patient Consultation', type: 'OutPatientConsultation' },\n  { description: 'Reimbursement', type: 'Reimbursement' },\n  { description: 'Emergency', type: 'Emergency' },\n  { description: 'Dental', type: 'Dental' },\n  { description: 'Medicine Allowance', type: 'MedicineAllowance' },\n  { description: 'APE', type: 'APE' },\n  { description: 'ECU', type: 'ECU' },\n  { description: 'Pharmacy', type: 'Pharmacy' },\n  { description: 'PPE', type: 'PPE' },\n  { description: 'Medical Supplies', type: 'MedicalSupplies' },\n  { description: 'Clinic Management', type: 'ClinicManagement' }\n]\n\nexport default mockData\n","const months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n\nexport default months\n","import React from 'react'\n\nimport moment from 'moment'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Select from '@material-ui/core/Select'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// import ClaimsUtilLedgerReport from '../ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\nimport Utilization from '../ClaimsViewer/Components/Utilization/Utilization'\n\n// Services\nimport ArrayToCSV from 'Services/ArrayToCSV'\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Utility\nimport { DateFormatter, LargeNumberFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './style/UtilizationReport.module.scss'\nimport theme from './style/theme'\n\n// Data\nimport legend from './data/legend'\n\n// Config\nimport months from './config/months'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\nconst clientColumns = [\n  { label: 'Type', data: 'type', search: true, match: 'any' },\n  { label: 'Total Amount', data: 'total_amount', search: true, match: 'number' },\n  { label: 'Number of Cases', data: 'cases', search: true, match: 'number' },\n  { label: 'Availed By Principals', data: 'availed_by_principals', search: true, match: 'number' },\n  { label: 'Availed By Dependents', data: 'availed_by_dependents', search: true, match: 'number' }\n]\n\n// const memberDataColumns = [\n//   'loa_number',\n//   'approval_code',\n//   'claim_number',\n//   'diagnosis',\n//   'procedures.description',\n//   'facility_id'\n// ]\nconst memberDataColumns = ['claim_no', 'diagnosis', 'procedures', 'provider']\n\nexport default function UtilizationReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'type',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n  const [reportType, setReportType] = React.useState('client')\n\n  /**\n   * initial -> initialized on generate report\n   * actual -> data displayed on the graph\n   * initial is retained as reference for filtering\n   *  graph data to refrain from making api calls\n   */\n  const [graphData, setGraphData] = React.useState({\n    initial: [],\n    actual: []\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  const [graphFilter, setGraphFilter] = React.useState('all')\n  // const [refreshMemberReport, doRefreshMemberReport] = React.useState(0)\n  const [client, setClient] = React.useState({ name: '--', account_no: '' })\n  const [member, setMember] = React.useState({})\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Report')\n    BreadcrumbsService.setSelectedItems(['utilization'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchTable()\n    // Watch filter items\n\n    // [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page]\n  }, [reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  React.useEffect(() => {\n    /**\n     * Handle Graph Filtering\n     * Also Handles Initial Data\n     */\n    let newData\n    if (graphFilter === 'all') {\n      // Returns all data after being processed for percentage count\n      newData = graphData.initial.map(data => {\n        const newChild = data.claims.map(child => ({ ...child, percentage: getPercentage(child.total_amount) }))\n        return { ...data, claims: newChild }\n      })\n    } else {\n      // Returns selected data after being processed for percentage count\n      newData = graphData.initial.map(data => {\n        let childContainer = []\n        data.claims.map(child => {\n          if (child.claim_type === graphFilter) {\n            childContainer.push({ ...child, percentage: getPercentage(child.total_amount) })\n          }\n        })\n        return { ...data, claims: childContainer }\n      })\n    }\n\n    setGraphData(p => ({ ...p, actual: newData }))\n  }, [graphFilter, graphData.initial])\n\n  const fetchCSV = () => {\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        /**\n         * Disabled: Change to dynamic mapping\n         *  if ever needed to print cvs\n         */\n        // return columns.map(col => {\n        //   if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n        //   return formatData({ type: col.type, source: report, field: col.data })\n        // })\n      })\n\n      // const header = columns.map(c => c.label)\n\n      // ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n    })\n  }\n\n  const fetchReport = () => {\n    if (reportType === 'member') {\n      getMember(reports.search)\n      // doRefreshMemberReport(refreshMemberReport + 1)\n      return\n    }\n\n    if (reports.search === '') return\n    LoadingService.loading(true)\n    Promise.all([\n      ClaimsServices.utilizationClient({\n        search: reports.search,\n        range: reports.range,\n        filter: reports.filter,\n        sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n        page: reports.page,\n        limit: reports.limit,\n        type: graphFilter\n      }),\n      ClaimsReconServices.getClientUtilization({ client_account_no: reports.search }),\n      CustomerCareServices.getClientUtilizationLoa({client_account_no: reports.search})]).then(res => {\n      const [graphClientRes, clientUtilRes, clientUtilLoaRes] = res\n      const { data: graph } = graphClientRes.data\n      const { data: utilAmount } = clientUtilRes.data\n      const { data: loaAmount } = clientUtilLoaRes.data\n\n      // Total limit is just a placeholder, waiting for the endpoint // dirty fix\n      setGraph(state => ({ ...state, total: graph.client.name !== 'Client Not found' ? 1000000 : 0, utilized: utilAmount.total_utilization_amount || 0, ibnr: loaAmount.total_ibnr_amount || 0 }))\n      setGraphData(p => ({ ...p, initial: graph.results }))\n      setClient(state => ({ ...state, name: graph.client.name, account_no: graph.client.account_number }))\n      fetchTable()\n    }).catch(err => console.error(`Error Fetching Data: ${err}`))\n  }\n\n  React.useEffect(() => {}, [graph])\n\n  // Fetching table\n  const fetchTable = () => {\n    ClaimsServices.utilizationClientTable({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { results = [], page, count, limit } = res.data.data\n\n      setReports(state => ({ ...state, data: results, count, page, limit }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = event => {\n    // /*\n    //  * Debounce for searching through\n    //  * SearchTextComponent\n    //  */\n    const search = event.target.value\n    setReports(state => ({ ...state, search }))\n    // clearTimeout(debounce)\n    // setDebounce(\n    // setTimeout(() => {\n    //   }, 500)\n    // )\n  }\n\n  const handleReportType = args => {\n    setReportType(args.target.value)\n  }\n\n  const generateGraph = args => {\n    /**\n     * style={{ bottom: `${data.percentage === '100%' ? '80%' : data.percentage}` }}\n     * -Prevents tooltip/popover description to display above the chart\n     */\n    return (\n      <div className={classes['graph-container']}>\n        <div className={classes['bar-chart-wrapper']}>\n          {args.map((data, index) => (\n            <div className={classes['bar-chart']}>\n              <div\n                className={classes.graph}\n                style={{ height: `${data.percentage}`, background: theme[data.claim_type] }}\n              >\n                {''}\n              </div>\n              <div\n                className={classes.tooltip}\n                style={{ bottom: `${data.percentage === '100%' ? '80%' : data.percentage}` }}\n              >\n                {`${LargeNumberFormatter(data.total_amount / 1000).toString()}K`}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n  const getPercentage = (args = 0) => {\n    // Returns argument on percentage scale\n    const result = (args / 250000) * 100\n    // Set maximum percentage to 100%\n    return `${result > 100 ? 100 : result}%`\n  }\n\n  const handleGraphFilter = args => {\n    // Triggers the filter watch function\n    setGraphFilter(args)\n  }\n\n  const getMember = account_number => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: account_number }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: account_number })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setMemberFetchStatus(`${data.status}`)\n      })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Report Type:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <RadioGroup className={classes['radio-group']} value={reportType} onChange={handleReportType}>\n                <div className={classes['radio-container']}>\n                  <p>Corporate Client</p> <Radio color='primary' value='client' />\n                </div>\n                <div className={classes['radio-container']}>\n                  <p> Member </p> <Radio color='primary' value='member' />\n                </div>\n              </RadioGroup>\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              value={reports.search}\n              onChange={handleSearchChange}\n              placeholder={reportType == 'client' ? `Search for Client ID or Client Name` : `Search for Member ID`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.header}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='ledger-filter-date-from'\n                value={reports.range.from}\n                onChange={event => {\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: DateFormatter(event)\n                    }\n                  }))\n                }}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='ledger-filter-date-to'\n                value={reports.range.to}\n                onChange={event => {\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: DateFormatter(event)\n                    }\n                  }))\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                fetchReport()\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Generate\n            </Button>\n          </div>\n        </div>\n      </div>\n      <hr />\n      {reportType && reportType === 'client' && (\n        // TODO\n        /**\n         * Header-report:\n         * -Waiting for data\n         */\n        <div className={classes.body}>\n          <Typography variant='h6'>{client.name}</Typography>\n          <div className={classes['header-report']}>\n            <div className={classes['report-primary']}>\n              <div className={classes.title}>Annual Benefit Limit</div>\n              <Typography variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n            </div>\n            <div className={classes['report-details']}>\n              {graph.total ? <div className={classes.graph}>\n                <div className={classes.item} style={{ background: '#00a896', width: `${(graph.utilized / graph.total) * 100}%` }}>\n                  {''}\n                </div>\n                <div className={classes.item} style={{ background: '#606c38', width: `${(graph.ibnr / graph.total) * 100}%` }}>\n                  {''}\n                </div>\n                <div className={classes.item} style={{ background: '#e63946',\n                  width: `${\n                    ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                      ? 0\n                      : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                  }%` }}>\n                  {''}\n                </div>\n              </div> : null}\n              <div className={classes.legend}>\n                <div className={classes.item}>\n                  <div className={classes['header-data']}>\n                    <div className={classes.mark} style={{ background: '#00a896' }}>\n                      {''}\n                    </div>\n                    <div className={classes.text} style={{ color: '#00a896' }}>\n                      utilized\n                    </div>\n                  </div>\n                  <div className={classes.details}>{`PHP ${CurrencyFormatter(graph.utilized)}`}</div>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes['header-data']}>\n                    <div className={classes.mark} style={{ background: '#606c38' }}>\n                      {''}\n                    </div>\n                    <div className={classes.text} style={{ color: '#606c38' }}>\n                      ibnr\n                    </div>\n                  </div>\n                  <div className={classes.details}>{`PHP ${CurrencyFormatter(graph.ibnr)}`}</div>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes['header-data']}>\n                    <div className={classes.mark} style={{ background: '#e63946' }}>\n                      {''}\n                    </div>\n                    <div className={classes.text} style={{ color: 'e63946' }}>\n                      available\n                    </div>\n                  </div>\n                  <div className={classes.details}>{`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <Typography variant='h6'>Utilization Summary</Typography>\n          <div className={classes.filter} style={{ textAlign: 'right' }}>\n            <span>\n              <FormControl>\n                <Select\n                  className={classes['select']}\n                  value={graphFilter}\n                  onChange={e => handleGraphFilter(e.target.value)}\n                >\n                  <MenuItem value={'all'}>\n                    <Typography className={classes.input}>All Types</Typography>\n                  </MenuItem>\n                  {legend.map(data => (\n                    <MenuItem value={data.type}>\n                      <Typography className={classes.input}>{data.description}</Typography>\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </span>\n          </div>\n          <div className={classes['graph-legend']}>\n            <div className={classes['legend-wrapper']}>\n              {legend.map(data => (\n                <div className={classes['legend-group']}>\n                  <div className={classes['legend']} style={{ background: theme[data.type] }}>\n                    {''}\n                  </div>\n                  <div className={classes['description']}>{data.description}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className={classes['graph-reports']}>\n            <div className={classes['graph-plot']}>\n              <div className={classes['plot-items']}>250k</div>\n              <div className={classes['plot-items']}>150k</div>\n              <div className={classes['plot-items']}>100k</div>\n              <div className={classes['plot-items']}>50k</div>\n              <div className={classes['plot-items']}>0</div>\n            </div>\n            {graphData.actual.map(data => (\n              <div className={classes['graph-group']}>\n                {generateGraph(data.claims)}\n                <div className={classes['graph-category']}>\n                  {months[data.month]} {graphData.actual && graphData.actual.length >= 12 ? data.year : ''}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{\n                style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n              }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {clientColumns.map((headCell, index) => (\n                    <TableCell key={`table-header-${index}`}>\n                      <TableSortLabel\n                        active={reports.orderBy === headCell.data}\n                        direction={reports.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                      {headCell.search && (\n                        <div className={classes.input}>\n                          {headCell.type && headCell.type === 'date' ? (\n                            <DatePicker\n                              noMargin\n                              id={`${headCell.data}`}\n                              onChange={event =>\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: DateFormatter(event),\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          ) : (\n                            <TextField\n                              noMargin\n                              onChange={event =>\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: event.target.value,\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          )}\n                        </div>\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              }\n              body={\n                reports.data &&\n                reports.data.map((claim, index) => (\n                  <TableRow key={index}>\n                    <TableCell>{claim.type}</TableCell>\n                    <TableCell>{claim.total_amount.toFixed(2)}</TableCell>\n                    <TableCell>{claim.cases}</TableCell>\n                    <TableCell>{claim.availed_by_principals}</TableCell>\n                    <TableCell>{claim.availed_by_dependents}</TableCell>\n                  </TableRow>\n                ))\n              }\n              pagination\n              count={reports.count}\n              page={reports.page}\n              limit={reports.limit}\n              rowsPerPageOptions={reports.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* <ClaimsUtilLedgerReport\n        refresh={refreshMemberReport}\n        dateRange={{ from: reports.range.from, to: reports.range.to }}\n        dataColumns={memberDataColumns}\n        hideReport={reportType === 'client' ? 'true' : ''}\n        hideHeader='true'\n      /> */}\n\n      {reportType && reportType === 'member' && (\n        <div>\n          <div className={classes.header}>\n            <Typography variant='h6'>\n              {SafeAccess(member, ['info', 'first_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'middle_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'last_name'], '')}\n            </Typography>\n            <Typography variant='h6'>{SafeAccess(member, ['info', 'brand_name'], '')}</Typography>\n          </div>\n\n          <div className={classes.content}>\n            <table className={classes.memberinfo}>\n              <tbody>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'member_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>Birthdate (Age)</td>\n                  <td className={classes.memberInfoValue}>\n                    {member &&\n                      member.info &&\n                      moment(SafeAccess(member, ['info', 'date_of_birth'], '')).format('MMMM DD, YYYY') +\n                        ' (' +\n                        moment().diff(SafeAccess(member, ['info', 'date_of_birth'], ''), 'years', false) +\n                        ')'}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Gender</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'gender'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Plant Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'limit_unit'], '') +\n                      ' ' +\n                      SafeAccess(member, ['benefit_limits', 1, 'limit'], '')}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Civil Status</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'civil_status'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>R&amp;B</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'limit_unit'], '') +\n                      ' ' +\n                      SafeAccess(member, ['benefit_limits', 0, 'limit'], '')}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Effectivity Date</td>\n                  <td className={classes.memberInfoValue}>\n                    {moment(SafeAccess(member, ['info', 'effectivity_date'], '')).format('MMMM DD, YYYY')}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          {/* TODO: replace with filler */}\n          <br />\n\n          <Utilization\n            fetchService={ClaimsAdjudicationServices.getUtilizations}\n            utilizationLoa={utilizationLoa}\n            // isMember={isMember}\n            member={member}\n            // client={client}\n            diagnosis={[]}\n            dataColumns={memberDataColumns}\n            hideSearchBar\n            hideActionColumn\n          />\n        </div>\n      )}\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport ArrayToCSV from 'Services/ArrayToCSV'\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './PRCheckReport.module.scss'\n\nconst columns = [\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check Voucher No.', data: 'check_voucher_no', search: true, match: 'any' },\n  { label: 'Check Voucher Date.', data: 'check_voucher_date', search: true, match: 'date' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Check Release Date', data: 'check_release_date', search: true, match: 'date' },\n  { label: 'FPAD Transmittal Date', data: 'fpad_transmittal_date', search: true, match: 'date' },\n  { label: 'Date Received (FPAD Delivery)', data: 'date_received_fpad_delivery', search: true, match: 'date' }\n]\n\nexport default function PRCheckReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('PR and Check Report')\n    BreadcrumbsService.setSelectedItems(['pr'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n    })\n  }\n\n  const fetchReport = () => {\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: DateFormatter(event),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport ArrayToCSV from 'Services/ArrayToCSV'\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './TreasuryTransmittalReport.module.scss'\n\nconst columns = [\n  { label: 'Date Requested', data: 'date_requested', search: true, match: 'date' },\n  { label: 'Transmittal No.', data: 'transimittal_no', search: true, match: 'any' },\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Delivery Status', data: 'delivery_status', search: true, match: 'any' },\n  { label: 'Received By', data: 'received_by', search: true, match: 'any' },\n  { label: 'Date Received', data: 'date_received', search: true, match: 'date' }\n]\n\nexport default function TreasuryTransmittalReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Treasury Transmittal Reports')\n    BreadcrumbsService.setSelectedItems(['treasury'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n    })\n  }\n\n  const fetchReport = () => {\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: DateFormatter(event),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/ClaimsReconciliation/Dashboard/Dashboard'\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Components\nimport UtilizationReport from './../Components/UtilizationReport/UtilizationReport'\nimport PRCheckReport from './../Components/PRCheckReport/PRCheckReport'\nimport TreasuryTransmittalReport from './../Components/TreasuryTransmittalReport/TreasuryTransmittalReport'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  },\n  {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: [\n      { label: 'View PR and Check Details', to: '/pr-reports' },\n      { label: 'View Treasury Transmittal', to: '/treasury-reports' },\n      { label: 'View Account & Member Utilization', to: '/utilization' }\n    ]\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  },\n  treasury: {\n    text: 'Treasury Transmittal Reports'\n  },\n  pr: {\n    text: 'PR and Check Report'\n  },\n  utilization: {\n    text: 'Utilization Report'\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'] }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    remove: { visible: true }\n  }\n}\n\nfunction ClaimsReconcilationRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/pr-reports' exact render={() => <PRCheckReport />} />\n      <Route path='/treasury-reports' exact render={() => <TreasuryTransmittalReport />} />\n      <Route path='/utilization' exact render={() => <UtilizationReport />} />\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n    </Switch>\n  )\n}\n\nexport default ClaimsReconcilationRoutes\n","import Button from '@material-ui/core/Button'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Services\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nexport default function AssignDialog (props) {\n  const { dialog, handleOnSubmit = () => {}, setDialog } = props\n\n  const [reassignData, setReassignData] = React.useState({\n    user_id: '',\n    message: ''\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  React.useEffect(() => {\n    UserManagementServices.getClaimsAnalyst()\n      .then(res => {\n        const _data = res.data\n        const data = _data.map(user => {\n          return { value: user._id, text: `${user.first_name} ${user.last_name}` }\n        })\n        setDropDownUsers(prevState => [...prevState, ...data])\n      })\n      .catch(err => console.error('Failed fetching Claims Verifiers: ', err))\n  }, [])\n\n  const onDropDownChanged = params => {\n    setReassignData(prevState => ({ ...prevState, user_id: params }))\n  }\n\n  const onTextFieldChanged = params => {\n    setReassignData(prevState => ({ ...prevState, message: params }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='reassign-notes'\n                value={reassignData.message}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Message'\n                onChange={e => onTextFieldChanged(e.target.value)}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassignData.user_id}\n                  onChange={e => onDropDownChanged(e.target.value)}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => setDialog(state => ({ ...state, assign: false }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => setDialog(state => ({ ...state, alert: true }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claim Verifier</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claim Analyst?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claim Analyst for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmit(reassignData)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Component\nimport AssignDialog from './../AssignDialog/AssignDialog'\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmit = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    claimsCount = 0\n  } = props\n\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography>Total Claims Selected: {claimsCount} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-positive'\n                onClick={() => setDialog(state => ({ ...state, assign: true }))}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog dialog={dialog} setDialog={setDialog} handleOnSubmit={handleOnSubmit} />\n    </div>\n  )\n}\n","import instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims/adjudication',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/adjudication/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/adjudication/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/adjudication/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getDropdown (params) {\n    return axios({\n      url: '/lookups/dropdown',\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n}\n","import ClaimsAdjudicationServices from '../ClaimsAdjudicationServices'\nimport instance from '../instance'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsReimbursementServices extends ClaimsAdjudicationServices {\n  static getItems (params) {\n    return axios({\n      url: `/claims/medical-collectibles/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/medical-collectibles/count`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nimport ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport MedicalCollectiblesServices from './MedicalCollectiblesServices'\nconst axios = instance('/c/cvs')\n\nclass index extends ClaimsAdjudicationServices {\n  // MOCK ENDPOINT\n  static getClaims (params) {\n    return axios({\n      url: '/claims/all',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/all/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItems (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getClaimsBySubbordinateCount (params) {\n    return axios({\n      url: '/subordinate/claims/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getSubordinatesCount (params) {\n    return axios({\n      url: '/claims/subordinates/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getSubordinates (params) {\n    return axios({\n      url: '/claims/subordinates',\n      method: 'GET',\n      params\n    })\n  }\n}\n\nindex.ClaimsAdjudicationServices = ClaimsAdjudicationServices\nindex.MedicalCollectiblesServices = MedicalCollectiblesServices\nexport default index\n","import Button from '@material-ui/core/Button'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimsList.module.scss'\n\nexport default function ClaimsPage (props) {\n  const userId = props.match.params.user_id\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const headcell = [\n    { id: 's-claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'any' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'date_received', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n  ]\n  const [claims, setClaims] = React.useState({\n    category: 'my',\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    filter: {},\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [claimsCount, setClaimsCount] = React.useState(0)\n\n  React.useEffect(() => {\n    PageTitleService('For Adjudication')\n    BreadcrumbsService.setSelectedItems(['assigned'])\n    LoadingService.loading(true)\n    getClaims()\n    LoadingService.loading(false)\n  }, [])\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getClaims()\n    LoadingService.loading(false)\n  }, [claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  const getClaims = () => {\n    ClaimsVerifierSupervisorServices.getItems({\n      category: claims.category,\n      search: claims.search,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit,\n      user_id: userId,\n      filter: claims.filter\n    })\n      .then(res => {\n        const { results, count, limit, page } = res.data.data\n        results.map(claim => (claim.checked = false))\n        setClaims(prevState => ({ ...prevState, data: results, count, limit, page }))\n      })\n      .catch(err => console.error('Error fetching records: ', err))\n  }\n\n  const handleItemSelect = (event, index) => {\n    let data = [...claims.data]\n    const count = event.target.checked ? 1 : -1\n    data[index] = { ...data[index], checked: event.target.checked }\n    setClaims(prevState => ({ ...prevState, data }))\n    setClaimsCount(prevState => prevState + count)\n  }\n\n  const handleOnSearch = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnSearchAll = (args = '') => {\n    setClaims(prevState => ({ ...prevState, search: args }))\n  }\n\n  const handleOnSubmit = params => {\n    LoadingService.loading(true)\n    const { user_id, message } = params\n    const reassign = async () => {\n      return Promise.all(\n        claims.data.map(async claim => {\n          if (claim.checked === true) {\n            await ClaimsVerifierSupervisorServices.reassign({\n              claim_number: claim.claim_number,\n              data: { receiver_id: user_id, message: message }\n            }).catch(err => console.error(err))\n          }\n        })\n      )\n    }\n    reassign()\n      .then(() => {\n        handleUnselectAll()\n        LoadingService.loading(false)\n        getClaims()\n      })\n      .catch(err => console.error(('Error Assigning Claims: ', err)))\n  }\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleSelectAll = event => {\n    let data = [...claims.data]\n    const count = event.target.checked ? 1 : 0\n    data.map(claim => {\n      claim.checked = event.target.checked\n    })\n    setClaims(prevState => ({ ...prevState, data }))\n    setClaimsCount(count > 0 ? data.length : 0)\n  }\n\n  const handleUnselectAll = () => {\n    let data = [...claims.data]\n    data.map(claim => {\n      claim.checked = false\n    })\n    setClaims(prevState => ({ ...prevState, data }))\n    setSelectStatus(false)\n    setClaimsCount(0)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox color='default' onClick={event => handleSelectAll(event)} />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={claims.orderBy === headCell.sortField}\n                direction={claims.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              <TextField\n                // className={`${classes.search}`}\n                id={`column-filter-${headCell.id}`}\n                TextFieldStyle={{ margin: 0 }}\n                fullWidth\n                onChange={event =>\n                  handleOnSearch({\n                    field: headCell.sortField,\n                    value: event.target.value,\n                    match: headCell.match\n                  })\n                }\n              />\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return claims.data.map((row, index) => (\n        <TableRow key={index}>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox checked={row.checked} color='default' onClick={event => handleItemSelect(event, index)} />\n            </TableCell>\n          ) : null}\n          <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n          <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n          <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n          <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n          <TableCell id={`view-claim-${index}`}>\n            <Link to={`/claims/view/${row.claim_number}`}>\n              <Typography id={`analyze-claim-${index}`} variant='caption' className='text-link underline'>\n                View\n              </Typography>\n            </Link>\n          </TableCell>\n        </TableRow>\n      ))\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => handleOnSearchAll(e.target.value)}\n                placeholder='Search for claim number or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={claims.count}\n              page={claims.page}\n              limit={claims.limit}\n              rowsPerPageOptions={claims.rowsPerPageOptions}\n              pagination\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            handleOnCancel={() => handleUnselectAll()}\n            handleOnClose={() => props.history.push(`/`)}\n            handleOnSubmit={handleOnSubmit}\n            claimsCount={claimsCount}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst RejectedClaimsTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'rejected',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'REJECTED' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'rejected'\n\n    services\n      .getItems({\n        category,\n        filter: viewList.filter,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/rejected/${claim_number}`)\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'rejected'\n    let title = `Rejected Claims`\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services\n      .getItems({ category, limit: 10, sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    // TO BE EDITED, WAITING FOR CLAIMS SUPERVISOR API SERVICES TO BE UP\n    // mock datas from med consultant\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='rejected-claim'\n        count={{ color: 3, value: claims.recon['count'], id: 'rejected-claim-count' }}\n        sizes={{ sm: 12 }}\n        title='Rejected Claims'\n        viewList={\n          <Typography id='rc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.recon.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`rc-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    View\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nRejectedClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default RejectedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\nconst columns = [\n  { id: 'verifier-name', name: 'Verifier Name', sortField: 'verifier_name', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 'total-claims', name: 'Total Claims', sortField: 'total_claims', match: 'any' }\n]\n\nconst ClaimsVerifierTile = props => {\n  const { services } = props\n\n  const [viewList, setViewList] = React.useState({\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  })\n  const [verifiers, setVerifiers] = React.useState({ data: [], count: 0 })\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getSubordinatesCount(),\n      services.getClaimsBySubbordinateCount(),\n      services.getSubordinates({ page: 1, limit: 10, search: null })\n    ])\n      .then(res => {\n        const [usersCount, claimsCount, verifiers] = res\n        const { data } = verifiers.data.data\n        setViewList(prev => ({ ...prev, count: usersCount.data.data }))\n        setVerifiers(p => ({ ...p, data, count: claimsCount.data.data }))\n      })\n      .catch(err => console.error(err.message))\n  }, [])\n\n  const getSubordinates = params => {\n    const { page = 1, limit = 10, search = '', filter = null } = params\n    services\n      .getSubordinates({ page, limit, search, filter })\n      .then(res => {\n        const { data, limit, page } = res.data.data\n        setViewList(prev => ({\n          ...prev,\n          data,\n          limit,\n          page\n        }))\n      })\n      .catch(err => console.error('Error fetching subordinates: ', err))\n  }\n\n  const handleOnReviewUser = (params = null) => () => {\n    if (!params) return false\n    props.history.push(`/list/${params}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Claims Verifier List'\n\n    setViewList(prev => ({ ...prev, show: true, title, data: [] }))\n    getSubordinates({})\n  }\n\n  const handleOnViewListChange = params => {\n    setViewList(prev => ({ ...prev, data: [], ...params }))\n    getSubordinates({ ...params })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-verifier'\n        count={{ color: 3, value: verifiers.count, id: 'claims-verifier-count' }}\n        sizes={{ sm: 12 }}\n        title='Claims Verifier'\n        isFilterShown={false}\n        viewList={\n          <Typography id='cv-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList()}>\n            View List\n          </Typography>\n        }\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`cv-${item.id}`} id={`cv-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {verifiers.data &&\n              verifiers.data.map((item, index) => (\n                <TableRow key={`verifier-list-item-${index}`}>\n                  <TableCell id={`cv-verifier-name-${index}`}>{item.verifierName}</TableCell>\n                  <TableCell id={`cv-total-batches-${index}`}>{item.totalBatches}</TableCell>\n                  <TableCell id={`cv-total-claims-${index}`}>{item.totalClaims}</TableCell>\n                  <TableCell id={`cv-view-user-${index}`}>\n                    <Typography\n                      id={`view-user-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={handleOnReviewUser(item.id)}\n                    >\n                      View\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for Claims Analyst'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`verifier-list-item-${index}`}>\n              <TableCell id={`cv-verifier-name-${index}`}>{item.verifierName}</TableCell>\n              <TableCell id={`cv-total-batches-${index}`}>{item.totalBatches}</TableCell>\n              <TableCell id={`cv-total-claims-${index}`}>{item.totalClaims}</TableCell>\n              <TableCell id={`cv-view-user-${index}`}>\n                <Typography\n                  id={`view-user-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={handleOnReviewUser(item.id)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsVerifierTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsVerifierTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ReconTIle = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'recon',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  // url: ,\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'RECONCILED' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'recon') title = 'Reconciled Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reconciled-claim'\n        count={{ color: 3, value: claims.recon['count'], id: 'reconciled-claim-count' }}\n        sizes={{ sm: 12 }}\n        title='Reconciled Claims'\n        viewList={\n          <Typography\n            id='rc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('recon')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('recon')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.recon.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`rc-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    Analyze\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReconTIle.displayName = 'DashboardTileComponent'\n\nexport default ReconTIle\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ClaimsForApprovalTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'for-approval',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'FOR APPROVAL' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const claims = claimResponse.data.data.results\n      const claimsCount = claimCountResponse.data.data\n      setClaims({ data: claims, count: claimsCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for-approval'\n\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'for-approval'\n    let title = 'Claims For Approval'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'for-approval',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-for-approval'\n        count={{ color: 3, value: claims['count'], id: 'claims-for-approval-count' }}\n        sizes={{ sm: 12 }}\n        title='Claims For Approval'\n        isFilterShown={false}\n        viewList={\n          <Typography id='fa-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={`fa-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`fa-view-claim-${index}`}>\n                  <Link to={`/claims/for-approval/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`view-claim-${index}`}>\n                <Link to={`/claims/for-approval/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsForApprovalTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsForApprovalTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter, NameFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'account-number', name: 'Account No.', sortField: 'latest.client.account_number', match: 'any' },\n  { id: 'account-name', name: 'Account Name', sortField: 'latest.client.account_name', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member_name', match: 'any' }\n]\n\nconst MedicalCollectiblesTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    filter: {},\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, data: allClaims, count: allClaimsCount }))\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    let title = 'Medical Collectibles'\n\n    setViewList({ ...initialValue, show: true, title })\n    services\n      .getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='medical-collectibles'\n        count={{ color: 3, value: claims.count, id: 'medical-collectibles-count' }}\n        sizes={{ sm: 12 }}\n        title='Medical Collectibles'\n        isFilterShown={false}\n        viewList={\n          <Typography id='mc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={`mc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                {/* added cond on client to support old data */}\n                <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n                <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n                <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n                <TableCell id={`mc-view-claim-${index}`}>\n                  <Link to={`/claims/review/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              {/* added cond on client to support old data */}\n              <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n              <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n              <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n              <TableCell id={`mc-view-claim-${index}`}>\n                <Link to={`/claims/review/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMedicalCollectiblesTile.displayName = 'DashboardTileComponent'\n\nexport default MedicalCollectiblesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date ', sortField: 'date_due', match: 'date' },\n  { id: 'account-name', name: 'Account No.', sortField: 'account_number', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member_name', match: 'any' }\n]\n\nconst ReimbursementClaimTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'reimbursement',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ claim_type: 'Reimbursement' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const { results } = claimResponse.data.data\n      setClaims(prevState => ({\n        ...prevState,\n        data: results,\n        count: claimCountResponse.data.data\n      }))\n    })\n  }, [])\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = 'Reimbursement Claim'\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n\n    setViewList({ ...initialValue, show: true, title })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reimbursement-claims'\n        count={{ color: 3, value: claims.count, id: 'reimbursement-claims-count' }}\n        sizes={{ sm: 12 }}\n        title='Reimbursement Claim'\n        isFilterShown={false}\n        viewList={\n          <Typography id='rmc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={`rmc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={`rmc-claim-list-${index}`}>\n                <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n                <TableCell id={`rmc-member-name-${index}`}>{`${item.member.first_name} ${item.member.middle_name |\n                  ''} ${item.member.last_name}`}</TableCell>\n                <TableCell id={`rmc-view-claim-${index}`}>\n                  <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`rmc-claim-list-${index}`}>\n              <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n              <TableCell id={`rmc-member-name-${index}`}>{`${item.member.first_name} ${item.member.middle_name | ''} ${\n                item.member.last_name\n              }`}</TableCell>\n              <TableCell id={`rmc-view-claim-${index}`}>\n                <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReimbursementClaimTile.displayName = 'DashboardTileComponent'\n\nexport default ReimbursementClaimTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from './../../../Components/Tiles/ForAdjudicationTile'\nimport MyClaimsTile from './../../../Components/Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from './../../../Components/Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from './../../../Components/Tiles/ReturnedEscalatedClaimsTile'\nimport RejectedClaimsTile from './../../../Components/Tiles/RejectedClaimsTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ReconciledClaimsTile from './../../../Components/Tiles/ReconciledClaimsTile'\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport MedicalCollectiblesTile from './../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from './../../../Components/Tiles/ReimbursementClaimTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Claims Adjudication'>\n            <ForAdjudicationTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <ReturnedEscalatedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n\n            <RejectedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n\n            <ReconciledClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              {...props}\n            />\n\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n        </Grid>\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from './../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\nimport Dashboard from './../Components/ClaimsVerifierSupervisor/Dashboard/Dashboard'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// To be edit\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\n\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  reconciled: {\n    text: 'Reconciled',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  assigned: {\n    text: 'For Adjudication'\n  },\n  view: {\n    text: 'View'\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  }\n}\n\nconst forAdjudicationPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    communication: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forReconciledPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {}\n    },\n    save: { visible: true, enabled: true, options: {} },\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_ANALYST'] },\n      message:\n        'Are you sure you want to submit the Claim to the selected Claim Analyst? This Claim will be sent to the assigned Claim Analyst for processing.'\n    }\n  }\n}\n\nconst viewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nconst reviewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: {\n      visible: true,\n      enabled: true\n    },\n    letter_of_advice: {\n      visible: true,\n      enabled: true\n    }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nfunction ClaimsSupervisorRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={forAdjudicationPermissions}\n            ApiService={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n          />\n        )}\n      />\n\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n\n      <Route\n        path='/claims/reconciled/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reconciled']}\n            {...props}\n            permissions={forReconciledPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/view/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={viewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={reviewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/rejected/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n    </Switch>\n  )\n}\n\nexport default ClaimsSupervisorRoutes\n","import instance from './../instance'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsManagerServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch (params) {\n    const { bundle_number, batch_number } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getApprovedClaims (params) {\n    const { bundle_number, batch_number } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims`,\n      method: 'GET'\n    })\n  }\n\n  static overrideClaims (params) {\n    const { bundle_number, batch_number, ...others } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims/override`,\n      method: 'POST',\n      params: { others }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport MedicalCollectiblesTile from '../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from '../../../Components/Tiles/ReimbursementClaimTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport ClaimsManagerServices from 'Services/Api/ClaimsManagerServices/ClaimsManagerServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 8 }} title='Items to Monitor'>\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} sizes={{ sm: 6 }} {...props} />\n            <ForPaymentRequestTile\n              services={PaymentRequestServices}\n              mTitle='Payment Request for Approval'\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {[].map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }} showTitle={false}>\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} sizes={{ sm: 6 }} {...props} />\n          </TaskTray>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }} showTitle={false}>\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} sizes={{ sm: 6 }} {...props} />\n            <SubmittedPrSupervisorTile services={ClaimsManagerServices} sizes={{ sm: 6 }} {...props} />\n          </TaskTray>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }} title='Claims Processor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} sizes={{ sm: 6 }} {...props} />\n            <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 6 }} {...props} />\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} sizes={{ sm: 6 }} {...props} />\n          </TaskTray>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n\n  const [reassign, setReassign] = React.useState({\n    user_id: '',\n    note: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.user_id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n\n    setReassign({\n      note: '',\n      user_id: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  const handleOnChange = event => {\n    const value = event.target.value\n    setReassign(state => ({ ...state, note: value }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => handleOnChange(event)}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.user_id}\n                  onChange={event => {\n                    setReassign(state => ({ ...state, user_id: event.target.value }))\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claims Analyst/Verifier Supervisor:</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claims Analyst/Verifier Supervisor?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claims Analyst/Verifier Supervisor for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign(reassign)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                  setReassign({\n                    note: '',\n                    user_id: ''\n                  })\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from '../../ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList'\n// import AssignDialiog from './../'\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// import ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchDetailsPage.module.scss'\n\nexport default function BatchDetailsPage (props) {\n  const { ApiService, UserManagementApi } = props\n  const [details, setDetails] = React.useState()\n  const [batch_number, setBatchNumber] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [claims, setClaim] = React.useState([])\n  const [forOverride, setForOverride] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [selectStatus, setSelectStatus] = React.useState(false)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const { batch_number, bundle_number } = props.match.params\n    setBatchNumber(batch_number)\n    setBundleNumber(bundle_number)\n\n    PageTitleService(`Batch No. ${batch_number}`)\n    BreadcrumbsService.setSelectedItems([\n      'dashboard',\n      'submittedPaymentRequest',\n      `submittedSpecificPaymentRequest:${bundle_number}`,\n      `specificBatch:${batch_number}`\n    ])\n    getBatchAndClaims({ batch_number, bundle_number })\n  }, [props.match.params.batch_number, props.match.params.bundle_number])\n\n  const getBatchAndClaims = args => {\n    const { batch_number, bundle_number } = args\n    Promise.all([\n      ApiService.getBatch({ bundle_number, batch_number }),\n      ApiService.getApprovedClaims({ bundle_number, batch_number })\n    ]).then(res => {\n      const [batchRes, claimsRes] = res\n\n      const { data: batch } = batchRes.data\n      const { result: claims } = claimsRes.data.data\n\n      setClaimCount(claims.length)\n      setClaim(claims)\n      setDetails(batch)\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleClickOverride = () => {\n    initDropdownUsers()\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  const initDropdownUsers = () => {\n    Promise.all([UserManagementApi.getClaimsAnalyst(), UserManagementApi.getClaimsVerifierSupervisors()]).then(res => {\n      const [analystRes, supervisorRes] = res\n      const data = [...analystRes.data, ...supervisorRes.data]\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n\n      setDropDownUsers(users)\n    })\n  }\n\n  const handleOnSubmitOverride = args => {\n    LoadingService.loading(true)\n    const { user_id, note } = args\n    ApiService.overrideClaims({\n      bundle_number,\n      batch_number,\n      claims: forOverride.claim_numbers,\n      _id: user_id,\n      note\n    }).then(res => {\n      getBatchAndClaims({ batch_number, bundle_number })\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} reassign_notes={false} />\n          <ClaimListHeader isManager count={claimCount} />\n          <ClaimList\n            isManager\n            items={claims}\n            onItemClick={args => {}}\n            actionItems={forOverride}\n            setActionItems={setForOverride}\n            setSelected={setSelected}\n            selectStatus={selectStatus}\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {!selectStatus ? (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => setSelectStatus(true)}\n                  >\n                    Override Claim\n                  </Button>\n                  <Button\n                    id='close'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => props.history.push(`/payment-request/${bundle_number}/submitted`)}\n                  >\n                    Close\n                  </Button>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => handleClickOverride()}\n                    disabled={forOverride.claim_numbers.length < 1}\n                  >\n                    Override\n                  </Button>\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => {\n                      setSelectStatus(false)\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitOverride}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsEncodingServices {\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static storeLookups ({ on, data, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'post',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static updateLookups ({ on, data, code, params }) {\n    return axios({\n      url: `/lookups/${code}/${on}`,\n      method: 'put',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Radio from '@material-ui/core/Radio'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Services\nimport ClaimsMaintainerServices from 'Services/Api/ClaimsMaintainerServices'\n\n// Styles\nimport classes from './MaintenancePage.module.scss'\n\n// Constants\nconst lookups = {\n  hospital_items: { on: 'hospital-item-list', field: 'hospital-item-list' },\n  reason_covered: { on: 'maintenance', field: 'covered-reason' },\n  reason_charging: { on: 'maintenance', field: 'charging-reason' },\n  reason_return: { on: 'maintenance', field: 'return-reason' },\n  reason_reject: { on: 'maintenance', field: 'reject-reason' },\n  claims_source: { on: 'maintenance', field: 'claims-source' },\n  claim_sub_type: { on: 'maintenance', field: 'claims-sub-type' },\n  claim_sub_sub_type: { on: 'maintenance', field: 'claims-sub-sub-type' }\n}\nconst initialValue = {\n  show: false,\n  title: '',\n  count: 0,\n  search: '',\n  limit: 10,\n  page: 1,\n  data: [],\n  orderBy: '',\n  order: true,\n  header: 'Hospital Item List',\n  filter: {description: {value: ''}, status: {value: ''}}\n}\nconst initialItem = {\n  description: '',\n  status: 'Active',\n  code: '',\n  active: true,\n  deactivate: false\n}\nlet columns = [\n  { name: 'Description', sortField: 'description', id: 'description', match: 'any' },\n  { name: 'Status', sortField: 'status', id: 'status', match: 'start' }\n]\nexport default function MaintenancePage (props) {\n  const [data, setData] = React.useState(initialValue)\n  const [lookup, setLookup] = React.useState(lookups.hospital_items)\n  const [debounce, setDebounce] = React.useState(null)\n  const [item, setItem] = React.useState(initialItem)\n  const [showAddItem, setShowAddItem] = React.useState({\n    show: false,\n    mode: 'add'\n  })\n  const [showAlert, setShowAlert] = React.useState({\n    open: false,\n    message: '',\n    onOk: '',\n    okLabel: 'Okay',\n    cancelLabel: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Claims Maintenance')\n    BreadcrumbsService.setSelectedItems(['maintenance'])\n  }, [])\n\n  React.useEffect(() => {\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: {...data, field: lookup.field} }).then(({ data: res }) => {\n      const { results, count } = res.data\n      setData(state => ({...state, data: results, count}))\n    })\n  }, [lookup])\n\n  const handleOnChange = params => {\n    const _params = {\n      limit: data.limit,\n      page: data.page,\n      search: data.search,\n      sort: `${data.orderBy}|${data.order ? 'desc' : 'asc'}`,\n      filter: data.filter,\n      field: lookup.field,\n      ...params\n    }\n\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setData(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const isActive = args => {\n    return (lookup && lookup.field && args === lookup.field ? 'active' : '')\n  }\n\n  const onClickHospitalItem = () => {\n    setLookup(lookups.hospital_items)\n    setData({...data, header: 'Hospital Item List', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n  const onClickNotCoveredReason = () => {\n    setLookup(lookups.reason_covered)\n    setData({...data, header: 'Not Covered Reasons', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickChargingReason = () => {\n    setLookup(lookups.reason_charging)\n    setData({...data, header: 'Reasons For Charging Member', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickClaimSource = () => {\n    setLookup(lookups.claims_source)\n    setData({...data, header: 'Claim Source', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickReturnReason = () => {\n    setLookup(lookups.reason_return)\n    setData({...data, header: 'Reimbursement Return Reasons', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickRejectReason = () => {\n    setLookup(lookups.reason_reject)\n    setData({...data, header: 'Reimbursement Reject Reasons', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickClaimSubType = () => {\n    setLookup(lookups.claim_sub_type)\n    setData({...data, header: 'Claim Sub-Type', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickClaimSubSubType = () => {\n    setLookup(lookups.claim_sub_sub_type)\n    setData({...data, header: 'Claim Sub Sub-Type', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const handleOnSort = orderBy => e => {\n    setData(p => ({ ...p, orderBy, order: !data.order }))\n    handleOnChange({ sort: `${orderBy}|${data.order ? 'asc' : 'desc'}` })\n  }\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setData(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnChange({ filter: { ...data.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  const handleOnSaveItem = () => {\n    LoadingService.loading(true)\n    const initialLookup = lookup\n    const _params = {\n      limit: 1,\n      page: 1,\n      search: {\n        description: item.description,\n        code: item.code\n      },\n      field: lookup.field\n    }\n    const handleOnOk = () => {\n      setShowAlert(state => ({ ...state, open: false }))\n    }\n\n    if (!item.description.trim()) {\n      setShowAlert(state =>\n        ({\n          ...state,\n          open: true,\n          message: 'Description details is empty. Please input the description details.',\n          onOk: handleOnOk,\n          okLabel: 'Okay',\n          cancelLabel: ''\n        }))\n      LoadingService.loading(false)\n    } else {\n      ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n        const { results } = res.data\n        if (results.length > 0) {\n          setShowAlert(state =>\n            ({\n              ...state,\n              open: true,\n              message: 'Description details already exists. Please change the description details encoded.',\n              onOk: handleOnOk,\n              okLabel: 'Okay',\n              cancelLabel: ''\n            }))\n        } else {\n          if (showAddItem.mode === 'add') {\n            ClaimsMaintainerServices.storeLookups({ on: lookup.on, data: item, params: { field: lookup.field } }).then(res => {\n              setItem(initialItem)\n              setLookup(false)\n              setLookup(initialLookup)\n              setShowAddItem({...showAddItem, show: false})\n              LoadingService.loading(false)\n            })\n          } else if (showAddItem.mode === 'edit') {\n            ClaimsMaintainerServices.updateLookups({ on: lookup.on, data: item, code: item.code, params: { field: lookup.field } }).then(res => {\n              setItem(initialItem)\n              setLookup(false)\n              setLookup(initialLookup)\n              setShowAddItem({...showAddItem, show: false})\n              LoadingService.loading(false)\n            })\n          }\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  const handleOnEditItem = item => {\n    setShowAddItem({...showAddItem, show: true, mode: 'edit'})\n    setItem({\n      description: item.description,\n      code: item.code,\n      status: item.status,\n      active: item.status === 'Active',\n      deactivate: item.status === 'Inactive'\n    })\n  }\n\n  const handleOnCancelItem = () => {\n    if (item.description) {\n      setShowAlert(state =>\n        ({\n          ...state,\n          open: true,\n          message: 'Are you sure you want to discard your changes?',\n          onOk: () => {\n            setShowAlert(alert => ({...alert, open: false}))\n            setShowAddItem(show => ({...show, show: false}))\n            setItem(item => ({...item, description: ''}))\n          },\n          okLabel: 'Yes',\n          cancelLabel: 'No'\n        }))\n    } else {\n      setShowAddItem({...showAddItem, show: false})\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['button-parent']}>\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='hospital-item-list' className={`button-positive ${classes[isActive('hospital-item-list')]}`} onClick={onClickHospitalItem} >\n          Hospital Item List\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='not-covered-reason' className={`button-positive ${classes[isActive('covered-reason')]}`} onClick={onClickNotCoveredReason} >\n          Not Covered Reason\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='reason-for-charging' className={`button-positive ${classes[isActive('charging-reason')]}`} onClick={onClickChargingReason} >\n          Reason for Charging Member\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-source' className={`button-positive ${classes[isActive('claims-source')]}`} onClick={onClickClaimSource} >\n          Claim Source\n        </Button>\n      </div>\n\n      <div className={classes['button-parent']}>\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='reimbursement-return-reason' className={`button-positive ${classes[isActive('return-reason')]}`} onClick={onClickReturnReason} >\n          Reimbursement Return Reason\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='reimbursement-reject-reason' className={`button-positive ${classes[isActive('reject-reason')]}`} onClick={onClickRejectReason} >\n          Reimbursement Reject Reason\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-sub-type' className={`button-positive ${classes[isActive('claims-sub-type')]}`} onClick={onClickClaimSubType} >\n          Claim Sub-Type\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-sub-sub-type' className={`button-positive ${classes[isActive('claims-sub-sub-type')]}`} onClick={onClickClaimSubSubType} >\n          Claim Sub Sub-Type\n        </Button>\n      </div>\n\n      <div className={classes.header}>\n        <div className={classes['header-wrapper']}>\n          <span className={classes['header-text']}> {data.header} </span>\n          <Button disabled={showAddItem.show} variant='contained' color='primary' id='add-item' className='button-positive' onClick={() => setShowAddItem({...showAddItem, show: true, mode: 'add'})} >\n           + Add\n          </Button>\n        </div>\n      </div>\n\n      {showAddItem.show && <div className={classes['add-item-root']}>\n        <div className={classes.wrapper}>\n          <span className={classes['header-text']}>\n            Description:\n          </span>\n          <div className={classes['text-wrapper']}>\n            <TextField\n              id={'description-field'}\n              value={item.description}\n              onChange={event => { setItem({...item, description: event.target.value}) }}\n            />\n          </div>\n          <div className={classes['radio-buttons']}>\n            <div className={classes.activate}>\n              Active:\n              <Radio\n                color='primary'\n                id={'activate'}\n                checked={item.active}\n                onClick={() =>\n                  setItem(\n                    {...item,\n                      status: 'Active',\n                      active: true,\n                      deactivate: false})} />\n            </div>\n            <div className={classes.deactivate}>\n              Deactivate:\n              <Radio\n                color='primary'\n                id={'deactivate'}\n                checked={item.deactivate}\n                onClick={() =>\n                  setItem(\n                    {...item,\n                      status: 'Inactive',\n                      active: false,\n                      deactivate: true})} />\n            </div>\n          </div>\n          <div className={classes['button-wrapper']}>\n            <Button variant='contained' color='primary' id='add-item' className='button-positive' onClick={handleOnSaveItem} >\n              Save\n            </Button>\n            <Button variant='contained' color='primary' id='add-item' className='button-negative' onClick={handleOnCancelItem} >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </div>}\n\n      {!showAddItem.show && <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <React.Fragment>\n              <TableRow>\n                {columns.map(headCell => (\n                  <TableCell key={headCell.sortField} id={`sort-${headCell.id}`}>\n                    <TableSortLabel\n                      active={data.orderBy === headCell.sortField}\n                      direction={data.order ? 'asc' : 'desc'}\n                      onClick={handleOnSort(headCell.sortField)}\n                    >\n                      {headCell.name}\n                    </TableSortLabel>\n                    <TextField\n                      value={data.filter[headCell.sortField].value || ''}\n                      onChange={event => {\n                        const search = event.target.value\n                        setData(p => ({ ...p, filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: search,\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n                <TableCell key={'action'} id={`sort-action`} />\n              </TableRow>\n            </React.Fragment>\n\n          }\n          body={data && data.data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`item-description-${index}`}>{item.description}</TableCell>\n              <TableCell id={`item-status-${index}`}>{item.status}</TableCell>\n              <TableCell align={'center'}>\n                <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`} onClick={() => handleOnEditItem(item)} >\n                  Edit\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={data && data.count}\n          page={data && data.page}\n          limit={data && data.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={handleOnChange}\n        />\n      </div>}\n      <Alert\n        open={showAlert.open}\n        message={showAlert.message}\n        okLabel={showAlert.okLabel}\n        cancelLabel={showAlert.cancelLabel}\n        onCancel={() => setShowAlert(alert => ({...alert, open: false}))}\n        onOk={showAlert.onOk}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\n\n// Pages of Batch Encoder Supervisor\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Pages of Claims Details Encoder Supervisor\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from '../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\n\n// Pages of PR Supervisor\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Pages of Claim Manager\nimport Dashboard from '../Components/ClaimsManager/Dashboard/Dashboard'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// ClaimsManager\nimport BatchDetailsPage from '../Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage'\n\n// Maintenance Page\nimport MaintenancePage from '../Components/ClaimsManager/MaintenancePage/MaintenancePage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport ClaimsManagerServices from 'Services/Api/ClaimsManagerServices/ClaimsManagerServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Reports',\n    icon: 'chart-bar',\n    to: '/reports'\n  },\n  {\n    label: 'Maintenance',\n    icon: 'tools',\n    to: '/claims/maintenance'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  },\n  maintenance: {\n    text: 'Claims Maintenance',\n    to: '/claims/maintenance'\n  },\n  submittedSpecificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}/submitted`\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'] }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst prManagerPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    close: true\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nfunction ClaimsManagerRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n      <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n\n      {/* PR Supervisor Pages */}\n      <Route\n        path='/payment-request/:bundle_number/submitted'\n        exact\n        render={props => <SubmittedPaymentRequestPage isManager {...props} />}\n      />\n      <Route\n        path='/payment-request/:bundle_number/submitted/:batch_number'\n        exact\n        render={props => (\n          <BatchDetailsPage ApiService={ClaimsManagerServices} UserManagementApi={UserManagementServices} {...props} />\n        )}\n      />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n\n      <Route\n        path='/payment-request/:bundle_number/submitted/:batch_number/claim/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={[\n              'dashboard',\n              'submittedPaymentRequest',\n              `submittedSpecificPaymentRequest:${props.match.params.bundle_number}`,\n              `specificBatch:${props.match.params.batch_number}`,\n              'claims',\n              `specificClaim:${props.match.params.claim_number}`\n            ]}\n            {...props}\n            isManager\n            permissions={prManagerPermissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      {/* PR Supervisor Pages */}\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      <Route path='/claims/maintenance' exact component={MaintenancePage} />\n    </Switch>\n  )\n}\n\nexport default ClaimsManagerRoutes\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: null\n}\nconst bundlesReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BUNDLE_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'ADD_BUNDLE':\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      }\n\n    case 'SET_SELECTED_BUNDLE':\n      return {\n        ...state,\n        selected: action.payload\n      }\n\n    case 'SET_BUNDLE_BATCHES':\n      return {\n        ...state,\n        selected: { ...state.selected, batches: action.payload }\n      }\n\n    case 'ADD_BATCH':\n      const { batches } = state.selected\n      const { items } = batches\n\n      return {\n        ...state,\n        selected: { ...state.selected, batches: { ...batches, items: [action.payload, ...items] } }\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default bundlesReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: {},\n  batchNumber: '',\n  show: false,\n  action: '',\n  saveControl: false\n}\nconst batchReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BATCH_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'SET_BATCH_ACTION':\n      return {\n        ...state,\n        action: action.payload\n      }\n\n    case 'SET_SELECTED_BATCH':\n      return {\n        ...state,\n        selected: { ...state.selected, ...action.payload }\n      }\n\n    case 'SET_SHOW_BATCH_FORM':\n      return {\n        ...state,\n        show: action.payload\n      }\n\n    case 'SET_SAVE_BATCH_CONTROL':\n      return {\n        ...state,\n        saveControl: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default batchReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  client: {\n    registered_name: [],\n    corporate_account_no: [],\n    data: []\n  }\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  // value of suggestion first render without calling action (temp) reason: action.for is undefined on first render if there's a selector on component\n  // tried to solved by useEffect but failed since useEffect will render after component's rendered\n  if (!action.for) return initialState\n  // value of suggestion calling action (temp) if not equal to BATCH_ENCODING (when calling an action)\n  else if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import { combineReducers } from 'redux'\n\nimport bundlesReducer from './bundlesReducer'\nimport batchReducer from './batchReducer'\nimport suggestionsReducer from './suggestionsReducer'\n\nexport default combineReducers({\n  bundles: bundlesReducer,\n  batch: batchReducer,\n  suggestions: suggestionsReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_ClAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_ClAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'SET_ClAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'ADD_ClAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  pro: {\n    id: [],\n    name: [],\n    data: []\n  },\n  facility: {\n    id: [],\n    name: [],\n    data: []\n  },\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  anesthesiologist: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  pfDoctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  hospitalItem: {\n    id: [],\n    name: [],\n    data: []\n  },\n  icd10: [],\n  cpt: {\n    description: [],\n    code: [],\n    data: []\n  },\n  contract: {\n    years: []\n  }\n}\n\nconst icd10 = {\n  description: [],\n  code: [],\n  data: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { field } = action.payload\n        return {\n          ...state,\n          [field]: [...state[field], { ...icd10 }]\n        }\n      })()\n\n    case 'REMOVE_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { index, field } = action.payload\n        return {\n          ...state,\n          [field]: state[field].filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    case 'RESET_SUGGESTION_ARRAY':\n      return (() => {\n        const { field, index } = action.payload\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              for (let f in icd10) i[f] = icd10[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst grandTotalReducer = (state = 0, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_GRAND_TOTAL':\n      return 0\n\n    case 'SET_GRAND_TOTAL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default grandTotalReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    description: '',\n    code: '',\n    tooth_number: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0\n  }\n}\n\nconst dentalProcedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_DENTAL_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default dentalProcedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  notes: [],\n  assignee: { id: '', name: '' },\n  note: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_NOTES':\n      return initialValue\n\n    case 'SET_REASSIGN_NOTES':\n      return (() => {\n        return {\n          ...state,\n          note: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport grandTotalReducer from './grandTotalReducer'\nimport dentalProcedureReducer from './dentalProcedureReducer'\nimport reassignReducer from './reassignReducer'\n\nexport default combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  grandTotal: grandTotalReducer,\n  dentalProcedure: dentalProcedureReducer,\n  reassign: reassignReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_CLAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_CLAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  pro: {\n    id: [],\n    name: [],\n    data: []\n  },\n  facility: {\n    id: [],\n    name: [],\n    data: []\n  },\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  anesthesiologist: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  pfDoctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  hospitalItem: {\n    id: [],\n    name: [],\n    data: []\n  },\n  icd10: [],\n  cpt: {\n    description: [],\n    code: [],\n    data: []\n  },\n  contract: {\n    years: []\n  }\n}\n\nconst icd10 = {\n  description: [],\n  code: [],\n  data: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { field } = action.payload\n        return {\n          ...state,\n          [field]: [...state[field], { ...icd10 }]\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    case 'RESET_SUGGESTION_ARRAY':\n      return (() => {\n        const { field, index } = action.payload\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              for (let f in icd10) i[f] = icd10[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst discrepancyReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DISCREPANCY':\n      return initialValue\n\n    case 'SET_DISCREPANCY':\n      return { ...initialValue, ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default discrepancyReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst escalationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ESCALATION_MESSAGES':\n      return initialValue\n\n    case 'ADD_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_ESCALATION_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default escalationReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst inquiryReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_INQUIRY_MESSAGES':\n      return initialValue\n\n    case 'ADD_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_INQUIRY_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default inquiryReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_MESSAGES':\n      return initialValue\n\n    case 'ADD_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import constants from './../../contants'\n\nconst initialValue = true\n\nconst rejectReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_REJECT_CONTROL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default rejectReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: []\n}\n\nconst reconReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_RECON_NOTES':\n      return initialValue\n\n    case 'SET_RECON_NOTES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reconReducer\n","import constants from './../../contants'\n\nconst initialValue = '--'\n\nconst utilizationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_LIMIT_TYPE':\n      return (state = action.payload)\n\n    case 'RESET_LIMIT_TYPE':\n      return initialValue\n\n    default:\n      return state\n  }\n}\n\nexport default utilizationReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport discrepancyReducer from './discrepancyReducer'\nimport errorReducer from './errorReducer'\nimport escalationReducer from './escalationReducer'\nimport inquiryReducer from './inquiryReducer'\nimport reassignReducer from './reassignReducer'\nimport rejectReducer from './rejectReducer'\nimport reconReducer from './reconReducer'\nimport utilizationReducer from './utilizationReducer'\n\nconst reducers = combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  discrepancy: discrepancyReducer,\n  error: errorReducer,\n  inquiries: inquiryReducer,\n  escalations: escalationReducer,\n  reassign: reassignReducer,\n  rejectStatus: rejectReducer,\n  recon: reconReducer,\n  title: utilizationReducer\n})\n\nexport default reducers\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'CLAIMS') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport BatchEncoding from './BatchEncoding'\nimport ClaimsEncoding from './ClaimsEncoding'\nimport ClaimsAnalysis from './ClaimsAnalysis'\n\nconst reducers = combineReducers({\n  BatchEncoding,\n  ClaimsEncoding,\n  ClaimsAnalysis\n})\n\nexport default reducers\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Routes by role\nimport BatchEncoderRoutes from './Routes/BatchEncoder'\nimport BatchEncoderSupervisorRoutes from './Routes/BatchEncoderSupervisor'\nimport ClaimsDetailsEncoderRoutes from './Routes/ClaimsDetailsEncoder'\nimport ClaimsDetailsEncoderSupervisorRoutes from './Routes/ClaimsDetailsEncoderSupervisor'\nimport ClaimsAnalystRoutes from './Routes/ClaimsAnalyst'\nimport PaymentRequestRoutes from './Routes/PaymentRequest'\nimport PaymentRequestSupervisorRoutes from './Routes/PaymentRequestSupervisor'\nimport MedicalConsultantRoutes from './Routes/MedicalConsultant'\nimport ClaimsReconRoutes from './Routes/ClaimsRecon'\nimport ClaimsVerifierSupervisorRoutes from './Routes/ClaimsVerifierSupervisor'\nimport ClaimsManagerRoutes from './Routes/ClaimsManager'\n\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Store\nimport { Provider } from 'react-redux'\nimport Store from './Store'\n\nexport default function ClaimsModule ({ history }) {\n  const [userRole, setUserRole] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(true)\n\n  React.useEffect(() => {\n    document.title = 'HIMS - Claims'\n    const role = localStorage.getItem('role')\n    setUserRole(role)\n    setIsLoading(false)\n  }, [])\n\n  const batchEncoderLogic = () => {\n    if (localStorage.getItem('from_login')) {\n      BatchEncodingServices.createBundle().then(res => {\n        const { data } = res.data\n        localStorage.removeItem('from_login')\n        history.push(`/bundles/${data}/create`)\n      })\n    } else return <Route path='/' component={BatchEncoderRoutes} />\n  }\n\n  return (\n    <Provider store={Store}>\n      {!isLoading && (\n        <Switch>\n          {userRole === 'BATCH_ENCODER' && batchEncoderLogic()}\n          {userRole === 'BATCH_ENCODER_SUPERVISOR' && <Route path='/' component={BatchEncoderSupervisorRoutes} />}\n\n          {userRole === 'CLAIMS_ENCODER' && <Route path='/' component={ClaimsDetailsEncoderRoutes} />}\n          {userRole === 'CLAIMS_DETAILS_ENCODER' && <Route path='/' component={ClaimsDetailsEncoderRoutes} />}\n          {userRole === 'CLAIMS_DETAILS_ENCODER_SUPERVISOR' && (\n            <Route path='/' component={ClaimsDetailsEncoderSupervisorRoutes} />\n          )}\n\n          {userRole === 'CLAIMS_VERIFIER' && <Route path='/' component={ClaimsAnalystRoutes} />}\n          {userRole === 'CLAIMS_ANALYST' && <Route path='/' component={ClaimsAnalystRoutes} />}\n\n          {userRole === 'PR_OFFICER' && <Route path='/' component={PaymentRequestRoutes} />}\n          {userRole === 'PR_OFFICER_SUPERVISOR' && <Route path='/' component={PaymentRequestSupervisorRoutes} />}\n\n          {userRole === 'MEDICAL_CONSULTANT' && <Route path='/' component={MedicalConsultantRoutes} />}\n\n          {userRole === 'CLAIMS_RECON' && <Route path='/' component={ClaimsReconRoutes} />}\n\n          {userRole === 'CLAIMS_VERIFIER_SUPERVISOR' && <Route path='/' component={ClaimsVerifierSupervisorRoutes} />}\n          {userRole === 'CLAIMS_SUPERVISOR' && <Route path='/' component={ClaimsVerifierSupervisorRoutes} />}\n\n          {userRole === 'CLAIMS_MANAGER' && <Route path='/' component={ClaimsManagerRoutes} />}\n        </Switch>\n      )}\n    </Provider>\n  )\n}\n","import numeral from 'numeral'\nimport moment from 'moment'\n\nconst CurrencyFormatter = value => {\n  return numeral(value).format('0,0.00')\n}\n\nconst UpperWord = sentence => {\n  return sentence.charAt(0).toUpperCase() + sentence.slice(1)\n}\n\nconst DigitFormatter = value => {\n  return numeral(value).format('0,0')\n}\n\nconst DateFormatter = (value, format = 'MM/DD/YYYY') => {\n  const _value = moment(value)\n  return _value.isValid() ? moment(value).format(format) : ''\n}\n\nconst DateFormatterByAbbreviation = (value, format = 'MMM DD, YYYY') => {\n  return moment(value).format(format)\n}\n\nconst DateFormatterFromNow = value => {\n  return moment(value).fromNow()\n}\n\nconst LargeNumberFormatter = value => {\n  return parseFloat(numeral(value).format('0,0.00'))\n}\n\nconst NameFormatter = args => {\n  const { initial, abr } = args\n  const { lastName, firstName, middleName } = args\n  const { last_name, first_name, middle_name } = args\n\n  return {\n    format1: [lastName || last_name, ',', firstName || first_name, middleName || middle_name, initial, abr]\n      .filter(Boolean)\n      .join(' '),\n    format2: [abr, firstName || first_name, middleName || middle_name, lastName || last_name, initial]\n      .filter(Boolean)\n      .join(' ')\n  }\n}\n\nexport {\n  CurrencyFormatter,\n  DigitFormatter,\n  UpperWord,\n  DateFormatter,\n  DateFormatterByAbbreviation,\n  DateFormatterFromNow,\n  LargeNumberFormatter,\n  NameFormatter\n}\n","const extract = args => {\n  let { value, error = {} } = args\n\n  let _errors\n\n  error = error || {}\n\n  if (error.details) {\n    _errors = {}\n    for (let e of error.details) {\n      const [field] = e.path\n      const message = e.message\n      _errors[field] = message\n    }\n  }\n\n  return { value, error: _errors }\n}\n\nexport default extract\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function Alert (props) {\n  const defaultFunction = () => {}\n  const {\n    message,\n    open = false,\n    cancelLabel,\n    okLabel,\n    onOk = defaultFunction,\n    onCancel = defaultFunction,\n    onClose = defaultFunction\n  } = props\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>{message}</DialogTitle>\n        <DialogActions>\n          {cancelLabel && (\n            <Button\n              id='alert-dialog-cancel'\n              onClick={onCancel}\n              variant='contained'\n              color='primary'\n              className='button-negative'\n            >\n              {cancelLabel}\n            </Button>\n          )}\n\n          {okLabel && (\n            <Button\n              id='alert-dialog-ok'\n              onClick={onOk}\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              autoFocus\n            >\n              {okLabel}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\n// import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\n\n// Styles\nimport classes from './Table.module.scss'\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}))\n\nfunction TablePaginationActions (props) {\n  const classes = useStyles1()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label='first page'>\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label='previous page'>\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}\n\nexport default function CustomTable ({\n  TableContainerProps,\n  TableProps,\n  head,\n  body,\n  pagination = true,\n  count = 0,\n  page = 1,\n  limit = 10,\n  rowsPerPageOptions = [5, 10, 25],\n  onChange\n}) {\n  // const emptyRows = limit - Math.min(limit, count - (page - 1) * limit)\n\n  const handleChangePage = (event, newPage) => {\n    onChange({ page: newPage + 1 })\n  }\n\n  const handleChangeRowsPerPage = event => {\n    const value = parseInt(event.target.value)\n    onChange({ limit: value, page: 1 })\n  }\n\n  return (\n    <React.Fragment>\n      <TableContainer component={Paper} className={classes.root} {...TableContainerProps}>\n        <Table className={classes.table} aria-label='custom pagination table' {...TableProps}>\n          <TableHead>{head}</TableHead>\n          <TableBody>\n            {body}\n            {/* {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows, backgroundColor: 'white' }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Table className={classes.footer}>\n        <TableBody>\n          <TableRow>\n            {pagination && (\n              <TablePagination\n                rowsPerPageOptions={rowsPerPageOptions}\n                count={count}\n                rowsPerPage={limit}\n                page={page - 1}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            )}\n          </TableRow>\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    minWidth: 400,\n    border: '1px solid transparent'\n  },\n  focus: {\n    borderColor: 'green'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n})\n\nexport default function SearchTextComponent ({ value, onChange, placeholder = '', id }) {\n  const classes = useStyles()\n\n  const [focus, setFocus] = React.useState()\n\n  return (\n    <Paper className={`${classes.root} ${focus && classes.focus} box-shadow-field`} onBlur={() => setFocus(false)}>\n      <IconButton className={classes.iconButton} aria-label='search'>\n        <SearchIcon />\n      </IconButton>\n      <InputBase\n        id={id}\n        className={classes.input}\n        placeholder={placeholder}\n        value={value || null}\n        onChange={e => onChange && onChange(e)}\n        autoComplete='off'\n        onFocus={() => setFocus(true)}\n      />\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './TextFieldCurrency.module.scss'\nexport default function TextFieldCurrency (props) {\n  const { label = '', required, currency = true, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {CurrencyFormatter(other.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                thousandSeparator\n                decimalScale={2}\n                fixedDecimalScale\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { floatValue } = values\n                  return floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n                onBlur={() => setFocus(false)}\n                // {...other}\n              />\n              {currency && (\n                <div className={classes.currency}>\n                  <Typography variant='subtitle2' className={classes.label}>\n                    PHP\n                  </Typography>\n                </div>\n              )}\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n// CSS Classes\nimport classes from './TaskTrayComponent.module.scss'\n\nexport default function TaskTrayComponent ({ children, sizes, title = 'TASK TRAY', showTitle = true }) {\n  let items = React.Children.toArray(children)\n\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'DashboardTileComponent') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n\n  const _sizes = sizes || {\n    xs: 12,\n    sm: 6,\n    lg: 4\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root}>\n        {showTitle && (\n          <Typography variant='subtitle1' className={classes.title}>\n            {title}\n          </Typography>\n        )}\n        <Grid container className={classes.wrapper} spacing={3}>\n          {items.map((item, index) => {\n            let itemSize = item.props.sizes || {}\n            let s = { ..._sizes, ...itemSize }\n            return (\n              <Grid item {...s} key={index}>\n                {item}\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__2LrBe\",\"teeth\":\"style_teeth__2oVTW\",\"flip-x\":\"style_flip-x__1PGnc\",\"flip-y\":\"style_flip-y__33IP9\",\"crown\":\"style_crown__1599k\",\"gums\":\"style_gums__11FhV\",\"extracted\":\"style_extracted__3PnGn\",\"filled\":\"style_filled__1lsjD\",\"other-details\":\"style_other-details__NUZKH\",\"circle\":\"style_circle__15989\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark\n      },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}))\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color='inherit' variant='subtitle1'>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant='h6' id='tableTitle'>\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title='Delete'>\n            <IconButton aria-label='delete'>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title='Filter list'>\n            <IconButton aria-label='filter list'>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  analystTable: {\n    minWidth: 650\n  },\n  tableWrapper: {\n    overflowX: 'hidden'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}))\n\nexport default function EnhancedTable (props) {\n  const {\n    headCells,\n    children,\n    handleRequestSort,\n    handleSelectAllClick,\n    order,\n    orderBy,\n    pagination,\n    checkAll,\n    sorter,\n    size,\n    indeterminate,\n    checked,\n    checkboxColor,\n    analyst,\n    allowCheck = true,\n    allowCheckDisabled = false,\n    selectStatus = false\n  } = props\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={`${analyst ? classes.analystTable : classes.table}`}\n            aria-labelledby='tableTitle'\n            size={size}\n          >\n            <TableHead>\n              <TableRow>\n                {selectStatus\n                  ? checkAll && (\n                    <TableCell padding='checkbox'>\n                      {allowCheck ? (\n                        <Checkbox\n                          disabled={allowCheckDisabled}\n                          indeterminate={indeterminate}\n                          checked={checked}\n                          onChange={handleSelectAllClick}\n                          color={checkboxColor}\n                        />\n                      ) : null}\n                    </TableCell>\n                  )\n                  : null}\n\n                {headCells.map(headCell => (\n                  <TableCell\n                    key={headCell.id}\n                    align={headCell.center ? 'center' : headCell.numeric ? 'right' : 'left'}\n                    padding={headCell.disablePadding ? 'none' : 'default'}\n                    sortDirection={orderBy === headCell.id ? order : false}\n                    width={headCell.width}\n                    id={headCell.id}\n                  >\n                    {sorter ? (\n                      <TableSortLabel\n                        active={orderBy === headCell.id}\n                        direction={order}\n                        onClick={event => handleRequestSort(event, headCell.id)}\n                      >\n                        {headCell.label}\n                        {orderBy === headCell.id ? (\n                          <span className={classes.visuallyHidden}>\n                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                          </span>\n                        ) : null}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            {children}\n          </Table>\n        </div>\n        {pagination && <TablePagination component='div' {...pagination} />}\n      </Paper>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Table_root__1yDG4\",\"loader\":\"Table_loader__jTLoL\",\"footer\":\"Table_footer__3Si1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TaskTrayComponent_root__31ufL\",\"title\":\"TaskTrayComponent_title__2hrpU\",\"wrapper\":\"TaskTrayComponent_wrapper__1iTYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldCurrency_root__fkWBS\",\"label\":\"TextFieldCurrency_label__3VB-Y\",\"wrapper\":\"TextFieldCurrency_wrapper__2DwLz\",\"read-only-value\":\"TextFieldCurrency_read-only-value__3klW0\",\"text-field\":\"TextFieldCurrency_text-field__2ZFkS\",\"input\":\"TextFieldCurrency_input__3v0Q_\",\"currency\":\"TextFieldCurrency_currency__20Xbk\",\"focus\":\"TextFieldCurrency_focus__3OqZJ\",\"has-error\":\"TextFieldCurrency_has-error__fUhVi\",\"error\":\"TextFieldCurrency_error__3bHzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DashboardTileComponent_root__3ZFup\",\"wrapper\":\"DashboardTileComponent_wrapper__1hVRB\",\"header\":\"DashboardTileComponent_header__2_IQZ\",\"input\":\"DashboardTileComponent_input__sFY_A\",\"first-row\":\"DashboardTileComponent_first-row__KbzvW\",\"count\":\"DashboardTileComponent_count__NJO1q\",\"filter\":\"DashboardTileComponent_filter__3FsXI\",\"second-row\":\"DashboardTileComponent_second-row__1xXpk\",\"title\":\"DashboardTileComponent_title__1vnM-\",\"list\":\"DashboardTileComponent_list__38Z1j\",\"action\":\"DashboardTileComponent_action__2L_x5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__8Tg0R\",\"header-container\":\"ViewList_header-container__2ebNU\",\"header\":\"ViewList_header__1yXdi\",\"title\":\"ViewList_title__2CYeW\",\"content\":\"ViewList_content__boknL\",\"search\":\"ViewList_search__2dgTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TicketListComponent_root__aFbrR\",\"title\":\"TicketListComponent_title__1ySxt\",\"wrapper\":\"TicketListComponent_wrapper__19DvO\",\"content\":\"TicketListComponent_content__2qWWX\",\"header\":\"TicketListComponent_header__1OiZt\",\"input\":\"TicketListComponent_input__1VLul\",\"count\":\"TicketListComponent_count__3DIoE\",\"filter\":\"TicketListComponent_filter__1CeKK\",\"list\":\"TicketListComponent_list__314I6\",\"action\":\"TicketListComponent_action__Ufizk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__oAI_u\",\"tiles\":\"Dashboard_tiles__2syUb\",\"task-tray\":\"Dashboard_task-tray__XT4CQ\",\"list-item\":\"Dashboard_list-item__12cH_\",\"details\":\"Dashboard_details__KoE3I\",\"detail-item\":\"Dashboard_detail-item__1IcO1\",\"label\":\"Dashboard_label__27GN_\",\"content\":\"Dashboard_content__1bf_x\",\"action\":\"Dashboard_action__3rzPy\",\"ticket-list\":\"Dashboard_ticket-list__2n3Wk\",\"completed_task\":\"Dashboard_completed_task__1hbob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete_root__2814h\",\"label\":\"AutoComplete_label__3-iRy\",\"wrapper\":\"AutoComplete_wrapper__2kjw3\",\"read-only-value\":\"AutoComplete_read-only-value__6V5Rg\",\"autocomplete-field\":\"AutoComplete_autocomplete-field__DKxfc\",\"form-control\":\"AutoComplete_form-control__izw0T\",\"input\":\"AutoComplete_input__1okbY\",\"suggestions\":\"AutoComplete_suggestions__3l5Zj\",\"focus\":\"AutoComplete_focus__2WKYu\",\"has-error\":\"AutoComplete_has-error__1GzeK\",\"error\":\"AutoComplete_error__QM8Cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker_root__MX4vO\",\"label\":\"DatePicker_label__2BW98\",\"wrapper\":\"DatePicker_wrapper__3veK8\",\"read-only-value\":\"DatePicker_read-only-value__2RKjx\",\"text-field\":\"DatePicker_text-field__2A671\",\"no-margin\":\"DatePicker_no-margin__2gW7n\",\"input\":\"DatePicker_input__2NmuO\",\"date-button\":\"DatePicker_date-button__NIXXn\",\"focus\":\"DatePicker_focus__QzQPi\",\"has-error\":\"DatePicker_has-error__dQMqm\",\"disabled\":\"DatePicker_disabled__1dIUt\",\"error\":\"DatePicker_error__3kYtU\",\"date\":\"DatePicker_date__3vBBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldNumber_root__ZJK7b\",\"label\":\"TextFieldNumber_label__3x30X\",\"wrapper\":\"TextFieldNumber_wrapper__26xqZ\",\"read-only-value\":\"TextFieldNumber_read-only-value__37dIc\",\"text-field\":\"TextFieldNumber_text-field__2-te1\",\"input\":\"TextFieldNumber_input__2aj-i\",\"focus\":\"TextFieldNumber_focus__1VUVD\",\"has-error\":\"TextFieldNumber_has-error__2Z7EW\",\"error\":\"TextFieldNumber_error__1YPiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BundleDetails_root__1kDZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchList_root__1b5fa\",\"buttonWrapper\":\"BatchList_buttonWrapper__NCrl5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DropDown_root__1k5bx\",\"label\":\"DropDown_label__nY7ih\",\"wrapper\":\"DropDown_wrapper__3QKA8\",\"read-only-value\":\"DropDown_read-only-value__kiJtQ\",\"select-container\":\"DropDown_select-container__cdS_q\",\"select\":\"DropDown_select__3X8Jg\",\"input\":\"DropDown_input__2BzGr\",\"focus\":\"DropDown_focus__9njFf\",\"has-error\":\"DropDown_has-error__1knu_\",\"disabled\":\"DropDown_disabled__NMExl\",\"error\":\"DropDown_error__21XnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchForm_root__1Rotq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"BundlePage_header__14ooW\",\"title\":\"BundlePage_title__1Lc1W\",\"root\":\"BundlePage_root__a3kNL\",\"list-header\":\"BundlePage_list-header__1bSSF\",\"actions\":\"BundlePage_actions__3D_Z5\",\"bundle-details\":\"BundlePage_bundle-details__2awUE\",\"batch-list\":\"BundlePage_batch-list__3fbdk\",\"table-container\":\"BundlePage_table-container__4YbDV\",\"buttonWrapper\":\"BundlePage_buttonWrapper__y7DXv\",\"delete-button\":\"BundlePage_delete-button__2Bc0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NewBundlePage_root__30-wL\",\"upload-container\":\"NewBundlePage_upload-container__1tAyb\",\"label\":\"NewBundlePage_label__tShUk\",\"form\":\"NewBundlePage_form__2WWBk\",\"inputs\":\"NewBundlePage_inputs__1PsuR\",\"input\":\"NewBundlePage_input__l22M7\",\"actions\":\"NewBundlePage_actions__1XH58\",\"save\":\"NewBundlePage_save__I7VG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadSpace_root__3I1-s\",\"dragged\":\"UploadSpace_dragged__1DiLS\",\"container\":\"UploadSpace_container__38f8b\",\"clickable\":\"UploadSpace_clickable__20X37\",\"icon\":\"UploadSpace_icon__13iY0\",\"label\":\"UploadSpace_label__bx5xk\",\"warning\":\"UploadSpace_warning__2UISF\",\"progress-container\":\"UploadSpace_progress-container__2XgEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DynamicTable_root__3YBZd\",\"file-name-container\":\"DynamicTable_file-name-container__l4skU\",\"file-name\":\"DynamicTable_file-name__I3JZH\",\"icon\":\"DynamicTable_icon__384D9\",\"table\":\"DynamicTable_table__IETmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DataPairs_root__3KG2O\",\"header\":\"DataPairs_header__Bkti-\",\"child\":\"DataPairs_child__3_ngq\",\"source\":\"DataPairs_source__HI-Vj\",\"target\":\"DataPairs_target__Eu-V-\",\"action\":\"DataPairs_action__2HV-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FieldMapper_root__3_tUQ\",\"section\":\"FieldMapper_section__3oEw5\",\"groups\":\"FieldMapper_groups__2HNYq\",\"input\":\"FieldMapper_input__2Mszl\",\"field\":\"FieldMapper_field__2nwpO\",\"label\":\"FieldMapper_label__1skyK\",\"table\":\"FieldMapper_table__2XzRc\",\"dialog\":\"FieldMapper_dialog__3aDtJ\",\"header-container\":\"FieldMapper_header-container__2JtIE\",\"header\":\"FieldMapper_header__QCFUW\",\"title\":\"FieldMapper_title__3E3Bf\",\"content\":\"FieldMapper_content__b3Uqj\",\"footer\":\"FieldMapper_footer__3NYKX\",\"action\":\"FieldMapper_action__2Ci4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3S9k1\",\"total\":\"Footer_total__J2brc\",\"total-row\":\"Footer_total-row__1-a_2\",\"total-cell\":\"Footer_total-cell__1mHdx\",\"all-signatories\":\"Footer_all-signatories__D7Jtv\",\"signatories\":\"Footer_signatories__5ifAW\",\"username\":\"Footer_username__XtPqM\",\"line-note\":\"Footer_line-note__3Yc0m\",\"line-received\":\"Footer_line-received__hTOdG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TransmittalReport_root__2Zv5z\",\"header\":\"TransmittalReport_header__3HLGH\",\"typo\":\"TransmittalReport_typo__fEzQn\",\"disabled\":\"TransmittalReport_disabled__c3RPY\",\"content\":\"TransmittalReport_content__3gJmG\",\"filter\":\"TransmittalReport_filter__yA5bA\",\"input\":\"TransmittalReport_input__3LyoB\",\"submit\":\"TransmittalReport_submit__1KdcG\",\"search-header\":\"TransmittalReport_search-header__1szum\",\"search-header-child\":\"TransmittalReport_search-header-child__2rNI2\",\"column\":\"TransmittalReport_column__1Ym0x\",\"body\":\"TransmittalReport_body__Jwdpc\",\"table\":\"TransmittalReport_table__1dZl9\",\"right\":\"TransmittalReport_right__aUA6x\",\"h_amount\":\"TransmittalReport_h_amount__1vDfc\",\"h_ar\":\"TransmittalReport_h_ar__3mcku\",\"h_member\":\"TransmittalReport_h_member__34GFq\",\"h_date\":\"TransmittalReport_h_date__3mIHa\",\"handling\":\"TransmittalReport_handling__3U64z\",\"table-row\":\"TransmittalReport_table-row__1AHwB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsUtilLedgerReport_root__i6NTZ\",\"header\":\"ClaimsUtilLedgerReport_header__6XGzc\",\"content\":\"ClaimsUtilLedgerReport_content__l8uG4\",\"filter\":\"ClaimsUtilLedgerReport_filter__JCkmp\",\"input\":\"ClaimsUtilLedgerReport_input__3Z3xr\",\"submit\":\"ClaimsUtilLedgerReport_submit__1QcUA\",\"body\":\"ClaimsUtilLedgerReport_body__M0UX_\",\"table\":\"ClaimsUtilLedgerReport_table__25ckM\",\"table-row\":\"ClaimsUtilLedgerReport_table-row__279cy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1q5aB\",\"tiles\":\"Dashboard_tiles__2EVcx\",\"row\":\"Dashboard_row__1-jaR\",\"task-tray\":\"Dashboard_task-tray__1GVCA\",\"list-item\":\"Dashboard_list-item__3bt0O\",\"details\":\"Dashboard_details__vEx2z\",\"detail-item\":\"Dashboard_detail-item__2vLSc\",\"label\":\"Dashboard_label__1wDfJ\",\"content\":\"Dashboard_content__3ngEB\",\"action\":\"Dashboard_action__1YK0T\",\"ticket-list\":\"Dashboard_ticket-list__2qkpP\",\"wrapper\":\"Dashboard_wrapper__30OUo\",\"float\":\"Dashboard_float__vdcOu\",\"completed_task\":\"Dashboard_completed_task__2zPQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__23Ujl\",\"header-container\":\"AssignDialog_header-container__yl2nA\",\"header\":\"AssignDialog_header__3VGqX\",\"title\":\"AssignDialog_title__3z9IT\",\"content\":\"AssignDialog_content__ibboc\",\"input\":\"AssignDialog_input__2xDp_\",\"footer\":\"AssignDialog_footer__26ROV\",\"assign\":\"AssignDialog_assign__b5j_4\",\"to\":\"AssignDialog_to__4uznN\",\"action\":\"AssignDialog_action__3Hmu9\",\"message-content\":\"AssignDialog_message-content__3scNs\",\"message\":\"AssignDialog_message__WFHxL\",\"message-child\":\"AssignDialog_message-child__1-8nz\",\"alert-title\":\"AssignDialog_alert-title__2Werr\",\"footer-action\":\"AssignDialog_footer-action__1CV67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBundlesPage_root__3yhzm\",\"content\":\"CreatedBundlesPage_content__38yCp\",\"first-container\":\"CreatedBundlesPage_first-container__22tad\",\"action\":\"CreatedBundlesPage_action__16R81\",\"search\":\"CreatedBundlesPage_search__1ZBFS\",\"table\":\"CreatedBundlesPage_table__295G-\",\"footer\":\"CreatedBundlesPage_footer__2xe-r\",\"actions\":\"CreatedBundlesPage_actions__3feoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DiscrepancyBase_root__3KSsR\",\"input-wrapper\":\"DiscrepancyBase_input-wrapper__1DMc_\",\"max-width\":\"DiscrepancyBase_max-width__AgMfs\",\"auto-width\":\"DiscrepancyBase_auto-width__3hZoL\",\"discrepancy\":\"DiscrepancyBase_discrepancy__EFJsJ\",\"discrepancy-icon\":\"DiscrepancyBase_discrepancy-icon__278mF\",\"with-margin\":\"DiscrepancyBase_with-margin__3UThX\",\"icon\":\"DiscrepancyBase_icon__3BUJ7\",\"display-hidden\":\"DiscrepancyBase_display-hidden__2uBK6\",\"display-none\":\"DiscrepancyBase_display-none__3au4S\",\"message\":\"DiscrepancyBase_message__10P-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberLookup_root__3O8kK\",\"search\":\"ClientMemberLookup_search__2Crg2\",\"table\":\"ClientMemberLookup_table__vUzoY\",\"input\":\"ClientMemberLookup_input__1zsR_\",\"selected\":\"ClientMemberLookup_selected__25J7P\",\"default-override\":\"ClientMemberLookup_default-override__2M4nX\",\"footer\":\"ClientMemberLookup_footer__1TxMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberModal_root__nf2t4\",\"header-container\":\"ClientMemberModal_header-container__2TpBd\",\"header\":\"ClientMemberModal_header__3jFfv\",\"title\":\"ClientMemberModal_title__aQLcu\",\"content\":\"ClientMemberModal_content__1ZzDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"BaseDetails_groups__3iH6M\",\"input\":\"BaseDetails_input__33wlu\",\"wrapper\":\"BaseDetails_wrapper__36CBG\",\"no-pad\":\"BaseDetails_no-pad__hmdGm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__2UDqG\",\"header\":\"ICDTextField_header___QvWL\",\"delete\":\"ICDTextField_delete__1QGhl\",\"description\":\"ICDTextField_description__3nYcX\",\"code\":\"ICDTextField_code__3U5AV\",\"primary\":\"ICDTextField_primary__1iHwC\",\"discrepancy\":\"ICDTextField_discrepancy__S1yCX\",\"wrapper\":\"ICDTextField_wrapper__2CKYW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1e8te\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__PsY8D\",\"has-error\":\"DiagnosisList_has-error__2xPng\",\"title\":\"DiagnosisList_title__1qdNr\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__2ON5n\",\"error\":\"DiagnosisList_error__1Vbz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expandable\":\"CustomTable_expandable__1imJS\",\"container\":\"CustomTable_container__3quUk\",\"content\":\"CustomTable_content__258N4\",\"open\":\"CustomTable_open__2q7AF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__32M3A\",\"groups\":\"ProcedureForm_groups__dcIQZ\",\"input\":\"ProcedureForm_input__38bS_\",\"description\":\"ProcedureForm_description__2Hdy7\",\"code\":\"ProcedureForm_code__i2i2k\",\"buttons\":\"ProcedureForm_buttons__2CdpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3AdZk\",\"table\":\"ProcedureList_table__10YsE\",\"table-header\":\"ProcedureList_table-header__17a3B\",\"table-description\":\"ProcedureList_table-description__22Tav\",\"add-link\":\"ProcedureList_add-link__Jk8bg\",\"row\":\"ProcedureList_row__1SUZy\",\"align\":\"ProcedureList_align__3E32S\",\"center\":\"ProcedureList_center__3umXK\",\"right\":\"ProcedureList_right__yYRNE\",\"discrepancy\":\"ProcedureList_discrepancy__3nlct\",\"icon-container\":\"ProcedureList_icon-container__-1hA_\",\"table-total\":\"ProcedureList_table-total__a6mY3\",\"caption\":\"ProcedureList_caption__aqG17\",\"amount\":\"ProcedureList_amount__3Wz7S\",\"groups\":\"ProcedureList_groups__3j6lu\",\"input\":\"ProcedureList_input__nZI-i\",\"buttons\":\"ProcedureList_buttons__1cLC0\",\"table-grid\":\"ProcedureList_table-grid__20Uo9\",\"message\":\"ProcedureList_message__2P1i6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__1FWwW\",\"groups\":\"HospitalItemForm_groups__2XyW6\",\"input\":\"HospitalItemForm_input__1y2VP\",\"description\":\"HospitalItemForm_description__1tsvR\",\"code\":\"HospitalItemForm_code__3bAga\",\"buttons\":\"HospitalItemForm_buttons__3Rewh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3P8XU\",\"table\":\"HospitalItemList_table__1_Iw2\",\"table-header\":\"HospitalItemList_table-header__1nWDu\",\"table-description\":\"HospitalItemList_table-description__2RsHb\",\"add-link\":\"HospitalItemList_add-link__Ap2Fd\",\"row\":\"HospitalItemList_row__3Y9w1\",\"align\":\"HospitalItemList_align__3Cquk\",\"center\":\"HospitalItemList_center__2uJ8Q\",\"right\":\"HospitalItemList_right__1YzKx\",\"discrepancy\":\"HospitalItemList_discrepancy__2rt0u\",\"icon-container\":\"HospitalItemList_icon-container__37b7k\",\"table-total\":\"HospitalItemList_table-total__35dxK\",\"caption\":\"HospitalItemList_caption__-jFT8\",\"amount\":\"HospitalItemList_amount__jgs1I\",\"groups\":\"HospitalItemList_groups__1Jxjv\",\"input\":\"HospitalItemList_input__3ysJe\",\"buttons\":\"HospitalItemList_buttons__3zaDd\",\"table-grid\":\"HospitalItemList_table-grid__wBYBH\",\"message\":\"HospitalItemList_message__3E-4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__3B4jc\",\"groups\":\"ProfessionalFeeForm_groups__dlWbX\",\"input\":\"ProfessionalFeeForm_input__333On\",\"buttons\":\"ProfessionalFeeForm_buttons__2lZlR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2Og-R\",\"table\":\"ProfessionalFeeList_table__2NcVa\",\"specialization\":\"ProfessionalFeeList_specialization__11Av7\",\"table-header\":\"ProfessionalFeeList_table-header__2PK3t\",\"table-description\":\"ProfessionalFeeList_table-description__30ZVR\",\"add-link\":\"ProfessionalFeeList_add-link__2AlqJ\",\"row\":\"ProfessionalFeeList_row__1uiD-\",\"align\":\"ProfessionalFeeList_align__3XDND\",\"center\":\"ProfessionalFeeList_center__3xzMO\",\"right\":\"ProfessionalFeeList_right__1_oyw\",\"discrepancy\":\"ProfessionalFeeList_discrepancy__1DP02\",\"icon-container\":\"ProfessionalFeeList_icon-container__1sopO\",\"table-total\":\"ProfessionalFeeList_table-total__bFKvI\",\"caption\":\"ProfessionalFeeList_caption__2uJsv\",\"amount\":\"ProfessionalFeeList_amount__Bwl5O\",\"groups\":\"ProfessionalFeeList_groups__3OH3g\",\"input\":\"ProfessionalFeeList_input__LBwVv\",\"buttons\":\"ProfessionalFeeList_buttons__V3_MP\",\"table-grid\":\"ProfessionalFeeList_table-grid__148wo\",\"message\":\"ProfessionalFeeList_message__2GTKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__3TUHv\",\"left\":\"ClaimFooter_left__2BPxB\",\"center\":\"ClaimFooter_center__2tYE7\",\"right\":\"ClaimFooter_right__31DOI\",\"escalate\":\"ClaimFooter_escalate__2Wg_9\",\"header-container\":\"ClaimFooter_header-container__3MyMe\",\"header\":\"ClaimFooter_header__2h2N5\",\"title\":\"ClaimFooter_title__2HClu\",\"content\":\"ClaimFooter_content__2ZAYv\",\"input\":\"ClaimFooter_input__1T6qD\",\"footer\":\"ClaimFooter_footer__aACcA\",\"assign\":\"ClaimFooter_assign__2fguI\",\"to\":\"ClaimFooter_to__iojTq\",\"action\":\"ClaimFooter_action__3rpDz\",\"reassign\":\"ClaimFooter_reassign__32y-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DisapprovedLabel_root__2fuHC\",\"input-wrapper\":\"DisapprovedLabel_input-wrapper__3Mg-w\",\"disapproved\":\"DisapprovedLabel_disapproved__2jHnW\",\"icon-container\":\"DisapprovedLabel_icon-container__2AwzY\",\"message\":\"DisapprovedLabel_message__mRFZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldSubmit_root__31Odd\",\"label\":\"TextFieldSubmit_label__1hK2p\",\"wrapper\":\"TextFieldSubmit_wrapper__1VXm5\",\"read-only-value\":\"TextFieldSubmit_read-only-value__3vlhq\",\"text-field\":\"TextFieldSubmit_text-field__M9IqT\",\"submit\":\"TextFieldSubmit_submit__3gRq6\",\"has-error\":\"TextFieldSubmit_has-error__2RVyG\",\"error\":\"TextFieldSubmit_error__1IF87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChatBox_root__CJdTJ\",\"wrapper\":\"ChatBox_wrapper__Udbg_\",\"header\":\"ChatBox_header__1cGwF\",\"title\":\"ChatBox_title__2zeRL\",\"body\":\"ChatBox_body__3cDDA\",\"messages\":\"ChatBox_messages__1p2Ci\",\"split\":\"ChatBox_split__3YuFW\",\"balloon\":\"ChatBox_balloon__2wMJO\",\"mheader\":\"ChatBox_mheader___jqXV\",\"sender\":\"ChatBox_sender__1OlBm\",\"time\":\"ChatBox_time__20VAg\",\"mbody\":\"ChatBox_mbody__34g_9\",\"content\":\"ChatBox_content__2ekaM\",\"receive\":\"ChatBox_receive__1SB9q\",\"me\":\"ChatBox_me__3g5h1\",\"placeholder\":\"ChatBox_placeholder__2r0o4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTabs_root__2VH--\",\"header\":\"CustomTabs_header__3jmhR\",\"item\":\"CustomTabs_item__rKqcK\",\"active\":\"CustomTabs_active__3MzuP\",\"panels\":\"CustomTabs_panels__MhL8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SideBar_root__BfHb8\",\"contract-id\":\"SideBar_contract-id__1i7cP\",\"id\":\"SideBar_id__hD-Fx\",\"plan-types\":\"SideBar_plan-types__22aGd\",\"node\":\"SideBar_node__12eOL\",\"benefit-label\":\"SideBar_benefit-label__355P0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ValueField_root__3IGn7\",\"value\":\"ValueField_value__2tKyn\",\"center\":\"ValueField_center__3Ytb8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FloatingFields_root__24bnx\",\"wrapper\":\"FloatingFields_wrapper__2Pcva\",\"w-30\":\"FloatingFields_w-30__3n_pJ\",\"w-50\":\"FloatingFields_w-50__1n6EK\",\"w-100\":\"FloatingFields_w-100__3NIZO\",\"center\":\"FloatingFields_center__123ob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Benefits_root__bhUTi\",\"wrapper\":\"Benefits_wrapper__3FSOt\",\"left-side\":\"Benefits_left-side__1RHLZ\",\"title\":\"Benefits_title__2Y66j\",\"right-side\":\"Benefits_right-side__2K0vf\",\"header\":\"Benefits_header__3Cy59\",\"table-header\":\"Benefits_table-header__1UT8m\",\"search\":\"Benefits_search__OOfZa\",\"contract\":\"Benefits_contract__3j7Fa\",\"table\":\"Benefits_table__38mZl\",\"hidden\":\"Benefits_hidden__2oBEr\",\"cell\":\"Benefits_cell__12KcA\",\"footer\":\"Benefits_footer__2PXlW\",\"center\":\"Benefits_center__1s61P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Exclusions_root__aIVf_\",\"header\":\"Exclusions_header__2PP5C\",\"body\":\"Exclusions_body__10OEr\",\"search\":\"Exclusions_search__2ex94\",\"plan-types\":\"Exclusions_plan-types__rtSrd\",\"type\":\"Exclusions_type__AJdcD\",\"table\":\"Exclusions_table__3GuIp\",\"hidden\":\"Exclusions_hidden__1fYuW\",\"cell\":\"Exclusions_cell__3huMq\",\"handling\":\"Exclusions_handling__3_HIN\",\"center\":\"Exclusions_center__36WKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PartnerNetwork_root__3pngF\",\"header\":\"PartnerNetwork_header__2joMW\",\"search\":\"PartnerNetwork_search__QRWSW\",\"table\":\"PartnerNetwork_table__id1kf\",\"hidden\":\"PartnerNetwork_hidden__1Wg_f\",\"cell\":\"PartnerNetwork_cell__24Zde\",\"doctors\":\"PartnerNetwork_doctors__3qxwm\",\"header-container\":\"PartnerNetwork_header-container__uNSDQ\",\"title\":\"PartnerNetwork_title__2pC_E\",\"content\":\"PartnerNetwork_content__OC-z4\",\"center\":\"PartnerNetwork_center__VSY8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Utilization_root__h-zoM\",\"header\":\"Utilization_header__1ivJ-\",\"graph\":\"Utilization_graph__3ZLe9\",\"anual-benefit\":\"Utilization_anual-benefit__1VWqy\",\"line-graph\":\"Utilization_line-graph__1p8lX\",\"container\":\"Utilization_container__4lgbS\",\"line-container\":\"Utilization_line-container__2OYMe\",\"item\":\"Utilization_item__2yhM3\",\"line-details\":\"Utilization_line-details__10WCH\",\"label\":\"Utilization_label__3Mdsb\",\"color\":\"Utilization_color__1LPa-\",\"search\":\"Utilization_search__3pjGe\",\"table\":\"Utilization_table__1yiXM\",\"cell\":\"Utilization_cell__18zs3\",\"icon\":\"Utilization_icon__3oS4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Contract_root__2TV5c\",\"wrapper\":\"Contract_wrapper__7hk_4\",\"pdf\":\"Contract_pdf__14ff5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"RightPanelTabs_center__2F79-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__1AD2B\",\"header\":\"ClaimsRemarks_header__2JuzE\",\"header-text\":\"ClaimsRemarks_header-text__2hE-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__1S7ZM\",\"first-container\":\"ClaimInPatient_first-container__1hi-9\",\"groups\":\"ClaimInPatient_groups__3GlMb\",\"input\":\"ClaimInPatient_input__D_kUM\",\"child-container\":\"ClaimInPatient_child-container__LtiUL\",\"left-side\":\"ClaimInPatient_left-side__3BSE_\",\"right-side\":\"ClaimInPatient_right-side__7yeR8\",\"tables-container\":\"ClaimInPatient_tables-container__1FSgK\",\"wrapper\":\"ClaimInPatient_wrapper__2Ll5k\",\"table\":\"ClaimInPatient_table__33jlK\",\"table-header\":\"ClaimInPatient_table-header__32cAA\",\"table-description\":\"ClaimInPatient_table-description__LHg-Q\",\"add-link\":\"ClaimInPatient_add-link__2HgjW\",\"row\":\"ClaimInPatient_row__19SQp\",\"align\":\"ClaimInPatient_align__3EmF1\",\"center\":\"ClaimInPatient_center__mwmUx\",\"right\":\"ClaimInPatient_right__2NOPD\",\"table-total\":\"ClaimInPatient_table-total__ADdpw\",\"caption\":\"ClaimInPatient_caption__3GWNc\",\"amount\":\"ClaimInPatient_amount__14BmU\",\"sticky\":\"ClaimInPatient_sticky__1p4_i\",\"grand-total\":\"ClaimInPatient_grand-total__5xeWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__32DbM\",\"first-container\":\"ClaimOutPatientProcedure_first-container__7XqrM\",\"groups\":\"ClaimOutPatientProcedure_groups__2khSB\",\"input\":\"ClaimOutPatientProcedure_input__2wGBp\",\"child-container\":\"ClaimOutPatientProcedure_child-container__3Qm-6\",\"left-side\":\"ClaimOutPatientProcedure_left-side__aiMMr\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2qNzx\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__24TXm\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__1oOih\",\"table\":\"ClaimOutPatientProcedure_table__3gy4g\",\"table-header\":\"ClaimOutPatientProcedure_table-header__1vFDA\",\"table-description\":\"ClaimOutPatientProcedure_table-description__2sVgC\",\"add-link\":\"ClaimOutPatientProcedure_add-link__20WGP\",\"row\":\"ClaimOutPatientProcedure_row__1154i\",\"align\":\"ClaimOutPatientProcedure_align__1-JcK\",\"center\":\"ClaimOutPatientProcedure_center__2LEg6\",\"right\":\"ClaimOutPatientProcedure_right__1b2OO\",\"table-total\":\"ClaimOutPatientProcedure_table-total__25Yuw\",\"caption\":\"ClaimOutPatientProcedure_caption__1-1aH\",\"amount\":\"ClaimOutPatientProcedure_amount__1pVET\",\"sticky\":\"ClaimOutPatientProcedure_sticky__2J6YA\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__2-FT5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1OYw5\",\"first-container\":\"ClaimOutPatientConsultation_first-container__36dTh\",\"groups\":\"ClaimOutPatientConsultation_groups__2FduB\",\"input\":\"ClaimOutPatientConsultation_input__qhYZ3\",\"child-container\":\"ClaimOutPatientConsultation_child-container__1yLGC\",\"left-side\":\"ClaimOutPatientConsultation_left-side__1Q-9R\",\"right-side\":\"ClaimOutPatientConsultation_right-side__ZE8bC\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__1BJ87\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1zN1p\",\"table\":\"ClaimOutPatientConsultation_table__11vlA\",\"table-header\":\"ClaimOutPatientConsultation_table-header__2v7ad\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1oqaA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__3akmi\",\"row\":\"ClaimOutPatientConsultation_row__28nQM\",\"align\":\"ClaimOutPatientConsultation_align__1dHEU\",\"center\":\"ClaimOutPatientConsultation_center__1_QYZ\",\"right\":\"ClaimOutPatientConsultation_right__ZGur7\",\"table-total\":\"ClaimOutPatientConsultation_table-total__po07J\",\"caption\":\"ClaimOutPatientConsultation_caption__3vMTQ\",\"amount\":\"ClaimOutPatientConsultation_amount__1Ev9r\",\"sticky\":\"ClaimOutPatientConsultation_sticky__JCmg6\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__9crdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__3Dhsx\",\"first-container\":\"ClaimEmergency_first-container__o2WbL\",\"groups\":\"ClaimEmergency_groups__1udG1\",\"input\":\"ClaimEmergency_input__2anfv\",\"child-container\":\"ClaimEmergency_child-container__1p4eO\",\"left-side\":\"ClaimEmergency_left-side__36vix\",\"right-side\":\"ClaimEmergency_right-side__3uIlK\",\"tables-container\":\"ClaimEmergency_tables-container__1qiki\",\"wrapper\":\"ClaimEmergency_wrapper__3WqYc\",\"table\":\"ClaimEmergency_table__Jj0aB\",\"table-header\":\"ClaimEmergency_table-header__1i-JE\",\"table-description\":\"ClaimEmergency_table-description__Xz_Ya\",\"add-link\":\"ClaimEmergency_add-link__3k7IP\",\"row\":\"ClaimEmergency_row__1Esd0\",\"align\":\"ClaimEmergency_align__1S8uR\",\"center\":\"ClaimEmergency_center__2CsIC\",\"right\":\"ClaimEmergency_right__2vx76\",\"table-total\":\"ClaimEmergency_table-total__2oM7S\",\"caption\":\"ClaimEmergency_caption__25QSW\",\"amount\":\"ClaimEmergency_amount__tTDY5\",\"sticky\":\"ClaimEmergency_sticky__3o2tq\",\"grand-total\":\"ClaimEmergency_grand-total__2QhZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__1epVL\",\"first-container\":\"ClaimMedicineAllowance_first-container__2ZF-j\",\"groups\":\"ClaimMedicineAllowance_groups__2H4ww\",\"input\":\"ClaimMedicineAllowance_input__8xyct\",\"child-container\":\"ClaimMedicineAllowance_child-container__28G1C\",\"left-side\":\"ClaimMedicineAllowance_left-side__1WUXX\",\"right-side\":\"ClaimMedicineAllowance_right-side__1igyg\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__3dELc\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__9Um0n\",\"table\":\"ClaimMedicineAllowance_table__3EybV\",\"table-header\":\"ClaimMedicineAllowance_table-header__2pBup\",\"table-description\":\"ClaimMedicineAllowance_table-description__1PmDt\",\"add-link\":\"ClaimMedicineAllowance_add-link__1AbYf\",\"row\":\"ClaimMedicineAllowance_row__2WWWY\",\"align\":\"ClaimMedicineAllowance_align__39ocu\",\"center\":\"ClaimMedicineAllowance_center__3EtXe\",\"right\":\"ClaimMedicineAllowance_right__27Jp2\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IsI8\",\"caption\":\"ClaimMedicineAllowance_caption__DMDzf\",\"amount\":\"ClaimMedicineAllowance_amount__1LRtQ\",\"sticky\":\"ClaimMedicineAllowance_sticky__EUuY7\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1JKZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContractRange_root__3nD_-\",\"container\":\"ContractRange_container__1yYoI\",\"focus\":\"ContractRange_focus__209RV\",\"has-error\":\"ContractRange_has-error__26k8I\",\"label\":\"ContractRange_label__16qj0\",\"values\":\"ContractRange_values__1s186\",\"suggestions\":\"ContractRange_suggestions__3mNVu\",\"add-margin\":\"ContractRange_add-margin__36OMI\",\"header\":\"ContractRange_header__2vYoG\",\"values-container\":\"ContractRange_values-container__2mlE7\",\"message\":\"ContractRange_message__1DGJU\",\"list\":\"ContractRange_list__12tdX\",\"item\":\"ContractRange_item__WiBsw\",\"error\":\"ContractRange_error__19pL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalChart_root__2NsEP\",\"title\":\"DentalChart_title__2XddS\",\"container\":\"DentalChart_container__iRz9F\",\"chart\":\"DentalChart_chart__3tLNQ\",\"upper\":\"DentalChart_upper__3L8HX\",\"lower\":\"DentalChart_lower__2M2mJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__256b4\",\"first-container\":\"ClaimDental_first-container__38T7E\",\"groups\":\"ClaimDental_groups__3jvsJ\",\"input\":\"ClaimDental_input__haCWE\",\"contract-range\":\"ClaimDental_contract-range__37ykS\",\"chart\":\"ClaimDental_chart__3-xWm\",\"child-container\":\"ClaimDental_child-container__3mow6\",\"left-side\":\"ClaimDental_left-side__3jave\",\"right-side\":\"ClaimDental_right-side__1FQqB\",\"tables-container\":\"ClaimDental_tables-container__1C3Pu\",\"wrapper\":\"ClaimDental_wrapper__1RMw-\",\"table\":\"ClaimDental_table__1LS70\",\"table-header\":\"ClaimDental_table-header__1b5ix\",\"table-description\":\"ClaimDental_table-description__3_nXw\",\"add-link\":\"ClaimDental_add-link__2HTRl\",\"row\":\"ClaimDental_row__1X_Fq\",\"align\":\"ClaimDental_align__1TfeR\",\"center\":\"ClaimDental_center__2wbY9\",\"right\":\"ClaimDental_right__3UJIj\",\"table-total\":\"ClaimDental_table-total__209ol\",\"caption\":\"ClaimDental_caption__TjFQ_\",\"amount\":\"ClaimDental_amount__2qE7s\",\"sticky\":\"ClaimDental_sticky__1m1JQ\",\"grand-total\":\"ClaimDental_grand-total__3-zy6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__3iC6V\",\"first-container\":\"ClaimAPE_first-container__rfLOL\",\"groups\":\"ClaimAPE_groups___LUKZ\",\"input\":\"ClaimAPE_input__3KeOV\",\"contract-range\":\"ClaimAPE_contract-range__3lIhD\",\"child-container\":\"ClaimAPE_child-container__1cNVx\",\"left-side\":\"ClaimAPE_left-side__3k7Fu\",\"right-side\":\"ClaimAPE_right-side__2yzN-\",\"tables-container\":\"ClaimAPE_tables-container__Q8Qw-\",\"wrapper\":\"ClaimAPE_wrapper__2G6uN\",\"table\":\"ClaimAPE_table__3HkNw\",\"table-header\":\"ClaimAPE_table-header__15MOT\",\"table-description\":\"ClaimAPE_table-description__1mF2U\",\"add-link\":\"ClaimAPE_add-link__1xoUx\",\"row\":\"ClaimAPE_row__3kl-i\",\"align\":\"ClaimAPE_align__3dAFu\",\"center\":\"ClaimAPE_center__3dtFL\",\"right\":\"ClaimAPE_right__15WMJ\",\"table-total\":\"ClaimAPE_table-total__30NF6\",\"caption\":\"ClaimAPE_caption__-xHuO\",\"amount\":\"ClaimAPE_amount__2j9QR\",\"sticky\":\"ClaimAPE_sticky__1awLT\",\"grand-total\":\"ClaimAPE_grand-total__3M-am\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__rZ8IS\",\"first-container\":\"ClaimECU_first-container__2FNj4\",\"groups\":\"ClaimECU_groups__2RmkW\",\"input\":\"ClaimECU_input__1Tnla\",\"contract-range\":\"ClaimECU_contract-range__21rJC\",\"child-container\":\"ClaimECU_child-container__26HT3\",\"left-side\":\"ClaimECU_left-side__3-TzS\",\"right-side\":\"ClaimECU_right-side__11s0l\",\"tables-container\":\"ClaimECU_tables-container__3eYaA\",\"wrapper\":\"ClaimECU_wrapper__h-NDN\",\"table\":\"ClaimECU_table__UgdcY\",\"table-header\":\"ClaimECU_table-header__2u8yv\",\"table-description\":\"ClaimECU_table-description__B5h1x\",\"add-link\":\"ClaimECU_add-link__xzFPx\",\"row\":\"ClaimECU_row__2xFZY\",\"align\":\"ClaimECU_align__3ToIF\",\"center\":\"ClaimECU_center__3XEtE\",\"right\":\"ClaimECU_right__1u8Su\",\"table-total\":\"ClaimECU_table-total__1N-8u\",\"caption\":\"ClaimECU_caption__3WoBZ\",\"amount\":\"ClaimECU_amount__UXVTQ\",\"sticky\":\"ClaimECU_sticky__HXgU3\",\"grand-total\":\"ClaimECU_grand-total__x5-d8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__3o6nU\",\"first-container\":\"ClaimPharmacy_first-container__24DOY\",\"groups\":\"ClaimPharmacy_groups__gN0O5\",\"input\":\"ClaimPharmacy_input__2zV0D\",\"child-container\":\"ClaimPharmacy_child-container__3bxBF\",\"left-side\":\"ClaimPharmacy_left-side__36Ydb\",\"right-side\":\"ClaimPharmacy_right-side__3b9ZU\",\"tables-container\":\"ClaimPharmacy_tables-container__29er7\",\"wrapper\":\"ClaimPharmacy_wrapper__1tYX9\",\"table\":\"ClaimPharmacy_table__sOxO5\",\"table-header\":\"ClaimPharmacy_table-header__vbfpz\",\"table-description\":\"ClaimPharmacy_table-description__1rTw7\",\"add-link\":\"ClaimPharmacy_add-link__1oaJN\",\"row\":\"ClaimPharmacy_row__3U2ex\",\"align\":\"ClaimPharmacy_align__1qqZT\",\"center\":\"ClaimPharmacy_center__KJIk6\",\"right\":\"ClaimPharmacy_right__K6eAn\",\"table-total\":\"ClaimPharmacy_table-total__3IDSI\",\"caption\":\"ClaimPharmacy_caption__2JNG1\",\"amount\":\"ClaimPharmacy_amount__1wFSr\",\"sticky\":\"ClaimPharmacy_sticky__2QcKU\",\"grand-total\":\"ClaimPharmacy_grand-total__28Qkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__It_Uf\",\"first-container\":\"ClaimPPE_first-container__2PDwy\",\"groups\":\"ClaimPPE_groups__3F8T-\",\"input\":\"ClaimPPE_input__3KbyV\",\"contract-range\":\"ClaimPPE_contract-range__21-LF\",\"child-container\":\"ClaimPPE_child-container__19svW\",\"left-side\":\"ClaimPPE_left-side__3EWSi\",\"right-side\":\"ClaimPPE_right-side__Mcre2\",\"tables-container\":\"ClaimPPE_tables-container__3vLX8\",\"wrapper\":\"ClaimPPE_wrapper__2lDkk\",\"table\":\"ClaimPPE_table__1d9ZQ\",\"table-header\":\"ClaimPPE_table-header__2jfWY\",\"table-description\":\"ClaimPPE_table-description__B0pV4\",\"add-link\":\"ClaimPPE_add-link__2TK1j\",\"row\":\"ClaimPPE_row__hPaGI\",\"align\":\"ClaimPPE_align__EakZn\",\"center\":\"ClaimPPE_center__2DSBO\",\"right\":\"ClaimPPE_right__1jInO\",\"table-total\":\"ClaimPPE_table-total__1-SlE\",\"caption\":\"ClaimPPE_caption__RtH_1\",\"amount\":\"ClaimPPE_amount__3GEJt\",\"sticky\":\"ClaimPPE_sticky__3IMMC\",\"grand-total\":\"ClaimPPE_grand-total__2O3kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3aZUF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3n5WF\",\"groups\":\"ClaimMedicalSupplies_groups__1kAYn\",\"input\":\"ClaimMedicalSupplies_input__3w3Na\",\"child-container\":\"ClaimMedicalSupplies_child-container__1qpYg\",\"left-side\":\"ClaimMedicalSupplies_left-side__3fj2z\",\"right-side\":\"ClaimMedicalSupplies_right-side__3Jxo1\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2g1bZ\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__1YB7S\",\"table\":\"ClaimMedicalSupplies_table__39sXK\",\"table-header\":\"ClaimMedicalSupplies_table-header__3dEXc\",\"table-description\":\"ClaimMedicalSupplies_table-description__TGhRl\",\"add-link\":\"ClaimMedicalSupplies_add-link__17TK6\",\"row\":\"ClaimMedicalSupplies_row__2vdFX\",\"align\":\"ClaimMedicalSupplies_align__yK5co\",\"center\":\"ClaimMedicalSupplies_center__12JQw\",\"right\":\"ClaimMedicalSupplies_right__XJJUu\",\"table-total\":\"ClaimMedicalSupplies_table-total__3NnUJ\",\"caption\":\"ClaimMedicalSupplies_caption__2811S\",\"amount\":\"ClaimMedicalSupplies_amount__puMje\",\"sticky\":\"ClaimMedicalSupplies_sticky__2SQjJ\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__Dtrsg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__cFi4C\",\"first-container\":\"ClaimClinicManagement_first-container__z1jWC\",\"groups\":\"ClaimClinicManagement_groups__1Y38E\",\"input\":\"ClaimClinicManagement_input__1xBc_\",\"child-container\":\"ClaimClinicManagement_child-container__kVMQD\",\"left-side\":\"ClaimClinicManagement_left-side__2dy65\",\"right-side\":\"ClaimClinicManagement_right-side__FXm_-\",\"tables-container\":\"ClaimClinicManagement_tables-container__2fZlC\",\"wrapper\":\"ClaimClinicManagement_wrapper__CK0dL\",\"table\":\"ClaimClinicManagement_table__9y78F\",\"table-header\":\"ClaimClinicManagement_table-header__CvQ9s\",\"table-description\":\"ClaimClinicManagement_table-description__1K-ma\",\"add-link\":\"ClaimClinicManagement_add-link__E0inx\",\"row\":\"ClaimClinicManagement_row__1ZByz\",\"align\":\"ClaimClinicManagement_align__3Bsjj\",\"center\":\"ClaimClinicManagement_center__1agdC\",\"right\":\"ClaimClinicManagement_right__1n2Y8\",\"table-total\":\"ClaimClinicManagement_table-total__1ka1r\",\"caption\":\"ClaimClinicManagement_caption__1rGus\",\"amount\":\"ClaimClinicManagement_amount__3GbWj\",\"sticky\":\"ClaimClinicManagement_sticky__VwhGL\",\"grand-total\":\"ClaimClinicManagement_grand-total__223ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfo_root__2ZhBR\",\"header-container\":\"ReimbursementInfo_header-container__2Be7O\",\"header\":\"ReimbursementInfo_header__3zAnI\",\"title\":\"ReimbursementInfo_title__1ZCQA\",\"content\":\"ReimbursementInfo_content__1LKaM\",\"basic-info\":\"ReimbursementInfo_basic-info__1pQO5\",\"label\":\"ReimbursementInfo_label__1eWwR\",\"collapsible-cell\":\"ReimbursementInfo_collapsible-cell__2LS9L\",\"container\":\"ReimbursementInfo_container__3j2Tx\",\"show-cell\":\"ReimbursementInfo_show-cell__V330m\",\"cell\":\"ReimbursementInfo_cell__3e4E4\",\"groups\":\"ReimbursementInfo_groups__2b0kL\",\"input\":\"ReimbursementInfo_input__1-9pI\",\"reasons-container\":\"ReimbursementInfo_reasons-container__O8h98\",\"delete\":\"ReimbursementInfo_delete__2NG1u\",\"reasons\":\"ReimbursementInfo_reasons__1Bpgw\",\"add-link\":\"ReimbursementInfo_add-link__3IClX\",\"empty-reasons\":\"ReimbursementInfo_empty-reasons__265UY\",\"footer\":\"ReimbursementInfo_footer__2HTae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__3hhrG\",\"first-container\":\"ClaimReimbursement_first-container__38NDs\",\"groups\":\"ClaimReimbursement_groups__2NvFs\",\"input\":\"ClaimReimbursement_input__36yRs\",\"child-container\":\"ClaimReimbursement_child-container__1VY-Q\",\"left-side\":\"ClaimReimbursement_left-side__343Le\",\"right-side\":\"ClaimReimbursement_right-side__2CbJR\",\"tables-container\":\"ClaimReimbursement_tables-container__2WwnX\",\"wrapper\":\"ClaimReimbursement_wrapper__1Jn5F\",\"table\":\"ClaimReimbursement_table__ksGL1\",\"table-header\":\"ClaimReimbursement_table-header__1BJ7k\",\"table-description\":\"ClaimReimbursement_table-description__30ZTt\",\"add-link\":\"ClaimReimbursement_add-link__iKc2O\",\"row\":\"ClaimReimbursement_row__1vEel\",\"align\":\"ClaimReimbursement_align__27QCo\",\"center\":\"ClaimReimbursement_center__28QGF\",\"right\":\"ClaimReimbursement_right__RESK7\",\"table-total\":\"ClaimReimbursement_table-total__3V1AF\",\"caption\":\"ClaimReimbursement_caption__38fKN\",\"amount\":\"ClaimReimbursement_amount__1w8eC\",\"sticky\":\"ClaimReimbursement_sticky__2pMEc\",\"grand-total\":\"ClaimReimbursement_grand-total__26LC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Error_root__3MOwq\",\"title\":\"Error_title__2zyaE\",\"message\":\"Error_message__3Qoxb\",\"action-messages\":\"Error_action-messages__1Y6y3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2CKVA\",\"tiles\":\"Dashboard_tiles__1zqWv\",\"task-tray\":\"Dashboard_task-tray__1JXKE\",\"list-item\":\"Dashboard_list-item__330ar\",\"details\":\"Dashboard_details__2yOoR\",\"detail-item\":\"Dashboard_detail-item__222xC\",\"label\":\"Dashboard_label__1pqEl\",\"content\":\"Dashboard_content__2u9m1\",\"action\":\"Dashboard_action__Epa7q\",\"ticket-list\":\"Dashboard_ticket-list__2hY-r\",\"wrapper\":\"Dashboard_wrapper__2R19Z\",\"float\":\"Dashboard_float__1wkpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__QvxEj\",\"groups\":\"BatchDetails_groups__287zx\",\"input\":\"BatchDetails_input__tzzPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__1wK71\",\"title\":\"ClaimListHeader_title__3VPI4\",\"wrapper\":\"ClaimListHeader_wrapper__2or4f\",\"button\":\"ClaimListHeader_button__3Hs-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__dqWZg\",\"default-override\":\"ClaimList_default-override__1mOrj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProviderSchedule_root__3Hb8e\",\"header-container\":\"ProviderSchedule_header-container__1JwiJ\",\"header1\":\"ProviderSchedule_header1__3gDQw\",\"title\":\"ProviderSchedule_title__3sbdz\",\"body\":\"ProviderSchedule_body__1mUiH\",\"content\":\"ProviderSchedule_content__2z-Wg\",\"table\":\"ProviderSchedule_table__1IJDe\",\"groups\":\"ProviderSchedule_groups__2QLV6\",\"partition\":\"ProviderSchedule_partition__1QDjs\",\"action\":\"ProviderSchedule_action__3vB_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__26Wrc\",\"claims-container\":\"BatchPage_claims-container__2G2QW\",\"footer\":\"BatchPage_footer__3Fysl\",\"actions\":\"BatchPage_actions___M6eN\",\"delete-button\":\"BatchPage_delete-button__1fPqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"BaseDetails_groups__sN0KI\",\"input\":\"BaseDetails_input__3fzd_\",\"wrapper\":\"BaseDetails_wrapper__2Z43S\",\"no-pad\":\"BaseDetails_no-pad__2S67i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__hOE-z\",\"header\":\"ICDTextField_header__3AzkP\",\"description\":\"ICDTextField_description__fLJtE\",\"code\":\"ICDTextField_code__snQp0\",\"primary\":\"ICDTextField_primary__1rF7r\",\"actions\":\"ICDTextField_actions__ROI6c\",\"wrapper\":\"ICDTextField_wrapper__2Tl6S\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__3GWEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1dpY2\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__1iY52\",\"has-error\":\"DiagnosisList_has-error__3hfPU\",\"title\":\"DiagnosisList_title__qjkfp\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__3tk0Y\",\"error\":\"DiagnosisList_error__2Q9Ah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CptTextField_root__16Cl9\",\"header\":\"CptTextField_header__18VEF\",\"description\":\"CptTextField_description__38J8w\",\"code\":\"CptTextField_code__3zwiV\",\"wrapper\":\"CptTextField_wrapper__14kEU\",\"sub-wrapper\":\"CptTextField_sub-wrapper__3kUzW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__3MFfj\",\"groups\":\"ProcedureForm_groups__33Ssh\",\"input\":\"ProcedureForm_input__1I42d\",\"buttons\":\"ProcedureForm_buttons__3gBiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemTextField_root__3kCkJ\",\"header\":\"HospitalItemTextField_header__1p8vm\",\"description\":\"HospitalItemTextField_description__3dt50\",\"code\":\"HospitalItemTextField_code__37pF3\",\"wrapper\":\"HospitalItemTextField_wrapper__2ejzj\",\"sub-wrapper\":\"HospitalItemTextField_sub-wrapper__1TcFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__2OG0L\",\"groups\":\"HospitalItemForm_groups__3_yeP\",\"first-item\":\"HospitalItemForm_first-item__AJ09l\",\"input\":\"HospitalItemForm_input__1ZqXE\",\"buttons\":\"HospitalItemForm_buttons__1C7f4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__2ptS9\",\"groups\":\"ProfessionalFeeForm_groups__K8Zz9\",\"first-item\":\"ProfessionalFeeForm_first-item__1_l_l\",\"input\":\"ProfessionalFeeForm_input__20gH-\",\"buttons\":\"ProfessionalFeeForm_buttons__2JE2y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3v4P_\",\"table\":\"ProcedureList_table__1lDzW\",\"table-header\":\"ProcedureList_table-header__OUZ2f\",\"table-description\":\"ProcedureList_table-description__1woO4\",\"add-link\":\"ProcedureList_add-link__3Y3oZ\",\"row\":\"ProcedureList_row__2-dja\",\"align\":\"ProcedureList_align__qvO_Y\",\"center\":\"ProcedureList_center__3o-L0\",\"right\":\"ProcedureList_right__3krqZ\",\"table-total\":\"ProcedureList_table-total__1VNZY\",\"caption\":\"ProcedureList_caption__164Op\",\"amount\":\"ProcedureList_amount__E-XjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3MjT2\",\"table\":\"HospitalItemList_table__dG_Tf\",\"table-header\":\"HospitalItemList_table-header__2MLsx\",\"table-description\":\"HospitalItemList_table-description__B2u7N\",\"add-link\":\"HospitalItemList_add-link__3rajh\",\"row\":\"HospitalItemList_row__2dICf\",\"align\":\"HospitalItemList_align__1olVn\",\"center\":\"HospitalItemList_center__aS130\",\"right\":\"HospitalItemList_right__2ZVKU\",\"table-total\":\"HospitalItemList_table-total__2NfAE\",\"caption\":\"HospitalItemList_caption__2asKo\",\"amount\":\"HospitalItemList_amount__t79nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2w3dt\",\"table\":\"ProfessionalFeeList_table__10Ygk\",\"table-header\":\"ProfessionalFeeList_table-header__14PMs\",\"table-description\":\"ProfessionalFeeList_table-description__1zGjK\",\"add-link\":\"ProfessionalFeeList_add-link__3_ArR\",\"row\":\"ProfessionalFeeList_row__99ivp\",\"align\":\"ProfessionalFeeList_align__10CgV\",\"center\":\"ProfessionalFeeList_center__5efkN\",\"right\":\"ProfessionalFeeList_right__2qbRI\",\"table-total\":\"ProfessionalFeeList_table-total__3stF4\",\"caption\":\"ProfessionalFeeList_caption__119dY\",\"amount\":\"ProfessionalFeeList_amount__2aSsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__2Ee-X\",\"header\":\"ClaimsRemarks_header__3yH1H\",\"header-text\":\"ClaimsRemarks_header-text__3BhQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__9kPKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__3osD9\",\"first-container\":\"ClaimInPatient_first-container__3t49M\",\"groups\":\"ClaimInPatient_groups__3oIox\",\"input\":\"ClaimInPatient_input__hVAF4\",\"child-container\":\"ClaimInPatient_child-container__2Cq2R\",\"tables-container\":\"ClaimInPatient_tables-container__2oIYc\",\"left-side\":\"ClaimInPatient_left-side__3DTmU\",\"wrapper\":\"ClaimInPatient_wrapper__35AeS\",\"table\":\"ClaimInPatient_table__18wS_\",\"table-header\":\"ClaimInPatient_table-header__EDm4F\",\"table-description\":\"ClaimInPatient_table-description__2dbX9\",\"add-link\":\"ClaimInPatient_add-link__2PqWJ\",\"row\":\"ClaimInPatient_row__2S-um\",\"align\":\"ClaimInPatient_align__-0kRI\",\"center\":\"ClaimInPatient_center__SCdjg\",\"right\":\"ClaimInPatient_right__SWljZ\",\"table-total\":\"ClaimInPatient_table-total__1FFT6\",\"caption\":\"ClaimInPatient_caption__12ndJ\",\"amount\":\"ClaimInPatient_amount__1BJYs\",\"right-side\":\"ClaimInPatient_right-side__16K8Y\",\"sticky\":\"ClaimInPatient_sticky__3RBSE\",\"grand-total\":\"ClaimInPatient_grand-total__27yFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__3Ga7K\",\"first-container\":\"ClaimOutPatientProcedure_first-container__3Bo1i\",\"groups\":\"ClaimOutPatientProcedure_groups__1_PgN\",\"input\":\"ClaimOutPatientProcedure_input__2yb91\",\"child-container\":\"ClaimOutPatientProcedure_child-container__2IJug\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__koGml\",\"left-side\":\"ClaimOutPatientProcedure_left-side__2oLag\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__3yj4V\",\"table\":\"ClaimOutPatientProcedure_table__39AFH\",\"table-header\":\"ClaimOutPatientProcedure_table-header__2_DFL\",\"table-description\":\"ClaimOutPatientProcedure_table-description__22jzE\",\"add-link\":\"ClaimOutPatientProcedure_add-link__2zVd0\",\"row\":\"ClaimOutPatientProcedure_row__3tr7i\",\"align\":\"ClaimOutPatientProcedure_align__3aSS8\",\"center\":\"ClaimOutPatientProcedure_center__26F-I\",\"right\":\"ClaimOutPatientProcedure_right__2TzV6\",\"table-total\":\"ClaimOutPatientProcedure_table-total__2SbHo\",\"caption\":\"ClaimOutPatientProcedure_caption__37F57\",\"amount\":\"ClaimOutPatientProcedure_amount__1nHfc\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2kHXN\",\"sticky\":\"ClaimOutPatientProcedure_sticky__YQpzp\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__3r0fZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1iLTK\",\"first-container\":\"ClaimOutPatientConsultation_first-container__1-5nU\",\"groups\":\"ClaimOutPatientConsultation_groups__2oMDd\",\"input\":\"ClaimOutPatientConsultation_input__19UZR\",\"child-container\":\"ClaimOutPatientConsultation_child-container__aUMUP\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__2mF2h\",\"left-side\":\"ClaimOutPatientConsultation_left-side__19GSs\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1t8lb\",\"table\":\"ClaimOutPatientConsultation_table__37ymv\",\"table-header\":\"ClaimOutPatientConsultation_table-header__1mDNN\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1K6LA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__1kLWg\",\"row\":\"ClaimOutPatientConsultation_row__1QVq1\",\"align\":\"ClaimOutPatientConsultation_align__JzFHT\",\"center\":\"ClaimOutPatientConsultation_center__Kj125\",\"right\":\"ClaimOutPatientConsultation_right__2UzFx\",\"table-total\":\"ClaimOutPatientConsultation_table-total__3Y5uM\",\"caption\":\"ClaimOutPatientConsultation_caption__1fpt6\",\"amount\":\"ClaimOutPatientConsultation_amount__2NcEC\",\"right-side\":\"ClaimOutPatientConsultation_right-side__2G55v\",\"sticky\":\"ClaimOutPatientConsultation_sticky__1p7r8\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__3hH8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__oSnYx\",\"first-container\":\"ClaimEmergency_first-container__3b0DZ\",\"groups\":\"ClaimEmergency_groups__fVn6k\",\"input\":\"ClaimEmergency_input__20Z4V\",\"child-container\":\"ClaimEmergency_child-container__2B7dx\",\"tables-container\":\"ClaimEmergency_tables-container__1SqZm\",\"left-side\":\"ClaimEmergency_left-side__2XQXV\",\"wrapper\":\"ClaimEmergency_wrapper__2dRHq\",\"table\":\"ClaimEmergency_table__2Ye6U\",\"table-header\":\"ClaimEmergency_table-header__XQM6o\",\"table-description\":\"ClaimEmergency_table-description__eEvjz\",\"add-link\":\"ClaimEmergency_add-link__3f1pP\",\"row\":\"ClaimEmergency_row__9kBGW\",\"align\":\"ClaimEmergency_align__2pcQ2\",\"center\":\"ClaimEmergency_center__2EBE3\",\"right\":\"ClaimEmergency_right__3yT5b\",\"table-total\":\"ClaimEmergency_table-total__1Sfid\",\"caption\":\"ClaimEmergency_caption__3PPFO\",\"amount\":\"ClaimEmergency_amount__22h7o\",\"right-side\":\"ClaimEmergency_right-side__1VzuD\",\"sticky\":\"ClaimEmergency_sticky__2nEt5\",\"grand-total\":\"ClaimEmergency_grand-total__1rCNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ToothNumber_root__2xwxL\",\"label\":\"ToothNumber_label__3a7e8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalProcedureForm_root__2Acnv\",\"groups\":\"DentalProcedureForm_groups__2VwcV\",\"input\":\"DentalProcedureForm_input__3fOJ9\",\"buttons\":\"DentalProcedureForm_buttons__1zf4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__2JDL2\",\"first-container\":\"ClaimDental_first-container__1bgJH\",\"groups\":\"ClaimDental_groups__1-ERD\",\"chart\":\"ClaimDental_chart__3Dc9C\",\"input\":\"ClaimDental_input__25h7r\",\"contract-range\":\"ClaimDental_contract-range__3m5nq\",\"child-container\":\"ClaimDental_child-container__3e0an\",\"tables-container\":\"ClaimDental_tables-container__cMXte\",\"left-side\":\"ClaimDental_left-side__1TcV5\",\"wrapper\":\"ClaimDental_wrapper__3ThOl\",\"table\":\"ClaimDental_table__2F5f1\",\"table-header\":\"ClaimDental_table-header__2akCh\",\"table-description\":\"ClaimDental_table-description__216ml\",\"add-link\":\"ClaimDental_add-link__lzfHs\",\"row\":\"ClaimDental_row__3LXFH\",\"align\":\"ClaimDental_align__mJMlm\",\"center\":\"ClaimDental_center__3s7zR\",\"right\":\"ClaimDental_right__1k-F1\",\"table-total\":\"ClaimDental_table-total__3QDdT\",\"caption\":\"ClaimDental_caption__3mlFq\",\"amount\":\"ClaimDental_amount__2ltb-\",\"right-side\":\"ClaimDental_right-side__1TuoJ\",\"sticky\":\"ClaimDental_sticky__2jLb5\",\"grand-total\":\"ClaimDental_grand-total__gc69p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__3tnOB\",\"first-container\":\"ClaimMedicineAllowance_first-container__AHNJn\",\"groups\":\"ClaimMedicineAllowance_groups__2iRok\",\"input\":\"ClaimMedicineAllowance_input__1XM4n\",\"child-container\":\"ClaimMedicineAllowance_child-container__eGvyY\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__9NdEv\",\"left-side\":\"ClaimMedicineAllowance_left-side__3ULwO\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__2a9dZ\",\"table\":\"ClaimMedicineAllowance_table__tRJMn\",\"table-header\":\"ClaimMedicineAllowance_table-header__1Ynyj\",\"table-description\":\"ClaimMedicineAllowance_table-description__3P7Fc\",\"add-link\":\"ClaimMedicineAllowance_add-link__bcTPs\",\"row\":\"ClaimMedicineAllowance_row__X0O5w\",\"align\":\"ClaimMedicineAllowance_align__BxZLW\",\"center\":\"ClaimMedicineAllowance_center__bUmmq\",\"right\":\"ClaimMedicineAllowance_right__1oGzD\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IQEl\",\"caption\":\"ClaimMedicineAllowance_caption__15HJx\",\"amount\":\"ClaimMedicineAllowance_amount__1OeW6\",\"right-side\":\"ClaimMedicineAllowance_right-side__2LJsC\",\"sticky\":\"ClaimMedicineAllowance_sticky__1tKev\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1HUo0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__10qUm\",\"first-container\":\"ClaimAPE_first-container__3VIQz\",\"groups\":\"ClaimAPE_groups__1H7zB\",\"input\":\"ClaimAPE_input__2Wllf\",\"contract-range\":\"ClaimAPE_contract-range__1xKUx\",\"child-container\":\"ClaimAPE_child-container__2-Cqb\",\"tables-container\":\"ClaimAPE_tables-container__2c44w\",\"left-side\":\"ClaimAPE_left-side__3Grb8\",\"wrapper\":\"ClaimAPE_wrapper__3kVSF\",\"table\":\"ClaimAPE_table__omI3l\",\"table-header\":\"ClaimAPE_table-header__2bLUm\",\"table-description\":\"ClaimAPE_table-description__1imB1\",\"add-link\":\"ClaimAPE_add-link__2hydA\",\"row\":\"ClaimAPE_row__2LLeH\",\"align\":\"ClaimAPE_align__2aoEU\",\"center\":\"ClaimAPE_center__DIEY_\",\"right\":\"ClaimAPE_right__3JBKi\",\"table-total\":\"ClaimAPE_table-total__1hqGE\",\"caption\":\"ClaimAPE_caption__2uqYE\",\"amount\":\"ClaimAPE_amount__1I4D8\",\"right-side\":\"ClaimAPE_right-side__3R0S8\",\"sticky\":\"ClaimAPE_sticky__3qv6w\",\"grand-total\":\"ClaimAPE_grand-total__1i42h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__Y8G80\",\"first-container\":\"ClaimECU_first-container__1rhnH\",\"groups\":\"ClaimECU_groups__3Ibk_\",\"input\":\"ClaimECU_input__26EJ2\",\"child-container\":\"ClaimECU_child-container__1MXFG\",\"tables-container\":\"ClaimECU_tables-container__1eXUa\",\"left-side\":\"ClaimECU_left-side__2cvFC\",\"wrapper\":\"ClaimECU_wrapper__gZOgU\",\"table\":\"ClaimECU_table__1Bicl\",\"table-header\":\"ClaimECU_table-header__1vKl3\",\"table-description\":\"ClaimECU_table-description__qUDPT\",\"add-link\":\"ClaimECU_add-link__wl7KO\",\"row\":\"ClaimECU_row__20V6A\",\"align\":\"ClaimECU_align__4hqDF\",\"center\":\"ClaimECU_center__1bRln\",\"right\":\"ClaimECU_right__3VP8v\",\"table-total\":\"ClaimECU_table-total__GSoyb\",\"caption\":\"ClaimECU_caption__156Qz\",\"amount\":\"ClaimECU_amount__3anBs\",\"right-side\":\"ClaimECU_right-side__3rxLw\",\"sticky\":\"ClaimECU_sticky__1sJqT\",\"grand-total\":\"ClaimECU_grand-total__3ggCY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__3RVRM\",\"first-container\":\"ClaimPPE_first-container__21sPt\",\"groups\":\"ClaimPPE_groups__u8awx\",\"input\":\"ClaimPPE_input__2H_V4\",\"packages\":\"ClaimPPE_packages__3-Fqt\",\"child-container\":\"ClaimPPE_child-container__4CbFv\",\"tables-container\":\"ClaimPPE_tables-container__1P7tK\",\"left-side\":\"ClaimPPE_left-side__1Wl6h\",\"wrapper\":\"ClaimPPE_wrapper__EWklO\",\"table\":\"ClaimPPE_table__ECnsY\",\"table-header\":\"ClaimPPE_table-header__1MiEt\",\"table-description\":\"ClaimPPE_table-description__23Chj\",\"add-link\":\"ClaimPPE_add-link__2jmjj\",\"row\":\"ClaimPPE_row__3D1tu\",\"align\":\"ClaimPPE_align__12mQb\",\"center\":\"ClaimPPE_center__3ZjbJ\",\"right\":\"ClaimPPE_right__3uBxk\",\"table-total\":\"ClaimPPE_table-total__vFP-x\",\"caption\":\"ClaimPPE_caption__3SGWC\",\"amount\":\"ClaimPPE_amount__3eFhL\",\"right-side\":\"ClaimPPE_right-side__MiTxO\",\"sticky\":\"ClaimPPE_sticky__1TIh3\",\"grand-total\":\"ClaimPPE_grand-total__IdBsM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__2OUHv\",\"first-container\":\"ClaimPharmacy_first-container__3CTh5\",\"groups\":\"ClaimPharmacy_groups__1dXFx\",\"input\":\"ClaimPharmacy_input__1fnDP\",\"child-container\":\"ClaimPharmacy_child-container__2DXAY\",\"tables-container\":\"ClaimPharmacy_tables-container__OVhpf\",\"left-side\":\"ClaimPharmacy_left-side__2knv5\",\"wrapper\":\"ClaimPharmacy_wrapper__uDOW8\",\"table\":\"ClaimPharmacy_table__2ttlx\",\"table-header\":\"ClaimPharmacy_table-header__2DPRY\",\"table-description\":\"ClaimPharmacy_table-description__anC6p\",\"add-link\":\"ClaimPharmacy_add-link__3-l-Y\",\"row\":\"ClaimPharmacy_row__1EBvJ\",\"align\":\"ClaimPharmacy_align__3dWWS\",\"center\":\"ClaimPharmacy_center__2Lg3i\",\"right\":\"ClaimPharmacy_right__3Irs7\",\"table-total\":\"ClaimPharmacy_table-total__sPYMH\",\"caption\":\"ClaimPharmacy_caption__2a4nY\",\"amount\":\"ClaimPharmacy_amount__AYkmn\",\"right-side\":\"ClaimPharmacy_right-side__1ss74\",\"sticky\":\"ClaimPharmacy_sticky__RRGLs\",\"grand-total\":\"ClaimPharmacy_grand-total__3QkK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3NBGF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3-YoF\",\"groups\":\"ClaimMedicalSupplies_groups__3hkzB\",\"input\":\"ClaimMedicalSupplies_input__22TfW\",\"child-container\":\"ClaimMedicalSupplies_child-container__eULTM\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2zfdH\",\"left-side\":\"ClaimMedicalSupplies_left-side__2MoH7\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__2hL_L\",\"table\":\"ClaimMedicalSupplies_table__2JI1-\",\"table-header\":\"ClaimMedicalSupplies_table-header__CX7uX\",\"table-description\":\"ClaimMedicalSupplies_table-description__14O2d\",\"add-link\":\"ClaimMedicalSupplies_add-link__1nCh7\",\"row\":\"ClaimMedicalSupplies_row__g6Y-_\",\"align\":\"ClaimMedicalSupplies_align__1_hYI\",\"center\":\"ClaimMedicalSupplies_center__eJ3xR\",\"right\":\"ClaimMedicalSupplies_right__1Rf4R\",\"table-total\":\"ClaimMedicalSupplies_table-total__XHhz_\",\"caption\":\"ClaimMedicalSupplies_caption__1slE2\",\"amount\":\"ClaimMedicalSupplies_amount__3oFZd\",\"right-side\":\"ClaimMedicalSupplies_right-side__gNovx\",\"sticky\":\"ClaimMedicalSupplies_sticky__3bxBP\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__1G-Tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__1r___\",\"first-container\":\"ClaimClinicManagement_first-container__2skqe\",\"groups\":\"ClaimClinicManagement_groups__3FbWr\",\"input\":\"ClaimClinicManagement_input__2Keb1\",\"child-container\":\"ClaimClinicManagement_child-container__n7uq4\",\"tables-container\":\"ClaimClinicManagement_tables-container__3NmAQ\",\"left-side\":\"ClaimClinicManagement_left-side__D4Ima\",\"wrapper\":\"ClaimClinicManagement_wrapper__3yNmB\",\"table\":\"ClaimClinicManagement_table__1OvWr\",\"table-header\":\"ClaimClinicManagement_table-header__2avVb\",\"table-description\":\"ClaimClinicManagement_table-description__2hA0s\",\"add-link\":\"ClaimClinicManagement_add-link__2GJYD\",\"row\":\"ClaimClinicManagement_row__1YHad\",\"align\":\"ClaimClinicManagement_align__3VKHt\",\"center\":\"ClaimClinicManagement_center__2ugQN\",\"right\":\"ClaimClinicManagement_right__2YJdE\",\"table-total\":\"ClaimClinicManagement_table-total__12gwG\",\"caption\":\"ClaimClinicManagement_caption__1ufF7\",\"amount\":\"ClaimClinicManagement_amount__38Qbv\",\"right-side\":\"ClaimClinicManagement_right-side__33DHV\",\"sticky\":\"ClaimClinicManagement_sticky__jEfao\",\"grand-total\":\"ClaimClinicManagement_grand-total__1xe5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfo_root__A48Ge\",\"header-container\":\"ReimbursementInfo_header-container__7Rc0y\",\"header\":\"ReimbursementInfo_header__2Fspq\",\"title\":\"ReimbursementInfo_title__1JbPt\",\"content\":\"ReimbursementInfo_content__1O8ol\",\"basic-info\":\"ReimbursementInfo_basic-info__1oPax\",\"label\":\"ReimbursementInfo_label__LDCyS\",\"collapsible-cell\":\"ReimbursementInfo_collapsible-cell__1PlUR\",\"container\":\"ReimbursementInfo_container__M1ZXd\",\"show-cell\":\"ReimbursementInfo_show-cell__1q80V\",\"cell\":\"ReimbursementInfo_cell__2ZIqz\",\"groups\":\"ReimbursementInfo_groups__na5mh\",\"input\":\"ReimbursementInfo_input__2qSpD\",\"reasons-container\":\"ReimbursementInfo_reasons-container__3vqkq\",\"delete\":\"ReimbursementInfo_delete__2aKoN\",\"reasons\":\"ReimbursementInfo_reasons__1twVx\",\"add-link\":\"ReimbursementInfo_add-link__3leZg\",\"empty-reasons\":\"ReimbursementInfo_empty-reasons__2hpfm\",\"footer\":\"ReimbursementInfo_footer__3FzeE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__2-8KB\",\"first-container\":\"ClaimReimbursement_first-container__18fTD\",\"groups\":\"ClaimReimbursement_groups__38k8I\",\"input\":\"ClaimReimbursement_input__3la5w\",\"child-container\":\"ClaimReimbursement_child-container__1kWRr\",\"tables-container\":\"ClaimReimbursement_tables-container__PR9B_\",\"left-side\":\"ClaimReimbursement_left-side__1m7FN\",\"wrapper\":\"ClaimReimbursement_wrapper__246w6\",\"table\":\"ClaimReimbursement_table__2S73N\",\"table-header\":\"ClaimReimbursement_table-header__1zQ8j\",\"table-description\":\"ClaimReimbursement_table-description__2tmiu\",\"add-link\":\"ClaimReimbursement_add-link__2JH4c\",\"row\":\"ClaimReimbursement_row__1OSjx\",\"align\":\"ClaimReimbursement_align__3OEDi\",\"center\":\"ClaimReimbursement_center__13TIn\",\"right\":\"ClaimReimbursement_right__3fu2G\",\"table-total\":\"ClaimReimbursement_table-total__3dvpa\",\"caption\":\"ClaimReimbursement_caption__2HDFA\",\"amount\":\"ClaimReimbursement_amount__3l1fZ\",\"right-side\":\"ClaimReimbursement_right-side__14Gxn\",\"sticky\":\"ClaimReimbursement_sticky__26GxQ\",\"grand-total\":\"ClaimReimbursement_grand-total__7vHa3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2d4M4\",\"tiles\":\"Dashboard_tiles__16_MG\",\"row\":\"Dashboard_row__2TDbS\",\"task-tray\":\"Dashboard_task-tray__1YmzT\",\"task-tray-monitor\":\"Dashboard_task-tray-monitor__1FeES\",\"ticket-list\":\"Dashboard_ticket-list__1Q0kW\",\"wrapper\":\"Dashboard_wrapper__1T3tt\",\"float\":\"Dashboard_float__1Xub9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2xUj2\",\"buttons\":\"ButtonFooter_buttons__3v_r7\",\"counter\":\"ButtonFooter_counter__1pqmU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__1B1lo\",\"header-container\":\"AssignDialog_header-container__2q19w\",\"header\":\"AssignDialog_header__4mmtH\",\"title\":\"AssignDialog_title__1t8cw\",\"content\":\"AssignDialog_content__Y7uRW\",\"input\":\"AssignDialog_input__2npYe\",\"footer\":\"AssignDialog_footer__3QHDI\",\"assign\":\"AssignDialog_assign__1aP36\",\"to\":\"AssignDialog_to__2eLiV\",\"action\":\"AssignDialog_action__2H051\",\"message-content\":\"AssignDialog_message-content__1NrdY\",\"message\":\"AssignDialog_message__27R73\",\"message-child\":\"AssignDialog_message-child__2eYo7\",\"alert-title\":\"AssignDialog_alert-title__ZMO3M\",\"footer-action\":\"AssignDialog_footer-action__27lzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBatchesPage_root__1b7-1\",\"table-container\":\"CreatedBatchesPage_table-container__1gFsH\",\"search-container\":\"CreatedBatchesPage_search-container__2wgNb\",\"reassign\":\"CreatedBatchesPage_reassign__14Y6T\",\"search\":\"CreatedBatchesPage_search__2mhtd\",\"action-container\":\"CreatedBatchesPage_action-container__Pa7R0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__1PwO3\",\"groups\":\"BatchDetails_groups__3A2VN\",\"input\":\"BatchDetails_input__3hwk1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__2YvdB\",\"title\":\"ClaimListHeader_title__2tIMg\",\"wrapper\":\"ClaimListHeader_wrapper__1gVaD\",\"button\":\"ClaimListHeader_button__2wf-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__27Pnu\",\"default-override\":\"ClaimList_default-override__2T421\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__3iS6_\",\"claims-container\":\"BatchPage_claims-container__FFC4C\",\"footer\":\"BatchPage_footer__6IBOB\",\"actions\":\"BatchPage_actions__BbrLm\",\"delete-button\":\"BatchPage_delete-button__1-tPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__311ud\",\"header-container\":\"ViewList_header-container__1eor8\",\"header\":\"ViewList_header__15HTz\",\"title\":\"ViewList_title__d_bSk\",\"content\":\"ViewList_content__2LOiZ\",\"search\":\"ViewList_search__2hJ0S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2It_d\",\"tiles\":\"Dashboard_tiles__2DX72\",\"task-tray\":\"Dashboard_task-tray__2MeJZ\",\"list-item\":\"Dashboard_list-item__1ixUY\",\"details\":\"Dashboard_details__39R6g\",\"detail-item\":\"Dashboard_detail-item__1qIsO\",\"label\":\"Dashboard_label__2wpxb\",\"content\":\"Dashboard_content__2vmkp\",\"action\":\"Dashboard_action__10xYG\",\"ticket-list\":\"Dashboard_ticket-list__1iTbF\",\"wrapper\":\"Dashboard_wrapper__3z4j1\",\"float\":\"Dashboard_float__1Hiew\",\"completed_task\":\"Dashboard_completed_task__RN1as\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1WSgv\",\"tiles\":\"Dashboard_tiles__URUGc\",\"task-tray\":\"Dashboard_task-tray__3PFmp\",\"list-item\":\"Dashboard_list-item__1dXth\",\"details\":\"Dashboard_details__1uD2x\",\"detail-item\":\"Dashboard_detail-item__2Xq4I\",\"label\":\"Dashboard_label__2Y7DU\",\"content\":\"Dashboard_content__12k-O\",\"action\":\"Dashboard_action__3-klY\",\"ticket-list\":\"Dashboard_ticket-list__3SSgK\",\"wrapper\":\"Dashboard_wrapper__3sukD\",\"float\":\"Dashboard_float__3_xKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestPage_root__2gGvt\",\"text-fields\":\"PaymentRequestPage_text-fields__3gFF0\",\"sub-container\":\"PaymentRequestPage_sub-container__a_dOn\",\"input-container\":\"PaymentRequestPage_input-container__2GjiG\",\"ellipsis-container\":\"PaymentRequestPage_ellipsis-container__1Efns\",\"table-container\":\"PaymentRequestPage_table-container__2yAdZ\",\"headers\":\"PaymentRequestPage_headers__1XNVW\",\"header\":\"PaymentRequestPage_header__3MXgw\",\"submit-header\":\"PaymentRequestPage_submit-header__19DA-\",\"dialog-container\":\"PaymentRequestPage_dialog-container__1a70q\",\"buttonWrapper\":\"PaymentRequestPage_buttonWrapper__1W80E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestPage_root__3CH1o\",\"text-fields\":\"SubmittedPaymentRequestPage_text-fields__1EAYV\",\"sub-container\":\"SubmittedPaymentRequestPage_sub-container__39S8A\",\"input-container\":\"SubmittedPaymentRequestPage_input-container__1e-Ty\",\"ellipsis-container\":\"SubmittedPaymentRequestPage_ellipsis-container__1UrAU\",\"table-container\":\"SubmittedPaymentRequestPage_table-container__3oIBa\",\"headers\":\"SubmittedPaymentRequestPage_headers__IUsth\",\"header\":\"SubmittedPaymentRequestPage_header__1W3nu\",\"dialog-container\":\"SubmittedPaymentRequestPage_dialog-container__2sZln\",\"buttonWrapper\":\"SubmittedPaymentRequestPage_buttonWrapper__3s1pG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__3PeJc\",\"tiles\":\"Dashboard_tiles__OVU2I\",\"task-tray\":\"Dashboard_task-tray__1krbX\",\"list-item\":\"Dashboard_list-item__3vY_C\",\"details\":\"Dashboard_details__3NoCG\",\"detail-item\":\"Dashboard_detail-item__JLMfd\",\"label\":\"Dashboard_label__3AA6w\",\"content\":\"Dashboard_content__16txH\",\"action\":\"Dashboard_action__Apy9_\",\"ticket-list\":\"Dashboard_ticket-list__2Kmdx\",\"wrapper\":\"Dashboard_wrapper__1-oZ4\",\"float\":\"Dashboard_float__3w1H_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestList_root__dXrnn\",\"header-container\":\"SubmittedPaymentRequestList_header-container__33jMu\",\"header\":\"SubmittedPaymentRequestList_header__1UkBI\",\"title\":\"SubmittedPaymentRequestList_title__31KGj\",\"search\":\"SubmittedPaymentRequestList_search__1SQIf\",\"table\":\"SubmittedPaymentRequestList_table__1sht8\",\"buttonWrapper\":\"SubmittedPaymentRequestList_buttonWrapper__2ZvKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__2ue5H\",\"header-container\":\"ViewList_header-container__q77ZU\",\"header\":\"ViewList_header__2lKSa\",\"title\":\"ViewList_title__AuuEZ\",\"content\":\"ViewList_content__3GRUr\",\"search\":\"ViewList_search__cofXm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28Vtl\",\"tiles\":\"Dashboard_tiles__1wpMD\",\"task-tray\":\"Dashboard_task-tray__1IvyN\",\"list-item\":\"Dashboard_list-item__12jAd\",\"details\":\"Dashboard_details__2H0bw\",\"detail-item\":\"Dashboard_detail-item__3Fwan\",\"label\":\"Dashboard_label__3wCdh\",\"content\":\"Dashboard_content__39XQQ\",\"action\":\"Dashboard_action__1O7UY\",\"ticket-list\":\"Dashboard_ticket-list__kcd4U\",\"wrapper\":\"Dashboard_wrapper__2FBsH\",\"float\":\"Dashboard_float__WBsaU\",\"completed_task\":\"Dashboard_completed_task__y2ijY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2pt7a\",\"tiles\":\"Dashboard_tiles__2zhqD\",\"task-tray\":\"Dashboard_task-tray__2N8YZ\",\"list-item\":\"Dashboard_list-item__JD2zf\",\"details\":\"Dashboard_details__1uEl7\",\"detail-item\":\"Dashboard_detail-item__2ijgN\",\"label\":\"Dashboard_label__34lgV\",\"content\":\"Dashboard_content__3COhO\",\"action\":\"Dashboard_action__36U9f\",\"ticket-list\":\"Dashboard_ticket-list__2OwTr\",\"completed_task\":\"Dashboard_completed_task__3VhqT\",\"wrapper\":\"Dashboard_wrapper__Q93wn\",\"float\":\"Dashboard_float__2hGqR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UtilizationReport_root__2q08r\",\"header\":\"UtilizationReport_header__UaA2l\",\"content\":\"UtilizationReport_content__2ANkB\",\"filter\":\"UtilizationReport_filter__2oHyd\",\"input\":\"UtilizationReport_input__uAqv6\",\"submit\":\"UtilizationReport_submit__3Xxzg\",\"radio-group\":\"UtilizationReport_radio-group__2GQwc\",\"radio-container\":\"UtilizationReport_radio-container__gsXJO\",\"body\":\"UtilizationReport_body__3hQcQ\",\"table\":\"UtilizationReport_table__2vPmC\",\"graph-reports\":\"UtilizationReport_graph-reports__1tQvo\",\"graph-legend\":\"UtilizationReport_graph-legend__N4sdg\",\"legend-wrapper\":\"UtilizationReport_legend-wrapper__tyRHZ\",\"legend-group\":\"UtilizationReport_legend-group__2B7no\",\"legend\":\"UtilizationReport_legend__DGO3_\",\"header-report\":\"UtilizationReport_header-report__3kOEH\",\"report-primary\":\"UtilizationReport_report-primary__3OJS6\",\"title\":\"UtilizationReport_title__2XpUx\",\"report-details\":\"UtilizationReport_report-details__2Gwsz\",\"graph\":\"UtilizationReport_graph__4pr7a\",\"item\":\"UtilizationReport_item__IARh3\",\"header-data\":\"UtilizationReport_header-data__1AGxt\",\"mark\":\"UtilizationReport_mark__1kk59\",\"text\":\"UtilizationReport_text__1Df4L\",\"graph-plot\":\"UtilizationReport_graph-plot__3r_fS\",\"plot-items\":\"UtilizationReport_plot-items__Zxv2v\",\"graph-group\":\"UtilizationReport_graph-group__3MVIL\",\"graph-container\":\"UtilizationReport_graph-container__1eAun\",\"bar-chart-wrapper\":\"UtilizationReport_bar-chart-wrapper__3x3sF\",\"bar-chart\":\"UtilizationReport_bar-chart__ujAbZ\",\"tooltip\":\"UtilizationReport_tooltip__dfeeV\",\"graph-category\":\"UtilizationReport_graph-category__2lqgG\",\"table-row\":\"UtilizationReport_table-row__1DH5e\",\"memberinfo\":\"UtilizationReport_memberinfo__TuCw6\",\"memberInfoLabel\":\"UtilizationReport_memberInfoLabel__2UcnQ\",\"memberInfoValue\":\"UtilizationReport_memberInfoValue__kPN-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PRCheckReport_root__1_Jek\",\"header\":\"PRCheckReport_header__CwPU0\",\"content\":\"PRCheckReport_content__1p50d\",\"filter\":\"PRCheckReport_filter__3YKV6\",\"input\":\"PRCheckReport_input__1ZGg4\",\"submit\":\"PRCheckReport_submit__32n3T\",\"body\":\"PRCheckReport_body__25wTW\",\"table\":\"PRCheckReport_table__2MB3o\",\"table-row\":\"PRCheckReport_table-row__3-j4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TreasuryTransmittalReport_root__1w4kc\",\"header\":\"TreasuryTransmittalReport_header__IrqK3\",\"content\":\"TreasuryTransmittalReport_content__3UWdu\",\"filter\":\"TreasuryTransmittalReport_filter__tF8dp\",\"input\":\"TreasuryTransmittalReport_input__3DQ6Z\",\"submit\":\"TreasuryTransmittalReport_submit__3pRqC\",\"body\":\"TreasuryTransmittalReport_body__FQUBf\",\"table\":\"TreasuryTransmittalReport_table__2rtjS\",\"table-row\":\"TreasuryTransmittalReport_table-row__1OR-N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2X5k5\",\"buttons\":\"ButtonFooter_buttons__2aw08\",\"counter\":\"ButtonFooter_counter__20NW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__RJlxK\",\"header-container\":\"AssignDialog_header-container__1o5Gi\",\"header\":\"AssignDialog_header__3ISr0\",\"title\":\"AssignDialog_title__2y4cT\",\"content\":\"AssignDialog_content__24eRW\",\"input\":\"AssignDialog_input__NW5vD\",\"footer\":\"AssignDialog_footer__2rmZz\",\"assign\":\"AssignDialog_assign__2WmDm\",\"to\":\"AssignDialog_to__1Lcwa\",\"action\":\"AssignDialog_action__2z0LV\",\"message-content\":\"AssignDialog_message-content__WGOqe\",\"message\":\"AssignDialog_message__3BYCA\",\"message-child\":\"AssignDialog_message-child__2BQeL\",\"alert-title\":\"AssignDialog_alert-title__gx1Vh\",\"footer-action\":\"AssignDialog_footer-action__rMIKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsList_root__32NKA\",\"table-container\":\"ClaimsList_table-container__2xz0B\",\"search-container\":\"ClaimsList_search-container__1JKTH\",\"reassign\":\"ClaimsList_reassign__177eW\",\"search\":\"ClaimsList_search__2869S\",\"action-container\":\"ClaimsList_action-container__3VFV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1zt4e\",\"tiles\":\"Dashboard_tiles__N_XeU\",\"row\":\"Dashboard_row__3-lCS\",\"task-tray\":\"Dashboard_task-tray__L-btV\",\"list-item\":\"Dashboard_list-item__2Z2uy\",\"details\":\"Dashboard_details__-wyqw\",\"detail-item\":\"Dashboard_detail-item__jAHga\",\"label\":\"Dashboard_label__KNpiW\",\"content\":\"Dashboard_content__17Lfg\",\"action\":\"Dashboard_action__38kLX\",\"ticket-list\":\"Dashboard_ticket-list__3bes0\",\"wrapper\":\"Dashboard_wrapper__38JoV\",\"float\":\"Dashboard_float__1YyQM\",\"completed_task\":\"Dashboard_completed_task__1dK9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28tvA\",\"tiles\":\"Dashboard_tiles__1xRNf\",\"row\":\"Dashboard_row__1lZjx\",\"task-tray\":\"Dashboard_task-tray__m0Mne\",\"list-item\":\"Dashboard_list-item__1W9Rx\",\"details\":\"Dashboard_details__3v-9d\",\"detail-item\":\"Dashboard_detail-item__SBoHO\",\"label\":\"Dashboard_label__2lH5b\",\"content\":\"Dashboard_content__3NMtD\",\"action\":\"Dashboard_action__nDNUz\",\"ticket-list\":\"Dashboard_ticket-list__3Y9ji\",\"completed_task\":\"Dashboard_completed_task__2-BCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__vQHL2\",\"header-container\":\"AssignDialog_header-container__1qQN2\",\"header\":\"AssignDialog_header__3PltF\",\"title\":\"AssignDialog_title__e_cZ1\",\"content\":\"AssignDialog_content__3wFoW\",\"input\":\"AssignDialog_input__AeSdQ\",\"footer\":\"AssignDialog_footer__3dKcT\",\"assign\":\"AssignDialog_assign__X3IaA\",\"to\":\"AssignDialog_to__2FSjd\",\"action\":\"AssignDialog_action__HdROx\",\"message-content\":\"AssignDialog_message-content__3s8j-\",\"message\":\"AssignDialog_message__1o7jm\",\"message-child\":\"AssignDialog_message-child__l94pI\",\"alert-title\":\"AssignDialog_alert-title__3GyBp\",\"footer-action\":\"AssignDialog_footer-action__2CQoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetailsPage_root__1WnVw\",\"footer\":\"BatchDetailsPage_footer__2mXHQ\",\"actions\":\"BatchDetailsPage_actions__qSR-l\",\"delete-button\":\"BatchDetailsPage_delete-button__17y_B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MaintenancePage_root__18jNl\",\"button-parent\":\"MaintenancePage_button-parent__1YFg4\",\"active\":\"MaintenancePage_active__3Ltsc\",\"header\":\"MaintenancePage_header__3ou_p\",\"header-wrapper\":\"MaintenancePage_header-wrapper__14ljZ\",\"header-text\":\"MaintenancePage_header-text__LYsHh\",\"table\":\"MaintenancePage_table__2RLkb\",\"add-item-root\":\"MaintenancePage_add-item-root__iVNF-\",\"wrapper\":\"MaintenancePage_wrapper__3LPhK\",\"text-wrapper\":\"MaintenancePage_text-wrapper__27CjW\",\"radio-buttons\":\"MaintenancePage_radio-buttons__1E3wP\",\"button-wrapper\":\"MaintenancePage_button-wrapper__DTWi8\"};"],"sourceRoot":""}